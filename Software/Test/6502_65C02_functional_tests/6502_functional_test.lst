AS65 Assembler for R6502 [1.42].  Copyright 1994-2007, Frank A. Kingswood                                                Page    1
---------------------------------------------------- 6502_functional_test.a65 ----------------------------------------------------

6070 lines read, no errors in pass 1.
                        ;
                        ; 6 5 0 2   F U N C T I O N A L   T E S T
                        ;
                        ; Copyright (C) 2012-2014  Klaus Dormann
                        ;
                        ; This program is free software: you can redistribute it and/or modify
                        ; it under the terms of the GNU General Public License as published by
                        ; the Free Software Foundation, either version 3 of the License, or
                        ; (at your option) any later version.
                        ;
                        ; This program is distributed in the hope that it will be useful,
                        ; but WITHOUT ANY WARRANTY; without even the implied warranty of
                        ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        ; GNU General Public License for more details.
                        ;
                        ; You should have received a copy of the GNU General Public License
                        ; along with this program.  If not, see <http://www.gnu.org/licenses/>.
                        
                        
                        ; This program is designed to test all opcodes of a 6502 emulator using all
                        ; addressing modes with focus on propper setting of the processor status
                        ; register bits.
                        ; 
                        ; version 14-dec-2014
                        ; contact info at http://2m5.de or email K@2m5.de
                        ;
                        ; assembled with AS65 from http://www.kingswood-consulting.co.uk/assemblers/
                        ; command line switches: -l -m -s2 -w -h0
                        ;                         |  |  |   |  no page headers in listing
                        ;                         |  |  |   wide listing (133 char/col)
                        ;                         |  |  write intel hex file instead of binary
                        ;                         |  expand macros in listing
                        ;                         generate pass2 listing
                        ;
                        ; No IO - should be run from a monitor with access to registers.
                        ; To run load intel hex image with a load command, than alter PC to 400 hex
                        ; (code_segment) and enter a go command.
                        ; Loop on program counter determines error or successful completion of test.
                        ; Check listing for relevant traps (jump/branch *).
                        ; Please note that in early tests some instructions will have to be used before
                        ; they are actually tested!
                        ;
                        ; RESET, NMI or IRQ should not occur and will be trapped if vectors are enabled.
                        ; Tests documented behavior of the original NMOS 6502 only! No unofficial
                        ; opcodes. Additional opcodes of newer versions of the CPU (65C02, 65816) will
                        ; not be tested. Decimal ops will only be tested with valid BCD operands and
                        ; N V Z flags will be ignored.
                        ;
                        ; Debugging hints:
                        ;     Most of the code is written sequentially. if you hit a trap, check the
                        ;   immediately preceeding code for the instruction to be tested. Results are
                        ;   tested first, flags are checked second by pushing them onto the stack and
                        ;   pulling them to the accumulator after the result was checked. The "real"
                        ;   flags are no longer valid for the tested instruction at this time!
                        ;     If the tested instruction was indexed, the relevant index (X or Y) must
                        ;   also be checked. Opposed to the flags, X and Y registers are still valid.
                        ;
                        ; versions:
                        ;   28-jul-2012  1st version distributed for testing
                        ;   29-jul-2012  fixed references to location 0, now #0
                        ;                added license - GPLv3
                        ;   30-jul-2012  added configuration options
                        ;   01-aug-2012  added trap macro to allow user to change error handling
                        ;   01-dec-2012  fixed trap in branch field must be a branch
                        ;   02-mar-2013  fixed PLA flags not tested
                        ;   19-jul-2013  allowed ROM vectors to be loaded when load_data_direct = 0
                        ;                added test sequence check to detect if tests jump their fence
                        ;   23-jul-2013  added RAM integrity check option
                        ;   16-aug-2013  added error report to standard output option
                        ;   13-dec-2014  added binary/decimal opcode table switch test
                        ;   14-dec-2014  improved relative address test
                        
                        
                        ; C O N F I G U R A T I O N
                        
                        ;ROM_vectors writable (0=no, 1=yes)
                        ;if ROM vectors can not be used interrupts will not be trapped
                        ;as a consequence BRK can not be tested but will be emulated to test RTI
0000 =                  ROM_vectors = 0
                        
                        ;load_data_direct (0=move from code segment, 1=load directly)
                        ;loading directly is preferred but may not be supported by your platform
                        ;0 produces only consecutive object code, 1 is not suitable for a binary image
0000 =                  load_data_direct = 0
                        
                        ;I_flag behavior (0=force enabled, 1=force disabled, 2=prohibit change, 3=allow
                        ;change) 2 requires extra code and is not recommended. SEI & CLI can only be
                        ;tested if you allow changing the interrupt status (I_flag = 3)
0003 =                  I_flag = 3
                        
                        ;configure memory - try to stay away from memory used by the system
                        ;zero_page memory start address, $50 (80) consecutive Bytes required
                        ;                                add 2 if I_flag = 2
0010 =                  zero_page = $10
                        
                        ;data_segment memory start address, $5B (91) consecutive Bytes required
0200 =                  data_segment = $200  
                            if (data_segment & $ff) != 0
                                ERROR ERROR ERROR low byte of data_segment MUST be $00 !!
                            endif  
                        
                        ;code_segment memory start address, 13kB of consecutive space required
                        ;                                   add 2.5 kB if I_flag = 2
                        ;parts of the code are self modifying and must reside in RAM
1000 =                  code_segment = $1000  
                        
                        ;report errors through I/O channel (0=use standard self trap loops, 1=include
                        ;report.i65 as I/O channel, add 3.5 kB)
0001 =                  report = 1
                        
                        ;RAM integrity test option. Checks for undesired RAM writes.
                        ;set lowest non RAM or RAM mirror address page (-1=disable, 0=64k, $40=16k)
                        ;leave disabled if a monitor, OS or background interrupt is allowed to alter RAM
ffff =                  ram_top = -1
                        
                                noopt       ;do not take shortcuts
                        
                        ;macros for error & success traps to allow user modification
                        ;example:
                        ;trap    macro
                        ;        jsr my_error_handler
                        ;        endm
                        ;trap_eq macro
                        ;        bne skip\?
                        ;        trap           ;failed equal (zero)
                        ;skip\?
                        ;        endm
                        ;
                        ; my_error_handler should pop the calling address from the stack and report it.
                        ; putting larger portions of code (more than 3 bytes) inside the trap macro
                        ; may lead to branch range problems for some tests.
                            if report = 0
                        trap    macro
                                jmp *           ;failed anyway
                                endm
                        trap_eq macro
                                beq *           ;failed equal (zero)
                                endm
                        trap_ne macro
                                bne *           ;failed not equal (non zero)
                                endm
                        trap_cs macro
                                bcs *           ;failed carry set
                                endm
                        trap_cc macro
                                bcc *           ;failed carry clear
                                endm
                        trap_mi macro
                                bmi *           ;failed minus (bit 7 set)
                                endm
                        trap_pl macro
                                bpl *           ;failed plus (bit 7 clear)
                                endm
                        trap_vs macro
                                bvs *           ;failed overflow set
                                endm
                        trap_vc macro
                                bvc *           ;failed overflow clear
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                                jmp *           ;test passed, no errors
                                endm
                            endif
                            if report = 1
                        trap    macro
                                sta $ef02
                                ;jsr report_error
                                endm
                        trap_eq macro
                                bne skip\?
                                trap           ;failed equal (zero)
                        skip\?
                                endm
                        trap_ne macro
                                beq skip\?
                                trap            ;failed not equal (non zero)
                        skip\?
                                endm
                        trap_cs macro
                                bcc skip\?
                                trap            ;failed carry set
                        skip\?
                                endm
                        trap_cc macro
                                bcs skip\?
                                trap            ;failed carry clear
                        skip\?
                                endm
                        trap_mi macro
                                bpl skip\?
                                trap            ;failed minus (bit 7 set)
                        skip\?
                                endm
                        trap_pl macro
                                bmi skip\?
                                trap            ;failed plus (bit 7 clear)
                        skip\?
                                endm
                        trap_vs macro
                                bvc skip\?
                                trap            ;failed overflow set
                        skip\?
                                endm
                        trap_vc macro
                                bvs skip\?
                                trap            ;failed overflow clear
                        skip\?
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                                db $db
                                ;jsr report_success
                                endm
                            endif
                        
                        
0001 =                  carry   equ %00000001   ;flag bits in status
0002 =                  zero    equ %00000010
0004 =                  intdis  equ %00000100
0008 =                  decmode equ %00001000
0010 =                  break   equ %00010000
0020 =                  reserv  equ %00100000
0040 =                  overfl  equ %01000000
0080 =                  minus   equ %10000000
                        
0001 =                  fc      equ carry
0002 =                  fz      equ zero
0003 =                  fzc     equ carry+zero
0040 =                  fv      equ overfl
0042 =                  fvz     equ overfl+zero
0080 =                  fn      equ minus
0081 =                  fnc     equ minus+carry
0082 =                  fnz     equ minus+zero
0083 =                  fnzc    equ minus+zero+carry
00c0 =                  fnv     equ minus+overfl
                        
0030 =                  fao     equ break+reserv    ;bits always on after PHP, BRK
0034 =                  fai     equ fao+intdis      ;+ forced interrupt disable
00ff =                  m8      equ $ff             ;8 bit mask
00fb =                  m8i     equ $ff&~intdis     ;8 bit mask - interrupt disable
                        
                        ;macros to allow masking of status bits.
                        ;masking of interrupt enable/disable on load and compare
                        ;masking of always on bits after PHP or BRK (unused & break) on compare
                                if I_flag = 0
                        load_flag   macro
                                    lda #\1&m8i         ;force enable interrupts (mask I)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8i   ;I_flag is always enabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 1
                        load_flag   macro
                                    lda #\1|intdis      ;force disable interrupts
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fai)&m8    ;I_flag is always disabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1|fai)       ;invert expected flags + always on bits + I
                                    endm
                                endif
                                if I_flag = 2
                        load_flag   macro
                                    lda #\1
                                    ora flag_I_on       ;restore I-flag
                                    and flag_I_off
                                    endm
                        cmp_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    cmp #(\1|fao)&m8i   ;expected flags + always on bits, mask I
                                    endm
                        eor_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 3
                        load_flag   macro
                                    lda #\1             ;allow test to change I-flag (no mask)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8    ;expected flags + always on bits
                                    endm
                        eor_flag    macro
                                    eor #\1|fao         ;invert expected flags + always on bits
                                    endm
                                endif
                        
                        ;macros to set (register|memory|zeropage) & status
                        set_stat    macro       ;setting flags in the processor status register
                                    load_flag \1
                                    pha         ;use stack to load status
                                    plp
                                    endm
                        
                        set_a       macro       ;precharging accu & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda #\1     ;precharge accu
                                    plp
                                    endm
                        
                        set_x       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldx #\1     ;precharge index x
                                    plp
                                    endm
                        
                        set_y       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldy #\1     ;precharge index y
                                    plp
                                    endm
                        
                        set_ax      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;precharge accu
                                    plp
                                    endm
                        
                        set_ay      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,y    ;precharge accu
                                    plp
                                    endm
                        
                        set_z       macro       ;precharging indexed zp & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to zeropage
                                    sta zpt
                                    plp
                                    endm
                        
                        set_zx      macro       ;precharging zp,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed zeropage
                                    sta zpt,x
                                    plp
                                    endm
                        
                        set_abs     macro       ;precharging indexed memory & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to memory
                                    sta abst
                                    plp
                                    endm
                        
                        set_absx    macro       ;precharging abs,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed memory
                                    sta abst,x
                                    plp
                                    endm
                        
                        ;macros to test (register|memory|zeropage) & status & (mask)
                        tst_stat    macro       ;testing flags in the processor status register
                                    php         ;save status
                                    pla         ;use stack to retrieve status
                                    pha
                                    cmp_flag \1
                                    trap_ne
                                    plp         ;restore status
                                    endm
                                    
                        tst_a       macro       ;testing result in accu & flags
                                    php         ;save flags
                                    cmp #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_x       macro       ;testing result in x index & flags
                                    php         ;save flags
                                    cpx #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_y       macro       ;testing result in y index & flags
                                    php         ;save flags
                                    cpy #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_ax      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne     ;
                                    endm
                        
                        tst_ay      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,y    ;test result
                                    trap_ne     ;
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,y    ;test flags
                                    trap_ne
                                    endm
                                
                        tst_z       macro       ;indexed testing result in zp & flags
                                    php         ;save flags
                                    lda zpt
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_zx      macro       ;testing result in zp,x & flags
                                    php         ;save flags
                                    lda zpt,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_abs     macro       ;indexed testing result in memory & flags
                                    php         ;save flags
                                    lda abst
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_absx    macro       ;testing result in abs,x & flags
                                    php         ;save flags
                                    lda abst,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                                    
                        ; RAM integrity test
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                        ;   uses zpt word as indirect pointer, zpt+2 word as checksum
                                if ram_top > -1
                        check_ram   macro 
                                    cld
                                    lda #0
                                    sta zpt         ;set low byte of indirect pointer
                                    sta zpt+3       ;checksum high byte
                                    sta range_adr   ;reset self modifying code
                                    sta tandi1
                                    sta tandi2
                                    sta teori1
                                    sta teori2
                                    sta torai1
                                    sta torai2
                                    sta chkdadi  
                                    sta chkdsbi
                                    sta chkadi
                                    sta chksbi
                                    clc
                                    ldx #zp_bss-zero_page ;zeropage - write test area
                        ccs3\?      adc zero_page,x
                                    bcc ccs2\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs2\?      inx
                                    bne ccs3\?
                                    ldx #hi(data_segment) ;set high byte of indirect pointer
                                    stx zpt+1
                                    ldy #lo(data_bss) ;data after write test area
                        ccs5\?      adc (zpt),y
                                    bcc ccs4\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs4\?      iny
                                    bne ccs5\?
                                    inx             ;advance RAM high address
                                    stx zpt+1
                                    cpx #ram_top
                                    bne ccs5\?
                                    sta zpt+2       ;checksum low is
                                    cmp ram_chksm   ;checksum low expected
                                    trap_ne         ;checksum mismatch
                                    lda zpt+3       ;checksum high is
                                    cmp ram_chksm+1 ;checksum high expected
                                    trap_ne         ;checksum mismatch
                                    endm            
                                else
                        check_ram   macro
                                    ;RAM check disabled - RAM size not set
                                    endm
                                endif
                        
                        next_test   macro           ;make sure, tests don't jump the fence
                                    lda test_case   ;previous test
                                    cmp #test_num
                                    trap_ne         ;test is out of sequence
                        test_num = test_num + 1
                                    lda #test_num   ;*** next tests' number
                                    sta test_case
                                    sta $ef03
                                    ;check_ram       ;uncomment to find altered RAM after each test
                                    endm
                        
                            if load_data_direct = 1
                                data
                            else
                                bss                 ;uninitialized segment, copy of data at end of code!
                            endif
0010 =                          org zero_page
                        ;break test interrupt save
0010 =                  irq_a   ds  1               ;a register
0011 =                  irq_x   ds  1               ;x register
                            if I_flag = 2
                        ;masking for I bit in status
                        flag_I_on   ds  1           ;or mask to load flags   
                        flag_I_off  ds  1           ;and mask to load flags
                            endif
0012 =                  zpt                         ;5 bytes store/modify test area
                        ;add/subtract operand generation and result/flag prediction
0012 =                  adfc    ds  1               ;carry flag before op
0013 =                  ad1     ds  1               ;operand 1 - accumulator
0014 =                  ad2     ds  1               ;operand 2 - memory / immediate
0015 =                  adrl    ds  1               ;expected result bits 0-7
0016 =                  adrh    ds  1               ;expected result bit 8 (carry)
0017 =                  adrf    ds  1               ;expected flags NV0000ZC (only binary mode)
0018 =                  sb2     ds  1               ;operand 2 complemented for subtract
0019 =                  zp_bss
0019 =                  zp1     db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
001d =                  zp7f    db  $7f             ;test pattern for compare  
                        ;logical zeropage operands
001e =                  zpOR    db  0,$1f,$71,$80   ;test pattern for OR
0022 =                  zpAN    db  $0f,$ff,$7f,$80 ;test pattern for AND
0026 =                  zpEO    db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
002a =                  ind1    dw  abs1            ;indirect pointer to pattern in absolute memory
002c =                          dw  abs1+1
002e =                          dw  abs1+2
0030 =                          dw  abs1+3
0032 =                          dw  abs7f
0034 =                  inw1    dw  abs1-$f8        ;indirect pointer for wrap-test pattern
0036 =                  indt    dw  abst            ;indirect pointer to store area in absolute memory
0038 =                          dw  abst+1
003a =                          dw  abst+2
003c =                          dw  abst+3
003e =                  inwt    dw  abst-$f8        ;indirect pointer for wrap-test store
0040 =                  indAN   dw  absAN           ;indirect pointer to AND pattern in absolute memory
0042 =                          dw  absAN+1
0044 =                          dw  absAN+2
0046 =                          dw  absAN+3
0048 =                  indEO   dw  absEO           ;indirect pointer to EOR pattern in absolute memory
004a =                          dw  absEO+1
004c =                          dw  absEO+2
004e =                          dw  absEO+3
0050 =                  indOR   dw  absOR           ;indirect pointer to OR pattern in absolute memory
0052 =                          dw  absOR+1
0054 =                          dw  absOR+2
0056 =                          dw  absOR+3
                        ;add/subtract indirect pointers
0058 =                  adi2    dw  ada2            ;indirect pointer to operand 2 in absolute memory
005a =                  sbi2    dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
005c =                  adiy2   dw  ada2-$ff        ;with offset for indirect indexed
005e =                  sbiy2   dw  sba2-$ff
0060 =                  zp_bss_end
                           
0200 =                          org data_segment
0200 =                  test_case   ds  1           ;current test number
0201 =                  ram_chksm   ds  2           ;checksum for RAM integrity test
                        ;add/subtract operand copy - abs tests write area
0203 =                  abst                        ;5 bytes store/modify test area
0203 =                  ada2    ds  1               ;operand 2
0204 =                  sba2    ds  1               ;operand 2 complemented for subtract
0205 =                          ds  3               ;fill remaining bytes
0208 =                  data_bss
0208 =                  abs1    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
020c =                  abs7f   db  $7f             ;test pattern for compare
                        ;loads
020d =                  fLDx    db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
0211 =                  rASL                        ;expected result ASL & ROL -carry  
0211 =                  rROL    db  $86,$04,$82,0   ; "
0215 =                  rROLc   db  $87,$05,$83,1   ;expected result ROL +carry
0219 =                  rLSR                        ;expected result LSR & ROR -carry
0219 =                  rROR    db  $61,$41,$20,0   ; "
021d =                  rRORc   db  $e1,$c1,$a0,$80 ;expected result ROR +carry
0221 =                  fASL                        ;expected flags for shifts
0221 =                  fROL    db  fnc,fc,fn,fz    ;no carry in
0225 =                  fROLc   db  fnc,fc,fn,0     ;carry in
0229 =                  fLSR
0229 =                  fROR    db  fc,0,fc,fz      ;no carry in
022d =                  fRORc   db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
0231 =                  rINC    db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
0236 =                  fINC    db  0,fn,fn,fz,0    ;expected flags for INC/DEC
                        ;logical memory operand
023b =                  absOR   db  0,$1f,$71,$80   ;test pattern for OR
023f =                  absAN   db  $0f,$ff,$7f,$80 ;test pattern for AND
0243 =                  absEO   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
0247 =                  absORa  db  0,$f1,$1f,0     ;test pattern for OR
024b =                  absANa  db  $f0,$ff,$ff,$ff ;test pattern for AND
024f =                  absEOa  db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
0253 =                  absrlo  db  0,$ff,$7f,$80
0257 =                  absflo  db  fz,fn,0,fn
025b =                  data_bss_end
                        
                        
                                code
1000 =                          org code_segment
1000 : d8               start   cld
1001 : a2ff                     ldx #$ff
1003 : 9a                       txs
1004 : a900                     lda #0          ;*** test 0 = initialize
1006 : 8d0002                   sta test_case
0000 =                  test_num = 0
                        
                        ;stop interrupts before initializing BSS
                            if I_flag = 1
                                sei
                            endif
                            
                        ;initialize I/O for report channel
                            if report = 1
1009 : 201650                   jsr report_init
                            endif
                            
                        ;initialize BSS segment
                            if load_data_direct != 1
100c : a246                     ldx #zp_end-zp_init-1
100e : bd5f51           ld_zp   lda zp_init,x
1011 : 9519                     sta zp_bss,x
1013 : ca                       dex
1014 : 10f8                     bpl ld_zp
1016 : a252                     ldx #data_end-data_init-1
1018 : bda651           ld_data lda data_init,x
101b : 9d0802                   sta data_bss,x
101e : ca                       dex
101f : 10f7                     bpl ld_data
                              if ROM_vectors = 1
                                ldx #5
                        ld_vect lda vec_init,x
                                sta vec_bss,x
                                dex
                                bpl ld_vect
                              endif
                            endif
                        
                        ;retain status of interrupt flag
                            if I_flag = 2
                                php
                                pla
                                and #4          ;isolate flag
                                sta flag_I_on   ;or mask
                                eor #lo(~4)     ;reverse
                                sta flag_I_off  ;and mask
                            endif
                                
                        ;generate checksum for RAM integrity test
                            if ram_top > -1
                                lda #0 
                                sta zpt         ;set low byte of indirect pointer
                                sta ram_chksm+1 ;checksum high byte
                                sta range_adr   ;reset self modifying code
                                sta tandi1
                                sta tandi2
                                sta teori1
                                sta teori2
                                sta torai1
                                sta torai2
                                sta chkdadi  
                                sta chkdsbi
                                sta chkadi
                                sta chksbi
                                clc
                                ldx #zp_bss-zero_page ;zeropage - write test area
                        gcs3    adc zero_page,x
                                bcc gcs2
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs2    inx
                                bne gcs3
                                ldx #hi(data_segment) ;set high byte of indirect pointer
                                stx zpt+1
                                ldy #lo(data_bss) ;data after write test area
                        gcs5    adc (zpt),y
                                bcc gcs4
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs4    iny
                                bne gcs5
                                inx             ;advance RAM high address
                                stx zpt+1
                                cpx #ram_top
                                bne gcs5
                                sta ram_chksm   ;checksum complete
                            endif
                                next_test            
1021 : ad0002          >            lda test_case   ;previous test
1024 : c900            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1026 : f003            >        beq skip0002
                       >        trap            ;failed not equal (non zero)
1028 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
102b :                 >skip0002
                       >
0001 =                 >test_num = test_num + 1
102b : a901            >            lda #test_num   ;*** next tests' number
102d : 8d0002          >            sta test_case
1030 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ;testing relative addressing with BEQ
1033 : a0fe                     ldy #$fe        ;testing maximum range, not -1/-2 (invalid/self adr)
1035 :                  range_loop
1035 : 88                       dey             ;next relative address
1036 : 98                       tya
1037 : aa                       tax             ;precharge count to end of loop
1038 : 1008                     bpl range_fw    ;calculate relative address
103a : 18                       clc             ;avoid branch self or to relative address of branch
103b : 6902                     adc #2
103d : ea                       nop             ;offset landing zone - tolerate +/-5 offset to branch
103e : ea                       nop
103f : ea                       nop
1040 : ea                       nop
1041 : ea                       nop
1042 :                  range_fw
1042 : ea                       nop
1043 : ea                       nop
1044 : ea                       nop
1045 : ea                       nop
1046 : ea                       nop
1047 : 497f                     eor #$7f        ;complement except sign
1049 : 8dd510                   sta range_adr   ;load into test target
104c : a900                     lda #0          ;should set zero flag in status register
104e : 4cd410                   jmp range_op
                                
1051 : ca                       dex             ; offset landing zone - backward branch too far
1052 : ca                       dex
1053 : ca                       dex
1054 : ca                       dex
1055 : ca                       dex
                                ;relative address target field with branch under test in the middle                       
1056 : ca                       dex             ;-128 - max backward
1057 : ca                       dex
1058 : ca                       dex
1059 : ca                       dex
105a : ca                       dex
105b : ca                       dex
105c : ca                       dex
105d : ca                       dex
105e : ca                       dex             ;-120
105f : ca                       dex
1060 : ca                       dex
1061 : ca                       dex
1062 : ca                       dex
1063 : ca                       dex
1064 : ca                       dex
1065 : ca                       dex
1066 : ca                       dex
1067 : ca                       dex
1068 : ca                       dex             ;-110
1069 : ca                       dex
106a : ca                       dex
106b : ca                       dex
106c : ca                       dex
106d : ca                       dex
106e : ca                       dex
106f : ca                       dex
1070 : ca                       dex
1071 : ca                       dex
1072 : ca                       dex             ;-100
1073 : ca                       dex
1074 : ca                       dex
1075 : ca                       dex
1076 : ca                       dex
1077 : ca                       dex
1078 : ca                       dex
1079 : ca                       dex
107a : ca                       dex
107b : ca                       dex
107c : ca                       dex             ;-90
107d : ca                       dex
107e : ca                       dex
107f : ca                       dex
1080 : ca                       dex
1081 : ca                       dex
1082 : ca                       dex
1083 : ca                       dex
1084 : ca                       dex
1085 : ca                       dex
1086 : ca                       dex             ;-80
1087 : ca                       dex
1088 : ca                       dex
1089 : ca                       dex
108a : ca                       dex
108b : ca                       dex
108c : ca                       dex
108d : ca                       dex
108e : ca                       dex
108f : ca                       dex
1090 : ca                       dex             ;-70
1091 : ca                       dex
1092 : ca                       dex
1093 : ca                       dex
1094 : ca                       dex
1095 : ca                       dex
1096 : ca                       dex
1097 : ca                       dex
1098 : ca                       dex
1099 : ca                       dex
109a : ca                       dex             ;-60
109b : ca                       dex
109c : ca                       dex
109d : ca                       dex
109e : ca                       dex
109f : ca                       dex
10a0 : ca                       dex
10a1 : ca                       dex
10a2 : ca                       dex
10a3 : ca                       dex
10a4 : ca                       dex             ;-50
10a5 : ca                       dex
10a6 : ca                       dex
10a7 : ca                       dex
10a8 : ca                       dex
10a9 : ca                       dex
10aa : ca                       dex
10ab : ca                       dex
10ac : ca                       dex
10ad : ca                       dex
10ae : ca                       dex             ;-40
10af : ca                       dex
10b0 : ca                       dex
10b1 : ca                       dex
10b2 : ca                       dex
10b3 : ca                       dex
10b4 : ca                       dex
10b5 : ca                       dex
10b6 : ca                       dex
10b7 : ca                       dex
10b8 : ca                       dex             ;-30
10b9 : ca                       dex
10ba : ca                       dex
10bb : ca                       dex
10bc : ca                       dex
10bd : ca                       dex
10be : ca                       dex
10bf : ca                       dex
10c0 : ca                       dex
10c1 : ca                       dex
10c2 : ca                       dex             ;-20
10c3 : ca                       dex
10c4 : ca                       dex
10c5 : ca                       dex
10c6 : ca                       dex
10c7 : ca                       dex
10c8 : ca                       dex
10c9 : ca                       dex
10ca : ca                       dex
10cb : ca                       dex
10cc : ca                       dex             ;-10
10cd : ca                       dex
10ce : ca                       dex
10cf : ca                       dex
10d0 : ca                       dex
10d1 : ca                       dex
10d2 : ca                       dex
10d3 : ca                       dex             ;-3
10d4 :                  range_op                ;test target with zero flag=0, z=1 if previous dex
10d5 =                  range_adr   = *+1       ;modifiable relative address
10d4 : f03e                     beq *+64        ;+64 if called without modification
10d6 : ca                       dex             ;+0
10d7 : ca                       dex
10d8 : ca                       dex
10d9 : ca                       dex
10da : ca                       dex
10db : ca                       dex
10dc : ca                       dex
10dd : ca                       dex
10de : ca                       dex
10df : ca                       dex
10e0 : ca                       dex             ;+10
10e1 : ca                       dex
10e2 : ca                       dex
10e3 : ca                       dex
10e4 : ca                       dex
10e5 : ca                       dex
10e6 : ca                       dex
10e7 : ca                       dex
10e8 : ca                       dex
10e9 : ca                       dex
10ea : ca                       dex             ;+20
10eb : ca                       dex
10ec : ca                       dex
10ed : ca                       dex
10ee : ca                       dex
10ef : ca                       dex
10f0 : ca                       dex
10f1 : ca                       dex
10f2 : ca                       dex
10f3 : ca                       dex
10f4 : ca                       dex             ;+30
10f5 : ca                       dex
10f6 : ca                       dex
10f7 : ca                       dex
10f8 : ca                       dex
10f9 : ca                       dex
10fa : ca                       dex
10fb : ca                       dex
10fc : ca                       dex
10fd : ca                       dex
10fe : ca                       dex             ;+40
10ff : ca                       dex
1100 : ca                       dex
1101 : ca                       dex
1102 : ca                       dex
1103 : ca                       dex
1104 : ca                       dex
1105 : ca                       dex
1106 : ca                       dex
1107 : ca                       dex
1108 : ca                       dex             ;+50
1109 : ca                       dex
110a : ca                       dex
110b : ca                       dex
110c : ca                       dex
110d : ca                       dex
110e : ca                       dex
110f : ca                       dex
1110 : ca                       dex
1111 : ca                       dex
1112 : ca                       dex             ;+60
1113 : ca                       dex
1114 : ca                       dex
1115 : ca                       dex
1116 : ca                       dex
1117 : ca                       dex
1118 : ca                       dex
1119 : ca                       dex
111a : ca                       dex
111b : ca                       dex
111c : ca                       dex             ;+70
111d : ca                       dex
111e : ca                       dex
111f : ca                       dex
1120 : ca                       dex
1121 : ca                       dex
1122 : ca                       dex
1123 : ca                       dex
1124 : ca                       dex
1125 : ca                       dex
1126 : ca                       dex             ;+80
1127 : ca                       dex
1128 : ca                       dex
1129 : ca                       dex
112a : ca                       dex
112b : ca                       dex
112c : ca                       dex
112d : ca                       dex
112e : ca                       dex
112f : ca                       dex
1130 : ca                       dex             ;+90
1131 : ca                       dex
1132 : ca                       dex
1133 : ca                       dex
1134 : ca                       dex
1135 : ca                       dex
1136 : ca                       dex
1137 : ca                       dex
1138 : ca                       dex
1139 : ca                       dex
113a : ca                       dex             ;+100
113b : ca                       dex
113c : ca                       dex
113d : ca                       dex
113e : ca                       dex
113f : ca                       dex
1140 : ca                       dex
1141 : ca                       dex
1142 : ca                       dex
1143 : ca                       dex
1144 : ca                       dex             ;+110
1145 : ca                       dex
1146 : ca                       dex
1147 : ca                       dex
1148 : ca                       dex
1149 : ca                       dex
114a : ca                       dex
114b : ca                       dex
114c : ca                       dex
114d : ca                       dex
114e : ca                       dex             ;+120
114f : ca                       dex
1150 : ca                       dex
1151 : ca                       dex
1152 : ca                       dex
1153 : ca                       dex
1154 : ca                       dex
1155 : ea                       nop             ;offset landing zone - forward branch too far
1156 : ea                       nop
1157 : ea                       nop
1158 : ea                       nop
1159 : ea                       nop
115a : f008                     beq range_ok    ;+127 - max forward
                                trap            ; bad range
115c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
115f : ea                       nop             ;offset landing zone - tolerate +/-5 offset to branch
1160 : ea                       nop
1161 : ea                       nop
1162 : ea                       nop
1163 : ea                       nop
1164 :                  range_ok
1164 : ea                       nop
1165 : ea                       nop
1166 : ea                       nop
1167 : ea                       nop
1168 : ea                       nop
1169 : c000                     cpy #0
116b : f003                     beq range_end   
116d : 4c3510                   jmp range_loop
1170 :                  range_end               ;range test successful
                                next_test
1170 : ad0002          >            lda test_case   ;previous test
1173 : c901            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1175 : f003            >        beq skip0006
                       >        trap            ;failed not equal (non zero)
1177 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
117a :                 >skip0006
                       >
0002 =                 >test_num = test_num + 1
117a : a902            >            lda #test_num   ;*** next tests' number
117c : 8d0002          >            sta test_case
117f : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ;partial test BNE & CMP, CPX, CPY immediate
1182 : c001                     cpy #1          ;testing BNE true
1184 : d003                     bne test_bne
                                trap 
1186 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1189 :                  test_bne
1189 : a900                     lda #0 
118b : c900                     cmp #0          ;test compare immediate 
                                trap_ne
118d : f003            >        beq skip0009
                       >        trap            ;failed not equal (non zero)
118f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1192 :                 >skip0009
                        
                                trap_cc
1192 : b003            >        bcs skip0011
                       >        trap            ;failed carry clear
1194 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1197 :                 >skip0011
                        
                                trap_mi
1197 : 1003            >        bpl skip0013
                       >        trap            ;failed minus (bit 7 set)
1199 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
119c :                 >skip0013
                        
119c : c901                     cmp #1
                                trap_eq 
119e : d003            >        bne skip0015
                       >        trap           ;failed equal (zero)
11a0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11a3 :                 >skip0015
                        
                                trap_cs
11a3 : 9003            >        bcc skip0017
                       >        trap            ;failed carry set
11a5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11a8 :                 >skip0017
                        
                                trap_pl
11a8 : 3003            >        bmi skip0019
                       >        trap            ;failed plus (bit 7 clear)
11aa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11ad :                 >skip0019
                        
11ad : aa                       tax 
11ae : e000                     cpx #0          ;test compare x immediate
                                trap_ne
11b0 : f003            >        beq skip0021
                       >        trap            ;failed not equal (non zero)
11b2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11b5 :                 >skip0021
                        
                                trap_cc
11b5 : b003            >        bcs skip0023
                       >        trap            ;failed carry clear
11b7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11ba :                 >skip0023
                        
                                trap_mi
11ba : 1003            >        bpl skip0025
                       >        trap            ;failed minus (bit 7 set)
11bc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11bf :                 >skip0025
                        
11bf : e001                     cpx #1
                                trap_eq 
11c1 : d003            >        bne skip0027
                       >        trap           ;failed equal (zero)
11c3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11c6 :                 >skip0027
                        
                                trap_cs
11c6 : 9003            >        bcc skip0029
                       >        trap            ;failed carry set
11c8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11cb :                 >skip0029
                        
                                trap_pl
11cb : 3003            >        bmi skip0031
                       >        trap            ;failed plus (bit 7 clear)
11cd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11d0 :                 >skip0031
                        
11d0 : a8                       tay 
11d1 : c000                     cpy #0          ;test compare y immediate
                                trap_ne
11d3 : f003            >        beq skip0033
                       >        trap            ;failed not equal (non zero)
11d5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11d8 :                 >skip0033
                        
                                trap_cc
11d8 : b003            >        bcs skip0035
                       >        trap            ;failed carry clear
11da : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11dd :                 >skip0035
                        
                                trap_mi
11dd : 1003            >        bpl skip0037
                       >        trap            ;failed minus (bit 7 set)
11df : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11e2 :                 >skip0037
                        
11e2 : c001                     cpy #1
                                trap_eq 
11e4 : d003            >        bne skip0039
                       >        trap           ;failed equal (zero)
11e6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11e9 :                 >skip0039
                        
                                trap_cs
11e9 : 9003            >        bcc skip0041
                       >        trap            ;failed carry set
11eb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11ee :                 >skip0041
                        
                                trap_pl
11ee : 3003            >        bmi skip0043
                       >        trap            ;failed plus (bit 7 clear)
11f0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11f3 :                 >skip0043
                        
                                next_test
11f3 : ad0002          >            lda test_case   ;previous test
11f6 : c902            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
11f8 : f003            >        beq skip0046
                       >        trap            ;failed not equal (non zero)
11fa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11fd :                 >skip0046
                       >
0003 =                 >test_num = test_num + 1
11fd : a903            >            lda #test_num   ;*** next tests' number
11ff : 8d0002          >            sta test_case
1202 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        ;testing stack operations PHA PHP PLA PLP
                                    
1205 : a2ff                     ldx #$ff        ;initialize stack
1207 : 9a                       txs
1208 : a955                     lda #$55
120a : 48                       pha
120b : a9aa                     lda #$aa
120d : 48                       pha
120e : cdfe01                   cmp $1fe        ;on stack ?
                                trap_ne
1211 : f003            >        beq skip0048
                       >        trap            ;failed not equal (non zero)
1213 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1216 :                 >skip0048
                        
1216 : ba                       tsx
1217 : 8a                       txa             ;overwrite accu
1218 : c9fd                     cmp #$fd        ;sp decremented?
                                trap_ne
121a : f003            >        beq skip0050
                       >        trap            ;failed not equal (non zero)
121c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
121f :                 >skip0050
                        
121f : 68                       pla
1220 : c9aa                     cmp #$aa        ;successful retreived from stack?
                                trap_ne
1222 : f003            >        beq skip0052
                       >        trap            ;failed not equal (non zero)
1224 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1227 :                 >skip0052
                        
1227 : 68                       pla
1228 : c955                     cmp #$55
                                trap_ne
122a : f003            >        beq skip0054
                       >        trap            ;failed not equal (non zero)
122c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
122f :                 >skip0054
                        
122f : cdff01                   cmp $1ff        ;remains on stack?
                                trap_ne
1232 : f003            >        beq skip0056
                       >        trap            ;failed not equal (non zero)
1234 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1237 :                 >skip0056
                        
1237 : ba                       tsx
1238 : e0ff                     cpx #$ff        ;sp incremented?
                                trap_ne
123a : f003            >        beq skip0058
                       >        trap            ;failed not equal (non zero)
123c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
123f :                 >skip0058
                        
                                next_test
123f : ad0002          >            lda test_case   ;previous test
1242 : c903            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1244 : f003            >        beq skip0061
                       >        trap            ;failed not equal (non zero)
1246 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1249 :                 >skip0061
                       >
0004 =                 >test_num = test_num + 1
1249 : a904            >            lda #test_num   ;*** next tests' number
124b : 8d0002          >            sta test_case
124e : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ;testing branch decisions BPL BMI BVC BVS BCC BCS BNE BEQ
                                set_stat $ff    ;all on
                       >            load_flag $ff    
1251 : a9ff            >            lda #$ff                 ;allow test to change I-flag (no mask)
                       >
1253 : 48              >            pha         ;use stack to load status
1254 : 28              >            plp
                        
1255 : 101a                     bpl nbr1        ;branches should not be taken
1257 : 501b                     bvc nbr2
1259 : 901c                     bcc nbr3
125b : d01d                     bne nbr4
125d : 3003                     bmi br1         ;branches should be taken
                                trap 
125f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1262 : 7003             br1     bvs br2
                                trap 
1264 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1267 : b003             br2     bcs br3
                                trap 
1269 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
126c : f00f             br3     beq br4
                                trap 
126e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1271 :                  nbr1
                                trap            ;previous bpl taken 
1271 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1274 :                  nbr2
                                trap            ;previous bvc taken
1274 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1277 :                  nbr3
                                trap            ;previous bcc taken
1277 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
127a :                  nbr4
                                trap            ;previous bne taken
127a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
127d : 08               br4     php
127e : ba                       tsx
127f : e0fe                     cpx #$fe        ;sp after php?
                                trap_ne
1281 : f003            >        beq skip0073
                       >        trap            ;failed not equal (non zero)
1283 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1286 :                 >skip0073
                        
1286 : 68                       pla
                                cmp_flag $ff    ;returned all flags on?
1287 : c9ff            >            cmp #($ff    |fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1289 : f003            >        beq skip0076
                       >        trap            ;failed not equal (non zero)
128b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
128e :                 >skip0076
                        
128e : ba                       tsx
128f : e0ff                     cpx #$ff        ;sp after php?
                                trap_ne
1291 : f003            >        beq skip0078
                       >        trap            ;failed not equal (non zero)
1293 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1296 :                 >skip0078
                        
                                set_stat 0      ;all off
                       >            load_flag 0      
1296 : a900            >            lda #0                   ;allow test to change I-flag (no mask)
                       >
1298 : 48              >            pha         ;use stack to load status
1299 : 28              >            plp
                        
129a : 301a                     bmi nbr11       ;branches should not be taken
129c : 701b                     bvs nbr12
129e : b01c                     bcs nbr13
12a0 : f01d                     beq nbr14
12a2 : 1003                     bpl br11        ;branches should be taken
                                trap 
12a4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
12a7 : 5003             br11    bvc br12
                                trap 
12a9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
12ac : 9003             br12    bcc br13
                                trap 
12ae : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
12b1 : d00f             br13    bne br14
                                trap 
12b3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
12b6 :                  nbr11
                                trap            ;previous bmi taken 
12b6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
12b9 :                  nbr12
                                trap            ;previous bvs taken 
12b9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
12bc :                  nbr13
                                trap            ;previous bcs taken 
12bc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
12bf :                  nbr14
                                trap            ;previous beq taken 
12bf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
12c2 : 08               br14    php
12c3 : 68                       pla
                                cmp_flag 0      ;flags off except break (pushed by sw) + reserved?
12c4 : c930            >            cmp #(0      |fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
12c6 : f003            >        beq skip0091
                       >        trap            ;failed not equal (non zero)
12c8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12cb :                 >skip0091
                        
                                ;crosscheck flags
                                set_stat zero
                       >            load_flag zero
12cb : a902            >            lda #zero             ;allow test to change I-flag (no mask)
                       >
12cd : 48              >            pha         ;use stack to load status
12ce : 28              >            plp
                        
12cf : d002                     bne brzs1
12d1 : f003                     beq brzs2
12d3 :                  brzs1
                                trap            ;branch zero/non zero
12d3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
12d6 : b002             brzs2   bcs brzs3
12d8 : 9003                     bcc brzs4
12da :                  brzs3
                                trap            ;branch carry/no carry
12da : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
12dd : 3002             brzs4   bmi brzs5
12df : 1003                     bpl brzs6
12e1 :                  brzs5
                                trap            ;branch minus/plus
12e1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
12e4 : 7002             brzs6   bvs brzs7
12e6 : 5003                     bvc brzs8
12e8 :                  brzs7
                                trap            ;branch overflow/no overflow
12e8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
12eb :                  brzs8
                                set_stat carry
                       >            load_flag carry
12eb : a901            >            lda #carry             ;allow test to change I-flag (no mask)
                       >
12ed : 48              >            pha         ;use stack to load status
12ee : 28              >            plp
                        
12ef : f002                     beq brcs1
12f1 : d003                     bne brcs2
12f3 :                  brcs1
                                trap            ;branch zero/non zero
12f3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
12f6 : 9002             brcs2   bcc brcs3
12f8 : b003                     bcs brcs4
12fa :                  brcs3
                                trap            ;branch carry/no carry
12fa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
12fd : 3002             brcs4   bmi brcs5
12ff : 1003                     bpl brcs6
1301 :                  brcs5
                                trap            ;branch minus/plus
1301 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1304 : 7002             brcs6   bvs brcs7
1306 : 5003                     bvc brcs8
1308 :                  brcs7
                                trap            ;branch overflow/no overflow
1308 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
                        
130b :                  brcs8
                                set_stat minus
                       >            load_flag minus
130b : a980            >            lda #minus             ;allow test to change I-flag (no mask)
                       >
130d : 48              >            pha         ;use stack to load status
130e : 28              >            plp
                        
130f : f002                     beq brmi1
1311 : d003                     bne brmi2
1313 :                  brmi1
                                trap            ;branch zero/non zero
1313 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1316 : b002             brmi2   bcs brmi3
1318 : 9003                     bcc brmi4
131a :                  brmi3
                                trap            ;branch carry/no carry
131a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
131d : 1002             brmi4   bpl brmi5
131f : 3003                     bmi brmi6
1321 :                  brmi5
                                trap            ;branch minus/plus
1321 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1324 : 7002             brmi6   bvs brmi7
1326 : 5003                     bvc brmi8
1328 :                  brmi7
                                trap            ;branch overflow/no overflow
1328 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
132b :                  brmi8
                                set_stat overfl
                       >            load_flag overfl
132b : a940            >            lda #overfl             ;allow test to change I-flag (no mask)
                       >
132d : 48              >            pha         ;use stack to load status
132e : 28              >            plp
                        
132f : f002                     beq brvs1
1331 : d003                     bne brvs2
1333 :                  brvs1
                                trap            ;branch zero/non zero
1333 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1336 : b002             brvs2   bcs brvs3
1338 : 9003                     bcc brvs4
133a :                  brvs3
                                trap            ;branch carry/no carry
133a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
133d : 3002             brvs4   bmi brvs5
133f : 1003                     bpl brvs6
1341 :                  brvs5
                                trap            ;branch minus/plus
1341 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1344 : 5002             brvs6   bvc brvs7
1346 : 7003                     bvs brvs8
1348 :                  brvs7
                                trap            ;branch overflow/no overflow
1348 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
134b :                  brvs8
                                set_stat $ff-zero
                       >            load_flag $ff-zero
134b : a9fd            >            lda #$ff-zero             ;allow test to change I-flag (no mask)
                       >
134d : 48              >            pha         ;use stack to load status
134e : 28              >            plp
                        
134f : f002                     beq brzc1
1351 : d003                     bne brzc2
1353 :                  brzc1
                                trap            ;branch zero/non zero
1353 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1356 : 9002             brzc2   bcc brzc3
1358 : b003                     bcs brzc4
135a :                  brzc3
                                trap            ;branch carry/no carry
135a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
135d : 1002             brzc4   bpl brzc5
135f : 3003                     bmi brzc6
1361 :                  brzc5
                                trap            ;branch minus/plus
1361 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1364 : 5002             brzc6   bvc brzc7
1366 : 7003                     bvs brzc8
1368 :                  brzc7
                                trap            ;branch overflow/no overflow
1368 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
136b :                  brzc8
                                set_stat $ff-carry
                       >            load_flag $ff-carry
136b : a9fe            >            lda #$ff-carry             ;allow test to change I-flag (no mask)
                       >
136d : 48              >            pha         ;use stack to load status
136e : 28              >            plp
                        
136f : d002                     bne brcc1
1371 : f003                     beq brcc2
1373 :                  brcc1
                                trap            ;branch zero/non zero
1373 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1376 : b002             brcc2   bcs brcc3
1378 : 9003                     bcc brcc4
137a :                  brcc3
                                trap            ;branch carry/no carry
137a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
137d : 1002             brcc4   bpl brcc5
137f : 3003                     bmi brcc6
1381 :                  brcc5
                                trap            ;branch minus/plus
1381 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1384 : 5002             brcc6   bvc brcc7
1386 : 7003                     bvs brcc8
1388 :                  brcc7
                                trap            ;branch overflow/no overflow
1388 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
138b :                  brcc8
                                set_stat $ff-minus
                       >            load_flag $ff-minus
138b : a97f            >            lda #$ff-minus             ;allow test to change I-flag (no mask)
                       >
138d : 48              >            pha         ;use stack to load status
138e : 28              >            plp
                        
138f : d002                     bne brpl1
1391 : f003                     beq brpl2
1393 :                  brpl1
                                trap            ;branch zero/non zero
1393 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1396 : 9002             brpl2   bcc brpl3
1398 : b003                     bcs brpl4
139a :                  brpl3
                                trap            ;branch carry/no carry
139a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
139d : 3002             brpl4   bmi brpl5
139f : 1003                     bpl brpl6
13a1 :                  brpl5
                                trap            ;branch minus/plus
13a1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
13a4 : 5002             brpl6   bvc brpl7
13a6 : 7003                     bvs brpl8
13a8 :                  brpl7
                                trap            ;branch overflow/no overflow
13a8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
13ab :                  brpl8
                                set_stat $ff-overfl
                       >            load_flag $ff-overfl
13ab : a9bf            >            lda #$ff-overfl             ;allow test to change I-flag (no mask)
                       >
13ad : 48              >            pha         ;use stack to load status
13ae : 28              >            plp
                        
13af : d002                     bne brvc1
13b1 : f003                     beq brvc2
13b3 :                  brvc1
                                trap            ;branch zero/non zero
13b3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
13b6 : 9002             brvc2   bcc brvc3
13b8 : b003                     bcs brvc4
13ba :                  brvc3
                                trap            ;branch carry/no carry
13ba : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
13bd : 1002             brvc4   bpl brvc5
13bf : 3003                     bmi brvc6
13c1 :                  brvc5
                                trap            ;branch minus/plus
13c1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
13c4 : 7002             brvc6   bvs brvc7
13c6 : 5003                     bvc brvc8
13c8 :                  brvc7
                                trap            ;branch overflow/no overflow
13c8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
13cb :                  brvc8
                                next_test
13cb : ad0002          >            lda test_case   ;previous test
13ce : c904            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
13d0 : f003            >        beq skip0142
                       >        trap            ;failed not equal (non zero)
13d2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
13d5 :                 >skip0142
                       >
0005 =                 >test_num = test_num + 1
13d5 : a905            >            lda #test_num   ;*** next tests' number
13d7 : 8d0002          >            sta test_case
13da : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; test PHA does not alter flags or accumulator but PLA does
13dd : a255                     ldx #$55        ;x & y protected
13df : a0aa                     ldy #$aa
                                set_a 1,$ff     ;push
                       >            load_flag $ff     
13e1 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
13e3 : 48              >            pha         ;use stack to load status
13e4 : a901            >            lda #1     ;precharge accu
13e6 : 28              >            plp
                        
13e7 : 48                       pha
                                tst_a 1,$ff
13e8 : 08              >            php         ;save flags
13e9 : c901            >            cmp #1     ;test result
                       >            trap_ne
13eb : f003            >        beq skip0147
                       >        trap            ;failed not equal (non zero)
13ed : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
13f0 :                 >skip0147
                       >
13f0 : 68              >            pla         ;load status
13f1 : 48              >            pha
                       >            cmp_flag $ff
13f2 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
13f4 : f003            >        beq skip0150
                       >        trap            ;failed not equal (non zero)
13f6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
13f9 :                 >skip0150
                       >
13f9 : 28              >            plp         ;restore status
                        
                                set_a 0,0
                       >            load_flag 0
13fa : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
13fc : 48              >            pha         ;use stack to load status
13fd : a900            >            lda #0     ;precharge accu
13ff : 28              >            plp
                        
1400 : 48                       pha
                                tst_a 0,0
1401 : 08              >            php         ;save flags
1402 : c900            >            cmp #0     ;test result
                       >            trap_ne
1404 : f003            >        beq skip0155
                       >        trap            ;failed not equal (non zero)
1406 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1409 :                 >skip0155
                       >
1409 : 68              >            pla         ;load status
140a : 48              >            pha
                       >            cmp_flag 0
140b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
140d : f003            >        beq skip0158
                       >        trap            ;failed not equal (non zero)
140f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1412 :                 >skip0158
                       >
1412 : 28              >            plp         ;restore status
                        
                                set_a $ff,$ff
                       >            load_flag $ff
1413 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1415 : 48              >            pha         ;use stack to load status
1416 : a9ff            >            lda #$ff     ;precharge accu
1418 : 28              >            plp
                        
1419 : 48                       pha
                                tst_a $ff,$ff
141a : 08              >            php         ;save flags
141b : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
141d : f003            >        beq skip0163
                       >        trap            ;failed not equal (non zero)
141f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1422 :                 >skip0163
                       >
1422 : 68              >            pla         ;load status
1423 : 48              >            pha
                       >            cmp_flag $ff
1424 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1426 : f003            >        beq skip0166
                       >        trap            ;failed not equal (non zero)
1428 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
142b :                 >skip0166
                       >
142b : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
142c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
142e : 48              >            pha         ;use stack to load status
142f : a901            >            lda #1     ;precharge accu
1431 : 28              >            plp
                        
1432 : 48                       pha
                                tst_a 1,0
1433 : 08              >            php         ;save flags
1434 : c901            >            cmp #1     ;test result
                       >            trap_ne
1436 : f003            >        beq skip0171
                       >        trap            ;failed not equal (non zero)
1438 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
143b :                 >skip0171
                       >
143b : 68              >            pla         ;load status
143c : 48              >            pha
                       >            cmp_flag 0
143d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
143f : f003            >        beq skip0174
                       >        trap            ;failed not equal (non zero)
1441 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1444 :                 >skip0174
                       >
1444 : 28              >            plp         ;restore status
                        
                                set_a 0,$ff
                       >            load_flag $ff
1445 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1447 : 48              >            pha         ;use stack to load status
1448 : a900            >            lda #0     ;precharge accu
144a : 28              >            plp
                        
144b : 48                       pha
                                tst_a 0,$ff
144c : 08              >            php         ;save flags
144d : c900            >            cmp #0     ;test result
                       >            trap_ne
144f : f003            >        beq skip0179
                       >        trap            ;failed not equal (non zero)
1451 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1454 :                 >skip0179
                       >
1454 : 68              >            pla         ;load status
1455 : 48              >            pha
                       >            cmp_flag $ff
1456 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1458 : f003            >        beq skip0182
                       >        trap            ;failed not equal (non zero)
145a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
145d :                 >skip0182
                       >
145d : 28              >            plp         ;restore status
                        
                                set_a $ff,0
                       >            load_flag 0
145e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1460 : 48              >            pha         ;use stack to load status
1461 : a9ff            >            lda #$ff     ;precharge accu
1463 : 28              >            plp
                        
1464 : 48                       pha
                                tst_a $ff,0
1465 : 08              >            php         ;save flags
1466 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
1468 : f003            >        beq skip0187
                       >        trap            ;failed not equal (non zero)
146a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
146d :                 >skip0187
                       >
146d : 68              >            pla         ;load status
146e : 48              >            pha
                       >            cmp_flag 0
146f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1471 : f003            >        beq skip0190
                       >        trap            ;failed not equal (non zero)
1473 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1476 :                 >skip0190
                       >
1476 : 28              >            plp         ;restore status
                        
                                set_a 0,$ff     ;pull
                       >            load_flag $ff     
1477 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
1479 : 48              >            pha         ;use stack to load status
147a : a900            >            lda #0     ;precharge accu
147c : 28              >            plp
                        
147d : 68                       pla
                                tst_a $ff,$ff-zero
147e : 08              >            php         ;save flags
147f : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
1481 : f003            >        beq skip0195
                       >        trap            ;failed not equal (non zero)
1483 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1486 :                 >skip0195
                       >
1486 : 68              >            pla         ;load status
1487 : 48              >            pha
                       >            cmp_flag $ff-zero
1488 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
148a : f003            >        beq skip0198
                       >        trap            ;failed not equal (non zero)
148c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
148f :                 >skip0198
                       >
148f : 28              >            plp         ;restore status
                        
                                set_a $ff,0
                       >            load_flag 0
1490 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1492 : 48              >            pha         ;use stack to load status
1493 : a9ff            >            lda #$ff     ;precharge accu
1495 : 28              >            plp
                        
1496 : 68                       pla
                                tst_a 0,zero
1497 : 08              >            php         ;save flags
1498 : c900            >            cmp #0     ;test result
                       >            trap_ne
149a : f003            >        beq skip0203
                       >        trap            ;failed not equal (non zero)
149c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
149f :                 >skip0203
                       >
149f : 68              >            pla         ;load status
14a0 : 48              >            pha
                       >            cmp_flag zero
14a1 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
14a3 : f003            >        beq skip0206
                       >        trap            ;failed not equal (non zero)
14a5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14a8 :                 >skip0206
                       >
14a8 : 28              >            plp         ;restore status
                        
                                set_a $fe,$ff
                       >            load_flag $ff
14a9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
14ab : 48              >            pha         ;use stack to load status
14ac : a9fe            >            lda #$fe     ;precharge accu
14ae : 28              >            plp
                        
14af : 68                       pla
                                tst_a 1,$ff-zero-minus
14b0 : 08              >            php         ;save flags
14b1 : c901            >            cmp #1     ;test result
                       >            trap_ne
14b3 : f003            >        beq skip0211
                       >        trap            ;failed not equal (non zero)
14b5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14b8 :                 >skip0211
                       >
14b8 : 68              >            pla         ;load status
14b9 : 48              >            pha
                       >            cmp_flag $ff-zero-minus
14ba : c97d            >            cmp #($ff-zero-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
14bc : f003            >        beq skip0214
                       >        trap            ;failed not equal (non zero)
14be : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14c1 :                 >skip0214
                       >
14c1 : 28              >            plp         ;restore status
                        
                                set_a 0,0
                       >            load_flag 0
14c2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
14c4 : 48              >            pha         ;use stack to load status
14c5 : a900            >            lda #0     ;precharge accu
14c7 : 28              >            plp
                        
14c8 : 68                       pla
                                tst_a $ff,minus
14c9 : 08              >            php         ;save flags
14ca : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
14cc : f003            >        beq skip0219
                       >        trap            ;failed not equal (non zero)
14ce : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14d1 :                 >skip0219
                       >
14d1 : 68              >            pla         ;load status
14d2 : 48              >            pha
                       >            cmp_flag minus
14d3 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
14d5 : f003            >        beq skip0222
                       >        trap            ;failed not equal (non zero)
14d7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14da :                 >skip0222
                       >
14da : 28              >            plp         ;restore status
                        
                                set_a $ff,$ff
                       >            load_flag $ff
14db : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
14dd : 48              >            pha         ;use stack to load status
14de : a9ff            >            lda #$ff     ;precharge accu
14e0 : 28              >            plp
                        
14e1 : 68                       pla
                                tst_a 0,$ff-minus
14e2 : 08              >            php         ;save flags
14e3 : c900            >            cmp #0     ;test result
                       >            trap_ne
14e5 : f003            >        beq skip0227
                       >        trap            ;failed not equal (non zero)
14e7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14ea :                 >skip0227
                       >
14ea : 68              >            pla         ;load status
14eb : 48              >            pha
                       >            cmp_flag $ff-minus
14ec : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
14ee : f003            >        beq skip0230
                       >        trap            ;failed not equal (non zero)
14f0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14f3 :                 >skip0230
                       >
14f3 : 28              >            plp         ;restore status
                        
                                set_a $fe,0
                       >            load_flag 0
14f4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
14f6 : 48              >            pha         ;use stack to load status
14f7 : a9fe            >            lda #$fe     ;precharge accu
14f9 : 28              >            plp
                        
14fa : 68                       pla
                                tst_a 1,0
14fb : 08              >            php         ;save flags
14fc : c901            >            cmp #1     ;test result
                       >            trap_ne
14fe : f003            >        beq skip0235
                       >        trap            ;failed not equal (non zero)
1500 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1503 :                 >skip0235
                       >
1503 : 68              >            pla         ;load status
1504 : 48              >            pha
                       >            cmp_flag 0
1505 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1507 : f003            >        beq skip0238
                       >        trap            ;failed not equal (non zero)
1509 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
150c :                 >skip0238
                       >
150c : 28              >            plp         ;restore status
                        
150d : e055                     cpx #$55        ;x & y unchanged?
                                trap_ne
150f : f003            >        beq skip0240
                       >        trap            ;failed not equal (non zero)
1511 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1514 :                 >skip0240
                        
1514 : c0aa                     cpy #$aa
                                trap_ne
1516 : f003            >        beq skip0242
                       >        trap            ;failed not equal (non zero)
1518 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
151b :                 >skip0242
                        
                                next_test
151b : ad0002          >            lda test_case   ;previous test
151e : c905            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1520 : f003            >        beq skip0245
                       >        trap            ;failed not equal (non zero)
1522 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1525 :                 >skip0245
                       >
0006 =                 >test_num = test_num + 1
1525 : a906            >            lda #test_num   ;*** next tests' number
1527 : 8d0002          >            sta test_case
152a : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                         
                        ; partial pretest EOR #
                                set_a $3c,0
                       >            load_flag 0
152d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
152f : 48              >            pha         ;use stack to load status
1530 : a93c            >            lda #$3c     ;precharge accu
1532 : 28              >            plp
                        
1533 : 49c3                     eor #$c3
                                tst_a $ff,fn
1535 : 08              >            php         ;save flags
1536 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
1538 : f003            >        beq skip0250
                       >        trap            ;failed not equal (non zero)
153a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
153d :                 >skip0250
                       >
153d : 68              >            pla         ;load status
153e : 48              >            pha
                       >            cmp_flag fn
153f : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1541 : f003            >        beq skip0253
                       >        trap            ;failed not equal (non zero)
1543 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1546 :                 >skip0253
                       >
1546 : 28              >            plp         ;restore status
                        
                                set_a $c3,0
                       >            load_flag 0
1547 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1549 : 48              >            pha         ;use stack to load status
154a : a9c3            >            lda #$c3     ;precharge accu
154c : 28              >            plp
                        
154d : 49c3                     eor #$c3
                                tst_a 0,fz
154f : 08              >            php         ;save flags
1550 : c900            >            cmp #0     ;test result
                       >            trap_ne
1552 : f003            >        beq skip0258
                       >        trap            ;failed not equal (non zero)
1554 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1557 :                 >skip0258
                       >
1557 : 68              >            pla         ;load status
1558 : 48              >            pha
                       >            cmp_flag fz
1559 : c932            >            cmp #(fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
155b : f003            >        beq skip0261
                       >        trap            ;failed not equal (non zero)
155d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1560 :                 >skip0261
                       >
1560 : 28              >            plp         ;restore status
                        
                                next_test
1561 : ad0002          >            lda test_case   ;previous test
1564 : c906            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1566 : f003            >        beq skip0264
                       >        trap            ;failed not equal (non zero)
1568 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
156b :                 >skip0264
                       >
0007 =                 >test_num = test_num + 1
156b : a907            >            lda #test_num   ;*** next tests' number
156d : 8d0002          >            sta test_case
1570 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; PC modifying instructions except branches (NOP, JMP, JSR, RTS, BRK, RTI)
                        ; testing NOP
1573 : a224                     ldx #$24
1575 : a042                     ldy #$42
                                set_a $18,0
                       >            load_flag 0
1577 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1579 : 48              >            pha         ;use stack to load status
157a : a918            >            lda #$18     ;precharge accu
157c : 28              >            plp
                        
157d : ea                       nop
                                tst_a $18,0
157e : 08              >            php         ;save flags
157f : c918            >            cmp #$18     ;test result
                       >            trap_ne
1581 : f003            >        beq skip0269
                       >        trap            ;failed not equal (non zero)
1583 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1586 :                 >skip0269
                       >
1586 : 68              >            pla         ;load status
1587 : 48              >            pha
                       >            cmp_flag 0
1588 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
158a : f003            >        beq skip0272
                       >        trap            ;failed not equal (non zero)
158c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
158f :                 >skip0272
                       >
158f : 28              >            plp         ;restore status
                        
1590 : e024                     cpx #$24
                                trap_ne
1592 : f003            >        beq skip0274
                       >        trap            ;failed not equal (non zero)
1594 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1597 :                 >skip0274
                        
1597 : c042                     cpy #$42
                                trap_ne
1599 : f003            >        beq skip0276
                       >        trap            ;failed not equal (non zero)
159b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
159e :                 >skip0276
                        
159e : a2db                     ldx #$db
15a0 : a0bd                     ldy #$bd
                                set_a $e7,$ff
                       >            load_flag $ff
15a2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
15a4 : 48              >            pha         ;use stack to load status
15a5 : a9e7            >            lda #$e7     ;precharge accu
15a7 : 28              >            plp
                        
15a8 : ea                       nop
                                tst_a $e7,$ff
15a9 : 08              >            php         ;save flags
15aa : c9e7            >            cmp #$e7     ;test result
                       >            trap_ne
15ac : f003            >        beq skip0281
                       >        trap            ;failed not equal (non zero)
15ae : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15b1 :                 >skip0281
                       >
15b1 : 68              >            pla         ;load status
15b2 : 48              >            pha
                       >            cmp_flag $ff
15b3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
15b5 : f003            >        beq skip0284
                       >        trap            ;failed not equal (non zero)
15b7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15ba :                 >skip0284
                       >
15ba : 28              >            plp         ;restore status
                        
15bb : e0db                     cpx #$db
                                trap_ne
15bd : f003            >        beq skip0286
                       >        trap            ;failed not equal (non zero)
15bf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15c2 :                 >skip0286
                        
15c2 : c0bd                     cpy #$bd
                                trap_ne
15c4 : f003            >        beq skip0288
                       >        trap            ;failed not equal (non zero)
15c6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15c9 :                 >skip0288
                        
                                next_test
15c9 : ad0002          >            lda test_case   ;previous test
15cc : c907            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
15ce : f003            >        beq skip0291
                       >        trap            ;failed not equal (non zero)
15d0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15d3 :                 >skip0291
                       >
0008 =                 >test_num = test_num + 1
15d3 : a908            >            lda #test_num   ;*** next tests' number
15d5 : 8d0002          >            sta test_case
15d8 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                        ; jump absolute
                                set_stat $0
                       >            load_flag $0
15db : a900            >            lda #$0             ;allow test to change I-flag (no mask)
                       >
15dd : 48              >            pha         ;use stack to load status
15de : 28              >            plp
                        
15df : a946                     lda #'F'
15e1 : a241                     ldx #'A'
15e3 : a052                     ldy #'R'        ;N=0, V=0, Z=0, C=0
15e5 : 4cbd4e                   jmp test_far
15e8 : ea                       nop
15e9 : ea                       nop
                                trap_ne         ;runover protection
15ea : f003            >        beq skip0295
                       >        trap            ;failed not equal (non zero)
15ec : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15ef :                 >skip0295
                        
15ef : e8                       inx
15f0 : e8                       inx
15f1 :                  far_ret 
                                trap_eq         ;returned flags OK?
15f1 : d003            >        bne skip0297
                       >        trap           ;failed equal (zero)
15f3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15f6 :                 >skip0297
                        
                                trap_pl
15f6 : 3003            >        bmi skip0299
                       >        trap            ;failed plus (bit 7 clear)
15f8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15fb :                 >skip0299
                        
                                trap_cc
15fb : b003            >        bcs skip0301
                       >        trap            ;failed carry clear
15fd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1600 :                 >skip0301
                        
                                trap_vc
1600 : 7003            >        bvs skip0303
                       >        trap            ;failed overflow clear
1602 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1605 :                 >skip0303
                        
1605 : c9ec                     cmp #('F'^$aa)  ;returned registers OK?
                                trap_ne
1607 : f003            >        beq skip0305
                       >        trap            ;failed not equal (non zero)
1609 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
160c :                 >skip0305
                        
160c : e042                     cpx #('A'+1)
                                trap_ne
160e : f003            >        beq skip0307
                       >        trap            ;failed not equal (non zero)
1610 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1613 :                 >skip0307
                        
1613 : c04f                     cpy #('R'-3)
                                trap_ne
1615 : f003            >        beq skip0309
                       >        trap            ;failed not equal (non zero)
1617 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
161a :                 >skip0309
                        
161a : ca                       dex
161b : c8                       iny
161c : c8                       iny
161d : c8                       iny
161e : 49aa                     eor #$aa        ;N=0, V=1, Z=0, C=1
1620 : 4c2c16                   jmp test_near
1623 : ea                       nop
1624 : ea                       nop
                                trap_ne         ;runover protection
1625 : f003            >        beq skip0311
                       >        trap            ;failed not equal (non zero)
1627 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
162a :                 >skip0311
                        
162a : e8                       inx
162b : e8                       inx
162c :                  test_near
                                trap_eq         ;passed flags OK?
162c : d003            >        bne skip0313
                       >        trap           ;failed equal (zero)
162e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1631 :                 >skip0313
                        
                                trap_mi
1631 : 1003            >        bpl skip0315
                       >        trap            ;failed minus (bit 7 set)
1633 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1636 :                 >skip0315
                        
                                trap_cc
1636 : b003            >        bcs skip0317
                       >        trap            ;failed carry clear
1638 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
163b :                 >skip0317
                        
                                trap_vc
163b : 7003            >        bvs skip0319
                       >        trap            ;failed overflow clear
163d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1640 :                 >skip0319
                        
1640 : c946                     cmp #'F'        ;passed registers OK?
                                trap_ne
1642 : f003            >        beq skip0321
                       >        trap            ;failed not equal (non zero)
1644 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1647 :                 >skip0321
                        
1647 : e041                     cpx #'A'
                                trap_ne
1649 : f003            >        beq skip0323
                       >        trap            ;failed not equal (non zero)
164b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
164e :                 >skip0323
                        
164e : c052                     cpy #'R'
                                trap_ne
1650 : f003            >        beq skip0325
                       >        trap            ;failed not equal (non zero)
1652 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1655 :                 >skip0325
                        
                                next_test
1655 : ad0002          >            lda test_case   ;previous test
1658 : c908            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
165a : f003            >        beq skip0328
                       >        trap            ;failed not equal (non zero)
165c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
165f :                 >skip0328
                       >
0009 =                 >test_num = test_num + 1
165f : a909            >            lda #test_num   ;*** next tests' number
1661 : 8d0002          >            sta test_case
1664 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                        ; jump indirect
                                set_stat 0
                       >            load_flag 0
1667 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1669 : 48              >            pha         ;use stack to load status
166a : 28              >            plp
                        
166b : a949                     lda #'I'
166d : a24e                     ldx #'N'
166f : a044                     ldy #'D'        ;N=0, V=0, Z=0, C=0
1671 : 6c044f                   jmp (ptr_tst_ind)
1674 : ea                       nop
                                trap_ne         ;runover protection
1675 : f003            >        beq skip0332
                       >        trap            ;failed not equal (non zero)
1677 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
167a :                 >skip0332
                        
167a : 88                       dey
167b : 88                       dey
167c :                  ind_ret 
167c : 08                       php             ;either SP or Y count will fail, if we do not hit
167d : 88                       dey
167e : 88                       dey
167f : 88                       dey
1680 : 28                       plp
                                trap_eq         ;returned flags OK?
1681 : d003            >        bne skip0334
                       >        trap           ;failed equal (zero)
1683 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1686 :                 >skip0334
                        
                                trap_pl
1686 : 3003            >        bmi skip0336
                       >        trap            ;failed plus (bit 7 clear)
1688 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
168b :                 >skip0336
                        
                                trap_cc
168b : b003            >        bcs skip0338
                       >        trap            ;failed carry clear
168d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1690 :                 >skip0338
                        
                                trap_vc
1690 : 7003            >        bvs skip0340
                       >        trap            ;failed overflow clear
1692 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1695 :                 >skip0340
                        
1695 : c9e3                     cmp #('I'^$aa)  ;returned registers OK?
                                trap_ne
1697 : f003            >        beq skip0342
                       >        trap            ;failed not equal (non zero)
1699 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
169c :                 >skip0342
                        
169c : e04f                     cpx #('N'+1)
                                trap_ne
169e : f003            >        beq skip0344
                       >        trap            ;failed not equal (non zero)
16a0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16a3 :                 >skip0344
                        
16a3 : c03e                     cpy #('D'-6)
                                trap_ne
16a5 : f003            >        beq skip0346
                       >        trap            ;failed not equal (non zero)
16a7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16aa :                 >skip0346
                        
16aa : ba                       tsx             ;SP check
16ab : e0ff                     cpx #$ff
                                trap_ne
16ad : f003            >        beq skip0348
                       >        trap            ;failed not equal (non zero)
16af : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16b2 :                 >skip0348
                        
                                next_test
16b2 : ad0002          >            lda test_case   ;previous test
16b5 : c909            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
16b7 : f003            >        beq skip0351
                       >        trap            ;failed not equal (non zero)
16b9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16bc :                 >skip0351
                       >
000a =                 >test_num = test_num + 1
16bc : a90a            >            lda #test_num   ;*** next tests' number
16be : 8d0002          >            sta test_case
16c1 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; jump subroutine & return from subroutine
                                set_stat 0
                       >            load_flag 0
16c4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
16c6 : 48              >            pha         ;use stack to load status
16c7 : 28              >            plp
                        
16c8 : a94a                     lda #'J'
16ca : a253                     ldx #'S'
16cc : a052                     ldy #'R'        ;N=0, V=0, Z=0, C=0
16ce : 20584f                   jsr test_jsr
16d0 =                  jsr_ret = *-1           ;last address of jsr = return address
16d1 : 08                       php             ;either SP or Y count will fail, if we do not hit
16d2 : 88                       dey
16d3 : 88                       dey
16d4 : 88                       dey
16d5 : 28                       plp
                                trap_eq         ;returned flags OK?
16d6 : d003            >        bne skip0355
                       >        trap           ;failed equal (zero)
16d8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16db :                 >skip0355
                        
                                trap_pl
16db : 3003            >        bmi skip0357
                       >        trap            ;failed plus (bit 7 clear)
16dd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16e0 :                 >skip0357
                        
                                trap_cc
16e0 : b003            >        bcs skip0359
                       >        trap            ;failed carry clear
16e2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16e5 :                 >skip0359
                        
                                trap_vc
16e5 : 7003            >        bvs skip0361
                       >        trap            ;failed overflow clear
16e7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16ea :                 >skip0361
                        
16ea : c9e0                     cmp #('J'^$aa)  ;returned registers OK?
                                trap_ne
16ec : f003            >        beq skip0363
                       >        trap            ;failed not equal (non zero)
16ee : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16f1 :                 >skip0363
                        
16f1 : e054                     cpx #('S'+1)
                                trap_ne
16f3 : f003            >        beq skip0365
                       >        trap            ;failed not equal (non zero)
16f5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16f8 :                 >skip0365
                        
16f8 : c04c                     cpy #('R'-6)
                                trap_ne
16fa : f003            >        beq skip0367
                       >        trap            ;failed not equal (non zero)
16fc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16ff :                 >skip0367
                        
16ff : ba                       tsx             ;sp?
1700 : e0ff                     cpx #$ff
                                trap_ne
1702 : f003            >        beq skip0369
                       >        trap            ;failed not equal (non zero)
1704 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1707 :                 >skip0369
                        
                                next_test
1707 : ad0002          >            lda test_case   ;previous test
170a : c90a            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
170c : f003            >        beq skip0372
                       >        trap            ;failed not equal (non zero)
170e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1711 :                 >skip0372
                       >
000b =                 >test_num = test_num + 1
1711 : a90b            >            lda #test_num   ;*** next tests' number
1713 : 8d0002          >            sta test_case
1716 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; break & return from interrupt
                            if ROM_vectors = 1
                                set_stat 0
                                lda #'B'
                                ldx #'R'
                                ldy #'K'        ;N=0, V=0, Z=0, C=0
                                brk
                            else
1719 : a917                     lda #hi brk_ret ;emulated break
171b : 48                       pha
171c : a930                     lda #lo brk_ret
171e : 48                       pha
171f : a930                     lda #fao        ;set break & unused on stack
1721 : 48                       pha
                                set_stat intdis
                       >            load_flag intdis
1722 : a904            >            lda #intdis             ;allow test to change I-flag (no mask)
                       >
1724 : 48              >            pha         ;use stack to load status
1725 : 28              >            plp
                        
1726 : a942                     lda #'B'
1728 : a252                     ldx #'R'
172a : a04b                     ldy #'K'        ;N=0, V=0, Z=0, C=0
172c : 4cbb4f                   jmp irq_trap
                            endif
172f : 88                       dey             ;should not be executed
1730 :                  brk_ret                 ;address of break return
1730 : 08                       php             ;either SP or Y count will fail, if we do not hit
1731 : 88                       dey
1732 : 88                       dey
1733 : 88                       dey
1734 : c9e8                     cmp #('B'^$aa)  ;returned registers OK?
                                trap_ne
1736 : f003            >        beq skip0376
                       >        trap            ;failed not equal (non zero)
1738 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
173b :                 >skip0376
                        
173b : e053                     cpx #('R'+1)
                                trap_ne
173d : f003            >        beq skip0378
                       >        trap            ;failed not equal (non zero)
173f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1742 :                 >skip0378
                        
1742 : c045                     cpy #('K'-6)
                                trap_ne
1744 : f003            >        beq skip0380
                       >        trap            ;failed not equal (non zero)
1746 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1749 :                 >skip0380
                        
1749 : 68                       pla             ;returned flags OK (unchanged)?
                                cmp_flag 0
174a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
174c : f003            >        beq skip0383
                       >        trap            ;failed not equal (non zero)
174e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1751 :                 >skip0383
                        
1751 : ba                       tsx             ;sp?
1752 : e0ff                     cpx #$ff
                                trap_ne
1754 : f003            >        beq skip0385
                       >        trap            ;failed not equal (non zero)
1756 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1759 :                 >skip0385
                        
                                next_test
1759 : ad0002          >            lda test_case   ;previous test
175c : c90b            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
175e : f003            >        beq skip0388
                       >        trap            ;failed not equal (non zero)
1760 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1763 :                 >skip0388
                       >
000c =                 >test_num = test_num + 1
1763 : a90c            >            lda #test_num   ;*** next tests' number
1765 : 8d0002          >            sta test_case
1768 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                         
                        ; test set and clear flags CLC CLI CLD CLV SEC SEI SED
                                set_stat $ff
                       >            load_flag $ff
176b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
176d : 48              >            pha         ;use stack to load status
176e : 28              >            plp
                        
176f : 18                       clc
                                tst_stat $ff-carry
1770 : 08              >            php         ;save status
1771 : 68              >            pla         ;use stack to retrieve status
1772 : 48              >            pha
                       >            cmp_flag $ff-carry
1773 : c9fe            >            cmp #($ff-carry|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1775 : f003            >        beq skip0394
                       >        trap            ;failed not equal (non zero)
1777 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
177a :                 >skip0394
                       >
177a : 28              >            plp         ;restore status
                        
177b : 38                       sec
                                tst_stat $ff
177c : 08              >            php         ;save status
177d : 68              >            pla         ;use stack to retrieve status
177e : 48              >            pha
                       >            cmp_flag $ff
177f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1781 : f003            >        beq skip0398
                       >        trap            ;failed not equal (non zero)
1783 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1786 :                 >skip0398
                       >
1786 : 28              >            plp         ;restore status
                        
                            if I_flag = 3
1787 : 58                       cli
                                tst_stat $ff-intdis
1788 : 08              >            php         ;save status
1789 : 68              >            pla         ;use stack to retrieve status
178a : 48              >            pha
                       >            cmp_flag $ff-intdis
178b : c9fb            >            cmp #($ff-intdis|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
178d : f003            >        beq skip0402
                       >        trap            ;failed not equal (non zero)
178f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1792 :                 >skip0402
                       >
1792 : 28              >            plp         ;restore status
                        
1793 : 78                       sei
                                tst_stat $ff
1794 : 08              >            php         ;save status
1795 : 68              >            pla         ;use stack to retrieve status
1796 : 48              >            pha
                       >            cmp_flag $ff
1797 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1799 : f003            >        beq skip0406
                       >        trap            ;failed not equal (non zero)
179b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
179e :                 >skip0406
                       >
179e : 28              >            plp         ;restore status
                        
                            endif
179f : d8                       cld
                                tst_stat $ff-decmode
17a0 : 08              >            php         ;save status
17a1 : 68              >            pla         ;use stack to retrieve status
17a2 : 48              >            pha
                       >            cmp_flag $ff-decmode
17a3 : c9f7            >            cmp #($ff-decmode|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
17a5 : f003            >        beq skip0410
                       >        trap            ;failed not equal (non zero)
17a7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17aa :                 >skip0410
                       >
17aa : 28              >            plp         ;restore status
                        
17ab : f8                       sed
                                tst_stat $ff
17ac : 08              >            php         ;save status
17ad : 68              >            pla         ;use stack to retrieve status
17ae : 48              >            pha
                       >            cmp_flag $ff
17af : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
17b1 : f003            >        beq skip0414
                       >        trap            ;failed not equal (non zero)
17b3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17b6 :                 >skip0414
                       >
17b6 : 28              >            plp         ;restore status
                        
17b7 : b8                       clv
                                tst_stat $ff-overfl
17b8 : 08              >            php         ;save status
17b9 : 68              >            pla         ;use stack to retrieve status
17ba : 48              >            pha
                       >            cmp_flag $ff-overfl
17bb : c9bf            >            cmp #($ff-overfl|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
17bd : f003            >        beq skip0418
                       >        trap            ;failed not equal (non zero)
17bf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17c2 :                 >skip0418
                       >
17c2 : 28              >            plp         ;restore status
                        
                                set_stat 0
                       >            load_flag 0
17c3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
17c5 : 48              >            pha         ;use stack to load status
17c6 : 28              >            plp
                        
                                tst_stat 0
17c7 : 08              >            php         ;save status
17c8 : 68              >            pla         ;use stack to retrieve status
17c9 : 48              >            pha
                       >            cmp_flag 0
17ca : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
17cc : f003            >        beq skip0424
                       >        trap            ;failed not equal (non zero)
17ce : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17d1 :                 >skip0424
                       >
17d1 : 28              >            plp         ;restore status
                        
17d2 : 38                       sec
                                tst_stat carry
17d3 : 08              >            php         ;save status
17d4 : 68              >            pla         ;use stack to retrieve status
17d5 : 48              >            pha
                       >            cmp_flag carry
17d6 : c931            >            cmp #(carry|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
17d8 : f003            >        beq skip0428
                       >        trap            ;failed not equal (non zero)
17da : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17dd :                 >skip0428
                       >
17dd : 28              >            plp         ;restore status
                        
17de : 18                       clc
                                tst_stat 0  
17df : 08              >            php         ;save status
17e0 : 68              >            pla         ;use stack to retrieve status
17e1 : 48              >            pha
                       >            cmp_flag 0  
17e2 : c930            >            cmp #(0  |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
17e4 : f003            >        beq skip0432
                       >        trap            ;failed not equal (non zero)
17e6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17e9 :                 >skip0432
                       >
17e9 : 28              >            plp         ;restore status
                        
                            if I_flag = 3
17ea : 78                       sei
                                tst_stat intdis
17eb : 08              >            php         ;save status
17ec : 68              >            pla         ;use stack to retrieve status
17ed : 48              >            pha
                       >            cmp_flag intdis
17ee : c934            >            cmp #(intdis|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
17f0 : f003            >        beq skip0436
                       >        trap            ;failed not equal (non zero)
17f2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17f5 :                 >skip0436
                       >
17f5 : 28              >            plp         ;restore status
                        
17f6 : 58                       cli
                                tst_stat 0
17f7 : 08              >            php         ;save status
17f8 : 68              >            pla         ;use stack to retrieve status
17f9 : 48              >            pha
                       >            cmp_flag 0
17fa : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
17fc : f003            >        beq skip0440
                       >        trap            ;failed not equal (non zero)
17fe : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1801 :                 >skip0440
                       >
1801 : 28              >            plp         ;restore status
                        
                            endif  
1802 : f8                       sed
                                tst_stat decmode
1803 : 08              >            php         ;save status
1804 : 68              >            pla         ;use stack to retrieve status
1805 : 48              >            pha
                       >            cmp_flag decmode
1806 : c938            >            cmp #(decmode|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1808 : f003            >        beq skip0444
                       >        trap            ;failed not equal (non zero)
180a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
180d :                 >skip0444
                       >
180d : 28              >            plp         ;restore status
                        
180e : d8                       cld
                                tst_stat 0  
180f : 08              >            php         ;save status
1810 : 68              >            pla         ;use stack to retrieve status
1811 : 48              >            pha
                       >            cmp_flag 0  
1812 : c930            >            cmp #(0  |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1814 : f003            >        beq skip0448
                       >        trap            ;failed not equal (non zero)
1816 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1819 :                 >skip0448
                       >
1819 : 28              >            plp         ;restore status
                        
                                set_stat overfl
                       >            load_flag overfl
181a : a940            >            lda #overfl             ;allow test to change I-flag (no mask)
                       >
181c : 48              >            pha         ;use stack to load status
181d : 28              >            plp
                        
                                tst_stat overfl
181e : 08              >            php         ;save status
181f : 68              >            pla         ;use stack to retrieve status
1820 : 48              >            pha
                       >            cmp_flag overfl
1821 : c970            >            cmp #(overfl|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1823 : f003            >        beq skip0454
                       >        trap            ;failed not equal (non zero)
1825 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1828 :                 >skip0454
                       >
1828 : 28              >            plp         ;restore status
                        
1829 : b8                       clv
                                tst_stat 0
182a : 08              >            php         ;save status
182b : 68              >            pla         ;use stack to retrieve status
182c : 48              >            pha
                       >            cmp_flag 0
182d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
182f : f003            >        beq skip0458
                       >        trap            ;failed not equal (non zero)
1831 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1834 :                 >skip0458
                       >
1834 : 28              >            plp         ;restore status
                        
                                next_test
1835 : ad0002          >            lda test_case   ;previous test
1838 : c90c            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
183a : f003            >        beq skip0461
                       >        trap            ;failed not equal (non zero)
183c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
183f :                 >skip0461
                       >
000d =                 >test_num = test_num + 1
183f : a90d            >            lda #test_num   ;*** next tests' number
1841 : 8d0002          >            sta test_case
1844 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        ; testing index register increment/decrement and transfer
                        ; INX INY DEX DEY TAX TXA TAY TYA 
1847 : a2fe                     ldx #$fe
                                set_stat $ff
                       >            load_flag $ff
1849 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
184b : 48              >            pha         ;use stack to load status
184c : 28              >            plp
                        
184d : e8                       inx             ;ff
                                tst_x $ff,$ff-zero
184e : 08              >            php         ;save flags
184f : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
1851 : f003            >        beq skip0466
                       >        trap            ;failed not equal (non zero)
1853 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1856 :                 >skip0466
                       >
1856 : 68              >            pla         ;load status
1857 : 48              >            pha
                       >            cmp_flag $ff-zero
1858 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
185a : f003            >        beq skip0469
                       >        trap            ;failed not equal (non zero)
185c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
185f :                 >skip0469
                       >
185f : 28              >            plp         ;restore status
                        
1860 : e8                       inx             ;00
                                tst_x 0,$ff-minus
1861 : 08              >            php         ;save flags
1862 : e000            >            cpx #0     ;test result
                       >            trap_ne
1864 : f003            >        beq skip0472
                       >        trap            ;failed not equal (non zero)
1866 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1869 :                 >skip0472
                       >
1869 : 68              >            pla         ;load status
186a : 48              >            pha
                       >            cmp_flag $ff-minus
186b : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
186d : f003            >        beq skip0475
                       >        trap            ;failed not equal (non zero)
186f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1872 :                 >skip0475
                       >
1872 : 28              >            plp         ;restore status
                        
1873 : e8                       inx             ;01
                                tst_x 1,$ff-minus-zero
1874 : 08              >            php         ;save flags
1875 : e001            >            cpx #1     ;test result
                       >            trap_ne
1877 : f003            >        beq skip0478
                       >        trap            ;failed not equal (non zero)
1879 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
187c :                 >skip0478
                       >
187c : 68              >            pla         ;load status
187d : 48              >            pha
                       >            cmp_flag $ff-minus-zero
187e : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1880 : f003            >        beq skip0481
                       >        trap            ;failed not equal (non zero)
1882 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1885 :                 >skip0481
                       >
1885 : 28              >            plp         ;restore status
                        
1886 : ca                       dex             ;00
                                tst_x 0,$ff-minus
1887 : 08              >            php         ;save flags
1888 : e000            >            cpx #0     ;test result
                       >            trap_ne
188a : f003            >        beq skip0484
                       >        trap            ;failed not equal (non zero)
188c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
188f :                 >skip0484
                       >
188f : 68              >            pla         ;load status
1890 : 48              >            pha
                       >            cmp_flag $ff-minus
1891 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1893 : f003            >        beq skip0487
                       >        trap            ;failed not equal (non zero)
1895 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1898 :                 >skip0487
                       >
1898 : 28              >            plp         ;restore status
                        
1899 : ca                       dex             ;ff
                                tst_x $ff,$ff-zero
189a : 08              >            php         ;save flags
189b : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
189d : f003            >        beq skip0490
                       >        trap            ;failed not equal (non zero)
189f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18a2 :                 >skip0490
                       >
18a2 : 68              >            pla         ;load status
18a3 : 48              >            pha
                       >            cmp_flag $ff-zero
18a4 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
18a6 : f003            >        beq skip0493
                       >        trap            ;failed not equal (non zero)
18a8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18ab :                 >skip0493
                       >
18ab : 28              >            plp         ;restore status
                        
18ac : ca                       dex             ;fe
                                set_stat 0
                       >            load_flag 0
18ad : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
18af : 48              >            pha         ;use stack to load status
18b0 : 28              >            plp
                        
18b1 : e8                       inx             ;ff
                                tst_x $ff,minus
18b2 : 08              >            php         ;save flags
18b3 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
18b5 : f003            >        beq skip0498
                       >        trap            ;failed not equal (non zero)
18b7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18ba :                 >skip0498
                       >
18ba : 68              >            pla         ;load status
18bb : 48              >            pha
                       >            cmp_flag minus
18bc : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
18be : f003            >        beq skip0501
                       >        trap            ;failed not equal (non zero)
18c0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18c3 :                 >skip0501
                       >
18c3 : 28              >            plp         ;restore status
                        
18c4 : e8                       inx             ;00
                                tst_x 0,zero
18c5 : 08              >            php         ;save flags
18c6 : e000            >            cpx #0     ;test result
                       >            trap_ne
18c8 : f003            >        beq skip0504
                       >        trap            ;failed not equal (non zero)
18ca : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18cd :                 >skip0504
                       >
18cd : 68              >            pla         ;load status
18ce : 48              >            pha
                       >            cmp_flag zero
18cf : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
18d1 : f003            >        beq skip0507
                       >        trap            ;failed not equal (non zero)
18d3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18d6 :                 >skip0507
                       >
18d6 : 28              >            plp         ;restore status
                        
18d7 : e8                       inx             ;01
                                tst_x 1,0
18d8 : 08              >            php         ;save flags
18d9 : e001            >            cpx #1     ;test result
                       >            trap_ne
18db : f003            >        beq skip0510
                       >        trap            ;failed not equal (non zero)
18dd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18e0 :                 >skip0510
                       >
18e0 : 68              >            pla         ;load status
18e1 : 48              >            pha
                       >            cmp_flag 0
18e2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
18e4 : f003            >        beq skip0513
                       >        trap            ;failed not equal (non zero)
18e6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18e9 :                 >skip0513
                       >
18e9 : 28              >            plp         ;restore status
                        
18ea : ca                       dex             ;00
                                tst_x 0,zero
18eb : 08              >            php         ;save flags
18ec : e000            >            cpx #0     ;test result
                       >            trap_ne
18ee : f003            >        beq skip0516
                       >        trap            ;failed not equal (non zero)
18f0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18f3 :                 >skip0516
                       >
18f3 : 68              >            pla         ;load status
18f4 : 48              >            pha
                       >            cmp_flag zero
18f5 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
18f7 : f003            >        beq skip0519
                       >        trap            ;failed not equal (non zero)
18f9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18fc :                 >skip0519
                       >
18fc : 28              >            plp         ;restore status
                        
18fd : ca                       dex             ;ff
                                tst_x $ff,minus
18fe : 08              >            php         ;save flags
18ff : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
1901 : f003            >        beq skip0522
                       >        trap            ;failed not equal (non zero)
1903 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1906 :                 >skip0522
                       >
1906 : 68              >            pla         ;load status
1907 : 48              >            pha
                       >            cmp_flag minus
1908 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
190a : f003            >        beq skip0525
                       >        trap            ;failed not equal (non zero)
190c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
190f :                 >skip0525
                       >
190f : 28              >            plp         ;restore status
                        
                        
1910 : a0fe                     ldy #$fe
                                set_stat $ff
                       >            load_flag $ff
1912 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1914 : 48              >            pha         ;use stack to load status
1915 : 28              >            plp
                        
1916 : c8                       iny             ;ff
                                tst_y $ff,$ff-zero
1917 : 08              >            php         ;save flags
1918 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
191a : f003            >        beq skip0530
                       >        trap            ;failed not equal (non zero)
191c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
191f :                 >skip0530
                       >
191f : 68              >            pla         ;load status
1920 : 48              >            pha
                       >            cmp_flag $ff-zero
1921 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1923 : f003            >        beq skip0533
                       >        trap            ;failed not equal (non zero)
1925 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1928 :                 >skip0533
                       >
1928 : 28              >            plp         ;restore status
                        
1929 : c8                       iny             ;00
                                tst_y 0,$ff-minus
192a : 08              >            php         ;save flags
192b : c000            >            cpy #0     ;test result
                       >            trap_ne
192d : f003            >        beq skip0536
                       >        trap            ;failed not equal (non zero)
192f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1932 :                 >skip0536
                       >
1932 : 68              >            pla         ;load status
1933 : 48              >            pha
                       >            cmp_flag $ff-minus
1934 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1936 : f003            >        beq skip0539
                       >        trap            ;failed not equal (non zero)
1938 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
193b :                 >skip0539
                       >
193b : 28              >            plp         ;restore status
                        
193c : c8                       iny             ;01
                                tst_y 1,$ff-minus-zero
193d : 08              >            php         ;save flags
193e : c001            >            cpy #1     ;test result
                       >            trap_ne
1940 : f003            >        beq skip0542
                       >        trap            ;failed not equal (non zero)
1942 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1945 :                 >skip0542
                       >
1945 : 68              >            pla         ;load status
1946 : 48              >            pha
                       >            cmp_flag $ff-minus-zero
1947 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1949 : f003            >        beq skip0545
                       >        trap            ;failed not equal (non zero)
194b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
194e :                 >skip0545
                       >
194e : 28              >            plp         ;restore status
                        
194f : 88                       dey             ;00
                                tst_y 0,$ff-minus
1950 : 08              >            php         ;save flags
1951 : c000            >            cpy #0     ;test result
                       >            trap_ne
1953 : f003            >        beq skip0548
                       >        trap            ;failed not equal (non zero)
1955 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1958 :                 >skip0548
                       >
1958 : 68              >            pla         ;load status
1959 : 48              >            pha
                       >            cmp_flag $ff-minus
195a : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
195c : f003            >        beq skip0551
                       >        trap            ;failed not equal (non zero)
195e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1961 :                 >skip0551
                       >
1961 : 28              >            plp         ;restore status
                        
1962 : 88                       dey             ;ff
                                tst_y $ff,$ff-zero
1963 : 08              >            php         ;save flags
1964 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
1966 : f003            >        beq skip0554
                       >        trap            ;failed not equal (non zero)
1968 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
196b :                 >skip0554
                       >
196b : 68              >            pla         ;load status
196c : 48              >            pha
                       >            cmp_flag $ff-zero
196d : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
196f : f003            >        beq skip0557
                       >        trap            ;failed not equal (non zero)
1971 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1974 :                 >skip0557
                       >
1974 : 28              >            plp         ;restore status
                        
1975 : 88                       dey             ;fe
                                set_stat 0
                       >            load_flag 0
1976 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1978 : 48              >            pha         ;use stack to load status
1979 : 28              >            plp
                        
197a : c8                       iny             ;ff
                                tst_y $ff,0+minus
197b : 08              >            php         ;save flags
197c : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
197e : f003            >        beq skip0562
                       >        trap            ;failed not equal (non zero)
1980 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1983 :                 >skip0562
                       >
1983 : 68              >            pla         ;load status
1984 : 48              >            pha
                       >            cmp_flag 0+minus
1985 : c9b0            >            cmp #(0+minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1987 : f003            >        beq skip0565
                       >        trap            ;failed not equal (non zero)
1989 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
198c :                 >skip0565
                       >
198c : 28              >            plp         ;restore status
                        
198d : c8                       iny             ;00
                                tst_y 0,zero
198e : 08              >            php         ;save flags
198f : c000            >            cpy #0     ;test result
                       >            trap_ne
1991 : f003            >        beq skip0568
                       >        trap            ;failed not equal (non zero)
1993 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1996 :                 >skip0568
                       >
1996 : 68              >            pla         ;load status
1997 : 48              >            pha
                       >            cmp_flag zero
1998 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
199a : f003            >        beq skip0571
                       >        trap            ;failed not equal (non zero)
199c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
199f :                 >skip0571
                       >
199f : 28              >            plp         ;restore status
                        
19a0 : c8                       iny             ;01
                                tst_y 1,0
19a1 : 08              >            php         ;save flags
19a2 : c001            >            cpy #1     ;test result
                       >            trap_ne
19a4 : f003            >        beq skip0574
                       >        trap            ;failed not equal (non zero)
19a6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19a9 :                 >skip0574
                       >
19a9 : 68              >            pla         ;load status
19aa : 48              >            pha
                       >            cmp_flag 0
19ab : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
19ad : f003            >        beq skip0577
                       >        trap            ;failed not equal (non zero)
19af : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19b2 :                 >skip0577
                       >
19b2 : 28              >            plp         ;restore status
                        
19b3 : 88                       dey             ;00
                                tst_y 0,zero
19b4 : 08              >            php         ;save flags
19b5 : c000            >            cpy #0     ;test result
                       >            trap_ne
19b7 : f003            >        beq skip0580
                       >        trap            ;failed not equal (non zero)
19b9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19bc :                 >skip0580
                       >
19bc : 68              >            pla         ;load status
19bd : 48              >            pha
                       >            cmp_flag zero
19be : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
19c0 : f003            >        beq skip0583
                       >        trap            ;failed not equal (non zero)
19c2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19c5 :                 >skip0583
                       >
19c5 : 28              >            plp         ;restore status
                        
19c6 : 88                       dey             ;ff
                                tst_y $ff,minus
19c7 : 08              >            php         ;save flags
19c8 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
19ca : f003            >        beq skip0586
                       >        trap            ;failed not equal (non zero)
19cc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19cf :                 >skip0586
                       >
19cf : 68              >            pla         ;load status
19d0 : 48              >            pha
                       >            cmp_flag minus
19d1 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
19d3 : f003            >        beq skip0589
                       >        trap            ;failed not equal (non zero)
19d5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19d8 :                 >skip0589
                       >
19d8 : 28              >            plp         ;restore status
                        
                                        
19d9 : a2ff                     ldx #$ff
                                set_stat $ff
                       >            load_flag $ff
19db : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
19dd : 48              >            pha         ;use stack to load status
19de : 28              >            plp
                        
19df : 8a                       txa
                                tst_a $ff,$ff-zero
19e0 : 08              >            php         ;save flags
19e1 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
19e3 : f003            >        beq skip0594
                       >        trap            ;failed not equal (non zero)
19e5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19e8 :                 >skip0594
                       >
19e8 : 68              >            pla         ;load status
19e9 : 48              >            pha
                       >            cmp_flag $ff-zero
19ea : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
19ec : f003            >        beq skip0597
                       >        trap            ;failed not equal (non zero)
19ee : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19f1 :                 >skip0597
                       >
19f1 : 28              >            plp         ;restore status
                        
19f2 : 08                       php
19f3 : e8                       inx             ;00
19f4 : 28                       plp
19f5 : 8a                       txa
                                tst_a 0,$ff-minus
19f6 : 08              >            php         ;save flags
19f7 : c900            >            cmp #0     ;test result
                       >            trap_ne
19f9 : f003            >        beq skip0600
                       >        trap            ;failed not equal (non zero)
19fb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19fe :                 >skip0600
                       >
19fe : 68              >            pla         ;load status
19ff : 48              >            pha
                       >            cmp_flag $ff-minus
1a00 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a02 : f003            >        beq skip0603
                       >        trap            ;failed not equal (non zero)
1a04 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a07 :                 >skip0603
                       >
1a07 : 28              >            plp         ;restore status
                        
1a08 : 08                       php
1a09 : e8                       inx             ;01
1a0a : 28                       plp
1a0b : 8a                       txa
                                tst_a 1,$ff-minus-zero
1a0c : 08              >            php         ;save flags
1a0d : c901            >            cmp #1     ;test result
                       >            trap_ne
1a0f : f003            >        beq skip0606
                       >        trap            ;failed not equal (non zero)
1a11 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a14 :                 >skip0606
                       >
1a14 : 68              >            pla         ;load status
1a15 : 48              >            pha
                       >            cmp_flag $ff-minus-zero
1a16 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a18 : f003            >        beq skip0609
                       >        trap            ;failed not equal (non zero)
1a1a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a1d :                 >skip0609
                       >
1a1d : 28              >            plp         ;restore status
                        
                                set_stat 0
                       >            load_flag 0
1a1e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1a20 : 48              >            pha         ;use stack to load status
1a21 : 28              >            plp
                        
1a22 : 8a                       txa
                                tst_a 1,0
1a23 : 08              >            php         ;save flags
1a24 : c901            >            cmp #1     ;test result
                       >            trap_ne
1a26 : f003            >        beq skip0614
                       >        trap            ;failed not equal (non zero)
1a28 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a2b :                 >skip0614
                       >
1a2b : 68              >            pla         ;load status
1a2c : 48              >            pha
                       >            cmp_flag 0
1a2d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a2f : f003            >        beq skip0617
                       >        trap            ;failed not equal (non zero)
1a31 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a34 :                 >skip0617
                       >
1a34 : 28              >            plp         ;restore status
                        
1a35 : 08                       php
1a36 : ca                       dex             ;00
1a37 : 28                       plp
1a38 : 8a                       txa
                                tst_a 0,zero
1a39 : 08              >            php         ;save flags
1a3a : c900            >            cmp #0     ;test result
                       >            trap_ne
1a3c : f003            >        beq skip0620
                       >        trap            ;failed not equal (non zero)
1a3e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a41 :                 >skip0620
                       >
1a41 : 68              >            pla         ;load status
1a42 : 48              >            pha
                       >            cmp_flag zero
1a43 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a45 : f003            >        beq skip0623
                       >        trap            ;failed not equal (non zero)
1a47 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a4a :                 >skip0623
                       >
1a4a : 28              >            plp         ;restore status
                        
1a4b : 08                       php
1a4c : ca                       dex             ;ff
1a4d : 28                       plp
1a4e : 8a                       txa
                                tst_a $ff,minus
1a4f : 08              >            php         ;save flags
1a50 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
1a52 : f003            >        beq skip0626
                       >        trap            ;failed not equal (non zero)
1a54 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a57 :                 >skip0626
                       >
1a57 : 68              >            pla         ;load status
1a58 : 48              >            pha
                       >            cmp_flag minus
1a59 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a5b : f003            >        beq skip0629
                       >        trap            ;failed not equal (non zero)
1a5d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a60 :                 >skip0629
                       >
1a60 : 28              >            plp         ;restore status
                        
                                                
1a61 : a0ff                     ldy #$ff
                                set_stat $ff
                       >            load_flag $ff
1a63 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1a65 : 48              >            pha         ;use stack to load status
1a66 : 28              >            plp
                        
1a67 : 98                       tya
                                tst_a $ff,$ff-zero
1a68 : 08              >            php         ;save flags
1a69 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
1a6b : f003            >        beq skip0634
                       >        trap            ;failed not equal (non zero)
1a6d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a70 :                 >skip0634
                       >
1a70 : 68              >            pla         ;load status
1a71 : 48              >            pha
                       >            cmp_flag $ff-zero
1a72 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a74 : f003            >        beq skip0637
                       >        trap            ;failed not equal (non zero)
1a76 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a79 :                 >skip0637
                       >
1a79 : 28              >            plp         ;restore status
                        
1a7a : 08                       php
1a7b : c8                       iny             ;00
1a7c : 28                       plp
1a7d : 98                       tya
                                tst_a 0,$ff-minus
1a7e : 08              >            php         ;save flags
1a7f : c900            >            cmp #0     ;test result
                       >            trap_ne
1a81 : f003            >        beq skip0640
                       >        trap            ;failed not equal (non zero)
1a83 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a86 :                 >skip0640
                       >
1a86 : 68              >            pla         ;load status
1a87 : 48              >            pha
                       >            cmp_flag $ff-minus
1a88 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a8a : f003            >        beq skip0643
                       >        trap            ;failed not equal (non zero)
1a8c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a8f :                 >skip0643
                       >
1a8f : 28              >            plp         ;restore status
                        
1a90 : 08                       php
1a91 : c8                       iny             ;01
1a92 : 28                       plp
1a93 : 98                       tya
                                tst_a 1,$ff-minus-zero
1a94 : 08              >            php         ;save flags
1a95 : c901            >            cmp #1     ;test result
                       >            trap_ne
1a97 : f003            >        beq skip0646
                       >        trap            ;failed not equal (non zero)
1a99 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a9c :                 >skip0646
                       >
1a9c : 68              >            pla         ;load status
1a9d : 48              >            pha
                       >            cmp_flag $ff-minus-zero
1a9e : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1aa0 : f003            >        beq skip0649
                       >        trap            ;failed not equal (non zero)
1aa2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1aa5 :                 >skip0649
                       >
1aa5 : 28              >            plp         ;restore status
                        
                                set_stat 0
                       >            load_flag 0
1aa6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1aa8 : 48              >            pha         ;use stack to load status
1aa9 : 28              >            plp
                        
1aaa : 98                       tya
                                tst_a 1,0
1aab : 08              >            php         ;save flags
1aac : c901            >            cmp #1     ;test result
                       >            trap_ne
1aae : f003            >        beq skip0654
                       >        trap            ;failed not equal (non zero)
1ab0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ab3 :                 >skip0654
                       >
1ab3 : 68              >            pla         ;load status
1ab4 : 48              >            pha
                       >            cmp_flag 0
1ab5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ab7 : f003            >        beq skip0657
                       >        trap            ;failed not equal (non zero)
1ab9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1abc :                 >skip0657
                       >
1abc : 28              >            plp         ;restore status
                        
1abd : 08                       php
1abe : 88                       dey             ;00
1abf : 28                       plp
1ac0 : 98                       tya
                                tst_a 0,zero
1ac1 : 08              >            php         ;save flags
1ac2 : c900            >            cmp #0     ;test result
                       >            trap_ne
1ac4 : f003            >        beq skip0660
                       >        trap            ;failed not equal (non zero)
1ac6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ac9 :                 >skip0660
                       >
1ac9 : 68              >            pla         ;load status
1aca : 48              >            pha
                       >            cmp_flag zero
1acb : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1acd : f003            >        beq skip0663
                       >        trap            ;failed not equal (non zero)
1acf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ad2 :                 >skip0663
                       >
1ad2 : 28              >            plp         ;restore status
                        
1ad3 : 08                       php
1ad4 : 88                       dey             ;ff
1ad5 : 28                       plp
1ad6 : 98                       tya
                                tst_a $ff,minus
1ad7 : 08              >            php         ;save flags
1ad8 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
1ada : f003            >        beq skip0666
                       >        trap            ;failed not equal (non zero)
1adc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1adf :                 >skip0666
                       >
1adf : 68              >            pla         ;load status
1ae0 : 48              >            pha
                       >            cmp_flag minus
1ae1 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ae3 : f003            >        beq skip0669
                       >        trap            ;failed not equal (non zero)
1ae5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ae8 :                 >skip0669
                       >
1ae8 : 28              >            plp         ;restore status
                        
                        
                                load_flag $ff
1ae9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                        
1aeb : 48                       pha
1aec : a2ff                     ldx #$ff        ;ff
1aee : 8a                       txa
1aef : 28                       plp             
1af0 : a8                       tay
                                tst_y $ff,$ff-zero
1af1 : 08              >            php         ;save flags
1af2 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
1af4 : f003            >        beq skip0673
                       >        trap            ;failed not equal (non zero)
1af6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1af9 :                 >skip0673
                       >
1af9 : 68              >            pla         ;load status
1afa : 48              >            pha
                       >            cmp_flag $ff-zero
1afb : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1afd : f003            >        beq skip0676
                       >        trap            ;failed not equal (non zero)
1aff : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b02 :                 >skip0676
                       >
1b02 : 28              >            plp         ;restore status
                        
1b03 : 08                       php
1b04 : e8                       inx             ;00
1b05 : 8a                       txa
1b06 : 28                       plp
1b07 : a8                       tay
                                tst_y 0,$ff-minus
1b08 : 08              >            php         ;save flags
1b09 : c000            >            cpy #0     ;test result
                       >            trap_ne
1b0b : f003            >        beq skip0679
                       >        trap            ;failed not equal (non zero)
1b0d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b10 :                 >skip0679
                       >
1b10 : 68              >            pla         ;load status
1b11 : 48              >            pha
                       >            cmp_flag $ff-minus
1b12 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b14 : f003            >        beq skip0682
                       >        trap            ;failed not equal (non zero)
1b16 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b19 :                 >skip0682
                       >
1b19 : 28              >            plp         ;restore status
                        
1b1a : 08                       php
1b1b : e8                       inx             ;01
1b1c : 8a                       txa
1b1d : 28                       plp
1b1e : a8                       tay
                                tst_y 1,$ff-minus-zero
1b1f : 08              >            php         ;save flags
1b20 : c001            >            cpy #1     ;test result
                       >            trap_ne
1b22 : f003            >        beq skip0685
                       >        trap            ;failed not equal (non zero)
1b24 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b27 :                 >skip0685
                       >
1b27 : 68              >            pla         ;load status
1b28 : 48              >            pha
                       >            cmp_flag $ff-minus-zero
1b29 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b2b : f003            >        beq skip0688
                       >        trap            ;failed not equal (non zero)
1b2d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b30 :                 >skip0688
                       >
1b30 : 28              >            plp         ;restore status
                        
                                load_flag 0
1b31 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                        
1b33 : 48                       pha
1b34 : a900                     lda #0
1b36 : 8a                       txa
1b37 : 28                       plp
1b38 : a8                       tay
                                tst_y 1,0
1b39 : 08              >            php         ;save flags
1b3a : c001            >            cpy #1     ;test result
                       >            trap_ne
1b3c : f003            >        beq skip0692
                       >        trap            ;failed not equal (non zero)
1b3e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b41 :                 >skip0692
                       >
1b41 : 68              >            pla         ;load status
1b42 : 48              >            pha
                       >            cmp_flag 0
1b43 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b45 : f003            >        beq skip0695
                       >        trap            ;failed not equal (non zero)
1b47 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b4a :                 >skip0695
                       >
1b4a : 28              >            plp         ;restore status
                        
1b4b : 08                       php
1b4c : ca                       dex             ;00
1b4d : 8a                       txa
1b4e : 28                       plp
1b4f : a8                       tay
                                tst_y 0,zero
1b50 : 08              >            php         ;save flags
1b51 : c000            >            cpy #0     ;test result
                       >            trap_ne
1b53 : f003            >        beq skip0698
                       >        trap            ;failed not equal (non zero)
1b55 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b58 :                 >skip0698
                       >
1b58 : 68              >            pla         ;load status
1b59 : 48              >            pha
                       >            cmp_flag zero
1b5a : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b5c : f003            >        beq skip0701
                       >        trap            ;failed not equal (non zero)
1b5e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b61 :                 >skip0701
                       >
1b61 : 28              >            plp         ;restore status
                        
1b62 : 08                       php
1b63 : ca                       dex             ;ff
1b64 : 8a                       txa
1b65 : 28                       plp
1b66 : a8                       tay
                                tst_y $ff,minus
1b67 : 08              >            php         ;save flags
1b68 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
1b6a : f003            >        beq skip0704
                       >        trap            ;failed not equal (non zero)
1b6c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b6f :                 >skip0704
                       >
1b6f : 68              >            pla         ;load status
1b70 : 48              >            pha
                       >            cmp_flag minus
1b71 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b73 : f003            >        beq skip0707
                       >        trap            ;failed not equal (non zero)
1b75 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b78 :                 >skip0707
                       >
1b78 : 28              >            plp         ;restore status
                        
                        
                        
                                load_flag $ff
1b79 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                        
1b7b : 48                       pha
1b7c : a0ff                     ldy #$ff        ;ff
1b7e : 98                       tya
1b7f : 28                       plp
1b80 : aa                       tax
                                tst_x $ff,$ff-zero
1b81 : 08              >            php         ;save flags
1b82 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
1b84 : f003            >        beq skip0711
                       >        trap            ;failed not equal (non zero)
1b86 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b89 :                 >skip0711
                       >
1b89 : 68              >            pla         ;load status
1b8a : 48              >            pha
                       >            cmp_flag $ff-zero
1b8b : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b8d : f003            >        beq skip0714
                       >        trap            ;failed not equal (non zero)
1b8f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b92 :                 >skip0714
                       >
1b92 : 28              >            plp         ;restore status
                        
1b93 : 08                       php
1b94 : c8                       iny             ;00
1b95 : 98                       tya
1b96 : 28                       plp
1b97 : aa                       tax
                                tst_x 0,$ff-minus
1b98 : 08              >            php         ;save flags
1b99 : e000            >            cpx #0     ;test result
                       >            trap_ne
1b9b : f003            >        beq skip0717
                       >        trap            ;failed not equal (non zero)
1b9d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ba0 :                 >skip0717
                       >
1ba0 : 68              >            pla         ;load status
1ba1 : 48              >            pha
                       >            cmp_flag $ff-minus
1ba2 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ba4 : f003            >        beq skip0720
                       >        trap            ;failed not equal (non zero)
1ba6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ba9 :                 >skip0720
                       >
1ba9 : 28              >            plp         ;restore status
                        
1baa : 08                       php
1bab : c8                       iny             ;01
1bac : 98                       tya
1bad : 28                       plp
1bae : aa                       tax
                                tst_x 1,$ff-minus-zero
1baf : 08              >            php         ;save flags
1bb0 : e001            >            cpx #1     ;test result
                       >            trap_ne
1bb2 : f003            >        beq skip0723
                       >        trap            ;failed not equal (non zero)
1bb4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bb7 :                 >skip0723
                       >
1bb7 : 68              >            pla         ;load status
1bb8 : 48              >            pha
                       >            cmp_flag $ff-minus-zero
1bb9 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1bbb : f003            >        beq skip0726
                       >        trap            ;failed not equal (non zero)
1bbd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bc0 :                 >skip0726
                       >
1bc0 : 28              >            plp         ;restore status
                        
                                load_flag 0
1bc1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                        
1bc3 : 48                       pha
1bc4 : a900                     lda #0          ;preset status
1bc6 : 98                       tya
1bc7 : 28                       plp
1bc8 : aa                       tax
                                tst_x 1,0
1bc9 : 08              >            php         ;save flags
1bca : e001            >            cpx #1     ;test result
                       >            trap_ne
1bcc : f003            >        beq skip0730
                       >        trap            ;failed not equal (non zero)
1bce : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bd1 :                 >skip0730
                       >
1bd1 : 68              >            pla         ;load status
1bd2 : 48              >            pha
                       >            cmp_flag 0
1bd3 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1bd5 : f003            >        beq skip0733
                       >        trap            ;failed not equal (non zero)
1bd7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bda :                 >skip0733
                       >
1bda : 28              >            plp         ;restore status
                        
1bdb : 08                       php
1bdc : 88                       dey             ;00
1bdd : 98                       tya
1bde : 28                       plp
1bdf : aa                       tax
                                tst_x 0,zero
1be0 : 08              >            php         ;save flags
1be1 : e000            >            cpx #0     ;test result
                       >            trap_ne
1be3 : f003            >        beq skip0736
                       >        trap            ;failed not equal (non zero)
1be5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1be8 :                 >skip0736
                       >
1be8 : 68              >            pla         ;load status
1be9 : 48              >            pha
                       >            cmp_flag zero
1bea : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1bec : f003            >        beq skip0739
                       >        trap            ;failed not equal (non zero)
1bee : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bf1 :                 >skip0739
                       >
1bf1 : 28              >            plp         ;restore status
                        
1bf2 : 08                       php
1bf3 : 88                       dey             ;ff
1bf4 : 98                       tya
1bf5 : 28                       plp
1bf6 : aa                       tax
                                tst_x $ff,minus
1bf7 : 08              >            php         ;save flags
1bf8 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
1bfa : f003            >        beq skip0742
                       >        trap            ;failed not equal (non zero)
1bfc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bff :                 >skip0742
                       >
1bff : 68              >            pla         ;load status
1c00 : 48              >            pha
                       >            cmp_flag minus
1c01 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c03 : f003            >        beq skip0745
                       >        trap            ;failed not equal (non zero)
1c05 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c08 :                 >skip0745
                       >
1c08 : 28              >            plp         ;restore status
                        
                                next_test
1c09 : ad0002          >            lda test_case   ;previous test
1c0c : c90d            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1c0e : f003            >        beq skip0748
                       >        trap            ;failed not equal (non zero)
1c10 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c13 :                 >skip0748
                       >
000e =                 >test_num = test_num + 1
1c13 : a90e            >            lda #test_num   ;*** next tests' number
1c15 : 8d0002          >            sta test_case
1c18 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                             
                        ;TSX sets NZ - TXS does not
                        ;  This section also tests for proper stack wrap around.
1c1b : a201                     ldx #1          ;01
                                set_stat $ff
                       >            load_flag $ff
1c1d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1c1f : 48              >            pha         ;use stack to load status
1c20 : 28              >            plp
                        
1c21 : 9a                       txs
1c22 : 08                       php
1c23 : ad0101                   lda $101
                                cmp_flag $ff
1c26 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1c28 : f003            >        beq skip0753
                       >        trap            ;failed not equal (non zero)
1c2a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c2d :                 >skip0753
                        
                                set_stat 0
                       >            load_flag 0
1c2d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1c2f : 48              >            pha         ;use stack to load status
1c30 : 28              >            plp
                        
1c31 : 9a                       txs
1c32 : 08                       php
1c33 : ad0101                   lda $101
                                cmp_flag 0
1c36 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1c38 : f003            >        beq skip0758
                       >        trap            ;failed not equal (non zero)
1c3a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c3d :                 >skip0758
                        
1c3d : ca                       dex             ;00
                                set_stat $ff
                       >            load_flag $ff
1c3e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1c40 : 48              >            pha         ;use stack to load status
1c41 : 28              >            plp
                        
1c42 : 9a                       txs
1c43 : 08                       php
1c44 : ad0001                   lda $100
                                cmp_flag $ff
1c47 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1c49 : f003            >        beq skip0763
                       >        trap            ;failed not equal (non zero)
1c4b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c4e :                 >skip0763
                        
                                set_stat 0
                       >            load_flag 0
1c4e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1c50 : 48              >            pha         ;use stack to load status
1c51 : 28              >            plp
                        
1c52 : 9a                       txs
1c53 : 08                       php
1c54 : ad0001                   lda $100
                                cmp_flag 0
1c57 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1c59 : f003            >        beq skip0768
                       >        trap            ;failed not equal (non zero)
1c5b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c5e :                 >skip0768
                        
1c5e : ca                       dex             ;ff
                                set_stat $ff
                       >            load_flag $ff
1c5f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1c61 : 48              >            pha         ;use stack to load status
1c62 : 28              >            plp
                        
1c63 : 9a                       txs
1c64 : 08                       php
1c65 : adff01                   lda $1ff
                                cmp_flag $ff
1c68 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1c6a : f003            >        beq skip0773
                       >        trap            ;failed not equal (non zero)
1c6c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c6f :                 >skip0773
                        
                                set_stat 0
                       >            load_flag 0
1c6f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1c71 : 48              >            pha         ;use stack to load status
1c72 : 28              >            plp
                        
1c73 : 9a                       txs
1c74 : 08                       php
1c75 : adff01                   lda $1ff
                                cmp_flag 0
1c78 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                        
                                
1c7a : a201                     ldx #1
1c7c : 9a                       txs             ;sp=01
                                set_stat $ff
                       >            load_flag $ff
1c7d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1c7f : 48              >            pha         ;use stack to load status
1c80 : 28              >            plp
                        
1c81 : ba                       tsx             ;clears Z, N
1c82 : 08                       php             ;sp=00
1c83 : e001                     cpx #1
                                trap_ne
1c85 : f003            >        beq skip0780
                       >        trap            ;failed not equal (non zero)
1c87 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c8a :                 >skip0780
                        
1c8a : ad0101                   lda $101
                                cmp_flag $ff-minus-zero
1c8d : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1c8f : f003            >        beq skip0783
                       >        trap            ;failed not equal (non zero)
1c91 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c94 :                 >skip0783
                        
                                set_stat $ff
                       >            load_flag $ff
1c94 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1c96 : 48              >            pha         ;use stack to load status
1c97 : 28              >            plp
                        
1c98 : ba                       tsx             ;clears N, sets Z
1c99 : 08                       php             ;sp=ff
1c9a : e000                     cpx #0
                                trap_ne
1c9c : f003            >        beq skip0787
                       >        trap            ;failed not equal (non zero)
1c9e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ca1 :                 >skip0787
                        
1ca1 : ad0001                   lda $100
                                cmp_flag $ff-minus
1ca4 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1ca6 : f003            >        beq skip0790
                       >        trap            ;failed not equal (non zero)
1ca8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1cab :                 >skip0790
                        
                                set_stat $ff
                       >            load_flag $ff
1cab : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1cad : 48              >            pha         ;use stack to load status
1cae : 28              >            plp
                        
1caf : ba                       tsx             ;clears N, sets Z
1cb0 : 08                       php             ;sp=fe
1cb1 : e0ff                     cpx #$ff
                                trap_ne
1cb3 : f003            >        beq skip0794
                       >        trap            ;failed not equal (non zero)
1cb5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1cb8 :                 >skip0794
                        
1cb8 : adff01                   lda $1ff
                                cmp_flag $ff-zero
1cbb : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1cbd : f003            >        beq skip0797
                       >        trap            ;failed not equal (non zero)
1cbf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1cc2 :                 >skip0797
                        
                                
1cc2 : a201                     ldx #1
1cc4 : 9a                       txs             ;sp=01
                                set_stat 0
                       >            load_flag 0
1cc5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1cc7 : 48              >            pha         ;use stack to load status
1cc8 : 28              >            plp
                        
1cc9 : ba                       tsx             ;clears Z, N
1cca : 08                       php             ;sp=00
1ccb : e001                     cpx #1
                                trap_ne
1ccd : f003            >        beq skip0801
                       >        trap            ;failed not equal (non zero)
1ccf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1cd2 :                 >skip0801
                        
1cd2 : ad0101                   lda $101
                                cmp_flag 0
1cd5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1cd7 : f003            >        beq skip0804
                       >        trap            ;failed not equal (non zero)
1cd9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1cdc :                 >skip0804
                        
                                set_stat 0
                       >            load_flag 0
1cdc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1cde : 48              >            pha         ;use stack to load status
1cdf : 28              >            plp
                        
1ce0 : ba                       tsx             ;clears N, sets Z
1ce1 : 08                       php             ;sp=ff
1ce2 : e000                     cpx #0
                                trap_ne
1ce4 : f003            >        beq skip0808
                       >        trap            ;failed not equal (non zero)
1ce6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ce9 :                 >skip0808
                        
1ce9 : ad0001                   lda $100
                                cmp_flag zero
1cec : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1cee : f003            >        beq skip0811
                       >        trap            ;failed not equal (non zero)
1cf0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1cf3 :                 >skip0811
                        
                                set_stat 0
                       >            load_flag 0
1cf3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1cf5 : 48              >            pha         ;use stack to load status
1cf6 : 28              >            plp
                        
1cf7 : ba                       tsx             ;clears N, sets Z
1cf8 : 08                       php             ;sp=fe
1cf9 : e0ff                     cpx #$ff
                                trap_ne
1cfb : f003            >        beq skip0815
                       >        trap            ;failed not equal (non zero)
1cfd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d00 :                 >skip0815
                        
1d00 : adff01                   lda $1ff
                                cmp_flag minus
1d03 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1d05 : f003            >        beq skip0818
                       >        trap            ;failed not equal (non zero)
1d07 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d0a :                 >skip0818
                        
1d0a : 68                       pla             ;sp=ff
                                next_test
1d0b : ad0002          >            lda test_case   ;previous test
1d0e : c90e            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1d10 : f003            >        beq skip0821
                       >        trap            ;failed not equal (non zero)
1d12 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d15 :                 >skip0821
                       >
000f =                 >test_num = test_num + 1
1d15 : a90f            >            lda #test_num   ;*** next tests' number
1d17 : 8d0002          >            sta test_case
1d1a : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                        ; testing index register load & store LDY LDX STY STX all addressing modes
                        ; LDX / STX - zp,y / abs,y
1d1d : a003                     ldy #3
1d1f :                  tldx    
                                set_stat 0
                       >            load_flag 0
1d1f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1d21 : 48              >            pha         ;use stack to load status
1d22 : 28              >            plp
                        
1d23 : b619                     ldx zp1,y
1d25 : 08                       php         ;test stores do not alter flags
1d26 : 8a                       txa
1d27 : 49c3                     eor #$c3
1d29 : 28                       plp
1d2a : 990302                   sta abst,y
1d2d : 08                       php         ;flags after load/store sequence
1d2e : 49c3                     eor #$c3
1d30 : d90802                   cmp abs1,y  ;test result
                                trap_ne
1d33 : f003            >        beq skip0825
                       >        trap            ;failed not equal (non zero)
1d35 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d38 :                 >skip0825
                        
1d38 : 68                       pla         ;load status
                                eor_flag 0
1d39 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1d3b : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
1d3e : f003            >        beq skip0828
                       >        trap            ;failed not equal (non zero)
1d40 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d43 :                 >skip0828
                        
1d43 : 88                       dey
1d44 : 10d9                     bpl tldx                  
                        
1d46 : a003                     ldy #3
1d48 :                  tldx1   
                                set_stat $ff
                       >            load_flag $ff
1d48 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1d4a : 48              >            pha         ;use stack to load status
1d4b : 28              >            plp
                        
1d4c : b619                     ldx zp1,y
1d4e : 08                       php         ;test stores do not alter flags
1d4f : 8a                       txa
1d50 : 49c3                     eor #$c3
1d52 : 28                       plp
1d53 : 990302                   sta abst,y
1d56 : 08                       php         ;flags after load/store sequence
1d57 : 49c3                     eor #$c3
1d59 : d90802                   cmp abs1,y  ;test result
                                trap_ne
1d5c : f003            >        beq skip0832
                       >        trap            ;failed not equal (non zero)
1d5e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d61 :                 >skip0832
                        
1d61 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1d62 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1d64 : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
1d67 : f003            >        beq skip0835
                       >        trap            ;failed not equal (non zero)
1d69 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d6c :                 >skip0835
                        
1d6c : 88                       dey
1d6d : 10d9                     bpl tldx1                  
                        
1d6f : a003                     ldy #3
1d71 :                  tldx2   
                                set_stat 0
                       >            load_flag 0
1d71 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1d73 : 48              >            pha         ;use stack to load status
1d74 : 28              >            plp
                        
1d75 : be0802                   ldx abs1,y
1d78 : 08                       php         ;test stores do not alter flags
1d79 : 8a                       txa
1d7a : 49c3                     eor #$c3
1d7c : aa                       tax
1d7d : 28                       plp
1d7e : 9612                     stx zpt,y
1d80 : 08                       php         ;flags after load/store sequence
1d81 : 49c3                     eor #$c3
1d83 : d91900                   cmp zp1,y   ;test result
                                trap_ne
1d86 : f003            >        beq skip0839
                       >        trap            ;failed not equal (non zero)
1d88 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d8b :                 >skip0839
                        
1d8b : 68                       pla         ;load status
                                eor_flag 0
1d8c : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1d8e : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
1d91 : f003            >        beq skip0842
                       >        trap            ;failed not equal (non zero)
1d93 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d96 :                 >skip0842
                        
1d96 : 88                       dey
1d97 : 10d8                     bpl tldx2                  
                        
1d99 : a003                     ldy #3
1d9b :                  tldx3   
                                set_stat $ff
                       >            load_flag $ff
1d9b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1d9d : 48              >            pha         ;use stack to load status
1d9e : 28              >            plp
                        
1d9f : be0802                   ldx abs1,y
1da2 : 08                       php         ;test stores do not alter flags
1da3 : 8a                       txa
1da4 : 49c3                     eor #$c3
1da6 : aa                       tax
1da7 : 28                       plp
1da8 : 9612                     stx zpt,y
1daa : 08                       php         ;flags after load/store sequence
1dab : 49c3                     eor #$c3
1dad : d91900                   cmp zp1,y   ;test result
                                trap_ne
1db0 : f003            >        beq skip0846
                       >        trap            ;failed not equal (non zero)
1db2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1db5 :                 >skip0846
                        
1db5 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1db6 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1db8 : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
1dbb : f003            >        beq skip0849
                       >        trap            ;failed not equal (non zero)
1dbd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1dc0 :                 >skip0849
                        
1dc0 : 88                       dey
1dc1 : 10d8                     bpl tldx3
                                
1dc3 : a003                     ldy #3      ;testing store result
1dc5 : a200                     ldx #0
1dc7 : b91200           tstx    lda zpt,y
1dca : 49c3                     eor #$c3
1dcc : d91900                   cmp zp1,y
                                trap_ne     ;store to zp data
1dcf : f003            >        beq skip0851
                       >        trap            ;failed not equal (non zero)
1dd1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1dd4 :                 >skip0851
                        
1dd4 : 9612                     stx zpt,y   ;clear                
1dd6 : b90302                   lda abst,y
1dd9 : 49c3                     eor #$c3
1ddb : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
1dde : f003            >        beq skip0853
                       >        trap            ;failed not equal (non zero)
1de0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1de3 :                 >skip0853
                        
1de3 : 8a                       txa
1de4 : 990302                   sta abst,y  ;clear                
1de7 : 88                       dey
1de8 : 10dd                     bpl tstx
                                next_test
1dea : ad0002          >            lda test_case   ;previous test
1ded : c90f            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1def : f003            >        beq skip0856
                       >        trap            ;failed not equal (non zero)
1df1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1df4 :                 >skip0856
                       >
0010 =                 >test_num = test_num + 1
1df4 : a910            >            lda #test_num   ;*** next tests' number
1df6 : 8d0002          >            sta test_case
1df9 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                        ; indexed wraparound test (only zp should wrap)
1dfc : a0fd                     ldy #3+$fa
1dfe : b61f             tldx4   ldx zp1-$fa&$ff,y   ;wrap on indexed zp
1e00 : 8a                       txa
1e01 : 990901                   sta abst-$fa,y      ;no STX abs,y!
1e04 : 88                       dey
1e05 : c0fa                     cpy #$fa
1e07 : b0f5                     bcs tldx4                  
1e09 : a0fd                     ldy #3+$fa
1e0b : be0e01           tldx5   ldx abs1-$fa,y      ;no wrap on indexed abs
1e0e : 9618                     stx zpt-$fa&$ff,y
1e10 : 88                       dey
1e11 : c0fa                     cpy #$fa
1e13 : b0f6                     bcs tldx5                  
1e15 : a003                     ldy #3      ;testing wraparound result
1e17 : a200                     ldx #0
1e19 : b91200           tstx1   lda zpt,y
1e1c : d91900                   cmp zp1,y
                                trap_ne     ;store to zp data
1e1f : f003            >        beq skip0858
                       >        trap            ;failed not equal (non zero)
1e21 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e24 :                 >skip0858
                        
1e24 : 9612                     stx zpt,y   ;clear                
1e26 : b90302                   lda abst,y
1e29 : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
1e2c : f003            >        beq skip0860
                       >        trap            ;failed not equal (non zero)
1e2e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e31 :                 >skip0860
                        
1e31 : 8a                       txa
1e32 : 990302                   sta abst,y  ;clear                
1e35 : 88                       dey
1e36 : 10e1                     bpl tstx1
                                next_test
1e38 : ad0002          >            lda test_case   ;previous test
1e3b : c910            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1e3d : f003            >        beq skip0863
                       >        trap            ;failed not equal (non zero)
1e3f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e42 :                 >skip0863
                       >
0011 =                 >test_num = test_num + 1
1e42 : a911            >            lda #test_num   ;*** next tests' number
1e44 : 8d0002          >            sta test_case
1e47 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                        ; LDY / STY - zp,x / abs,x
1e4a : a203                     ldx #3
1e4c :                  tldy    
                                set_stat 0
                       >            load_flag 0
1e4c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1e4e : 48              >            pha         ;use stack to load status
1e4f : 28              >            plp
                        
1e50 : b419                     ldy zp1,x
1e52 : 08                       php         ;test stores do not alter flags
1e53 : 98                       tya
1e54 : 49c3                     eor #$c3
1e56 : 28                       plp
1e57 : 9d0302                   sta abst,x
1e5a : 08                       php         ;flags after load/store sequence
1e5b : 49c3                     eor #$c3
1e5d : dd0802                   cmp abs1,x  ;test result
                                trap_ne
1e60 : f003            >        beq skip0867
                       >        trap            ;failed not equal (non zero)
1e62 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e65 :                 >skip0867
                        
1e65 : 68                       pla         ;load status
                                eor_flag 0
1e66 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1e68 : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
1e6b : f003            >        beq skip0870
                       >        trap            ;failed not equal (non zero)
1e6d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e70 :                 >skip0870
                        
1e70 : ca                       dex
1e71 : 10d9                     bpl tldy                  
                        
1e73 : a203                     ldx #3
1e75 :                  tldy1   
                                set_stat $ff
                       >            load_flag $ff
1e75 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1e77 : 48              >            pha         ;use stack to load status
1e78 : 28              >            plp
                        
1e79 : b419                     ldy zp1,x
1e7b : 08                       php         ;test stores do not alter flags
1e7c : 98                       tya
1e7d : 49c3                     eor #$c3
1e7f : 28                       plp
1e80 : 9d0302                   sta abst,x
1e83 : 08                       php         ;flags after load/store sequence
1e84 : 49c3                     eor #$c3
1e86 : dd0802                   cmp abs1,x  ;test result
                                trap_ne
1e89 : f003            >        beq skip0874
                       >        trap            ;failed not equal (non zero)
1e8b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e8e :                 >skip0874
                        
1e8e : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1e8f : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1e91 : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
1e94 : f003            >        beq skip0877
                       >        trap            ;failed not equal (non zero)
1e96 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e99 :                 >skip0877
                        
1e99 : ca                       dex
1e9a : 10d9                     bpl tldy1                  
                        
1e9c : a203                     ldx #3
1e9e :                  tldy2   
                                set_stat 0
                       >            load_flag 0
1e9e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1ea0 : 48              >            pha         ;use stack to load status
1ea1 : 28              >            plp
                        
1ea2 : bc0802                   ldy abs1,x
1ea5 : 08                       php         ;test stores do not alter flags
1ea6 : 98                       tya
1ea7 : 49c3                     eor #$c3
1ea9 : a8                       tay
1eaa : 28                       plp
1eab : 9412                     sty zpt,x
1ead : 08                       php         ;flags after load/store sequence
1eae : 49c3                     eor #$c3
1eb0 : d519                     cmp zp1,x   ;test result
                                trap_ne
1eb2 : f003            >        beq skip0881
                       >        trap            ;failed not equal (non zero)
1eb4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1eb7 :                 >skip0881
                        
1eb7 : 68                       pla         ;load status
                                eor_flag 0
1eb8 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1eba : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
1ebd : f003            >        beq skip0884
                       >        trap            ;failed not equal (non zero)
1ebf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ec2 :                 >skip0884
                        
1ec2 : ca                       dex
1ec3 : 10d9                     bpl tldy2                  
                        
1ec5 : a203                     ldx #3
1ec7 :                  tldy3
                                set_stat $ff
                       >            load_flag $ff
1ec7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1ec9 : 48              >            pha         ;use stack to load status
1eca : 28              >            plp
                        
1ecb : bc0802                   ldy abs1,x
1ece : 08                       php         ;test stores do not alter flags
1ecf : 98                       tya
1ed0 : 49c3                     eor #$c3
1ed2 : a8                       tay
1ed3 : 28                       plp
1ed4 : 9412                     sty zpt,x
1ed6 : 08                       php         ;flags after load/store sequence
1ed7 : 49c3                     eor #$c3
1ed9 : d519                     cmp zp1,x   ;test result
                                trap_ne
1edb : f003            >        beq skip0888
                       >        trap            ;failed not equal (non zero)
1edd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ee0 :                 >skip0888
                        
1ee0 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1ee1 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1ee3 : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
1ee6 : f003            >        beq skip0891
                       >        trap            ;failed not equal (non zero)
1ee8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1eeb :                 >skip0891
                        
1eeb : ca                       dex
1eec : 10d9                     bpl tldy3
                        
1eee : a203                     ldx #3      ;testing store result
1ef0 : a000                     ldy #0
1ef2 : b512             tsty    lda zpt,x
1ef4 : 49c3                     eor #$c3
1ef6 : d519                     cmp zp1,x
                                trap_ne     ;store to zp,x data
1ef8 : f003            >        beq skip0893
                       >        trap            ;failed not equal (non zero)
1efa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1efd :                 >skip0893
                        
1efd : 9412                     sty zpt,x   ;clear                
1eff : bd0302                   lda abst,x
1f02 : 49c3                     eor #$c3
1f04 : dd0802                   cmp abs1,x
                                trap_ne     ;store to abs,x data
1f07 : f003            >        beq skip0895
                       >        trap            ;failed not equal (non zero)
1f09 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f0c :                 >skip0895
                        
1f0c : 8a                       txa
1f0d : 9d0302                   sta abst,x  ;clear                
1f10 : ca                       dex
1f11 : 10df                     bpl tsty
                                next_test
1f13 : ad0002          >            lda test_case   ;previous test
1f16 : c911            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1f18 : f003            >        beq skip0898
                       >        trap            ;failed not equal (non zero)
1f1a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f1d :                 >skip0898
                       >
0012 =                 >test_num = test_num + 1
1f1d : a912            >            lda #test_num   ;*** next tests' number
1f1f : 8d0002          >            sta test_case
1f22 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; indexed wraparound test (only zp should wrap)
1f25 : a2fd                     ldx #3+$fa
1f27 : b41f             tldy4   ldy zp1-$fa&$ff,x   ;wrap on indexed zp
1f29 : 98                       tya
1f2a : 9d0901                   sta abst-$fa,x      ;no STX abs,x!
1f2d : ca                       dex
1f2e : e0fa                     cpx #$fa
1f30 : b0f5                     bcs tldy4                  
1f32 : a2fd                     ldx #3+$fa
1f34 : bc0e01           tldy5   ldy abs1-$fa,x      ;no wrap on indexed abs
1f37 : 9418                     sty zpt-$fa&$ff,x
1f39 : ca                       dex
1f3a : e0fa                     cpx #$fa
1f3c : b0f6                     bcs tldy5                  
1f3e : a203                     ldx #3      ;testing wraparound result
1f40 : a000                     ldy #0
1f42 : b512             tsty1   lda zpt,x
1f44 : d519                     cmp zp1,x
                                trap_ne     ;store to zp,x data
1f46 : f003            >        beq skip0900
                       >        trap            ;failed not equal (non zero)
1f48 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f4b :                 >skip0900
                        
1f4b : 9412                     sty zpt,x   ;clear                
1f4d : bd0302                   lda abst,x
1f50 : dd0802                   cmp abs1,x
                                trap_ne     ;store to abs,x data
1f53 : f003            >        beq skip0902
                       >        trap            ;failed not equal (non zero)
1f55 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f58 :                 >skip0902
                        
1f58 : 8a                       txa
1f59 : 9d0302                   sta abst,x  ;clear                
1f5c : ca                       dex
1f5d : 10e3                     bpl tsty1
                                next_test
1f5f : ad0002          >            lda test_case   ;previous test
1f62 : c912            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1f64 : f003            >        beq skip0905
                       >        trap            ;failed not equal (non zero)
1f66 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f69 :                 >skip0905
                       >
0013 =                 >test_num = test_num + 1
1f69 : a913            >            lda #test_num   ;*** next tests' number
1f6b : 8d0002          >            sta test_case
1f6e : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; LDX / STX - zp / abs / #
                                set_stat 0  
                       >            load_flag 0  
1f71 : a900            >            lda #0               ;allow test to change I-flag (no mask)
                       >
1f73 : 48              >            pha         ;use stack to load status
1f74 : 28              >            plp
                        
1f75 : a619                     ldx zp1
1f77 : 08                       php         ;test stores do not alter flags
1f78 : 8a                       txa
1f79 : 49c3                     eor #$c3
1f7b : aa                       tax
1f7c : 28                       plp
1f7d : 8e0302                   stx abst
1f80 : 08                       php         ;flags after load/store sequence
1f81 : 49c3                     eor #$c3
1f83 : aa                       tax
1f84 : e0c3                     cpx #$c3    ;test result
                                trap_ne
1f86 : f003            >        beq skip0909
                       >        trap            ;failed not equal (non zero)
1f88 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f8b :                 >skip0909
                        
1f8b : 68                       pla         ;load status
                                eor_flag 0
1f8c : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1f8e : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
1f91 : f003            >        beq skip0912
                       >        trap            ;failed not equal (non zero)
1f93 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f96 :                 >skip0912
                        
                                set_stat 0
                       >            load_flag 0
1f96 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1f98 : 48              >            pha         ;use stack to load status
1f99 : 28              >            plp
                        
1f9a : a61a                     ldx zp1+1
1f9c : 08                       php         ;test stores do not alter flags
1f9d : 8a                       txa
1f9e : 49c3                     eor #$c3
1fa0 : aa                       tax
1fa1 : 28                       plp
1fa2 : 8e0402                   stx abst+1
1fa5 : 08                       php         ;flags after load/store sequence
1fa6 : 49c3                     eor #$c3
1fa8 : aa                       tax
1fa9 : e082                     cpx #$82    ;test result
                                trap_ne
1fab : f003            >        beq skip0916
                       >        trap            ;failed not equal (non zero)
1fad : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1fb0 :                 >skip0916
                        
1fb0 : 68                       pla         ;load status
                                eor_flag 0
1fb1 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1fb3 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
1fb6 : f003            >        beq skip0919
                       >        trap            ;failed not equal (non zero)
1fb8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1fbb :                 >skip0919
                        
                                set_stat 0
                       >            load_flag 0
1fbb : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1fbd : 48              >            pha         ;use stack to load status
1fbe : 28              >            plp
                        
1fbf : a61b                     ldx zp1+2
1fc1 : 08                       php         ;test stores do not alter flags
1fc2 : 8a                       txa
1fc3 : 49c3                     eor #$c3
1fc5 : aa                       tax
1fc6 : 28                       plp
1fc7 : 8e0502                   stx abst+2
1fca : 08                       php         ;flags after load/store sequence
1fcb : 49c3                     eor #$c3
1fcd : aa                       tax
1fce : e041                     cpx #$41    ;test result
                                trap_ne
1fd0 : f003            >        beq skip0923
                       >        trap            ;failed not equal (non zero)
1fd2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1fd5 :                 >skip0923
                        
1fd5 : 68                       pla         ;load status
                                eor_flag 0
1fd6 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1fd8 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
1fdb : f003            >        beq skip0926
                       >        trap            ;failed not equal (non zero)
1fdd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1fe0 :                 >skip0926
                        
                                set_stat 0
                       >            load_flag 0
1fe0 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1fe2 : 48              >            pha         ;use stack to load status
1fe3 : 28              >            plp
                        
1fe4 : a61c                     ldx zp1+3
1fe6 : 08                       php         ;test stores do not alter flags
1fe7 : 8a                       txa
1fe8 : 49c3                     eor #$c3
1fea : aa                       tax
1feb : 28                       plp
1fec : 8e0602                   stx abst+3
1fef : 08                       php         ;flags after load/store sequence
1ff0 : 49c3                     eor #$c3
1ff2 : aa                       tax
1ff3 : e000                     cpx #0      ;test result
                                trap_ne
1ff5 : f003            >        beq skip0930
                       >        trap            ;failed not equal (non zero)
1ff7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ffa :                 >skip0930
                        
1ffa : 68                       pla         ;load status
                                eor_flag 0
1ffb : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1ffd : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
2000 : f003            >        beq skip0933
                       >        trap            ;failed not equal (non zero)
2002 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2005 :                 >skip0933
                        
                        
                                set_stat $ff
                       >            load_flag $ff
2005 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2007 : 48              >            pha         ;use stack to load status
2008 : 28              >            plp
                        
2009 : a619                     ldx zp1  
200b : 08                       php         ;test stores do not alter flags
200c : 8a                       txa
200d : 49c3                     eor #$c3
200f : aa                       tax
2010 : 28                       plp
2011 : 8e0302                   stx abst  
2014 : 08                       php         ;flags after load/store sequence
2015 : 49c3                     eor #$c3
2017 : aa                       tax
2018 : e0c3                     cpx #$c3    ;test result
                                trap_ne     ;
201a : f003            >        beq skip0937
                       >        trap            ;failed not equal (non zero)
201c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
201f :                 >skip0937
                        
201f : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2020 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2022 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
2025 : f003            >        beq skip0940
                       >        trap            ;failed not equal (non zero)
2027 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
202a :                 >skip0940
                        
                                set_stat $ff
                       >            load_flag $ff
202a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
202c : 48              >            pha         ;use stack to load status
202d : 28              >            plp
                        
202e : a61a                     ldx zp1+1
2030 : 08                       php         ;test stores do not alter flags
2031 : 8a                       txa
2032 : 49c3                     eor #$c3
2034 : aa                       tax
2035 : 28                       plp
2036 : 8e0402                   stx abst+1
2039 : 08                       php         ;flags after load/store sequence
203a : 49c3                     eor #$c3
203c : aa                       tax
203d : e082                     cpx #$82    ;test result
                                trap_ne
203f : f003            >        beq skip0944
                       >        trap            ;failed not equal (non zero)
2041 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2044 :                 >skip0944
                        
2044 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2045 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2047 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
204a : f003            >        beq skip0947
                       >        trap            ;failed not equal (non zero)
204c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
204f :                 >skip0947
                        
                                set_stat $ff
                       >            load_flag $ff
204f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2051 : 48              >            pha         ;use stack to load status
2052 : 28              >            plp
                        
2053 : a61b                     ldx zp1+2
2055 : 08                       php         ;test stores do not alter flags
2056 : 8a                       txa
2057 : 49c3                     eor #$c3
2059 : aa                       tax
205a : 28                       plp
205b : 8e0502                   stx abst+2
205e : 08                       php         ;flags after load/store sequence
205f : 49c3                     eor #$c3
2061 : aa                       tax
2062 : e041                     cpx #$41    ;test result
                                trap_ne     ;
2064 : f003            >        beq skip0951
                       >        trap            ;failed not equal (non zero)
2066 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2069 :                 >skip0951
                        
2069 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
206a : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
206c : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
206f : f003            >        beq skip0954
                       >        trap            ;failed not equal (non zero)
2071 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2074 :                 >skip0954
                        
                                set_stat $ff
                       >            load_flag $ff
2074 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2076 : 48              >            pha         ;use stack to load status
2077 : 28              >            plp
                        
2078 : a61c                     ldx zp1+3
207a : 08                       php         ;test stores do not alter flags
207b : 8a                       txa
207c : 49c3                     eor #$c3
207e : aa                       tax
207f : 28                       plp
2080 : 8e0602                   stx abst+3
2083 : 08                       php         ;flags after load/store sequence
2084 : 49c3                     eor #$c3
2086 : aa                       tax
2087 : e000                     cpx #0      ;test result
                                trap_ne
2089 : f003            >        beq skip0958
                       >        trap            ;failed not equal (non zero)
208b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
208e :                 >skip0958
                        
208e : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
208f : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2091 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
2094 : f003            >        beq skip0961
                       >        trap            ;failed not equal (non zero)
2096 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2099 :                 >skip0961
                        
                        
                                set_stat 0
                       >            load_flag 0
2099 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
209b : 48              >            pha         ;use stack to load status
209c : 28              >            plp
                        
209d : ae0802                   ldx abs1  
20a0 : 08                       php         ;test stores do not alter flags
20a1 : 8a                       txa
20a2 : 49c3                     eor #$c3
20a4 : aa                       tax
20a5 : 28                       plp
20a6 : 8612                     stx zpt  
20a8 : 08                       php         ;flags after load/store sequence
20a9 : 49c3                     eor #$c3
20ab : c519                     cmp zp1     ;test result
                                trap_ne
20ad : f003            >        beq skip0965
                       >        trap            ;failed not equal (non zero)
20af : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20b2 :                 >skip0965
                        
20b2 : 68                       pla         ;load status
                                eor_flag 0
20b3 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
20b5 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
20b8 : f003            >        beq skip0968
                       >        trap            ;failed not equal (non zero)
20ba : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20bd :                 >skip0968
                        
                                set_stat 0
                       >            load_flag 0
20bd : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
20bf : 48              >            pha         ;use stack to load status
20c0 : 28              >            plp
                        
20c1 : ae0902                   ldx abs1+1
20c4 : 08                       php         ;test stores do not alter flags
20c5 : 8a                       txa
20c6 : 49c3                     eor #$c3
20c8 : aa                       tax
20c9 : 28                       plp
20ca : 8613                     stx zpt+1
20cc : 08                       php         ;flags after load/store sequence
20cd : 49c3                     eor #$c3
20cf : c51a                     cmp zp1+1   ;test result
                                trap_ne
20d1 : f003            >        beq skip0972
                       >        trap            ;failed not equal (non zero)
20d3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20d6 :                 >skip0972
                        
20d6 : 68                       pla         ;load status
                                eor_flag 0
20d7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
20d9 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
20dc : f003            >        beq skip0975
                       >        trap            ;failed not equal (non zero)
20de : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20e1 :                 >skip0975
                        
                                set_stat 0
                       >            load_flag 0
20e1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
20e3 : 48              >            pha         ;use stack to load status
20e4 : 28              >            plp
                        
20e5 : ae0a02                   ldx abs1+2
20e8 : 08                       php         ;test stores do not alter flags
20e9 : 8a                       txa
20ea : 49c3                     eor #$c3
20ec : aa                       tax
20ed : 28                       plp
20ee : 8614                     stx zpt+2
20f0 : 08                       php         ;flags after load/store sequence
20f1 : 49c3                     eor #$c3
20f3 : c51b                     cmp zp1+2   ;test result
                                trap_ne
20f5 : f003            >        beq skip0979
                       >        trap            ;failed not equal (non zero)
20f7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20fa :                 >skip0979
                        
20fa : 68                       pla         ;load status
                                eor_flag 0
20fb : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
20fd : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
2100 : f003            >        beq skip0982
                       >        trap            ;failed not equal (non zero)
2102 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2105 :                 >skip0982
                        
                                set_stat 0
                       >            load_flag 0
2105 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2107 : 48              >            pha         ;use stack to load status
2108 : 28              >            plp
                        
2109 : ae0b02                   ldx abs1+3
210c : 08                       php         ;test stores do not alter flags
210d : 8a                       txa
210e : 49c3                     eor #$c3
2110 : aa                       tax
2111 : 28                       plp
2112 : 8615                     stx zpt+3
2114 : 08                       php         ;flags after load/store sequence
2115 : 49c3                     eor #$c3
2117 : c51c                     cmp zp1+3   ;test result
                                trap_ne
2119 : f003            >        beq skip0986
                       >        trap            ;failed not equal (non zero)
211b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
211e :                 >skip0986
                        
211e : 68                       pla         ;load status
                                eor_flag 0
211f : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2121 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
2124 : f003            >        beq skip0989
                       >        trap            ;failed not equal (non zero)
2126 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2129 :                 >skip0989
                        
                        
                                set_stat $ff
                       >            load_flag $ff
2129 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
212b : 48              >            pha         ;use stack to load status
212c : 28              >            plp
                        
212d : ae0802                   ldx abs1  
2130 : 08                       php         ;test stores do not alter flags
2131 : 8a                       txa
2132 : 49c3                     eor #$c3
2134 : aa                       tax
2135 : 28                       plp
2136 : 8612                     stx zpt  
2138 : 08                       php         ;flags after load/store sequence
2139 : 49c3                     eor #$c3
213b : aa                       tax
213c : e419                     cpx zp1     ;test result
                                trap_ne
213e : f003            >        beq skip0993
                       >        trap            ;failed not equal (non zero)
2140 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2143 :                 >skip0993
                        
2143 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2144 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2146 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
2149 : f003            >        beq skip0996
                       >        trap            ;failed not equal (non zero)
214b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
214e :                 >skip0996
                        
                                set_stat $ff
                       >            load_flag $ff
214e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2150 : 48              >            pha         ;use stack to load status
2151 : 28              >            plp
                        
2152 : ae0902                   ldx abs1+1
2155 : 08                       php         ;test stores do not alter flags
2156 : 8a                       txa
2157 : 49c3                     eor #$c3
2159 : aa                       tax
215a : 28                       plp
215b : 8613                     stx zpt+1
215d : 08                       php         ;flags after load/store sequence
215e : 49c3                     eor #$c3
2160 : aa                       tax
2161 : e41a                     cpx zp1+1   ;test result
                                trap_ne
2163 : f003            >        beq skip1000
                       >        trap            ;failed not equal (non zero)
2165 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2168 :                 >skip1000
                        
2168 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2169 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
216b : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
216e : f003            >        beq skip1003
                       >        trap            ;failed not equal (non zero)
2170 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2173 :                 >skip1003
                        
                                set_stat $ff
                       >            load_flag $ff
2173 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2175 : 48              >            pha         ;use stack to load status
2176 : 28              >            plp
                        
2177 : ae0a02                   ldx abs1+2
217a : 08                       php         ;test stores do not alter flags
217b : 8a                       txa
217c : 49c3                     eor #$c3
217e : aa                       tax
217f : 28                       plp
2180 : 8614                     stx zpt+2
2182 : 08                       php         ;flags after load/store sequence
2183 : 49c3                     eor #$c3
2185 : aa                       tax
2186 : e41b                     cpx zp1+2   ;test result
                                trap_ne
2188 : f003            >        beq skip1007
                       >        trap            ;failed not equal (non zero)
218a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
218d :                 >skip1007
                        
218d : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
218e : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2190 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
2193 : f003            >        beq skip1010
                       >        trap            ;failed not equal (non zero)
2195 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2198 :                 >skip1010
                        
                                set_stat $ff
                       >            load_flag $ff
2198 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
219a : 48              >            pha         ;use stack to load status
219b : 28              >            plp
                        
219c : ae0b02                   ldx abs1+3
219f : 08                       php         ;test stores do not alter flags
21a0 : 8a                       txa
21a1 : 49c3                     eor #$c3
21a3 : aa                       tax
21a4 : 28                       plp
21a5 : 8615                     stx zpt+3
21a7 : 08                       php         ;flags after load/store sequence
21a8 : 49c3                     eor #$c3
21aa : aa                       tax
21ab : e41c                     cpx zp1+3   ;test result
                                trap_ne
21ad : f003            >        beq skip1014
                       >        trap            ;failed not equal (non zero)
21af : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21b2 :                 >skip1014
                        
21b2 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
21b3 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
21b5 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
21b8 : f003            >        beq skip1017
                       >        trap            ;failed not equal (non zero)
21ba : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21bd :                 >skip1017
                        
                        
                                set_stat 0  
                       >            load_flag 0  
21bd : a900            >            lda #0               ;allow test to change I-flag (no mask)
                       >
21bf : 48              >            pha         ;use stack to load status
21c0 : 28              >            plp
                        
21c1 : a2c3                     ldx #$c3
21c3 : 08                       php
21c4 : ec0802                   cpx abs1    ;test result
                                trap_ne
21c7 : f003            >        beq skip1021
                       >        trap            ;failed not equal (non zero)
21c9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21cc :                 >skip1021
                        
21cc : 68                       pla         ;load status
                                eor_flag 0
21cd : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
21cf : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
21d2 : f003            >        beq skip1024
                       >        trap            ;failed not equal (non zero)
21d4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21d7 :                 >skip1024
                        
                                set_stat 0
                       >            load_flag 0
21d7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
21d9 : 48              >            pha         ;use stack to load status
21da : 28              >            plp
                        
21db : a282                     ldx #$82
21dd : 08                       php
21de : ec0902                   cpx abs1+1  ;test result
                                trap_ne
21e1 : f003            >        beq skip1028
                       >        trap            ;failed not equal (non zero)
21e3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21e6 :                 >skip1028
                        
21e6 : 68                       pla         ;load status
                                eor_flag 0
21e7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
21e9 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
21ec : f003            >        beq skip1031
                       >        trap            ;failed not equal (non zero)
21ee : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21f1 :                 >skip1031
                        
                                set_stat 0
                       >            load_flag 0
21f1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
21f3 : 48              >            pha         ;use stack to load status
21f4 : 28              >            plp
                        
21f5 : a241                     ldx #$41
21f7 : 08                       php
21f8 : ec0a02                   cpx abs1+2  ;test result
                                trap_ne
21fb : f003            >        beq skip1035
                       >        trap            ;failed not equal (non zero)
21fd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2200 :                 >skip1035
                        
2200 : 68                       pla         ;load status
                                eor_flag 0
2201 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2203 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
2206 : f003            >        beq skip1038
                       >        trap            ;failed not equal (non zero)
2208 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
220b :                 >skip1038
                        
                                set_stat 0
                       >            load_flag 0
220b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
220d : 48              >            pha         ;use stack to load status
220e : 28              >            plp
                        
220f : a200                     ldx #0
2211 : 08                       php
2212 : ec0b02                   cpx abs1+3  ;test result
                                trap_ne
2215 : f003            >        beq skip1042
                       >        trap            ;failed not equal (non zero)
2217 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
221a :                 >skip1042
                        
221a : 68                       pla         ;load status
                                eor_flag 0
221b : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
221d : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
2220 : f003            >        beq skip1045
                       >        trap            ;failed not equal (non zero)
2222 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2225 :                 >skip1045
                        
                        
                                set_stat $ff
                       >            load_flag $ff
2225 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2227 : 48              >            pha         ;use stack to load status
2228 : 28              >            plp
                        
2229 : a2c3                     ldx #$c3  
222b : 08                       php
222c : ec0802                   cpx abs1    ;test result
                                trap_ne
222f : f003            >        beq skip1049
                       >        trap            ;failed not equal (non zero)
2231 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2234 :                 >skip1049
                        
2234 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2235 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2237 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
223a : f003            >        beq skip1052
                       >        trap            ;failed not equal (non zero)
223c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
223f :                 >skip1052
                        
                                set_stat $ff
                       >            load_flag $ff
223f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2241 : 48              >            pha         ;use stack to load status
2242 : 28              >            plp
                        
2243 : a282                     ldx #$82
2245 : 08                       php
2246 : ec0902                   cpx abs1+1  ;test result
                                trap_ne
2249 : f003            >        beq skip1056
                       >        trap            ;failed not equal (non zero)
224b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
224e :                 >skip1056
                        
224e : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
224f : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2251 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
2254 : f003            >        beq skip1059
                       >        trap            ;failed not equal (non zero)
2256 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2259 :                 >skip1059
                        
                                set_stat $ff
                       >            load_flag $ff
2259 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
225b : 48              >            pha         ;use stack to load status
225c : 28              >            plp
                        
225d : a241                     ldx #$41
225f : 08                       php
2260 : ec0a02                   cpx abs1+2  ;test result
                                trap_ne
2263 : f003            >        beq skip1063
                       >        trap            ;failed not equal (non zero)
2265 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2268 :                 >skip1063
                        
2268 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2269 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
226b : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
226e : f003            >        beq skip1066
                       >        trap            ;failed not equal (non zero)
2270 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2273 :                 >skip1066
                        
                                set_stat $ff
                       >            load_flag $ff
2273 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2275 : 48              >            pha         ;use stack to load status
2276 : 28              >            plp
                        
2277 : a200                     ldx #0
2279 : 08                       php
227a : ec0b02                   cpx abs1+3  ;test result
                                trap_ne
227d : f003            >        beq skip1070
                       >        trap            ;failed not equal (non zero)
227f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2282 :                 >skip1070
                        
2282 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2283 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2285 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
2288 : f003            >        beq skip1073
                       >        trap            ;failed not equal (non zero)
228a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
228d :                 >skip1073
                        
                        
228d : a200                     ldx #0
228f : a512                     lda zpt  
2291 : 49c3                     eor #$c3
2293 : c519                     cmp zp1  
                                trap_ne     ;store to zp data
2295 : f003            >        beq skip1075
                       >        trap            ;failed not equal (non zero)
2297 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
229a :                 >skip1075
                        
229a : 8612                     stx zpt     ;clear                
229c : ad0302                   lda abst  
229f : 49c3                     eor #$c3
22a1 : cd0802                   cmp abs1  
                                trap_ne     ;store to abs data
22a4 : f003            >        beq skip1077
                       >        trap            ;failed not equal (non zero)
22a6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22a9 :                 >skip1077
                        
22a9 : 8e0302                   stx abst    ;clear                
22ac : a513                     lda zpt+1
22ae : 49c3                     eor #$c3
22b0 : c51a                     cmp zp1+1
                                trap_ne     ;store to zp data
22b2 : f003            >        beq skip1079
                       >        trap            ;failed not equal (non zero)
22b4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22b7 :                 >skip1079
                        
22b7 : 8613                     stx zpt+1   ;clear                
22b9 : ad0402                   lda abst+1
22bc : 49c3                     eor #$c3
22be : cd0902                   cmp abs1+1
                                trap_ne     ;store to abs data
22c1 : f003            >        beq skip1081
                       >        trap            ;failed not equal (non zero)
22c3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22c6 :                 >skip1081
                        
22c6 : 8e0402                   stx abst+1  ;clear                
22c9 : a514                     lda zpt+2
22cb : 49c3                     eor #$c3
22cd : c51b                     cmp zp1+2
                                trap_ne     ;store to zp data
22cf : f003            >        beq skip1083
                       >        trap            ;failed not equal (non zero)
22d1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22d4 :                 >skip1083
                        
22d4 : 8614                     stx zpt+2   ;clear                
22d6 : ad0502                   lda abst+2
22d9 : 49c3                     eor #$c3
22db : cd0a02                   cmp abs1+2
                                trap_ne     ;store to abs data
22de : f003            >        beq skip1085
                       >        trap            ;failed not equal (non zero)
22e0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22e3 :                 >skip1085
                        
22e3 : 8e0502                   stx abst+2  ;clear                
22e6 : a515                     lda zpt+3
22e8 : 49c3                     eor #$c3
22ea : c51c                     cmp zp1+3
                                trap_ne     ;store to zp data
22ec : f003            >        beq skip1087
                       >        trap            ;failed not equal (non zero)
22ee : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22f1 :                 >skip1087
                        
22f1 : 8615                     stx zpt+3   ;clear                
22f3 : ad0602                   lda abst+3
22f6 : 49c3                     eor #$c3
22f8 : cd0b02                   cmp abs1+3
                                trap_ne     ;store to abs data
22fb : f003            >        beq skip1089
                       >        trap            ;failed not equal (non zero)
22fd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2300 :                 >skip1089
                        
2300 : 8e0602                   stx abst+3  ;clear                
                                next_test
2303 : ad0002          >            lda test_case   ;previous test
2306 : c913            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2308 : f003            >        beq skip1092
                       >        trap            ;failed not equal (non zero)
230a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
230d :                 >skip1092
                       >
0014 =                 >test_num = test_num + 1
230d : a914            >            lda #test_num   ;*** next tests' number
230f : 8d0002          >            sta test_case
2312 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; LDY / STY - zp / abs / #
                                set_stat 0
                       >            load_flag 0
2315 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2317 : 48              >            pha         ;use stack to load status
2318 : 28              >            plp
                        
2319 : a419                     ldy zp1  
231b : 08                       php         ;test stores do not alter flags
231c : 98                       tya
231d : 49c3                     eor #$c3
231f : a8                       tay
2320 : 28                       plp
2321 : 8c0302                   sty abst  
2324 : 08                       php         ;flags after load/store sequence
2325 : 49c3                     eor #$c3
2327 : a8                       tay
2328 : c0c3                     cpy #$c3    ;test result
                                trap_ne
232a : f003            >        beq skip1096
                       >        trap            ;failed not equal (non zero)
232c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
232f :                 >skip1096
                        
232f : 68                       pla         ;load status
                                eor_flag 0
2330 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2332 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
2335 : f003            >        beq skip1099
                       >        trap            ;failed not equal (non zero)
2337 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
233a :                 >skip1099
                        
                                set_stat 0
                       >            load_flag 0
233a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
233c : 48              >            pha         ;use stack to load status
233d : 28              >            plp
                        
233e : a41a                     ldy zp1+1
2340 : 08                       php         ;test stores do not alter flags
2341 : 98                       tya
2342 : 49c3                     eor #$c3
2344 : a8                       tay
2345 : 28                       plp
2346 : 8c0402                   sty abst+1
2349 : 08                       php         ;flags after load/store sequence
234a : 49c3                     eor #$c3
234c : a8                       tay
234d : c082                     cpy #$82    ;test result
                                trap_ne
234f : f003            >        beq skip1103
                       >        trap            ;failed not equal (non zero)
2351 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2354 :                 >skip1103
                        
2354 : 68                       pla         ;load status
                                eor_flag 0
2355 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2357 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
235a : f003            >        beq skip1106
                       >        trap            ;failed not equal (non zero)
235c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
235f :                 >skip1106
                        
                                set_stat 0
                       >            load_flag 0
235f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2361 : 48              >            pha         ;use stack to load status
2362 : 28              >            plp
                        
2363 : a41b                     ldy zp1+2
2365 : 08                       php         ;test stores do not alter flags
2366 : 98                       tya
2367 : 49c3                     eor #$c3
2369 : a8                       tay
236a : 28                       plp
236b : 8c0502                   sty abst+2
236e : 08                       php         ;flags after load/store sequence
236f : 49c3                     eor #$c3
2371 : a8                       tay
2372 : c041                     cpy #$41    ;test result
                                trap_ne
2374 : f003            >        beq skip1110
                       >        trap            ;failed not equal (non zero)
2376 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2379 :                 >skip1110
                        
2379 : 68                       pla         ;load status
                                eor_flag 0
237a : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
237c : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
237f : f003            >        beq skip1113
                       >        trap            ;failed not equal (non zero)
2381 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2384 :                 >skip1113
                        
                                set_stat 0
                       >            load_flag 0
2384 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2386 : 48              >            pha         ;use stack to load status
2387 : 28              >            plp
                        
2388 : a41c                     ldy zp1+3
238a : 08                       php         ;test stores do not alter flags
238b : 98                       tya
238c : 49c3                     eor #$c3
238e : a8                       tay
238f : 28                       plp
2390 : 8c0602                   sty abst+3
2393 : 08                       php         ;flags after load/store sequence
2394 : 49c3                     eor #$c3
2396 : a8                       tay
2397 : c000                     cpy #0      ;test result
                                trap_ne
2399 : f003            >        beq skip1117
                       >        trap            ;failed not equal (non zero)
239b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
239e :                 >skip1117
                        
239e : 68                       pla         ;load status
                                eor_flag 0
239f : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
23a1 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
23a4 : f003            >        beq skip1120
                       >        trap            ;failed not equal (non zero)
23a6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23a9 :                 >skip1120
                        
                        
                                set_stat $ff
                       >            load_flag $ff
23a9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
23ab : 48              >            pha         ;use stack to load status
23ac : 28              >            plp
                        
23ad : a419                     ldy zp1  
23af : 08                       php         ;test stores do not alter flags
23b0 : 98                       tya
23b1 : 49c3                     eor #$c3
23b3 : a8                       tay
23b4 : 28                       plp
23b5 : 8c0302                   sty abst  
23b8 : 08                       php         ;flags after load/store sequence
23b9 : 49c3                     eor #$c3
23bb : a8                       tay
23bc : c0c3                     cpy #$c3    ;test result
                                trap_ne
23be : f003            >        beq skip1124
                       >        trap            ;failed not equal (non zero)
23c0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23c3 :                 >skip1124
                        
23c3 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
23c4 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
23c6 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
23c9 : f003            >        beq skip1127
                       >        trap            ;failed not equal (non zero)
23cb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23ce :                 >skip1127
                        
                                set_stat $ff
                       >            load_flag $ff
23ce : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
23d0 : 48              >            pha         ;use stack to load status
23d1 : 28              >            plp
                        
23d2 : a41a                     ldy zp1+1
23d4 : 08                       php         ;test stores do not alter flags
23d5 : 98                       tya
23d6 : 49c3                     eor #$c3
23d8 : a8                       tay
23d9 : 28                       plp
23da : 8c0402                   sty abst+1
23dd : 08                       php         ;flags after load/store sequence
23de : 49c3                     eor #$c3
23e0 : a8                       tay
23e1 : c082                     cpy #$82   ;test result
                                trap_ne
23e3 : f003            >        beq skip1131
                       >        trap            ;failed not equal (non zero)
23e5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23e8 :                 >skip1131
                        
23e8 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
23e9 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
23eb : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
23ee : f003            >        beq skip1134
                       >        trap            ;failed not equal (non zero)
23f0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23f3 :                 >skip1134
                        
                                set_stat $ff
                       >            load_flag $ff
23f3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
23f5 : 48              >            pha         ;use stack to load status
23f6 : 28              >            plp
                        
23f7 : a41b                     ldy zp1+2
23f9 : 08                       php         ;test stores do not alter flags
23fa : 98                       tya
23fb : 49c3                     eor #$c3
23fd : a8                       tay
23fe : 28                       plp
23ff : 8c0502                   sty abst+2
2402 : 08                       php         ;flags after load/store sequence
2403 : 49c3                     eor #$c3
2405 : a8                       tay
2406 : c041                     cpy #$41    ;test result
                                trap_ne
2408 : f003            >        beq skip1138
                       >        trap            ;failed not equal (non zero)
240a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
240d :                 >skip1138
                        
240d : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
240e : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2410 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
2413 : f003            >        beq skip1141
                       >        trap            ;failed not equal (non zero)
2415 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2418 :                 >skip1141
                        
                                set_stat $ff
                       >            load_flag $ff
2418 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
241a : 48              >            pha         ;use stack to load status
241b : 28              >            plp
                        
241c : a41c                     ldy zp1+3
241e : 08                       php         ;test stores do not alter flags
241f : 98                       tya
2420 : 49c3                     eor #$c3
2422 : a8                       tay
2423 : 28                       plp
2424 : 8c0602                   sty abst+3
2427 : 08                       php         ;flags after load/store sequence
2428 : 49c3                     eor #$c3
242a : a8                       tay
242b : c000                     cpy #0      ;test result
                                trap_ne
242d : f003            >        beq skip1145
                       >        trap            ;failed not equal (non zero)
242f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2432 :                 >skip1145
                        
2432 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2433 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2435 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
2438 : f003            >        beq skip1148
                       >        trap            ;failed not equal (non zero)
243a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
243d :                 >skip1148
                        
                                
                                set_stat 0
                       >            load_flag 0
243d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
243f : 48              >            pha         ;use stack to load status
2440 : 28              >            plp
                        
2441 : ac0802                   ldy abs1  
2444 : 08                       php         ;test stores do not alter flags
2445 : 98                       tya
2446 : 49c3                     eor #$c3
2448 : a8                       tay
2449 : 28                       plp
244a : 8412                     sty zpt  
244c : 08                       php         ;flags after load/store sequence
244d : 49c3                     eor #$c3
244f : a8                       tay
2450 : c419                     cpy zp1     ;test result
                                trap_ne
2452 : f003            >        beq skip1152
                       >        trap            ;failed not equal (non zero)
2454 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2457 :                 >skip1152
                        
2457 : 68                       pla         ;load status
                                eor_flag 0
2458 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
245a : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
245d : f003            >        beq skip1155
                       >        trap            ;failed not equal (non zero)
245f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2462 :                 >skip1155
                        
                                set_stat 0
                       >            load_flag 0
2462 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2464 : 48              >            pha         ;use stack to load status
2465 : 28              >            plp
                        
2466 : ac0902                   ldy abs1+1
2469 : 08                       php         ;test stores do not alter flags
246a : 98                       tya
246b : 49c3                     eor #$c3
246d : a8                       tay
246e : 28                       plp
246f : 8413                     sty zpt+1
2471 : 08                       php         ;flags after load/store sequence
2472 : 49c3                     eor #$c3
2474 : a8                       tay
2475 : c41a                     cpy zp1+1   ;test result
                                trap_ne
2477 : f003            >        beq skip1159
                       >        trap            ;failed not equal (non zero)
2479 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
247c :                 >skip1159
                        
247c : 68                       pla         ;load status
                                eor_flag 0
247d : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
247f : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
2482 : f003            >        beq skip1162
                       >        trap            ;failed not equal (non zero)
2484 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2487 :                 >skip1162
                        
                                set_stat 0
                       >            load_flag 0
2487 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2489 : 48              >            pha         ;use stack to load status
248a : 28              >            plp
                        
248b : ac0a02                   ldy abs1+2
248e : 08                       php         ;test stores do not alter flags
248f : 98                       tya
2490 : 49c3                     eor #$c3
2492 : a8                       tay
2493 : 28                       plp
2494 : 8414                     sty zpt+2
2496 : 08                       php         ;flags after load/store sequence
2497 : 49c3                     eor #$c3
2499 : a8                       tay
249a : c41b                     cpy zp1+2   ;test result
                                trap_ne
249c : f003            >        beq skip1166
                       >        trap            ;failed not equal (non zero)
249e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24a1 :                 >skip1166
                        
24a1 : 68                       pla         ;load status
                                eor_flag 0
24a2 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
24a4 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
24a7 : f003            >        beq skip1169
                       >        trap            ;failed not equal (non zero)
24a9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24ac :                 >skip1169
                        
                                set_stat 0
                       >            load_flag 0
24ac : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
24ae : 48              >            pha         ;use stack to load status
24af : 28              >            plp
                        
24b0 : ac0b02                   ldy abs1+3
24b3 : 08                       php         ;test stores do not alter flags
24b4 : 98                       tya
24b5 : 49c3                     eor #$c3
24b7 : a8                       tay
24b8 : 28                       plp
24b9 : 8415                     sty zpt+3
24bb : 08                       php         ;flags after load/store sequence
24bc : 49c3                     eor #$c3
24be : a8                       tay
24bf : c41c                     cpy zp1+3   ;test result
                                trap_ne
24c1 : f003            >        beq skip1173
                       >        trap            ;failed not equal (non zero)
24c3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24c6 :                 >skip1173
                        
24c6 : 68                       pla         ;load status
                                eor_flag 0
24c7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
24c9 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
24cc : f003            >        beq skip1176
                       >        trap            ;failed not equal (non zero)
24ce : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24d1 :                 >skip1176
                        
                        
                                set_stat $ff
                       >            load_flag $ff
24d1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
24d3 : 48              >            pha         ;use stack to load status
24d4 : 28              >            plp
                        
24d5 : ac0802                   ldy abs1  
24d8 : 08                       php         ;test stores do not alter flags
24d9 : 98                       tya
24da : 49c3                     eor #$c3
24dc : a8                       tay
24dd : 28                       plp
24de : 8412                     sty zpt  
24e0 : 08                       php         ;flags after load/store sequence
24e1 : 49c3                     eor #$c3
24e3 : a8                       tay
24e4 : c519                     cmp zp1     ;test result
                                trap_ne
24e6 : f003            >        beq skip1180
                       >        trap            ;failed not equal (non zero)
24e8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24eb :                 >skip1180
                        
24eb : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
24ec : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
24ee : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
24f1 : f003            >        beq skip1183
                       >        trap            ;failed not equal (non zero)
24f3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24f6 :                 >skip1183
                        
                                set_stat $ff
                       >            load_flag $ff
24f6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
24f8 : 48              >            pha         ;use stack to load status
24f9 : 28              >            plp
                        
24fa : ac0902                   ldy abs1+1
24fd : 08                       php         ;test stores do not alter flags
24fe : 98                       tya
24ff : 49c3                     eor #$c3
2501 : a8                       tay
2502 : 28                       plp
2503 : 8413                     sty zpt+1
2505 : 08                       php         ;flags after load/store sequence
2506 : 49c3                     eor #$c3
2508 : a8                       tay
2509 : c51a                     cmp zp1+1   ;test result
                                trap_ne
250b : f003            >        beq skip1187
                       >        trap            ;failed not equal (non zero)
250d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2510 :                 >skip1187
                        
2510 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2511 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2513 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
2516 : f003            >        beq skip1190
                       >        trap            ;failed not equal (non zero)
2518 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
251b :                 >skip1190
                        
                                set_stat $ff
                       >            load_flag $ff
251b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
251d : 48              >            pha         ;use stack to load status
251e : 28              >            plp
                        
251f : ac0a02                   ldy abs1+2
2522 : 08                       php         ;test stores do not alter flags
2523 : 98                       tya
2524 : 49c3                     eor #$c3
2526 : a8                       tay
2527 : 28                       plp
2528 : 8414                     sty zpt+2
252a : 08                       php         ;flags after load/store sequence
252b : 49c3                     eor #$c3
252d : a8                       tay
252e : c51b                     cmp zp1+2   ;test result
                                trap_ne
2530 : f003            >        beq skip1194
                       >        trap            ;failed not equal (non zero)
2532 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2535 :                 >skip1194
                        
2535 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2536 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2538 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
253b : f003            >        beq skip1197
                       >        trap            ;failed not equal (non zero)
253d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2540 :                 >skip1197
                        
                                set_stat $ff
                       >            load_flag $ff
2540 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2542 : 48              >            pha         ;use stack to load status
2543 : 28              >            plp
                        
2544 : ac0b02                   ldy abs1+3
2547 : 08                       php         ;test stores do not alter flags
2548 : 98                       tya
2549 : 49c3                     eor #$c3
254b : a8                       tay
254c : 28                       plp
254d : 8415                     sty zpt+3
254f : 08                       php         ;flags after load/store sequence
2550 : 49c3                     eor #$c3
2552 : a8                       tay
2553 : c51c                     cmp zp1+3   ;test result
                                trap_ne
2555 : f003            >        beq skip1201
                       >        trap            ;failed not equal (non zero)
2557 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
255a :                 >skip1201
                        
255a : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
255b : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
255d : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
2560 : f003            >        beq skip1204
                       >        trap            ;failed not equal (non zero)
2562 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2565 :                 >skip1204
                        
                        
                        
                                set_stat 0
                       >            load_flag 0
2565 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2567 : 48              >            pha         ;use stack to load status
2568 : 28              >            plp
                        
2569 : a0c3                     ldy #$c3  
256b : 08                       php
256c : cc0802                   cpy abs1    ;test result
                                trap_ne
256f : f003            >        beq skip1208
                       >        trap            ;failed not equal (non zero)
2571 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2574 :                 >skip1208
                        
2574 : 68                       pla         ;load status
                                eor_flag 0
2575 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2577 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
257a : f003            >        beq skip1211
                       >        trap            ;failed not equal (non zero)
257c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
257f :                 >skip1211
                        
                                set_stat 0
                       >            load_flag 0
257f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2581 : 48              >            pha         ;use stack to load status
2582 : 28              >            plp
                        
2583 : a082                     ldy #$82
2585 : 08                       php
2586 : cc0902                   cpy abs1+1  ;test result
                                trap_ne
2589 : f003            >        beq skip1215
                       >        trap            ;failed not equal (non zero)
258b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
258e :                 >skip1215
                        
258e : 68                       pla         ;load status
                                eor_flag 0
258f : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2591 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
2594 : f003            >        beq skip1218
                       >        trap            ;failed not equal (non zero)
2596 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2599 :                 >skip1218
                        
                                set_stat 0
                       >            load_flag 0
2599 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
259b : 48              >            pha         ;use stack to load status
259c : 28              >            plp
                        
259d : a041                     ldy #$41
259f : 08                       php
25a0 : cc0a02                   cpy abs1+2  ;test result
                                trap_ne
25a3 : f003            >        beq skip1222
                       >        trap            ;failed not equal (non zero)
25a5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25a8 :                 >skip1222
                        
25a8 : 68                       pla         ;load status
                                eor_flag 0
25a9 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
25ab : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
25ae : f003            >        beq skip1225
                       >        trap            ;failed not equal (non zero)
25b0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25b3 :                 >skip1225
                        
                                set_stat 0
                       >            load_flag 0
25b3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
25b5 : 48              >            pha         ;use stack to load status
25b6 : 28              >            plp
                        
25b7 : a000                     ldy #0
25b9 : 08                       php
25ba : cc0b02                   cpy abs1+3  ;test result
                                trap_ne
25bd : f003            >        beq skip1229
                       >        trap            ;failed not equal (non zero)
25bf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25c2 :                 >skip1229
                        
25c2 : 68                       pla         ;load status
                                eor_flag 0
25c3 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
25c5 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
25c8 : f003            >        beq skip1232
                       >        trap            ;failed not equal (non zero)
25ca : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25cd :                 >skip1232
                        
                        
                                set_stat $ff
                       >            load_flag $ff
25cd : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
25cf : 48              >            pha         ;use stack to load status
25d0 : 28              >            plp
                        
25d1 : a0c3                     ldy #$c3  
25d3 : 08                       php
25d4 : cc0802                   cpy abs1    ;test result
                                trap_ne
25d7 : f003            >        beq skip1236
                       >        trap            ;failed not equal (non zero)
25d9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25dc :                 >skip1236
                        
25dc : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
25dd : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
25df : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
25e2 : f003            >        beq skip1239
                       >        trap            ;failed not equal (non zero)
25e4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25e7 :                 >skip1239
                        
                                set_stat $ff
                       >            load_flag $ff
25e7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
25e9 : 48              >            pha         ;use stack to load status
25ea : 28              >            plp
                        
25eb : a082                     ldy #$82
25ed : 08                       php
25ee : cc0902                   cpy abs1+1  ;test result
                                trap_ne
25f1 : f003            >        beq skip1243
                       >        trap            ;failed not equal (non zero)
25f3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25f6 :                 >skip1243
                        
25f6 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
25f7 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
25f9 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
25fc : f003            >        beq skip1246
                       >        trap            ;failed not equal (non zero)
25fe : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2601 :                 >skip1246
                        
                                set_stat $ff
                       >            load_flag $ff
2601 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2603 : 48              >            pha         ;use stack to load status
2604 : 28              >            plp
                        
2605 : a041                     ldy #$41
2607 : 08                       php
2608 : cc0a02                   cpy abs1+2   ;test result
                                trap_ne
260b : f003            >        beq skip1250
                       >        trap            ;failed not equal (non zero)
260d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2610 :                 >skip1250
                        
2610 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2611 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2613 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
2616 : f003            >        beq skip1253
                       >        trap            ;failed not equal (non zero)
2618 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
261b :                 >skip1253
                        
                                set_stat $ff
                       >            load_flag $ff
261b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
261d : 48              >            pha         ;use stack to load status
261e : 28              >            plp
                        
261f : a000                     ldy #0
2621 : 08                       php
2622 : cc0b02                   cpy abs1+3  ;test result
                                trap_ne
2625 : f003            >        beq skip1257
                       >        trap            ;failed not equal (non zero)
2627 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
262a :                 >skip1257
                        
262a : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
262b : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
262d : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
2630 : f003            >        beq skip1260
                       >        trap            ;failed not equal (non zero)
2632 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2635 :                 >skip1260
                        
                                
2635 : a000                     ldy #0
2637 : a512                     lda zpt  
2639 : 49c3                     eor #$c3
263b : c519                     cmp zp1  
                                trap_ne     ;store to zp   data
263d : f003            >        beq skip1262
                       >        trap            ;failed not equal (non zero)
263f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2642 :                 >skip1262
                        
2642 : 8412                     sty zpt     ;clear                
2644 : ad0302                   lda abst  
2647 : 49c3                     eor #$c3
2649 : cd0802                   cmp abs1  
                                trap_ne     ;store to abs   data
264c : f003            >        beq skip1264
                       >        trap            ;failed not equal (non zero)
264e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2651 :                 >skip1264
                        
2651 : 8c0302                   sty abst    ;clear                
2654 : a513                     lda zpt+1
2656 : 49c3                     eor #$c3
2658 : c51a                     cmp zp1+1
                                trap_ne     ;store to zp+1 data
265a : f003            >        beq skip1266
                       >        trap            ;failed not equal (non zero)
265c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
265f :                 >skip1266
                        
265f : 8413                     sty zpt+1   ;clear                
2661 : ad0402                   lda abst+1
2664 : 49c3                     eor #$c3
2666 : cd0902                   cmp abs1+1
                                trap_ne     ;store to abs+1 data
2669 : f003            >        beq skip1268
                       >        trap            ;failed not equal (non zero)
266b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
266e :                 >skip1268
                        
266e : 8c0402                   sty abst+1  ;clear                
2671 : a514                     lda zpt+2
2673 : 49c3                     eor #$c3
2675 : c51b                     cmp zp1+2
                                trap_ne     ;store to zp+2 data
2677 : f003            >        beq skip1270
                       >        trap            ;failed not equal (non zero)
2679 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
267c :                 >skip1270
                        
267c : 8414                     sty zpt+2   ;clear                
267e : ad0502                   lda abst+2
2681 : 49c3                     eor #$c3
2683 : cd0a02                   cmp abs1+2
                                trap_ne     ;store to abs+2 data
2686 : f003            >        beq skip1272
                       >        trap            ;failed not equal (non zero)
2688 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
268b :                 >skip1272
                        
268b : 8c0502                   sty abst+2  ;clear                
268e : a515                     lda zpt+3
2690 : 49c3                     eor #$c3
2692 : c51c                     cmp zp1+3
                                trap_ne     ;store to zp+3 data
2694 : f003            >        beq skip1274
                       >        trap            ;failed not equal (non zero)
2696 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2699 :                 >skip1274
                        
2699 : 8415                     sty zpt+3   ;clear                
269b : ad0602                   lda abst+3
269e : 49c3                     eor #$c3
26a0 : cd0b02                   cmp abs1+3
                                trap_ne     ;store to abs+3 data
26a3 : f003            >        beq skip1276
                       >        trap            ;failed not equal (non zero)
26a5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26a8 :                 >skip1276
                        
26a8 : 8c0602                   sty abst+3  ;clear                
                                next_test
26ab : ad0002          >            lda test_case   ;previous test
26ae : c914            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
26b0 : f003            >        beq skip1279
                       >        trap            ;failed not equal (non zero)
26b2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26b5 :                 >skip1279
                       >
0015 =                 >test_num = test_num + 1
26b5 : a915            >            lda #test_num   ;*** next tests' number
26b7 : 8d0002          >            sta test_case
26ba : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing load / store accumulator LDA / STA all addressing modes
                        ; LDA / STA - zp,x / abs,x
26bd : a203                     ldx #3
26bf :                  tldax    
                                set_stat 0
                       >            load_flag 0
26bf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
26c1 : 48              >            pha         ;use stack to load status
26c2 : 28              >            plp
                        
26c3 : b519                     lda zp1,x
26c5 : 08                       php         ;test stores do not alter flags
26c6 : 49c3                     eor #$c3
26c8 : 28                       plp
26c9 : 9d0302                   sta abst,x
26cc : 08                       php         ;flags after load/store sequence
26cd : 49c3                     eor #$c3
26cf : dd0802                   cmp abs1,x  ;test result
                                trap_ne
26d2 : f003            >        beq skip1283
                       >        trap            ;failed not equal (non zero)
26d4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26d7 :                 >skip1283
                        
26d7 : 68                       pla         ;load status
                                eor_flag 0
26d8 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
26da : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
26dd : f003            >        beq skip1286
                       >        trap            ;failed not equal (non zero)
26df : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26e2 :                 >skip1286
                        
26e2 : ca                       dex
26e3 : 10da                     bpl tldax                  
                        
26e5 : a203                     ldx #3
26e7 :                  tldax1   
                                set_stat $ff
                       >            load_flag $ff
26e7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
26e9 : 48              >            pha         ;use stack to load status
26ea : 28              >            plp
                        
26eb : b519                     lda zp1,x
26ed : 08                       php         ;test stores do not alter flags
26ee : 49c3                     eor #$c3
26f0 : 28                       plp
26f1 : 9d0302                   sta abst,x
26f4 : 08                       php         ;flags after load/store sequence
26f5 : 49c3                     eor #$c3
26f7 : dd0802                   cmp abs1,x   ;test result
                                trap_ne
26fa : f003            >        beq skip1290
                       >        trap            ;failed not equal (non zero)
26fc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26ff :                 >skip1290
                        
26ff : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2700 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2702 : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
2705 : f003            >        beq skip1293
                       >        trap            ;failed not equal (non zero)
2707 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
270a :                 >skip1293
                        
270a : ca                       dex
270b : 10da                     bpl tldax1                  
                        
270d : a203                     ldx #3
270f :                  tldax2   
                                set_stat 0
                       >            load_flag 0
270f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2711 : 48              >            pha         ;use stack to load status
2712 : 28              >            plp
                        
2713 : bd0802                   lda abs1,x
2716 : 08                       php         ;test stores do not alter flags
2717 : 49c3                     eor #$c3
2719 : 28                       plp
271a : 9512                     sta zpt,x
271c : 08                       php         ;flags after load/store sequence
271d : 49c3                     eor #$c3
271f : d519                     cmp zp1,x   ;test result
                                trap_ne
2721 : f003            >        beq skip1297
                       >        trap            ;failed not equal (non zero)
2723 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2726 :                 >skip1297
                        
2726 : 68                       pla         ;load status
                                eor_flag 0
2727 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2729 : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
272c : f003            >        beq skip1300
                       >        trap            ;failed not equal (non zero)
272e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2731 :                 >skip1300
                        
2731 : ca                       dex
2732 : 10db                     bpl tldax2                  
                        
2734 : a203                     ldx #3
2736 :                  tldax3
                                set_stat $ff
                       >            load_flag $ff
2736 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2738 : 48              >            pha         ;use stack to load status
2739 : 28              >            plp
                        
273a : bd0802                   lda abs1,x
273d : 08                       php         ;test stores do not alter flags
273e : 49c3                     eor #$c3
2740 : 28                       plp
2741 : 9512                     sta zpt,x
2743 : 08                       php         ;flags after load/store sequence
2744 : 49c3                     eor #$c3
2746 : d519                     cmp zp1,x   ;test result
                                trap_ne
2748 : f003            >        beq skip1304
                       >        trap            ;failed not equal (non zero)
274a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
274d :                 >skip1304
                        
274d : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
274e : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2750 : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
2753 : f003            >        beq skip1307
                       >        trap            ;failed not equal (non zero)
2755 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2758 :                 >skip1307
                        
2758 : ca                       dex
2759 : 10db                     bpl tldax3
                        
275b : a203                     ldx #3      ;testing store result
275d : a000                     ldy #0
275f : b512             tstax   lda zpt,x
2761 : 49c3                     eor #$c3
2763 : d519                     cmp zp1,x
                                trap_ne     ;store to zp,x data
2765 : f003            >        beq skip1309
                       >        trap            ;failed not equal (non zero)
2767 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
276a :                 >skip1309
                        
276a : 9412                     sty zpt,x   ;clear                
276c : bd0302                   lda abst,x
276f : 49c3                     eor #$c3
2771 : dd0802                   cmp abs1,x
                                trap_ne     ;store to abs,x data
2774 : f003            >        beq skip1311
                       >        trap            ;failed not equal (non zero)
2776 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2779 :                 >skip1311
                        
2779 : 8a                       txa
277a : 9d0302                   sta abst,x  ;clear                
277d : ca                       dex
277e : 10df                     bpl tstax
                                next_test
2780 : ad0002          >            lda test_case   ;previous test
2783 : c915            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2785 : f003            >        beq skip1314
                       >        trap            ;failed not equal (non zero)
2787 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
278a :                 >skip1314
                       >
0016 =                 >test_num = test_num + 1
278a : a916            >            lda #test_num   ;*** next tests' number
278c : 8d0002          >            sta test_case
278f : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; LDA / STA - (zp),y / abs,y / (zp,x)
2792 : a003                     ldy #3
2794 :                  tlday    
                                set_stat 0
                       >            load_flag 0
2794 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2796 : 48              >            pha         ;use stack to load status
2797 : 28              >            plp
                        
2798 : b12a                     lda (ind1),y
279a : 08                       php         ;test stores do not alter flags
279b : 49c3                     eor #$c3
279d : 28                       plp
279e : 990302                   sta abst,y
27a1 : 08                       php         ;flags after load/store sequence
27a2 : 49c3                     eor #$c3
27a4 : d90802                   cmp abs1,y  ;test result
                                trap_ne
27a7 : f003            >        beq skip1318
                       >        trap            ;failed not equal (non zero)
27a9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27ac :                 >skip1318
                        
27ac : 68                       pla         ;load status
                                eor_flag 0
27ad : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
27af : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
27b2 : f003            >        beq skip1321
                       >        trap            ;failed not equal (non zero)
27b4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27b7 :                 >skip1321
                        
27b7 : 88                       dey
27b8 : 10da                     bpl tlday                  
                        
27ba : a003                     ldy #3
27bc :                  tlday1   
                                set_stat $ff
                       >            load_flag $ff
27bc : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
27be : 48              >            pha         ;use stack to load status
27bf : 28              >            plp
                        
27c0 : b12a                     lda (ind1),y
27c2 : 08                       php         ;test stores do not alter flags
27c3 : 49c3                     eor #$c3
27c5 : 28                       plp
27c6 : 990302                   sta abst,y
27c9 : 08                       php         ;flags after load/store sequence
27ca : 49c3                     eor #$c3
27cc : d90802                   cmp abs1,y  ;test result
                                trap_ne
27cf : f003            >        beq skip1325
                       >        trap            ;failed not equal (non zero)
27d1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27d4 :                 >skip1325
                        
27d4 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
27d5 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
27d7 : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
27da : f003            >        beq skip1328
                       >        trap            ;failed not equal (non zero)
27dc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27df :                 >skip1328
                        
27df : 88                       dey
27e0 : 10da                     bpl tlday1                  
                        
27e2 : a003                     ldy #3      ;testing store result
27e4 : a200                     ldx #0
27e6 : b90302           tstay   lda abst,y
27e9 : 49c3                     eor #$c3
27eb : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
27ee : f003            >        beq skip1330
                       >        trap            ;failed not equal (non zero)
27f0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27f3 :                 >skip1330
                        
27f3 : 8a                       txa
27f4 : 990302                   sta abst,y  ;clear                
27f7 : 88                       dey
27f8 : 10ec                     bpl tstay
                        
27fa : a003                     ldy #3
27fc :                  tlday2   
                                set_stat 0
                       >            load_flag 0
27fc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
27fe : 48              >            pha         ;use stack to load status
27ff : 28              >            plp
                        
2800 : b90802                   lda abs1,y
2803 : 08                       php         ;test stores do not alter flags
2804 : 49c3                     eor #$c3
2806 : 28                       plp
2807 : 9136                     sta (indt),y
2809 : 08                       php         ;flags after load/store sequence
280a : 49c3                     eor #$c3
280c : d12a                     cmp (ind1),y    ;test result
                                trap_ne
280e : f003            >        beq skip1334
                       >        trap            ;failed not equal (non zero)
2810 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2813 :                 >skip1334
                        
2813 : 68                       pla         ;load status
                                eor_flag 0
2814 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2816 : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
2819 : f003            >        beq skip1337
                       >        trap            ;failed not equal (non zero)
281b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
281e :                 >skip1337
                        
281e : 88                       dey
281f : 10db                     bpl tlday2                  
                        
2821 : a003                     ldy #3
2823 :                  tlday3   
                                set_stat $ff
                       >            load_flag $ff
2823 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2825 : 48              >            pha         ;use stack to load status
2826 : 28              >            plp
                        
2827 : b90802                   lda abs1,y
282a : 08                       php         ;test stores do not alter flags
282b : 49c3                     eor #$c3
282d : 28                       plp
282e : 9136                     sta (indt),y
2830 : 08                       php         ;flags after load/store sequence
2831 : 49c3                     eor #$c3
2833 : d12a                     cmp (ind1),y   ;test result
                                trap_ne
2835 : f003            >        beq skip1341
                       >        trap            ;failed not equal (non zero)
2837 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
283a :                 >skip1341
                        
283a : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
283b : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
283d : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
2840 : f003            >        beq skip1344
                       >        trap            ;failed not equal (non zero)
2842 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2845 :                 >skip1344
                        
2845 : 88                       dey
2846 : 10db                     bpl tlday3
                                
2848 : a003                     ldy #3      ;testing store result
284a : a200                     ldx #0
284c : b90302           tstay1  lda abst,y
284f : 49c3                     eor #$c3
2851 : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
2854 : f003            >        beq skip1346
                       >        trap            ;failed not equal (non zero)
2856 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2859 :                 >skip1346
                        
2859 : 8a                       txa
285a : 990302                   sta abst,y  ;clear                
285d : 88                       dey
285e : 10ec                     bpl tstay1
                                
2860 : a206                     ldx #6
2862 : a003                     ldy #3
2864 :                  tldax4   
                                set_stat 0
                       >            load_flag 0
2864 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2866 : 48              >            pha         ;use stack to load status
2867 : 28              >            plp
                        
2868 : a12a                     lda (ind1,x)
286a : 08                       php         ;test stores do not alter flags
286b : 49c3                     eor #$c3
286d : 28                       plp
286e : 8136                     sta (indt,x)
2870 : 08                       php         ;flags after load/store sequence
2871 : 49c3                     eor #$c3
2873 : d90802                   cmp abs1,y  ;test result
                                trap_ne
2876 : f003            >        beq skip1350
                       >        trap            ;failed not equal (non zero)
2878 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
287b :                 >skip1350
                        
287b : 68                       pla         ;load status
                                eor_flag 0
287c : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
287e : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
2881 : f003            >        beq skip1353
                       >        trap            ;failed not equal (non zero)
2883 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2886 :                 >skip1353
                        
2886 : ca                       dex
2887 : ca                       dex
2888 : 88                       dey
2889 : 10d9                     bpl tldax4                  
                        
288b : a206                     ldx #6
288d : a003                     ldy #3
288f :                  tldax5
                                set_stat $ff
                       >            load_flag $ff
288f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2891 : 48              >            pha         ;use stack to load status
2892 : 28              >            plp
                        
2893 : a12a                     lda (ind1,x)
2895 : 08                       php         ;test stores do not alter flags
2896 : 49c3                     eor #$c3
2898 : 28                       plp
2899 : 8136                     sta (indt,x)
289b : 08                       php         ;flags after load/store sequence
289c : 49c3                     eor #$c3
289e : d90802                   cmp abs1,y  ;test result
                                trap_ne
28a1 : f003            >        beq skip1357
                       >        trap            ;failed not equal (non zero)
28a3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28a6 :                 >skip1357
                        
28a6 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
28a7 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
28a9 : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
28ac : f003            >        beq skip1360
                       >        trap            ;failed not equal (non zero)
28ae : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28b1 :                 >skip1360
                        
28b1 : ca                       dex
28b2 : ca                       dex
28b3 : 88                       dey
28b4 : 10d9                     bpl tldax5
                        
28b6 : a003                     ldy #3      ;testing store result
28b8 : a200                     ldx #0
28ba : b90302           tstay2  lda abst,y
28bd : 49c3                     eor #$c3
28bf : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
28c2 : f003            >        beq skip1362
                       >        trap            ;failed not equal (non zero)
28c4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28c7 :                 >skip1362
                        
28c7 : 8a                       txa
28c8 : 990302                   sta abst,y  ;clear                
28cb : 88                       dey
28cc : 10ec                     bpl tstay2
                                next_test
28ce : ad0002          >            lda test_case   ;previous test
28d1 : c916            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
28d3 : f003            >        beq skip1365
                       >        trap            ;failed not equal (non zero)
28d5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28d8 :                 >skip1365
                       >
0017 =                 >test_num = test_num + 1
28d8 : a917            >            lda #test_num   ;*** next tests' number
28da : 8d0002          >            sta test_case
28dd : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; indexed wraparound test (only zp should wrap)
28e0 : a2fd                     ldx #3+$fa
28e2 : b51f             tldax6  lda zp1-$fa&$ff,x   ;wrap on indexed zp
28e4 : 9d0901                   sta abst-$fa,x      ;no STX abs,x!
28e7 : ca                       dex
28e8 : e0fa                     cpx #$fa
28ea : b0f6                     bcs tldax6                  
28ec : a2fd                     ldx #3+$fa
28ee : bd0e01           tldax7  lda abs1-$fa,x      ;no wrap on indexed abs
28f1 : 9518                     sta zpt-$fa&$ff,x
28f3 : ca                       dex
28f4 : e0fa                     cpx #$fa
28f6 : b0f6                     bcs tldax7
                                                  
28f8 : a203                     ldx #3      ;testing wraparound result
28fa : a000                     ldy #0
28fc : b512             tstax1  lda zpt,x
28fe : d519                     cmp zp1,x
                                trap_ne     ;store to zp,x data
2900 : f003            >        beq skip1367
                       >        trap            ;failed not equal (non zero)
2902 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2905 :                 >skip1367
                        
2905 : 9412                     sty zpt,x   ;clear                
2907 : bd0302                   lda abst,x
290a : dd0802                   cmp abs1,x
                                trap_ne     ;store to abs,x data
290d : f003            >        beq skip1369
                       >        trap            ;failed not equal (non zero)
290f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2912 :                 >skip1369
                        
2912 : 8a                       txa
2913 : 9d0302                   sta abst,x  ;clear                
2916 : ca                       dex
2917 : 10e3                     bpl tstax1
                        
2919 : a0fb                     ldy #3+$f8
291b : a2fe                     ldx #6+$f8
291d : a132             tlday4  lda (ind1-$f8&$ff,x) ;wrap on indexed zp indirect
291f : 990b01                   sta abst-$f8,y
2922 : ca                       dex
2923 : ca                       dex
2924 : 88                       dey
2925 : c0f8                     cpy #$f8
2927 : b0f4                     bcs tlday4
2929 : a003                     ldy #3      ;testing wraparound result
292b : a200                     ldx #0
292d : b90302           tstay4  lda abst,y
2930 : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
2933 : f003            >        beq skip1371
                       >        trap            ;failed not equal (non zero)
2935 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2938 :                 >skip1371
                        
2938 : 8a                       txa
2939 : 990302                   sta abst,y  ;clear                
293c : 88                       dey
293d : 10ee                     bpl tstay4
                                
293f : a0fb                     ldy #3+$f8
2941 : b91001           tlday5  lda abs1-$f8,y  ;no wrap on indexed abs
2944 : 913e                     sta (inwt),y
2946 : 88                       dey
2947 : c0f8                     cpy #$f8
2949 : b0f6                     bcs tlday5                  
294b : a003                     ldy #3      ;testing wraparound result
294d : a200                     ldx #0
294f : b90302           tstay5  lda abst,y
2952 : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
2955 : f003            >        beq skip1373
                       >        trap            ;failed not equal (non zero)
2957 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
295a :                 >skip1373
                        
295a : 8a                       txa
295b : 990302                   sta abst,y  ;clear                
295e : 88                       dey
295f : 10ee                     bpl tstay5
                        
2961 : a0fb                     ldy #3+$f8
2963 : a2fe                     ldx #6+$f8
2965 : b134             tlday6  lda (inw1),y    ;no wrap on zp indirect indexed 
2967 : 813e                     sta (indt-$f8&$ff,x)
2969 : ca                       dex
296a : ca                       dex
296b : 88                       dey
296c : c0f8                     cpy #$f8
296e : b0f5                     bcs tlday6
2970 : a003                     ldy #3      ;testing wraparound result
2972 : a200                     ldx #0
2974 : b90302           tstay6  lda abst,y
2977 : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
297a : f003            >        beq skip1375
                       >        trap            ;failed not equal (non zero)
297c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
297f :                 >skip1375
                        
297f : 8a                       txa
2980 : 990302                   sta abst,y  ;clear                
2983 : 88                       dey
2984 : 10ee                     bpl tstay6
                                next_test
2986 : ad0002          >            lda test_case   ;previous test
2989 : c917            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
298b : f003            >        beq skip1378
                       >        trap            ;failed not equal (non zero)
298d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2990 :                 >skip1378
                       >
0018 =                 >test_num = test_num + 1
2990 : a918            >            lda #test_num   ;*** next tests' number
2992 : 8d0002          >            sta test_case
2995 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; LDA / STA - zp / abs / #
                                set_stat 0  
                       >            load_flag 0  
2998 : a900            >            lda #0               ;allow test to change I-flag (no mask)
                       >
299a : 48              >            pha         ;use stack to load status
299b : 28              >            plp
                        
299c : a519                     lda zp1
299e : 08                       php         ;test stores do not alter flags
299f : 49c3                     eor #$c3
29a1 : 28                       plp
29a2 : 8d0302                   sta abst
29a5 : 08                       php         ;flags after load/store sequence
29a6 : 49c3                     eor #$c3
29a8 : c9c3                     cmp #$c3    ;test result
                                trap_ne
29aa : f003            >        beq skip1382
                       >        trap            ;failed not equal (non zero)
29ac : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29af :                 >skip1382
                        
29af : 68                       pla         ;load status
                                eor_flag 0
29b0 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
29b2 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
29b5 : f003            >        beq skip1385
                       >        trap            ;failed not equal (non zero)
29b7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29ba :                 >skip1385
                        
                                set_stat 0
                       >            load_flag 0
29ba : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
29bc : 48              >            pha         ;use stack to load status
29bd : 28              >            plp
                        
29be : a51a                     lda zp1+1
29c0 : 08                       php         ;test stores do not alter flags
29c1 : 49c3                     eor #$c3
29c3 : 28                       plp
29c4 : 8d0402                   sta abst+1
29c7 : 08                       php         ;flags after load/store sequence
29c8 : 49c3                     eor #$c3
29ca : c982                     cmp #$82    ;test result
                                trap_ne
29cc : f003            >        beq skip1389
                       >        trap            ;failed not equal (non zero)
29ce : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29d1 :                 >skip1389
                        
29d1 : 68                       pla         ;load status
                                eor_flag 0
29d2 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
29d4 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
29d7 : f003            >        beq skip1392
                       >        trap            ;failed not equal (non zero)
29d9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29dc :                 >skip1392
                        
                                set_stat 0
                       >            load_flag 0
29dc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
29de : 48              >            pha         ;use stack to load status
29df : 28              >            plp
                        
29e0 : a51b                     lda zp1+2
29e2 : 08                       php         ;test stores do not alter flags
29e3 : 49c3                     eor #$c3
29e5 : 28                       plp
29e6 : 8d0502                   sta abst+2
29e9 : 08                       php         ;flags after load/store sequence
29ea : 49c3                     eor #$c3
29ec : c941                     cmp #$41    ;test result
                                trap_ne
29ee : f003            >        beq skip1396
                       >        trap            ;failed not equal (non zero)
29f0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29f3 :                 >skip1396
                        
29f3 : 68                       pla         ;load status
                                eor_flag 0
29f4 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
29f6 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
29f9 : f003            >        beq skip1399
                       >        trap            ;failed not equal (non zero)
29fb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29fe :                 >skip1399
                        
                                set_stat 0
                       >            load_flag 0
29fe : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2a00 : 48              >            pha         ;use stack to load status
2a01 : 28              >            plp
                        
2a02 : a51c                     lda zp1+3
2a04 : 08                       php         ;test stores do not alter flags
2a05 : 49c3                     eor #$c3
2a07 : 28                       plp
2a08 : 8d0602                   sta abst+3
2a0b : 08                       php         ;flags after load/store sequence
2a0c : 49c3                     eor #$c3
2a0e : c900                     cmp #0      ;test result
                                trap_ne
2a10 : f003            >        beq skip1403
                       >        trap            ;failed not equal (non zero)
2a12 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a15 :                 >skip1403
                        
2a15 : 68                       pla         ;load status
                                eor_flag 0
2a16 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2a18 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
2a1b : f003            >        beq skip1406
                       >        trap            ;failed not equal (non zero)
2a1d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a20 :                 >skip1406
                        
                                set_stat $ff
                       >            load_flag $ff
2a20 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2a22 : 48              >            pha         ;use stack to load status
2a23 : 28              >            plp
                        
2a24 : a519                     lda zp1  
2a26 : 08                       php         ;test stores do not alter flags
2a27 : 49c3                     eor #$c3
2a29 : 28                       plp
2a2a : 8d0302                   sta abst  
2a2d : 08                       php         ;flags after load/store sequence
2a2e : 49c3                     eor #$c3
2a30 : c9c3                     cmp #$c3    ;test result
                                trap_ne
2a32 : f003            >        beq skip1410
                       >        trap            ;failed not equal (non zero)
2a34 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a37 :                 >skip1410
                        
2a37 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2a38 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2a3a : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
2a3d : f003            >        beq skip1413
                       >        trap            ;failed not equal (non zero)
2a3f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a42 :                 >skip1413
                        
                                set_stat $ff
                       >            load_flag $ff
2a42 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2a44 : 48              >            pha         ;use stack to load status
2a45 : 28              >            plp
                        
2a46 : a51a                     lda zp1+1
2a48 : 08                       php         ;test stores do not alter flags
2a49 : 49c3                     eor #$c3
2a4b : 28                       plp
2a4c : 8d0402                   sta abst+1
2a4f : 08                       php         ;flags after load/store sequence
2a50 : 49c3                     eor #$c3
2a52 : c982                     cmp #$82    ;test result
                                trap_ne
2a54 : f003            >        beq skip1417
                       >        trap            ;failed not equal (non zero)
2a56 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a59 :                 >skip1417
                        
2a59 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2a5a : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2a5c : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
2a5f : f003            >        beq skip1420
                       >        trap            ;failed not equal (non zero)
2a61 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a64 :                 >skip1420
                        
                                set_stat $ff
                       >            load_flag $ff
2a64 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2a66 : 48              >            pha         ;use stack to load status
2a67 : 28              >            plp
                        
2a68 : a51b                     lda zp1+2
2a6a : 08                       php         ;test stores do not alter flags
2a6b : 49c3                     eor #$c3
2a6d : 28                       plp
2a6e : 8d0502                   sta abst+2
2a71 : 08                       php         ;flags after load/store sequence
2a72 : 49c3                     eor #$c3
2a74 : c941                     cmp #$41    ;test result
                                trap_ne
2a76 : f003            >        beq skip1424
                       >        trap            ;failed not equal (non zero)
2a78 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a7b :                 >skip1424
                        
2a7b : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2a7c : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2a7e : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
2a81 : f003            >        beq skip1427
                       >        trap            ;failed not equal (non zero)
2a83 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a86 :                 >skip1427
                        
                                set_stat $ff
                       >            load_flag $ff
2a86 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2a88 : 48              >            pha         ;use stack to load status
2a89 : 28              >            plp
                        
2a8a : a51c                     lda zp1+3
2a8c : 08                       php         ;test stores do not alter flags
2a8d : 49c3                     eor #$c3
2a8f : 28                       plp
2a90 : 8d0602                   sta abst+3
2a93 : 08                       php         ;flags after load/store sequence
2a94 : 49c3                     eor #$c3
2a96 : c900                     cmp #0      ;test result
                                trap_ne
2a98 : f003            >        beq skip1431
                       >        trap            ;failed not equal (non zero)
2a9a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a9d :                 >skip1431
                        
2a9d : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2a9e : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2aa0 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
2aa3 : f003            >        beq skip1434
                       >        trap            ;failed not equal (non zero)
2aa5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2aa8 :                 >skip1434
                        
                                set_stat 0
                       >            load_flag 0
2aa8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2aaa : 48              >            pha         ;use stack to load status
2aab : 28              >            plp
                        
2aac : ad0802                   lda abs1  
2aaf : 08                       php         ;test stores do not alter flags
2ab0 : 49c3                     eor #$c3
2ab2 : 28                       plp
2ab3 : 8512                     sta zpt  
2ab5 : 08                       php         ;flags after load/store sequence
2ab6 : 49c3                     eor #$c3
2ab8 : c519                     cmp zp1     ;test result
                                trap_ne
2aba : f003            >        beq skip1438
                       >        trap            ;failed not equal (non zero)
2abc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2abf :                 >skip1438
                        
2abf : 68                       pla         ;load status
                                eor_flag 0
2ac0 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2ac2 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
2ac5 : f003            >        beq skip1441
                       >        trap            ;failed not equal (non zero)
2ac7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2aca :                 >skip1441
                        
                                set_stat 0
                       >            load_flag 0
2aca : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2acc : 48              >            pha         ;use stack to load status
2acd : 28              >            plp
                        
2ace : ad0902                   lda abs1+1
2ad1 : 08                       php         ;test stores do not alter flags
2ad2 : 49c3                     eor #$c3
2ad4 : 28                       plp
2ad5 : 8513                     sta zpt+1
2ad7 : 08                       php         ;flags after load/store sequence
2ad8 : 49c3                     eor #$c3
2ada : c51a                     cmp zp1+1   ;test result
                                trap_ne
2adc : f003            >        beq skip1445
                       >        trap            ;failed not equal (non zero)
2ade : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ae1 :                 >skip1445
                        
2ae1 : 68                       pla         ;load status
                                eor_flag 0
2ae2 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2ae4 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
2ae7 : f003            >        beq skip1448
                       >        trap            ;failed not equal (non zero)
2ae9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2aec :                 >skip1448
                        
                                set_stat 0
                       >            load_flag 0
2aec : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2aee : 48              >            pha         ;use stack to load status
2aef : 28              >            plp
                        
2af0 : ad0a02                   lda abs1+2
2af3 : 08                       php         ;test stores do not alter flags
2af4 : 49c3                     eor #$c3
2af6 : 28                       plp
2af7 : 8514                     sta zpt+2
2af9 : 08                       php         ;flags after load/store sequence
2afa : 49c3                     eor #$c3
2afc : c51b                     cmp zp1+2   ;test result
                                trap_ne
2afe : f003            >        beq skip1452
                       >        trap            ;failed not equal (non zero)
2b00 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b03 :                 >skip1452
                        
2b03 : 68                       pla         ;load status
                                eor_flag 0
2b04 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2b06 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
2b09 : f003            >        beq skip1455
                       >        trap            ;failed not equal (non zero)
2b0b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b0e :                 >skip1455
                        
                                set_stat 0
                       >            load_flag 0
2b0e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2b10 : 48              >            pha         ;use stack to load status
2b11 : 28              >            plp
                        
2b12 : ad0b02                   lda abs1+3
2b15 : 08                       php         ;test stores do not alter flags
2b16 : 49c3                     eor #$c3
2b18 : 28                       plp
2b19 : 8515                     sta zpt+3
2b1b : 08                       php         ;flags after load/store sequence
2b1c : 49c3                     eor #$c3
2b1e : c51c                     cmp zp1+3   ;test result
                                trap_ne
2b20 : f003            >        beq skip1459
                       >        trap            ;failed not equal (non zero)
2b22 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b25 :                 >skip1459
                        
2b25 : 68                       pla         ;load status
                                eor_flag 0
2b26 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2b28 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
2b2b : f003            >        beq skip1462
                       >        trap            ;failed not equal (non zero)
2b2d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b30 :                 >skip1462
                        
                                set_stat $ff
                       >            load_flag $ff
2b30 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2b32 : 48              >            pha         ;use stack to load status
2b33 : 28              >            plp
                        
2b34 : ad0802                   lda abs1  
2b37 : 08                       php         ;test stores do not alter flags
2b38 : 49c3                     eor #$c3
2b3a : 28                       plp
2b3b : 8512                     sta zpt  
2b3d : 08                       php         ;flags after load/store sequence
2b3e : 49c3                     eor #$c3
2b40 : c519                     cmp zp1     ;test result
                                trap_ne
2b42 : f003            >        beq skip1466
                       >        trap            ;failed not equal (non zero)
2b44 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b47 :                 >skip1466
                        
2b47 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2b48 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2b4a : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
2b4d : f003            >        beq skip1469
                       >        trap            ;failed not equal (non zero)
2b4f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b52 :                 >skip1469
                        
                                set_stat $ff
                       >            load_flag $ff
2b52 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2b54 : 48              >            pha         ;use stack to load status
2b55 : 28              >            plp
                        
2b56 : ad0902                   lda abs1+1
2b59 : 08                       php         ;test stores do not alter flags
2b5a : 49c3                     eor #$c3
2b5c : 28                       plp
2b5d : 8513                     sta zpt+1
2b5f : 08                       php         ;flags after load/store sequence
2b60 : 49c3                     eor #$c3
2b62 : c51a                     cmp zp1+1   ;test result
                                trap_ne
2b64 : f003            >        beq skip1473
                       >        trap            ;failed not equal (non zero)
2b66 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b69 :                 >skip1473
                        
2b69 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2b6a : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2b6c : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
2b6f : f003            >        beq skip1476
                       >        trap            ;failed not equal (non zero)
2b71 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b74 :                 >skip1476
                        
                                set_stat $ff
                       >            load_flag $ff
2b74 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2b76 : 48              >            pha         ;use stack to load status
2b77 : 28              >            plp
                        
2b78 : ad0a02                   lda abs1+2
2b7b : 08                       php         ;test stores do not alter flags
2b7c : 49c3                     eor #$c3
2b7e : 28                       plp
2b7f : 8514                     sta zpt+2
2b81 : 08                       php         ;flags after load/store sequence
2b82 : 49c3                     eor #$c3
2b84 : c51b                     cmp zp1+2   ;test result
                                trap_ne
2b86 : f003            >        beq skip1480
                       >        trap            ;failed not equal (non zero)
2b88 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b8b :                 >skip1480
                        
2b8b : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2b8c : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2b8e : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
2b91 : f003            >        beq skip1483
                       >        trap            ;failed not equal (non zero)
2b93 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b96 :                 >skip1483
                        
                                set_stat $ff
                       >            load_flag $ff
2b96 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2b98 : 48              >            pha         ;use stack to load status
2b99 : 28              >            plp
                        
2b9a : ad0b02                   lda abs1+3
2b9d : 08                       php         ;test stores do not alter flags
2b9e : 49c3                     eor #$c3
2ba0 : 28                       plp
2ba1 : 8515                     sta zpt+3
2ba3 : 08                       php         ;flags after load/store sequence
2ba4 : 49c3                     eor #$c3
2ba6 : c51c                     cmp zp1+3   ;test result
                                trap_ne
2ba8 : f003            >        beq skip1487
                       >        trap            ;failed not equal (non zero)
2baa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2bad :                 >skip1487
                        
2bad : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2bae : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2bb0 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
2bb3 : f003            >        beq skip1490
                       >        trap            ;failed not equal (non zero)
2bb5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2bb8 :                 >skip1490
                        
                                set_stat 0  
                       >            load_flag 0  
2bb8 : a900            >            lda #0               ;allow test to change I-flag (no mask)
                       >
2bba : 48              >            pha         ;use stack to load status
2bbb : 28              >            plp
                        
2bbc : a9c3                     lda #$c3
2bbe : 08                       php
2bbf : cd0802                   cmp abs1    ;test result
                                trap_ne
2bc2 : f003            >        beq skip1494
                       >        trap            ;failed not equal (non zero)
2bc4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2bc7 :                 >skip1494
                        
2bc7 : 68                       pla         ;load status
                                eor_flag 0
2bc8 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2bca : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
2bcd : f003            >        beq skip1497
                       >        trap            ;failed not equal (non zero)
2bcf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2bd2 :                 >skip1497
                        
                                set_stat 0
                       >            load_flag 0
2bd2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2bd4 : 48              >            pha         ;use stack to load status
2bd5 : 28              >            plp
                        
2bd6 : a982                     lda #$82
2bd8 : 08                       php
2bd9 : cd0902                   cmp abs1+1  ;test result
                                trap_ne
2bdc : f003            >        beq skip1501
                       >        trap            ;failed not equal (non zero)
2bde : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2be1 :                 >skip1501
                        
2be1 : 68                       pla         ;load status
                                eor_flag 0
2be2 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2be4 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
2be7 : f003            >        beq skip1504
                       >        trap            ;failed not equal (non zero)
2be9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2bec :                 >skip1504
                        
                                set_stat 0
                       >            load_flag 0
2bec : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2bee : 48              >            pha         ;use stack to load status
2bef : 28              >            plp
                        
2bf0 : a941                     lda #$41
2bf2 : 08                       php
2bf3 : cd0a02                   cmp abs1+2  ;test result
                                trap_ne
2bf6 : f003            >        beq skip1508
                       >        trap            ;failed not equal (non zero)
2bf8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2bfb :                 >skip1508
                        
2bfb : 68                       pla         ;load status
                                eor_flag 0
2bfc : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2bfe : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
2c01 : f003            >        beq skip1511
                       >        trap            ;failed not equal (non zero)
2c03 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c06 :                 >skip1511
                        
                                set_stat 0
                       >            load_flag 0
2c06 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2c08 : 48              >            pha         ;use stack to load status
2c09 : 28              >            plp
                        
2c0a : a900                     lda #0
2c0c : 08                       php
2c0d : cd0b02                   cmp abs1+3  ;test result
                                trap_ne
2c10 : f003            >        beq skip1515
                       >        trap            ;failed not equal (non zero)
2c12 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c15 :                 >skip1515
                        
2c15 : 68                       pla         ;load status
                                eor_flag 0
2c16 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2c18 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
2c1b : f003            >        beq skip1518
                       >        trap            ;failed not equal (non zero)
2c1d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c20 :                 >skip1518
                        
                        
                                set_stat $ff
                       >            load_flag $ff
2c20 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2c22 : 48              >            pha         ;use stack to load status
2c23 : 28              >            plp
                        
2c24 : a9c3                     lda #$c3  
2c26 : 08                       php
2c27 : cd0802                   cmp abs1    ;test result
                                trap_ne
2c2a : f003            >        beq skip1522
                       >        trap            ;failed not equal (non zero)
2c2c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c2f :                 >skip1522
                        
2c2f : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2c30 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2c32 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
2c35 : f003            >        beq skip1525
                       >        trap            ;failed not equal (non zero)
2c37 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c3a :                 >skip1525
                        
                                set_stat $ff
                       >            load_flag $ff
2c3a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2c3c : 48              >            pha         ;use stack to load status
2c3d : 28              >            plp
                        
2c3e : a982                     lda #$82
2c40 : 08                       php
2c41 : cd0902                   cmp abs1+1  ;test result
                                trap_ne
2c44 : f003            >        beq skip1529
                       >        trap            ;failed not equal (non zero)
2c46 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c49 :                 >skip1529
                        
2c49 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2c4a : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2c4c : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
2c4f : f003            >        beq skip1532
                       >        trap            ;failed not equal (non zero)
2c51 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c54 :                 >skip1532
                        
                                set_stat $ff
                       >            load_flag $ff
2c54 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2c56 : 48              >            pha         ;use stack to load status
2c57 : 28              >            plp
                        
2c58 : a941                     lda #$41
2c5a : 08                       php
2c5b : cd0a02                   cmp abs1+2  ;test result
                                trap_ne
2c5e : f003            >        beq skip1536
                       >        trap            ;failed not equal (non zero)
2c60 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c63 :                 >skip1536
                        
2c63 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2c64 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2c66 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
2c69 : f003            >        beq skip1539
                       >        trap            ;failed not equal (non zero)
2c6b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c6e :                 >skip1539
                        
                                set_stat $ff
                       >            load_flag $ff
2c6e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2c70 : 48              >            pha         ;use stack to load status
2c71 : 28              >            plp
                        
2c72 : a900                     lda #0
2c74 : 08                       php
2c75 : cd0b02                   cmp abs1+3  ;test result
                                trap_ne
2c78 : f003            >        beq skip1543
                       >        trap            ;failed not equal (non zero)
2c7a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c7d :                 >skip1543
                        
2c7d : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2c7e : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2c80 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
2c83 : f003            >        beq skip1546
                       >        trap            ;failed not equal (non zero)
2c85 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c88 :                 >skip1546
                        
                        
2c88 : a200                     ldx #0
2c8a : a512                     lda zpt  
2c8c : 49c3                     eor #$c3
2c8e : c519                     cmp zp1  
                                trap_ne     ;store to zp data
2c90 : f003            >        beq skip1548
                       >        trap            ;failed not equal (non zero)
2c92 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c95 :                 >skip1548
                        
2c95 : 8612                     stx zpt     ;clear                
2c97 : ad0302                   lda abst  
2c9a : 49c3                     eor #$c3
2c9c : cd0802                   cmp abs1  
                                trap_ne     ;store to abs data
2c9f : f003            >        beq skip1550
                       >        trap            ;failed not equal (non zero)
2ca1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ca4 :                 >skip1550
                        
2ca4 : 8e0302                   stx abst    ;clear                
2ca7 : a513                     lda zpt+1
2ca9 : 49c3                     eor #$c3
2cab : c51a                     cmp zp1+1
                                trap_ne     ;store to zp data
2cad : f003            >        beq skip1552
                       >        trap            ;failed not equal (non zero)
2caf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2cb2 :                 >skip1552
                        
2cb2 : 8613                     stx zpt+1   ;clear                
2cb4 : ad0402                   lda abst+1
2cb7 : 49c3                     eor #$c3
2cb9 : cd0902                   cmp abs1+1
                                trap_ne     ;store to abs data
2cbc : f003            >        beq skip1554
                       >        trap            ;failed not equal (non zero)
2cbe : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2cc1 :                 >skip1554
                        
2cc1 : 8e0402                   stx abst+1  ;clear                
2cc4 : a514                     lda zpt+2
2cc6 : 49c3                     eor #$c3
2cc8 : c51b                     cmp zp1+2
                                trap_ne     ;store to zp data
2cca : f003            >        beq skip1556
                       >        trap            ;failed not equal (non zero)
2ccc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ccf :                 >skip1556
                        
2ccf : 8614                     stx zpt+2   ;clear                
2cd1 : ad0502                   lda abst+2
2cd4 : 49c3                     eor #$c3
2cd6 : cd0a02                   cmp abs1+2
                                trap_ne     ;store to abs data
2cd9 : f003            >        beq skip1558
                       >        trap            ;failed not equal (non zero)
2cdb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2cde :                 >skip1558
                        
2cde : 8e0502                   stx abst+2  ;clear                
2ce1 : a515                     lda zpt+3
2ce3 : 49c3                     eor #$c3
2ce5 : c51c                     cmp zp1+3
                                trap_ne     ;store to zp data
2ce7 : f003            >        beq skip1560
                       >        trap            ;failed not equal (non zero)
2ce9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2cec :                 >skip1560
                        
2cec : 8615                     stx zpt+3   ;clear                
2cee : ad0602                   lda abst+3
2cf1 : 49c3                     eor #$c3
2cf3 : cd0b02                   cmp abs1+3
                                trap_ne     ;store to abs data
2cf6 : f003            >        beq skip1562
                       >        trap            ;failed not equal (non zero)
2cf8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2cfb :                 >skip1562
                        
2cfb : 8e0602                   stx abst+3  ;clear                
                                next_test
2cfe : ad0002          >            lda test_case   ;previous test
2d01 : c918            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2d03 : f003            >        beq skip1565
                       >        trap            ;failed not equal (non zero)
2d05 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d08 :                 >skip1565
                       >
0019 =                 >test_num = test_num + 1
2d08 : a919            >            lda #test_num   ;*** next tests' number
2d0a : 8d0002          >            sta test_case
2d0d : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing bit test & compares BIT CPX CPY CMP all addressing modes
                        ; BIT - zp / abs
                                set_a $ff,0
                       >            load_flag 0
2d10 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2d12 : 48              >            pha         ;use stack to load status
2d13 : a9ff            >            lda #$ff     ;precharge accu
2d15 : 28              >            plp
                        
2d16 : 241c                     bit zp1+3   ;00 - should set Z / clear  NV
                                tst_a $ff,fz 
2d18 : 08              >            php         ;save flags
2d19 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
2d1b : f003            >        beq skip1570
                       >        trap            ;failed not equal (non zero)
2d1d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d20 :                 >skip1570
                       >
2d20 : 68              >            pla         ;load status
2d21 : 48              >            pha
                       >            cmp_flag fz 
2d22 : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2d24 : f003            >        beq skip1573
                       >        trap            ;failed not equal (non zero)
2d26 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d29 :                 >skip1573
                       >
2d29 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
2d2a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2d2c : 48              >            pha         ;use stack to load status
2d2d : a901            >            lda #1     ;precharge accu
2d2f : 28              >            plp
                        
2d30 : 241b                     bit zp1+2   ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
2d32 : 08              >            php         ;save flags
2d33 : c901            >            cmp #1     ;test result
                       >            trap_ne
2d35 : f003            >        beq skip1578
                       >        trap            ;failed not equal (non zero)
2d37 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d3a :                 >skip1578
                       >
2d3a : 68              >            pla         ;load status
2d3b : 48              >            pha
                       >            cmp_flag fv
2d3c : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2d3e : f003            >        beq skip1581
                       >        trap            ;failed not equal (non zero)
2d40 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d43 :                 >skip1581
                       >
2d43 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
2d44 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2d46 : 48              >            pha         ;use stack to load status
2d47 : a901            >            lda #1     ;precharge accu
2d49 : 28              >            plp
                        
2d4a : 241a                     bit zp1+1   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
2d4c : 08              >            php         ;save flags
2d4d : c901            >            cmp #1     ;test result
                       >            trap_ne
2d4f : f003            >        beq skip1586
                       >        trap            ;failed not equal (non zero)
2d51 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d54 :                 >skip1586
                       >
2d54 : 68              >            pla         ;load status
2d55 : 48              >            pha
                       >            cmp_flag fnz
2d56 : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2d58 : f003            >        beq skip1589
                       >        trap            ;failed not equal (non zero)
2d5a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d5d :                 >skip1589
                       >
2d5d : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
2d5e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2d60 : 48              >            pha         ;use stack to load status
2d61 : a901            >            lda #1     ;precharge accu
2d63 : 28              >            plp
                        
2d64 : 2419                     bit zp1     ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
2d66 : 08              >            php         ;save flags
2d67 : c901            >            cmp #1     ;test result
                       >            trap_ne
2d69 : f003            >        beq skip1594
                       >        trap            ;failed not equal (non zero)
2d6b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d6e :                 >skip1594
                       >
2d6e : 68              >            pla         ;load status
2d6f : 48              >            pha
                       >            cmp_flag fnv
2d70 : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2d72 : f003            >        beq skip1597
                       >        trap            ;failed not equal (non zero)
2d74 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d77 :                 >skip1597
                       >
2d77 : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,$ff
                       >            load_flag $ff
2d78 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2d7a : 48              >            pha         ;use stack to load status
2d7b : a9ff            >            lda #$ff     ;precharge accu
2d7d : 28              >            plp
                        
2d7e : 241c                     bit zp1+3   ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv 
2d80 : 08              >            php         ;save flags
2d81 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
2d83 : f003            >        beq skip1602
                       >        trap            ;failed not equal (non zero)
2d85 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d88 :                 >skip1602
                       >
2d88 : 68              >            pla         ;load status
2d89 : 48              >            pha
                       >            cmp_flag ~fnv 
2d8a : c93f            >            cmp #(~fnv |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2d8c : f003            >        beq skip1605
                       >        trap            ;failed not equal (non zero)
2d8e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d91 :                 >skip1605
                       >
2d91 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
2d92 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2d94 : 48              >            pha         ;use stack to load status
2d95 : a901            >            lda #1     ;precharge accu
2d97 : 28              >            plp
                        
2d98 : 241b                     bit zp1+2   ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
2d9a : 08              >            php         ;save flags
2d9b : c901            >            cmp #1     ;test result
                       >            trap_ne
2d9d : f003            >        beq skip1610
                       >        trap            ;failed not equal (non zero)
2d9f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2da2 :                 >skip1610
                       >
2da2 : 68              >            pla         ;load status
2da3 : 48              >            pha
                       >            cmp_flag ~fnz
2da4 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2da6 : f003            >        beq skip1613
                       >        trap            ;failed not equal (non zero)
2da8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2dab :                 >skip1613
                       >
2dab : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
2dac : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2dae : 48              >            pha         ;use stack to load status
2daf : a901            >            lda #1     ;precharge accu
2db1 : 28              >            plp
                        
2db2 : 241a                     bit zp1+1   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
2db4 : 08              >            php         ;save flags
2db5 : c901            >            cmp #1     ;test result
                       >            trap_ne
2db7 : f003            >        beq skip1618
                       >        trap            ;failed not equal (non zero)
2db9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2dbc :                 >skip1618
                       >
2dbc : 68              >            pla         ;load status
2dbd : 48              >            pha
                       >            cmp_flag ~fv
2dbe : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2dc0 : f003            >        beq skip1621
                       >        trap            ;failed not equal (non zero)
2dc2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2dc5 :                 >skip1621
                       >
2dc5 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
2dc6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2dc8 : 48              >            pha         ;use stack to load status
2dc9 : a901            >            lda #1     ;precharge accu
2dcb : 28              >            plp
                        
2dcc : 2419                     bit zp1     ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
2dce : 08              >            php         ;save flags
2dcf : c901            >            cmp #1     ;test result
                       >            trap_ne
2dd1 : f003            >        beq skip1626
                       >        trap            ;failed not equal (non zero)
2dd3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2dd6 :                 >skip1626
                       >
2dd6 : 68              >            pla         ;load status
2dd7 : 48              >            pha
                       >            cmp_flag ~fz
2dd8 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2dda : f003            >        beq skip1629
                       >        trap            ;failed not equal (non zero)
2ddc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ddf :                 >skip1629
                       >
2ddf : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,0
                       >            load_flag 0
2de0 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2de2 : 48              >            pha         ;use stack to load status
2de3 : a9ff            >            lda #$ff     ;precharge accu
2de5 : 28              >            plp
                        
2de6 : 2c0b02                   bit abs1+3  ;00 - should set Z / clear  NV
                                tst_a $ff,fz 
2de9 : 08              >            php         ;save flags
2dea : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
2dec : f003            >        beq skip1634
                       >        trap            ;failed not equal (non zero)
2dee : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2df1 :                 >skip1634
                       >
2df1 : 68              >            pla         ;load status
2df2 : 48              >            pha
                       >            cmp_flag fz 
2df3 : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2df5 : f003            >        beq skip1637
                       >        trap            ;failed not equal (non zero)
2df7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2dfa :                 >skip1637
                       >
2dfa : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
2dfb : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2dfd : 48              >            pha         ;use stack to load status
2dfe : a901            >            lda #1     ;precharge accu
2e00 : 28              >            plp
                        
2e01 : 2c0a02                   bit abs1+2  ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
2e04 : 08              >            php         ;save flags
2e05 : c901            >            cmp #1     ;test result
                       >            trap_ne
2e07 : f003            >        beq skip1642
                       >        trap            ;failed not equal (non zero)
2e09 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e0c :                 >skip1642
                       >
2e0c : 68              >            pla         ;load status
2e0d : 48              >            pha
                       >            cmp_flag fv
2e0e : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2e10 : f003            >        beq skip1645
                       >        trap            ;failed not equal (non zero)
2e12 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e15 :                 >skip1645
                       >
2e15 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
2e16 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2e18 : 48              >            pha         ;use stack to load status
2e19 : a901            >            lda #1     ;precharge accu
2e1b : 28              >            plp
                        
2e1c : 2c0902                   bit abs1+1  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
2e1f : 08              >            php         ;save flags
2e20 : c901            >            cmp #1     ;test result
                       >            trap_ne
2e22 : f003            >        beq skip1650
                       >        trap            ;failed not equal (non zero)
2e24 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e27 :                 >skip1650
                       >
2e27 : 68              >            pla         ;load status
2e28 : 48              >            pha
                       >            cmp_flag fnz
2e29 : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2e2b : f003            >        beq skip1653
                       >        trap            ;failed not equal (non zero)
2e2d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e30 :                 >skip1653
                       >
2e30 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
2e31 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2e33 : 48              >            pha         ;use stack to load status
2e34 : a901            >            lda #1     ;precharge accu
2e36 : 28              >            plp
                        
2e37 : 2c0802                   bit abs1    ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
2e3a : 08              >            php         ;save flags
2e3b : c901            >            cmp #1     ;test result
                       >            trap_ne
2e3d : f003            >        beq skip1658
                       >        trap            ;failed not equal (non zero)
2e3f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e42 :                 >skip1658
                       >
2e42 : 68              >            pla         ;load status
2e43 : 48              >            pha
                       >            cmp_flag fnv
2e44 : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2e46 : f003            >        beq skip1661
                       >        trap            ;failed not equal (non zero)
2e48 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e4b :                 >skip1661
                       >
2e4b : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,$ff
                       >            load_flag $ff
2e4c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2e4e : 48              >            pha         ;use stack to load status
2e4f : a9ff            >            lda #$ff     ;precharge accu
2e51 : 28              >            plp
                        
2e52 : 2c0b02                   bit abs1+3  ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv 
2e55 : 08              >            php         ;save flags
2e56 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
2e58 : f003            >        beq skip1666
                       >        trap            ;failed not equal (non zero)
2e5a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e5d :                 >skip1666
                       >
2e5d : 68              >            pla         ;load status
2e5e : 48              >            pha
                       >            cmp_flag ~fnv 
2e5f : c93f            >            cmp #(~fnv |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2e61 : f003            >        beq skip1669
                       >        trap            ;failed not equal (non zero)
2e63 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e66 :                 >skip1669
                       >
2e66 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
2e67 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2e69 : 48              >            pha         ;use stack to load status
2e6a : a901            >            lda #1     ;precharge accu
2e6c : 28              >            plp
                        
2e6d : 2c0a02                   bit abs1+2  ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
2e70 : 08              >            php         ;save flags
2e71 : c901            >            cmp #1     ;test result
                       >            trap_ne
2e73 : f003            >        beq skip1674
                       >        trap            ;failed not equal (non zero)
2e75 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e78 :                 >skip1674
                       >
2e78 : 68              >            pla         ;load status
2e79 : 48              >            pha
                       >            cmp_flag ~fnz
2e7a : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2e7c : f003            >        beq skip1677
                       >        trap            ;failed not equal (non zero)
2e7e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e81 :                 >skip1677
                       >
2e81 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
2e82 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2e84 : 48              >            pha         ;use stack to load status
2e85 : a901            >            lda #1     ;precharge accu
2e87 : 28              >            plp
                        
2e88 : 2c0902                   bit abs1+1  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
2e8b : 08              >            php         ;save flags
2e8c : c901            >            cmp #1     ;test result
                       >            trap_ne
2e8e : f003            >        beq skip1682
                       >        trap            ;failed not equal (non zero)
2e90 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e93 :                 >skip1682
                       >
2e93 : 68              >            pla         ;load status
2e94 : 48              >            pha
                       >            cmp_flag ~fv
2e95 : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2e97 : f003            >        beq skip1685
                       >        trap            ;failed not equal (non zero)
2e99 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e9c :                 >skip1685
                       >
2e9c : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
2e9d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2e9f : 48              >            pha         ;use stack to load status
2ea0 : a901            >            lda #1     ;precharge accu
2ea2 : 28              >            plp
                        
2ea3 : 2c0802                   bit abs1    ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
2ea6 : 08              >            php         ;save flags
2ea7 : c901            >            cmp #1     ;test result
                       >            trap_ne
2ea9 : f003            >        beq skip1690
                       >        trap            ;failed not equal (non zero)
2eab : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2eae :                 >skip1690
                       >
2eae : 68              >            pla         ;load status
2eaf : 48              >            pha
                       >            cmp_flag ~fz
2eb0 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2eb2 : f003            >        beq skip1693
                       >        trap            ;failed not equal (non zero)
2eb4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2eb7 :                 >skip1693
                       >
2eb7 : 28              >            plp         ;restore status
                        
                                next_test
2eb8 : ad0002          >            lda test_case   ;previous test
2ebb : c919            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2ebd : f003            >        beq skip1696
                       >        trap            ;failed not equal (non zero)
2ebf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ec2 :                 >skip1696
                       >
001a =                 >test_num = test_num + 1
2ec2 : a91a            >            lda #test_num   ;*** next tests' number
2ec4 : 8d0002          >            sta test_case
2ec7 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                        ; CPX - zp / abs / #         
                                set_x $80,0
                       >            load_flag 0
2eca : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2ecc : 48              >            pha         ;use stack to load status
2ecd : a280            >            ldx #$80     ;precharge index x
2ecf : 28              >            plp
                        
2ed0 : e41d                     cpx zp7f
                                tst_stat fc
2ed2 : 08              >            php         ;save status
2ed3 : 68              >            pla         ;use stack to retrieve status
2ed4 : 48              >            pha
                       >            cmp_flag fc
2ed5 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2ed7 : f003            >        beq skip1702
                       >        trap            ;failed not equal (non zero)
2ed9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2edc :                 >skip1702
                       >
2edc : 28              >            plp         ;restore status
                        
2edd : ca                       dex
2ede : e41d                     cpx zp7f
                                tst_stat fzc
2ee0 : 08              >            php         ;save status
2ee1 : 68              >            pla         ;use stack to retrieve status
2ee2 : 48              >            pha
                       >            cmp_flag fzc
2ee3 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2ee5 : f003            >        beq skip1706
                       >        trap            ;failed not equal (non zero)
2ee7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2eea :                 >skip1706
                       >
2eea : 28              >            plp         ;restore status
                        
2eeb : ca                       dex
2eec : e41d                     cpx zp7f
                                tst_x $7e,fn
2eee : 08              >            php         ;save flags
2eef : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
2ef1 : f003            >        beq skip1709
                       >        trap            ;failed not equal (non zero)
2ef3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ef6 :                 >skip1709
                       >
2ef6 : 68              >            pla         ;load status
2ef7 : 48              >            pha
                       >            cmp_flag fn
2ef8 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2efa : f003            >        beq skip1712
                       >        trap            ;failed not equal (non zero)
2efc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2eff :                 >skip1712
                       >
2eff : 28              >            plp         ;restore status
                        
                                set_x $80,$ff
                       >            load_flag $ff
2f00 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2f02 : 48              >            pha         ;use stack to load status
2f03 : a280            >            ldx #$80     ;precharge index x
2f05 : 28              >            plp
                        
2f06 : e41d                     cpx zp7f
                                tst_stat ~fnz
2f08 : 08              >            php         ;save status
2f09 : 68              >            pla         ;use stack to retrieve status
2f0a : 48              >            pha
                       >            cmp_flag ~fnz
2f0b : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f0d : f003            >        beq skip1718
                       >        trap            ;failed not equal (non zero)
2f0f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f12 :                 >skip1718
                       >
2f12 : 28              >            plp         ;restore status
                        
2f13 : ca                       dex
2f14 : e41d                     cpx zp7f
                                tst_stat ~fn
2f16 : 08              >            php         ;save status
2f17 : 68              >            pla         ;use stack to retrieve status
2f18 : 48              >            pha
                       >            cmp_flag ~fn
2f19 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f1b : f003            >        beq skip1722
                       >        trap            ;failed not equal (non zero)
2f1d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f20 :                 >skip1722
                       >
2f20 : 28              >            plp         ;restore status
                        
2f21 : ca                       dex
2f22 : e41d                     cpx zp7f
                                tst_x $7e,~fzc
2f24 : 08              >            php         ;save flags
2f25 : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
2f27 : f003            >        beq skip1725
                       >        trap            ;failed not equal (non zero)
2f29 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f2c :                 >skip1725
                       >
2f2c : 68              >            pla         ;load status
2f2d : 48              >            pha
                       >            cmp_flag ~fzc
2f2e : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f30 : f003            >        beq skip1728
                       >        trap            ;failed not equal (non zero)
2f32 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f35 :                 >skip1728
                       >
2f35 : 28              >            plp         ;restore status
                        
                        
                                set_x $80,0
                       >            load_flag 0
2f36 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2f38 : 48              >            pha         ;use stack to load status
2f39 : a280            >            ldx #$80     ;precharge index x
2f3b : 28              >            plp
                        
2f3c : ec0c02                   cpx abs7f
                                tst_stat fc
2f3f : 08              >            php         ;save status
2f40 : 68              >            pla         ;use stack to retrieve status
2f41 : 48              >            pha
                       >            cmp_flag fc
2f42 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f44 : f003            >        beq skip1734
                       >        trap            ;failed not equal (non zero)
2f46 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f49 :                 >skip1734
                       >
2f49 : 28              >            plp         ;restore status
                        
2f4a : ca                       dex
2f4b : ec0c02                   cpx abs7f
                                tst_stat fzc
2f4e : 08              >            php         ;save status
2f4f : 68              >            pla         ;use stack to retrieve status
2f50 : 48              >            pha
                       >            cmp_flag fzc
2f51 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f53 : f003            >        beq skip1738
                       >        trap            ;failed not equal (non zero)
2f55 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f58 :                 >skip1738
                       >
2f58 : 28              >            plp         ;restore status
                        
2f59 : ca                       dex
2f5a : ec0c02                   cpx abs7f
                                tst_x $7e,fn
2f5d : 08              >            php         ;save flags
2f5e : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
2f60 : f003            >        beq skip1741
                       >        trap            ;failed not equal (non zero)
2f62 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f65 :                 >skip1741
                       >
2f65 : 68              >            pla         ;load status
2f66 : 48              >            pha
                       >            cmp_flag fn
2f67 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f69 : f003            >        beq skip1744
                       >        trap            ;failed not equal (non zero)
2f6b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f6e :                 >skip1744
                       >
2f6e : 28              >            plp         ;restore status
                        
                                set_x $80,$ff
                       >            load_flag $ff
2f6f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2f71 : 48              >            pha         ;use stack to load status
2f72 : a280            >            ldx #$80     ;precharge index x
2f74 : 28              >            plp
                        
2f75 : ec0c02                   cpx abs7f
                                tst_stat ~fnz
2f78 : 08              >            php         ;save status
2f79 : 68              >            pla         ;use stack to retrieve status
2f7a : 48              >            pha
                       >            cmp_flag ~fnz
2f7b : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f7d : f003            >        beq skip1750
                       >        trap            ;failed not equal (non zero)
2f7f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f82 :                 >skip1750
                       >
2f82 : 28              >            plp         ;restore status
                        
2f83 : ca                       dex
2f84 : ec0c02                   cpx abs7f
                                tst_stat ~fn
2f87 : 08              >            php         ;save status
2f88 : 68              >            pla         ;use stack to retrieve status
2f89 : 48              >            pha
                       >            cmp_flag ~fn
2f8a : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f8c : f003            >        beq skip1754
                       >        trap            ;failed not equal (non zero)
2f8e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f91 :                 >skip1754
                       >
2f91 : 28              >            plp         ;restore status
                        
2f92 : ca                       dex
2f93 : ec0c02                   cpx abs7f
                                tst_x $7e,~fzc
2f96 : 08              >            php         ;save flags
2f97 : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
2f99 : f003            >        beq skip1757
                       >        trap            ;failed not equal (non zero)
2f9b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f9e :                 >skip1757
                       >
2f9e : 68              >            pla         ;load status
2f9f : 48              >            pha
                       >            cmp_flag ~fzc
2fa0 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2fa2 : f003            >        beq skip1760
                       >        trap            ;failed not equal (non zero)
2fa4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2fa7 :                 >skip1760
                       >
2fa7 : 28              >            plp         ;restore status
                        
                        
                                set_x $80,0
                       >            load_flag 0
2fa8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2faa : 48              >            pha         ;use stack to load status
2fab : a280            >            ldx #$80     ;precharge index x
2fad : 28              >            plp
                        
2fae : e07f                     cpx #$7f
                                tst_stat fc
2fb0 : 08              >            php         ;save status
2fb1 : 68              >            pla         ;use stack to retrieve status
2fb2 : 48              >            pha
                       >            cmp_flag fc
2fb3 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2fb5 : f003            >        beq skip1766
                       >        trap            ;failed not equal (non zero)
2fb7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2fba :                 >skip1766
                       >
2fba : 28              >            plp         ;restore status
                        
2fbb : ca                       dex
2fbc : e07f                     cpx #$7f
                                tst_stat fzc
2fbe : 08              >            php         ;save status
2fbf : 68              >            pla         ;use stack to retrieve status
2fc0 : 48              >            pha
                       >            cmp_flag fzc
2fc1 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2fc3 : f003            >        beq skip1770
                       >        trap            ;failed not equal (non zero)
2fc5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2fc8 :                 >skip1770
                       >
2fc8 : 28              >            plp         ;restore status
                        
2fc9 : ca                       dex
2fca : e07f                     cpx #$7f
                                tst_x $7e,fn
2fcc : 08              >            php         ;save flags
2fcd : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
2fcf : f003            >        beq skip1773
                       >        trap            ;failed not equal (non zero)
2fd1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2fd4 :                 >skip1773
                       >
2fd4 : 68              >            pla         ;load status
2fd5 : 48              >            pha
                       >            cmp_flag fn
2fd6 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2fd8 : f003            >        beq skip1776
                       >        trap            ;failed not equal (non zero)
2fda : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2fdd :                 >skip1776
                       >
2fdd : 28              >            plp         ;restore status
                        
                                set_x $80,$ff
                       >            load_flag $ff
2fde : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2fe0 : 48              >            pha         ;use stack to load status
2fe1 : a280            >            ldx #$80     ;precharge index x
2fe3 : 28              >            plp
                        
2fe4 : e07f                     cpx #$7f
                                tst_stat ~fnz
2fe6 : 08              >            php         ;save status
2fe7 : 68              >            pla         ;use stack to retrieve status
2fe8 : 48              >            pha
                       >            cmp_flag ~fnz
2fe9 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2feb : f003            >        beq skip1782
                       >        trap            ;failed not equal (non zero)
2fed : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ff0 :                 >skip1782
                       >
2ff0 : 28              >            plp         ;restore status
                        
2ff1 : ca                       dex
2ff2 : e07f                     cpx #$7f
                                tst_stat ~fn
2ff4 : 08              >            php         ;save status
2ff5 : 68              >            pla         ;use stack to retrieve status
2ff6 : 48              >            pha
                       >            cmp_flag ~fn
2ff7 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2ff9 : f003            >        beq skip1786
                       >        trap            ;failed not equal (non zero)
2ffb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ffe :                 >skip1786
                       >
2ffe : 28              >            plp         ;restore status
                        
2fff : ca                       dex
3000 : e07f                     cpx #$7f
                                tst_x $7e,~fzc
3002 : 08              >            php         ;save flags
3003 : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
3005 : f003            >        beq skip1789
                       >        trap            ;failed not equal (non zero)
3007 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
300a :                 >skip1789
                       >
300a : 68              >            pla         ;load status
300b : 48              >            pha
                       >            cmp_flag ~fzc
300c : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
300e : f003            >        beq skip1792
                       >        trap            ;failed not equal (non zero)
3010 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3013 :                 >skip1792
                       >
3013 : 28              >            plp         ;restore status
                        
                                next_test
3014 : ad0002          >            lda test_case   ;previous test
3017 : c91a            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3019 : f003            >        beq skip1795
                       >        trap            ;failed not equal (non zero)
301b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
301e :                 >skip1795
                       >
001b =                 >test_num = test_num + 1
301e : a91b            >            lda #test_num   ;*** next tests' number
3020 : 8d0002          >            sta test_case
3023 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; CPY - zp / abs / #         
                                set_y $80,0
                       >            load_flag 0
3026 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3028 : 48              >            pha         ;use stack to load status
3029 : a080            >            ldy #$80     ;precharge index y
302b : 28              >            plp
                        
302c : c41d                     cpy zp7f
                                tst_stat fc
302e : 08              >            php         ;save status
302f : 68              >            pla         ;use stack to retrieve status
3030 : 48              >            pha
                       >            cmp_flag fc
3031 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3033 : f003            >        beq skip1801
                       >        trap            ;failed not equal (non zero)
3035 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3038 :                 >skip1801
                       >
3038 : 28              >            plp         ;restore status
                        
3039 : 88                       dey
303a : c41d                     cpy zp7f
                                tst_stat fzc
303c : 08              >            php         ;save status
303d : 68              >            pla         ;use stack to retrieve status
303e : 48              >            pha
                       >            cmp_flag fzc
303f : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3041 : f003            >        beq skip1805
                       >        trap            ;failed not equal (non zero)
3043 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3046 :                 >skip1805
                       >
3046 : 28              >            plp         ;restore status
                        
3047 : 88                       dey
3048 : c41d                     cpy zp7f
                                tst_y $7e,fn
304a : 08              >            php         ;save flags
304b : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
304d : f003            >        beq skip1808
                       >        trap            ;failed not equal (non zero)
304f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3052 :                 >skip1808
                       >
3052 : 68              >            pla         ;load status
3053 : 48              >            pha
                       >            cmp_flag fn
3054 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3056 : f003            >        beq skip1811
                       >        trap            ;failed not equal (non zero)
3058 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
305b :                 >skip1811
                       >
305b : 28              >            plp         ;restore status
                        
                                set_y $80,$ff
                       >            load_flag $ff
305c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
305e : 48              >            pha         ;use stack to load status
305f : a080            >            ldy #$80     ;precharge index y
3061 : 28              >            plp
                        
3062 : c41d                     cpy zp7f
                                tst_stat ~fnz
3064 : 08              >            php         ;save status
3065 : 68              >            pla         ;use stack to retrieve status
3066 : 48              >            pha
                       >            cmp_flag ~fnz
3067 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3069 : f003            >        beq skip1817
                       >        trap            ;failed not equal (non zero)
306b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
306e :                 >skip1817
                       >
306e : 28              >            plp         ;restore status
                        
306f : 88                       dey
3070 : c41d                     cpy zp7f
                                tst_stat ~fn
3072 : 08              >            php         ;save status
3073 : 68              >            pla         ;use stack to retrieve status
3074 : 48              >            pha
                       >            cmp_flag ~fn
3075 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3077 : f003            >        beq skip1821
                       >        trap            ;failed not equal (non zero)
3079 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
307c :                 >skip1821
                       >
307c : 28              >            plp         ;restore status
                        
307d : 88                       dey
307e : c41d                     cpy zp7f
                                tst_y $7e,~fzc
3080 : 08              >            php         ;save flags
3081 : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
3083 : f003            >        beq skip1824
                       >        trap            ;failed not equal (non zero)
3085 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3088 :                 >skip1824
                       >
3088 : 68              >            pla         ;load status
3089 : 48              >            pha
                       >            cmp_flag ~fzc
308a : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
308c : f003            >        beq skip1827
                       >        trap            ;failed not equal (non zero)
308e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3091 :                 >skip1827
                       >
3091 : 28              >            plp         ;restore status
                        
                        
                                set_y $80,0
                       >            load_flag 0
3092 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3094 : 48              >            pha         ;use stack to load status
3095 : a080            >            ldy #$80     ;precharge index y
3097 : 28              >            plp
                        
3098 : cc0c02                   cpy abs7f
                                tst_stat fc
309b : 08              >            php         ;save status
309c : 68              >            pla         ;use stack to retrieve status
309d : 48              >            pha
                       >            cmp_flag fc
309e : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
30a0 : f003            >        beq skip1833
                       >        trap            ;failed not equal (non zero)
30a2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30a5 :                 >skip1833
                       >
30a5 : 28              >            plp         ;restore status
                        
30a6 : 88                       dey
30a7 : cc0c02                   cpy abs7f
                                tst_stat fzc
30aa : 08              >            php         ;save status
30ab : 68              >            pla         ;use stack to retrieve status
30ac : 48              >            pha
                       >            cmp_flag fzc
30ad : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
30af : f003            >        beq skip1837
                       >        trap            ;failed not equal (non zero)
30b1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30b4 :                 >skip1837
                       >
30b4 : 28              >            plp         ;restore status
                        
30b5 : 88                       dey
30b6 : cc0c02                   cpy abs7f
                                tst_y $7e,fn
30b9 : 08              >            php         ;save flags
30ba : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
30bc : f003            >        beq skip1840
                       >        trap            ;failed not equal (non zero)
30be : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30c1 :                 >skip1840
                       >
30c1 : 68              >            pla         ;load status
30c2 : 48              >            pha
                       >            cmp_flag fn
30c3 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
30c5 : f003            >        beq skip1843
                       >        trap            ;failed not equal (non zero)
30c7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30ca :                 >skip1843
                       >
30ca : 28              >            plp         ;restore status
                        
                                set_y $80,$ff
                       >            load_flag $ff
30cb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
30cd : 48              >            pha         ;use stack to load status
30ce : a080            >            ldy #$80     ;precharge index y
30d0 : 28              >            plp
                        
30d1 : cc0c02                   cpy abs7f
                                tst_stat ~fnz
30d4 : 08              >            php         ;save status
30d5 : 68              >            pla         ;use stack to retrieve status
30d6 : 48              >            pha
                       >            cmp_flag ~fnz
30d7 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
30d9 : f003            >        beq skip1849
                       >        trap            ;failed not equal (non zero)
30db : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30de :                 >skip1849
                       >
30de : 28              >            plp         ;restore status
                        
30df : 88                       dey
30e0 : cc0c02                   cpy abs7f
                                tst_stat ~fn
30e3 : 08              >            php         ;save status
30e4 : 68              >            pla         ;use stack to retrieve status
30e5 : 48              >            pha
                       >            cmp_flag ~fn
30e6 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
30e8 : f003            >        beq skip1853
                       >        trap            ;failed not equal (non zero)
30ea : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30ed :                 >skip1853
                       >
30ed : 28              >            plp         ;restore status
                        
30ee : 88                       dey
30ef : cc0c02                   cpy abs7f
                                tst_y $7e,~fzc
30f2 : 08              >            php         ;save flags
30f3 : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
30f5 : f003            >        beq skip1856
                       >        trap            ;failed not equal (non zero)
30f7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30fa :                 >skip1856
                       >
30fa : 68              >            pla         ;load status
30fb : 48              >            pha
                       >            cmp_flag ~fzc
30fc : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
30fe : f003            >        beq skip1859
                       >        trap            ;failed not equal (non zero)
3100 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3103 :                 >skip1859
                       >
3103 : 28              >            plp         ;restore status
                        
                        
                                set_y $80,0
                       >            load_flag 0
3104 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3106 : 48              >            pha         ;use stack to load status
3107 : a080            >            ldy #$80     ;precharge index y
3109 : 28              >            plp
                        
310a : c07f                     cpy #$7f
                                tst_stat fc
310c : 08              >            php         ;save status
310d : 68              >            pla         ;use stack to retrieve status
310e : 48              >            pha
                       >            cmp_flag fc
310f : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3111 : f003            >        beq skip1865
                       >        trap            ;failed not equal (non zero)
3113 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3116 :                 >skip1865
                       >
3116 : 28              >            plp         ;restore status
                        
3117 : 88                       dey
3118 : c07f                     cpy #$7f
                                tst_stat fzc
311a : 08              >            php         ;save status
311b : 68              >            pla         ;use stack to retrieve status
311c : 48              >            pha
                       >            cmp_flag fzc
311d : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
311f : f003            >        beq skip1869
                       >        trap            ;failed not equal (non zero)
3121 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3124 :                 >skip1869
                       >
3124 : 28              >            plp         ;restore status
                        
3125 : 88                       dey
3126 : c07f                     cpy #$7f
                                tst_y $7e,fn
3128 : 08              >            php         ;save flags
3129 : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
312b : f003            >        beq skip1872
                       >        trap            ;failed not equal (non zero)
312d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3130 :                 >skip1872
                       >
3130 : 68              >            pla         ;load status
3131 : 48              >            pha
                       >            cmp_flag fn
3132 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3134 : f003            >        beq skip1875
                       >        trap            ;failed not equal (non zero)
3136 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3139 :                 >skip1875
                       >
3139 : 28              >            plp         ;restore status
                        
                                set_y $80,$ff
                       >            load_flag $ff
313a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
313c : 48              >            pha         ;use stack to load status
313d : a080            >            ldy #$80     ;precharge index y
313f : 28              >            plp
                        
3140 : c07f                     cpy #$7f
                                tst_stat ~fnz
3142 : 08              >            php         ;save status
3143 : 68              >            pla         ;use stack to retrieve status
3144 : 48              >            pha
                       >            cmp_flag ~fnz
3145 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3147 : f003            >        beq skip1881
                       >        trap            ;failed not equal (non zero)
3149 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
314c :                 >skip1881
                       >
314c : 28              >            plp         ;restore status
                        
314d : 88                       dey
314e : c07f                     cpy #$7f
                                tst_stat ~fn
3150 : 08              >            php         ;save status
3151 : 68              >            pla         ;use stack to retrieve status
3152 : 48              >            pha
                       >            cmp_flag ~fn
3153 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3155 : f003            >        beq skip1885
                       >        trap            ;failed not equal (non zero)
3157 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
315a :                 >skip1885
                       >
315a : 28              >            plp         ;restore status
                        
315b : 88                       dey
315c : c07f                     cpy #$7f
                                tst_y $7e,~fzc
315e : 08              >            php         ;save flags
315f : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
3161 : f003            >        beq skip1888
                       >        trap            ;failed not equal (non zero)
3163 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3166 :                 >skip1888
                       >
3166 : 68              >            pla         ;load status
3167 : 48              >            pha
                       >            cmp_flag ~fzc
3168 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
316a : f003            >        beq skip1891
                       >        trap            ;failed not equal (non zero)
316c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
316f :                 >skip1891
                       >
316f : 28              >            plp         ;restore status
                        
                                next_test
3170 : ad0002          >            lda test_case   ;previous test
3173 : c91b            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3175 : f003            >        beq skip1894
                       >        trap            ;failed not equal (non zero)
3177 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
317a :                 >skip1894
                       >
001c =                 >test_num = test_num + 1
317a : a91c            >            lda #test_num   ;*** next tests' number
317c : 8d0002          >            sta test_case
317f : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; CMP - zp / abs / #         
                                set_a $80,0
                       >            load_flag 0
3182 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3184 : 48              >            pha         ;use stack to load status
3185 : a980            >            lda #$80     ;precharge accu
3187 : 28              >            plp
                        
3188 : c51d                     cmp zp7f
                                tst_a $80,fc
318a : 08              >            php         ;save flags
318b : c980            >            cmp #$80     ;test result
                       >            trap_ne
318d : f003            >        beq skip1899
                       >        trap            ;failed not equal (non zero)
318f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3192 :                 >skip1899
                       >
3192 : 68              >            pla         ;load status
3193 : 48              >            pha
                       >            cmp_flag fc
3194 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3196 : f003            >        beq skip1902
                       >        trap            ;failed not equal (non zero)
3198 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
319b :                 >skip1902
                       >
319b : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
319c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
319e : 48              >            pha         ;use stack to load status
319f : a97f            >            lda #$7f     ;precharge accu
31a1 : 28              >            plp
                        
31a2 : c51d                     cmp zp7f
                                tst_a $7f,fzc
31a4 : 08              >            php         ;save flags
31a5 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
31a7 : f003            >        beq skip1907
                       >        trap            ;failed not equal (non zero)
31a9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
31ac :                 >skip1907
                       >
31ac : 68              >            pla         ;load status
31ad : 48              >            pha
                       >            cmp_flag fzc
31ae : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
31b0 : f003            >        beq skip1910
                       >        trap            ;failed not equal (non zero)
31b2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
31b5 :                 >skip1910
                       >
31b5 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
31b6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
31b8 : 48              >            pha         ;use stack to load status
31b9 : a97e            >            lda #$7e     ;precharge accu
31bb : 28              >            plp
                        
31bc : c51d                     cmp zp7f
                                tst_a $7e,fn
31be : 08              >            php         ;save flags
31bf : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
31c1 : f003            >        beq skip1915
                       >        trap            ;failed not equal (non zero)
31c3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
31c6 :                 >skip1915
                       >
31c6 : 68              >            pla         ;load status
31c7 : 48              >            pha
                       >            cmp_flag fn
31c8 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
31ca : f003            >        beq skip1918
                       >        trap            ;failed not equal (non zero)
31cc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
31cf :                 >skip1918
                       >
31cf : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
31d0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
31d2 : 48              >            pha         ;use stack to load status
31d3 : a980            >            lda #$80     ;precharge accu
31d5 : 28              >            plp
                        
31d6 : c51d                     cmp zp7f
                                tst_a $80,~fnz
31d8 : 08              >            php         ;save flags
31d9 : c980            >            cmp #$80     ;test result
                       >            trap_ne
31db : f003            >        beq skip1923
                       >        trap            ;failed not equal (non zero)
31dd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
31e0 :                 >skip1923
                       >
31e0 : 68              >            pla         ;load status
31e1 : 48              >            pha
                       >            cmp_flag ~fnz
31e2 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
31e4 : f003            >        beq skip1926
                       >        trap            ;failed not equal (non zero)
31e6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
31e9 :                 >skip1926
                       >
31e9 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
31ea : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
31ec : 48              >            pha         ;use stack to load status
31ed : a97f            >            lda #$7f     ;precharge accu
31ef : 28              >            plp
                        
31f0 : c51d                     cmp zp7f
                                tst_a $7f,~fn
31f2 : 08              >            php         ;save flags
31f3 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
31f5 : f003            >        beq skip1931
                       >        trap            ;failed not equal (non zero)
31f7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
31fa :                 >skip1931
                       >
31fa : 68              >            pla         ;load status
31fb : 48              >            pha
                       >            cmp_flag ~fn
31fc : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
31fe : f003            >        beq skip1934
                       >        trap            ;failed not equal (non zero)
3200 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3203 :                 >skip1934
                       >
3203 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
3204 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3206 : 48              >            pha         ;use stack to load status
3207 : a97e            >            lda #$7e     ;precharge accu
3209 : 28              >            plp
                        
320a : c51d                     cmp zp7f
                                tst_a $7e,~fzc
320c : 08              >            php         ;save flags
320d : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
320f : f003            >        beq skip1939
                       >        trap            ;failed not equal (non zero)
3211 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3214 :                 >skip1939
                       >
3214 : 68              >            pla         ;load status
3215 : 48              >            pha
                       >            cmp_flag ~fzc
3216 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3218 : f003            >        beq skip1942
                       >        trap            ;failed not equal (non zero)
321a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
321d :                 >skip1942
                       >
321d : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
321e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3220 : 48              >            pha         ;use stack to load status
3221 : a980            >            lda #$80     ;precharge accu
3223 : 28              >            plp
                        
3224 : cd0c02                   cmp abs7f
                                tst_a $80,fc
3227 : 08              >            php         ;save flags
3228 : c980            >            cmp #$80     ;test result
                       >            trap_ne
322a : f003            >        beq skip1947
                       >        trap            ;failed not equal (non zero)
322c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
322f :                 >skip1947
                       >
322f : 68              >            pla         ;load status
3230 : 48              >            pha
                       >            cmp_flag fc
3231 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3233 : f003            >        beq skip1950
                       >        trap            ;failed not equal (non zero)
3235 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3238 :                 >skip1950
                       >
3238 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
3239 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
323b : 48              >            pha         ;use stack to load status
323c : a97f            >            lda #$7f     ;precharge accu
323e : 28              >            plp
                        
323f : cd0c02                   cmp abs7f
                                tst_a $7f,fzc
3242 : 08              >            php         ;save flags
3243 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
3245 : f003            >        beq skip1955
                       >        trap            ;failed not equal (non zero)
3247 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
324a :                 >skip1955
                       >
324a : 68              >            pla         ;load status
324b : 48              >            pha
                       >            cmp_flag fzc
324c : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
324e : f003            >        beq skip1958
                       >        trap            ;failed not equal (non zero)
3250 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3253 :                 >skip1958
                       >
3253 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
3254 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3256 : 48              >            pha         ;use stack to load status
3257 : a97e            >            lda #$7e     ;precharge accu
3259 : 28              >            plp
                        
325a : cd0c02                   cmp abs7f
                                tst_a $7e,fn
325d : 08              >            php         ;save flags
325e : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
3260 : f003            >        beq skip1963
                       >        trap            ;failed not equal (non zero)
3262 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3265 :                 >skip1963
                       >
3265 : 68              >            pla         ;load status
3266 : 48              >            pha
                       >            cmp_flag fn
3267 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3269 : f003            >        beq skip1966
                       >        trap            ;failed not equal (non zero)
326b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
326e :                 >skip1966
                       >
326e : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
326f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3271 : 48              >            pha         ;use stack to load status
3272 : a980            >            lda #$80     ;precharge accu
3274 : 28              >            plp
                        
3275 : cd0c02                   cmp abs7f
                                tst_a $80,~fnz
3278 : 08              >            php         ;save flags
3279 : c980            >            cmp #$80     ;test result
                       >            trap_ne
327b : f003            >        beq skip1971
                       >        trap            ;failed not equal (non zero)
327d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3280 :                 >skip1971
                       >
3280 : 68              >            pla         ;load status
3281 : 48              >            pha
                       >            cmp_flag ~fnz
3282 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3284 : f003            >        beq skip1974
                       >        trap            ;failed not equal (non zero)
3286 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3289 :                 >skip1974
                       >
3289 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
328a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
328c : 48              >            pha         ;use stack to load status
328d : a97f            >            lda #$7f     ;precharge accu
328f : 28              >            plp
                        
3290 : cd0c02                   cmp abs7f
                                tst_a $7f,~fn
3293 : 08              >            php         ;save flags
3294 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
3296 : f003            >        beq skip1979
                       >        trap            ;failed not equal (non zero)
3298 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
329b :                 >skip1979
                       >
329b : 68              >            pla         ;load status
329c : 48              >            pha
                       >            cmp_flag ~fn
329d : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
329f : f003            >        beq skip1982
                       >        trap            ;failed not equal (non zero)
32a1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32a4 :                 >skip1982
                       >
32a4 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
32a5 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
32a7 : 48              >            pha         ;use stack to load status
32a8 : a97e            >            lda #$7e     ;precharge accu
32aa : 28              >            plp
                        
32ab : cd0c02                   cmp abs7f
                                tst_a $7e,~fzc
32ae : 08              >            php         ;save flags
32af : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
32b1 : f003            >        beq skip1987
                       >        trap            ;failed not equal (non zero)
32b3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32b6 :                 >skip1987
                       >
32b6 : 68              >            pla         ;load status
32b7 : 48              >            pha
                       >            cmp_flag ~fzc
32b8 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
32ba : f003            >        beq skip1990
                       >        trap            ;failed not equal (non zero)
32bc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32bf :                 >skip1990
                       >
32bf : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
32c0 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
32c2 : 48              >            pha         ;use stack to load status
32c3 : a980            >            lda #$80     ;precharge accu
32c5 : 28              >            plp
                        
32c6 : c97f                     cmp #$7f
                                tst_a $80,fc
32c8 : 08              >            php         ;save flags
32c9 : c980            >            cmp #$80     ;test result
                       >            trap_ne
32cb : f003            >        beq skip1995
                       >        trap            ;failed not equal (non zero)
32cd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32d0 :                 >skip1995
                       >
32d0 : 68              >            pla         ;load status
32d1 : 48              >            pha
                       >            cmp_flag fc
32d2 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
32d4 : f003            >        beq skip1998
                       >        trap            ;failed not equal (non zero)
32d6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32d9 :                 >skip1998
                       >
32d9 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
32da : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
32dc : 48              >            pha         ;use stack to load status
32dd : a97f            >            lda #$7f     ;precharge accu
32df : 28              >            plp
                        
32e0 : c97f                     cmp #$7f
                                tst_a $7f,fzc
32e2 : 08              >            php         ;save flags
32e3 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
32e5 : f003            >        beq skip2003
                       >        trap            ;failed not equal (non zero)
32e7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32ea :                 >skip2003
                       >
32ea : 68              >            pla         ;load status
32eb : 48              >            pha
                       >            cmp_flag fzc
32ec : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
32ee : f003            >        beq skip2006
                       >        trap            ;failed not equal (non zero)
32f0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32f3 :                 >skip2006
                       >
32f3 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
32f4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
32f6 : 48              >            pha         ;use stack to load status
32f7 : a97e            >            lda #$7e     ;precharge accu
32f9 : 28              >            plp
                        
32fa : c97f                     cmp #$7f
                                tst_a $7e,fn
32fc : 08              >            php         ;save flags
32fd : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
32ff : f003            >        beq skip2011
                       >        trap            ;failed not equal (non zero)
3301 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3304 :                 >skip2011
                       >
3304 : 68              >            pla         ;load status
3305 : 48              >            pha
                       >            cmp_flag fn
3306 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3308 : f003            >        beq skip2014
                       >        trap            ;failed not equal (non zero)
330a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
330d :                 >skip2014
                       >
330d : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
330e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3310 : 48              >            pha         ;use stack to load status
3311 : a980            >            lda #$80     ;precharge accu
3313 : 28              >            plp
                        
3314 : c97f                     cmp #$7f
                                tst_a $80,~fnz
3316 : 08              >            php         ;save flags
3317 : c980            >            cmp #$80     ;test result
                       >            trap_ne
3319 : f003            >        beq skip2019
                       >        trap            ;failed not equal (non zero)
331b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
331e :                 >skip2019
                       >
331e : 68              >            pla         ;load status
331f : 48              >            pha
                       >            cmp_flag ~fnz
3320 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3322 : f003            >        beq skip2022
                       >        trap            ;failed not equal (non zero)
3324 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3327 :                 >skip2022
                       >
3327 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
3328 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
332a : 48              >            pha         ;use stack to load status
332b : a97f            >            lda #$7f     ;precharge accu
332d : 28              >            plp
                        
332e : c97f                     cmp #$7f
                                tst_a $7f,~fn
3330 : 08              >            php         ;save flags
3331 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
3333 : f003            >        beq skip2027
                       >        trap            ;failed not equal (non zero)
3335 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3338 :                 >skip2027
                       >
3338 : 68              >            pla         ;load status
3339 : 48              >            pha
                       >            cmp_flag ~fn
333a : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
333c : f003            >        beq skip2030
                       >        trap            ;failed not equal (non zero)
333e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3341 :                 >skip2030
                       >
3341 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
3342 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3344 : 48              >            pha         ;use stack to load status
3345 : a97e            >            lda #$7e     ;precharge accu
3347 : 28              >            plp
                        
3348 : c97f                     cmp #$7f
                                tst_a $7e,~fzc
334a : 08              >            php         ;save flags
334b : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
334d : f003            >        beq skip2035
                       >        trap            ;failed not equal (non zero)
334f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3352 :                 >skip2035
                       >
3352 : 68              >            pla         ;load status
3353 : 48              >            pha
                       >            cmp_flag ~fzc
3354 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3356 : f003            >        beq skip2038
                       >        trap            ;failed not equal (non zero)
3358 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
335b :                 >skip2038
                       >
335b : 28              >            plp         ;restore status
                        
                        
335c : a204                     ldx #4          ;with indexing by X
                                set_a $80,0
                       >            load_flag 0
335e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3360 : 48              >            pha         ;use stack to load status
3361 : a980            >            lda #$80     ;precharge accu
3363 : 28              >            plp
                        
3364 : d519                     cmp zp1,x
                                tst_a $80,fc
3366 : 08              >            php         ;save flags
3367 : c980            >            cmp #$80     ;test result
                       >            trap_ne
3369 : f003            >        beq skip2043
                       >        trap            ;failed not equal (non zero)
336b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
336e :                 >skip2043
                       >
336e : 68              >            pla         ;load status
336f : 48              >            pha
                       >            cmp_flag fc
3370 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3372 : f003            >        beq skip2046
                       >        trap            ;failed not equal (non zero)
3374 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3377 :                 >skip2046
                       >
3377 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
3378 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
337a : 48              >            pha         ;use stack to load status
337b : a97f            >            lda #$7f     ;precharge accu
337d : 28              >            plp
                        
337e : d519                     cmp zp1,x
                                tst_a $7f,fzc
3380 : 08              >            php         ;save flags
3381 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
3383 : f003            >        beq skip2051
                       >        trap            ;failed not equal (non zero)
3385 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3388 :                 >skip2051
                       >
3388 : 68              >            pla         ;load status
3389 : 48              >            pha
                       >            cmp_flag fzc
338a : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
338c : f003            >        beq skip2054
                       >        trap            ;failed not equal (non zero)
338e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3391 :                 >skip2054
                       >
3391 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
3392 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3394 : 48              >            pha         ;use stack to load status
3395 : a97e            >            lda #$7e     ;precharge accu
3397 : 28              >            plp
                        
3398 : d519                     cmp zp1,x
                                tst_a $7e,fn
339a : 08              >            php         ;save flags
339b : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
339d : f003            >        beq skip2059
                       >        trap            ;failed not equal (non zero)
339f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33a2 :                 >skip2059
                       >
33a2 : 68              >            pla         ;load status
33a3 : 48              >            pha
                       >            cmp_flag fn
33a4 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
33a6 : f003            >        beq skip2062
                       >        trap            ;failed not equal (non zero)
33a8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33ab :                 >skip2062
                       >
33ab : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
33ac : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
33ae : 48              >            pha         ;use stack to load status
33af : a980            >            lda #$80     ;precharge accu
33b1 : 28              >            plp
                        
33b2 : d519                     cmp zp1,x
                                tst_a $80,~fnz
33b4 : 08              >            php         ;save flags
33b5 : c980            >            cmp #$80     ;test result
                       >            trap_ne
33b7 : f003            >        beq skip2067
                       >        trap            ;failed not equal (non zero)
33b9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33bc :                 >skip2067
                       >
33bc : 68              >            pla         ;load status
33bd : 48              >            pha
                       >            cmp_flag ~fnz
33be : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
33c0 : f003            >        beq skip2070
                       >        trap            ;failed not equal (non zero)
33c2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33c5 :                 >skip2070
                       >
33c5 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
33c6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
33c8 : 48              >            pha         ;use stack to load status
33c9 : a97f            >            lda #$7f     ;precharge accu
33cb : 28              >            plp
                        
33cc : d519                     cmp zp1,x
                                tst_a $7f,~fn
33ce : 08              >            php         ;save flags
33cf : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
33d1 : f003            >        beq skip2075
                       >        trap            ;failed not equal (non zero)
33d3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33d6 :                 >skip2075
                       >
33d6 : 68              >            pla         ;load status
33d7 : 48              >            pha
                       >            cmp_flag ~fn
33d8 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
33da : f003            >        beq skip2078
                       >        trap            ;failed not equal (non zero)
33dc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33df :                 >skip2078
                       >
33df : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
33e0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
33e2 : 48              >            pha         ;use stack to load status
33e3 : a97e            >            lda #$7e     ;precharge accu
33e5 : 28              >            plp
                        
33e6 : d519                     cmp zp1,x
                                tst_a $7e,~fzc
33e8 : 08              >            php         ;save flags
33e9 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
33eb : f003            >        beq skip2083
                       >        trap            ;failed not equal (non zero)
33ed : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33f0 :                 >skip2083
                       >
33f0 : 68              >            pla         ;load status
33f1 : 48              >            pha
                       >            cmp_flag ~fzc
33f2 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
33f4 : f003            >        beq skip2086
                       >        trap            ;failed not equal (non zero)
33f6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33f9 :                 >skip2086
                       >
33f9 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
33fa : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
33fc : 48              >            pha         ;use stack to load status
33fd : a980            >            lda #$80     ;precharge accu
33ff : 28              >            plp
                        
3400 : dd0802                   cmp abs1,x
                                tst_a $80,fc
3403 : 08              >            php         ;save flags
3404 : c980            >            cmp #$80     ;test result
                       >            trap_ne
3406 : f003            >        beq skip2091
                       >        trap            ;failed not equal (non zero)
3408 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
340b :                 >skip2091
                       >
340b : 68              >            pla         ;load status
340c : 48              >            pha
                       >            cmp_flag fc
340d : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
340f : f003            >        beq skip2094
                       >        trap            ;failed not equal (non zero)
3411 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3414 :                 >skip2094
                       >
3414 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
3415 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3417 : 48              >            pha         ;use stack to load status
3418 : a97f            >            lda #$7f     ;precharge accu
341a : 28              >            plp
                        
341b : dd0802                   cmp abs1,x
                                tst_a $7f,fzc
341e : 08              >            php         ;save flags
341f : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
3421 : f003            >        beq skip2099
                       >        trap            ;failed not equal (non zero)
3423 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3426 :                 >skip2099
                       >
3426 : 68              >            pla         ;load status
3427 : 48              >            pha
                       >            cmp_flag fzc
3428 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
342a : f003            >        beq skip2102
                       >        trap            ;failed not equal (non zero)
342c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
342f :                 >skip2102
                       >
342f : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
3430 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3432 : 48              >            pha         ;use stack to load status
3433 : a97e            >            lda #$7e     ;precharge accu
3435 : 28              >            plp
                        
3436 : dd0802                   cmp abs1,x
                                tst_a $7e,fn
3439 : 08              >            php         ;save flags
343a : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
343c : f003            >        beq skip2107
                       >        trap            ;failed not equal (non zero)
343e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3441 :                 >skip2107
                       >
3441 : 68              >            pla         ;load status
3442 : 48              >            pha
                       >            cmp_flag fn
3443 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3445 : f003            >        beq skip2110
                       >        trap            ;failed not equal (non zero)
3447 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
344a :                 >skip2110
                       >
344a : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
344b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
344d : 48              >            pha         ;use stack to load status
344e : a980            >            lda #$80     ;precharge accu
3450 : 28              >            plp
                        
3451 : dd0802                   cmp abs1,x
                                tst_a $80,~fnz
3454 : 08              >            php         ;save flags
3455 : c980            >            cmp #$80     ;test result
                       >            trap_ne
3457 : f003            >        beq skip2115
                       >        trap            ;failed not equal (non zero)
3459 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
345c :                 >skip2115
                       >
345c : 68              >            pla         ;load status
345d : 48              >            pha
                       >            cmp_flag ~fnz
345e : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3460 : f003            >        beq skip2118
                       >        trap            ;failed not equal (non zero)
3462 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3465 :                 >skip2118
                       >
3465 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
3466 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3468 : 48              >            pha         ;use stack to load status
3469 : a97f            >            lda #$7f     ;precharge accu
346b : 28              >            plp
                        
346c : dd0802                   cmp abs1,x
                                tst_a $7f,~fn
346f : 08              >            php         ;save flags
3470 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
3472 : f003            >        beq skip2123
                       >        trap            ;failed not equal (non zero)
3474 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3477 :                 >skip2123
                       >
3477 : 68              >            pla         ;load status
3478 : 48              >            pha
                       >            cmp_flag ~fn
3479 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
347b : f003            >        beq skip2126
                       >        trap            ;failed not equal (non zero)
347d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3480 :                 >skip2126
                       >
3480 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
3481 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3483 : 48              >            pha         ;use stack to load status
3484 : a97e            >            lda #$7e     ;precharge accu
3486 : 28              >            plp
                        
3487 : dd0802                   cmp abs1,x
                                tst_a $7e,~fzc
348a : 08              >            php         ;save flags
348b : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
348d : f003            >        beq skip2131
                       >        trap            ;failed not equal (non zero)
348f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3492 :                 >skip2131
                       >
3492 : 68              >            pla         ;load status
3493 : 48              >            pha
                       >            cmp_flag ~fzc
3494 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3496 : f003            >        beq skip2134
                       >        trap            ;failed not equal (non zero)
3498 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
349b :                 >skip2134
                       >
349b : 28              >            plp         ;restore status
                        
                        
349c : a004                     ldy #4          ;with indexing by Y
349e : a208                     ldx #8          ;with indexed indirect
                                set_a $80,0
                       >            load_flag 0
34a0 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
34a2 : 48              >            pha         ;use stack to load status
34a3 : a980            >            lda #$80     ;precharge accu
34a5 : 28              >            plp
                        
34a6 : d90802                   cmp abs1,y
                                tst_a $80,fc
34a9 : 08              >            php         ;save flags
34aa : c980            >            cmp #$80     ;test result
                       >            trap_ne
34ac : f003            >        beq skip2139
                       >        trap            ;failed not equal (non zero)
34ae : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34b1 :                 >skip2139
                       >
34b1 : 68              >            pla         ;load status
34b2 : 48              >            pha
                       >            cmp_flag fc
34b3 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
34b5 : f003            >        beq skip2142
                       >        trap            ;failed not equal (non zero)
34b7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34ba :                 >skip2142
                       >
34ba : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
34bb : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
34bd : 48              >            pha         ;use stack to load status
34be : a97f            >            lda #$7f     ;precharge accu
34c0 : 28              >            plp
                        
34c1 : d90802                   cmp abs1,y
                                tst_a $7f,fzc
34c4 : 08              >            php         ;save flags
34c5 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
34c7 : f003            >        beq skip2147
                       >        trap            ;failed not equal (non zero)
34c9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34cc :                 >skip2147
                       >
34cc : 68              >            pla         ;load status
34cd : 48              >            pha
                       >            cmp_flag fzc
34ce : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
34d0 : f003            >        beq skip2150
                       >        trap            ;failed not equal (non zero)
34d2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34d5 :                 >skip2150
                       >
34d5 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
34d6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
34d8 : 48              >            pha         ;use stack to load status
34d9 : a97e            >            lda #$7e     ;precharge accu
34db : 28              >            plp
                        
34dc : d90802                   cmp abs1,y
                                tst_a $7e,fn
34df : 08              >            php         ;save flags
34e0 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
34e2 : f003            >        beq skip2155
                       >        trap            ;failed not equal (non zero)
34e4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34e7 :                 >skip2155
                       >
34e7 : 68              >            pla         ;load status
34e8 : 48              >            pha
                       >            cmp_flag fn
34e9 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
34eb : f003            >        beq skip2158
                       >        trap            ;failed not equal (non zero)
34ed : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34f0 :                 >skip2158
                       >
34f0 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
34f1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
34f3 : 48              >            pha         ;use stack to load status
34f4 : a980            >            lda #$80     ;precharge accu
34f6 : 28              >            plp
                        
34f7 : d90802                   cmp abs1,y
                                tst_a $80,~fnz
34fa : 08              >            php         ;save flags
34fb : c980            >            cmp #$80     ;test result
                       >            trap_ne
34fd : f003            >        beq skip2163
                       >        trap            ;failed not equal (non zero)
34ff : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3502 :                 >skip2163
                       >
3502 : 68              >            pla         ;load status
3503 : 48              >            pha
                       >            cmp_flag ~fnz
3504 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3506 : f003            >        beq skip2166
                       >        trap            ;failed not equal (non zero)
3508 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
350b :                 >skip2166
                       >
350b : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
350c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
350e : 48              >            pha         ;use stack to load status
350f : a97f            >            lda #$7f     ;precharge accu
3511 : 28              >            plp
                        
3512 : d90802                   cmp abs1,y
                                tst_a $7f,~fn
3515 : 08              >            php         ;save flags
3516 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
3518 : f003            >        beq skip2171
                       >        trap            ;failed not equal (non zero)
351a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
351d :                 >skip2171
                       >
351d : 68              >            pla         ;load status
351e : 48              >            pha
                       >            cmp_flag ~fn
351f : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3521 : f003            >        beq skip2174
                       >        trap            ;failed not equal (non zero)
3523 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3526 :                 >skip2174
                       >
3526 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
3527 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3529 : 48              >            pha         ;use stack to load status
352a : a97e            >            lda #$7e     ;precharge accu
352c : 28              >            plp
                        
352d : d90802                   cmp abs1,y
                                tst_a $7e,~fzc
3530 : 08              >            php         ;save flags
3531 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
3533 : f003            >        beq skip2179
                       >        trap            ;failed not equal (non zero)
3535 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3538 :                 >skip2179
                       >
3538 : 68              >            pla         ;load status
3539 : 48              >            pha
                       >            cmp_flag ~fzc
353a : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
353c : f003            >        beq skip2182
                       >        trap            ;failed not equal (non zero)
353e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3541 :                 >skip2182
                       >
3541 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
3542 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3544 : 48              >            pha         ;use stack to load status
3545 : a980            >            lda #$80     ;precharge accu
3547 : 28              >            plp
                        
3548 : c12a                     cmp (ind1,x)
                                tst_a $80,fc
354a : 08              >            php         ;save flags
354b : c980            >            cmp #$80     ;test result
                       >            trap_ne
354d : f003            >        beq skip2187
                       >        trap            ;failed not equal (non zero)
354f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3552 :                 >skip2187
                       >
3552 : 68              >            pla         ;load status
3553 : 48              >            pha
                       >            cmp_flag fc
3554 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3556 : f003            >        beq skip2190
                       >        trap            ;failed not equal (non zero)
3558 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
355b :                 >skip2190
                       >
355b : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
355c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
355e : 48              >            pha         ;use stack to load status
355f : a97f            >            lda #$7f     ;precharge accu
3561 : 28              >            plp
                        
3562 : c12a                     cmp (ind1,x)
                                tst_a $7f,fzc
3564 : 08              >            php         ;save flags
3565 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
3567 : f003            >        beq skip2195
                       >        trap            ;failed not equal (non zero)
3569 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
356c :                 >skip2195
                       >
356c : 68              >            pla         ;load status
356d : 48              >            pha
                       >            cmp_flag fzc
356e : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3570 : f003            >        beq skip2198
                       >        trap            ;failed not equal (non zero)
3572 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3575 :                 >skip2198
                       >
3575 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
3576 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3578 : 48              >            pha         ;use stack to load status
3579 : a97e            >            lda #$7e     ;precharge accu
357b : 28              >            plp
                        
357c : c12a                     cmp (ind1,x)
                                tst_a $7e,fn
357e : 08              >            php         ;save flags
357f : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
3581 : f003            >        beq skip2203
                       >        trap            ;failed not equal (non zero)
3583 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3586 :                 >skip2203
                       >
3586 : 68              >            pla         ;load status
3587 : 48              >            pha
                       >            cmp_flag fn
3588 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
358a : f003            >        beq skip2206
                       >        trap            ;failed not equal (non zero)
358c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
358f :                 >skip2206
                       >
358f : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
3590 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3592 : 48              >            pha         ;use stack to load status
3593 : a980            >            lda #$80     ;precharge accu
3595 : 28              >            plp
                        
3596 : c12a                     cmp (ind1,x)
                                tst_a $80,~fnz
3598 : 08              >            php         ;save flags
3599 : c980            >            cmp #$80     ;test result
                       >            trap_ne
359b : f003            >        beq skip2211
                       >        trap            ;failed not equal (non zero)
359d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35a0 :                 >skip2211
                       >
35a0 : 68              >            pla         ;load status
35a1 : 48              >            pha
                       >            cmp_flag ~fnz
35a2 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35a4 : f003            >        beq skip2214
                       >        trap            ;failed not equal (non zero)
35a6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35a9 :                 >skip2214
                       >
35a9 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
35aa : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
35ac : 48              >            pha         ;use stack to load status
35ad : a97f            >            lda #$7f     ;precharge accu
35af : 28              >            plp
                        
35b0 : c12a                     cmp (ind1,x)
                                tst_a $7f,~fn
35b2 : 08              >            php         ;save flags
35b3 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
35b5 : f003            >        beq skip2219
                       >        trap            ;failed not equal (non zero)
35b7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35ba :                 >skip2219
                       >
35ba : 68              >            pla         ;load status
35bb : 48              >            pha
                       >            cmp_flag ~fn
35bc : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35be : f003            >        beq skip2222
                       >        trap            ;failed not equal (non zero)
35c0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35c3 :                 >skip2222
                       >
35c3 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
35c4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
35c6 : 48              >            pha         ;use stack to load status
35c7 : a97e            >            lda #$7e     ;precharge accu
35c9 : 28              >            plp
                        
35ca : c12a                     cmp (ind1,x)
                                tst_a $7e,~fzc
35cc : 08              >            php         ;save flags
35cd : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
35cf : f003            >        beq skip2227
                       >        trap            ;failed not equal (non zero)
35d1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35d4 :                 >skip2227
                       >
35d4 : 68              >            pla         ;load status
35d5 : 48              >            pha
                       >            cmp_flag ~fzc
35d6 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35d8 : f003            >        beq skip2230
                       >        trap            ;failed not equal (non zero)
35da : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35dd :                 >skip2230
                       >
35dd : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
35de : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
35e0 : 48              >            pha         ;use stack to load status
35e1 : a980            >            lda #$80     ;precharge accu
35e3 : 28              >            plp
                        
35e4 : d12a                     cmp (ind1),y
                                tst_a $80,fc
35e6 : 08              >            php         ;save flags
35e7 : c980            >            cmp #$80     ;test result
                       >            trap_ne
35e9 : f003            >        beq skip2235
                       >        trap            ;failed not equal (non zero)
35eb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35ee :                 >skip2235
                       >
35ee : 68              >            pla         ;load status
35ef : 48              >            pha
                       >            cmp_flag fc
35f0 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35f2 : f003            >        beq skip2238
                       >        trap            ;failed not equal (non zero)
35f4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35f7 :                 >skip2238
                       >
35f7 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
35f8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
35fa : 48              >            pha         ;use stack to load status
35fb : a97f            >            lda #$7f     ;precharge accu
35fd : 28              >            plp
                        
35fe : d12a                     cmp (ind1),y
                                tst_a $7f,fzc
3600 : 08              >            php         ;save flags
3601 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
3603 : f003            >        beq skip2243
                       >        trap            ;failed not equal (non zero)
3605 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3608 :                 >skip2243
                       >
3608 : 68              >            pla         ;load status
3609 : 48              >            pha
                       >            cmp_flag fzc
360a : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
360c : f003            >        beq skip2246
                       >        trap            ;failed not equal (non zero)
360e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3611 :                 >skip2246
                       >
3611 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
3612 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3614 : 48              >            pha         ;use stack to load status
3615 : a97e            >            lda #$7e     ;precharge accu
3617 : 28              >            plp
                        
3618 : d12a                     cmp (ind1),y
                                tst_a $7e,fn
361a : 08              >            php         ;save flags
361b : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
361d : f003            >        beq skip2251
                       >        trap            ;failed not equal (non zero)
361f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3622 :                 >skip2251
                       >
3622 : 68              >            pla         ;load status
3623 : 48              >            pha
                       >            cmp_flag fn
3624 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3626 : f003            >        beq skip2254
                       >        trap            ;failed not equal (non zero)
3628 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
362b :                 >skip2254
                       >
362b : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
362c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
362e : 48              >            pha         ;use stack to load status
362f : a980            >            lda #$80     ;precharge accu
3631 : 28              >            plp
                        
3632 : d12a                     cmp (ind1),y
                                tst_a $80,~fnz
3634 : 08              >            php         ;save flags
3635 : c980            >            cmp #$80     ;test result
                       >            trap_ne
3637 : f003            >        beq skip2259
                       >        trap            ;failed not equal (non zero)
3639 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
363c :                 >skip2259
                       >
363c : 68              >            pla         ;load status
363d : 48              >            pha
                       >            cmp_flag ~fnz
363e : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3640 : f003            >        beq skip2262
                       >        trap            ;failed not equal (non zero)
3642 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3645 :                 >skip2262
                       >
3645 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
3646 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3648 : 48              >            pha         ;use stack to load status
3649 : a97f            >            lda #$7f     ;precharge accu
364b : 28              >            plp
                        
364c : d12a                     cmp (ind1),y
                                tst_a $7f,~fn
364e : 08              >            php         ;save flags
364f : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
3651 : f003            >        beq skip2267
                       >        trap            ;failed not equal (non zero)
3653 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3656 :                 >skip2267
                       >
3656 : 68              >            pla         ;load status
3657 : 48              >            pha
                       >            cmp_flag ~fn
3658 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
365a : f003            >        beq skip2270
                       >        trap            ;failed not equal (non zero)
365c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
365f :                 >skip2270
                       >
365f : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
3660 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3662 : 48              >            pha         ;use stack to load status
3663 : a97e            >            lda #$7e     ;precharge accu
3665 : 28              >            plp
                        
3666 : d12a                     cmp (ind1),y
                                tst_a $7e,~fzc
3668 : 08              >            php         ;save flags
3669 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
366b : f003            >        beq skip2275
                       >        trap            ;failed not equal (non zero)
366d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3670 :                 >skip2275
                       >
3670 : 68              >            pla         ;load status
3671 : 48              >            pha
                       >            cmp_flag ~fzc
3672 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3674 : f003            >        beq skip2278
                       >        trap            ;failed not equal (non zero)
3676 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3679 :                 >skip2278
                       >
3679 : 28              >            plp         ;restore status
                        
                                next_test
367a : ad0002          >            lda test_case   ;previous test
367d : c91c            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
367f : f003            >        beq skip2281
                       >        trap            ;failed not equal (non zero)
3681 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3684 :                 >skip2281
                       >
001d =                 >test_num = test_num + 1
3684 : a91d            >            lda #test_num   ;*** next tests' number
3686 : 8d0002          >            sta test_case
3689 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing shifts - ASL LSR ROL ROR all addressing modes
                        ; shifts - accumulator
368c : a203                     ldx #3
368e :                  tasl
                                set_ax zp1,0
                       >            load_flag 0
368e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3690 : 48              >            pha         ;use stack to load status
3691 : b519            >            lda zp1,x    ;precharge accu
3693 : 28              >            plp
                        
3694 : 0a                       asl a
                                tst_ax rASL,fASL,0
3695 : 08              >            php         ;save flags
3696 : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
3699 : f003            >        beq skip2286
                       >        trap            ;failed not equal (non zero)
369b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
369e :                 >skip2286
                       >
369e : 68              >            pla         ;load status
                       >            eor_flag 0
369f : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
36a1 : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne     ;
36a4 : f003            >        beq skip2289
                       >        trap            ;failed not equal (non zero)
36a6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36a9 :                 >skip2289
                       >
                        
36a9 : ca                       dex
36aa : 10e2                     bpl tasl
36ac : a203                     ldx #3
36ae :                  tasl1
                                set_ax zp1,$ff
                       >            load_flag $ff
36ae : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
36b0 : 48              >            pha         ;use stack to load status
36b1 : b519            >            lda zp1,x    ;precharge accu
36b3 : 28              >            plp
                        
36b4 : 0a                       asl a
                                tst_ax rASL,fASL,$ff-fnzc
36b5 : 08              >            php         ;save flags
36b6 : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
36b9 : f003            >        beq skip2294
                       >        trap            ;failed not equal (non zero)
36bb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36be :                 >skip2294
                       >
36be : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
36bf : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
36c1 : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne     ;
36c4 : f003            >        beq skip2297
                       >        trap            ;failed not equal (non zero)
36c6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36c9 :                 >skip2297
                       >
                        
36c9 : ca                       dex
36ca : 10e2                     bpl tasl1
                        
36cc : a203                     ldx #3
36ce :                  tlsr
                                set_ax zp1,0
                       >            load_flag 0
36ce : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
36d0 : 48              >            pha         ;use stack to load status
36d1 : b519            >            lda zp1,x    ;precharge accu
36d3 : 28              >            plp
                        
36d4 : 4a                       lsr a
                                tst_ax rLSR,fLSR,0
36d5 : 08              >            php         ;save flags
36d6 : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
36d9 : f003            >        beq skip2302
                       >        trap            ;failed not equal (non zero)
36db : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36de :                 >skip2302
                       >
36de : 68              >            pla         ;load status
                       >            eor_flag 0
36df : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
36e1 : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne     ;
36e4 : f003            >        beq skip2305
                       >        trap            ;failed not equal (non zero)
36e6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36e9 :                 >skip2305
                       >
                        
36e9 : ca                       dex
36ea : 10e2                     bpl tlsr
36ec : a203                     ldx #3
36ee :                  tlsr1
                                set_ax zp1,$ff
                       >            load_flag $ff
36ee : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
36f0 : 48              >            pha         ;use stack to load status
36f1 : b519            >            lda zp1,x    ;precharge accu
36f3 : 28              >            plp
                        
36f4 : 4a                       lsr a
                                tst_ax rLSR,fLSR,$ff-fnzc
36f5 : 08              >            php         ;save flags
36f6 : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
36f9 : f003            >        beq skip2310
                       >        trap            ;failed not equal (non zero)
36fb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36fe :                 >skip2310
                       >
36fe : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
36ff : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3701 : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne     ;
3704 : f003            >        beq skip2313
                       >        trap            ;failed not equal (non zero)
3706 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3709 :                 >skip2313
                       >
                        
3709 : ca                       dex
370a : 10e2                     bpl tlsr1
                        
370c : a203                     ldx #3
370e :                  trol
                                set_ax zp1,0
                       >            load_flag 0
370e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3710 : 48              >            pha         ;use stack to load status
3711 : b519            >            lda zp1,x    ;precharge accu
3713 : 28              >            plp
                        
3714 : 2a                       rol a
                                tst_ax rROL,fROL,0
3715 : 08              >            php         ;save flags
3716 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
3719 : f003            >        beq skip2318
                       >        trap            ;failed not equal (non zero)
371b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
371e :                 >skip2318
                       >
371e : 68              >            pla         ;load status
                       >            eor_flag 0
371f : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3721 : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne     ;
3724 : f003            >        beq skip2321
                       >        trap            ;failed not equal (non zero)
3726 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3729 :                 >skip2321
                       >
                        
3729 : ca                       dex
372a : 10e2                     bpl trol
372c : a203                     ldx #3
372e :                  trol1
                                set_ax zp1,$ff-fc
                       >            load_flag $ff-fc
372e : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
3730 : 48              >            pha         ;use stack to load status
3731 : b519            >            lda zp1,x    ;precharge accu
3733 : 28              >            plp
                        
3734 : 2a                       rol a
                                tst_ax rROL,fROL,$ff-fnzc
3735 : 08              >            php         ;save flags
3736 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
3739 : f003            >        beq skip2326
                       >        trap            ;failed not equal (non zero)
373b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
373e :                 >skip2326
                       >
373e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
373f : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3741 : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne     ;
3744 : f003            >        beq skip2329
                       >        trap            ;failed not equal (non zero)
3746 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3749 :                 >skip2329
                       >
                        
3749 : ca                       dex
374a : 10e2                     bpl trol1
                        
374c : a203                     ldx #3
374e :                  trolc
                                set_ax zp1,fc
                       >            load_flag fc
374e : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
3750 : 48              >            pha         ;use stack to load status
3751 : b519            >            lda zp1,x    ;precharge accu
3753 : 28              >            plp
                        
3754 : 2a                       rol a
                                tst_ax rROLc,fROLc,0
3755 : 08              >            php         ;save flags
3756 : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
3759 : f003            >        beq skip2334
                       >        trap            ;failed not equal (non zero)
375b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
375e :                 >skip2334
                       >
375e : 68              >            pla         ;load status
                       >            eor_flag 0
375f : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3761 : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne     ;
3764 : f003            >        beq skip2337
                       >        trap            ;failed not equal (non zero)
3766 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3769 :                 >skip2337
                       >
                        
3769 : ca                       dex
376a : 10e2                     bpl trolc
376c : a203                     ldx #3
376e :                  trolc1
                                set_ax zp1,$ff
                       >            load_flag $ff
376e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3770 : 48              >            pha         ;use stack to load status
3771 : b519            >            lda zp1,x    ;precharge accu
3773 : 28              >            plp
                        
3774 : 2a                       rol a
                                tst_ax rROLc,fROLc,$ff-fnzc
3775 : 08              >            php         ;save flags
3776 : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
3779 : f003            >        beq skip2342
                       >        trap            ;failed not equal (non zero)
377b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
377e :                 >skip2342
                       >
377e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
377f : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3781 : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne     ;
3784 : f003            >        beq skip2345
                       >        trap            ;failed not equal (non zero)
3786 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3789 :                 >skip2345
                       >
                        
3789 : ca                       dex
378a : 10e2                     bpl trolc1
                        
378c : a203                     ldx #3
378e :                  tror
                                set_ax zp1,0
                       >            load_flag 0
378e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3790 : 48              >            pha         ;use stack to load status
3791 : b519            >            lda zp1,x    ;precharge accu
3793 : 28              >            plp
                        
3794 : 6a                       ror a
                                tst_ax rROR,fROR,0
3795 : 08              >            php         ;save flags
3796 : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
3799 : f003            >        beq skip2350
                       >        trap            ;failed not equal (non zero)
379b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
379e :                 >skip2350
                       >
379e : 68              >            pla         ;load status
                       >            eor_flag 0
379f : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
37a1 : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne     ;
37a4 : f003            >        beq skip2353
                       >        trap            ;failed not equal (non zero)
37a6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37a9 :                 >skip2353
                       >
                        
37a9 : ca                       dex
37aa : 10e2                     bpl tror
37ac : a203                     ldx #3
37ae :                  tror1
                                set_ax zp1,$ff-fc
                       >            load_flag $ff-fc
37ae : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
37b0 : 48              >            pha         ;use stack to load status
37b1 : b519            >            lda zp1,x    ;precharge accu
37b3 : 28              >            plp
                        
37b4 : 6a                       ror a
                                tst_ax rROR,fROR,$ff-fnzc
37b5 : 08              >            php         ;save flags
37b6 : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
37b9 : f003            >        beq skip2358
                       >        trap            ;failed not equal (non zero)
37bb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37be :                 >skip2358
                       >
37be : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
37bf : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
37c1 : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne     ;
37c4 : f003            >        beq skip2361
                       >        trap            ;failed not equal (non zero)
37c6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37c9 :                 >skip2361
                       >
                        
37c9 : ca                       dex
37ca : 10e2                     bpl tror1
                        
37cc : a203                     ldx #3
37ce :                  trorc
                                set_ax zp1,fc
                       >            load_flag fc
37ce : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
37d0 : 48              >            pha         ;use stack to load status
37d1 : b519            >            lda zp1,x    ;precharge accu
37d3 : 28              >            plp
                        
37d4 : 6a                       ror a
                                tst_ax rRORc,fRORc,0
37d5 : 08              >            php         ;save flags
37d6 : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
37d9 : f003            >        beq skip2366
                       >        trap            ;failed not equal (non zero)
37db : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37de :                 >skip2366
                       >
37de : 68              >            pla         ;load status
                       >            eor_flag 0
37df : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
37e1 : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne     ;
37e4 : f003            >        beq skip2369
                       >        trap            ;failed not equal (non zero)
37e6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37e9 :                 >skip2369
                       >
                        
37e9 : ca                       dex
37ea : 10e2                     bpl trorc
37ec : a203                     ldx #3
37ee :                  trorc1
                                set_ax zp1,$ff
                       >            load_flag $ff
37ee : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
37f0 : 48              >            pha         ;use stack to load status
37f1 : b519            >            lda zp1,x    ;precharge accu
37f3 : 28              >            plp
                        
37f4 : 6a                       ror a
                                tst_ax rRORc,fRORc,$ff-fnzc
37f5 : 08              >            php         ;save flags
37f6 : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
37f9 : f003            >        beq skip2374
                       >        trap            ;failed not equal (non zero)
37fb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37fe :                 >skip2374
                       >
37fe : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
37ff : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3801 : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne     ;
3804 : f003            >        beq skip2377
                       >        trap            ;failed not equal (non zero)
3806 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3809 :                 >skip2377
                       >
                        
3809 : ca                       dex
380a : 10e2                     bpl trorc1
                                next_test
380c : ad0002          >            lda test_case   ;previous test
380f : c91d            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3811 : f003            >        beq skip2380
                       >        trap            ;failed not equal (non zero)
3813 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3816 :                 >skip2380
                       >
001e =                 >test_num = test_num + 1
3816 : a91e            >            lda #test_num   ;*** next tests' number
3818 : 8d0002          >            sta test_case
381b : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; shifts - zeropage
381e : a203                     ldx #3
3820 :                  tasl2
                                set_z zp1,0
                       >            load_flag 0
3820 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3822 : 48              >            pha         ;use stack to load status
3823 : b519            >            lda zp1,x    ;load to zeropage
3825 : 8512            >            sta zpt
3827 : 28              >            plp
                        
3828 : 0612                     asl zpt
                                tst_z rASL,fASL,0
382a : 08              >            php         ;save flags
382b : a512            >            lda zpt
382d : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
3830 : f003            >        beq skip2385
                       >        trap            ;failed not equal (non zero)
3832 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3835 :                 >skip2385
                       >
3835 : 68              >            pla         ;load status
                       >            eor_flag 0
3836 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3838 : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
383b : f003            >        beq skip2388
                       >        trap            ;failed not equal (non zero)
383d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3840 :                 >skip2388
                       >
                        
3840 : ca                       dex
3841 : 10dd                     bpl tasl2
3843 : a203                     ldx #3
3845 :                  tasl3
                                set_z zp1,$ff
                       >            load_flag $ff
3845 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3847 : 48              >            pha         ;use stack to load status
3848 : b519            >            lda zp1,x    ;load to zeropage
384a : 8512            >            sta zpt
384c : 28              >            plp
                        
384d : 0612                     asl zpt
                                tst_z rASL,fASL,$ff-fnzc
384f : 08              >            php         ;save flags
3850 : a512            >            lda zpt
3852 : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
3855 : f003            >        beq skip2393
                       >        trap            ;failed not equal (non zero)
3857 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
385a :                 >skip2393
                       >
385a : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
385b : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
385d : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
3860 : f003            >        beq skip2396
                       >        trap            ;failed not equal (non zero)
3862 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3865 :                 >skip2396
                       >
                        
3865 : ca                       dex
3866 : 10dd                     bpl tasl3
                        
3868 : a203                     ldx #3
386a :                  tlsr2
                                set_z zp1,0
                       >            load_flag 0
386a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
386c : 48              >            pha         ;use stack to load status
386d : b519            >            lda zp1,x    ;load to zeropage
386f : 8512            >            sta zpt
3871 : 28              >            plp
                        
3872 : 4612                     lsr zpt
                                tst_z rLSR,fLSR,0
3874 : 08              >            php         ;save flags
3875 : a512            >            lda zpt
3877 : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
387a : f003            >        beq skip2401
                       >        trap            ;failed not equal (non zero)
387c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
387f :                 >skip2401
                       >
387f : 68              >            pla         ;load status
                       >            eor_flag 0
3880 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3882 : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
3885 : f003            >        beq skip2404
                       >        trap            ;failed not equal (non zero)
3887 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
388a :                 >skip2404
                       >
                        
388a : ca                       dex
388b : 10dd                     bpl tlsr2
388d : a203                     ldx #3
388f :                  tlsr3
                                set_z zp1,$ff
                       >            load_flag $ff
388f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3891 : 48              >            pha         ;use stack to load status
3892 : b519            >            lda zp1,x    ;load to zeropage
3894 : 8512            >            sta zpt
3896 : 28              >            plp
                        
3897 : 4612                     lsr zpt
                                tst_z rLSR,fLSR,$ff-fnzc
3899 : 08              >            php         ;save flags
389a : a512            >            lda zpt
389c : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
389f : f003            >        beq skip2409
                       >        trap            ;failed not equal (non zero)
38a1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38a4 :                 >skip2409
                       >
38a4 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
38a5 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
38a7 : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
38aa : f003            >        beq skip2412
                       >        trap            ;failed not equal (non zero)
38ac : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38af :                 >skip2412
                       >
                        
38af : ca                       dex
38b0 : 10dd                     bpl tlsr3
                        
38b2 : a203                     ldx #3
38b4 :                  trol2
                                set_z zp1,0
                       >            load_flag 0
38b4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
38b6 : 48              >            pha         ;use stack to load status
38b7 : b519            >            lda zp1,x    ;load to zeropage
38b9 : 8512            >            sta zpt
38bb : 28              >            plp
                        
38bc : 2612                     rol zpt
                                tst_z rROL,fROL,0
38be : 08              >            php         ;save flags
38bf : a512            >            lda zpt
38c1 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
38c4 : f003            >        beq skip2417
                       >        trap            ;failed not equal (non zero)
38c6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38c9 :                 >skip2417
                       >
38c9 : 68              >            pla         ;load status
                       >            eor_flag 0
38ca : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
38cc : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
38cf : f003            >        beq skip2420
                       >        trap            ;failed not equal (non zero)
38d1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38d4 :                 >skip2420
                       >
                        
38d4 : ca                       dex
38d5 : 10dd                     bpl trol2
38d7 : a203                     ldx #3
38d9 :                  trol3
                                set_z zp1,$ff-fc
                       >            load_flag $ff-fc
38d9 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
38db : 48              >            pha         ;use stack to load status
38dc : b519            >            lda zp1,x    ;load to zeropage
38de : 8512            >            sta zpt
38e0 : 28              >            plp
                        
38e1 : 2612                     rol zpt
                                tst_z rROL,fROL,$ff-fnzc
38e3 : 08              >            php         ;save flags
38e4 : a512            >            lda zpt
38e6 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
38e9 : f003            >        beq skip2425
                       >        trap            ;failed not equal (non zero)
38eb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38ee :                 >skip2425
                       >
38ee : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
38ef : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
38f1 : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
38f4 : f003            >        beq skip2428
                       >        trap            ;failed not equal (non zero)
38f6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38f9 :                 >skip2428
                       >
                        
38f9 : ca                       dex
38fa : 10dd                     bpl trol3
                        
38fc : a203                     ldx #3
38fe :                  trolc2
                                set_z zp1,fc
                       >            load_flag fc
38fe : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
3900 : 48              >            pha         ;use stack to load status
3901 : b519            >            lda zp1,x    ;load to zeropage
3903 : 8512            >            sta zpt
3905 : 28              >            plp
                        
3906 : 2612                     rol zpt
                                tst_z rROLc,fROLc,0
3908 : 08              >            php         ;save flags
3909 : a512            >            lda zpt
390b : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
390e : f003            >        beq skip2433
                       >        trap            ;failed not equal (non zero)
3910 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3913 :                 >skip2433
                       >
3913 : 68              >            pla         ;load status
                       >            eor_flag 0
3914 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3916 : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
3919 : f003            >        beq skip2436
                       >        trap            ;failed not equal (non zero)
391b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
391e :                 >skip2436
                       >
                        
391e : ca                       dex
391f : 10dd                     bpl trolc2
3921 : a203                     ldx #3
3923 :                  trolc3
                                set_z zp1,$ff
                       >            load_flag $ff
3923 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3925 : 48              >            pha         ;use stack to load status
3926 : b519            >            lda zp1,x    ;load to zeropage
3928 : 8512            >            sta zpt
392a : 28              >            plp
                        
392b : 2612                     rol zpt
                                tst_z rROLc,fROLc,$ff-fnzc
392d : 08              >            php         ;save flags
392e : a512            >            lda zpt
3930 : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
3933 : f003            >        beq skip2441
                       >        trap            ;failed not equal (non zero)
3935 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3938 :                 >skip2441
                       >
3938 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3939 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
393b : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
393e : f003            >        beq skip2444
                       >        trap            ;failed not equal (non zero)
3940 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3943 :                 >skip2444
                       >
                        
3943 : ca                       dex
3944 : 10dd                     bpl trolc3
                        
3946 : a203                     ldx #3
3948 :                  tror2
                                set_z zp1,0
                       >            load_flag 0
3948 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
394a : 48              >            pha         ;use stack to load status
394b : b519            >            lda zp1,x    ;load to zeropage
394d : 8512            >            sta zpt
394f : 28              >            plp
                        
3950 : 6612                     ror zpt
                                tst_z rROR,fROR,0
3952 : 08              >            php         ;save flags
3953 : a512            >            lda zpt
3955 : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
3958 : f003            >        beq skip2449
                       >        trap            ;failed not equal (non zero)
395a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
395d :                 >skip2449
                       >
395d : 68              >            pla         ;load status
                       >            eor_flag 0
395e : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3960 : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
3963 : f003            >        beq skip2452
                       >        trap            ;failed not equal (non zero)
3965 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3968 :                 >skip2452
                       >
                        
3968 : ca                       dex
3969 : 10dd                     bpl tror2
396b : a203                     ldx #3
396d :                  tror3
                                set_z zp1,$ff-fc
                       >            load_flag $ff-fc
396d : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
396f : 48              >            pha         ;use stack to load status
3970 : b519            >            lda zp1,x    ;load to zeropage
3972 : 8512            >            sta zpt
3974 : 28              >            plp
                        
3975 : 6612                     ror zpt
                                tst_z rROR,fROR,$ff-fnzc
3977 : 08              >            php         ;save flags
3978 : a512            >            lda zpt
397a : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
397d : f003            >        beq skip2457
                       >        trap            ;failed not equal (non zero)
397f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3982 :                 >skip2457
                       >
3982 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3983 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3985 : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
3988 : f003            >        beq skip2460
                       >        trap            ;failed not equal (non zero)
398a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
398d :                 >skip2460
                       >
                        
398d : ca                       dex
398e : 10dd                     bpl tror3
                        
3990 : a203                     ldx #3
3992 :                  trorc2
                                set_z zp1,fc
                       >            load_flag fc
3992 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
3994 : 48              >            pha         ;use stack to load status
3995 : b519            >            lda zp1,x    ;load to zeropage
3997 : 8512            >            sta zpt
3999 : 28              >            plp
                        
399a : 6612                     ror zpt
                                tst_z rRORc,fRORc,0
399c : 08              >            php         ;save flags
399d : a512            >            lda zpt
399f : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
39a2 : f003            >        beq skip2465
                       >        trap            ;failed not equal (non zero)
39a4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
39a7 :                 >skip2465
                       >
39a7 : 68              >            pla         ;load status
                       >            eor_flag 0
39a8 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
39aa : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
39ad : f003            >        beq skip2468
                       >        trap            ;failed not equal (non zero)
39af : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
39b2 :                 >skip2468
                       >
                        
39b2 : ca                       dex
39b3 : 10dd                     bpl trorc2
39b5 : a203                     ldx #3
39b7 :                  trorc3
                                set_z zp1,$ff
                       >            load_flag $ff
39b7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
39b9 : 48              >            pha         ;use stack to load status
39ba : b519            >            lda zp1,x    ;load to zeropage
39bc : 8512            >            sta zpt
39be : 28              >            plp
                        
39bf : 6612                     ror zpt
                                tst_z rRORc,fRORc,$ff-fnzc
39c1 : 08              >            php         ;save flags
39c2 : a512            >            lda zpt
39c4 : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
39c7 : f003            >        beq skip2473
                       >        trap            ;failed not equal (non zero)
39c9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
39cc :                 >skip2473
                       >
39cc : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
39cd : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
39cf : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
39d2 : f003            >        beq skip2476
                       >        trap            ;failed not equal (non zero)
39d4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
39d7 :                 >skip2476
                       >
                        
39d7 : ca                       dex
39d8 : 10dd                     bpl trorc3
                                next_test
39da : ad0002          >            lda test_case   ;previous test
39dd : c91e            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
39df : f003            >        beq skip2479
                       >        trap            ;failed not equal (non zero)
39e1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
39e4 :                 >skip2479
                       >
001f =                 >test_num = test_num + 1
39e4 : a91f            >            lda #test_num   ;*** next tests' number
39e6 : 8d0002          >            sta test_case
39e9 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; shifts - absolute
39ec : a203                     ldx #3
39ee :                  tasl4
                                set_abs zp1,0
                       >            load_flag 0
39ee : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
39f0 : 48              >            pha         ;use stack to load status
39f1 : b519            >            lda zp1,x    ;load to memory
39f3 : 8d0302          >            sta abst
39f6 : 28              >            plp
                        
39f7 : 0e0302                   asl abst
                                tst_abs rASL,fASL,0
39fa : 08              >            php         ;save flags
39fb : ad0302          >            lda abst
39fe : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
3a01 : f003            >        beq skip2484
                       >        trap            ;failed not equal (non zero)
3a03 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a06 :                 >skip2484
                       >
3a06 : 68              >            pla         ;load status
                       >            eor_flag 0
3a07 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3a09 : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
3a0c : f003            >        beq skip2487
                       >        trap            ;failed not equal (non zero)
3a0e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a11 :                 >skip2487
                       >
                        
3a11 : ca                       dex
3a12 : 10da                     bpl tasl4
3a14 : a203                     ldx #3
3a16 :                  tasl5
                                set_abs zp1,$ff
                       >            load_flag $ff
3a16 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3a18 : 48              >            pha         ;use stack to load status
3a19 : b519            >            lda zp1,x    ;load to memory
3a1b : 8d0302          >            sta abst
3a1e : 28              >            plp
                        
3a1f : 0e0302                   asl abst
                                tst_abs rASL,fASL,$ff-fnzc
3a22 : 08              >            php         ;save flags
3a23 : ad0302          >            lda abst
3a26 : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
3a29 : f003            >        beq skip2492
                       >        trap            ;failed not equal (non zero)
3a2b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a2e :                 >skip2492
                       >
3a2e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3a2f : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3a31 : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
3a34 : f003            >        beq skip2495
                       >        trap            ;failed not equal (non zero)
3a36 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a39 :                 >skip2495
                       >
                        
3a39 : ca                       dex
3a3a : 10da                     bpl tasl5
                        
3a3c : a203                     ldx #3
3a3e :                  tlsr4
                                set_abs zp1,0
                       >            load_flag 0
3a3e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3a40 : 48              >            pha         ;use stack to load status
3a41 : b519            >            lda zp1,x    ;load to memory
3a43 : 8d0302          >            sta abst
3a46 : 28              >            plp
                        
3a47 : 4e0302                   lsr abst
                                tst_abs rLSR,fLSR,0
3a4a : 08              >            php         ;save flags
3a4b : ad0302          >            lda abst
3a4e : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
3a51 : f003            >        beq skip2500
                       >        trap            ;failed not equal (non zero)
3a53 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a56 :                 >skip2500
                       >
3a56 : 68              >            pla         ;load status
                       >            eor_flag 0
3a57 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3a59 : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
3a5c : f003            >        beq skip2503
                       >        trap            ;failed not equal (non zero)
3a5e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a61 :                 >skip2503
                       >
                        
3a61 : ca                       dex
3a62 : 10da                     bpl tlsr4
3a64 : a203                     ldx #3
3a66 :                  tlsr5
                                set_abs zp1,$ff
                       >            load_flag $ff
3a66 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3a68 : 48              >            pha         ;use stack to load status
3a69 : b519            >            lda zp1,x    ;load to memory
3a6b : 8d0302          >            sta abst
3a6e : 28              >            plp
                        
3a6f : 4e0302                   lsr abst
                                tst_abs rLSR,fLSR,$ff-fnzc
3a72 : 08              >            php         ;save flags
3a73 : ad0302          >            lda abst
3a76 : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
3a79 : f003            >        beq skip2508
                       >        trap            ;failed not equal (non zero)
3a7b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a7e :                 >skip2508
                       >
3a7e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3a7f : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3a81 : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
3a84 : f003            >        beq skip2511
                       >        trap            ;failed not equal (non zero)
3a86 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a89 :                 >skip2511
                       >
                        
3a89 : ca                       dex
3a8a : 10da                     bpl tlsr5
                        
3a8c : a203                     ldx #3
3a8e :                  trol4
                                set_abs zp1,0
                       >            load_flag 0
3a8e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3a90 : 48              >            pha         ;use stack to load status
3a91 : b519            >            lda zp1,x    ;load to memory
3a93 : 8d0302          >            sta abst
3a96 : 28              >            plp
                        
3a97 : 2e0302                   rol abst
                                tst_abs rROL,fROL,0
3a9a : 08              >            php         ;save flags
3a9b : ad0302          >            lda abst
3a9e : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
3aa1 : f003            >        beq skip2516
                       >        trap            ;failed not equal (non zero)
3aa3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3aa6 :                 >skip2516
                       >
3aa6 : 68              >            pla         ;load status
                       >            eor_flag 0
3aa7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3aa9 : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
3aac : f003            >        beq skip2519
                       >        trap            ;failed not equal (non zero)
3aae : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ab1 :                 >skip2519
                       >
                        
3ab1 : ca                       dex
3ab2 : 10da                     bpl trol4
3ab4 : a203                     ldx #3
3ab6 :                  trol5
                                set_abs zp1,$ff-fc
                       >            load_flag $ff-fc
3ab6 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
3ab8 : 48              >            pha         ;use stack to load status
3ab9 : b519            >            lda zp1,x    ;load to memory
3abb : 8d0302          >            sta abst
3abe : 28              >            plp
                        
3abf : 2e0302                   rol abst
                                tst_abs rROL,fROL,$ff-fnzc
3ac2 : 08              >            php         ;save flags
3ac3 : ad0302          >            lda abst
3ac6 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
3ac9 : f003            >        beq skip2524
                       >        trap            ;failed not equal (non zero)
3acb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ace :                 >skip2524
                       >
3ace : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3acf : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3ad1 : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
3ad4 : f003            >        beq skip2527
                       >        trap            ;failed not equal (non zero)
3ad6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ad9 :                 >skip2527
                       >
                        
3ad9 : ca                       dex
3ada : 10da                     bpl trol5
                        
3adc : a203                     ldx #3
3ade :                  trolc4
                                set_abs zp1,fc
                       >            load_flag fc
3ade : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
3ae0 : 48              >            pha         ;use stack to load status
3ae1 : b519            >            lda zp1,x    ;load to memory
3ae3 : 8d0302          >            sta abst
3ae6 : 28              >            plp
                        
3ae7 : 2e0302                   rol abst
                                tst_abs rROLc,fROLc,0
3aea : 08              >            php         ;save flags
3aeb : ad0302          >            lda abst
3aee : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
3af1 : f003            >        beq skip2532
                       >        trap            ;failed not equal (non zero)
3af3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3af6 :                 >skip2532
                       >
3af6 : 68              >            pla         ;load status
                       >            eor_flag 0
3af7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3af9 : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
3afc : f003            >        beq skip2535
                       >        trap            ;failed not equal (non zero)
3afe : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b01 :                 >skip2535
                       >
                        
3b01 : ca                       dex
3b02 : 10da                     bpl trolc4
3b04 : a203                     ldx #3
3b06 :                  trolc5
                                set_abs zp1,$ff
                       >            load_flag $ff
3b06 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3b08 : 48              >            pha         ;use stack to load status
3b09 : b519            >            lda zp1,x    ;load to memory
3b0b : 8d0302          >            sta abst
3b0e : 28              >            plp
                        
3b0f : 2e0302                   rol abst
                                tst_abs rROLc,fROLc,$ff-fnzc
3b12 : 08              >            php         ;save flags
3b13 : ad0302          >            lda abst
3b16 : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
3b19 : f003            >        beq skip2540
                       >        trap            ;failed not equal (non zero)
3b1b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b1e :                 >skip2540
                       >
3b1e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3b1f : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3b21 : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
3b24 : f003            >        beq skip2543
                       >        trap            ;failed not equal (non zero)
3b26 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b29 :                 >skip2543
                       >
                        
3b29 : ca                       dex
3b2a : 10da                     bpl trolc5
                        
3b2c : a203                     ldx #3
3b2e :                  tror4
                                set_abs zp1,0
                       >            load_flag 0
3b2e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3b30 : 48              >            pha         ;use stack to load status
3b31 : b519            >            lda zp1,x    ;load to memory
3b33 : 8d0302          >            sta abst
3b36 : 28              >            plp
                        
3b37 : 6e0302                   ror abst
                                tst_abs rROR,fROR,0
3b3a : 08              >            php         ;save flags
3b3b : ad0302          >            lda abst
3b3e : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
3b41 : f003            >        beq skip2548
                       >        trap            ;failed not equal (non zero)
3b43 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b46 :                 >skip2548
                       >
3b46 : 68              >            pla         ;load status
                       >            eor_flag 0
3b47 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3b49 : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
3b4c : f003            >        beq skip2551
                       >        trap            ;failed not equal (non zero)
3b4e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b51 :                 >skip2551
                       >
                        
3b51 : ca                       dex
3b52 : 10da                     bpl tror4
3b54 : a203                     ldx #3
3b56 :                  tror5
                                set_abs zp1,$ff-fc
                       >            load_flag $ff-fc
3b56 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
3b58 : 48              >            pha         ;use stack to load status
3b59 : b519            >            lda zp1,x    ;load to memory
3b5b : 8d0302          >            sta abst
3b5e : 28              >            plp
                        
3b5f : 6e0302                   ror abst
                                tst_abs rROR,fROR,$ff-fnzc
3b62 : 08              >            php         ;save flags
3b63 : ad0302          >            lda abst
3b66 : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
3b69 : f003            >        beq skip2556
                       >        trap            ;failed not equal (non zero)
3b6b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b6e :                 >skip2556
                       >
3b6e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3b6f : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3b71 : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
3b74 : f003            >        beq skip2559
                       >        trap            ;failed not equal (non zero)
3b76 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b79 :                 >skip2559
                       >
                        
3b79 : ca                       dex
3b7a : 10da                     bpl tror5
                        
3b7c : a203                     ldx #3
3b7e :                  trorc4
                                set_abs zp1,fc
                       >            load_flag fc
3b7e : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
3b80 : 48              >            pha         ;use stack to load status
3b81 : b519            >            lda zp1,x    ;load to memory
3b83 : 8d0302          >            sta abst
3b86 : 28              >            plp
                        
3b87 : 6e0302                   ror abst
                                tst_abs rRORc,fRORc,0
3b8a : 08              >            php         ;save flags
3b8b : ad0302          >            lda abst
3b8e : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
3b91 : f003            >        beq skip2564
                       >        trap            ;failed not equal (non zero)
3b93 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b96 :                 >skip2564
                       >
3b96 : 68              >            pla         ;load status
                       >            eor_flag 0
3b97 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3b99 : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
3b9c : f003            >        beq skip2567
                       >        trap            ;failed not equal (non zero)
3b9e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ba1 :                 >skip2567
                       >
                        
3ba1 : ca                       dex
3ba2 : 10da                     bpl trorc4
3ba4 : a203                     ldx #3
3ba6 :                  trorc5
                                set_abs zp1,$ff
                       >            load_flag $ff
3ba6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3ba8 : 48              >            pha         ;use stack to load status
3ba9 : b519            >            lda zp1,x    ;load to memory
3bab : 8d0302          >            sta abst
3bae : 28              >            plp
                        
3baf : 6e0302                   ror abst
                                tst_abs rRORc,fRORc,$ff-fnzc
3bb2 : 08              >            php         ;save flags
3bb3 : ad0302          >            lda abst
3bb6 : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
3bb9 : f003            >        beq skip2572
                       >        trap            ;failed not equal (non zero)
3bbb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3bbe :                 >skip2572
                       >
3bbe : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3bbf : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3bc1 : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
3bc4 : f003            >        beq skip2575
                       >        trap            ;failed not equal (non zero)
3bc6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3bc9 :                 >skip2575
                       >
                        
3bc9 : ca                       dex
3bca : 10da                     bpl trorc5
                                next_test
3bcc : ad0002          >            lda test_case   ;previous test
3bcf : c91f            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3bd1 : f003            >        beq skip2578
                       >        trap            ;failed not equal (non zero)
3bd3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3bd6 :                 >skip2578
                       >
0020 =                 >test_num = test_num + 1
3bd6 : a920            >            lda #test_num   ;*** next tests' number
3bd8 : 8d0002          >            sta test_case
3bdb : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; shifts - zp indexed
3bde : a203                     ldx #3
3be0 :                  tasl6
                                set_zx zp1,0
                       >            load_flag 0
3be0 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3be2 : 48              >            pha         ;use stack to load status
3be3 : b519            >            lda zp1,x    ;load to indexed zeropage
3be5 : 9512            >            sta zpt,x
3be7 : 28              >            plp
                        
3be8 : 1612                     asl zpt,x
                                tst_zx rASL,fASL,0
3bea : 08              >            php         ;save flags
3beb : b512            >            lda zpt,x
3bed : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
3bf0 : f003            >        beq skip2583
                       >        trap            ;failed not equal (non zero)
3bf2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3bf5 :                 >skip2583
                       >
3bf5 : 68              >            pla         ;load status
                       >            eor_flag 0
3bf6 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3bf8 : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
3bfb : f003            >        beq skip2586
                       >        trap            ;failed not equal (non zero)
3bfd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c00 :                 >skip2586
                       >
                        
3c00 : ca                       dex
3c01 : 10dd                     bpl tasl6
3c03 : a203                     ldx #3
3c05 :                  tasl7
                                set_zx zp1,$ff
                       >            load_flag $ff
3c05 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3c07 : 48              >            pha         ;use stack to load status
3c08 : b519            >            lda zp1,x    ;load to indexed zeropage
3c0a : 9512            >            sta zpt,x
3c0c : 28              >            plp
                        
3c0d : 1612                     asl zpt,x
                                tst_zx rASL,fASL,$ff-fnzc
3c0f : 08              >            php         ;save flags
3c10 : b512            >            lda zpt,x
3c12 : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
3c15 : f003            >        beq skip2591
                       >        trap            ;failed not equal (non zero)
3c17 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c1a :                 >skip2591
                       >
3c1a : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3c1b : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3c1d : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
3c20 : f003            >        beq skip2594
                       >        trap            ;failed not equal (non zero)
3c22 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c25 :                 >skip2594
                       >
                        
3c25 : ca                       dex
3c26 : 10dd                     bpl tasl7
                        
3c28 : a203                     ldx #3
3c2a :                  tlsr6
                                set_zx zp1,0
                       >            load_flag 0
3c2a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3c2c : 48              >            pha         ;use stack to load status
3c2d : b519            >            lda zp1,x    ;load to indexed zeropage
3c2f : 9512            >            sta zpt,x
3c31 : 28              >            plp
                        
3c32 : 5612                     lsr zpt,x
                                tst_zx rLSR,fLSR,0
3c34 : 08              >            php         ;save flags
3c35 : b512            >            lda zpt,x
3c37 : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
3c3a : f003            >        beq skip2599
                       >        trap            ;failed not equal (non zero)
3c3c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c3f :                 >skip2599
                       >
3c3f : 68              >            pla         ;load status
                       >            eor_flag 0
3c40 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3c42 : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
3c45 : f003            >        beq skip2602
                       >        trap            ;failed not equal (non zero)
3c47 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c4a :                 >skip2602
                       >
                        
3c4a : ca                       dex
3c4b : 10dd                     bpl tlsr6
3c4d : a203                     ldx #3
3c4f :                  tlsr7
                                set_zx zp1,$ff
                       >            load_flag $ff
3c4f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3c51 : 48              >            pha         ;use stack to load status
3c52 : b519            >            lda zp1,x    ;load to indexed zeropage
3c54 : 9512            >            sta zpt,x
3c56 : 28              >            plp
                        
3c57 : 5612                     lsr zpt,x
                                tst_zx rLSR,fLSR,$ff-fnzc
3c59 : 08              >            php         ;save flags
3c5a : b512            >            lda zpt,x
3c5c : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
3c5f : f003            >        beq skip2607
                       >        trap            ;failed not equal (non zero)
3c61 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c64 :                 >skip2607
                       >
3c64 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3c65 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3c67 : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
3c6a : f003            >        beq skip2610
                       >        trap            ;failed not equal (non zero)
3c6c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c6f :                 >skip2610
                       >
                        
3c6f : ca                       dex
3c70 : 10dd                     bpl tlsr7
                        
3c72 : a203                     ldx #3
3c74 :                  trol6
                                set_zx zp1,0
                       >            load_flag 0
3c74 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3c76 : 48              >            pha         ;use stack to load status
3c77 : b519            >            lda zp1,x    ;load to indexed zeropage
3c79 : 9512            >            sta zpt,x
3c7b : 28              >            plp
                        
3c7c : 3612                     rol zpt,x
                                tst_zx rROL,fROL,0
3c7e : 08              >            php         ;save flags
3c7f : b512            >            lda zpt,x
3c81 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
3c84 : f003            >        beq skip2615
                       >        trap            ;failed not equal (non zero)
3c86 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c89 :                 >skip2615
                       >
3c89 : 68              >            pla         ;load status
                       >            eor_flag 0
3c8a : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3c8c : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
3c8f : f003            >        beq skip2618
                       >        trap            ;failed not equal (non zero)
3c91 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c94 :                 >skip2618
                       >
                        
3c94 : ca                       dex
3c95 : 10dd                     bpl trol6
3c97 : a203                     ldx #3
3c99 :                  trol7
                                set_zx zp1,$ff-fc
                       >            load_flag $ff-fc
3c99 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
3c9b : 48              >            pha         ;use stack to load status
3c9c : b519            >            lda zp1,x    ;load to indexed zeropage
3c9e : 9512            >            sta zpt,x
3ca0 : 28              >            plp
                        
3ca1 : 3612                     rol zpt,x
                                tst_zx rROL,fROL,$ff-fnzc
3ca3 : 08              >            php         ;save flags
3ca4 : b512            >            lda zpt,x
3ca6 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
3ca9 : f003            >        beq skip2623
                       >        trap            ;failed not equal (non zero)
3cab : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3cae :                 >skip2623
                       >
3cae : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3caf : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3cb1 : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
3cb4 : f003            >        beq skip2626
                       >        trap            ;failed not equal (non zero)
3cb6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3cb9 :                 >skip2626
                       >
                        
3cb9 : ca                       dex
3cba : 10dd                     bpl trol7
                        
3cbc : a203                     ldx #3
3cbe :                  trolc6
                                set_zx zp1,fc
                       >            load_flag fc
3cbe : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
3cc0 : 48              >            pha         ;use stack to load status
3cc1 : b519            >            lda zp1,x    ;load to indexed zeropage
3cc3 : 9512            >            sta zpt,x
3cc5 : 28              >            plp
                        
3cc6 : 3612                     rol zpt,x
                                tst_zx rROLc,fROLc,0
3cc8 : 08              >            php         ;save flags
3cc9 : b512            >            lda zpt,x
3ccb : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
3cce : f003            >        beq skip2631
                       >        trap            ;failed not equal (non zero)
3cd0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3cd3 :                 >skip2631
                       >
3cd3 : 68              >            pla         ;load status
                       >            eor_flag 0
3cd4 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3cd6 : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
3cd9 : f003            >        beq skip2634
                       >        trap            ;failed not equal (non zero)
3cdb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3cde :                 >skip2634
                       >
                        
3cde : ca                       dex
3cdf : 10dd                     bpl trolc6
3ce1 : a203                     ldx #3
3ce3 :                  trolc7
                                set_zx zp1,$ff
                       >            load_flag $ff
3ce3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3ce5 : 48              >            pha         ;use stack to load status
3ce6 : b519            >            lda zp1,x    ;load to indexed zeropage
3ce8 : 9512            >            sta zpt,x
3cea : 28              >            plp
                        
3ceb : 3612                     rol zpt,x
                                tst_zx rROLc,fROLc,$ff-fnzc
3ced : 08              >            php         ;save flags
3cee : b512            >            lda zpt,x
3cf0 : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
3cf3 : f003            >        beq skip2639
                       >        trap            ;failed not equal (non zero)
3cf5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3cf8 :                 >skip2639
                       >
3cf8 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3cf9 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3cfb : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
3cfe : f003            >        beq skip2642
                       >        trap            ;failed not equal (non zero)
3d00 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d03 :                 >skip2642
                       >
                        
3d03 : ca                       dex
3d04 : 10dd                     bpl trolc7
                        
3d06 : a203                     ldx #3
3d08 :                  tror6
                                set_zx zp1,0
                       >            load_flag 0
3d08 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3d0a : 48              >            pha         ;use stack to load status
3d0b : b519            >            lda zp1,x    ;load to indexed zeropage
3d0d : 9512            >            sta zpt,x
3d0f : 28              >            plp
                        
3d10 : 7612                     ror zpt,x
                                tst_zx rROR,fROR,0
3d12 : 08              >            php         ;save flags
3d13 : b512            >            lda zpt,x
3d15 : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
3d18 : f003            >        beq skip2647
                       >        trap            ;failed not equal (non zero)
3d1a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d1d :                 >skip2647
                       >
3d1d : 68              >            pla         ;load status
                       >            eor_flag 0
3d1e : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3d20 : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
3d23 : f003            >        beq skip2650
                       >        trap            ;failed not equal (non zero)
3d25 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d28 :                 >skip2650
                       >
                        
3d28 : ca                       dex
3d29 : 10dd                     bpl tror6
3d2b : a203                     ldx #3
3d2d :                  tror7
                                set_zx zp1,$ff-fc
                       >            load_flag $ff-fc
3d2d : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
3d2f : 48              >            pha         ;use stack to load status
3d30 : b519            >            lda zp1,x    ;load to indexed zeropage
3d32 : 9512            >            sta zpt,x
3d34 : 28              >            plp
                        
3d35 : 7612                     ror zpt,x
                                tst_zx rROR,fROR,$ff-fnzc
3d37 : 08              >            php         ;save flags
3d38 : b512            >            lda zpt,x
3d3a : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
3d3d : f003            >        beq skip2655
                       >        trap            ;failed not equal (non zero)
3d3f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d42 :                 >skip2655
                       >
3d42 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3d43 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3d45 : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
3d48 : f003            >        beq skip2658
                       >        trap            ;failed not equal (non zero)
3d4a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d4d :                 >skip2658
                       >
                        
3d4d : ca                       dex
3d4e : 10dd                     bpl tror7
                        
3d50 : a203                     ldx #3
3d52 :                  trorc6
                                set_zx zp1,fc
                       >            load_flag fc
3d52 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
3d54 : 48              >            pha         ;use stack to load status
3d55 : b519            >            lda zp1,x    ;load to indexed zeropage
3d57 : 9512            >            sta zpt,x
3d59 : 28              >            plp
                        
3d5a : 7612                     ror zpt,x
                                tst_zx rRORc,fRORc,0
3d5c : 08              >            php         ;save flags
3d5d : b512            >            lda zpt,x
3d5f : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
3d62 : f003            >        beq skip2663
                       >        trap            ;failed not equal (non zero)
3d64 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d67 :                 >skip2663
                       >
3d67 : 68              >            pla         ;load status
                       >            eor_flag 0
3d68 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3d6a : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
3d6d : f003            >        beq skip2666
                       >        trap            ;failed not equal (non zero)
3d6f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d72 :                 >skip2666
                       >
                        
3d72 : ca                       dex
3d73 : 10dd                     bpl trorc6
3d75 : a203                     ldx #3
3d77 :                  trorc7
                                set_zx zp1,$ff
                       >            load_flag $ff
3d77 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3d79 : 48              >            pha         ;use stack to load status
3d7a : b519            >            lda zp1,x    ;load to indexed zeropage
3d7c : 9512            >            sta zpt,x
3d7e : 28              >            plp
                        
3d7f : 7612                     ror zpt,x
                                tst_zx rRORc,fRORc,$ff-fnzc
3d81 : 08              >            php         ;save flags
3d82 : b512            >            lda zpt,x
3d84 : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
3d87 : f003            >        beq skip2671
                       >        trap            ;failed not equal (non zero)
3d89 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d8c :                 >skip2671
                       >
3d8c : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3d8d : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3d8f : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
3d92 : f003            >        beq skip2674
                       >        trap            ;failed not equal (non zero)
3d94 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d97 :                 >skip2674
                       >
                        
3d97 : ca                       dex
3d98 : 10dd                     bpl trorc7
                                next_test
3d9a : ad0002          >            lda test_case   ;previous test
3d9d : c920            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3d9f : f003            >        beq skip2677
                       >        trap            ;failed not equal (non zero)
3da1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3da4 :                 >skip2677
                       >
0021 =                 >test_num = test_num + 1
3da4 : a921            >            lda #test_num   ;*** next tests' number
3da6 : 8d0002          >            sta test_case
3da9 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                        ; shifts - abs indexed
3dac : a203                     ldx #3
3dae :                  tasl8
                                set_absx zp1,0
                       >            load_flag 0
3dae : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3db0 : 48              >            pha         ;use stack to load status
3db1 : b519            >            lda zp1,x    ;load to indexed memory
3db3 : 9d0302          >            sta abst,x
3db6 : 28              >            plp
                        
3db7 : 1e0302                   asl abst,x
                                tst_absx rASL,fASL,0
3dba : 08              >            php         ;save flags
3dbb : bd0302          >            lda abst,x
3dbe : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
3dc1 : f003            >        beq skip2682
                       >        trap            ;failed not equal (non zero)
3dc3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3dc6 :                 >skip2682
                       >
3dc6 : 68              >            pla         ;load status
                       >            eor_flag 0
3dc7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3dc9 : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
3dcc : f003            >        beq skip2685
                       >        trap            ;failed not equal (non zero)
3dce : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3dd1 :                 >skip2685
                       >
                        
3dd1 : ca                       dex
3dd2 : 10da                     bpl tasl8
3dd4 : a203                     ldx #3
3dd6 :                  tasl9
                                set_absx zp1,$ff
                       >            load_flag $ff
3dd6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3dd8 : 48              >            pha         ;use stack to load status
3dd9 : b519            >            lda zp1,x    ;load to indexed memory
3ddb : 9d0302          >            sta abst,x
3dde : 28              >            plp
                        
3ddf : 1e0302                   asl abst,x
                                tst_absx rASL,fASL,$ff-fnzc
3de2 : 08              >            php         ;save flags
3de3 : bd0302          >            lda abst,x
3de6 : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
3de9 : f003            >        beq skip2690
                       >        trap            ;failed not equal (non zero)
3deb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3dee :                 >skip2690
                       >
3dee : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3def : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3df1 : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
3df4 : f003            >        beq skip2693
                       >        trap            ;failed not equal (non zero)
3df6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3df9 :                 >skip2693
                       >
                        
3df9 : ca                       dex
3dfa : 10da                     bpl tasl9
                        
3dfc : a203                     ldx #3
3dfe :                  tlsr8
                                set_absx zp1,0
                       >            load_flag 0
3dfe : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3e00 : 48              >            pha         ;use stack to load status
3e01 : b519            >            lda zp1,x    ;load to indexed memory
3e03 : 9d0302          >            sta abst,x
3e06 : 28              >            plp
                        
3e07 : 5e0302                   lsr abst,x
                                tst_absx rLSR,fLSR,0
3e0a : 08              >            php         ;save flags
3e0b : bd0302          >            lda abst,x
3e0e : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
3e11 : f003            >        beq skip2698
                       >        trap            ;failed not equal (non zero)
3e13 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e16 :                 >skip2698
                       >
3e16 : 68              >            pla         ;load status
                       >            eor_flag 0
3e17 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3e19 : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
3e1c : f003            >        beq skip2701
                       >        trap            ;failed not equal (non zero)
3e1e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e21 :                 >skip2701
                       >
                        
3e21 : ca                       dex
3e22 : 10da                     bpl tlsr8
3e24 : a203                     ldx #3
3e26 :                  tlsr9
                                set_absx zp1,$ff
                       >            load_flag $ff
3e26 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3e28 : 48              >            pha         ;use stack to load status
3e29 : b519            >            lda zp1,x    ;load to indexed memory
3e2b : 9d0302          >            sta abst,x
3e2e : 28              >            plp
                        
3e2f : 5e0302                   lsr abst,x
                                tst_absx rLSR,fLSR,$ff-fnzc
3e32 : 08              >            php         ;save flags
3e33 : bd0302          >            lda abst,x
3e36 : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
3e39 : f003            >        beq skip2706
                       >        trap            ;failed not equal (non zero)
3e3b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e3e :                 >skip2706
                       >
3e3e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3e3f : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3e41 : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
3e44 : f003            >        beq skip2709
                       >        trap            ;failed not equal (non zero)
3e46 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e49 :                 >skip2709
                       >
                        
3e49 : ca                       dex
3e4a : 10da                     bpl tlsr9
                        
3e4c : a203                     ldx #3
3e4e :                  trol8
                                set_absx zp1,0
                       >            load_flag 0
3e4e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3e50 : 48              >            pha         ;use stack to load status
3e51 : b519            >            lda zp1,x    ;load to indexed memory
3e53 : 9d0302          >            sta abst,x
3e56 : 28              >            plp
                        
3e57 : 3e0302                   rol abst,x
                                tst_absx rROL,fROL,0
3e5a : 08              >            php         ;save flags
3e5b : bd0302          >            lda abst,x
3e5e : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
3e61 : f003            >        beq skip2714
                       >        trap            ;failed not equal (non zero)
3e63 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e66 :                 >skip2714
                       >
3e66 : 68              >            pla         ;load status
                       >            eor_flag 0
3e67 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3e69 : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
3e6c : f003            >        beq skip2717
                       >        trap            ;failed not equal (non zero)
3e6e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e71 :                 >skip2717
                       >
                        
3e71 : ca                       dex
3e72 : 10da                     bpl trol8
3e74 : a203                     ldx #3
3e76 :                  trol9
                                set_absx zp1,$ff-fc
                       >            load_flag $ff-fc
3e76 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
3e78 : 48              >            pha         ;use stack to load status
3e79 : b519            >            lda zp1,x    ;load to indexed memory
3e7b : 9d0302          >            sta abst,x
3e7e : 28              >            plp
                        
3e7f : 3e0302                   rol abst,x
                                tst_absx rROL,fROL,$ff-fnzc
3e82 : 08              >            php         ;save flags
3e83 : bd0302          >            lda abst,x
3e86 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
3e89 : f003            >        beq skip2722
                       >        trap            ;failed not equal (non zero)
3e8b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e8e :                 >skip2722
                       >
3e8e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3e8f : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3e91 : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
3e94 : f003            >        beq skip2725
                       >        trap            ;failed not equal (non zero)
3e96 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e99 :                 >skip2725
                       >
                        
3e99 : ca                       dex
3e9a : 10da                     bpl trol9
                        
3e9c : a203                     ldx #3
3e9e :                  trolc8
                                set_absx zp1,fc
                       >            load_flag fc
3e9e : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
3ea0 : 48              >            pha         ;use stack to load status
3ea1 : b519            >            lda zp1,x    ;load to indexed memory
3ea3 : 9d0302          >            sta abst,x
3ea6 : 28              >            plp
                        
3ea7 : 3e0302                   rol abst,x
                                tst_absx rROLc,fROLc,0
3eaa : 08              >            php         ;save flags
3eab : bd0302          >            lda abst,x
3eae : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
3eb1 : f003            >        beq skip2730
                       >        trap            ;failed not equal (non zero)
3eb3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3eb6 :                 >skip2730
                       >
3eb6 : 68              >            pla         ;load status
                       >            eor_flag 0
3eb7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3eb9 : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
3ebc : f003            >        beq skip2733
                       >        trap            ;failed not equal (non zero)
3ebe : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ec1 :                 >skip2733
                       >
                        
3ec1 : ca                       dex
3ec2 : 10da                     bpl trolc8
3ec4 : a203                     ldx #3
3ec6 :                  trolc9
                                set_absx zp1,$ff
                       >            load_flag $ff
3ec6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3ec8 : 48              >            pha         ;use stack to load status
3ec9 : b519            >            lda zp1,x    ;load to indexed memory
3ecb : 9d0302          >            sta abst,x
3ece : 28              >            plp
                        
3ecf : 3e0302                   rol abst,x
                                tst_absx rROLc,fROLc,$ff-fnzc
3ed2 : 08              >            php         ;save flags
3ed3 : bd0302          >            lda abst,x
3ed6 : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
3ed9 : f003            >        beq skip2738
                       >        trap            ;failed not equal (non zero)
3edb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ede :                 >skip2738
                       >
3ede : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3edf : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3ee1 : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
3ee4 : f003            >        beq skip2741
                       >        trap            ;failed not equal (non zero)
3ee6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ee9 :                 >skip2741
                       >
                        
3ee9 : ca                       dex
3eea : 10da                     bpl trolc9
                        
3eec : a203                     ldx #3
3eee :                  tror8
                                set_absx zp1,0
                       >            load_flag 0
3eee : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3ef0 : 48              >            pha         ;use stack to load status
3ef1 : b519            >            lda zp1,x    ;load to indexed memory
3ef3 : 9d0302          >            sta abst,x
3ef6 : 28              >            plp
                        
3ef7 : 7e0302                   ror abst,x
                                tst_absx rROR,fROR,0
3efa : 08              >            php         ;save flags
3efb : bd0302          >            lda abst,x
3efe : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
3f01 : f003            >        beq skip2746
                       >        trap            ;failed not equal (non zero)
3f03 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f06 :                 >skip2746
                       >
3f06 : 68              >            pla         ;load status
                       >            eor_flag 0
3f07 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3f09 : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
3f0c : f003            >        beq skip2749
                       >        trap            ;failed not equal (non zero)
3f0e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f11 :                 >skip2749
                       >
                        
3f11 : ca                       dex
3f12 : 10da                     bpl tror8
3f14 : a203                     ldx #3
3f16 :                  tror9
                                set_absx zp1,$ff-fc
                       >            load_flag $ff-fc
3f16 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
3f18 : 48              >            pha         ;use stack to load status
3f19 : b519            >            lda zp1,x    ;load to indexed memory
3f1b : 9d0302          >            sta abst,x
3f1e : 28              >            plp
                        
3f1f : 7e0302                   ror abst,x
                                tst_absx rROR,fROR,$ff-fnzc
3f22 : 08              >            php         ;save flags
3f23 : bd0302          >            lda abst,x
3f26 : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
3f29 : f003            >        beq skip2754
                       >        trap            ;failed not equal (non zero)
3f2b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f2e :                 >skip2754
                       >
3f2e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3f2f : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3f31 : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
3f34 : f003            >        beq skip2757
                       >        trap            ;failed not equal (non zero)
3f36 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f39 :                 >skip2757
                       >
                        
3f39 : ca                       dex
3f3a : 10da                     bpl tror9
                        
3f3c : a203                     ldx #3
3f3e :                  trorc8
                                set_absx zp1,fc
                       >            load_flag fc
3f3e : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
3f40 : 48              >            pha         ;use stack to load status
3f41 : b519            >            lda zp1,x    ;load to indexed memory
3f43 : 9d0302          >            sta abst,x
3f46 : 28              >            plp
                        
3f47 : 7e0302                   ror abst,x
                                tst_absx rRORc,fRORc,0
3f4a : 08              >            php         ;save flags
3f4b : bd0302          >            lda abst,x
3f4e : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
3f51 : f003            >        beq skip2762
                       >        trap            ;failed not equal (non zero)
3f53 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f56 :                 >skip2762
                       >
3f56 : 68              >            pla         ;load status
                       >            eor_flag 0
3f57 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3f59 : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
3f5c : f003            >        beq skip2765
                       >        trap            ;failed not equal (non zero)
3f5e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f61 :                 >skip2765
                       >
                        
3f61 : ca                       dex
3f62 : 10da                     bpl trorc8
3f64 : a203                     ldx #3
3f66 :                  trorc9
                                set_absx zp1,$ff
                       >            load_flag $ff
3f66 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3f68 : 48              >            pha         ;use stack to load status
3f69 : b519            >            lda zp1,x    ;load to indexed memory
3f6b : 9d0302          >            sta abst,x
3f6e : 28              >            plp
                        
3f6f : 7e0302                   ror abst,x
                                tst_absx rRORc,fRORc,$ff-fnzc
3f72 : 08              >            php         ;save flags
3f73 : bd0302          >            lda abst,x
3f76 : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
3f79 : f003            >        beq skip2770
                       >        trap            ;failed not equal (non zero)
3f7b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f7e :                 >skip2770
                       >
3f7e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3f7f : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3f81 : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
3f84 : f003            >        beq skip2773
                       >        trap            ;failed not equal (non zero)
3f86 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f89 :                 >skip2773
                       >
                        
3f89 : ca                       dex
3f8a : 10da                     bpl trorc9
                                next_test
3f8c : ad0002          >            lda test_case   ;previous test
3f8f : c921            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3f91 : f003            >        beq skip2776
                       >        trap            ;failed not equal (non zero)
3f93 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f96 :                 >skip2776
                       >
0022 =                 >test_num = test_num + 1
3f96 : a922            >            lda #test_num   ;*** next tests' number
3f98 : 8d0002          >            sta test_case
3f9b : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing memory increment/decrement - INC DEC all addressing modes
                        ; zeropage
3f9e : a200                     ldx #0
3fa0 : a97e                     lda #$7e
3fa2 : 8512                     sta zpt
3fa4 :                  tinc    
                                set_stat 0
                       >            load_flag 0
3fa4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3fa6 : 48              >            pha         ;use stack to load status
3fa7 : 28              >            plp
                        
3fa8 : e612                     inc zpt
                                tst_z rINC,fINC,0
3faa : 08              >            php         ;save flags
3fab : a512            >            lda zpt
3fad : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
3fb0 : f003            >        beq skip2781
                       >        trap            ;failed not equal (non zero)
3fb2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3fb5 :                 >skip2781
                       >
3fb5 : 68              >            pla         ;load status
                       >            eor_flag 0
3fb6 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3fb8 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
3fbb : f003            >        beq skip2784
                       >        trap            ;failed not equal (non zero)
3fbd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3fc0 :                 >skip2784
                       >
                        
3fc0 : e8                       inx
3fc1 : e002                     cpx #2
3fc3 : d004                     bne tinc1
3fc5 : a9fe                     lda #$fe
3fc7 : 8512                     sta zpt
3fc9 : e005             tinc1   cpx #5
3fcb : d0d7                     bne tinc
3fcd : ca                       dex
3fce : e612                     inc zpt
3fd0 :                  tdec    
                                set_stat 0
                       >            load_flag 0
3fd0 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3fd2 : 48              >            pha         ;use stack to load status
3fd3 : 28              >            plp
                        
3fd4 : c612                     dec zpt
                                tst_z rINC,fINC,0
3fd6 : 08              >            php         ;save flags
3fd7 : a512            >            lda zpt
3fd9 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
3fdc : f003            >        beq skip2789
                       >        trap            ;failed not equal (non zero)
3fde : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3fe1 :                 >skip2789
                       >
3fe1 : 68              >            pla         ;load status
                       >            eor_flag 0
3fe2 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3fe4 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
3fe7 : f003            >        beq skip2792
                       >        trap            ;failed not equal (non zero)
3fe9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3fec :                 >skip2792
                       >
                        
3fec : ca                       dex
3fed : 300a                     bmi tdec1
3fef : e001                     cpx #1
3ff1 : d0dd                     bne tdec
3ff3 : a981                     lda #$81
3ff5 : 8512                     sta zpt
3ff7 : d0d7                     bne tdec
3ff9 :                  tdec1
3ff9 : a200                     ldx #0
3ffb : a97e                     lda #$7e
3ffd : 8512                     sta zpt
3fff :                  tinc10    
                                set_stat $ff
                       >            load_flag $ff
3fff : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4001 : 48              >            pha         ;use stack to load status
4002 : 28              >            plp
                        
4003 : e612                     inc zpt
                                tst_z rINC,fINC,$ff-fnz
4005 : 08              >            php         ;save flags
4006 : a512            >            lda zpt
4008 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
400b : f003            >        beq skip2797
                       >        trap            ;failed not equal (non zero)
400d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4010 :                 >skip2797
                       >
4010 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4011 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4013 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
4016 : f003            >        beq skip2800
                       >        trap            ;failed not equal (non zero)
4018 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
401b :                 >skip2800
                       >
                        
401b : e8                       inx
401c : e002                     cpx #2
401e : d004                     bne tinc11
4020 : a9fe                     lda #$fe
4022 : 8512                     sta zpt
4024 : e005             tinc11  cpx #5
4026 : d0d7                     bne tinc10
4028 : ca                       dex
4029 : e612                     inc zpt
402b :                  tdec10    
                                set_stat $ff
                       >            load_flag $ff
402b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
402d : 48              >            pha         ;use stack to load status
402e : 28              >            plp
                        
402f : c612                     dec zpt
                                tst_z rINC,fINC,$ff-fnz
4031 : 08              >            php         ;save flags
4032 : a512            >            lda zpt
4034 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
4037 : f003            >        beq skip2805
                       >        trap            ;failed not equal (non zero)
4039 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
403c :                 >skip2805
                       >
403c : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
403d : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
403f : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
4042 : f003            >        beq skip2808
                       >        trap            ;failed not equal (non zero)
4044 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4047 :                 >skip2808
                       >
                        
4047 : ca                       dex
4048 : 300a                     bmi tdec11
404a : e001                     cpx #1
404c : d0dd                     bne tdec10
404e : a981                     lda #$81
4050 : 8512                     sta zpt
4052 : d0d7                     bne tdec10
4054 :                  tdec11
                                next_test
4054 : ad0002          >            lda test_case   ;previous test
4057 : c922            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4059 : f003            >        beq skip2811
                       >        trap            ;failed not equal (non zero)
405b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
405e :                 >skip2811
                       >
0023 =                 >test_num = test_num + 1
405e : a923            >            lda #test_num   ;*** next tests' number
4060 : 8d0002          >            sta test_case
4063 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; absolute memory
4066 : a200                     ldx #0
4068 : a97e                     lda #$7e
406a : 8d0302                   sta abst
406d :                  tinc2    
                                set_stat 0
                       >            load_flag 0
406d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
406f : 48              >            pha         ;use stack to load status
4070 : 28              >            plp
                        
4071 : ee0302                   inc abst
                                tst_abs rINC,fINC,0
4074 : 08              >            php         ;save flags
4075 : ad0302          >            lda abst
4078 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
407b : f003            >        beq skip2816
                       >        trap            ;failed not equal (non zero)
407d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4080 :                 >skip2816
                       >
4080 : 68              >            pla         ;load status
                       >            eor_flag 0
4081 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4083 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
4086 : f003            >        beq skip2819
                       >        trap            ;failed not equal (non zero)
4088 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
408b :                 >skip2819
                       >
                        
408b : e8                       inx
408c : e002                     cpx #2
408e : d005                     bne tinc3
4090 : a9fe                     lda #$fe
4092 : 8d0302                   sta abst
4095 : e005             tinc3   cpx #5
4097 : d0d4                     bne tinc2
4099 : ca                       dex
409a : ee0302                   inc abst
409d :                  tdec2    
                                set_stat 0
                       >            load_flag 0
409d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
409f : 48              >            pha         ;use stack to load status
40a0 : 28              >            plp
                        
40a1 : ce0302                   dec abst
                                tst_abs rINC,fINC,0
40a4 : 08              >            php         ;save flags
40a5 : ad0302          >            lda abst
40a8 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
40ab : f003            >        beq skip2824
                       >        trap            ;failed not equal (non zero)
40ad : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
40b0 :                 >skip2824
                       >
40b0 : 68              >            pla         ;load status
                       >            eor_flag 0
40b1 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
40b3 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
40b6 : f003            >        beq skip2827
                       >        trap            ;failed not equal (non zero)
40b8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
40bb :                 >skip2827
                       >
                        
40bb : ca                       dex
40bc : 300b                     bmi tdec3
40be : e001                     cpx #1
40c0 : d0db                     bne tdec2
40c2 : a981                     lda #$81
40c4 : 8d0302                   sta abst
40c7 : d0d4                     bne tdec2
40c9 :                  tdec3
40c9 : a200                     ldx #0
40cb : a97e                     lda #$7e
40cd : 8d0302                   sta abst
40d0 :                  tinc12    
                                set_stat $ff
                       >            load_flag $ff
40d0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
40d2 : 48              >            pha         ;use stack to load status
40d3 : 28              >            plp
                        
40d4 : ee0302                   inc abst
                                tst_abs rINC,fINC,$ff-fnz
40d7 : 08              >            php         ;save flags
40d8 : ad0302          >            lda abst
40db : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
40de : f003            >        beq skip2832
                       >        trap            ;failed not equal (non zero)
40e0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
40e3 :                 >skip2832
                       >
40e3 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
40e4 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
40e6 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
40e9 : f003            >        beq skip2835
                       >        trap            ;failed not equal (non zero)
40eb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
40ee :                 >skip2835
                       >
                        
40ee : e8                       inx
40ef : e002                     cpx #2
40f1 : d005                     bne tinc13
40f3 : a9fe                     lda #$fe
40f5 : 8d0302                   sta abst
40f8 : e005             tinc13   cpx #5
40fa : d0d4                     bne tinc12
40fc : ca                       dex
40fd : ee0302                   inc abst
4100 :                  tdec12    
                                set_stat $ff
                       >            load_flag $ff
4100 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4102 : 48              >            pha         ;use stack to load status
4103 : 28              >            plp
                        
4104 : ce0302                   dec abst
                                tst_abs rINC,fINC,$ff-fnz
4107 : 08              >            php         ;save flags
4108 : ad0302          >            lda abst
410b : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
410e : f003            >        beq skip2840
                       >        trap            ;failed not equal (non zero)
4110 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4113 :                 >skip2840
                       >
4113 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4114 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4116 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
4119 : f003            >        beq skip2843
                       >        trap            ;failed not equal (non zero)
411b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
411e :                 >skip2843
                       >
                        
411e : ca                       dex
411f : 300b                     bmi tdec13
4121 : e001                     cpx #1
4123 : d0db                     bne tdec12
4125 : a981                     lda #$81
4127 : 8d0302                   sta abst
412a : d0d4                     bne tdec12
412c :                  tdec13
                                next_test
412c : ad0002          >            lda test_case   ;previous test
412f : c923            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4131 : f003            >        beq skip2846
                       >        trap            ;failed not equal (non zero)
4133 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4136 :                 >skip2846
                       >
0024 =                 >test_num = test_num + 1
4136 : a924            >            lda #test_num   ;*** next tests' number
4138 : 8d0002          >            sta test_case
413b : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; zeropage indexed
413e : a200                     ldx #0
4140 : a97e                     lda #$7e
4142 : 9512             tinc4   sta zpt,x
                                set_stat 0
                       >            load_flag 0
4144 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4146 : 48              >            pha         ;use stack to load status
4147 : 28              >            plp
                        
4148 : f612                     inc zpt,x
                                tst_zx rINC,fINC,0
414a : 08              >            php         ;save flags
414b : b512            >            lda zpt,x
414d : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
4150 : f003            >        beq skip2851
                       >        trap            ;failed not equal (non zero)
4152 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4155 :                 >skip2851
                       >
4155 : 68              >            pla         ;load status
                       >            eor_flag 0
4156 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4158 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
415b : f003            >        beq skip2854
                       >        trap            ;failed not equal (non zero)
415d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4160 :                 >skip2854
                       >
                        
4160 : b512                     lda zpt,x
4162 : e8                       inx
4163 : e002                     cpx #2
4165 : d002                     bne tinc5
4167 : a9fe                     lda #$fe
4169 : e005             tinc5   cpx #5
416b : d0d5                     bne tinc4
416d : ca                       dex
416e : a902                     lda #2
4170 : 9512             tdec4   sta zpt,x 
                                set_stat 0
                       >            load_flag 0
4172 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4174 : 48              >            pha         ;use stack to load status
4175 : 28              >            plp
                        
4176 : d612                     dec zpt,x
                                tst_zx rINC,fINC,0
4178 : 08              >            php         ;save flags
4179 : b512            >            lda zpt,x
417b : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
417e : f003            >        beq skip2859
                       >        trap            ;failed not equal (non zero)
4180 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4183 :                 >skip2859
                       >
4183 : 68              >            pla         ;load status
                       >            eor_flag 0
4184 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4186 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
4189 : f003            >        beq skip2862
                       >        trap            ;failed not equal (non zero)
418b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
418e :                 >skip2862
                       >
                        
418e : b512                     lda zpt,x
4190 : ca                       dex
4191 : 3008                     bmi tdec5
4193 : e001                     cpx #1
4195 : d0d9                     bne tdec4
4197 : a981                     lda #$81
4199 : d0d5                     bne tdec4
419b :                  tdec5
419b : a200                     ldx #0
419d : a97e                     lda #$7e
419f : 9512             tinc14  sta zpt,x
                                set_stat $ff
                       >            load_flag $ff
41a1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
41a3 : 48              >            pha         ;use stack to load status
41a4 : 28              >            plp
                        
41a5 : f612                     inc zpt,x
                                tst_zx rINC,fINC,$ff-fnz
41a7 : 08              >            php         ;save flags
41a8 : b512            >            lda zpt,x
41aa : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
41ad : f003            >        beq skip2867
                       >        trap            ;failed not equal (non zero)
41af : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
41b2 :                 >skip2867
                       >
41b2 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
41b3 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
41b5 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
41b8 : f003            >        beq skip2870
                       >        trap            ;failed not equal (non zero)
41ba : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
41bd :                 >skip2870
                       >
                        
41bd : b512                     lda zpt,x
41bf : e8                       inx
41c0 : e002                     cpx #2
41c2 : d002                     bne tinc15
41c4 : a9fe                     lda #$fe
41c6 : e005             tinc15  cpx #5
41c8 : d0d5                     bne tinc14
41ca : ca                       dex
41cb : a902                     lda #2
41cd : 9512             tdec14  sta zpt,x 
                                set_stat $ff
                       >            load_flag $ff
41cf : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
41d1 : 48              >            pha         ;use stack to load status
41d2 : 28              >            plp
                        
41d3 : d612                     dec zpt,x
                                tst_zx rINC,fINC,$ff-fnz
41d5 : 08              >            php         ;save flags
41d6 : b512            >            lda zpt,x
41d8 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
41db : f003            >        beq skip2875
                       >        trap            ;failed not equal (non zero)
41dd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
41e0 :                 >skip2875
                       >
41e0 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
41e1 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
41e3 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
41e6 : f003            >        beq skip2878
                       >        trap            ;failed not equal (non zero)
41e8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
41eb :                 >skip2878
                       >
                        
41eb : b512                     lda zpt,x
41ed : ca                       dex
41ee : 3008                     bmi tdec15
41f0 : e001                     cpx #1
41f2 : d0d9                     bne tdec14
41f4 : a981                     lda #$81
41f6 : d0d5                     bne tdec14
41f8 :                  tdec15
                                next_test
41f8 : ad0002          >            lda test_case   ;previous test
41fb : c924            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
41fd : f003            >        beq skip2881
                       >        trap            ;failed not equal (non zero)
41ff : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4202 :                 >skip2881
                       >
0025 =                 >test_num = test_num + 1
4202 : a925            >            lda #test_num   ;*** next tests' number
4204 : 8d0002          >            sta test_case
4207 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; memory indexed
420a : a200                     ldx #0
420c : a97e                     lda #$7e
420e : 9d0302           tinc6   sta abst,x
                                set_stat 0
                       >            load_flag 0
4211 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4213 : 48              >            pha         ;use stack to load status
4214 : 28              >            plp
                        
4215 : fe0302                   inc abst,x
                                tst_absx rINC,fINC,0
4218 : 08              >            php         ;save flags
4219 : bd0302          >            lda abst,x
421c : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
421f : f003            >        beq skip2886
                       >        trap            ;failed not equal (non zero)
4221 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4224 :                 >skip2886
                       >
4224 : 68              >            pla         ;load status
                       >            eor_flag 0
4225 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4227 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
422a : f003            >        beq skip2889
                       >        trap            ;failed not equal (non zero)
422c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
422f :                 >skip2889
                       >
                        
422f : bd0302                   lda abst,x
4232 : e8                       inx
4233 : e002                     cpx #2
4235 : d002                     bne tinc7
4237 : a9fe                     lda #$fe
4239 : e005             tinc7   cpx #5
423b : d0d1                     bne tinc6
423d : ca                       dex
423e : a902                     lda #2
4240 : 9d0302           tdec6   sta abst,x 
                                set_stat 0
                       >            load_flag 0
4243 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4245 : 48              >            pha         ;use stack to load status
4246 : 28              >            plp
                        
4247 : de0302                   dec abst,x
                                tst_absx rINC,fINC,0
424a : 08              >            php         ;save flags
424b : bd0302          >            lda abst,x
424e : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
4251 : f003            >        beq skip2894
                       >        trap            ;failed not equal (non zero)
4253 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4256 :                 >skip2894
                       >
4256 : 68              >            pla         ;load status
                       >            eor_flag 0
4257 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4259 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
425c : f003            >        beq skip2897
                       >        trap            ;failed not equal (non zero)
425e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4261 :                 >skip2897
                       >
                        
4261 : bd0302                   lda abst,x
4264 : ca                       dex
4265 : 3008                     bmi tdec7
4267 : e001                     cpx #1
4269 : d0d5                     bne tdec6
426b : a981                     lda #$81
426d : d0d1                     bne tdec6
426f :                  tdec7
426f : a200                     ldx #0
4271 : a97e                     lda #$7e
4273 : 9d0302           tinc16  sta abst,x
                                set_stat $ff
                       >            load_flag $ff
4276 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4278 : 48              >            pha         ;use stack to load status
4279 : 28              >            plp
                        
427a : fe0302                   inc abst,x
                                tst_absx rINC,fINC,$ff-fnz
427d : 08              >            php         ;save flags
427e : bd0302          >            lda abst,x
4281 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
4284 : f003            >        beq skip2902
                       >        trap            ;failed not equal (non zero)
4286 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4289 :                 >skip2902
                       >
4289 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
428a : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
428c : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
428f : f003            >        beq skip2905
                       >        trap            ;failed not equal (non zero)
4291 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4294 :                 >skip2905
                       >
                        
4294 : bd0302                   lda abst,x
4297 : e8                       inx
4298 : e002                     cpx #2
429a : d002                     bne tinc17
429c : a9fe                     lda #$fe
429e : e005             tinc17  cpx #5
42a0 : d0d1                     bne tinc16
42a2 : ca                       dex
42a3 : a902                     lda #2
42a5 : 9d0302           tdec16  sta abst,x 
                                set_stat $ff
                       >            load_flag $ff
42a8 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
42aa : 48              >            pha         ;use stack to load status
42ab : 28              >            plp
                        
42ac : de0302                   dec abst,x
                                tst_absx rINC,fINC,$ff-fnz
42af : 08              >            php         ;save flags
42b0 : bd0302          >            lda abst,x
42b3 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
42b6 : f003            >        beq skip2910
                       >        trap            ;failed not equal (non zero)
42b8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
42bb :                 >skip2910
                       >
42bb : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
42bc : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
42be : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
42c1 : f003            >        beq skip2913
                       >        trap            ;failed not equal (non zero)
42c3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
42c6 :                 >skip2913
                       >
                        
42c6 : bd0302                   lda abst,x
42c9 : ca                       dex
42ca : 3008                     bmi tdec17
42cc : e001                     cpx #1
42ce : d0d5                     bne tdec16
42d0 : a981                     lda #$81
42d2 : d0d1                     bne tdec16
42d4 :                  tdec17
                                next_test
42d4 : ad0002          >            lda test_case   ;previous test
42d7 : c925            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
42d9 : f003            >        beq skip2916
                       >        trap            ;failed not equal (non zero)
42db : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
42de :                 >skip2916
                       >
0026 =                 >test_num = test_num + 1
42de : a926            >            lda #test_num   ;*** next tests' number
42e0 : 8d0002          >            sta test_case
42e3 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing logical instructions - AND EOR ORA all addressing modes
                        ; AND
42e6 : a203                     ldx #3      ;immediate - self modifying code
42e8 : b522             tand    lda zpAN,x
42ea : 8df542                   sta tandi1
                                set_ax  absANa,0
                       >            load_flag 0
42ed : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
42ef : 48              >            pha         ;use stack to load status
42f0 : bd4b02          >            lda absANa,x    ;precharge accu
42f3 : 28              >            plp
                        
42f5 =                  tandi1  equ *+1     ;target for immediate operand
42f4 : 2963                     and #99
                                tst_ax  absrlo,absflo,0
42f6 : 08              >            php         ;save flags
42f7 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
42fa : f003            >        beq skip2921
                       >        trap            ;failed not equal (non zero)
42fc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
42ff :                 >skip2921
                       >
42ff : 68              >            pla         ;load status
                       >            eor_flag 0
4300 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4302 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4305 : f003            >        beq skip2924
                       >        trap            ;failed not equal (non zero)
4307 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
430a :                 >skip2924
                       >
                        
430a : ca                       dex
430b : 10db                     bpl tand
430d : a203                     ldx #3
430f : b522             tand1   lda zpAN,x
4311 : 8d1c43                   sta tandi2
                                set_ax  absANa,$ff
                       >            load_flag $ff
4314 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4316 : 48              >            pha         ;use stack to load status
4317 : bd4b02          >            lda absANa,x    ;precharge accu
431a : 28              >            plp
                        
431c =                  tandi2  equ *+1     ;target for immediate operand
431b : 2963                     and #99
                                tst_ax  absrlo,absflo,$ff-fnz
431d : 08              >            php         ;save flags
431e : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4321 : f003            >        beq skip2929
                       >        trap            ;failed not equal (non zero)
4323 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4326 :                 >skip2929
                       >
4326 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4327 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4329 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
432c : f003            >        beq skip2932
                       >        trap            ;failed not equal (non zero)
432e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4331 :                 >skip2932
                       >
                        
4331 : ca                       dex
4332 : 10db                     bpl tand1
                        
4334 : a203                     ldx #3      ;zp
4336 : b522             tand2    lda zpAN,x
4338 : 8512                     sta zpt
                                set_ax  absANa,0
                       >            load_flag 0
433a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
433c : 48              >            pha         ;use stack to load status
433d : bd4b02          >            lda absANa,x    ;precharge accu
4340 : 28              >            plp
                        
4341 : 2512                     and zpt
                                tst_ax  absrlo,absflo,0
4343 : 08              >            php         ;save flags
4344 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4347 : f003            >        beq skip2937
                       >        trap            ;failed not equal (non zero)
4349 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
434c :                 >skip2937
                       >
434c : 68              >            pla         ;load status
                       >            eor_flag 0
434d : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
434f : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4352 : f003            >        beq skip2940
                       >        trap            ;failed not equal (non zero)
4354 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4357 :                 >skip2940
                       >
                        
4357 : ca                       dex
4358 : 10dc                     bpl tand2
435a : a203                     ldx #3
435c : b522             tand3   lda zpAN,x
435e : 8512                     sta zpt
                                set_ax  absANa,$ff
                       >            load_flag $ff
4360 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4362 : 48              >            pha         ;use stack to load status
4363 : bd4b02          >            lda absANa,x    ;precharge accu
4366 : 28              >            plp
                        
4367 : 2512                     and zpt
                                tst_ax  absrlo,absflo,$ff-fnz
4369 : 08              >            php         ;save flags
436a : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
436d : f003            >        beq skip2945
                       >        trap            ;failed not equal (non zero)
436f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4372 :                 >skip2945
                       >
4372 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4373 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4375 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4378 : f003            >        beq skip2948
                       >        trap            ;failed not equal (non zero)
437a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
437d :                 >skip2948
                       >
                        
437d : ca                       dex
437e : 10dc                     bpl tand3
                        
4380 : a203                     ldx #3      ;abs
4382 : b522             tand4   lda zpAN,x
4384 : 8d0302                   sta abst
                                set_ax  absANa,0
                       >            load_flag 0
4387 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4389 : 48              >            pha         ;use stack to load status
438a : bd4b02          >            lda absANa,x    ;precharge accu
438d : 28              >            plp
                        
438e : 2d0302                   and abst
                                tst_ax  absrlo,absflo,0
4391 : 08              >            php         ;save flags
4392 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4395 : f003            >        beq skip2953
                       >        trap            ;failed not equal (non zero)
4397 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
439a :                 >skip2953
                       >
439a : 68              >            pla         ;load status
                       >            eor_flag 0
439b : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
439d : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
43a0 : f003            >        beq skip2956
                       >        trap            ;failed not equal (non zero)
43a2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
43a5 :                 >skip2956
                       >
                        
43a5 : ca                       dex
43a6 : 10da                     bpl tand4
43a8 : a203                     ldx #3
43aa : b522             tand5   lda zpAN,x
43ac : 8d0302                   sta abst
                                set_ax  absANa,$ff
                       >            load_flag $ff
43af : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
43b1 : 48              >            pha         ;use stack to load status
43b2 : bd4b02          >            lda absANa,x    ;precharge accu
43b5 : 28              >            plp
                        
43b6 : 2d0302                   and abst
                                tst_ax  absrlo,absflo,$ff-fnz
43b9 : 08              >            php         ;save flags
43ba : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
43bd : f003            >        beq skip2961
                       >        trap            ;failed not equal (non zero)
43bf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
43c2 :                 >skip2961
                       >
43c2 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
43c3 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
43c5 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
43c8 : f003            >        beq skip2964
                       >        trap            ;failed not equal (non zero)
43ca : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
43cd :                 >skip2964
                       >
                        
43cd : ca                       dex
43ce : 1002                     bpl tand6
                        
43d0 : a203                     ldx #3      ;zp,x
43d2 :                  tand6
                                set_ax  absANa,0
                       >            load_flag 0
43d2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
43d4 : 48              >            pha         ;use stack to load status
43d5 : bd4b02          >            lda absANa,x    ;precharge accu
43d8 : 28              >            plp
                        
43d9 : 3522                     and zpAN,x
                                tst_ax  absrlo,absflo,0
43db : 08              >            php         ;save flags
43dc : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
43df : f003            >        beq skip2969
                       >        trap            ;failed not equal (non zero)
43e1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
43e4 :                 >skip2969
                       >
43e4 : 68              >            pla         ;load status
                       >            eor_flag 0
43e5 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
43e7 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
43ea : f003            >        beq skip2972
                       >        trap            ;failed not equal (non zero)
43ec : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
43ef :                 >skip2972
                       >
                        
43ef : ca                       dex
43f0 : 10e0                     bpl tand6
43f2 : a203                     ldx #3
43f4 :                  tand7
                                set_ax  absANa,$ff
                       >            load_flag $ff
43f4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
43f6 : 48              >            pha         ;use stack to load status
43f7 : bd4b02          >            lda absANa,x    ;precharge accu
43fa : 28              >            plp
                        
43fb : 3522                     and zpAN,x
                                tst_ax  absrlo,absflo,$ff-fnz
43fd : 08              >            php         ;save flags
43fe : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4401 : f003            >        beq skip2977
                       >        trap            ;failed not equal (non zero)
4403 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4406 :                 >skip2977
                       >
4406 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4407 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4409 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
440c : f003            >        beq skip2980
                       >        trap            ;failed not equal (non zero)
440e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4411 :                 >skip2980
                       >
                        
4411 : ca                       dex
4412 : 10e0                     bpl tand7
                        
4414 : a203                     ldx #3      ;abs,x
4416 :                  tand8
                                set_ax  absANa,0
                       >            load_flag 0
4416 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4418 : 48              >            pha         ;use stack to load status
4419 : bd4b02          >            lda absANa,x    ;precharge accu
441c : 28              >            plp
                        
441d : 3d3f02                   and absAN,x
                                tst_ax  absrlo,absflo,0
4420 : 08              >            php         ;save flags
4421 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4424 : f003            >        beq skip2985
                       >        trap            ;failed not equal (non zero)
4426 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4429 :                 >skip2985
                       >
4429 : 68              >            pla         ;load status
                       >            eor_flag 0
442a : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
442c : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
442f : f003            >        beq skip2988
                       >        trap            ;failed not equal (non zero)
4431 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4434 :                 >skip2988
                       >
                        
4434 : ca                       dex
4435 : 10df                     bpl tand8
4437 : a203                     ldx #3
4439 :                  tand9
                                set_ax  absANa,$ff
                       >            load_flag $ff
4439 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
443b : 48              >            pha         ;use stack to load status
443c : bd4b02          >            lda absANa,x    ;precharge accu
443f : 28              >            plp
                        
4440 : 3d3f02                   and absAN,x
                                tst_ax  absrlo,absflo,$ff-fnz
4443 : 08              >            php         ;save flags
4444 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4447 : f003            >        beq skip2993
                       >        trap            ;failed not equal (non zero)
4449 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
444c :                 >skip2993
                       >
444c : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
444d : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
444f : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4452 : f003            >        beq skip2996
                       >        trap            ;failed not equal (non zero)
4454 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4457 :                 >skip2996
                       >
                        
4457 : ca                       dex
4458 : 10df                     bpl tand9
                        
445a : a003                     ldy #3      ;abs,y
445c :                  tand10
                                set_ay  absANa,0
                       >            load_flag 0
445c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
445e : 48              >            pha         ;use stack to load status
445f : b94b02          >            lda absANa,y    ;precharge accu
4462 : 28              >            plp
                        
4463 : 393f02                   and absAN,y
                                tst_ay  absrlo,absflo,0
4466 : 08              >            php         ;save flags
4467 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
446a : f003            >        beq skip3001
                       >        trap            ;failed not equal (non zero)
446c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
446f :                 >skip3001
                       >
446f : 68              >            pla         ;load status
                       >            eor_flag 0
4470 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4472 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
4475 : f003            >        beq skip3004
                       >        trap            ;failed not equal (non zero)
4477 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
447a :                 >skip3004
                       >
                        
447a : 88                       dey
447b : 10df                     bpl tand10
447d : a003                     ldy #3
447f :                  tand11
                                set_ay  absANa,$ff
                       >            load_flag $ff
447f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4481 : 48              >            pha         ;use stack to load status
4482 : b94b02          >            lda absANa,y    ;precharge accu
4485 : 28              >            plp
                        
4486 : 393f02                   and absAN,y
                                tst_ay  absrlo,absflo,$ff-fnz
4489 : 08              >            php         ;save flags
448a : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
448d : f003            >        beq skip3009
                       >        trap            ;failed not equal (non zero)
448f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4492 :                 >skip3009
                       >
4492 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4493 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4495 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
4498 : f003            >        beq skip3012
                       >        trap            ;failed not equal (non zero)
449a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
449d :                 >skip3012
                       >
                        
449d : 88                       dey
449e : 10df                     bpl tand11
                        
44a0 : a206                     ldx #6      ;(zp,x)
44a2 : a003                     ldy #3
44a4 :                  tand12
                                set_ay  absANa,0
                       >            load_flag 0
44a4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
44a6 : 48              >            pha         ;use stack to load status
44a7 : b94b02          >            lda absANa,y    ;precharge accu
44aa : 28              >            plp
                        
44ab : 2140                     and (indAN,x)
                                tst_ay  absrlo,absflo,0
44ad : 08              >            php         ;save flags
44ae : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
44b1 : f003            >        beq skip3017
                       >        trap            ;failed not equal (non zero)
44b3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
44b6 :                 >skip3017
                       >
44b6 : 68              >            pla         ;load status
                       >            eor_flag 0
44b7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
44b9 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
44bc : f003            >        beq skip3020
                       >        trap            ;failed not equal (non zero)
44be : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
44c1 :                 >skip3020
                       >
                        
44c1 : ca                       dex
44c2 : ca                       dex
44c3 : 88                       dey
44c4 : 10de                     bpl tand12
44c6 : a206                     ldx #6
44c8 : a003                     ldy #3
44ca :                  tand13
                                set_ay  absANa,$ff
                       >            load_flag $ff
44ca : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
44cc : 48              >            pha         ;use stack to load status
44cd : b94b02          >            lda absANa,y    ;precharge accu
44d0 : 28              >            plp
                        
44d1 : 2140                     and (indAN,x)
                                tst_ay  absrlo,absflo,$ff-fnz
44d3 : 08              >            php         ;save flags
44d4 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
44d7 : f003            >        beq skip3025
                       >        trap            ;failed not equal (non zero)
44d9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
44dc :                 >skip3025
                       >
44dc : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
44dd : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
44df : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
44e2 : f003            >        beq skip3028
                       >        trap            ;failed not equal (non zero)
44e4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
44e7 :                 >skip3028
                       >
                        
44e7 : ca                       dex
44e8 : ca                       dex
44e9 : 88                       dey
44ea : 10de                     bpl tand13
                        
44ec : a003                     ldy #3      ;(zp),y
44ee :                  tand14
                                set_ay  absANa,0
                       >            load_flag 0
44ee : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
44f0 : 48              >            pha         ;use stack to load status
44f1 : b94b02          >            lda absANa,y    ;precharge accu
44f4 : 28              >            plp
                        
44f5 : 3140                     and (indAN),y
                                tst_ay  absrlo,absflo,0
44f7 : 08              >            php         ;save flags
44f8 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
44fb : f003            >        beq skip3033
                       >        trap            ;failed not equal (non zero)
44fd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4500 :                 >skip3033
                       >
4500 : 68              >            pla         ;load status
                       >            eor_flag 0
4501 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4503 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
4506 : f003            >        beq skip3036
                       >        trap            ;failed not equal (non zero)
4508 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
450b :                 >skip3036
                       >
                        
450b : 88                       dey
450c : 10e0                     bpl tand14
450e : a003                     ldy #3
4510 :                  tand15
                                set_ay  absANa,$ff
                       >            load_flag $ff
4510 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4512 : 48              >            pha         ;use stack to load status
4513 : b94b02          >            lda absANa,y    ;precharge accu
4516 : 28              >            plp
                        
4517 : 3140                     and (indAN),y
                                tst_ay  absrlo,absflo,$ff-fnz
4519 : 08              >            php         ;save flags
451a : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
451d : f003            >        beq skip3041
                       >        trap            ;failed not equal (non zero)
451f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4522 :                 >skip3041
                       >
4522 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4523 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4525 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
4528 : f003            >        beq skip3044
                       >        trap            ;failed not equal (non zero)
452a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
452d :                 >skip3044
                       >
                        
452d : 88                       dey
452e : 10e0                     bpl tand15
                                next_test
4530 : ad0002          >            lda test_case   ;previous test
4533 : c926            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4535 : f003            >        beq skip3047
                       >        trap            ;failed not equal (non zero)
4537 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
453a :                 >skip3047
                       >
0027 =                 >test_num = test_num + 1
453a : a927            >            lda #test_num   ;*** next tests' number
453c : 8d0002          >            sta test_case
453f : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; EOR
4542 : a203                     ldx #3      ;immediate - self modifying code
4544 : b526             teor    lda zpEO,x
4546 : 8d5145                   sta teori1
                                set_ax  absEOa,0
                       >            load_flag 0
4549 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
454b : 48              >            pha         ;use stack to load status
454c : bd4f02          >            lda absEOa,x    ;precharge accu
454f : 28              >            plp
                        
4551 =                  teori1  equ *+1     ;target for immediate operand
4550 : 4963                     eor #99
                                tst_ax  absrlo,absflo,0
4552 : 08              >            php         ;save flags
4553 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4556 : f003            >        beq skip3052
                       >        trap            ;failed not equal (non zero)
4558 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
455b :                 >skip3052
                       >
455b : 68              >            pla         ;load status
                       >            eor_flag 0
455c : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
455e : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4561 : f003            >        beq skip3055
                       >        trap            ;failed not equal (non zero)
4563 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4566 :                 >skip3055
                       >
                        
4566 : ca                       dex
4567 : 10db                     bpl teor
4569 : a203                     ldx #3
456b : b526             teor1   lda zpEO,x
456d : 8d7845                   sta teori2
                                set_ax  absEOa,$ff
                       >            load_flag $ff
4570 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4572 : 48              >            pha         ;use stack to load status
4573 : bd4f02          >            lda absEOa,x    ;precharge accu
4576 : 28              >            plp
                        
4578 =                  teori2  equ *+1     ;target for immediate operand
4577 : 4963                     eor #99
                                tst_ax  absrlo,absflo,$ff-fnz
4579 : 08              >            php         ;save flags
457a : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
457d : f003            >        beq skip3060
                       >        trap            ;failed not equal (non zero)
457f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4582 :                 >skip3060
                       >
4582 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4583 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4585 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4588 : f003            >        beq skip3063
                       >        trap            ;failed not equal (non zero)
458a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
458d :                 >skip3063
                       >
                        
458d : ca                       dex
458e : 10db                     bpl teor1
                        
4590 : a203                     ldx #3      ;zp
4592 : b526             teor2    lda zpEO,x
4594 : 8512                     sta zpt
                                set_ax  absEOa,0
                       >            load_flag 0
4596 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4598 : 48              >            pha         ;use stack to load status
4599 : bd4f02          >            lda absEOa,x    ;precharge accu
459c : 28              >            plp
                        
459d : 4512                     eor zpt
                                tst_ax  absrlo,absflo,0
459f : 08              >            php         ;save flags
45a0 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
45a3 : f003            >        beq skip3068
                       >        trap            ;failed not equal (non zero)
45a5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
45a8 :                 >skip3068
                       >
45a8 : 68              >            pla         ;load status
                       >            eor_flag 0
45a9 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
45ab : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
45ae : f003            >        beq skip3071
                       >        trap            ;failed not equal (non zero)
45b0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
45b3 :                 >skip3071
                       >
                        
45b3 : ca                       dex
45b4 : 10dc                     bpl teor2
45b6 : a203                     ldx #3
45b8 : b526             teor3   lda zpEO,x
45ba : 8512                     sta zpt
                                set_ax  absEOa,$ff
                       >            load_flag $ff
45bc : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
45be : 48              >            pha         ;use stack to load status
45bf : bd4f02          >            lda absEOa,x    ;precharge accu
45c2 : 28              >            plp
                        
45c3 : 4512                     eor zpt
                                tst_ax  absrlo,absflo,$ff-fnz
45c5 : 08              >            php         ;save flags
45c6 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
45c9 : f003            >        beq skip3076
                       >        trap            ;failed not equal (non zero)
45cb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
45ce :                 >skip3076
                       >
45ce : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
45cf : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
45d1 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
45d4 : f003            >        beq skip3079
                       >        trap            ;failed not equal (non zero)
45d6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
45d9 :                 >skip3079
                       >
                        
45d9 : ca                       dex
45da : 10dc                     bpl teor3
                        
45dc : a203                     ldx #3      ;abs
45de : b526             teor4   lda zpEO,x
45e0 : 8d0302                   sta abst
                                set_ax  absEOa,0
                       >            load_flag 0
45e3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
45e5 : 48              >            pha         ;use stack to load status
45e6 : bd4f02          >            lda absEOa,x    ;precharge accu
45e9 : 28              >            plp
                        
45ea : 4d0302                   eor abst
                                tst_ax  absrlo,absflo,0
45ed : 08              >            php         ;save flags
45ee : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
45f1 : f003            >        beq skip3084
                       >        trap            ;failed not equal (non zero)
45f3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
45f6 :                 >skip3084
                       >
45f6 : 68              >            pla         ;load status
                       >            eor_flag 0
45f7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
45f9 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
45fc : f003            >        beq skip3087
                       >        trap            ;failed not equal (non zero)
45fe : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4601 :                 >skip3087
                       >
                        
4601 : ca                       dex
4602 : 10da                     bpl teor4
4604 : a203                     ldx #3
4606 : b526             teor5   lda zpEO,x
4608 : 8d0302                   sta abst
                                set_ax  absEOa,$ff
                       >            load_flag $ff
460b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
460d : 48              >            pha         ;use stack to load status
460e : bd4f02          >            lda absEOa,x    ;precharge accu
4611 : 28              >            plp
                        
4612 : 4d0302                   eor abst
                                tst_ax  absrlo,absflo,$ff-fnz
4615 : 08              >            php         ;save flags
4616 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4619 : f003            >        beq skip3092
                       >        trap            ;failed not equal (non zero)
461b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
461e :                 >skip3092
                       >
461e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
461f : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4621 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4624 : f003            >        beq skip3095
                       >        trap            ;failed not equal (non zero)
4626 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4629 :                 >skip3095
                       >
                        
4629 : ca                       dex
462a : 1002                     bpl teor6
                        
462c : a203                     ldx #3      ;zp,x
462e :                  teor6
                                set_ax  absEOa,0
                       >            load_flag 0
462e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4630 : 48              >            pha         ;use stack to load status
4631 : bd4f02          >            lda absEOa,x    ;precharge accu
4634 : 28              >            plp
                        
4635 : 5526                     eor zpEO,x
                                tst_ax  absrlo,absflo,0
4637 : 08              >            php         ;save flags
4638 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
463b : f003            >        beq skip3100
                       >        trap            ;failed not equal (non zero)
463d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4640 :                 >skip3100
                       >
4640 : 68              >            pla         ;load status
                       >            eor_flag 0
4641 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4643 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4646 : f003            >        beq skip3103
                       >        trap            ;failed not equal (non zero)
4648 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
464b :                 >skip3103
                       >
                        
464b : ca                       dex
464c : 10e0                     bpl teor6
464e : a203                     ldx #3
4650 :                  teor7
                                set_ax  absEOa,$ff
                       >            load_flag $ff
4650 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4652 : 48              >            pha         ;use stack to load status
4653 : bd4f02          >            lda absEOa,x    ;precharge accu
4656 : 28              >            plp
                        
4657 : 5526                     eor zpEO,x
                                tst_ax  absrlo,absflo,$ff-fnz
4659 : 08              >            php         ;save flags
465a : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
465d : f003            >        beq skip3108
                       >        trap            ;failed not equal (non zero)
465f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4662 :                 >skip3108
                       >
4662 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4663 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4665 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4668 : f003            >        beq skip3111
                       >        trap            ;failed not equal (non zero)
466a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
466d :                 >skip3111
                       >
                        
466d : ca                       dex
466e : 10e0                     bpl teor7
                        
4670 : a203                     ldx #3      ;abs,x
4672 :                  teor8
                                set_ax  absEOa,0
                       >            load_flag 0
4672 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4674 : 48              >            pha         ;use stack to load status
4675 : bd4f02          >            lda absEOa,x    ;precharge accu
4678 : 28              >            plp
                        
4679 : 5d4302                   eor absEO,x
                                tst_ax  absrlo,absflo,0
467c : 08              >            php         ;save flags
467d : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4680 : f003            >        beq skip3116
                       >        trap            ;failed not equal (non zero)
4682 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4685 :                 >skip3116
                       >
4685 : 68              >            pla         ;load status
                       >            eor_flag 0
4686 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4688 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
468b : f003            >        beq skip3119
                       >        trap            ;failed not equal (non zero)
468d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4690 :                 >skip3119
                       >
                        
4690 : ca                       dex
4691 : 10df                     bpl teor8
4693 : a203                     ldx #3
4695 :                  teor9
                                set_ax  absEOa,$ff
                       >            load_flag $ff
4695 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4697 : 48              >            pha         ;use stack to load status
4698 : bd4f02          >            lda absEOa,x    ;precharge accu
469b : 28              >            plp
                        
469c : 5d4302                   eor absEO,x
                                tst_ax  absrlo,absflo,$ff-fnz
469f : 08              >            php         ;save flags
46a0 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
46a3 : f003            >        beq skip3124
                       >        trap            ;failed not equal (non zero)
46a5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
46a8 :                 >skip3124
                       >
46a8 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
46a9 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
46ab : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
46ae : f003            >        beq skip3127
                       >        trap            ;failed not equal (non zero)
46b0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
46b3 :                 >skip3127
                       >
                        
46b3 : ca                       dex
46b4 : 10df                     bpl teor9
                        
46b6 : a003                     ldy #3      ;abs,y
46b8 :                  teor10
                                set_ay  absEOa,0
                       >            load_flag 0
46b8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
46ba : 48              >            pha         ;use stack to load status
46bb : b94f02          >            lda absEOa,y    ;precharge accu
46be : 28              >            plp
                        
46bf : 594302                   eor absEO,y
                                tst_ay  absrlo,absflo,0
46c2 : 08              >            php         ;save flags
46c3 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
46c6 : f003            >        beq skip3132
                       >        trap            ;failed not equal (non zero)
46c8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
46cb :                 >skip3132
                       >
46cb : 68              >            pla         ;load status
                       >            eor_flag 0
46cc : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
46ce : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
46d1 : f003            >        beq skip3135
                       >        trap            ;failed not equal (non zero)
46d3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
46d6 :                 >skip3135
                       >
                        
46d6 : 88                       dey
46d7 : 10df                     bpl teor10
46d9 : a003                     ldy #3
46db :                  teor11
                                set_ay  absEOa,$ff
                       >            load_flag $ff
46db : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
46dd : 48              >            pha         ;use stack to load status
46de : b94f02          >            lda absEOa,y    ;precharge accu
46e1 : 28              >            plp
                        
46e2 : 594302                   eor absEO,y
                                tst_ay  absrlo,absflo,$ff-fnz
46e5 : 08              >            php         ;save flags
46e6 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
46e9 : f003            >        beq skip3140
                       >        trap            ;failed not equal (non zero)
46eb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
46ee :                 >skip3140
                       >
46ee : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
46ef : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
46f1 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
46f4 : f003            >        beq skip3143
                       >        trap            ;failed not equal (non zero)
46f6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
46f9 :                 >skip3143
                       >
                        
46f9 : 88                       dey
46fa : 10df                     bpl teor11
                        
46fc : a206                     ldx #6      ;(zp,x)
46fe : a003                     ldy #3
4700 :                  teor12
                                set_ay  absEOa,0
                       >            load_flag 0
4700 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4702 : 48              >            pha         ;use stack to load status
4703 : b94f02          >            lda absEOa,y    ;precharge accu
4706 : 28              >            plp
                        
4707 : 4148                     eor (indEO,x)
                                tst_ay  absrlo,absflo,0
4709 : 08              >            php         ;save flags
470a : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
470d : f003            >        beq skip3148
                       >        trap            ;failed not equal (non zero)
470f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4712 :                 >skip3148
                       >
4712 : 68              >            pla         ;load status
                       >            eor_flag 0
4713 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4715 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
4718 : f003            >        beq skip3151
                       >        trap            ;failed not equal (non zero)
471a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
471d :                 >skip3151
                       >
                        
471d : ca                       dex
471e : ca                       dex
471f : 88                       dey
4720 : 10de                     bpl teor12
4722 : a206                     ldx #6
4724 : a003                     ldy #3
4726 :                  teor13
                                set_ay  absEOa,$ff
                       >            load_flag $ff
4726 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4728 : 48              >            pha         ;use stack to load status
4729 : b94f02          >            lda absEOa,y    ;precharge accu
472c : 28              >            plp
                        
472d : 4148                     eor (indEO,x)
                                tst_ay  absrlo,absflo,$ff-fnz
472f : 08              >            php         ;save flags
4730 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4733 : f003            >        beq skip3156
                       >        trap            ;failed not equal (non zero)
4735 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4738 :                 >skip3156
                       >
4738 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4739 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
473b : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
473e : f003            >        beq skip3159
                       >        trap            ;failed not equal (non zero)
4740 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4743 :                 >skip3159
                       >
                        
4743 : ca                       dex
4744 : ca                       dex
4745 : 88                       dey
4746 : 10de                     bpl teor13
                        
4748 : a003                     ldy #3      ;(zp),y
474a :                  teor14
                                set_ay  absEOa,0
                       >            load_flag 0
474a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
474c : 48              >            pha         ;use stack to load status
474d : b94f02          >            lda absEOa,y    ;precharge accu
4750 : 28              >            plp
                        
4751 : 5148                     eor (indEO),y
                                tst_ay  absrlo,absflo,0
4753 : 08              >            php         ;save flags
4754 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4757 : f003            >        beq skip3164
                       >        trap            ;failed not equal (non zero)
4759 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
475c :                 >skip3164
                       >
475c : 68              >            pla         ;load status
                       >            eor_flag 0
475d : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
475f : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
4762 : f003            >        beq skip3167
                       >        trap            ;failed not equal (non zero)
4764 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4767 :                 >skip3167
                       >
                        
4767 : 88                       dey
4768 : 10e0                     bpl teor14
476a : a003                     ldy #3
476c :                  teor15
                                set_ay  absEOa,$ff
                       >            load_flag $ff
476c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
476e : 48              >            pha         ;use stack to load status
476f : b94f02          >            lda absEOa,y    ;precharge accu
4772 : 28              >            plp
                        
4773 : 5148                     eor (indEO),y
                                tst_ay  absrlo,absflo,$ff-fnz
4775 : 08              >            php         ;save flags
4776 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4779 : f003            >        beq skip3172
                       >        trap            ;failed not equal (non zero)
477b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
477e :                 >skip3172
                       >
477e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
477f : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4781 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
4784 : f003            >        beq skip3175
                       >        trap            ;failed not equal (non zero)
4786 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4789 :                 >skip3175
                       >
                        
4789 : 88                       dey
478a : 10e0                     bpl teor15
                                next_test
478c : ad0002          >            lda test_case   ;previous test
478f : c927            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4791 : f003            >        beq skip3178
                       >        trap            ;failed not equal (non zero)
4793 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4796 :                 >skip3178
                       >
0028 =                 >test_num = test_num + 1
4796 : a928            >            lda #test_num   ;*** next tests' number
4798 : 8d0002          >            sta test_case
479b : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; OR
479e : a203                     ldx #3      ;immediate - self modifying code
47a0 : b51e             tora    lda zpOR,x
47a2 : 8dad47                   sta torai1
                                set_ax  absORa,0
                       >            load_flag 0
47a5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
47a7 : 48              >            pha         ;use stack to load status
47a8 : bd4702          >            lda absORa,x    ;precharge accu
47ab : 28              >            plp
                        
47ad =                  torai1  equ *+1     ;target for immediate operand
47ac : 0963                     ora #99
                                tst_ax  absrlo,absflo,0
47ae : 08              >            php         ;save flags
47af : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
47b2 : f003            >        beq skip3183
                       >        trap            ;failed not equal (non zero)
47b4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
47b7 :                 >skip3183
                       >
47b7 : 68              >            pla         ;load status
                       >            eor_flag 0
47b8 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
47ba : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
47bd : f003            >        beq skip3186
                       >        trap            ;failed not equal (non zero)
47bf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
47c2 :                 >skip3186
                       >
                        
47c2 : ca                       dex
47c3 : 10db                     bpl tora
47c5 : a203                     ldx #3
47c7 : b51e             tora1   lda zpOR,x
47c9 : 8dd447                   sta torai2
                                set_ax  absORa,$ff
                       >            load_flag $ff
47cc : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
47ce : 48              >            pha         ;use stack to load status
47cf : bd4702          >            lda absORa,x    ;precharge accu
47d2 : 28              >            plp
                        
47d4 =                  torai2  equ *+1     ;target for immediate operand
47d3 : 0963                     ora #99
                                tst_ax  absrlo,absflo,$ff-fnz
47d5 : 08              >            php         ;save flags
47d6 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
47d9 : f003            >        beq skip3191
                       >        trap            ;failed not equal (non zero)
47db : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
47de :                 >skip3191
                       >
47de : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
47df : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
47e1 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
47e4 : f003            >        beq skip3194
                       >        trap            ;failed not equal (non zero)
47e6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
47e9 :                 >skip3194
                       >
                        
47e9 : ca                       dex
47ea : 10db                     bpl tora1
                        
47ec : a203                     ldx #3      ;zp
47ee : b51e             tora2   lda zpOR,x
47f0 : 8512                     sta zpt
                                set_ax  absORa,0
                       >            load_flag 0
47f2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
47f4 : 48              >            pha         ;use stack to load status
47f5 : bd4702          >            lda absORa,x    ;precharge accu
47f8 : 28              >            plp
                        
47f9 : 0512                     ora zpt
                                tst_ax  absrlo,absflo,0
47fb : 08              >            php         ;save flags
47fc : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
47ff : f003            >        beq skip3199
                       >        trap            ;failed not equal (non zero)
4801 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4804 :                 >skip3199
                       >
4804 : 68              >            pla         ;load status
                       >            eor_flag 0
4805 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4807 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
480a : f003            >        beq skip3202
                       >        trap            ;failed not equal (non zero)
480c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
480f :                 >skip3202
                       >
                        
480f : ca                       dex
4810 : 10dc                     bpl tora2
4812 : a203                     ldx #3
4814 : b51e             tora3   lda zpOR,x
4816 : 8512                     sta zpt
                                set_ax  absORa,$ff
                       >            load_flag $ff
4818 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
481a : 48              >            pha         ;use stack to load status
481b : bd4702          >            lda absORa,x    ;precharge accu
481e : 28              >            plp
                        
481f : 0512                     ora zpt
                                tst_ax  absrlo,absflo,$ff-fnz
4821 : 08              >            php         ;save flags
4822 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4825 : f003            >        beq skip3207
                       >        trap            ;failed not equal (non zero)
4827 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
482a :                 >skip3207
                       >
482a : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
482b : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
482d : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4830 : f003            >        beq skip3210
                       >        trap            ;failed not equal (non zero)
4832 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4835 :                 >skip3210
                       >
                        
4835 : ca                       dex
4836 : 10dc                     bpl tora3
                        
4838 : a203                     ldx #3      ;abs
483a : b51e             tora4   lda zpOR,x
483c : 8d0302                   sta abst
                                set_ax  absORa,0
                       >            load_flag 0
483f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4841 : 48              >            pha         ;use stack to load status
4842 : bd4702          >            lda absORa,x    ;precharge accu
4845 : 28              >            plp
                        
4846 : 0d0302                   ora abst
                                tst_ax  absrlo,absflo,0
4849 : 08              >            php         ;save flags
484a : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
484d : f003            >        beq skip3215
                       >        trap            ;failed not equal (non zero)
484f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4852 :                 >skip3215
                       >
4852 : 68              >            pla         ;load status
                       >            eor_flag 0
4853 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4855 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4858 : f003            >        beq skip3218
                       >        trap            ;failed not equal (non zero)
485a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
485d :                 >skip3218
                       >
                        
485d : ca                       dex
485e : 10da                     bpl tora4
4860 : a203                     ldx #3
4862 : b51e             tora5   lda zpOR,x
4864 : 8d0302                   sta abst
                                set_ax  absORa,$ff
                       >            load_flag $ff
4867 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4869 : 48              >            pha         ;use stack to load status
486a : bd4702          >            lda absORa,x    ;precharge accu
486d : 28              >            plp
                        
486e : 0d0302                   ora abst
                                tst_ax  absrlo,absflo,$ff-fnz
4871 : 08              >            php         ;save flags
4872 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4875 : f003            >        beq skip3223
                       >        trap            ;failed not equal (non zero)
4877 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
487a :                 >skip3223
                       >
487a : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
487b : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
487d : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4880 : f003            >        beq skip3226
                       >        trap            ;failed not equal (non zero)
4882 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4885 :                 >skip3226
                       >
                        
4885 : ca                       dex
4886 : 1002                     bpl tora6
                        
4888 : a203                     ldx #3      ;zp,x
488a :                  tora6
                                set_ax  absORa,0
                       >            load_flag 0
488a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
488c : 48              >            pha         ;use stack to load status
488d : bd4702          >            lda absORa,x    ;precharge accu
4890 : 28              >            plp
                        
4891 : 151e                     ora zpOR,x
                                tst_ax  absrlo,absflo,0
4893 : 08              >            php         ;save flags
4894 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4897 : f003            >        beq skip3231
                       >        trap            ;failed not equal (non zero)
4899 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
489c :                 >skip3231
                       >
489c : 68              >            pla         ;load status
                       >            eor_flag 0
489d : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
489f : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
48a2 : f003            >        beq skip3234
                       >        trap            ;failed not equal (non zero)
48a4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
48a7 :                 >skip3234
                       >
                        
48a7 : ca                       dex
48a8 : 10e0                     bpl tora6
48aa : a203                     ldx #3
48ac :                  tora7
                                set_ax  absORa,$ff
                       >            load_flag $ff
48ac : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
48ae : 48              >            pha         ;use stack to load status
48af : bd4702          >            lda absORa,x    ;precharge accu
48b2 : 28              >            plp
                        
48b3 : 151e                     ora zpOR,x
                                tst_ax  absrlo,absflo,$ff-fnz
48b5 : 08              >            php         ;save flags
48b6 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
48b9 : f003            >        beq skip3239
                       >        trap            ;failed not equal (non zero)
48bb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
48be :                 >skip3239
                       >
48be : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
48bf : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
48c1 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
48c4 : f003            >        beq skip3242
                       >        trap            ;failed not equal (non zero)
48c6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
48c9 :                 >skip3242
                       >
                        
48c9 : ca                       dex
48ca : 10e0                     bpl tora7
                        
48cc : a203                     ldx #3      ;abs,x
48ce :                  tora8
                                set_ax  absORa,0
                       >            load_flag 0
48ce : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
48d0 : 48              >            pha         ;use stack to load status
48d1 : bd4702          >            lda absORa,x    ;precharge accu
48d4 : 28              >            plp
                        
48d5 : 1d3b02                   ora absOR,x
                                tst_ax  absrlo,absflo,0
48d8 : 08              >            php         ;save flags
48d9 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
48dc : f003            >        beq skip3247
                       >        trap            ;failed not equal (non zero)
48de : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
48e1 :                 >skip3247
                       >
48e1 : 68              >            pla         ;load status
                       >            eor_flag 0
48e2 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
48e4 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
48e7 : f003            >        beq skip3250
                       >        trap            ;failed not equal (non zero)
48e9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
48ec :                 >skip3250
                       >
                        
48ec : ca                       dex
48ed : 10df                     bpl tora8
48ef : a203                     ldx #3
48f1 :                  tora9
                                set_ax  absORa,$ff
                       >            load_flag $ff
48f1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
48f3 : 48              >            pha         ;use stack to load status
48f4 : bd4702          >            lda absORa,x    ;precharge accu
48f7 : 28              >            plp
                        
48f8 : 1d3b02                   ora absOR,x
                                tst_ax  absrlo,absflo,$ff-fnz
48fb : 08              >            php         ;save flags
48fc : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
48ff : f003            >        beq skip3255
                       >        trap            ;failed not equal (non zero)
4901 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4904 :                 >skip3255
                       >
4904 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4905 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4907 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
490a : f003            >        beq skip3258
                       >        trap            ;failed not equal (non zero)
490c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
490f :                 >skip3258
                       >
                        
490f : ca                       dex
4910 : 10df                     bpl tora9
                        
4912 : a003                     ldy #3      ;abs,y
4914 :                  tora10
                                set_ay  absORa,0
                       >            load_flag 0
4914 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4916 : 48              >            pha         ;use stack to load status
4917 : b94702          >            lda absORa,y    ;precharge accu
491a : 28              >            plp
                        
491b : 193b02                   ora absOR,y
                                tst_ay  absrlo,absflo,0
491e : 08              >            php         ;save flags
491f : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4922 : f003            >        beq skip3263
                       >        trap            ;failed not equal (non zero)
4924 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4927 :                 >skip3263
                       >
4927 : 68              >            pla         ;load status
                       >            eor_flag 0
4928 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
492a : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
492d : f003            >        beq skip3266
                       >        trap            ;failed not equal (non zero)
492f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4932 :                 >skip3266
                       >
                        
4932 : 88                       dey
4933 : 10df                     bpl tora10
4935 : a003                     ldy #3
4937 :                  tora11
                                set_ay  absORa,$ff
                       >            load_flag $ff
4937 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4939 : 48              >            pha         ;use stack to load status
493a : b94702          >            lda absORa,y    ;precharge accu
493d : 28              >            plp
                        
493e : 193b02                   ora absOR,y
                                tst_ay  absrlo,absflo,$ff-fnz
4941 : 08              >            php         ;save flags
4942 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4945 : f003            >        beq skip3271
                       >        trap            ;failed not equal (non zero)
4947 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
494a :                 >skip3271
                       >
494a : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
494b : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
494d : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
4950 : f003            >        beq skip3274
                       >        trap            ;failed not equal (non zero)
4952 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4955 :                 >skip3274
                       >
                        
4955 : 88                       dey
4956 : 10df                     bpl tora11
                        
4958 : a206                     ldx #6      ;(zp,x)
495a : a003                     ldy #3
495c :                  tora12
                                set_ay  absORa,0
                       >            load_flag 0
495c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
495e : 48              >            pha         ;use stack to load status
495f : b94702          >            lda absORa,y    ;precharge accu
4962 : 28              >            plp
                        
4963 : 0150                     ora (indOR,x)
                                tst_ay  absrlo,absflo,0
4965 : 08              >            php         ;save flags
4966 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4969 : f003            >        beq skip3279
                       >        trap            ;failed not equal (non zero)
496b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
496e :                 >skip3279
                       >
496e : 68              >            pla         ;load status
                       >            eor_flag 0
496f : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4971 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
4974 : f003            >        beq skip3282
                       >        trap            ;failed not equal (non zero)
4976 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4979 :                 >skip3282
                       >
                        
4979 : ca                       dex
497a : ca                       dex
497b : 88                       dey
497c : 10de                     bpl tora12
497e : a206                     ldx #6
4980 : a003                     ldy #3
4982 :                  tora13
                                set_ay  absORa,$ff
                       >            load_flag $ff
4982 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4984 : 48              >            pha         ;use stack to load status
4985 : b94702          >            lda absORa,y    ;precharge accu
4988 : 28              >            plp
                        
4989 : 0150                     ora (indOR,x)
                                tst_ay  absrlo,absflo,$ff-fnz
498b : 08              >            php         ;save flags
498c : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
498f : f003            >        beq skip3287
                       >        trap            ;failed not equal (non zero)
4991 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4994 :                 >skip3287
                       >
4994 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4995 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4997 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
499a : f003            >        beq skip3290
                       >        trap            ;failed not equal (non zero)
499c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
499f :                 >skip3290
                       >
                        
499f : ca                       dex
49a0 : ca                       dex
49a1 : 88                       dey
49a2 : 10de                     bpl tora13
                        
49a4 : a003                     ldy #3      ;(zp),y
49a6 :                  tora14
                                set_ay  absORa,0
                       >            load_flag 0
49a6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
49a8 : 48              >            pha         ;use stack to load status
49a9 : b94702          >            lda absORa,y    ;precharge accu
49ac : 28              >            plp
                        
49ad : 1150                     ora (indOR),y
                                tst_ay  absrlo,absflo,0
49af : 08              >            php         ;save flags
49b0 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
49b3 : f003            >        beq skip3295
                       >        trap            ;failed not equal (non zero)
49b5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
49b8 :                 >skip3295
                       >
49b8 : 68              >            pla         ;load status
                       >            eor_flag 0
49b9 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
49bb : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
49be : f003            >        beq skip3298
                       >        trap            ;failed not equal (non zero)
49c0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
49c3 :                 >skip3298
                       >
                        
49c3 : 88                       dey
49c4 : 10e0                     bpl tora14
49c6 : a003                     ldy #3
49c8 :                  tora15
                                set_ay  absORa,$ff
                       >            load_flag $ff
49c8 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
49ca : 48              >            pha         ;use stack to load status
49cb : b94702          >            lda absORa,y    ;precharge accu
49ce : 28              >            plp
                        
49cf : 1150                     ora (indOR),y
                                tst_ay  absrlo,absflo,$ff-fnz
49d1 : 08              >            php         ;save flags
49d2 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
49d5 : f003            >        beq skip3303
                       >        trap            ;failed not equal (non zero)
49d7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
49da :                 >skip3303
                       >
49da : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
49db : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
49dd : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
49e0 : f003            >        beq skip3306
                       >        trap            ;failed not equal (non zero)
49e2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
49e5 :                 >skip3306
                       >
                        
49e5 : 88                       dey
49e6 : 10e0                     bpl tora15
                            if I_flag = 3
49e8 : 58                       cli
                            endif                
                                next_test
49e9 : ad0002          >            lda test_case   ;previous test
49ec : c928            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
49ee : f003            >        beq skip3309
                       >        trap            ;failed not equal (non zero)
49f0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
49f3 :                 >skip3309
                       >
0029 =                 >test_num = test_num + 1
49f3 : a929            >            lda #test_num   ;*** next tests' number
49f5 : 8d0002          >            sta test_case
49f8 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; full binary add/subtract test
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
49fb : d8                       cld
49fc : a214                     ldx #ad2        ;for indexed test
49fe : a0ff                     ldy #$ff        ;max range
4a00 : a900                     lda #0          ;start with adding zeroes & no carry
4a02 : 8512                     sta adfc        ;carry in - for diag
4a04 : 8513                     sta ad1         ;operand 1 - accumulator
4a06 : 8514                     sta ad2         ;operand 2 - memory or immediate
4a08 : 8d0302                   sta ada2        ;non zp
4a0b : 8515                     sta adrl        ;expected result bits 0-7
4a0d : 8516                     sta adrh        ;expected result bit 8 (carry out)
4a0f : a9ff                     lda #$ff        ;complemented operand 2 for subtract
4a11 : 8518                     sta sb2
4a13 : 8d0402                   sta sba2        ;non zp
4a16 : a902                     lda #2          ;expected Z-flag
4a18 : 8517                     sta adrf
4a1a : 18               tadd    clc             ;test with carry clear
4a1b : 20124d                   jsr chkadd
4a1e : e612                     inc adfc        ;now with carry
4a20 : e615                     inc adrl        ;result +1
4a22 : 08                       php             ;save N & Z from low result
4a23 : 08                       php
4a24 : 68                       pla             ;accu holds expected flags
4a25 : 2982                     and #$82        ;mask N & Z
4a27 : 28                       plp
4a28 : d002                     bne tadd1
4a2a : e616                     inc adrh        ;result bit 8 - carry
4a2c : 0516             tadd1   ora adrh        ;merge C to expected flags
4a2e : 8517                     sta adrf        ;save expected flags except overflow
4a30 : 38                       sec             ;test with carry set
4a31 : 20124d                   jsr chkadd
4a34 : c612                     dec adfc        ;same for operand +1 but no carry
4a36 : e613                     inc ad1
4a38 : d0e0                     bne tadd        ;iterate op1
4a3a : a900                     lda #0          ;preset result to op2 when op1 = 0
4a3c : 8516                     sta adrh
4a3e : ee0302                   inc ada2
4a41 : e614                     inc ad2
4a43 : 08                       php             ;save NZ as operand 2 becomes the new result
4a44 : 68                       pla
4a45 : 2982                     and #$82        ;mask N00000Z0
4a47 : 8517                     sta adrf        ;no need to check carry as we are adding to 0
4a49 : c618                     dec sb2         ;complement subtract operand 2
4a4b : ce0402                   dec sba2
4a4e : a514                     lda ad2         
4a50 : 8515                     sta adrl
4a52 : d0c6                     bne tadd        ;iterate op2
                                next_test
4a54 : ad0002          >            lda test_case   ;previous test
4a57 : c929            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4a59 : f003            >        beq skip3312
                       >        trap            ;failed not equal (non zero)
4a5b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4a5e :                 >skip3312
                       >
002a =                 >test_num = test_num + 1
4a5e : a92a            >            lda #test_num   ;*** next tests' number
4a60 : 8d0002          >            sta test_case
4a63 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, N V Z flags are ignored
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
4a66 : f8                       sed 
4a67 : a214                     ldx #ad2        ;for indexed test
4a69 : a0ff                     ldy #$ff        ;max range
4a6b : a999                     lda #$99        ;start with adding 99 to 99 with carry
4a6d : 8513                     sta ad1         ;operand 1 - accumulator
4a6f : 8514                     sta ad2         ;operand 2 - memory or immediate
4a71 : 8d0302                   sta ada2        ;non zp
4a74 : 8515                     sta adrl        ;expected result bits 0-7
4a76 : a901                     lda #1          ;set carry in & out
4a78 : 8512                     sta adfc        ;carry in - for diag
4a7a : 8516                     sta adrh        ;expected result bit 8 (carry out)
4a7c : a900                     lda #0          ;complemented operand 2 for subtract
4a7e : 8518                     sta sb2
4a80 : 8d0402                   sta sba2        ;non zp
4a83 : 38               tdad    sec             ;test with carry set
4a84 : 20814b                   jsr chkdad
4a87 : c612                     dec adfc        ;now with carry clear
4a89 : a515                     lda adrl        ;decimal adjust result
4a8b : d008                     bne tdad1       ;skip clear carry & preset result 99 (9A-1)
4a8d : c616                     dec adrh
4a8f : a999                     lda #$99
4a91 : 8515                     sta adrl
4a93 : d012                     bne tdad3
4a95 : 290f             tdad1   and #$f         ;lower nibble mask
4a97 : d00c                     bne tdad2       ;no decimal adjust needed
4a99 : c615                     dec adrl        ;decimal adjust (?0-6)
4a9b : c615                     dec adrl
4a9d : c615                     dec adrl
4a9f : c615                     dec adrl
4aa1 : c615                     dec adrl
4aa3 : c615                     dec adrl
4aa5 : c615             tdad2   dec adrl        ;result -1
4aa7 : 18               tdad3   clc             ;test with carry clear
4aa8 : 20814b                   jsr chkdad
4aab : e612                     inc adfc        ;same for operand -1 but with carry
4aad : a513                     lda ad1         ;decimal adjust operand 1
4aaf : f015                     beq tdad5       ;iterate operand 2
4ab1 : 290f                     and #$f         ;lower nibble mask
4ab3 : d00c                     bne tdad4       ;skip decimal adjust
4ab5 : c613                     dec ad1         ;decimal adjust (?0-6)
4ab7 : c613                     dec ad1
4ab9 : c613                     dec ad1
4abb : c613                     dec ad1
4abd : c613                     dec ad1
4abf : c613                     dec ad1
4ac1 : c613             tdad4   dec ad1         ;operand 1 -1
4ac3 : 4c834a                   jmp tdad        ;iterate op1
                        
4ac6 : a999             tdad5   lda #$99        ;precharge op1 max
4ac8 : 8513                     sta ad1
4aca : a514                     lda ad2         ;decimal adjust operand 2
4acc : f030                     beq tdad7       ;end of iteration
4ace : 290f                     and #$f         ;lower nibble mask
4ad0 : d018                     bne tdad6       ;skip decimal adjust
4ad2 : c614                     dec ad2         ;decimal adjust (?0-6)
4ad4 : c614                     dec ad2
4ad6 : c614                     dec ad2
4ad8 : c614                     dec ad2
4ada : c614                     dec ad2
4adc : c614                     dec ad2
4ade : e618                     inc sb2         ;complemented decimal adjust for subtract (?9+6)
4ae0 : e618                     inc sb2
4ae2 : e618                     inc sb2
4ae4 : e618                     inc sb2
4ae6 : e618                     inc sb2
4ae8 : e618                     inc sb2
4aea : c614             tdad6   dec ad2         ;operand 2 -1
4aec : e618                     inc sb2         ;complemented operand for subtract
4aee : a518                     lda sb2
4af0 : 8d0402                   sta sba2        ;copy as non zp operand
4af3 : a514                     lda ad2
4af5 : 8d0302                   sta ada2        ;copy as non zp operand
4af8 : 8515                     sta adrl        ;new result since op1+carry=00+carry +op2=op2
4afa : e616                     inc adrh        ;result carry
4afc : d085                     bne tdad        ;iterate op2
4afe :                  tdad7
                                next_test
4afe : ad0002          >            lda test_case   ;previous test
4b01 : c92a            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4b03 : f003            >        beq skip3315
                       >        trap            ;failed not equal (non zero)
4b05 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4b08 :                 >skip3315
                       >
002b =                 >test_num = test_num + 1
4b08 : a92b            >            lda #test_num   ;*** next tests' number
4b0a : 8d0002          >            sta test_case
4b0d : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; decimal/binary switch test
                        ; tests CLD, SED, PLP, RTI to properly switch between decimal & binary opcode
                        ;   tables
4b10 : 18                       clc
4b11 : d8                       cld
4b12 : 08                       php
4b13 : a955                     lda #$55
4b15 : 6955                     adc #$55
4b17 : c9aa                     cmp #$aa
                                trap_ne         ;expected binary result after cld
4b19 : f003            >        beq skip3317
                       >        trap            ;failed not equal (non zero)
4b1b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4b1e :                 >skip3317
                        
4b1e : 18                       clc
4b1f : f8                       sed
4b20 : 08                       php
4b21 : a955                     lda #$55
4b23 : 6955                     adc #$55
4b25 : c910                     cmp #$10
                                trap_ne         ;expected decimal result after sed
4b27 : f003            >        beq skip3319
                       >        trap            ;failed not equal (non zero)
4b29 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4b2c :                 >skip3319
                        
4b2c : d8                       cld
4b2d : 28                       plp
4b2e : a955                     lda #$55
4b30 : 6955                     adc #$55
4b32 : c910                     cmp #$10
                                trap_ne         ;expected decimal result after plp D=1
4b34 : f003            >        beq skip3321
                       >        trap            ;failed not equal (non zero)
4b36 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4b39 :                 >skip3321
                        
4b39 : 28                       plp
4b3a : a955                     lda #$55
4b3c : 6955                     adc #$55
4b3e : c9aa                     cmp #$aa
                                trap_ne         ;expected binary result after plp D=0
4b40 : f003            >        beq skip3323
                       >        trap            ;failed not equal (non zero)
4b42 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4b45 :                 >skip3323
                        
4b45 : 18                       clc
4b46 : a94b                     lda #hi bin_rti_ret ;emulated interrupt for rti
4b48 : 48                       pha
4b49 : a963                     lda #lo bin_rti_ret
4b4b : 48                       pha
4b4c : 08                       php
4b4d : f8                       sed
4b4e : a94b                     lda #hi dec_rti_ret ;emulated interrupt for rti
4b50 : 48                       pha
4b51 : a957                     lda #lo dec_rti_ret
4b53 : 48                       pha
4b54 : 08                       php
4b55 : d8                       cld
4b56 : 40                       rti
4b57 :                  dec_rti_ret
4b57 : a955                     lda #$55
4b59 : 6955                     adc #$55
4b5b : c910                     cmp #$10
                                trap_ne         ;expected decimal result after rti D=1
4b5d : f003            >        beq skip3325
                       >        trap            ;failed not equal (non zero)
4b5f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4b62 :                 >skip3325
                        
4b62 : 40                       rti
4b63 :                  bin_rti_ret        
4b63 : a955                     lda #$55
4b65 : 6955                     adc #$55
4b67 : c9aa                     cmp #$aa
                                trap_ne         ;expected binary result after rti D=0
4b69 : f003            >        beq skip3327
                       >        trap            ;failed not equal (non zero)
4b6b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4b6e :                 >skip3327
                        
                        
4b6e : ad0002                   lda test_case
4b71 : c92b                     cmp #test_num
                                trap_ne         ;previous test is out of sequence
4b73 : f003            >        beq skip3329
                       >        trap            ;failed not equal (non zero)
4b75 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4b78 :                 >skip3329
                        
4b78 : a9f0                     lda #$f0        ;mark opcode testing complete
4b7a : 8d0002                   sta test_case
                                
                        ; final RAM integrity test
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                                check_ram
                       >            ;RAM check disabled - RAM size not set
                        
                        ; *** DEBUG INFO ***
                        ; to debug checksum errors uncomment check_ram in the next_test macro to 
                        ; narrow down the responsible opcode.
                        ; may give false errors when monitor, OS or other background activity is
                        ; allowed during previous tests.
                        
                        
                        ; S U C C E S S ************************************************       
                        ; -------------       
                                success         ;if you get here everything went well
4b7d : db              >        db $db
                       >        ;jsr report_success
                        
                        ; -------------       
                        ; S U C C E S S ************************************************ 
4b7e : 4c0010                   jmp start       ;run again      
                        
                        ; core subroutine of the decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, N V Z flags are ignored
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
4b81 :                  chkdad
                        ; decimal ADC / SBC zp
4b81 : 08                       php             ;save carry for subtract
4b82 : a513                     lda ad1
4b84 : 6514                     adc ad2         ;perform add
4b86 : 08                       php          
4b87 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4b89 : f003            >        beq skip3333
                       >        trap            ;failed not equal (non zero)
4b8b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4b8e :                 >skip3333
                        
4b8e : 68                       pla             ;check flags
4b8f : 2901                     and #1          ;mask carry
4b91 : c516                     cmp adrh
                                trap_ne         ;bad carry
4b93 : f003            >        beq skip3335
                       >        trap            ;failed not equal (non zero)
4b95 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4b98 :                 >skip3335
                        
4b98 : 28                       plp
4b99 : 08                       php             ;save carry for next add
4b9a : a513                     lda ad1
4b9c : e518                     sbc sb2         ;perform subtract
4b9e : 08                       php          
4b9f : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4ba1 : f003            >        beq skip3337
                       >        trap            ;failed not equal (non zero)
4ba3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4ba6 :                 >skip3337
                        
4ba6 : 68                       pla             ;check flags
4ba7 : 2901                     and #1          ;mask carry
4ba9 : c516                     cmp adrh
                                trap_ne         ;bad flags
4bab : f003            >        beq skip3339
                       >        trap            ;failed not equal (non zero)
4bad : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4bb0 :                 >skip3339
                        
4bb0 : 28                       plp
                        ; decimal ADC / SBC abs
4bb1 : 08                       php             ;save carry for subtract
4bb2 : a513                     lda ad1
4bb4 : 6d0302                   adc ada2        ;perform add
4bb7 : 08                       php          
4bb8 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4bba : f003            >        beq skip3341
                       >        trap            ;failed not equal (non zero)
4bbc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4bbf :                 >skip3341
                        
4bbf : 68                       pla             ;check flags
4bc0 : 2901                     and #1          ;mask carry
4bc2 : c516                     cmp adrh
                                trap_ne         ;bad carry
4bc4 : f003            >        beq skip3343
                       >        trap            ;failed not equal (non zero)
4bc6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4bc9 :                 >skip3343
                        
4bc9 : 28                       plp
4bca : 08                       php             ;save carry for next add
4bcb : a513                     lda ad1
4bcd : ed0402                   sbc sba2        ;perform subtract
4bd0 : 08                       php          
4bd1 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4bd3 : f003            >        beq skip3345
                       >        trap            ;failed not equal (non zero)
4bd5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4bd8 :                 >skip3345
                        
4bd8 : 68                       pla             ;check flags
4bd9 : 2901                     and #1          ;mask carry
4bdb : c516                     cmp adrh
                                trap_ne         ;bad carry
4bdd : f003            >        beq skip3347
                       >        trap            ;failed not equal (non zero)
4bdf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4be2 :                 >skip3347
                        
4be2 : 28                       plp
                        ; decimal ADC / SBC #
4be3 : 08                       php             ;save carry for subtract
4be4 : a514                     lda ad2
4be6 : 8dec4b                   sta chkdadi     ;self modify immediate
4be9 : a513                     lda ad1
4bec =                  chkdadi = * + 1         ;operand of the immediate ADC
4beb : 6900                     adc #0          ;perform add
4bed : 08                       php          
4bee : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4bf0 : f003            >        beq skip3349
                       >        trap            ;failed not equal (non zero)
4bf2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4bf5 :                 >skip3349
                        
4bf5 : 68                       pla             ;check flags
4bf6 : 2901                     and #1          ;mask carry
4bf8 : c516                     cmp adrh
                                trap_ne         ;bad carry
4bfa : f003            >        beq skip3351
                       >        trap            ;failed not equal (non zero)
4bfc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4bff :                 >skip3351
                        
4bff : 28                       plp
4c00 : 08                       php             ;save carry for next add
4c01 : a518                     lda sb2
4c03 : 8d094c                   sta chkdsbi     ;self modify immediate
4c06 : a513                     lda ad1
4c09 =                  chkdsbi = * + 1         ;operand of the immediate SBC
4c08 : e900                     sbc #0          ;perform subtract
4c0a : 08                       php          
4c0b : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4c0d : f003            >        beq skip3353
                       >        trap            ;failed not equal (non zero)
4c0f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4c12 :                 >skip3353
                        
4c12 : 68                       pla             ;check flags
4c13 : 2901                     and #1          ;mask carry
4c15 : c516                     cmp adrh
                                trap_ne         ;bad carry
4c17 : f003            >        beq skip3355
                       >        trap            ;failed not equal (non zero)
4c19 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4c1c :                 >skip3355
                        
4c1c : 28                       plp
                        ; decimal ADC / SBC zp,x
4c1d : 08                       php             ;save carry for subtract
4c1e : a513                     lda ad1
4c20 : 7500                     adc 0,x         ;perform add
4c22 : 08                       php          
4c23 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4c25 : f003            >        beq skip3357
                       >        trap            ;failed not equal (non zero)
4c27 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4c2a :                 >skip3357
                        
4c2a : 68                       pla             ;check flags
4c2b : 2901                     and #1          ;mask carry
4c2d : c516                     cmp adrh
                                trap_ne         ;bad carry
4c2f : f003            >        beq skip3359
                       >        trap            ;failed not equal (non zero)
4c31 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4c34 :                 >skip3359
                        
4c34 : 28                       plp
4c35 : 08                       php             ;save carry for next add
4c36 : a513                     lda ad1
4c38 : f504                     sbc sb2-ad2,x   ;perform subtract
4c3a : 08                       php          
4c3b : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4c3d : f003            >        beq skip3361
                       >        trap            ;failed not equal (non zero)
4c3f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4c42 :                 >skip3361
                        
4c42 : 68                       pla             ;check flags
4c43 : 2901                     and #1          ;mask carry
4c45 : c516                     cmp adrh
                                trap_ne         ;bad carry
4c47 : f003            >        beq skip3363
                       >        trap            ;failed not equal (non zero)
4c49 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4c4c :                 >skip3363
                        
4c4c : 28                       plp
                        ; decimal ADC / SBC abs,x
4c4d : 08                       php             ;save carry for subtract
4c4e : a513                     lda ad1
4c50 : 7def01                   adc ada2-ad2,x  ;perform add
4c53 : 08                       php          
4c54 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4c56 : f003            >        beq skip3365
                       >        trap            ;failed not equal (non zero)
4c58 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4c5b :                 >skip3365
                        
4c5b : 68                       pla             ;check flags
4c5c : 2901                     and #1          ;mask carry
4c5e : c516                     cmp adrh
                                trap_ne         ;bad carry
4c60 : f003            >        beq skip3367
                       >        trap            ;failed not equal (non zero)
4c62 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4c65 :                 >skip3367
                        
4c65 : 28                       plp
4c66 : 08                       php             ;save carry for next add
4c67 : a513                     lda ad1
4c69 : fdf001                   sbc sba2-ad2,x  ;perform subtract
4c6c : 08                       php          
4c6d : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4c6f : f003            >        beq skip3369
                       >        trap            ;failed not equal (non zero)
4c71 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4c74 :                 >skip3369
                        
4c74 : 68                       pla             ;check flags
4c75 : 2901                     and #1          ;mask carry
4c77 : c516                     cmp adrh
                                trap_ne         ;bad carry
4c79 : f003            >        beq skip3371
                       >        trap            ;failed not equal (non zero)
4c7b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4c7e :                 >skip3371
                        
4c7e : 28                       plp
                        ; decimal ADC / SBC abs,y
4c7f : 08                       php             ;save carry for subtract
4c80 : a513                     lda ad1
4c82 : 790401                   adc ada2-$ff,y  ;perform add
4c85 : 08                       php          
4c86 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4c88 : f003            >        beq skip3373
                       >        trap            ;failed not equal (non zero)
4c8a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4c8d :                 >skip3373
                        
4c8d : 68                       pla             ;check flags
4c8e : 2901                     and #1          ;mask carry
4c90 : c516                     cmp adrh
                                trap_ne         ;bad carry
4c92 : f003            >        beq skip3375
                       >        trap            ;failed not equal (non zero)
4c94 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4c97 :                 >skip3375
                        
4c97 : 28                       plp
4c98 : 08                       php             ;save carry for next add
4c99 : a513                     lda ad1
4c9b : f90501                   sbc sba2-$ff,y  ;perform subtract
4c9e : 08                       php          
4c9f : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4ca1 : f003            >        beq skip3377
                       >        trap            ;failed not equal (non zero)
4ca3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4ca6 :                 >skip3377
                        
4ca6 : 68                       pla             ;check flags
4ca7 : 2901                     and #1          ;mask carry
4ca9 : c516                     cmp adrh
                                trap_ne         ;bad carry
4cab : f003            >        beq skip3379
                       >        trap            ;failed not equal (non zero)
4cad : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4cb0 :                 >skip3379
                        
4cb0 : 28                       plp
                        ; decimal ADC / SBC (zp,x)
4cb1 : 08                       php             ;save carry for subtract
4cb2 : a513                     lda ad1
4cb4 : 6144                     adc (lo adi2-ad2,x) ;perform add
4cb6 : 08                       php          
4cb7 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4cb9 : f003            >        beq skip3381
                       >        trap            ;failed not equal (non zero)
4cbb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4cbe :                 >skip3381
                        
4cbe : 68                       pla             ;check flags
4cbf : 2901                     and #1          ;mask carry
4cc1 : c516                     cmp adrh
                                trap_ne         ;bad carry
4cc3 : f003            >        beq skip3383
                       >        trap            ;failed not equal (non zero)
4cc5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4cc8 :                 >skip3383
                        
4cc8 : 28                       plp
4cc9 : 08                       php             ;save carry for next add
4cca : a513                     lda ad1
4ccc : e146                     sbc (lo sbi2-ad2,x) ;perform subtract
4cce : 08                       php          
4ccf : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4cd1 : f003            >        beq skip3385
                       >        trap            ;failed not equal (non zero)
4cd3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4cd6 :                 >skip3385
                        
4cd6 : 68                       pla             ;check flags
4cd7 : 2901                     and #1          ;mask carry
4cd9 : c516                     cmp adrh
                                trap_ne         ;bad carry
4cdb : f003            >        beq skip3387
                       >        trap            ;failed not equal (non zero)
4cdd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4ce0 :                 >skip3387
                        
4ce0 : 28                       plp
                        ; decimal ADC / SBC (abs),y
4ce1 : 08                       php             ;save carry for subtract
4ce2 : a513                     lda ad1
4ce4 : 715c                     adc (adiy2),y   ;perform add
4ce6 : 08                       php          
4ce7 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4ce9 : f003            >        beq skip3389
                       >        trap            ;failed not equal (non zero)
4ceb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4cee :                 >skip3389
                        
4cee : 68                       pla             ;check flags
4cef : 2901                     and #1          ;mask carry
4cf1 : c516                     cmp adrh
                                trap_ne         ;bad carry
4cf3 : f003            >        beq skip3391
                       >        trap            ;failed not equal (non zero)
4cf5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4cf8 :                 >skip3391
                        
4cf8 : 28                       plp
4cf9 : 08                       php             ;save carry for next add
4cfa : a513                     lda ad1
4cfc : f15e                     sbc (sbiy2),y   ;perform subtract
4cfe : 08                       php          
4cff : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4d01 : f003            >        beq skip3393
                       >        trap            ;failed not equal (non zero)
4d03 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4d06 :                 >skip3393
                        
4d06 : 68                       pla             ;check flags
4d07 : 2901                     and #1          ;mask carry
4d09 : c516                     cmp adrh
                                trap_ne         ;bad carry
4d0b : f003            >        beq skip3395
                       >        trap            ;failed not equal (non zero)
4d0d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4d10 :                 >skip3395
                        
4d10 : 28                       plp
4d11 : 60                       rts
                        
                        ; core subroutine of the full binary add/subtract test
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
4d12 : a517             chkadd  lda adrf        ;add V-flag if overflow
4d14 : 2983                     and #$83        ;keep N-----ZC / clear V
4d16 : 48                       pha
4d17 : a513                     lda ad1         ;test sign unequal between operands
4d19 : 4514                     eor ad2
4d1b : 300a                     bmi ckad1       ;no overflow possible - operands have different sign
4d1d : a513                     lda ad1         ;test sign equal between operands and result
4d1f : 4515                     eor adrl
4d21 : 1004                     bpl ckad1       ;no overflow occured - operand and result have same sign
4d23 : 68                       pla
4d24 : 0940                     ora #$40        ;set V
4d26 : 48                       pha
4d27 : 68               ckad1   pla
4d28 : 8517                     sta adrf        ;save expected flags
                        ; binary ADC / SBC zp
4d2a : 08                       php             ;save carry for subtract
4d2b : a513                     lda ad1
4d2d : 6514                     adc ad2         ;perform add
4d2f : 08                       php          
4d30 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4d32 : f003            >        beq skip3397
                       >        trap            ;failed not equal (non zero)
4d34 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4d37 :                 >skip3397
                        
4d37 : 68                       pla             ;check flags
4d38 : 29c3                     and #$c3        ;mask NV----ZC
4d3a : c517                     cmp adrf
                                trap_ne         ;bad flags
4d3c : f003            >        beq skip3399
                       >        trap            ;failed not equal (non zero)
4d3e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4d41 :                 >skip3399
                        
4d41 : 28                       plp
4d42 : 08                       php             ;save carry for next add
4d43 : a513                     lda ad1
4d45 : e518                     sbc sb2         ;perform subtract
4d47 : 08                       php          
4d48 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4d4a : f003            >        beq skip3401
                       >        trap            ;failed not equal (non zero)
4d4c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4d4f :                 >skip3401
                        
4d4f : 68                       pla             ;check flags
4d50 : 29c3                     and #$c3        ;mask NV----ZC
4d52 : c517                     cmp adrf
                                trap_ne         ;bad flags
4d54 : f003            >        beq skip3403
                       >        trap            ;failed not equal (non zero)
4d56 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4d59 :                 >skip3403
                        
4d59 : 28                       plp
                        ; binary ADC / SBC abs
4d5a : 08                       php             ;save carry for subtract
4d5b : a513                     lda ad1
4d5d : 6d0302                   adc ada2        ;perform add
4d60 : 08                       php          
4d61 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4d63 : f003            >        beq skip3405
                       >        trap            ;failed not equal (non zero)
4d65 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4d68 :                 >skip3405
                        
4d68 : 68                       pla             ;check flags
4d69 : 29c3                     and #$c3        ;mask NV----ZC
4d6b : c517                     cmp adrf
                                trap_ne         ;bad flags
4d6d : f003            >        beq skip3407
                       >        trap            ;failed not equal (non zero)
4d6f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4d72 :                 >skip3407
                        
4d72 : 28                       plp
4d73 : 08                       php             ;save carry for next add
4d74 : a513                     lda ad1
4d76 : ed0402                   sbc sba2        ;perform subtract
4d79 : 08                       php          
4d7a : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4d7c : f003            >        beq skip3409
                       >        trap            ;failed not equal (non zero)
4d7e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4d81 :                 >skip3409
                        
4d81 : 68                       pla             ;check flags
4d82 : 29c3                     and #$c3        ;mask NV----ZC
4d84 : c517                     cmp adrf
                                trap_ne         ;bad flags
4d86 : f003            >        beq skip3411
                       >        trap            ;failed not equal (non zero)
4d88 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4d8b :                 >skip3411
                        
4d8b : 28                       plp
                        ; binary ADC / SBC #
4d8c : 08                       php             ;save carry for subtract
4d8d : a514                     lda ad2
4d8f : 8d954d                   sta chkadi      ;self modify immediate
4d92 : a513                     lda ad1
4d95 =                  chkadi  = * + 1         ;operand of the immediate ADC
4d94 : 6900                     adc #0          ;perform add
4d96 : 08                       php          
4d97 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4d99 : f003            >        beq skip3413
                       >        trap            ;failed not equal (non zero)
4d9b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4d9e :                 >skip3413
                        
4d9e : 68                       pla             ;check flags
4d9f : 29c3                     and #$c3        ;mask NV----ZC
4da1 : c517                     cmp adrf
                                trap_ne         ;bad flags
4da3 : f003            >        beq skip3415
                       >        trap            ;failed not equal (non zero)
4da5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4da8 :                 >skip3415
                        
4da8 : 28                       plp
4da9 : 08                       php             ;save carry for next add
4daa : a518                     lda sb2
4dac : 8db24d                   sta chksbi      ;self modify immediate
4daf : a513                     lda ad1
4db2 =                  chksbi  = * + 1         ;operand of the immediate SBC
4db1 : e900                     sbc #0          ;perform subtract
4db3 : 08                       php          
4db4 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4db6 : f003            >        beq skip3417
                       >        trap            ;failed not equal (non zero)
4db8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4dbb :                 >skip3417
                        
4dbb : 68                       pla             ;check flags
4dbc : 29c3                     and #$c3        ;mask NV----ZC
4dbe : c517                     cmp adrf
                                trap_ne         ;bad flags
4dc0 : f003            >        beq skip3419
                       >        trap            ;failed not equal (non zero)
4dc2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4dc5 :                 >skip3419
                        
4dc5 : 28                       plp
                        ; binary ADC / SBC zp,x
4dc6 : 08                       php             ;save carry for subtract
4dc7 : a513                     lda ad1
4dc9 : 7500                     adc 0,x         ;perform add
4dcb : 08                       php          
4dcc : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4dce : f003            >        beq skip3421
                       >        trap            ;failed not equal (non zero)
4dd0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4dd3 :                 >skip3421
                        
4dd3 : 68                       pla             ;check flags
4dd4 : 29c3                     and #$c3        ;mask NV----ZC
4dd6 : c517                     cmp adrf
                                trap_ne         ;bad flags
4dd8 : f003            >        beq skip3423
                       >        trap            ;failed not equal (non zero)
4dda : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4ddd :                 >skip3423
                        
4ddd : 28                       plp
4dde : 08                       php             ;save carry for next add
4ddf : a513                     lda ad1
4de1 : f504                     sbc sb2-ad2,x   ;perform subtract
4de3 : 08                       php          
4de4 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4de6 : f003            >        beq skip3425
                       >        trap            ;failed not equal (non zero)
4de8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4deb :                 >skip3425
                        
4deb : 68                       pla             ;check flags
4dec : 29c3                     and #$c3        ;mask NV----ZC
4dee : c517                     cmp adrf
                                trap_ne         ;bad flags
4df0 : f003            >        beq skip3427
                       >        trap            ;failed not equal (non zero)
4df2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4df5 :                 >skip3427
                        
4df5 : 28                       plp
                        ; binary ADC / SBC abs,x
4df6 : 08                       php             ;save carry for subtract
4df7 : a513                     lda ad1
4df9 : 7def01                   adc ada2-ad2,x  ;perform add
4dfc : 08                       php          
4dfd : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4dff : f003            >        beq skip3429
                       >        trap            ;failed not equal (non zero)
4e01 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4e04 :                 >skip3429
                        
4e04 : 68                       pla             ;check flags
4e05 : 29c3                     and #$c3        ;mask NV----ZC
4e07 : c517                     cmp adrf
                                trap_ne         ;bad flags
4e09 : f003            >        beq skip3431
                       >        trap            ;failed not equal (non zero)
4e0b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4e0e :                 >skip3431
                        
4e0e : 28                       plp
4e0f : 08                       php             ;save carry for next add
4e10 : a513                     lda ad1
4e12 : fdf001                   sbc sba2-ad2,x  ;perform subtract
4e15 : 08                       php          
4e16 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4e18 : f003            >        beq skip3433
                       >        trap            ;failed not equal (non zero)
4e1a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4e1d :                 >skip3433
                        
4e1d : 68                       pla             ;check flags
4e1e : 29c3                     and #$c3        ;mask NV----ZC
4e20 : c517                     cmp adrf
                                trap_ne         ;bad flags
4e22 : f003            >        beq skip3435
                       >        trap            ;failed not equal (non zero)
4e24 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4e27 :                 >skip3435
                        
4e27 : 28                       plp
                        ; binary ADC / SBC abs,y
4e28 : 08                       php             ;save carry for subtract
4e29 : a513                     lda ad1
4e2b : 790401                   adc ada2-$ff,y  ;perform add
4e2e : 08                       php          
4e2f : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4e31 : f003            >        beq skip3437
                       >        trap            ;failed not equal (non zero)
4e33 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4e36 :                 >skip3437
                        
4e36 : 68                       pla             ;check flags
4e37 : 29c3                     and #$c3        ;mask NV----ZC
4e39 : c517                     cmp adrf
                                trap_ne         ;bad flags
4e3b : f003            >        beq skip3439
                       >        trap            ;failed not equal (non zero)
4e3d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4e40 :                 >skip3439
                        
4e40 : 28                       plp
4e41 : 08                       php             ;save carry for next add
4e42 : a513                     lda ad1
4e44 : f90501                   sbc sba2-$ff,y  ;perform subtract
4e47 : 08                       php          
4e48 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4e4a : f003            >        beq skip3441
                       >        trap            ;failed not equal (non zero)
4e4c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4e4f :                 >skip3441
                        
4e4f : 68                       pla             ;check flags
4e50 : 29c3                     and #$c3        ;mask NV----ZC
4e52 : c517                     cmp adrf
                                trap_ne         ;bad flags
4e54 : f003            >        beq skip3443
                       >        trap            ;failed not equal (non zero)
4e56 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4e59 :                 >skip3443
                        
4e59 : 28                       plp
                        ; binary ADC / SBC (zp,x)
4e5a : 08                       php             ;save carry for subtract
4e5b : a513                     lda ad1
4e5d : 6144                     adc (lo adi2-ad2,x) ;perform add
4e5f : 08                       php          
4e60 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4e62 : f003            >        beq skip3445
                       >        trap            ;failed not equal (non zero)
4e64 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4e67 :                 >skip3445
                        
4e67 : 68                       pla             ;check flags
4e68 : 29c3                     and #$c3        ;mask NV----ZC
4e6a : c517                     cmp adrf
                                trap_ne         ;bad flags
4e6c : f003            >        beq skip3447
                       >        trap            ;failed not equal (non zero)
4e6e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4e71 :                 >skip3447
                        
4e71 : 28                       plp
4e72 : 08                       php             ;save carry for next add
4e73 : a513                     lda ad1
4e75 : e146                     sbc (lo sbi2-ad2,x) ;perform subtract
4e77 : 08                       php          
4e78 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4e7a : f003            >        beq skip3449
                       >        trap            ;failed not equal (non zero)
4e7c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4e7f :                 >skip3449
                        
4e7f : 68                       pla             ;check flags
4e80 : 29c3                     and #$c3        ;mask NV----ZC
4e82 : c517                     cmp adrf
                                trap_ne         ;bad flags
4e84 : f003            >        beq skip3451
                       >        trap            ;failed not equal (non zero)
4e86 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4e89 :                 >skip3451
                        
4e89 : 28                       plp
                        ; binary ADC / SBC (abs),y
4e8a : 08                       php             ;save carry for subtract
4e8b : a513                     lda ad1
4e8d : 715c                     adc (adiy2),y   ;perform add
4e8f : 08                       php          
4e90 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4e92 : f003            >        beq skip3453
                       >        trap            ;failed not equal (non zero)
4e94 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4e97 :                 >skip3453
                        
4e97 : 68                       pla             ;check flags
4e98 : 29c3                     and #$c3        ;mask NV----ZC
4e9a : c517                     cmp adrf
                                trap_ne         ;bad flags
4e9c : f003            >        beq skip3455
                       >        trap            ;failed not equal (non zero)
4e9e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4ea1 :                 >skip3455
                        
4ea1 : 28                       plp
4ea2 : 08                       php             ;save carry for next add
4ea3 : a513                     lda ad1
4ea5 : f15e                     sbc (sbiy2),y   ;perform subtract
4ea7 : 08                       php          
4ea8 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
4eaa : f003            >        beq skip3457
                       >        trap            ;failed not equal (non zero)
4eac : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4eaf :                 >skip3457
                        
4eaf : 68                       pla             ;check flags
4eb0 : 29c3                     and #$c3        ;mask NV----ZC
4eb2 : c517                     cmp adrf
                                trap_ne         ;bad flags
4eb4 : f003            >        beq skip3459
                       >        trap            ;failed not equal (non zero)
4eb6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4eb9 :                 >skip3459
                        
4eb9 : 28                       plp
4eba : 60                       rts
                        
                        ; target for the jump absolute test
4ebb : 88                       dey
4ebc : 88                       dey
4ebd :                  test_far
4ebd : 08                       php             ;either SP or Y count will fail, if we do not hit
4ebe : 88                       dey
4ebf : 88                       dey
4ec0 : 88                       dey
4ec1 : 28                       plp
                                trap_cs         ;flags loaded?
4ec2 : 9003            >        bcc skip3461
                       >        trap            ;failed carry set
4ec4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4ec7 :                 >skip3461
                        
                                trap_vs
4ec7 : 5003            >        bvc skip3463
                       >        trap            ;failed overflow set
4ec9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4ecc :                 >skip3463
                        
                                trap_mi
4ecc : 1003            >        bpl skip3465
                       >        trap            ;failed minus (bit 7 set)
4ece : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4ed1 :                 >skip3465
                        
                                trap_eq 
4ed1 : d003            >        bne skip3467
                       >        trap           ;failed equal (zero)
4ed3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4ed6 :                 >skip3467
                        
4ed6 : c946                     cmp #'F'        ;registers loaded?
                                trap_ne
4ed8 : f003            >        beq skip3469
                       >        trap            ;failed not equal (non zero)
4eda : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4edd :                 >skip3469
                        
4edd : e041                     cpx #'A'
                                trap_ne        
4edf : f003            >        beq skip3471
                       >        trap            ;failed not equal (non zero)
4ee1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4ee4 :                 >skip3471
                        
4ee4 : c04f                     cpy #('R'-3)
                                trap_ne
4ee6 : f003            >        beq skip3473
                       >        trap            ;failed not equal (non zero)
4ee8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4eeb :                 >skip3473
                        
4eeb : 48                       pha             ;save a,x
4eec : 8a                       txa
4eed : 48                       pha
4eee : ba                       tsx
4eef : e0fd                     cpx #$fd        ;check SP
                                trap_ne
4ef1 : f003            >        beq skip3475
                       >        trap            ;failed not equal (non zero)
4ef3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4ef6 :                 >skip3475
                        
4ef6 : 68                       pla             ;restore x
4ef7 : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
4ef8 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4efa : 48              >            pha         ;use stack to load status
4efb : 28              >            plp
                        
4efc : 68                       pla             ;restore a
4efd : e8                       inx             ;return registers with modifications
4efe : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
4f00 : 4cf115                   jmp far_ret
                                
                        ; target for the jump indirect test
4f03 : 00                       align
4f04 : 0d4f             ptr_tst_ind dw test_ind
4f06 : 7c16             ptr_ind_ret dw ind_ret
                                trap            ;runover protection
4f08 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
4f0b : 88                       dey
4f0c : 88                       dey
4f0d :                  test_ind
4f0d : 08                       php             ;either SP or Y count will fail, if we do not hit
4f0e : 88                       dey
4f0f : 88                       dey
4f10 : 88                       dey
4f11 : 28                       plp
                                trap_cs         ;flags loaded?
4f12 : 9003            >        bcc skip3480
                       >        trap            ;failed carry set
4f14 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4f17 :                 >skip3480
                        
                                trap_vs
4f17 : 5003            >        bvc skip3482
                       >        trap            ;failed overflow set
4f19 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4f1c :                 >skip3482
                        
                                trap_mi
4f1c : 1003            >        bpl skip3484
                       >        trap            ;failed minus (bit 7 set)
4f1e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4f21 :                 >skip3484
                        
                                trap_eq 
4f21 : d003            >        bne skip3486
                       >        trap           ;failed equal (zero)
4f23 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4f26 :                 >skip3486
                        
4f26 : c949                     cmp #'I'        ;registers loaded?
                                trap_ne
4f28 : f003            >        beq skip3488
                       >        trap            ;failed not equal (non zero)
4f2a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4f2d :                 >skip3488
                        
4f2d : e04e                     cpx #'N'
                                trap_ne        
4f2f : f003            >        beq skip3490
                       >        trap            ;failed not equal (non zero)
4f31 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4f34 :                 >skip3490
                        
4f34 : c041                     cpy #('D'-3)
                                trap_ne
4f36 : f003            >        beq skip3492
                       >        trap            ;failed not equal (non zero)
4f38 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4f3b :                 >skip3492
                        
4f3b : 48                       pha             ;save a,x
4f3c : 8a                       txa
4f3d : 48                       pha
4f3e : ba                       tsx
4f3f : e0fd                     cpx #$fd        ;check SP
                                trap_ne
4f41 : f003            >        beq skip3494
                       >        trap            ;failed not equal (non zero)
4f43 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4f46 :                 >skip3494
                        
4f46 : 68                       pla             ;restore x
4f47 : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
4f48 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4f4a : 48              >            pha         ;use stack to load status
4f4b : 28              >            plp
                        
4f4c : 68                       pla             ;restore a
4f4d : e8                       inx             ;return registers with modifications
4f4e : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
4f50 : 6c064f                   jmp (ptr_ind_ret)
                                trap            ;runover protection
4f53 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
                        
                        ; target for the jump subroutine test
4f56 : 88                       dey
4f57 : 88                       dey
4f58 :                  test_jsr
4f58 : 08                       php             ;either SP or Y count will fail, if we do not hit
4f59 : 88                       dey
4f5a : 88                       dey
4f5b : 88                       dey
4f5c : 28                       plp
                                trap_cs         ;flags loaded?
4f5d : 9003            >        bcc skip3499
                       >        trap            ;failed carry set
4f5f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4f62 :                 >skip3499
                        
                                trap_vs
4f62 : 5003            >        bvc skip3501
                       >        trap            ;failed overflow set
4f64 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4f67 :                 >skip3501
                        
                                trap_mi
4f67 : 1003            >        bpl skip3503
                       >        trap            ;failed minus (bit 7 set)
4f69 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4f6c :                 >skip3503
                        
                                trap_eq 
4f6c : d003            >        bne skip3505
                       >        trap           ;failed equal (zero)
4f6e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4f71 :                 >skip3505
                        
4f71 : c94a                     cmp #'J'        ;registers loaded?
                                trap_ne
4f73 : f003            >        beq skip3507
                       >        trap            ;failed not equal (non zero)
4f75 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4f78 :                 >skip3507
                        
4f78 : e053                     cpx #'S'
                                trap_ne        
4f7a : f003            >        beq skip3509
                       >        trap            ;failed not equal (non zero)
4f7c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4f7f :                 >skip3509
                        
4f7f : c04f                     cpy #('R'-3)
                                trap_ne
4f81 : f003            >        beq skip3511
                       >        trap            ;failed not equal (non zero)
4f83 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4f86 :                 >skip3511
                        
4f86 : 48                       pha             ;save a,x
4f87 : 8a                       txa
4f88 : 48                       pha       
4f89 : ba                       tsx             ;sp -4? (return addr,a,x)
4f8a : e0fb                     cpx #$fb
                                trap_ne
4f8c : f003            >        beq skip3513
                       >        trap            ;failed not equal (non zero)
4f8e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4f91 :                 >skip3513
                        
4f91 : adff01                   lda $1ff        ;propper return on stack
4f94 : c916                     cmp #hi(jsr_ret)
                                trap_ne
4f96 : f003            >        beq skip3515
                       >        trap            ;failed not equal (non zero)
4f98 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4f9b :                 >skip3515
                        
4f9b : adfe01                   lda $1fe
4f9e : c9d0                     cmp #lo(jsr_ret)
                                trap_ne
4fa0 : f003            >        beq skip3517
                       >        trap            ;failed not equal (non zero)
4fa2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4fa5 :                 >skip3517
                        
                                set_stat $ff
                       >            load_flag $ff
4fa5 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4fa7 : 48              >            pha         ;use stack to load status
4fa8 : 28              >            plp
                        
4fa9 : 68                       pla             ;pull x,a
4faa : aa                       tax
4fab : 68                       pla
4fac : e8                       inx             ;return registers with modifications
4fad : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
4faf : 60                       rts
                                trap            ;runover protection
4fb0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
                                
                        ;trap in case of unexpected IRQ, NMI, BRK, RESET - BRK test target
4fb3 :                  nmi_trap
                                trap            ;check stack for conditions at NMI
4fb3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
4fb6 :                  res_trap
                                trap            ;unexpected RESET
4fb6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
                                
4fb9 : 88                       dey
4fba : 88                       dey
4fbb :                  irq_trap                ;BRK test or unextpected BRK or IRQ
4fbb : 08                       php             ;either SP or Y count will fail, if we do not hit
4fbc : 88                       dey
4fbd : 88                       dey
4fbe : 88                       dey
                                ;next 4 traps could be caused by unexpected BRK or IRQ
                                ;check stack for BREAK and originating location
                                ;possible jump/branch into weeds (uninitialized space)
4fbf : c942                     cmp #'B'        ;registers loaded?
                                trap_ne
4fc1 : f003            >        beq skip3524
                       >        trap            ;failed not equal (non zero)
4fc3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4fc6 :                 >skip3524
                        
4fc6 : e052                     cpx #'R'
                                trap_ne        
4fc8 : f003            >        beq skip3526
                       >        trap            ;failed not equal (non zero)
4fca : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4fcd :                 >skip3526
                        
4fcd : c048                     cpy #('K'-3)
                                trap_ne
4fcf : f003            >        beq skip3528
                       >        trap            ;failed not equal (non zero)
4fd1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4fd4 :                 >skip3528
                        
4fd4 : 8510                     sta irq_a       ;save registers during break test
4fd6 : 8611                     stx irq_x
4fd8 : ba                       tsx             ;test break on stack
4fd9 : bd0201                   lda $102,x
                                cmp_flag 0      ;break test should have B=1
4fdc : c930            >            cmp #(0      |fao)&m8    ;expected flags + always on bits
                        
                                trap_ne         ; - no break flag on stack
4fde : f003            >        beq skip3531
                       >        trap            ;failed not equal (non zero)
4fe0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4fe3 :                 >skip3531
                        
4fe3 : 68                       pla
4fe4 : c934                     cmp #fai        ;should have added interrupt disable
                                trap_ne
4fe6 : f003            >        beq skip3533
                       >        trap            ;failed not equal (non zero)
4fe8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4feb :                 >skip3533
                        
4feb : ba                       tsx
4fec : e0fc                     cpx #$fc        ;sp -3? (return addr, flags)
                                trap_ne
4fee : f003            >        beq skip3535
                       >        trap            ;failed not equal (non zero)
4ff0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4ff3 :                 >skip3535
                        
4ff3 : adff01                   lda $1ff        ;propper return on stack
4ff6 : c917                     cmp #hi(brk_ret)
                                trap_ne
4ff8 : f003            >        beq skip3537
                       >        trap            ;failed not equal (non zero)
4ffa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4ffd :                 >skip3537
                        
4ffd : adfe01                   lda $1fe
5000 : c930                     cmp #lo(brk_ret)
                                trap_ne
5002 : f003            >        beq skip3539
                       >        trap            ;failed not equal (non zero)
5004 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5007 :                 >skip3539
                        
                                set_stat $ff
                       >            load_flag $ff
5007 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5009 : 48              >            pha         ;use stack to load status
500a : 28              >            plp
                        
500b : a611                     ldx irq_x
500d : e8                       inx             ;return registers with modifications
500e : a510                     lda irq_a
5010 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1 but original flags should be restored
5012 : 40                       rti
                                trap            ;runover protection
5013 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
                                
                            if report = 1
                                include "report.i65"
                        ;**** report 6502 funtional test errors to standard I/O ****
                        ;
                        ;this include file is part of the 6502 functional tests
                        ;it is used when you configure report = 1 in the tests
                        ;
                        ;to adopt the standard output vectors of your test environment
                        ;you must modify the rchar and rget subroutines in this include
                        ;
                        ;I/O hardware may have to be initialized in report_init
                        
                        ;print message macro - \1 = message location
                        rprt    macro
                                ldx #0
                                lda \1
                        loop\?
                                jsr rchar
                                inx
                                lda \1,x
                                bne loop\?
                                endm
                        
                        ;initialize I/O as required (example: configure & enable ACIA)
5016 :                  report_init
                                ;nothing to initialize
                                rprt rmsg_start
5016 : a200            >        ldx #0
5018 : adec50          >        lda rmsg_start
501b :                 >loop3544
501b : 20e850          >        jsr rchar
501e : e8              >        inx
501f : bdec50          >        lda rmsg_start,x
5022 : d0f7            >        bne loop3544
                        
5024 : 60                       rts
                                
                        ;show stack (with saved registers), zeropage and absolute memory workspace
                        ;after an error was trapped in the test program
5025 :                  report_error
                        ;save registers
5025 : 08                       php
5026 : 48                       pha
5027 : 8a                       txa
5028 : 48                       pha
5029 : 98                       tya
502a : 48                       pha
502b : d8                       cld
                        ;show stack with index to registers at error
                                rprt rmsg_stack
502c : a200            >        ldx #0
502e : ad0051          >        lda rmsg_stack
5031 :                 >loop3545
5031 : 20e850          >        jsr rchar
5034 : e8              >        inx
5035 : bd0051          >        lda rmsg_stack,x
5038 : d0f7            >        bne loop3545
                        
503a : ba                       tsx
503b : e8                       inx
503c : a901                     lda #1      ;address high
503e : 20d450                   jsr rhex
5041 : 8a                       txa         ;address low
5042 : 20d450                   jsr rhex
5045 : 20d050           rstack  jsr rspace
5048 : bd0001                   lda $100,x  ;stack data
504b : 20d450                   jsr rhex
504e : e8                       inx
504f : d0f4                     bne rstack
5051 : 20c750                   jsr rcrlf   ;new line
                        ;show zero page workspace
5054 : a900                     lda #0
5056 : 20d450                   jsr rhex
5059 : a912                     lda #zpt
505b : aa                       tax
505c : 20d450                   jsr rhex
505f : 20d050           rzp     jsr rspace
5062 : b500                     lda 0,x
5064 : 20d450                   jsr rhex
5067 : e8                       inx
5068 : e019                     cpx #zp_bss
506a : d0f3                     bne rzp
506c : 20c750                   jsr rcrlf
                        ;show absolute workspace
506f : a902                     lda #hi(data_segment)
5071 : 20d450                   jsr rhex
5074 : a900                     lda #lo(data_segment)
5076 : 20d450                   jsr rhex
5079 : a200                     ldx #0
507b : 20d050           rabs    jsr rspace
507e : bd0002                   lda data_segment,x
5081 : 20d450                   jsr rhex
5084 : e8                       inx
5085 : e008                     cpx #(data_bss-data_segment)
5087 : d0f2                     bne rabs
                        ;ask to continue
                                rprt rmsg_cont
5089 : a200            >        ldx #0
508b : ad1c51          >        lda rmsg_cont
508e :                 >loop3546
508e : 20e850          >        jsr rchar
5091 : e8              >        inx
5092 : bd1c51          >        lda rmsg_cont,x
5095 : d0f7            >        bne loop3546
                        
5097 : 20bb50           rerr1   jsr rget
509a : c943                     cmp #'C'
509c : d0f9                     bne rerr1        
                        ;restore registers
509e : 68                       pla
509f : a8                       tay
50a0 : 68                       pla
50a1 : aa                       tax
50a2 : 68                       pla 
50a3 : 28                       plp
50a4 : 60                       rts   
                        
                        ;show test has ended, ask to repeat
50a5 :                  report_success
                            if rep_int = 1
                                rprt rmsg_priority
                                lda data_segment    ;show interrupt sequence
                                jsr rhex
                                jsr rspace
                                lda data_segment+1
                                jsr rhex
                                jsr rspace
                                lda data_segment+2
                                jsr rhex
                            endif
                                rprt rmsg_success
50a5 : a200            >        ldx #0
50a7 : ad3451          >        lda rmsg_success
50aa :                 >loop3547
50aa : 20e850          >        jsr rchar
50ad : e8              >        inx
50ae : bd3451          >        lda rmsg_success,x
50b1 : d0f7            >        bne loop3547
                        
50b3 : 20bb50           rsuc1   jsr rget
50b6 : c952                     cmp #'R'
50b8 : d0f9                     bne rsuc1        
50ba : 60                       rts
                        
                        ;input subroutine
                        ;get a character from standard input 
                        ;adjust according to the needs in your test environment
50bb :                  rget                ;get character in A
                        ;rget1
                        ;        lda $bff1   ;wait RDRF
                        ;        and #8
                        ;        beq rget1
                        ;not a real ACIA - so RDRF is not checked
50bb : adf0bf                   lda $bff0   ;read acia rx reg
                        ;the load can be replaced by a call to a kernal routine
                        ;        jsr $ffcf   ;example: CHRIN for a C64
50be : c961                     cmp #'a'    ;lower case
50c0 : 9002                     bcc rget1
50c2 : 295f                     and #$5f    ;convert to upper case
50c4 : a943             rget1   lda #'C'
50c6 : 60               		rts
                        
                        ;output subroutines
50c7 : a90a             rcrlf   lda #10
50c9 : 20e850                   jsr rchar
50cc : a90d                     lda #13
50ce : d018                     bne rchar
                        
50d0 : a920             rspace  lda #' '
50d2 : d014                     bne rchar
                                
50d4 : 48               rhex    pha         ;report hex byte in A
50d5 : 4a                       lsr a       ;high nibble first
50d6 : 4a                       lsr a
50d7 : 4a                       lsr a
50d8 : 4a                       lsr a
50d9 : 20df50                   jsr rnib
50dc : 68                       pla         ;now low nibble
50dd : 290f                     and #$f
                        
50df : 18               rnib    clc         ;report nibble in A
50e0 : 6930                     adc #'0'    ;make printable 0-9
50e2 : c93a                     cmp #'9'+1
50e4 : 9002                     bcc rchar
50e6 : 6906                     adc #6      ;make printable A-F
                        
                        ;send a character to standard output 
                        ;adjust according to the needs in your test environment
                        ;register X needs to be preserved!
50e8 :                  rchar               ;report character in A
                        ;        pha         ;wait TDRF
                        ;rchar1  lda $bff1
                        ;        and #$10
                        ;        beq rchar1
                        ;        pla
                        ;not a real ACIA - so TDRF is not checked
50e8 : 8d00ef                   sta $ef00   ;write acia tx reg
                        ;the store can be replaced by a call to a kernal routine
                        ;        jsr $ffd2   ;example: CHROUT for a C64
50eb : 60                       rts
                        
50ec :                  rmsg_start
50ec : 0a0d5374617274..         db  10,13,"Started testing",10,13,0
5100 :                  rmsg_stack
5100 : 0a0d7265677320..         db  10,13,"regs Y  X  A  PS PCLPCH",10,13,0
511c :                  rmsg_cont
511c : 0a0d7072657373..         db  10,13,"press C to continue",10,13,0
5134 :                  rmsg_success
5134 : 0a0d416c6c2074..         db  10,13,"All tests completed, press R to repeat",10,13,0
                            if rep_int = 1
                        rmsg_priority
                                db  10,13,"interrupt sequence (NMI IRQ BRK) ",0
                            endif
                           
                            endif
                                
                        ;copy of data to initialize BSS segment
                            if load_data_direct != 1
515f :                  zp_init
515f : c3824100         zp1_    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
5163 : 7f               zp7f_   db  $7f             ;test pattern for compare  
                        ;logical zeropage operands
5164 : 001f7180         zpOR_   db  0,$1f,$71,$80   ;test pattern for OR
5168 : 0fff7f80         zpAN_   db  $0f,$ff,$7f,$80 ;test pattern for AND
516c : ff0f8f8f         zpEO_   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
5170 : 0802             ind1_   dw  abs1            ;indirect pointer to pattern in absolute memory
5172 : 0902                     dw  abs1+1
5174 : 0a02                     dw  abs1+2
5176 : 0b02                     dw  abs1+3
5178 : 0c02                     dw  abs7f
517a : 1001             inw1_   dw  abs1-$f8        ;indirect pointer for wrap-test pattern
517c : 0302             indt_   dw  abst            ;indirect pointer to store area in absolute memory
517e : 0402                     dw  abst+1
5180 : 0502                     dw  abst+2
5182 : 0602                     dw  abst+3
5184 : 0b01             inwt_   dw  abst-$f8        ;indirect pointer for wrap-test store
5186 : 3f02             indAN_  dw  absAN           ;indirect pointer to AND pattern in absolute memory
5188 : 4002                     dw  absAN+1
518a : 4102                     dw  absAN+2
518c : 4202                     dw  absAN+3
518e : 4302             indEO_  dw  absEO           ;indirect pointer to EOR pattern in absolute memory
5190 : 4402                     dw  absEO+1
5192 : 4502                     dw  absEO+2
5194 : 4602                     dw  absEO+3
5196 : 3b02             indOR_  dw  absOR           ;indirect pointer to OR pattern in absolute memory
5198 : 3c02                     dw  absOR+1
519a : 3d02                     dw  absOR+2
519c : 3e02                     dw  absOR+3
                        ;add/subtract indirect pointers
519e : 0302             adi2_   dw  ada2            ;indirect pointer to operand 2 in absolute memory
51a0 : 0402             sbi2_   dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
51a2 : 0401             adiy2_  dw  ada2-$ff        ;with offset for indirect indexed
51a4 : 0501             sbiy2_  dw  sba2-$ff
51a6 :                  zp_end
                            if (zp_end - zp_init) != (zp_bss_end - zp_bss)   
                                ;force assembler error if size is different   
                                ERROR ERROR ERROR   ;mismatch between bss and zeropage data
                            endif 
51a6 :                  data_init
51a6 : c3824100         abs1_   db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
51aa : 7f               abs7f_  db  $7f             ;test pattern for compare
                        ;loads
51ab : 80800002         fLDx_   db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
51af :                  rASL_                       ;expected result ASL & ROL -carry  
51af : 86048200         rROL_   db  $86,$04,$82,0   ; "
51b3 : 87058301         rROLc_  db  $87,$05,$83,1   ;expected result ROL +carry
51b7 :                  rLSR_                       ;expected result LSR & ROR -carry
51b7 : 61412000         rROR_   db  $61,$41,$20,0   ; "
51bb : e1c1a080         rRORc_  db  $e1,$c1,$a0,$80 ;expected result ROR +carry
51bf :                  fASL_                       ;expected flags for shifts
51bf : 81018002         fROL_   db  fnc,fc,fn,fz    ;no carry in
51c3 : 81018000         fROLc_  db  fnc,fc,fn,0     ;carry in
51c7 :                  fLSR_
51c7 : 01000102         fROR_   db  fc,0,fc,fz      ;no carry in
51cb : 81808180         fRORc_  db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
51cf : 7f80ff0001       rINC_   db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
51d4 : 0080800200       fINC_   db  0,fn,fn,fz,0    ;expected flags for INC/DEC
                        ;logical memory operand
51d9 : 001f7180         absOR_  db  0,$1f,$71,$80   ;test pattern for OR
51dd : 0fff7f80         absAN_  db  $0f,$ff,$7f,$80 ;test pattern for AND
51e1 : ff0f8f8f         absEO_  db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
51e5 : 00f11f00         absORa_ db  0,$f1,$1f,0     ;test pattern for OR
51e9 : f0ffffff         absANa_ db  $f0,$ff,$ff,$ff ;test pattern for AND
51ed : fff0f00f         absEOa_ db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
51f1 : 00ff7f80         absrlo_ db  0,$ff,$7f,$80
51f5 : 02800080         absflo_ db  fz,fn,0,fn
51f9 :                  data_end
                            if (data_end - data_init) != (data_bss_end - data_bss)
                                ;force assembler error if size is different   
                                ERROR ERROR ERROR   ;mismatch between bss and data
                            endif 
                        
51f9 :                  vec_init
51f9 : b34f                     dw  nmi_trap
51fb : b64f                     dw  res_trap
51fd : bb4f                     dw  irq_trap
fffa =                  vec_bss equ $fffa
                            endif                   ;end of RAM init data
                            
                            if (load_data_direct = 1) & (ROM_vectors = 1)  
                                org $fffa       ;vectors
                                dw  nmi_trap
                                dw  res_trap
                                dw  irq_trap
                            endif
                        
fffa =                          end start
                                    
No errors in pass 2.
Wrote binary from address $1000 through $51fe.
Total size 16895 bytes.
Program start address is at $1000 (4096).
