AS65 Assembler for R6502 [1.42].  Copyright 1994-2007, Frank A. Kingswood                                                Page    1
---------------------------------------------------- 6502_functional_test.a65 ----------------------------------------------------

6067 lines read, no errors in pass 1.
                        ;
                        ; 6 5 0 2   F U N C T I O N A L   T E S T
                        ;
                        ; Copyright (C) 2012-2014  Klaus Dormann
                        ;
                        ; This program is free software: you can redistribute it and/or modify
                        ; it under the terms of the GNU General Public License as published by
                        ; the Free Software Foundation, either version 3 of the License, or
                        ; (at your option) any later version.
                        ;
                        ; This program is distributed in the hope that it will be useful,
                        ; but WITHOUT ANY WARRANTY; without even the implied warranty of
                        ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        ; GNU General Public License for more details.
                        ;
                        ; You should have received a copy of the GNU General Public License
                        ; along with this program.  If not, see <http://www.gnu.org/licenses/>.
                        
                        
                        ; This program is designed to test all opcodes of a 6502 emulator using all
                        ; addressing modes with focus on propper setting of the processor status
                        ; register bits.
                        ; 
                        ; version 14-dec-2014
                        ; contact info at http://2m5.de or email K@2m5.de
                        ;
                        ; assembled with AS65 from http://www.kingswood-consulting.co.uk/assemblers/
                        ; command line switches: -l -m -s2 -w -h0
                        ;                         |  |  |   |  no page headers in listing
                        ;                         |  |  |   wide listing (133 char/col)
                        ;                         |  |  write intel hex file instead of binary
                        ;                         |  expand macros in listing
                        ;                         generate pass2 listing
                        ;
                        ; No IO - should be run from a monitor with access to registers.
                        ; To run load intel hex image with a load command, than alter PC to 400 hex
                        ; (code_segment) and enter a go command.
                        ; Loop on program counter determines error or successful completion of test.
                        ; Check listing for relevant traps (jump/branch *).
                        ; Please note that in early tests some instructions will have to be used before
                        ; they are actually tested!
                        ;
                        ; RESET, NMI or IRQ should not occur and will be trapped if vectors are enabled.
                        ; Tests documented behavior of the original NMOS 6502 only! No unofficial
                        ; opcodes. Additional opcodes of newer versions of the CPU (65C02, 65816) will
                        ; not be tested. Decimal ops will only be tested with valid BCD operands and
                        ; N V Z flags will be ignored.
                        ;
                        ; Debugging hints:
                        ;     Most of the code is written sequentially. if you hit a trap, check the
                        ;   immediately preceeding code for the instruction to be tested. Results are
                        ;   tested first, flags are checked second by pushing them onto the stack and
                        ;   pulling them to the accumulator after the result was checked. The "real"
                        ;   flags are no longer valid for the tested instruction at this time!
                        ;     If the tested instruction was indexed, the relevant index (X or Y) must
                        ;   also be checked. Opposed to the flags, X and Y registers are still valid.
                        ;
                        ; versions:
                        ;   28-jul-2012  1st version distributed for testing
                        ;   29-jul-2012  fixed references to location 0, now #0
                        ;                added license - GPLv3
                        ;   30-jul-2012  added configuration options
                        ;   01-aug-2012  added trap macro to allow user to change error handling
                        ;   01-dec-2012  fixed trap in branch field must be a branch
                        ;   02-mar-2013  fixed PLA flags not tested
                        ;   19-jul-2013  allowed ROM vectors to be loaded when load_data_direct = 0
                        ;                added test sequence check to detect if tests jump their fence
                        ;   23-jul-2013  added RAM integrity check option
                        ;   16-aug-2013  added error report to standard output option
                        ;   13-dec-2014  added binary/decimal opcode table switch test
                        ;   14-dec-2014  improved relative address test
                        
                        
                        ; C O N F I G U R A T I O N
                        
                        ;ROM_vectors writable (0=no, 1=yes)
                        ;if ROM vectors can not be used interrupts will not be trapped
                        ;as a consequence BRK can not be tested but will be emulated to test RTI
0000 =                  ROM_vectors = 0
                        
                        ;load_data_direct (0=move from code segment, 1=load directly)
                        ;loading directly is preferred but may not be supported by your platform
                        ;0 produces only consecutive object code, 1 is not suitable for a binary image
0000 =                  load_data_direct = 0
                        
                        ;I_flag behavior (0=force enabled, 1=force disabled, 2=prohibit change, 3=allow
                        ;change) 2 requires extra code and is not recommended. SEI & CLI can only be
                        ;tested if you allow changing the interrupt status (I_flag = 3)
0003 =                  I_flag = 3
                        
                        ;configure memory - try to stay away from memory used by the system
                        ;zero_page memory start address, $50 (80) consecutive Bytes required
                        ;                                add 2 if I_flag = 2
000a =                  zero_page = $a  
                        
                        ;data_segment memory start address, $5B (91) consecutive Bytes required
0200 =                  data_segment = $200  
                            if (data_segment & $ff) != 0
                                ERROR ERROR ERROR low byte of data_segment MUST be $00 !!
                            endif  
                        
                        ;code_segment memory start address, 13kB of consecutive space required
                        ;                                   add 2.5 kB if I_flag = 2
                        ;parts of the code are self modifying and must reside in RAM
0400 =                  code_segment = $400  
                        
                        ;report errors through I/O channel (0=use standard self trap loops, 1=include
                        ;report.i65 as I/O channel, add 3.5 kB)
0001 =                  report = 1
                        
                        ;RAM integrity test option. Checks for undesired RAM writes.
                        ;set lowest non RAM or RAM mirror address page (-1=disable, 0=64k, $40=16k)
                        ;leave disabled if a monitor, OS or background interrupt is allowed to alter RAM
ffff =                  ram_top = -1
                        
                                noopt       ;do not take shortcuts
                        
                        ;macros for error & success traps to allow user modification
                        ;example:
                        ;trap    macro
                        ;        jsr my_error_handler
                        ;        endm
                        ;trap_eq macro
                        ;        bne skip\?
                        ;        trap           ;failed equal (zero)
                        ;skip\?
                        ;        endm
                        ;
                        ; my_error_handler should pop the calling address from the stack and report it.
                        ; putting larger portions of code (more than 3 bytes) inside the trap macro
                        ; may lead to branch range problems for some tests.
                            if report = 0
                        trap    macro
                                jmp *           ;failed anyway
                                endm
                        trap_eq macro
                                beq *           ;failed equal (zero)
                                endm
                        trap_ne macro
                                bne *           ;failed not equal (non zero)
                                endm
                        trap_cs macro
                                bcs *           ;failed carry set
                                endm
                        trap_cc macro
                                bcc *           ;failed carry clear
                                endm
                        trap_mi macro
                                bmi *           ;failed minus (bit 7 set)
                                endm
                        trap_pl macro
                                bpl *           ;failed plus (bit 7 clear)
                                endm
                        trap_vs macro
                                bvs *           ;failed overflow set
                                endm
                        trap_vc macro
                                bvc *           ;failed overflow clear
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                                jmp *           ;test passed, no errors
                                endm
                            endif
                            if report = 1
                        trap    macro
                                jsr report_error
                                endm
                        trap_eq macro
                                bne skip\?
                                trap           ;failed equal (zero)
                        skip\?
                                endm
                        trap_ne macro
                                beq skip\?
                                trap            ;failed not equal (non zero)
                        skip\?
                                endm
                        trap_cs macro
                                bcc skip\?
                                trap            ;failed carry set
                        skip\?
                                endm
                        trap_cc macro
                                bcs skip\?
                                trap            ;failed carry clear
                        skip\?
                                endm
                        trap_mi macro
                                bpl skip\?
                                trap            ;failed minus (bit 7 set)
                        skip\?
                                endm
                        trap_pl macro
                                bmi skip\?
                                trap            ;failed plus (bit 7 clear)
                        skip\?
                                endm
                        trap_vs macro
                                bvc skip\?
                                trap            ;failed overflow set
                        skip\?
                                endm
                        trap_vc macro
                                bvs skip\?
                                trap            ;failed overflow clear
                        skip\?
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                                jsr report_success
                                endm
                            endif
                        
                        
0001 =                  carry   equ %00000001   ;flag bits in status
0002 =                  zero    equ %00000010
0004 =                  intdis  equ %00000100
0008 =                  decmode equ %00001000
0010 =                  break   equ %00010000
0020 =                  reserv  equ %00100000
0040 =                  overfl  equ %01000000
0080 =                  minus   equ %10000000
                        
0001 =                  fc      equ carry
0002 =                  fz      equ zero
0003 =                  fzc     equ carry+zero
0040 =                  fv      equ overfl
0042 =                  fvz     equ overfl+zero
0080 =                  fn      equ minus
0081 =                  fnc     equ minus+carry
0082 =                  fnz     equ minus+zero
0083 =                  fnzc    equ minus+zero+carry
00c0 =                  fnv     equ minus+overfl
                        
0030 =                  fao     equ break+reserv    ;bits always on after PHP, BRK
0034 =                  fai     equ fao+intdis      ;+ forced interrupt disable
00ff =                  m8      equ $ff             ;8 bit mask
00fb =                  m8i     equ $ff&~intdis     ;8 bit mask - interrupt disable
                        
                        ;macros to allow masking of status bits.
                        ;masking of interrupt enable/disable on load and compare
                        ;masking of always on bits after PHP or BRK (unused & break) on compare
                                if I_flag = 0
                        load_flag   macro
                                    lda #\1&m8i         ;force enable interrupts (mask I)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8i   ;I_flag is always enabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 1
                        load_flag   macro
                                    lda #\1|intdis      ;force disable interrupts
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fai)&m8    ;I_flag is always disabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1|fai)       ;invert expected flags + always on bits + I
                                    endm
                                endif
                                if I_flag = 2
                        load_flag   macro
                                    lda #\1
                                    ora flag_I_on       ;restore I-flag
                                    and flag_I_off
                                    endm
                        cmp_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    cmp #(\1|fao)&m8i   ;expected flags + always on bits, mask I
                                    endm
                        eor_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 3
                        load_flag   macro
                                    lda #\1             ;allow test to change I-flag (no mask)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8    ;expected flags + always on bits
                                    endm
                        eor_flag    macro
                                    eor #\1|fao         ;invert expected flags + always on bits
                                    endm
                                endif
                        
                        ;macros to set (register|memory|zeropage) & status
                        set_stat    macro       ;setting flags in the processor status register
                                    load_flag \1
                                    pha         ;use stack to load status
                                    plp
                                    endm
                        
                        set_a       macro       ;precharging accu & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda #\1     ;precharge accu
                                    plp
                                    endm
                        
                        set_x       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldx #\1     ;precharge index x
                                    plp
                                    endm
                        
                        set_y       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldy #\1     ;precharge index y
                                    plp
                                    endm
                        
                        set_ax      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;precharge accu
                                    plp
                                    endm
                        
                        set_ay      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,y    ;precharge accu
                                    plp
                                    endm
                        
                        set_z       macro       ;precharging indexed zp & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to zeropage
                                    sta zpt
                                    plp
                                    endm
                        
                        set_zx      macro       ;precharging zp,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed zeropage
                                    sta zpt,x
                                    plp
                                    endm
                        
                        set_abs     macro       ;precharging indexed memory & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to memory
                                    sta abst
                                    plp
                                    endm
                        
                        set_absx    macro       ;precharging abs,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed memory
                                    sta abst,x
                                    plp
                                    endm
                        
                        ;macros to test (register|memory|zeropage) & status & (mask)
                        tst_stat    macro       ;testing flags in the processor status register
                                    php         ;save status
                                    pla         ;use stack to retrieve status
                                    pha
                                    cmp_flag \1
                                    trap_ne
                                    plp         ;restore status
                                    endm
                                    
                        tst_a       macro       ;testing result in accu & flags
                                    php         ;save flags
                                    cmp #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_x       macro       ;testing result in x index & flags
                                    php         ;save flags
                                    cpx #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_y       macro       ;testing result in y index & flags
                                    php         ;save flags
                                    cpy #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_ax      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne     ;
                                    endm
                        
                        tst_ay      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,y    ;test result
                                    trap_ne     ;
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,y    ;test flags
                                    trap_ne
                                    endm
                                
                        tst_z       macro       ;indexed testing result in zp & flags
                                    php         ;save flags
                                    lda zpt
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_zx      macro       ;testing result in zp,x & flags
                                    php         ;save flags
                                    lda zpt,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_abs     macro       ;indexed testing result in memory & flags
                                    php         ;save flags
                                    lda abst
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_absx    macro       ;testing result in abs,x & flags
                                    php         ;save flags
                                    lda abst,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                                    
                        ; RAM integrity test
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                        ;   uses zpt word as indirect pointer, zpt+2 word as checksum
                                if ram_top > -1
                        check_ram   macro 
                                    cld
                                    lda #0
                                    sta zpt         ;set low byte of indirect pointer
                                    sta zpt+3       ;checksum high byte
                                    sta range_adr   ;reset self modifying code
                                    sta tandi1
                                    sta tandi2
                                    sta teori1
                                    sta teori2
                                    sta torai1
                                    sta torai2
                                    sta chkdadi  
                                    sta chkdsbi
                                    sta chkadi
                                    sta chksbi
                                    clc
                                    ldx #zp_bss-zero_page ;zeropage - write test area
                        ccs3\?      adc zero_page,x
                                    bcc ccs2\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs2\?      inx
                                    bne ccs3\?
                                    ldx #hi(data_segment) ;set high byte of indirect pointer
                                    stx zpt+1
                                    ldy #lo(data_bss) ;data after write test area
                        ccs5\?      adc (zpt),y
                                    bcc ccs4\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs4\?      iny
                                    bne ccs5\?
                                    inx             ;advance RAM high address
                                    stx zpt+1
                                    cpx #ram_top
                                    bne ccs5\?
                                    sta zpt+2       ;checksum low is
                                    cmp ram_chksm   ;checksum low expected
                                    trap_ne         ;checksum mismatch
                                    lda zpt+3       ;checksum high is
                                    cmp ram_chksm+1 ;checksum high expected
                                    trap_ne         ;checksum mismatch
                                    endm            
                                else
                        check_ram   macro
                                    ;RAM check disabled - RAM size not set
                                    endm
                                endif
                        
                        next_test   macro           ;make sure, tests don't jump the fence
                                    lda test_case   ;previous test
                                    cmp #test_num
                                    trap_ne         ;test is out of sequence
                        test_num = test_num + 1
                                    lda #test_num   ;*** next tests' number
                                    sta test_case
                                    ;check_ram       ;uncomment to find altered RAM after each test
                                    endm
                        
                            if load_data_direct = 1
                                data
                            else
                                bss                 ;uninitialized segment, copy of data at end of code!
                            endif
000a =                          org zero_page
                        ;break test interrupt save
000a =                  irq_a   ds  1               ;a register
000b =                  irq_x   ds  1               ;x register
                            if I_flag = 2
                        ;masking for I bit in status
                        flag_I_on   ds  1           ;or mask to load flags   
                        flag_I_off  ds  1           ;and mask to load flags
                            endif
000c =                  zpt                         ;5 bytes store/modify test area
                        ;add/subtract operand generation and result/flag prediction
000c =                  adfc    ds  1               ;carry flag before op
000d =                  ad1     ds  1               ;operand 1 - accumulator
000e =                  ad2     ds  1               ;operand 2 - memory / immediate
000f =                  adrl    ds  1               ;expected result bits 0-7
0010 =                  adrh    ds  1               ;expected result bit 8 (carry)
0011 =                  adrf    ds  1               ;expected flags NV0000ZC (only binary mode)
0012 =                  sb2     ds  1               ;operand 2 complemented for subtract
0013 =                  zp_bss
0013 =                  zp1     db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
0017 =                  zp7f    db  $7f             ;test pattern for compare  
                        ;logical zeropage operands
0018 =                  zpOR    db  0,$1f,$71,$80   ;test pattern for OR
001c =                  zpAN    db  $0f,$ff,$7f,$80 ;test pattern for AND
0020 =                  zpEO    db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
0024 =                  ind1    dw  abs1            ;indirect pointer to pattern in absolute memory
0026 =                          dw  abs1+1
0028 =                          dw  abs1+2
002a =                          dw  abs1+3
002c =                          dw  abs7f
002e =                  inw1    dw  abs1-$f8        ;indirect pointer for wrap-test pattern
0030 =                  indt    dw  abst            ;indirect pointer to store area in absolute memory
0032 =                          dw  abst+1
0034 =                          dw  abst+2
0036 =                          dw  abst+3
0038 =                  inwt    dw  abst-$f8        ;indirect pointer for wrap-test store
003a =                  indAN   dw  absAN           ;indirect pointer to AND pattern in absolute memory
003c =                          dw  absAN+1
003e =                          dw  absAN+2
0040 =                          dw  absAN+3
0042 =                  indEO   dw  absEO           ;indirect pointer to EOR pattern in absolute memory
0044 =                          dw  absEO+1
0046 =                          dw  absEO+2
0048 =                          dw  absEO+3
004a =                  indOR   dw  absOR           ;indirect pointer to OR pattern in absolute memory
004c =                          dw  absOR+1
004e =                          dw  absOR+2
0050 =                          dw  absOR+3
                        ;add/subtract indirect pointers
0052 =                  adi2    dw  ada2            ;indirect pointer to operand 2 in absolute memory
0054 =                  sbi2    dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
0056 =                  adiy2   dw  ada2-$ff        ;with offset for indirect indexed
0058 =                  sbiy2   dw  sba2-$ff
005a =                  zp_bss_end
                           
0200 =                          org data_segment
0200 =                  test_case   ds  1           ;current test number
0201 =                  ram_chksm   ds  2           ;checksum for RAM integrity test
                        ;add/subtract operand copy - abs tests write area
0203 =                  abst                        ;5 bytes store/modify test area
0203 =                  ada2    ds  1               ;operand 2
0204 =                  sba2    ds  1               ;operand 2 complemented for subtract
0205 =                          ds  3               ;fill remaining bytes
0208 =                  data_bss
0208 =                  abs1    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
020c =                  abs7f   db  $7f             ;test pattern for compare
                        ;loads
020d =                  fLDx    db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
0211 =                  rASL                        ;expected result ASL & ROL -carry  
0211 =                  rROL    db  $86,$04,$82,0   ; "
0215 =                  rROLc   db  $87,$05,$83,1   ;expected result ROL +carry
0219 =                  rLSR                        ;expected result LSR & ROR -carry
0219 =                  rROR    db  $61,$41,$20,0   ; "
021d =                  rRORc   db  $e1,$c1,$a0,$80 ;expected result ROR +carry
0221 =                  fASL                        ;expected flags for shifts
0221 =                  fROL    db  fnc,fc,fn,fz    ;no carry in
0225 =                  fROLc   db  fnc,fc,fn,0     ;carry in
0229 =                  fLSR
0229 =                  fROR    db  fc,0,fc,fz      ;no carry in
022d =                  fRORc   db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
0231 =                  rINC    db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
0236 =                  fINC    db  0,fn,fn,fz,0    ;expected flags for INC/DEC
                        ;logical memory operand
023b =                  absOR   db  0,$1f,$71,$80   ;test pattern for OR
023f =                  absAN   db  $0f,$ff,$7f,$80 ;test pattern for AND
0243 =                  absEO   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
0247 =                  absORa  db  0,$f1,$1f,0     ;test pattern for OR
024b =                  absANa  db  $f0,$ff,$ff,$ff ;test pattern for AND
024f =                  absEOa  db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
0253 =                  absrlo  db  0,$ff,$7f,$80
0257 =                  absflo  db  fz,fn,0,fn
025b =                  data_bss_end
                        
                        
                                code
0400 =                          org code_segment
0400 : d8               start   cld
0401 : a2ff                     ldx #$ff
0403 : 9a                       txs
0404 : a900                     lda #0          ;*** test 0 = initialize
0406 : 8d0002                   sta test_case
0000 =                  test_num = 0
                        
                        ;stop interrupts before initializing BSS
                            if I_flag = 1
                                sei
                            endif
                            
                        ;initialize I/O for report channel
                            if report = 1
0409 : 209643                   jsr report_init
                            endif
                            
                        ;initialize BSS segment
                            if load_data_direct != 1
040c : a246                     ldx #zp_end-zp_init-1
040e : bddf44           ld_zp   lda zp_init,x
0411 : 9513                     sta zp_bss,x
0413 : ca                       dex
0414 : 10f8                     bpl ld_zp
0416 : a252                     ldx #data_end-data_init-1
0418 : bd2645           ld_data lda data_init,x
041b : 9d0802                   sta data_bss,x
041e : ca                       dex
041f : 10f7                     bpl ld_data
                              if ROM_vectors = 1
                                ldx #5
                        ld_vect lda vec_init,x
                                sta vec_bss,x
                                dex
                                bpl ld_vect
                              endif
                            endif
                        
                        ;retain status of interrupt flag
                            if I_flag = 2
                                php
                                pla
                                and #4          ;isolate flag
                                sta flag_I_on   ;or mask
                                eor #lo(~4)     ;reverse
                                sta flag_I_off  ;and mask
                            endif
                                
                        ;generate checksum for RAM integrity test
                            if ram_top > -1
                                lda #0 
                                sta zpt         ;set low byte of indirect pointer
                                sta ram_chksm+1 ;checksum high byte
                                sta range_adr   ;reset self modifying code
                                sta tandi1
                                sta tandi2
                                sta teori1
                                sta teori2
                                sta torai1
                                sta torai2
                                sta chkdadi  
                                sta chkdsbi
                                sta chkadi
                                sta chksbi
                                clc
                                ldx #zp_bss-zero_page ;zeropage - write test area
                        gcs3    adc zero_page,x
                                bcc gcs2
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs2    inx
                                bne gcs3
                                ldx #hi(data_segment) ;set high byte of indirect pointer
                                stx zpt+1
                                ldy #lo(data_bss) ;data after write test area
                        gcs5    adc (zpt),y
                                bcc gcs4
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs4    iny
                                bne gcs5
                                inx             ;advance RAM high address
                                stx zpt+1
                                cpx #ram_top
                                bne gcs5
                                sta ram_chksm   ;checksum complete
                            endif
                                next_test            
0421 : ad0002          >            lda test_case   ;previous test
0424 : c900            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
0426 : f003            >        beq skip0002
                       >        trap            ;failed not equal (non zero)
0428 : 20a543          >        jsr report_error
                       >
042b :                 >skip0002
                       >
0001 =                 >test_num = test_num + 1
042b : a901            >            lda #test_num   ;*** next tests' number
042d : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ;testing relative addressing with BEQ
0430 : a0fe                     ldy #$fe        ;testing maximum range, not -1/-2 (invalid/self adr)
0432 :                  range_loop
0432 : 88                       dey             ;next relative address
0433 : 98                       tya
0434 : aa                       tax             ;precharge count to end of loop
0435 : 1008                     bpl range_fw    ;calculate relative address
0437 : 18                       clc             ;avoid branch self or to relative address of branch
0438 : 6902                     adc #2
043a : ea                       nop             ;offset landing zone - tolerate +/-5 offset to branch
043b : ea                       nop
043c : ea                       nop
043d : ea                       nop
043e : ea                       nop
043f :                  range_fw
043f : ea                       nop
0440 : ea                       nop
0441 : ea                       nop
0442 : ea                       nop
0443 : ea                       nop
0444 : 497f                     eor #$7f        ;complement except sign
0446 : 8dd204                   sta range_adr   ;load into test target
0449 : a900                     lda #0          ;should set zero flag in status register
044b : 4cd104                   jmp range_op
                                
044e : ca                       dex             ; offset landing zone - backward branch too far
044f : ca                       dex
0450 : ca                       dex
0451 : ca                       dex
0452 : ca                       dex
                                ;relative address target field with branch under test in the middle                       
0453 : ca                       dex             ;-128 - max backward
0454 : ca                       dex
0455 : ca                       dex
0456 : ca                       dex
0457 : ca                       dex
0458 : ca                       dex
0459 : ca                       dex
045a : ca                       dex
045b : ca                       dex             ;-120
045c : ca                       dex
045d : ca                       dex
045e : ca                       dex
045f : ca                       dex
0460 : ca                       dex
0461 : ca                       dex
0462 : ca                       dex
0463 : ca                       dex
0464 : ca                       dex
0465 : ca                       dex             ;-110
0466 : ca                       dex
0467 : ca                       dex
0468 : ca                       dex
0469 : ca                       dex
046a : ca                       dex
046b : ca                       dex
046c : ca                       dex
046d : ca                       dex
046e : ca                       dex
046f : ca                       dex             ;-100
0470 : ca                       dex
0471 : ca                       dex
0472 : ca                       dex
0473 : ca                       dex
0474 : ca                       dex
0475 : ca                       dex
0476 : ca                       dex
0477 : ca                       dex
0478 : ca                       dex
0479 : ca                       dex             ;-90
047a : ca                       dex
047b : ca                       dex
047c : ca                       dex
047d : ca                       dex
047e : ca                       dex
047f : ca                       dex
0480 : ca                       dex
0481 : ca                       dex
0482 : ca                       dex
0483 : ca                       dex             ;-80
0484 : ca                       dex
0485 : ca                       dex
0486 : ca                       dex
0487 : ca                       dex
0488 : ca                       dex
0489 : ca                       dex
048a : ca                       dex
048b : ca                       dex
048c : ca                       dex
048d : ca                       dex             ;-70
048e : ca                       dex
048f : ca                       dex
0490 : ca                       dex
0491 : ca                       dex
0492 : ca                       dex
0493 : ca                       dex
0494 : ca                       dex
0495 : ca                       dex
0496 : ca                       dex
0497 : ca                       dex             ;-60
0498 : ca                       dex
0499 : ca                       dex
049a : ca                       dex
049b : ca                       dex
049c : ca                       dex
049d : ca                       dex
049e : ca                       dex
049f : ca                       dex
04a0 : ca                       dex
04a1 : ca                       dex             ;-50
04a2 : ca                       dex
04a3 : ca                       dex
04a4 : ca                       dex
04a5 : ca                       dex
04a6 : ca                       dex
04a7 : ca                       dex
04a8 : ca                       dex
04a9 : ca                       dex
04aa : ca                       dex
04ab : ca                       dex             ;-40
04ac : ca                       dex
04ad : ca                       dex
04ae : ca                       dex
04af : ca                       dex
04b0 : ca                       dex
04b1 : ca                       dex
04b2 : ca                       dex
04b3 : ca                       dex
04b4 : ca                       dex
04b5 : ca                       dex             ;-30
04b6 : ca                       dex
04b7 : ca                       dex
04b8 : ca                       dex
04b9 : ca                       dex
04ba : ca                       dex
04bb : ca                       dex
04bc : ca                       dex
04bd : ca                       dex
04be : ca                       dex
04bf : ca                       dex             ;-20
04c0 : ca                       dex
04c1 : ca                       dex
04c2 : ca                       dex
04c3 : ca                       dex
04c4 : ca                       dex
04c5 : ca                       dex
04c6 : ca                       dex
04c7 : ca                       dex
04c8 : ca                       dex
04c9 : ca                       dex             ;-10
04ca : ca                       dex
04cb : ca                       dex
04cc : ca                       dex
04cd : ca                       dex
04ce : ca                       dex
04cf : ca                       dex
04d0 : ca                       dex             ;-3
04d1 :                  range_op                ;test target with zero flag=0, z=1 if previous dex
04d2 =                  range_adr   = *+1       ;modifiable relative address
04d1 : f03e                     beq *+64        ;+64 if called without modification
04d3 : ca                       dex             ;+0
04d4 : ca                       dex
04d5 : ca                       dex
04d6 : ca                       dex
04d7 : ca                       dex
04d8 : ca                       dex
04d9 : ca                       dex
04da : ca                       dex
04db : ca                       dex
04dc : ca                       dex
04dd : ca                       dex             ;+10
04de : ca                       dex
04df : ca                       dex
04e0 : ca                       dex
04e1 : ca                       dex
04e2 : ca                       dex
04e3 : ca                       dex
04e4 : ca                       dex
04e5 : ca                       dex
04e6 : ca                       dex
04e7 : ca                       dex             ;+20
04e8 : ca                       dex
04e9 : ca                       dex
04ea : ca                       dex
04eb : ca                       dex
04ec : ca                       dex
04ed : ca                       dex
04ee : ca                       dex
04ef : ca                       dex
04f0 : ca                       dex
04f1 : ca                       dex             ;+30
04f2 : ca                       dex
04f3 : ca                       dex
04f4 : ca                       dex
04f5 : ca                       dex
04f6 : ca                       dex
04f7 : ca                       dex
04f8 : ca                       dex
04f9 : ca                       dex
04fa : ca                       dex
04fb : ca                       dex             ;+40
04fc : ca                       dex
04fd : ca                       dex
04fe : ca                       dex
04ff : ca                       dex
0500 : ca                       dex
0501 : ca                       dex
0502 : ca                       dex
0503 : ca                       dex
0504 : ca                       dex
0505 : ca                       dex             ;+50
0506 : ca                       dex
0507 : ca                       dex
0508 : ca                       dex
0509 : ca                       dex
050a : ca                       dex
050b : ca                       dex
050c : ca                       dex
050d : ca                       dex
050e : ca                       dex
050f : ca                       dex             ;+60
0510 : ca                       dex
0511 : ca                       dex
0512 : ca                       dex
0513 : ca                       dex
0514 : ca                       dex
0515 : ca                       dex
0516 : ca                       dex
0517 : ca                       dex
0518 : ca                       dex
0519 : ca                       dex             ;+70
051a : ca                       dex
051b : ca                       dex
051c : ca                       dex
051d : ca                       dex
051e : ca                       dex
051f : ca                       dex
0520 : ca                       dex
0521 : ca                       dex
0522 : ca                       dex
0523 : ca                       dex             ;+80
0524 : ca                       dex
0525 : ca                       dex
0526 : ca                       dex
0527 : ca                       dex
0528 : ca                       dex
0529 : ca                       dex
052a : ca                       dex
052b : ca                       dex
052c : ca                       dex
052d : ca                       dex             ;+90
052e : ca                       dex
052f : ca                       dex
0530 : ca                       dex
0531 : ca                       dex
0532 : ca                       dex
0533 : ca                       dex
0534 : ca                       dex
0535 : ca                       dex
0536 : ca                       dex
0537 : ca                       dex             ;+100
0538 : ca                       dex
0539 : ca                       dex
053a : ca                       dex
053b : ca                       dex
053c : ca                       dex
053d : ca                       dex
053e : ca                       dex
053f : ca                       dex
0540 : ca                       dex
0541 : ca                       dex             ;+110
0542 : ca                       dex
0543 : ca                       dex
0544 : ca                       dex
0545 : ca                       dex
0546 : ca                       dex
0547 : ca                       dex
0548 : ca                       dex
0549 : ca                       dex
054a : ca                       dex
054b : ca                       dex             ;+120
054c : ca                       dex
054d : ca                       dex
054e : ca                       dex
054f : ca                       dex
0550 : ca                       dex
0551 : ca                       dex
0552 : ea                       nop             ;offset landing zone - forward branch too far
0553 : ea                       nop
0554 : ea                       nop
0555 : ea                       nop
0556 : ea                       nop
0557 : f008                     beq range_ok    ;+127 - max forward
                                trap            ; bad range
0559 : 20a543          >        jsr report_error
                        
055c : ea                       nop             ;offset landing zone - tolerate +/-5 offset to branch
055d : ea                       nop
055e : ea                       nop
055f : ea                       nop
0560 : ea                       nop
0561 :                  range_ok
0561 : ea                       nop
0562 : ea                       nop
0563 : ea                       nop
0564 : ea                       nop
0565 : ea                       nop
0566 : c000                     cpy #0
0568 : f003                     beq range_end   
056a : 4c3204                   jmp range_loop
056d :                  range_end               ;range test successful
                                next_test
056d : ad0002          >            lda test_case   ;previous test
0570 : c901            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
0572 : f003            >        beq skip0006
                       >        trap            ;failed not equal (non zero)
0574 : 20a543          >        jsr report_error
                       >
0577 :                 >skip0006
                       >
0002 =                 >test_num = test_num + 1
0577 : a902            >            lda #test_num   ;*** next tests' number
0579 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ;partial test BNE & CMP, CPX, CPY immediate
057c : c001                     cpy #1          ;testing BNE true
057e : d003                     bne test_bne
                                trap 
0580 : 20a543          >        jsr report_error
                        
0583 :                  test_bne
0583 : a900                     lda #0 
0585 : c900                     cmp #0          ;test compare immediate 
                                trap_ne
0587 : f003            >        beq skip0009
                       >        trap            ;failed not equal (non zero)
0589 : 20a543          >        jsr report_error
                       >
058c :                 >skip0009
                        
                                trap_cc
058c : b003            >        bcs skip0011
                       >        trap            ;failed carry clear
058e : 20a543          >        jsr report_error
                       >
0591 :                 >skip0011
                        
                                trap_mi
0591 : 1003            >        bpl skip0013
                       >        trap            ;failed minus (bit 7 set)
0593 : 20a543          >        jsr report_error
                       >
0596 :                 >skip0013
                        
0596 : c901                     cmp #1
                                trap_eq 
0598 : d003            >        bne skip0015
                       >        trap           ;failed equal (zero)
059a : 20a543          >        jsr report_error
                       >
059d :                 >skip0015
                        
                                trap_cs
059d : 9003            >        bcc skip0017
                       >        trap            ;failed carry set
059f : 20a543          >        jsr report_error
                       >
05a2 :                 >skip0017
                        
                                trap_pl
05a2 : 3003            >        bmi skip0019
                       >        trap            ;failed plus (bit 7 clear)
05a4 : 20a543          >        jsr report_error
                       >
05a7 :                 >skip0019
                        
05a7 : aa                       tax 
05a8 : e000                     cpx #0          ;test compare x immediate
                                trap_ne
05aa : f003            >        beq skip0021
                       >        trap            ;failed not equal (non zero)
05ac : 20a543          >        jsr report_error
                       >
05af :                 >skip0021
                        
                                trap_cc
05af : b003            >        bcs skip0023
                       >        trap            ;failed carry clear
05b1 : 20a543          >        jsr report_error
                       >
05b4 :                 >skip0023
                        
                                trap_mi
05b4 : 1003            >        bpl skip0025
                       >        trap            ;failed minus (bit 7 set)
05b6 : 20a543          >        jsr report_error
                       >
05b9 :                 >skip0025
                        
05b9 : e001                     cpx #1
                                trap_eq 
05bb : d003            >        bne skip0027
                       >        trap           ;failed equal (zero)
05bd : 20a543          >        jsr report_error
                       >
05c0 :                 >skip0027
                        
                                trap_cs
05c0 : 9003            >        bcc skip0029
                       >        trap            ;failed carry set
05c2 : 20a543          >        jsr report_error
                       >
05c5 :                 >skip0029
                        
                                trap_pl
05c5 : 3003            >        bmi skip0031
                       >        trap            ;failed plus (bit 7 clear)
05c7 : 20a543          >        jsr report_error
                       >
05ca :                 >skip0031
                        
05ca : a8                       tay 
05cb : c000                     cpy #0          ;test compare y immediate
                                trap_ne
05cd : f003            >        beq skip0033
                       >        trap            ;failed not equal (non zero)
05cf : 20a543          >        jsr report_error
                       >
05d2 :                 >skip0033
                        
                                trap_cc
05d2 : b003            >        bcs skip0035
                       >        trap            ;failed carry clear
05d4 : 20a543          >        jsr report_error
                       >
05d7 :                 >skip0035
                        
                                trap_mi
05d7 : 1003            >        bpl skip0037
                       >        trap            ;failed minus (bit 7 set)
05d9 : 20a543          >        jsr report_error
                       >
05dc :                 >skip0037
                        
05dc : c001                     cpy #1
                                trap_eq 
05de : d003            >        bne skip0039
                       >        trap           ;failed equal (zero)
05e0 : 20a543          >        jsr report_error
                       >
05e3 :                 >skip0039
                        
                                trap_cs
05e3 : 9003            >        bcc skip0041
                       >        trap            ;failed carry set
05e5 : 20a543          >        jsr report_error
                       >
05e8 :                 >skip0041
                        
                                trap_pl
05e8 : 3003            >        bmi skip0043
                       >        trap            ;failed plus (bit 7 clear)
05ea : 20a543          >        jsr report_error
                       >
05ed :                 >skip0043
                        
                                next_test
05ed : ad0002          >            lda test_case   ;previous test
05f0 : c902            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
05f2 : f003            >        beq skip0046
                       >        trap            ;failed not equal (non zero)
05f4 : 20a543          >        jsr report_error
                       >
05f7 :                 >skip0046
                       >
0003 =                 >test_num = test_num + 1
05f7 : a903            >            lda #test_num   ;*** next tests' number
05f9 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        ;testing stack operations PHA PHP PLA PLP
                                    
05fc : a2ff                     ldx #$ff        ;initialize stack
05fe : 9a                       txs
05ff : a955                     lda #$55
0601 : 48                       pha
0602 : a9aa                     lda #$aa
0604 : 48                       pha
0605 : cdfe01                   cmp $1fe        ;on stack ?
                                trap_ne
0608 : f003            >        beq skip0048
                       >        trap            ;failed not equal (non zero)
060a : 20a543          >        jsr report_error
                       >
060d :                 >skip0048
                        
060d : ba                       tsx
060e : 8a                       txa             ;overwrite accu
060f : c9fd                     cmp #$fd        ;sp decremented?
                                trap_ne
0611 : f003            >        beq skip0050
                       >        trap            ;failed not equal (non zero)
0613 : 20a543          >        jsr report_error
                       >
0616 :                 >skip0050
                        
0616 : 68                       pla
0617 : c9aa                     cmp #$aa        ;successful retreived from stack?
                                trap_ne
0619 : f003            >        beq skip0052
                       >        trap            ;failed not equal (non zero)
061b : 20a543          >        jsr report_error
                       >
061e :                 >skip0052
                        
061e : 68                       pla
061f : c955                     cmp #$55
                                trap_ne
0621 : f003            >        beq skip0054
                       >        trap            ;failed not equal (non zero)
0623 : 20a543          >        jsr report_error
                       >
0626 :                 >skip0054
                        
0626 : cdff01                   cmp $1ff        ;remains on stack?
                                trap_ne
0629 : f003            >        beq skip0056
                       >        trap            ;failed not equal (non zero)
062b : 20a543          >        jsr report_error
                       >
062e :                 >skip0056
                        
062e : ba                       tsx
062f : e0ff                     cpx #$ff        ;sp incremented?
                                trap_ne
0631 : f003            >        beq skip0058
                       >        trap            ;failed not equal (non zero)
0633 : 20a543          >        jsr report_error
                       >
0636 :                 >skip0058
                        
                                next_test
0636 : ad0002          >            lda test_case   ;previous test
0639 : c903            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
063b : f003            >        beq skip0061
                       >        trap            ;failed not equal (non zero)
063d : 20a543          >        jsr report_error
                       >
0640 :                 >skip0061
                       >
0004 =                 >test_num = test_num + 1
0640 : a904            >            lda #test_num   ;*** next tests' number
0642 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ;testing branch decisions BPL BMI BVC BVS BCC BCS BNE BEQ
                                set_stat $ff    ;all on
                       >            load_flag $ff    
0645 : a9ff            >            lda #$ff                 ;allow test to change I-flag (no mask)
                       >
0647 : 48              >            pha         ;use stack to load status
0648 : 28              >            plp
                        
0649 : 101a                     bpl nbr1        ;branches should not be taken
064b : 501b                     bvc nbr2
064d : 901c                     bcc nbr3
064f : d01d                     bne nbr4
0651 : 3003                     bmi br1         ;branches should be taken
                                trap 
0653 : 20a543          >        jsr report_error
                        
0656 : 7003             br1     bvs br2
                                trap 
0658 : 20a543          >        jsr report_error
                        
065b : b003             br2     bcs br3
                                trap 
065d : 20a543          >        jsr report_error
                        
0660 : f00f             br3     beq br4
                                trap 
0662 : 20a543          >        jsr report_error
                        
0665 :                  nbr1
                                trap            ;previous bpl taken 
0665 : 20a543          >        jsr report_error
                        
0668 :                  nbr2
                                trap            ;previous bvc taken
0668 : 20a543          >        jsr report_error
                        
066b :                  nbr3
                                trap            ;previous bcc taken
066b : 20a543          >        jsr report_error
                        
066e :                  nbr4
                                trap            ;previous bne taken
066e : 20a543          >        jsr report_error
                        
0671 : 08               br4     php
0672 : ba                       tsx
0673 : e0fe                     cpx #$fe        ;sp after php?
                                trap_ne
0675 : f003            >        beq skip0073
                       >        trap            ;failed not equal (non zero)
0677 : 20a543          >        jsr report_error
                       >
067a :                 >skip0073
                        
067a : 68                       pla
                                cmp_flag $ff    ;returned all flags on?
067b : c9ff            >            cmp #($ff    |fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
067d : f003            >        beq skip0076
                       >        trap            ;failed not equal (non zero)
067f : 20a543          >        jsr report_error
                       >
0682 :                 >skip0076
                        
0682 : ba                       tsx
0683 : e0ff                     cpx #$ff        ;sp after php?
                                trap_ne
0685 : f003            >        beq skip0078
                       >        trap            ;failed not equal (non zero)
0687 : 20a543          >        jsr report_error
                       >
068a :                 >skip0078
                        
                                set_stat 0      ;all off
                       >            load_flag 0      
068a : a900            >            lda #0                   ;allow test to change I-flag (no mask)
                       >
068c : 48              >            pha         ;use stack to load status
068d : 28              >            plp
                        
068e : 301a                     bmi nbr11       ;branches should not be taken
0690 : 701b                     bvs nbr12
0692 : b01c                     bcs nbr13
0694 : f01d                     beq nbr14
0696 : 1003                     bpl br11        ;branches should be taken
                                trap 
0698 : 20a543          >        jsr report_error
                        
069b : 5003             br11    bvc br12
                                trap 
069d : 20a543          >        jsr report_error
                        
06a0 : 9003             br12    bcc br13
                                trap 
06a2 : 20a543          >        jsr report_error
                        
06a5 : d00f             br13    bne br14
                                trap 
06a7 : 20a543          >        jsr report_error
                        
06aa :                  nbr11
                                trap            ;previous bmi taken 
06aa : 20a543          >        jsr report_error
                        
06ad :                  nbr12
                                trap            ;previous bvs taken 
06ad : 20a543          >        jsr report_error
                        
06b0 :                  nbr13
                                trap            ;previous bcs taken 
06b0 : 20a543          >        jsr report_error
                        
06b3 :                  nbr14
                                trap            ;previous beq taken 
06b3 : 20a543          >        jsr report_error
                        
06b6 : 08               br14    php
06b7 : 68                       pla
                                cmp_flag 0      ;flags off except break (pushed by sw) + reserved?
06b8 : c930            >            cmp #(0      |fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
06ba : f003            >        beq skip0091
                       >        trap            ;failed not equal (non zero)
06bc : 20a543          >        jsr report_error
                       >
06bf :                 >skip0091
                        
                                ;crosscheck flags
                                set_stat zero
                       >            load_flag zero
06bf : a902            >            lda #zero             ;allow test to change I-flag (no mask)
                       >
06c1 : 48              >            pha         ;use stack to load status
06c2 : 28              >            plp
                        
06c3 : d002                     bne brzs1
06c5 : f003                     beq brzs2
06c7 :                  brzs1
                                trap            ;branch zero/non zero
06c7 : 20a543          >        jsr report_error
                        
06ca : b002             brzs2   bcs brzs3
06cc : 9003                     bcc brzs4
06ce :                  brzs3
                                trap            ;branch carry/no carry
06ce : 20a543          >        jsr report_error
                        
06d1 : 3002             brzs4   bmi brzs5
06d3 : 1003                     bpl brzs6
06d5 :                  brzs5
                                trap            ;branch minus/plus
06d5 : 20a543          >        jsr report_error
                        
06d8 : 7002             brzs6   bvs brzs7
06da : 5003                     bvc brzs8
06dc :                  brzs7
                                trap            ;branch overflow/no overflow
06dc : 20a543          >        jsr report_error
                        
06df :                  brzs8
                                set_stat carry
                       >            load_flag carry
06df : a901            >            lda #carry             ;allow test to change I-flag (no mask)
                       >
06e1 : 48              >            pha         ;use stack to load status
06e2 : 28              >            plp
                        
06e3 : f002                     beq brcs1
06e5 : d003                     bne brcs2
06e7 :                  brcs1
                                trap            ;branch zero/non zero
06e7 : 20a543          >        jsr report_error
                        
06ea : 9002             brcs2   bcc brcs3
06ec : b003                     bcs brcs4
06ee :                  brcs3
                                trap            ;branch carry/no carry
06ee : 20a543          >        jsr report_error
                        
06f1 : 3002             brcs4   bmi brcs5
06f3 : 1003                     bpl brcs6
06f5 :                  brcs5
                                trap            ;branch minus/plus
06f5 : 20a543          >        jsr report_error
                        
06f8 : 7002             brcs6   bvs brcs7
06fa : 5003                     bvc brcs8
06fc :                  brcs7
                                trap            ;branch overflow/no overflow
06fc : 20a543          >        jsr report_error
                        
                        
06ff :                  brcs8
                                set_stat minus
                       >            load_flag minus
06ff : a980            >            lda #minus             ;allow test to change I-flag (no mask)
                       >
0701 : 48              >            pha         ;use stack to load status
0702 : 28              >            plp
                        
0703 : f002                     beq brmi1
0705 : d003                     bne brmi2
0707 :                  brmi1
                                trap            ;branch zero/non zero
0707 : 20a543          >        jsr report_error
                        
070a : b002             brmi2   bcs brmi3
070c : 9003                     bcc brmi4
070e :                  brmi3
                                trap            ;branch carry/no carry
070e : 20a543          >        jsr report_error
                        
0711 : 1002             brmi4   bpl brmi5
0713 : 3003                     bmi brmi6
0715 :                  brmi5
                                trap            ;branch minus/plus
0715 : 20a543          >        jsr report_error
                        
0718 : 7002             brmi6   bvs brmi7
071a : 5003                     bvc brmi8
071c :                  brmi7
                                trap            ;branch overflow/no overflow
071c : 20a543          >        jsr report_error
                        
071f :                  brmi8
                                set_stat overfl
                       >            load_flag overfl
071f : a940            >            lda #overfl             ;allow test to change I-flag (no mask)
                       >
0721 : 48              >            pha         ;use stack to load status
0722 : 28              >            plp
                        
0723 : f002                     beq brvs1
0725 : d003                     bne brvs2
0727 :                  brvs1
                                trap            ;branch zero/non zero
0727 : 20a543          >        jsr report_error
                        
072a : b002             brvs2   bcs brvs3
072c : 9003                     bcc brvs4
072e :                  brvs3
                                trap            ;branch carry/no carry
072e : 20a543          >        jsr report_error
                        
0731 : 3002             brvs4   bmi brvs5
0733 : 1003                     bpl brvs6
0735 :                  brvs5
                                trap            ;branch minus/plus
0735 : 20a543          >        jsr report_error
                        
0738 : 5002             brvs6   bvc brvs7
073a : 7003                     bvs brvs8
073c :                  brvs7
                                trap            ;branch overflow/no overflow
073c : 20a543          >        jsr report_error
                        
073f :                  brvs8
                                set_stat $ff-zero
                       >            load_flag $ff-zero
073f : a9fd            >            lda #$ff-zero             ;allow test to change I-flag (no mask)
                       >
0741 : 48              >            pha         ;use stack to load status
0742 : 28              >            plp
                        
0743 : f002                     beq brzc1
0745 : d003                     bne brzc2
0747 :                  brzc1
                                trap            ;branch zero/non zero
0747 : 20a543          >        jsr report_error
                        
074a : 9002             brzc2   bcc brzc3
074c : b003                     bcs brzc4
074e :                  brzc3
                                trap            ;branch carry/no carry
074e : 20a543          >        jsr report_error
                        
0751 : 1002             brzc4   bpl brzc5
0753 : 3003                     bmi brzc6
0755 :                  brzc5
                                trap            ;branch minus/plus
0755 : 20a543          >        jsr report_error
                        
0758 : 5002             brzc6   bvc brzc7
075a : 7003                     bvs brzc8
075c :                  brzc7
                                trap            ;branch overflow/no overflow
075c : 20a543          >        jsr report_error
                        
075f :                  brzc8
                                set_stat $ff-carry
                       >            load_flag $ff-carry
075f : a9fe            >            lda #$ff-carry             ;allow test to change I-flag (no mask)
                       >
0761 : 48              >            pha         ;use stack to load status
0762 : 28              >            plp
                        
0763 : d002                     bne brcc1
0765 : f003                     beq brcc2
0767 :                  brcc1
                                trap            ;branch zero/non zero
0767 : 20a543          >        jsr report_error
                        
076a : b002             brcc2   bcs brcc3
076c : 9003                     bcc brcc4
076e :                  brcc3
                                trap            ;branch carry/no carry
076e : 20a543          >        jsr report_error
                        
0771 : 1002             brcc4   bpl brcc5
0773 : 3003                     bmi brcc6
0775 :                  brcc5
                                trap            ;branch minus/plus
0775 : 20a543          >        jsr report_error
                        
0778 : 5002             brcc6   bvc brcc7
077a : 7003                     bvs brcc8
077c :                  brcc7
                                trap            ;branch overflow/no overflow
077c : 20a543          >        jsr report_error
                        
077f :                  brcc8
                                set_stat $ff-minus
                       >            load_flag $ff-minus
077f : a97f            >            lda #$ff-minus             ;allow test to change I-flag (no mask)
                       >
0781 : 48              >            pha         ;use stack to load status
0782 : 28              >            plp
                        
0783 : d002                     bne brpl1
0785 : f003                     beq brpl2
0787 :                  brpl1
                                trap            ;branch zero/non zero
0787 : 20a543          >        jsr report_error
                        
078a : 9002             brpl2   bcc brpl3
078c : b003                     bcs brpl4
078e :                  brpl3
                                trap            ;branch carry/no carry
078e : 20a543          >        jsr report_error
                        
0791 : 3002             brpl4   bmi brpl5
0793 : 1003                     bpl brpl6
0795 :                  brpl5
                                trap            ;branch minus/plus
0795 : 20a543          >        jsr report_error
                        
0798 : 5002             brpl6   bvc brpl7
079a : 7003                     bvs brpl8
079c :                  brpl7
                                trap            ;branch overflow/no overflow
079c : 20a543          >        jsr report_error
                        
079f :                  brpl8
                                set_stat $ff-overfl
                       >            load_flag $ff-overfl
079f : a9bf            >            lda #$ff-overfl             ;allow test to change I-flag (no mask)
                       >
07a1 : 48              >            pha         ;use stack to load status
07a2 : 28              >            plp
                        
07a3 : d002                     bne brvc1
07a5 : f003                     beq brvc2
07a7 :                  brvc1
                                trap            ;branch zero/non zero
07a7 : 20a543          >        jsr report_error
                        
07aa : 9002             brvc2   bcc brvc3
07ac : b003                     bcs brvc4
07ae :                  brvc3
                                trap            ;branch carry/no carry
07ae : 20a543          >        jsr report_error
                        
07b1 : 1002             brvc4   bpl brvc5
07b3 : 3003                     bmi brvc6
07b5 :                  brvc5
                                trap            ;branch minus/plus
07b5 : 20a543          >        jsr report_error
                        
07b8 : 7002             brvc6   bvs brvc7
07ba : 5003                     bvc brvc8
07bc :                  brvc7
                                trap            ;branch overflow/no overflow
07bc : 20a543          >        jsr report_error
                        
07bf :                  brvc8
                                next_test
07bf : ad0002          >            lda test_case   ;previous test
07c2 : c904            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
07c4 : f003            >        beq skip0142
                       >        trap            ;failed not equal (non zero)
07c6 : 20a543          >        jsr report_error
                       >
07c9 :                 >skip0142
                       >
0005 =                 >test_num = test_num + 1
07c9 : a905            >            lda #test_num   ;*** next tests' number
07cb : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; test PHA does not alter flags or accumulator but PLA does
07ce : a255                     ldx #$55        ;x & y protected
07d0 : a0aa                     ldy #$aa
                                set_a 1,$ff     ;push
                       >            load_flag $ff     
07d2 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
07d4 : 48              >            pha         ;use stack to load status
07d5 : a901            >            lda #1     ;precharge accu
07d7 : 28              >            plp
                        
07d8 : 48                       pha
                                tst_a 1,$ff
07d9 : 08              >            php         ;save flags
07da : c901            >            cmp #1     ;test result
                       >            trap_ne
07dc : f003            >        beq skip0147
                       >        trap            ;failed not equal (non zero)
07de : 20a543          >        jsr report_error
                       >
07e1 :                 >skip0147
                       >
07e1 : 68              >            pla         ;load status
07e2 : 48              >            pha
                       >            cmp_flag $ff
07e3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
07e5 : f003            >        beq skip0150
                       >        trap            ;failed not equal (non zero)
07e7 : 20a543          >        jsr report_error
                       >
07ea :                 >skip0150
                       >
07ea : 28              >            plp         ;restore status
                        
                                set_a 0,0
                       >            load_flag 0
07eb : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
07ed : 48              >            pha         ;use stack to load status
07ee : a900            >            lda #0     ;precharge accu
07f0 : 28              >            plp
                        
07f1 : 48                       pha
                                tst_a 0,0
07f2 : 08              >            php         ;save flags
07f3 : c900            >            cmp #0     ;test result
                       >            trap_ne
07f5 : f003            >        beq skip0155
                       >        trap            ;failed not equal (non zero)
07f7 : 20a543          >        jsr report_error
                       >
07fa :                 >skip0155
                       >
07fa : 68              >            pla         ;load status
07fb : 48              >            pha
                       >            cmp_flag 0
07fc : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
07fe : f003            >        beq skip0158
                       >        trap            ;failed not equal (non zero)
0800 : 20a543          >        jsr report_error
                       >
0803 :                 >skip0158
                       >
0803 : 28              >            plp         ;restore status
                        
                                set_a $ff,$ff
                       >            load_flag $ff
0804 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
0806 : 48              >            pha         ;use stack to load status
0807 : a9ff            >            lda #$ff     ;precharge accu
0809 : 28              >            plp
                        
080a : 48                       pha
                                tst_a $ff,$ff
080b : 08              >            php         ;save flags
080c : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
080e : f003            >        beq skip0163
                       >        trap            ;failed not equal (non zero)
0810 : 20a543          >        jsr report_error
                       >
0813 :                 >skip0163
                       >
0813 : 68              >            pla         ;load status
0814 : 48              >            pha
                       >            cmp_flag $ff
0815 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0817 : f003            >        beq skip0166
                       >        trap            ;failed not equal (non zero)
0819 : 20a543          >        jsr report_error
                       >
081c :                 >skip0166
                       >
081c : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
081d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
081f : 48              >            pha         ;use stack to load status
0820 : a901            >            lda #1     ;precharge accu
0822 : 28              >            plp
                        
0823 : 48                       pha
                                tst_a 1,0
0824 : 08              >            php         ;save flags
0825 : c901            >            cmp #1     ;test result
                       >            trap_ne
0827 : f003            >        beq skip0171
                       >        trap            ;failed not equal (non zero)
0829 : 20a543          >        jsr report_error
                       >
082c :                 >skip0171
                       >
082c : 68              >            pla         ;load status
082d : 48              >            pha
                       >            cmp_flag 0
082e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0830 : f003            >        beq skip0174
                       >        trap            ;failed not equal (non zero)
0832 : 20a543          >        jsr report_error
                       >
0835 :                 >skip0174
                       >
0835 : 28              >            plp         ;restore status
                        
                                set_a 0,$ff
                       >            load_flag $ff
0836 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
0838 : 48              >            pha         ;use stack to load status
0839 : a900            >            lda #0     ;precharge accu
083b : 28              >            plp
                        
083c : 48                       pha
                                tst_a 0,$ff
083d : 08              >            php         ;save flags
083e : c900            >            cmp #0     ;test result
                       >            trap_ne
0840 : f003            >        beq skip0179
                       >        trap            ;failed not equal (non zero)
0842 : 20a543          >        jsr report_error
                       >
0845 :                 >skip0179
                       >
0845 : 68              >            pla         ;load status
0846 : 48              >            pha
                       >            cmp_flag $ff
0847 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0849 : f003            >        beq skip0182
                       >        trap            ;failed not equal (non zero)
084b : 20a543          >        jsr report_error
                       >
084e :                 >skip0182
                       >
084e : 28              >            plp         ;restore status
                        
                                set_a $ff,0
                       >            load_flag 0
084f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
0851 : 48              >            pha         ;use stack to load status
0852 : a9ff            >            lda #$ff     ;precharge accu
0854 : 28              >            plp
                        
0855 : 48                       pha
                                tst_a $ff,0
0856 : 08              >            php         ;save flags
0857 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
0859 : f003            >        beq skip0187
                       >        trap            ;failed not equal (non zero)
085b : 20a543          >        jsr report_error
                       >
085e :                 >skip0187
                       >
085e : 68              >            pla         ;load status
085f : 48              >            pha
                       >            cmp_flag 0
0860 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0862 : f003            >        beq skip0190
                       >        trap            ;failed not equal (non zero)
0864 : 20a543          >        jsr report_error
                       >
0867 :                 >skip0190
                       >
0867 : 28              >            plp         ;restore status
                        
                                set_a 0,$ff     ;pull
                       >            load_flag $ff     
0868 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
086a : 48              >            pha         ;use stack to load status
086b : a900            >            lda #0     ;precharge accu
086d : 28              >            plp
                        
086e : 68                       pla
                                tst_a $ff,$ff-zero
086f : 08              >            php         ;save flags
0870 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
0872 : f003            >        beq skip0195
                       >        trap            ;failed not equal (non zero)
0874 : 20a543          >        jsr report_error
                       >
0877 :                 >skip0195
                       >
0877 : 68              >            pla         ;load status
0878 : 48              >            pha
                       >            cmp_flag $ff-zero
0879 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
087b : f003            >        beq skip0198
                       >        trap            ;failed not equal (non zero)
087d : 20a543          >        jsr report_error
                       >
0880 :                 >skip0198
                       >
0880 : 28              >            plp         ;restore status
                        
                                set_a $ff,0
                       >            load_flag 0
0881 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
0883 : 48              >            pha         ;use stack to load status
0884 : a9ff            >            lda #$ff     ;precharge accu
0886 : 28              >            plp
                        
0887 : 68                       pla
                                tst_a 0,zero
0888 : 08              >            php         ;save flags
0889 : c900            >            cmp #0     ;test result
                       >            trap_ne
088b : f003            >        beq skip0203
                       >        trap            ;failed not equal (non zero)
088d : 20a543          >        jsr report_error
                       >
0890 :                 >skip0203
                       >
0890 : 68              >            pla         ;load status
0891 : 48              >            pha
                       >            cmp_flag zero
0892 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0894 : f003            >        beq skip0206
                       >        trap            ;failed not equal (non zero)
0896 : 20a543          >        jsr report_error
                       >
0899 :                 >skip0206
                       >
0899 : 28              >            plp         ;restore status
                        
                                set_a $fe,$ff
                       >            load_flag $ff
089a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
089c : 48              >            pha         ;use stack to load status
089d : a9fe            >            lda #$fe     ;precharge accu
089f : 28              >            plp
                        
08a0 : 68                       pla
                                tst_a 1,$ff-zero-minus
08a1 : 08              >            php         ;save flags
08a2 : c901            >            cmp #1     ;test result
                       >            trap_ne
08a4 : f003            >        beq skip0211
                       >        trap            ;failed not equal (non zero)
08a6 : 20a543          >        jsr report_error
                       >
08a9 :                 >skip0211
                       >
08a9 : 68              >            pla         ;load status
08aa : 48              >            pha
                       >            cmp_flag $ff-zero-minus
08ab : c97d            >            cmp #($ff-zero-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
08ad : f003            >        beq skip0214
                       >        trap            ;failed not equal (non zero)
08af : 20a543          >        jsr report_error
                       >
08b2 :                 >skip0214
                       >
08b2 : 28              >            plp         ;restore status
                        
                                set_a 0,0
                       >            load_flag 0
08b3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
08b5 : 48              >            pha         ;use stack to load status
08b6 : a900            >            lda #0     ;precharge accu
08b8 : 28              >            plp
                        
08b9 : 68                       pla
                                tst_a $ff,minus
08ba : 08              >            php         ;save flags
08bb : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
08bd : f003            >        beq skip0219
                       >        trap            ;failed not equal (non zero)
08bf : 20a543          >        jsr report_error
                       >
08c2 :                 >skip0219
                       >
08c2 : 68              >            pla         ;load status
08c3 : 48              >            pha
                       >            cmp_flag minus
08c4 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
08c6 : f003            >        beq skip0222
                       >        trap            ;failed not equal (non zero)
08c8 : 20a543          >        jsr report_error
                       >
08cb :                 >skip0222
                       >
08cb : 28              >            plp         ;restore status
                        
                                set_a $ff,$ff
                       >            load_flag $ff
08cc : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
08ce : 48              >            pha         ;use stack to load status
08cf : a9ff            >            lda #$ff     ;precharge accu
08d1 : 28              >            plp
                        
08d2 : 68                       pla
                                tst_a 0,$ff-minus
08d3 : 08              >            php         ;save flags
08d4 : c900            >            cmp #0     ;test result
                       >            trap_ne
08d6 : f003            >        beq skip0227
                       >        trap            ;failed not equal (non zero)
08d8 : 20a543          >        jsr report_error
                       >
08db :                 >skip0227
                       >
08db : 68              >            pla         ;load status
08dc : 48              >            pha
                       >            cmp_flag $ff-minus
08dd : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
08df : f003            >        beq skip0230
                       >        trap            ;failed not equal (non zero)
08e1 : 20a543          >        jsr report_error
                       >
08e4 :                 >skip0230
                       >
08e4 : 28              >            plp         ;restore status
                        
                                set_a $fe,0
                       >            load_flag 0
08e5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
08e7 : 48              >            pha         ;use stack to load status
08e8 : a9fe            >            lda #$fe     ;precharge accu
08ea : 28              >            plp
                        
08eb : 68                       pla
                                tst_a 1,0
08ec : 08              >            php         ;save flags
08ed : c901            >            cmp #1     ;test result
                       >            trap_ne
08ef : f003            >        beq skip0235
                       >        trap            ;failed not equal (non zero)
08f1 : 20a543          >        jsr report_error
                       >
08f4 :                 >skip0235
                       >
08f4 : 68              >            pla         ;load status
08f5 : 48              >            pha
                       >            cmp_flag 0
08f6 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
08f8 : f003            >        beq skip0238
                       >        trap            ;failed not equal (non zero)
08fa : 20a543          >        jsr report_error
                       >
08fd :                 >skip0238
                       >
08fd : 28              >            plp         ;restore status
                        
08fe : e055                     cpx #$55        ;x & y unchanged?
                                trap_ne
0900 : f003            >        beq skip0240
                       >        trap            ;failed not equal (non zero)
0902 : 20a543          >        jsr report_error
                       >
0905 :                 >skip0240
                        
0905 : c0aa                     cpy #$aa
                                trap_ne
0907 : f003            >        beq skip0242
                       >        trap            ;failed not equal (non zero)
0909 : 20a543          >        jsr report_error
                       >
090c :                 >skip0242
                        
                                next_test
090c : ad0002          >            lda test_case   ;previous test
090f : c905            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
0911 : f003            >        beq skip0245
                       >        trap            ;failed not equal (non zero)
0913 : 20a543          >        jsr report_error
                       >
0916 :                 >skip0245
                       >
0006 =                 >test_num = test_num + 1
0916 : a906            >            lda #test_num   ;*** next tests' number
0918 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                         
                        ; partial pretest EOR #
                                set_a $3c,0
                       >            load_flag 0
091b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
091d : 48              >            pha         ;use stack to load status
091e : a93c            >            lda #$3c     ;precharge accu
0920 : 28              >            plp
                        
0921 : 49c3                     eor #$c3
                                tst_a $ff,fn
0923 : 08              >            php         ;save flags
0924 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
0926 : f003            >        beq skip0250
                       >        trap            ;failed not equal (non zero)
0928 : 20a543          >        jsr report_error
                       >
092b :                 >skip0250
                       >
092b : 68              >            pla         ;load status
092c : 48              >            pha
                       >            cmp_flag fn
092d : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
092f : f003            >        beq skip0253
                       >        trap            ;failed not equal (non zero)
0931 : 20a543          >        jsr report_error
                       >
0934 :                 >skip0253
                       >
0934 : 28              >            plp         ;restore status
                        
                                set_a $c3,0
                       >            load_flag 0
0935 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
0937 : 48              >            pha         ;use stack to load status
0938 : a9c3            >            lda #$c3     ;precharge accu
093a : 28              >            plp
                        
093b : 49c3                     eor #$c3
                                tst_a 0,fz
093d : 08              >            php         ;save flags
093e : c900            >            cmp #0     ;test result
                       >            trap_ne
0940 : f003            >        beq skip0258
                       >        trap            ;failed not equal (non zero)
0942 : 20a543          >        jsr report_error
                       >
0945 :                 >skip0258
                       >
0945 : 68              >            pla         ;load status
0946 : 48              >            pha
                       >            cmp_flag fz
0947 : c932            >            cmp #(fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0949 : f003            >        beq skip0261
                       >        trap            ;failed not equal (non zero)
094b : 20a543          >        jsr report_error
                       >
094e :                 >skip0261
                       >
094e : 28              >            plp         ;restore status
                        
                                next_test
094f : ad0002          >            lda test_case   ;previous test
0952 : c906            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
0954 : f003            >        beq skip0264
                       >        trap            ;failed not equal (non zero)
0956 : 20a543          >        jsr report_error
                       >
0959 :                 >skip0264
                       >
0007 =                 >test_num = test_num + 1
0959 : a907            >            lda #test_num   ;*** next tests' number
095b : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; PC modifying instructions except branches (NOP, JMP, JSR, RTS, BRK, RTI)
                        ; testing NOP
095e : a224                     ldx #$24
0960 : a042                     ldy #$42
                                set_a $18,0
                       >            load_flag 0
0962 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
0964 : 48              >            pha         ;use stack to load status
0965 : a918            >            lda #$18     ;precharge accu
0967 : 28              >            plp
                        
0968 : ea                       nop
                                tst_a $18,0
0969 : 08              >            php         ;save flags
096a : c918            >            cmp #$18     ;test result
                       >            trap_ne
096c : f003            >        beq skip0269
                       >        trap            ;failed not equal (non zero)
096e : 20a543          >        jsr report_error
                       >
0971 :                 >skip0269
                       >
0971 : 68              >            pla         ;load status
0972 : 48              >            pha
                       >            cmp_flag 0
0973 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0975 : f003            >        beq skip0272
                       >        trap            ;failed not equal (non zero)
0977 : 20a543          >        jsr report_error
                       >
097a :                 >skip0272
                       >
097a : 28              >            plp         ;restore status
                        
097b : e024                     cpx #$24
                                trap_ne
097d : f003            >        beq skip0274
                       >        trap            ;failed not equal (non zero)
097f : 20a543          >        jsr report_error
                       >
0982 :                 >skip0274
                        
0982 : c042                     cpy #$42
                                trap_ne
0984 : f003            >        beq skip0276
                       >        trap            ;failed not equal (non zero)
0986 : 20a543          >        jsr report_error
                       >
0989 :                 >skip0276
                        
0989 : a2db                     ldx #$db
098b : a0bd                     ldy #$bd
                                set_a $e7,$ff
                       >            load_flag $ff
098d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
098f : 48              >            pha         ;use stack to load status
0990 : a9e7            >            lda #$e7     ;precharge accu
0992 : 28              >            plp
                        
0993 : ea                       nop
                                tst_a $e7,$ff
0994 : 08              >            php         ;save flags
0995 : c9e7            >            cmp #$e7     ;test result
                       >            trap_ne
0997 : f003            >        beq skip0281
                       >        trap            ;failed not equal (non zero)
0999 : 20a543          >        jsr report_error
                       >
099c :                 >skip0281
                       >
099c : 68              >            pla         ;load status
099d : 48              >            pha
                       >            cmp_flag $ff
099e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
09a0 : f003            >        beq skip0284
                       >        trap            ;failed not equal (non zero)
09a2 : 20a543          >        jsr report_error
                       >
09a5 :                 >skip0284
                       >
09a5 : 28              >            plp         ;restore status
                        
09a6 : e0db                     cpx #$db
                                trap_ne
09a8 : f003            >        beq skip0286
                       >        trap            ;failed not equal (non zero)
09aa : 20a543          >        jsr report_error
                       >
09ad :                 >skip0286
                        
09ad : c0bd                     cpy #$bd
                                trap_ne
09af : f003            >        beq skip0288
                       >        trap            ;failed not equal (non zero)
09b1 : 20a543          >        jsr report_error
                       >
09b4 :                 >skip0288
                        
                                next_test
09b4 : ad0002          >            lda test_case   ;previous test
09b7 : c907            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
09b9 : f003            >        beq skip0291
                       >        trap            ;failed not equal (non zero)
09bb : 20a543          >        jsr report_error
                       >
09be :                 >skip0291
                       >
0008 =                 >test_num = test_num + 1
09be : a908            >            lda #test_num   ;*** next tests' number
09c0 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                        ; jump absolute
                                set_stat $0
                       >            load_flag $0
09c3 : a900            >            lda #$0             ;allow test to change I-flag (no mask)
                       >
09c5 : 48              >            pha         ;use stack to load status
09c6 : 28              >            plp
                        
09c7 : a946                     lda #'F'
09c9 : a241                     ldx #'A'
09cb : a052                     ldy #'R'        ;N=0, V=0, Z=0, C=0
09cd : 4c3e42                   jmp test_far
09d0 : ea                       nop
09d1 : ea                       nop
                                trap_ne         ;runover protection
09d2 : f003            >        beq skip0295
                       >        trap            ;failed not equal (non zero)
09d4 : 20a543          >        jsr report_error
                       >
09d7 :                 >skip0295
                        
09d7 : e8                       inx
09d8 : e8                       inx
09d9 :                  far_ret 
                                trap_eq         ;returned flags OK?
09d9 : d003            >        bne skip0297
                       >        trap           ;failed equal (zero)
09db : 20a543          >        jsr report_error
                       >
09de :                 >skip0297
                        
                                trap_pl
09de : 3003            >        bmi skip0299
                       >        trap            ;failed plus (bit 7 clear)
09e0 : 20a543          >        jsr report_error
                       >
09e3 :                 >skip0299
                        
                                trap_cc
09e3 : b003            >        bcs skip0301
                       >        trap            ;failed carry clear
09e5 : 20a543          >        jsr report_error
                       >
09e8 :                 >skip0301
                        
                                trap_vc
09e8 : 7003            >        bvs skip0303
                       >        trap            ;failed overflow clear
09ea : 20a543          >        jsr report_error
                       >
09ed :                 >skip0303
                        
09ed : c9ec                     cmp #('F'^$aa)  ;returned registers OK?
                                trap_ne
09ef : f003            >        beq skip0305
                       >        trap            ;failed not equal (non zero)
09f1 : 20a543          >        jsr report_error
                       >
09f4 :                 >skip0305
                        
09f4 : e042                     cpx #('A'+1)
                                trap_ne
09f6 : f003            >        beq skip0307
                       >        trap            ;failed not equal (non zero)
09f8 : 20a543          >        jsr report_error
                       >
09fb :                 >skip0307
                        
09fb : c04f                     cpy #('R'-3)
                                trap_ne
09fd : f003            >        beq skip0309
                       >        trap            ;failed not equal (non zero)
09ff : 20a543          >        jsr report_error
                       >
0a02 :                 >skip0309
                        
0a02 : ca                       dex
0a03 : c8                       iny
0a04 : c8                       iny
0a05 : c8                       iny
0a06 : 49aa                     eor #$aa        ;N=0, V=1, Z=0, C=1
0a08 : 4c140a                   jmp test_near
0a0b : ea                       nop
0a0c : ea                       nop
                                trap_ne         ;runover protection
0a0d : f003            >        beq skip0311
                       >        trap            ;failed not equal (non zero)
0a0f : 20a543          >        jsr report_error
                       >
0a12 :                 >skip0311
                        
0a12 : e8                       inx
0a13 : e8                       inx
0a14 :                  test_near
                                trap_eq         ;passed flags OK?
0a14 : d003            >        bne skip0313
                       >        trap           ;failed equal (zero)
0a16 : 20a543          >        jsr report_error
                       >
0a19 :                 >skip0313
                        
                                trap_mi
0a19 : 1003            >        bpl skip0315
                       >        trap            ;failed minus (bit 7 set)
0a1b : 20a543          >        jsr report_error
                       >
0a1e :                 >skip0315
                        
                                trap_cc
0a1e : b003            >        bcs skip0317
                       >        trap            ;failed carry clear
0a20 : 20a543          >        jsr report_error
                       >
0a23 :                 >skip0317
                        
                                trap_vc
0a23 : 7003            >        bvs skip0319
                       >        trap            ;failed overflow clear
0a25 : 20a543          >        jsr report_error
                       >
0a28 :                 >skip0319
                        
0a28 : c946                     cmp #'F'        ;passed registers OK?
                                trap_ne
0a2a : f003            >        beq skip0321
                       >        trap            ;failed not equal (non zero)
0a2c : 20a543          >        jsr report_error
                       >
0a2f :                 >skip0321
                        
0a2f : e041                     cpx #'A'
                                trap_ne
0a31 : f003            >        beq skip0323
                       >        trap            ;failed not equal (non zero)
0a33 : 20a543          >        jsr report_error
                       >
0a36 :                 >skip0323
                        
0a36 : c052                     cpy #'R'
                                trap_ne
0a38 : f003            >        beq skip0325
                       >        trap            ;failed not equal (non zero)
0a3a : 20a543          >        jsr report_error
                       >
0a3d :                 >skip0325
                        
                                next_test
0a3d : ad0002          >            lda test_case   ;previous test
0a40 : c908            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
0a42 : f003            >        beq skip0328
                       >        trap            ;failed not equal (non zero)
0a44 : 20a543          >        jsr report_error
                       >
0a47 :                 >skip0328
                       >
0009 =                 >test_num = test_num + 1
0a47 : a909            >            lda #test_num   ;*** next tests' number
0a49 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                        ; jump indirect
                                set_stat 0
                       >            load_flag 0
0a4c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
0a4e : 48              >            pha         ;use stack to load status
0a4f : 28              >            plp
                        
0a50 : a949                     lda #'I'
0a52 : a24e                     ldx #'N'
0a54 : a044                     ldy #'D'        ;N=0, V=0, Z=0, C=0
0a56 : 6c8442                   jmp (ptr_tst_ind)
0a59 : ea                       nop
                                trap_ne         ;runover protection
0a5a : f003            >        beq skip0332
                       >        trap            ;failed not equal (non zero)
0a5c : 20a543          >        jsr report_error
                       >
0a5f :                 >skip0332
                        
0a5f : 88                       dey
0a60 : 88                       dey
0a61 :                  ind_ret 
0a61 : 08                       php             ;either SP or Y count will fail, if we do not hit
0a62 : 88                       dey
0a63 : 88                       dey
0a64 : 88                       dey
0a65 : 28                       plp
                                trap_eq         ;returned flags OK?
0a66 : d003            >        bne skip0334
                       >        trap           ;failed equal (zero)
0a68 : 20a543          >        jsr report_error
                       >
0a6b :                 >skip0334
                        
                                trap_pl
0a6b : 3003            >        bmi skip0336
                       >        trap            ;failed plus (bit 7 clear)
0a6d : 20a543          >        jsr report_error
                       >
0a70 :                 >skip0336
                        
                                trap_cc
0a70 : b003            >        bcs skip0338
                       >        trap            ;failed carry clear
0a72 : 20a543          >        jsr report_error
                       >
0a75 :                 >skip0338
                        
                                trap_vc
0a75 : 7003            >        bvs skip0340
                       >        trap            ;failed overflow clear
0a77 : 20a543          >        jsr report_error
                       >
0a7a :                 >skip0340
                        
0a7a : c9e3                     cmp #('I'^$aa)  ;returned registers OK?
                                trap_ne
0a7c : f003            >        beq skip0342
                       >        trap            ;failed not equal (non zero)
0a7e : 20a543          >        jsr report_error
                       >
0a81 :                 >skip0342
                        
0a81 : e04f                     cpx #('N'+1)
                                trap_ne
0a83 : f003            >        beq skip0344
                       >        trap            ;failed not equal (non zero)
0a85 : 20a543          >        jsr report_error
                       >
0a88 :                 >skip0344
                        
0a88 : c03e                     cpy #('D'-6)
                                trap_ne
0a8a : f003            >        beq skip0346
                       >        trap            ;failed not equal (non zero)
0a8c : 20a543          >        jsr report_error
                       >
0a8f :                 >skip0346
                        
0a8f : ba                       tsx             ;SP check
0a90 : e0ff                     cpx #$ff
                                trap_ne
0a92 : f003            >        beq skip0348
                       >        trap            ;failed not equal (non zero)
0a94 : 20a543          >        jsr report_error
                       >
0a97 :                 >skip0348
                        
                                next_test
0a97 : ad0002          >            lda test_case   ;previous test
0a9a : c909            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
0a9c : f003            >        beq skip0351
                       >        trap            ;failed not equal (non zero)
0a9e : 20a543          >        jsr report_error
                       >
0aa1 :                 >skip0351
                       >
000a =                 >test_num = test_num + 1
0aa1 : a90a            >            lda #test_num   ;*** next tests' number
0aa3 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; jump subroutine & return from subroutine
                                set_stat 0
                       >            load_flag 0
0aa6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
0aa8 : 48              >            pha         ;use stack to load status
0aa9 : 28              >            plp
                        
0aaa : a94a                     lda #'J'
0aac : a253                     ldx #'S'
0aae : a052                     ldy #'R'        ;N=0, V=0, Z=0, C=0
0ab0 : 20d842                   jsr test_jsr
0ab2 =                  jsr_ret = *-1           ;last address of jsr = return address
0ab3 : 08                       php             ;either SP or Y count will fail, if we do not hit
0ab4 : 88                       dey
0ab5 : 88                       dey
0ab6 : 88                       dey
0ab7 : 28                       plp
                                trap_eq         ;returned flags OK?
0ab8 : d003            >        bne skip0355
                       >        trap           ;failed equal (zero)
0aba : 20a543          >        jsr report_error
                       >
0abd :                 >skip0355
                        
                                trap_pl
0abd : 3003            >        bmi skip0357
                       >        trap            ;failed plus (bit 7 clear)
0abf : 20a543          >        jsr report_error
                       >
0ac2 :                 >skip0357
                        
                                trap_cc
0ac2 : b003            >        bcs skip0359
                       >        trap            ;failed carry clear
0ac4 : 20a543          >        jsr report_error
                       >
0ac7 :                 >skip0359
                        
                                trap_vc
0ac7 : 7003            >        bvs skip0361
                       >        trap            ;failed overflow clear
0ac9 : 20a543          >        jsr report_error
                       >
0acc :                 >skip0361
                        
0acc : c9e0                     cmp #('J'^$aa)  ;returned registers OK?
                                trap_ne
0ace : f003            >        beq skip0363
                       >        trap            ;failed not equal (non zero)
0ad0 : 20a543          >        jsr report_error
                       >
0ad3 :                 >skip0363
                        
0ad3 : e054                     cpx #('S'+1)
                                trap_ne
0ad5 : f003            >        beq skip0365
                       >        trap            ;failed not equal (non zero)
0ad7 : 20a543          >        jsr report_error
                       >
0ada :                 >skip0365
                        
0ada : c04c                     cpy #('R'-6)
                                trap_ne
0adc : f003            >        beq skip0367
                       >        trap            ;failed not equal (non zero)
0ade : 20a543          >        jsr report_error
                       >
0ae1 :                 >skip0367
                        
0ae1 : ba                       tsx             ;sp?
0ae2 : e0ff                     cpx #$ff
                                trap_ne
0ae4 : f003            >        beq skip0369
                       >        trap            ;failed not equal (non zero)
0ae6 : 20a543          >        jsr report_error
                       >
0ae9 :                 >skip0369
                        
                                next_test
0ae9 : ad0002          >            lda test_case   ;previous test
0aec : c90a            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
0aee : f003            >        beq skip0372
                       >        trap            ;failed not equal (non zero)
0af0 : 20a543          >        jsr report_error
                       >
0af3 :                 >skip0372
                       >
000b =                 >test_num = test_num + 1
0af3 : a90b            >            lda #test_num   ;*** next tests' number
0af5 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; break & return from interrupt
                            if ROM_vectors = 1
                                set_stat 0
                                lda #'B'
                                ldx #'R'
                                ldy #'K'        ;N=0, V=0, Z=0, C=0
                                brk
                            else
0af8 : a90b                     lda #hi brk_ret ;emulated break
0afa : 48                       pha
0afb : a90f                     lda #lo brk_ret
0afd : 48                       pha
0afe : a930                     lda #fao        ;set break & unused on stack
0b00 : 48                       pha
                                set_stat intdis
                       >            load_flag intdis
0b01 : a904            >            lda #intdis             ;allow test to change I-flag (no mask)
                       >
0b03 : 48              >            pha         ;use stack to load status
0b04 : 28              >            plp
                        
0b05 : a942                     lda #'B'
0b07 : a252                     ldx #'R'
0b09 : a04b                     ldy #'K'        ;N=0, V=0, Z=0, C=0
0b0b : 4c3b43                   jmp irq_trap
                            endif
0b0e : 88                       dey             ;should not be executed
0b0f :                  brk_ret                 ;address of break return
0b0f : 08                       php             ;either SP or Y count will fail, if we do not hit
0b10 : 88                       dey
0b11 : 88                       dey
0b12 : 88                       dey
0b13 : c9e8                     cmp #('B'^$aa)  ;returned registers OK?
                                trap_ne
0b15 : f003            >        beq skip0376
                       >        trap            ;failed not equal (non zero)
0b17 : 20a543          >        jsr report_error
                       >
0b1a :                 >skip0376
                        
0b1a : e053                     cpx #('R'+1)
                                trap_ne
0b1c : f003            >        beq skip0378
                       >        trap            ;failed not equal (non zero)
0b1e : 20a543          >        jsr report_error
                       >
0b21 :                 >skip0378
                        
0b21 : c045                     cpy #('K'-6)
                                trap_ne
0b23 : f003            >        beq skip0380
                       >        trap            ;failed not equal (non zero)
0b25 : 20a543          >        jsr report_error
                       >
0b28 :                 >skip0380
                        
0b28 : 68                       pla             ;returned flags OK (unchanged)?
                                cmp_flag 0
0b29 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
0b2b : f003            >        beq skip0383
                       >        trap            ;failed not equal (non zero)
0b2d : 20a543          >        jsr report_error
                       >
0b30 :                 >skip0383
                        
0b30 : ba                       tsx             ;sp?
0b31 : e0ff                     cpx #$ff
                                trap_ne
0b33 : f003            >        beq skip0385
                       >        trap            ;failed not equal (non zero)
0b35 : 20a543          >        jsr report_error
                       >
0b38 :                 >skip0385
                        
                                next_test
0b38 : ad0002          >            lda test_case   ;previous test
0b3b : c90b            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
0b3d : f003            >        beq skip0388
                       >        trap            ;failed not equal (non zero)
0b3f : 20a543          >        jsr report_error
                       >
0b42 :                 >skip0388
                       >
000c =                 >test_num = test_num + 1
0b42 : a90c            >            lda #test_num   ;*** next tests' number
0b44 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                         
                        ; test set and clear flags CLC CLI CLD CLV SEC SEI SED
                                set_stat $ff
                       >            load_flag $ff
0b47 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
0b49 : 48              >            pha         ;use stack to load status
0b4a : 28              >            plp
                        
0b4b : 18                       clc
                                tst_stat $ff-carry
0b4c : 08              >            php         ;save status
0b4d : 68              >            pla         ;use stack to retrieve status
0b4e : 48              >            pha
                       >            cmp_flag $ff-carry
0b4f : c9fe            >            cmp #($ff-carry|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0b51 : f003            >        beq skip0394
                       >        trap            ;failed not equal (non zero)
0b53 : 20a543          >        jsr report_error
                       >
0b56 :                 >skip0394
                       >
0b56 : 28              >            plp         ;restore status
                        
0b57 : 38                       sec
                                tst_stat $ff
0b58 : 08              >            php         ;save status
0b59 : 68              >            pla         ;use stack to retrieve status
0b5a : 48              >            pha
                       >            cmp_flag $ff
0b5b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0b5d : f003            >        beq skip0398
                       >        trap            ;failed not equal (non zero)
0b5f : 20a543          >        jsr report_error
                       >
0b62 :                 >skip0398
                       >
0b62 : 28              >            plp         ;restore status
                        
                            if I_flag = 3
0b63 : 58                       cli
                                tst_stat $ff-intdis
0b64 : 08              >            php         ;save status
0b65 : 68              >            pla         ;use stack to retrieve status
0b66 : 48              >            pha
                       >            cmp_flag $ff-intdis
0b67 : c9fb            >            cmp #($ff-intdis|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0b69 : f003            >        beq skip0402
                       >        trap            ;failed not equal (non zero)
0b6b : 20a543          >        jsr report_error
                       >
0b6e :                 >skip0402
                       >
0b6e : 28              >            plp         ;restore status
                        
0b6f : 78                       sei
                                tst_stat $ff
0b70 : 08              >            php         ;save status
0b71 : 68              >            pla         ;use stack to retrieve status
0b72 : 48              >            pha
                       >            cmp_flag $ff
0b73 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0b75 : f003            >        beq skip0406
                       >        trap            ;failed not equal (non zero)
0b77 : 20a543          >        jsr report_error
                       >
0b7a :                 >skip0406
                       >
0b7a : 28              >            plp         ;restore status
                        
                            endif
0b7b : d8                       cld
                                tst_stat $ff-decmode
0b7c : 08              >            php         ;save status
0b7d : 68              >            pla         ;use stack to retrieve status
0b7e : 48              >            pha
                       >            cmp_flag $ff-decmode
0b7f : c9f7            >            cmp #($ff-decmode|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0b81 : f003            >        beq skip0410
                       >        trap            ;failed not equal (non zero)
0b83 : 20a543          >        jsr report_error
                       >
0b86 :                 >skip0410
                       >
0b86 : 28              >            plp         ;restore status
                        
0b87 : f8                       sed
                                tst_stat $ff
0b88 : 08              >            php         ;save status
0b89 : 68              >            pla         ;use stack to retrieve status
0b8a : 48              >            pha
                       >            cmp_flag $ff
0b8b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0b8d : f003            >        beq skip0414
                       >        trap            ;failed not equal (non zero)
0b8f : 20a543          >        jsr report_error
                       >
0b92 :                 >skip0414
                       >
0b92 : 28              >            plp         ;restore status
                        
0b93 : b8                       clv
                                tst_stat $ff-overfl
0b94 : 08              >            php         ;save status
0b95 : 68              >            pla         ;use stack to retrieve status
0b96 : 48              >            pha
                       >            cmp_flag $ff-overfl
0b97 : c9bf            >            cmp #($ff-overfl|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0b99 : f003            >        beq skip0418
                       >        trap            ;failed not equal (non zero)
0b9b : 20a543          >        jsr report_error
                       >
0b9e :                 >skip0418
                       >
0b9e : 28              >            plp         ;restore status
                        
                                set_stat 0
                       >            load_flag 0
0b9f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
0ba1 : 48              >            pha         ;use stack to load status
0ba2 : 28              >            plp
                        
                                tst_stat 0
0ba3 : 08              >            php         ;save status
0ba4 : 68              >            pla         ;use stack to retrieve status
0ba5 : 48              >            pha
                       >            cmp_flag 0
0ba6 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0ba8 : f003            >        beq skip0424
                       >        trap            ;failed not equal (non zero)
0baa : 20a543          >        jsr report_error
                       >
0bad :                 >skip0424
                       >
0bad : 28              >            plp         ;restore status
                        
0bae : 38                       sec
                                tst_stat carry
0baf : 08              >            php         ;save status
0bb0 : 68              >            pla         ;use stack to retrieve status
0bb1 : 48              >            pha
                       >            cmp_flag carry
0bb2 : c931            >            cmp #(carry|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0bb4 : f003            >        beq skip0428
                       >        trap            ;failed not equal (non zero)
0bb6 : 20a543          >        jsr report_error
                       >
0bb9 :                 >skip0428
                       >
0bb9 : 28              >            plp         ;restore status
                        
0bba : 18                       clc
                                tst_stat 0  
0bbb : 08              >            php         ;save status
0bbc : 68              >            pla         ;use stack to retrieve status
0bbd : 48              >            pha
                       >            cmp_flag 0  
0bbe : c930            >            cmp #(0  |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0bc0 : f003            >        beq skip0432
                       >        trap            ;failed not equal (non zero)
0bc2 : 20a543          >        jsr report_error
                       >
0bc5 :                 >skip0432
                       >
0bc5 : 28              >            plp         ;restore status
                        
                            if I_flag = 3
0bc6 : 78                       sei
                                tst_stat intdis
0bc7 : 08              >            php         ;save status
0bc8 : 68              >            pla         ;use stack to retrieve status
0bc9 : 48              >            pha
                       >            cmp_flag intdis
0bca : c934            >            cmp #(intdis|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0bcc : f003            >        beq skip0436
                       >        trap            ;failed not equal (non zero)
0bce : 20a543          >        jsr report_error
                       >
0bd1 :                 >skip0436
                       >
0bd1 : 28              >            plp         ;restore status
                        
0bd2 : 58                       cli
                                tst_stat 0
0bd3 : 08              >            php         ;save status
0bd4 : 68              >            pla         ;use stack to retrieve status
0bd5 : 48              >            pha
                       >            cmp_flag 0
0bd6 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0bd8 : f003            >        beq skip0440
                       >        trap            ;failed not equal (non zero)
0bda : 20a543          >        jsr report_error
                       >
0bdd :                 >skip0440
                       >
0bdd : 28              >            plp         ;restore status
                        
                            endif  
0bde : f8                       sed
                                tst_stat decmode
0bdf : 08              >            php         ;save status
0be0 : 68              >            pla         ;use stack to retrieve status
0be1 : 48              >            pha
                       >            cmp_flag decmode
0be2 : c938            >            cmp #(decmode|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0be4 : f003            >        beq skip0444
                       >        trap            ;failed not equal (non zero)
0be6 : 20a543          >        jsr report_error
                       >
0be9 :                 >skip0444
                       >
0be9 : 28              >            plp         ;restore status
                        
0bea : d8                       cld
                                tst_stat 0  
0beb : 08              >            php         ;save status
0bec : 68              >            pla         ;use stack to retrieve status
0bed : 48              >            pha
                       >            cmp_flag 0  
0bee : c930            >            cmp #(0  |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0bf0 : f003            >        beq skip0448
                       >        trap            ;failed not equal (non zero)
0bf2 : 20a543          >        jsr report_error
                       >
0bf5 :                 >skip0448
                       >
0bf5 : 28              >            plp         ;restore status
                        
                                set_stat overfl
                       >            load_flag overfl
0bf6 : a940            >            lda #overfl             ;allow test to change I-flag (no mask)
                       >
0bf8 : 48              >            pha         ;use stack to load status
0bf9 : 28              >            plp
                        
                                tst_stat overfl
0bfa : 08              >            php         ;save status
0bfb : 68              >            pla         ;use stack to retrieve status
0bfc : 48              >            pha
                       >            cmp_flag overfl
0bfd : c970            >            cmp #(overfl|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0bff : f003            >        beq skip0454
                       >        trap            ;failed not equal (non zero)
0c01 : 20a543          >        jsr report_error
                       >
0c04 :                 >skip0454
                       >
0c04 : 28              >            plp         ;restore status
                        
0c05 : b8                       clv
                                tst_stat 0
0c06 : 08              >            php         ;save status
0c07 : 68              >            pla         ;use stack to retrieve status
0c08 : 48              >            pha
                       >            cmp_flag 0
0c09 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0c0b : f003            >        beq skip0458
                       >        trap            ;failed not equal (non zero)
0c0d : 20a543          >        jsr report_error
                       >
0c10 :                 >skip0458
                       >
0c10 : 28              >            plp         ;restore status
                        
                                next_test
0c11 : ad0002          >            lda test_case   ;previous test
0c14 : c90c            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
0c16 : f003            >        beq skip0461
                       >        trap            ;failed not equal (non zero)
0c18 : 20a543          >        jsr report_error
                       >
0c1b :                 >skip0461
                       >
000d =                 >test_num = test_num + 1
0c1b : a90d            >            lda #test_num   ;*** next tests' number
0c1d : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        ; testing index register increment/decrement and transfer
                        ; INX INY DEX DEY TAX TXA TAY TYA 
0c20 : a2fe                     ldx #$fe
                                set_stat $ff
                       >            load_flag $ff
0c22 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
0c24 : 48              >            pha         ;use stack to load status
0c25 : 28              >            plp
                        
0c26 : e8                       inx             ;ff
                                tst_x $ff,$ff-zero
0c27 : 08              >            php         ;save flags
0c28 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
0c2a : f003            >        beq skip0466
                       >        trap            ;failed not equal (non zero)
0c2c : 20a543          >        jsr report_error
                       >
0c2f :                 >skip0466
                       >
0c2f : 68              >            pla         ;load status
0c30 : 48              >            pha
                       >            cmp_flag $ff-zero
0c31 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0c33 : f003            >        beq skip0469
                       >        trap            ;failed not equal (non zero)
0c35 : 20a543          >        jsr report_error
                       >
0c38 :                 >skip0469
                       >
0c38 : 28              >            plp         ;restore status
                        
0c39 : e8                       inx             ;00
                                tst_x 0,$ff-minus
0c3a : 08              >            php         ;save flags
0c3b : e000            >            cpx #0     ;test result
                       >            trap_ne
0c3d : f003            >        beq skip0472
                       >        trap            ;failed not equal (non zero)
0c3f : 20a543          >        jsr report_error
                       >
0c42 :                 >skip0472
                       >
0c42 : 68              >            pla         ;load status
0c43 : 48              >            pha
                       >            cmp_flag $ff-minus
0c44 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0c46 : f003            >        beq skip0475
                       >        trap            ;failed not equal (non zero)
0c48 : 20a543          >        jsr report_error
                       >
0c4b :                 >skip0475
                       >
0c4b : 28              >            plp         ;restore status
                        
0c4c : e8                       inx             ;01
                                tst_x 1,$ff-minus-zero
0c4d : 08              >            php         ;save flags
0c4e : e001            >            cpx #1     ;test result
                       >            trap_ne
0c50 : f003            >        beq skip0478
                       >        trap            ;failed not equal (non zero)
0c52 : 20a543          >        jsr report_error
                       >
0c55 :                 >skip0478
                       >
0c55 : 68              >            pla         ;load status
0c56 : 48              >            pha
                       >            cmp_flag $ff-minus-zero
0c57 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0c59 : f003            >        beq skip0481
                       >        trap            ;failed not equal (non zero)
0c5b : 20a543          >        jsr report_error
                       >
0c5e :                 >skip0481
                       >
0c5e : 28              >            plp         ;restore status
                        
0c5f : ca                       dex             ;00
                                tst_x 0,$ff-minus
0c60 : 08              >            php         ;save flags
0c61 : e000            >            cpx #0     ;test result
                       >            trap_ne
0c63 : f003            >        beq skip0484
                       >        trap            ;failed not equal (non zero)
0c65 : 20a543          >        jsr report_error
                       >
0c68 :                 >skip0484
                       >
0c68 : 68              >            pla         ;load status
0c69 : 48              >            pha
                       >            cmp_flag $ff-minus
0c6a : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0c6c : f003            >        beq skip0487
                       >        trap            ;failed not equal (non zero)
0c6e : 20a543          >        jsr report_error
                       >
0c71 :                 >skip0487
                       >
0c71 : 28              >            plp         ;restore status
                        
0c72 : ca                       dex             ;ff
                                tst_x $ff,$ff-zero
0c73 : 08              >            php         ;save flags
0c74 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
0c76 : f003            >        beq skip0490
                       >        trap            ;failed not equal (non zero)
0c78 : 20a543          >        jsr report_error
                       >
0c7b :                 >skip0490
                       >
0c7b : 68              >            pla         ;load status
0c7c : 48              >            pha
                       >            cmp_flag $ff-zero
0c7d : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0c7f : f003            >        beq skip0493
                       >        trap            ;failed not equal (non zero)
0c81 : 20a543          >        jsr report_error
                       >
0c84 :                 >skip0493
                       >
0c84 : 28              >            plp         ;restore status
                        
0c85 : ca                       dex             ;fe
                                set_stat 0
                       >            load_flag 0
0c86 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
0c88 : 48              >            pha         ;use stack to load status
0c89 : 28              >            plp
                        
0c8a : e8                       inx             ;ff
                                tst_x $ff,minus
0c8b : 08              >            php         ;save flags
0c8c : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
0c8e : f003            >        beq skip0498
                       >        trap            ;failed not equal (non zero)
0c90 : 20a543          >        jsr report_error
                       >
0c93 :                 >skip0498
                       >
0c93 : 68              >            pla         ;load status
0c94 : 48              >            pha
                       >            cmp_flag minus
0c95 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0c97 : f003            >        beq skip0501
                       >        trap            ;failed not equal (non zero)
0c99 : 20a543          >        jsr report_error
                       >
0c9c :                 >skip0501
                       >
0c9c : 28              >            plp         ;restore status
                        
0c9d : e8                       inx             ;00
                                tst_x 0,zero
0c9e : 08              >            php         ;save flags
0c9f : e000            >            cpx #0     ;test result
                       >            trap_ne
0ca1 : f003            >        beq skip0504
                       >        trap            ;failed not equal (non zero)
0ca3 : 20a543          >        jsr report_error
                       >
0ca6 :                 >skip0504
                       >
0ca6 : 68              >            pla         ;load status
0ca7 : 48              >            pha
                       >            cmp_flag zero
0ca8 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0caa : f003            >        beq skip0507
                       >        trap            ;failed not equal (non zero)
0cac : 20a543          >        jsr report_error
                       >
0caf :                 >skip0507
                       >
0caf : 28              >            plp         ;restore status
                        
0cb0 : e8                       inx             ;01
                                tst_x 1,0
0cb1 : 08              >            php         ;save flags
0cb2 : e001            >            cpx #1     ;test result
                       >            trap_ne
0cb4 : f003            >        beq skip0510
                       >        trap            ;failed not equal (non zero)
0cb6 : 20a543          >        jsr report_error
                       >
0cb9 :                 >skip0510
                       >
0cb9 : 68              >            pla         ;load status
0cba : 48              >            pha
                       >            cmp_flag 0
0cbb : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0cbd : f003            >        beq skip0513
                       >        trap            ;failed not equal (non zero)
0cbf : 20a543          >        jsr report_error
                       >
0cc2 :                 >skip0513
                       >
0cc2 : 28              >            plp         ;restore status
                        
0cc3 : ca                       dex             ;00
                                tst_x 0,zero
0cc4 : 08              >            php         ;save flags
0cc5 : e000            >            cpx #0     ;test result
                       >            trap_ne
0cc7 : f003            >        beq skip0516
                       >        trap            ;failed not equal (non zero)
0cc9 : 20a543          >        jsr report_error
                       >
0ccc :                 >skip0516
                       >
0ccc : 68              >            pla         ;load status
0ccd : 48              >            pha
                       >            cmp_flag zero
0cce : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0cd0 : f003            >        beq skip0519
                       >        trap            ;failed not equal (non zero)
0cd2 : 20a543          >        jsr report_error
                       >
0cd5 :                 >skip0519
                       >
0cd5 : 28              >            plp         ;restore status
                        
0cd6 : ca                       dex             ;ff
                                tst_x $ff,minus
0cd7 : 08              >            php         ;save flags
0cd8 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
0cda : f003            >        beq skip0522
                       >        trap            ;failed not equal (non zero)
0cdc : 20a543          >        jsr report_error
                       >
0cdf :                 >skip0522
                       >
0cdf : 68              >            pla         ;load status
0ce0 : 48              >            pha
                       >            cmp_flag minus
0ce1 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0ce3 : f003            >        beq skip0525
                       >        trap            ;failed not equal (non zero)
0ce5 : 20a543          >        jsr report_error
                       >
0ce8 :                 >skip0525
                       >
0ce8 : 28              >            plp         ;restore status
                        
                        
0ce9 : a0fe                     ldy #$fe
                                set_stat $ff
                       >            load_flag $ff
0ceb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
0ced : 48              >            pha         ;use stack to load status
0cee : 28              >            plp
                        
0cef : c8                       iny             ;ff
                                tst_y $ff,$ff-zero
0cf0 : 08              >            php         ;save flags
0cf1 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
0cf3 : f003            >        beq skip0530
                       >        trap            ;failed not equal (non zero)
0cf5 : 20a543          >        jsr report_error
                       >
0cf8 :                 >skip0530
                       >
0cf8 : 68              >            pla         ;load status
0cf9 : 48              >            pha
                       >            cmp_flag $ff-zero
0cfa : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0cfc : f003            >        beq skip0533
                       >        trap            ;failed not equal (non zero)
0cfe : 20a543          >        jsr report_error
                       >
0d01 :                 >skip0533
                       >
0d01 : 28              >            plp         ;restore status
                        
0d02 : c8                       iny             ;00
                                tst_y 0,$ff-minus
0d03 : 08              >            php         ;save flags
0d04 : c000            >            cpy #0     ;test result
                       >            trap_ne
0d06 : f003            >        beq skip0536
                       >        trap            ;failed not equal (non zero)
0d08 : 20a543          >        jsr report_error
                       >
0d0b :                 >skip0536
                       >
0d0b : 68              >            pla         ;load status
0d0c : 48              >            pha
                       >            cmp_flag $ff-minus
0d0d : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0d0f : f003            >        beq skip0539
                       >        trap            ;failed not equal (non zero)
0d11 : 20a543          >        jsr report_error
                       >
0d14 :                 >skip0539
                       >
0d14 : 28              >            plp         ;restore status
                        
0d15 : c8                       iny             ;01
                                tst_y 1,$ff-minus-zero
0d16 : 08              >            php         ;save flags
0d17 : c001            >            cpy #1     ;test result
                       >            trap_ne
0d19 : f003            >        beq skip0542
                       >        trap            ;failed not equal (non zero)
0d1b : 20a543          >        jsr report_error
                       >
0d1e :                 >skip0542
                       >
0d1e : 68              >            pla         ;load status
0d1f : 48              >            pha
                       >            cmp_flag $ff-minus-zero
0d20 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0d22 : f003            >        beq skip0545
                       >        trap            ;failed not equal (non zero)
0d24 : 20a543          >        jsr report_error
                       >
0d27 :                 >skip0545
                       >
0d27 : 28              >            plp         ;restore status
                        
0d28 : 88                       dey             ;00
                                tst_y 0,$ff-minus
0d29 : 08              >            php         ;save flags
0d2a : c000            >            cpy #0     ;test result
                       >            trap_ne
0d2c : f003            >        beq skip0548
                       >        trap            ;failed not equal (non zero)
0d2e : 20a543          >        jsr report_error
                       >
0d31 :                 >skip0548
                       >
0d31 : 68              >            pla         ;load status
0d32 : 48              >            pha
                       >            cmp_flag $ff-minus
0d33 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0d35 : f003            >        beq skip0551
                       >        trap            ;failed not equal (non zero)
0d37 : 20a543          >        jsr report_error
                       >
0d3a :                 >skip0551
                       >
0d3a : 28              >            plp         ;restore status
                        
0d3b : 88                       dey             ;ff
                                tst_y $ff,$ff-zero
0d3c : 08              >            php         ;save flags
0d3d : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
0d3f : f003            >        beq skip0554
                       >        trap            ;failed not equal (non zero)
0d41 : 20a543          >        jsr report_error
                       >
0d44 :                 >skip0554
                       >
0d44 : 68              >            pla         ;load status
0d45 : 48              >            pha
                       >            cmp_flag $ff-zero
0d46 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0d48 : f003            >        beq skip0557
                       >        trap            ;failed not equal (non zero)
0d4a : 20a543          >        jsr report_error
                       >
0d4d :                 >skip0557
                       >
0d4d : 28              >            plp         ;restore status
                        
0d4e : 88                       dey             ;fe
                                set_stat 0
                       >            load_flag 0
0d4f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
0d51 : 48              >            pha         ;use stack to load status
0d52 : 28              >            plp
                        
0d53 : c8                       iny             ;ff
                                tst_y $ff,0+minus
0d54 : 08              >            php         ;save flags
0d55 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
0d57 : f003            >        beq skip0562
                       >        trap            ;failed not equal (non zero)
0d59 : 20a543          >        jsr report_error
                       >
0d5c :                 >skip0562
                       >
0d5c : 68              >            pla         ;load status
0d5d : 48              >            pha
                       >            cmp_flag 0+minus
0d5e : c9b0            >            cmp #(0+minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0d60 : f003            >        beq skip0565
                       >        trap            ;failed not equal (non zero)
0d62 : 20a543          >        jsr report_error
                       >
0d65 :                 >skip0565
                       >
0d65 : 28              >            plp         ;restore status
                        
0d66 : c8                       iny             ;00
                                tst_y 0,zero
0d67 : 08              >            php         ;save flags
0d68 : c000            >            cpy #0     ;test result
                       >            trap_ne
0d6a : f003            >        beq skip0568
                       >        trap            ;failed not equal (non zero)
0d6c : 20a543          >        jsr report_error
                       >
0d6f :                 >skip0568
                       >
0d6f : 68              >            pla         ;load status
0d70 : 48              >            pha
                       >            cmp_flag zero
0d71 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0d73 : f003            >        beq skip0571
                       >        trap            ;failed not equal (non zero)
0d75 : 20a543          >        jsr report_error
                       >
0d78 :                 >skip0571
                       >
0d78 : 28              >            plp         ;restore status
                        
0d79 : c8                       iny             ;01
                                tst_y 1,0
0d7a : 08              >            php         ;save flags
0d7b : c001            >            cpy #1     ;test result
                       >            trap_ne
0d7d : f003            >        beq skip0574
                       >        trap            ;failed not equal (non zero)
0d7f : 20a543          >        jsr report_error
                       >
0d82 :                 >skip0574
                       >
0d82 : 68              >            pla         ;load status
0d83 : 48              >            pha
                       >            cmp_flag 0
0d84 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0d86 : f003            >        beq skip0577
                       >        trap            ;failed not equal (non zero)
0d88 : 20a543          >        jsr report_error
                       >
0d8b :                 >skip0577
                       >
0d8b : 28              >            plp         ;restore status
                        
0d8c : 88                       dey             ;00
                                tst_y 0,zero
0d8d : 08              >            php         ;save flags
0d8e : c000            >            cpy #0     ;test result
                       >            trap_ne
0d90 : f003            >        beq skip0580
                       >        trap            ;failed not equal (non zero)
0d92 : 20a543          >        jsr report_error
                       >
0d95 :                 >skip0580
                       >
0d95 : 68              >            pla         ;load status
0d96 : 48              >            pha
                       >            cmp_flag zero
0d97 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0d99 : f003            >        beq skip0583
                       >        trap            ;failed not equal (non zero)
0d9b : 20a543          >        jsr report_error
                       >
0d9e :                 >skip0583
                       >
0d9e : 28              >            plp         ;restore status
                        
0d9f : 88                       dey             ;ff
                                tst_y $ff,minus
0da0 : 08              >            php         ;save flags
0da1 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
0da3 : f003            >        beq skip0586
                       >        trap            ;failed not equal (non zero)
0da5 : 20a543          >        jsr report_error
                       >
0da8 :                 >skip0586
                       >
0da8 : 68              >            pla         ;load status
0da9 : 48              >            pha
                       >            cmp_flag minus
0daa : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0dac : f003            >        beq skip0589
                       >        trap            ;failed not equal (non zero)
0dae : 20a543          >        jsr report_error
                       >
0db1 :                 >skip0589
                       >
0db1 : 28              >            plp         ;restore status
                        
                                        
0db2 : a2ff                     ldx #$ff
                                set_stat $ff
                       >            load_flag $ff
0db4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
0db6 : 48              >            pha         ;use stack to load status
0db7 : 28              >            plp
                        
0db8 : 8a                       txa
                                tst_a $ff,$ff-zero
0db9 : 08              >            php         ;save flags
0dba : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
0dbc : f003            >        beq skip0594
                       >        trap            ;failed not equal (non zero)
0dbe : 20a543          >        jsr report_error
                       >
0dc1 :                 >skip0594
                       >
0dc1 : 68              >            pla         ;load status
0dc2 : 48              >            pha
                       >            cmp_flag $ff-zero
0dc3 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0dc5 : f003            >        beq skip0597
                       >        trap            ;failed not equal (non zero)
0dc7 : 20a543          >        jsr report_error
                       >
0dca :                 >skip0597
                       >
0dca : 28              >            plp         ;restore status
                        
0dcb : 08                       php
0dcc : e8                       inx             ;00
0dcd : 28                       plp
0dce : 8a                       txa
                                tst_a 0,$ff-minus
0dcf : 08              >            php         ;save flags
0dd0 : c900            >            cmp #0     ;test result
                       >            trap_ne
0dd2 : f003            >        beq skip0600
                       >        trap            ;failed not equal (non zero)
0dd4 : 20a543          >        jsr report_error
                       >
0dd7 :                 >skip0600
                       >
0dd7 : 68              >            pla         ;load status
0dd8 : 48              >            pha
                       >            cmp_flag $ff-minus
0dd9 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0ddb : f003            >        beq skip0603
                       >        trap            ;failed not equal (non zero)
0ddd : 20a543          >        jsr report_error
                       >
0de0 :                 >skip0603
                       >
0de0 : 28              >            plp         ;restore status
                        
0de1 : 08                       php
0de2 : e8                       inx             ;01
0de3 : 28                       plp
0de4 : 8a                       txa
                                tst_a 1,$ff-minus-zero
0de5 : 08              >            php         ;save flags
0de6 : c901            >            cmp #1     ;test result
                       >            trap_ne
0de8 : f003            >        beq skip0606
                       >        trap            ;failed not equal (non zero)
0dea : 20a543          >        jsr report_error
                       >
0ded :                 >skip0606
                       >
0ded : 68              >            pla         ;load status
0dee : 48              >            pha
                       >            cmp_flag $ff-minus-zero
0def : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0df1 : f003            >        beq skip0609
                       >        trap            ;failed not equal (non zero)
0df3 : 20a543          >        jsr report_error
                       >
0df6 :                 >skip0609
                       >
0df6 : 28              >            plp         ;restore status
                        
                                set_stat 0
                       >            load_flag 0
0df7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
0df9 : 48              >            pha         ;use stack to load status
0dfa : 28              >            plp
                        
0dfb : 8a                       txa
                                tst_a 1,0
0dfc : 08              >            php         ;save flags
0dfd : c901            >            cmp #1     ;test result
                       >            trap_ne
0dff : f003            >        beq skip0614
                       >        trap            ;failed not equal (non zero)
0e01 : 20a543          >        jsr report_error
                       >
0e04 :                 >skip0614
                       >
0e04 : 68              >            pla         ;load status
0e05 : 48              >            pha
                       >            cmp_flag 0
0e06 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0e08 : f003            >        beq skip0617
                       >        trap            ;failed not equal (non zero)
0e0a : 20a543          >        jsr report_error
                       >
0e0d :                 >skip0617
                       >
0e0d : 28              >            plp         ;restore status
                        
0e0e : 08                       php
0e0f : ca                       dex             ;00
0e10 : 28                       plp
0e11 : 8a                       txa
                                tst_a 0,zero
0e12 : 08              >            php         ;save flags
0e13 : c900            >            cmp #0     ;test result
                       >            trap_ne
0e15 : f003            >        beq skip0620
                       >        trap            ;failed not equal (non zero)
0e17 : 20a543          >        jsr report_error
                       >
0e1a :                 >skip0620
                       >
0e1a : 68              >            pla         ;load status
0e1b : 48              >            pha
                       >            cmp_flag zero
0e1c : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0e1e : f003            >        beq skip0623
                       >        trap            ;failed not equal (non zero)
0e20 : 20a543          >        jsr report_error
                       >
0e23 :                 >skip0623
                       >
0e23 : 28              >            plp         ;restore status
                        
0e24 : 08                       php
0e25 : ca                       dex             ;ff
0e26 : 28                       plp
0e27 : 8a                       txa
                                tst_a $ff,minus
0e28 : 08              >            php         ;save flags
0e29 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
0e2b : f003            >        beq skip0626
                       >        trap            ;failed not equal (non zero)
0e2d : 20a543          >        jsr report_error
                       >
0e30 :                 >skip0626
                       >
0e30 : 68              >            pla         ;load status
0e31 : 48              >            pha
                       >            cmp_flag minus
0e32 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0e34 : f003            >        beq skip0629
                       >        trap            ;failed not equal (non zero)
0e36 : 20a543          >        jsr report_error
                       >
0e39 :                 >skip0629
                       >
0e39 : 28              >            plp         ;restore status
                        
                                                
0e3a : a0ff                     ldy #$ff
                                set_stat $ff
                       >            load_flag $ff
0e3c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
0e3e : 48              >            pha         ;use stack to load status
0e3f : 28              >            plp
                        
0e40 : 98                       tya
                                tst_a $ff,$ff-zero
0e41 : 08              >            php         ;save flags
0e42 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
0e44 : f003            >        beq skip0634
                       >        trap            ;failed not equal (non zero)
0e46 : 20a543          >        jsr report_error
                       >
0e49 :                 >skip0634
                       >
0e49 : 68              >            pla         ;load status
0e4a : 48              >            pha
                       >            cmp_flag $ff-zero
0e4b : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0e4d : f003            >        beq skip0637
                       >        trap            ;failed not equal (non zero)
0e4f : 20a543          >        jsr report_error
                       >
0e52 :                 >skip0637
                       >
0e52 : 28              >            plp         ;restore status
                        
0e53 : 08                       php
0e54 : c8                       iny             ;00
0e55 : 28                       plp
0e56 : 98                       tya
                                tst_a 0,$ff-minus
0e57 : 08              >            php         ;save flags
0e58 : c900            >            cmp #0     ;test result
                       >            trap_ne
0e5a : f003            >        beq skip0640
                       >        trap            ;failed not equal (non zero)
0e5c : 20a543          >        jsr report_error
                       >
0e5f :                 >skip0640
                       >
0e5f : 68              >            pla         ;load status
0e60 : 48              >            pha
                       >            cmp_flag $ff-minus
0e61 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0e63 : f003            >        beq skip0643
                       >        trap            ;failed not equal (non zero)
0e65 : 20a543          >        jsr report_error
                       >
0e68 :                 >skip0643
                       >
0e68 : 28              >            plp         ;restore status
                        
0e69 : 08                       php
0e6a : c8                       iny             ;01
0e6b : 28                       plp
0e6c : 98                       tya
                                tst_a 1,$ff-minus-zero
0e6d : 08              >            php         ;save flags
0e6e : c901            >            cmp #1     ;test result
                       >            trap_ne
0e70 : f003            >        beq skip0646
                       >        trap            ;failed not equal (non zero)
0e72 : 20a543          >        jsr report_error
                       >
0e75 :                 >skip0646
                       >
0e75 : 68              >            pla         ;load status
0e76 : 48              >            pha
                       >            cmp_flag $ff-minus-zero
0e77 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0e79 : f003            >        beq skip0649
                       >        trap            ;failed not equal (non zero)
0e7b : 20a543          >        jsr report_error
                       >
0e7e :                 >skip0649
                       >
0e7e : 28              >            plp         ;restore status
                        
                                set_stat 0
                       >            load_flag 0
0e7f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
0e81 : 48              >            pha         ;use stack to load status
0e82 : 28              >            plp
                        
0e83 : 98                       tya
                                tst_a 1,0
0e84 : 08              >            php         ;save flags
0e85 : c901            >            cmp #1     ;test result
                       >            trap_ne
0e87 : f003            >        beq skip0654
                       >        trap            ;failed not equal (non zero)
0e89 : 20a543          >        jsr report_error
                       >
0e8c :                 >skip0654
                       >
0e8c : 68              >            pla         ;load status
0e8d : 48              >            pha
                       >            cmp_flag 0
0e8e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0e90 : f003            >        beq skip0657
                       >        trap            ;failed not equal (non zero)
0e92 : 20a543          >        jsr report_error
                       >
0e95 :                 >skip0657
                       >
0e95 : 28              >            plp         ;restore status
                        
0e96 : 08                       php
0e97 : 88                       dey             ;00
0e98 : 28                       plp
0e99 : 98                       tya
                                tst_a 0,zero
0e9a : 08              >            php         ;save flags
0e9b : c900            >            cmp #0     ;test result
                       >            trap_ne
0e9d : f003            >        beq skip0660
                       >        trap            ;failed not equal (non zero)
0e9f : 20a543          >        jsr report_error
                       >
0ea2 :                 >skip0660
                       >
0ea2 : 68              >            pla         ;load status
0ea3 : 48              >            pha
                       >            cmp_flag zero
0ea4 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0ea6 : f003            >        beq skip0663
                       >        trap            ;failed not equal (non zero)
0ea8 : 20a543          >        jsr report_error
                       >
0eab :                 >skip0663
                       >
0eab : 28              >            plp         ;restore status
                        
0eac : 08                       php
0ead : 88                       dey             ;ff
0eae : 28                       plp
0eaf : 98                       tya
                                tst_a $ff,minus
0eb0 : 08              >            php         ;save flags
0eb1 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
0eb3 : f003            >        beq skip0666
                       >        trap            ;failed not equal (non zero)
0eb5 : 20a543          >        jsr report_error
                       >
0eb8 :                 >skip0666
                       >
0eb8 : 68              >            pla         ;load status
0eb9 : 48              >            pha
                       >            cmp_flag minus
0eba : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0ebc : f003            >        beq skip0669
                       >        trap            ;failed not equal (non zero)
0ebe : 20a543          >        jsr report_error
                       >
0ec1 :                 >skip0669
                       >
0ec1 : 28              >            plp         ;restore status
                        
                        
                                load_flag $ff
0ec2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                        
0ec4 : 48                       pha
0ec5 : a2ff                     ldx #$ff        ;ff
0ec7 : 8a                       txa
0ec8 : 28                       plp             
0ec9 : a8                       tay
                                tst_y $ff,$ff-zero
0eca : 08              >            php         ;save flags
0ecb : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
0ecd : f003            >        beq skip0673
                       >        trap            ;failed not equal (non zero)
0ecf : 20a543          >        jsr report_error
                       >
0ed2 :                 >skip0673
                       >
0ed2 : 68              >            pla         ;load status
0ed3 : 48              >            pha
                       >            cmp_flag $ff-zero
0ed4 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0ed6 : f003            >        beq skip0676
                       >        trap            ;failed not equal (non zero)
0ed8 : 20a543          >        jsr report_error
                       >
0edb :                 >skip0676
                       >
0edb : 28              >            plp         ;restore status
                        
0edc : 08                       php
0edd : e8                       inx             ;00
0ede : 8a                       txa
0edf : 28                       plp
0ee0 : a8                       tay
                                tst_y 0,$ff-minus
0ee1 : 08              >            php         ;save flags
0ee2 : c000            >            cpy #0     ;test result
                       >            trap_ne
0ee4 : f003            >        beq skip0679
                       >        trap            ;failed not equal (non zero)
0ee6 : 20a543          >        jsr report_error
                       >
0ee9 :                 >skip0679
                       >
0ee9 : 68              >            pla         ;load status
0eea : 48              >            pha
                       >            cmp_flag $ff-minus
0eeb : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0eed : f003            >        beq skip0682
                       >        trap            ;failed not equal (non zero)
0eef : 20a543          >        jsr report_error
                       >
0ef2 :                 >skip0682
                       >
0ef2 : 28              >            plp         ;restore status
                        
0ef3 : 08                       php
0ef4 : e8                       inx             ;01
0ef5 : 8a                       txa
0ef6 : 28                       plp
0ef7 : a8                       tay
                                tst_y 1,$ff-minus-zero
0ef8 : 08              >            php         ;save flags
0ef9 : c001            >            cpy #1     ;test result
                       >            trap_ne
0efb : f003            >        beq skip0685
                       >        trap            ;failed not equal (non zero)
0efd : 20a543          >        jsr report_error
                       >
0f00 :                 >skip0685
                       >
0f00 : 68              >            pla         ;load status
0f01 : 48              >            pha
                       >            cmp_flag $ff-minus-zero
0f02 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0f04 : f003            >        beq skip0688
                       >        trap            ;failed not equal (non zero)
0f06 : 20a543          >        jsr report_error
                       >
0f09 :                 >skip0688
                       >
0f09 : 28              >            plp         ;restore status
                        
                                load_flag 0
0f0a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                        
0f0c : 48                       pha
0f0d : a900                     lda #0
0f0f : 8a                       txa
0f10 : 28                       plp
0f11 : a8                       tay
                                tst_y 1,0
0f12 : 08              >            php         ;save flags
0f13 : c001            >            cpy #1     ;test result
                       >            trap_ne
0f15 : f003            >        beq skip0692
                       >        trap            ;failed not equal (non zero)
0f17 : 20a543          >        jsr report_error
                       >
0f1a :                 >skip0692
                       >
0f1a : 68              >            pla         ;load status
0f1b : 48              >            pha
                       >            cmp_flag 0
0f1c : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0f1e : f003            >        beq skip0695
                       >        trap            ;failed not equal (non zero)
0f20 : 20a543          >        jsr report_error
                       >
0f23 :                 >skip0695
                       >
0f23 : 28              >            plp         ;restore status
                        
0f24 : 08                       php
0f25 : ca                       dex             ;00
0f26 : 8a                       txa
0f27 : 28                       plp
0f28 : a8                       tay
                                tst_y 0,zero
0f29 : 08              >            php         ;save flags
0f2a : c000            >            cpy #0     ;test result
                       >            trap_ne
0f2c : f003            >        beq skip0698
                       >        trap            ;failed not equal (non zero)
0f2e : 20a543          >        jsr report_error
                       >
0f31 :                 >skip0698
                       >
0f31 : 68              >            pla         ;load status
0f32 : 48              >            pha
                       >            cmp_flag zero
0f33 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0f35 : f003            >        beq skip0701
                       >        trap            ;failed not equal (non zero)
0f37 : 20a543          >        jsr report_error
                       >
0f3a :                 >skip0701
                       >
0f3a : 28              >            plp         ;restore status
                        
0f3b : 08                       php
0f3c : ca                       dex             ;ff
0f3d : 8a                       txa
0f3e : 28                       plp
0f3f : a8                       tay
                                tst_y $ff,minus
0f40 : 08              >            php         ;save flags
0f41 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
0f43 : f003            >        beq skip0704
                       >        trap            ;failed not equal (non zero)
0f45 : 20a543          >        jsr report_error
                       >
0f48 :                 >skip0704
                       >
0f48 : 68              >            pla         ;load status
0f49 : 48              >            pha
                       >            cmp_flag minus
0f4a : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0f4c : f003            >        beq skip0707
                       >        trap            ;failed not equal (non zero)
0f4e : 20a543          >        jsr report_error
                       >
0f51 :                 >skip0707
                       >
0f51 : 28              >            plp         ;restore status
                        
                        
                        
                                load_flag $ff
0f52 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                        
0f54 : 48                       pha
0f55 : a0ff                     ldy #$ff        ;ff
0f57 : 98                       tya
0f58 : 28                       plp
0f59 : aa                       tax
                                tst_x $ff,$ff-zero
0f5a : 08              >            php         ;save flags
0f5b : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
0f5d : f003            >        beq skip0711
                       >        trap            ;failed not equal (non zero)
0f5f : 20a543          >        jsr report_error
                       >
0f62 :                 >skip0711
                       >
0f62 : 68              >            pla         ;load status
0f63 : 48              >            pha
                       >            cmp_flag $ff-zero
0f64 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0f66 : f003            >        beq skip0714
                       >        trap            ;failed not equal (non zero)
0f68 : 20a543          >        jsr report_error
                       >
0f6b :                 >skip0714
                       >
0f6b : 28              >            plp         ;restore status
                        
0f6c : 08                       php
0f6d : c8                       iny             ;00
0f6e : 98                       tya
0f6f : 28                       plp
0f70 : aa                       tax
                                tst_x 0,$ff-minus
0f71 : 08              >            php         ;save flags
0f72 : e000            >            cpx #0     ;test result
                       >            trap_ne
0f74 : f003            >        beq skip0717
                       >        trap            ;failed not equal (non zero)
0f76 : 20a543          >        jsr report_error
                       >
0f79 :                 >skip0717
                       >
0f79 : 68              >            pla         ;load status
0f7a : 48              >            pha
                       >            cmp_flag $ff-minus
0f7b : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0f7d : f003            >        beq skip0720
                       >        trap            ;failed not equal (non zero)
0f7f : 20a543          >        jsr report_error
                       >
0f82 :                 >skip0720
                       >
0f82 : 28              >            plp         ;restore status
                        
0f83 : 08                       php
0f84 : c8                       iny             ;01
0f85 : 98                       tya
0f86 : 28                       plp
0f87 : aa                       tax
                                tst_x 1,$ff-minus-zero
0f88 : 08              >            php         ;save flags
0f89 : e001            >            cpx #1     ;test result
                       >            trap_ne
0f8b : f003            >        beq skip0723
                       >        trap            ;failed not equal (non zero)
0f8d : 20a543          >        jsr report_error
                       >
0f90 :                 >skip0723
                       >
0f90 : 68              >            pla         ;load status
0f91 : 48              >            pha
                       >            cmp_flag $ff-minus-zero
0f92 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0f94 : f003            >        beq skip0726
                       >        trap            ;failed not equal (non zero)
0f96 : 20a543          >        jsr report_error
                       >
0f99 :                 >skip0726
                       >
0f99 : 28              >            plp         ;restore status
                        
                                load_flag 0
0f9a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                        
0f9c : 48                       pha
0f9d : a900                     lda #0          ;preset status
0f9f : 98                       tya
0fa0 : 28                       plp
0fa1 : aa                       tax
                                tst_x 1,0
0fa2 : 08              >            php         ;save flags
0fa3 : e001            >            cpx #1     ;test result
                       >            trap_ne
0fa5 : f003            >        beq skip0730
                       >        trap            ;failed not equal (non zero)
0fa7 : 20a543          >        jsr report_error
                       >
0faa :                 >skip0730
                       >
0faa : 68              >            pla         ;load status
0fab : 48              >            pha
                       >            cmp_flag 0
0fac : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0fae : f003            >        beq skip0733
                       >        trap            ;failed not equal (non zero)
0fb0 : 20a543          >        jsr report_error
                       >
0fb3 :                 >skip0733
                       >
0fb3 : 28              >            plp         ;restore status
                        
0fb4 : 08                       php
0fb5 : 88                       dey             ;00
0fb6 : 98                       tya
0fb7 : 28                       plp
0fb8 : aa                       tax
                                tst_x 0,zero
0fb9 : 08              >            php         ;save flags
0fba : e000            >            cpx #0     ;test result
                       >            trap_ne
0fbc : f003            >        beq skip0736
                       >        trap            ;failed not equal (non zero)
0fbe : 20a543          >        jsr report_error
                       >
0fc1 :                 >skip0736
                       >
0fc1 : 68              >            pla         ;load status
0fc2 : 48              >            pha
                       >            cmp_flag zero
0fc3 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0fc5 : f003            >        beq skip0739
                       >        trap            ;failed not equal (non zero)
0fc7 : 20a543          >        jsr report_error
                       >
0fca :                 >skip0739
                       >
0fca : 28              >            plp         ;restore status
                        
0fcb : 08                       php
0fcc : 88                       dey             ;ff
0fcd : 98                       tya
0fce : 28                       plp
0fcf : aa                       tax
                                tst_x $ff,minus
0fd0 : 08              >            php         ;save flags
0fd1 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
0fd3 : f003            >        beq skip0742
                       >        trap            ;failed not equal (non zero)
0fd5 : 20a543          >        jsr report_error
                       >
0fd8 :                 >skip0742
                       >
0fd8 : 68              >            pla         ;load status
0fd9 : 48              >            pha
                       >            cmp_flag minus
0fda : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0fdc : f003            >        beq skip0745
                       >        trap            ;failed not equal (non zero)
0fde : 20a543          >        jsr report_error
                       >
0fe1 :                 >skip0745
                       >
0fe1 : 28              >            plp         ;restore status
                        
                                next_test
0fe2 : ad0002          >            lda test_case   ;previous test
0fe5 : c90d            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
0fe7 : f003            >        beq skip0748
                       >        trap            ;failed not equal (non zero)
0fe9 : 20a543          >        jsr report_error
                       >
0fec :                 >skip0748
                       >
000e =                 >test_num = test_num + 1
0fec : a90e            >            lda #test_num   ;*** next tests' number
0fee : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                             
                        ;TSX sets NZ - TXS does not
                        ;  This section also tests for proper stack wrap around.
0ff1 : a201                     ldx #1          ;01
                                set_stat $ff
                       >            load_flag $ff
0ff3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
0ff5 : 48              >            pha         ;use stack to load status
0ff6 : 28              >            plp
                        
0ff7 : 9a                       txs
0ff8 : 08                       php
0ff9 : ad0101                   lda $101
                                cmp_flag $ff
0ffc : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
0ffe : f003            >        beq skip0753
                       >        trap            ;failed not equal (non zero)
1000 : 20a543          >        jsr report_error
                       >
1003 :                 >skip0753
                        
                                set_stat 0
                       >            load_flag 0
1003 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1005 : 48              >            pha         ;use stack to load status
1006 : 28              >            plp
                        
1007 : 9a                       txs
1008 : 08                       php
1009 : ad0101                   lda $101
                                cmp_flag 0
100c : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
100e : f003            >        beq skip0758
                       >        trap            ;failed not equal (non zero)
1010 : 20a543          >        jsr report_error
                       >
1013 :                 >skip0758
                        
1013 : ca                       dex             ;00
                                set_stat $ff
                       >            load_flag $ff
1014 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1016 : 48              >            pha         ;use stack to load status
1017 : 28              >            plp
                        
1018 : 9a                       txs
1019 : 08                       php
101a : ad0001                   lda $100
                                cmp_flag $ff
101d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
101f : f003            >        beq skip0763
                       >        trap            ;failed not equal (non zero)
1021 : 20a543          >        jsr report_error
                       >
1024 :                 >skip0763
                        
                                set_stat 0
                       >            load_flag 0
1024 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1026 : 48              >            pha         ;use stack to load status
1027 : 28              >            plp
                        
1028 : 9a                       txs
1029 : 08                       php
102a : ad0001                   lda $100
                                cmp_flag 0
102d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
102f : f003            >        beq skip0768
                       >        trap            ;failed not equal (non zero)
1031 : 20a543          >        jsr report_error
                       >
1034 :                 >skip0768
                        
1034 : ca                       dex             ;ff
                                set_stat $ff
                       >            load_flag $ff
1035 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1037 : 48              >            pha         ;use stack to load status
1038 : 28              >            plp
                        
1039 : 9a                       txs
103a : 08                       php
103b : adff01                   lda $1ff
                                cmp_flag $ff
103e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1040 : f003            >        beq skip0773
                       >        trap            ;failed not equal (non zero)
1042 : 20a543          >        jsr report_error
                       >
1045 :                 >skip0773
                        
                                set_stat 0
                       >            load_flag 0
1045 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1047 : 48              >            pha         ;use stack to load status
1048 : 28              >            plp
                        
1049 : 9a                       txs
104a : 08                       php
104b : adff01                   lda $1ff
                                cmp_flag 0
104e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                        
                                
1050 : a201                     ldx #1
1052 : 9a                       txs             ;sp=01
                                set_stat $ff
                       >            load_flag $ff
1053 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1055 : 48              >            pha         ;use stack to load status
1056 : 28              >            plp
                        
1057 : ba                       tsx             ;clears Z, N
1058 : 08                       php             ;sp=00
1059 : e001                     cpx #1
                                trap_ne
105b : f003            >        beq skip0780
                       >        trap            ;failed not equal (non zero)
105d : 20a543          >        jsr report_error
                       >
1060 :                 >skip0780
                        
1060 : ad0101                   lda $101
                                cmp_flag $ff-minus-zero
1063 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1065 : f003            >        beq skip0783
                       >        trap            ;failed not equal (non zero)
1067 : 20a543          >        jsr report_error
                       >
106a :                 >skip0783
                        
                                set_stat $ff
                       >            load_flag $ff
106a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
106c : 48              >            pha         ;use stack to load status
106d : 28              >            plp
                        
106e : ba                       tsx             ;clears N, sets Z
106f : 08                       php             ;sp=ff
1070 : e000                     cpx #0
                                trap_ne
1072 : f003            >        beq skip0787
                       >        trap            ;failed not equal (non zero)
1074 : 20a543          >        jsr report_error
                       >
1077 :                 >skip0787
                        
1077 : ad0001                   lda $100
                                cmp_flag $ff-minus
107a : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
107c : f003            >        beq skip0790
                       >        trap            ;failed not equal (non zero)
107e : 20a543          >        jsr report_error
                       >
1081 :                 >skip0790
                        
                                set_stat $ff
                       >            load_flag $ff
1081 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1083 : 48              >            pha         ;use stack to load status
1084 : 28              >            plp
                        
1085 : ba                       tsx             ;clears N, sets Z
1086 : 08                       php             ;sp=fe
1087 : e0ff                     cpx #$ff
                                trap_ne
1089 : f003            >        beq skip0794
                       >        trap            ;failed not equal (non zero)
108b : 20a543          >        jsr report_error
                       >
108e :                 >skip0794
                        
108e : adff01                   lda $1ff
                                cmp_flag $ff-zero
1091 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1093 : f003            >        beq skip0797
                       >        trap            ;failed not equal (non zero)
1095 : 20a543          >        jsr report_error
                       >
1098 :                 >skip0797
                        
                                
1098 : a201                     ldx #1
109a : 9a                       txs             ;sp=01
                                set_stat 0
                       >            load_flag 0
109b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
109d : 48              >            pha         ;use stack to load status
109e : 28              >            plp
                        
109f : ba                       tsx             ;clears Z, N
10a0 : 08                       php             ;sp=00
10a1 : e001                     cpx #1
                                trap_ne
10a3 : f003            >        beq skip0801
                       >        trap            ;failed not equal (non zero)
10a5 : 20a543          >        jsr report_error
                       >
10a8 :                 >skip0801
                        
10a8 : ad0101                   lda $101
                                cmp_flag 0
10ab : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
10ad : f003            >        beq skip0804
                       >        trap            ;failed not equal (non zero)
10af : 20a543          >        jsr report_error
                       >
10b2 :                 >skip0804
                        
                                set_stat 0
                       >            load_flag 0
10b2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
10b4 : 48              >            pha         ;use stack to load status
10b5 : 28              >            plp
                        
10b6 : ba                       tsx             ;clears N, sets Z
10b7 : 08                       php             ;sp=ff
10b8 : e000                     cpx #0
                                trap_ne
10ba : f003            >        beq skip0808
                       >        trap            ;failed not equal (non zero)
10bc : 20a543          >        jsr report_error
                       >
10bf :                 >skip0808
                        
10bf : ad0001                   lda $100
                                cmp_flag zero
10c2 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
10c4 : f003            >        beq skip0811
                       >        trap            ;failed not equal (non zero)
10c6 : 20a543          >        jsr report_error
                       >
10c9 :                 >skip0811
                        
                                set_stat 0
                       >            load_flag 0
10c9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
10cb : 48              >            pha         ;use stack to load status
10cc : 28              >            plp
                        
10cd : ba                       tsx             ;clears N, sets Z
10ce : 08                       php             ;sp=fe
10cf : e0ff                     cpx #$ff
                                trap_ne
10d1 : f003            >        beq skip0815
                       >        trap            ;failed not equal (non zero)
10d3 : 20a543          >        jsr report_error
                       >
10d6 :                 >skip0815
                        
10d6 : adff01                   lda $1ff
                                cmp_flag minus
10d9 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
10db : f003            >        beq skip0818
                       >        trap            ;failed not equal (non zero)
10dd : 20a543          >        jsr report_error
                       >
10e0 :                 >skip0818
                        
10e0 : 68                       pla             ;sp=ff
                                next_test
10e1 : ad0002          >            lda test_case   ;previous test
10e4 : c90e            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
10e6 : f003            >        beq skip0821
                       >        trap            ;failed not equal (non zero)
10e8 : 20a543          >        jsr report_error
                       >
10eb :                 >skip0821
                       >
000f =                 >test_num = test_num + 1
10eb : a90f            >            lda #test_num   ;*** next tests' number
10ed : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                        ; testing index register load & store LDY LDX STY STX all addressing modes
                        ; LDX / STX - zp,y / abs,y
10f0 : a003                     ldy #3
10f2 :                  tldx    
                                set_stat 0
                       >            load_flag 0
10f2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
10f4 : 48              >            pha         ;use stack to load status
10f5 : 28              >            plp
                        
10f6 : b613                     ldx zp1,y
10f8 : 08                       php         ;test stores do not alter flags
10f9 : 8a                       txa
10fa : 49c3                     eor #$c3
10fc : 28                       plp
10fd : 990302                   sta abst,y
1100 : 08                       php         ;flags after load/store sequence
1101 : 49c3                     eor #$c3
1103 : d90802                   cmp abs1,y  ;test result
                                trap_ne
1106 : f003            >        beq skip0825
                       >        trap            ;failed not equal (non zero)
1108 : 20a543          >        jsr report_error
                       >
110b :                 >skip0825
                        
110b : 68                       pla         ;load status
                                eor_flag 0
110c : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
110e : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
1111 : f003            >        beq skip0828
                       >        trap            ;failed not equal (non zero)
1113 : 20a543          >        jsr report_error
                       >
1116 :                 >skip0828
                        
1116 : 88                       dey
1117 : 10d9                     bpl tldx                  
                        
1119 : a003                     ldy #3
111b :                  tldx1   
                                set_stat $ff
                       >            load_flag $ff
111b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
111d : 48              >            pha         ;use stack to load status
111e : 28              >            plp
                        
111f : b613                     ldx zp1,y
1121 : 08                       php         ;test stores do not alter flags
1122 : 8a                       txa
1123 : 49c3                     eor #$c3
1125 : 28                       plp
1126 : 990302                   sta abst,y
1129 : 08                       php         ;flags after load/store sequence
112a : 49c3                     eor #$c3
112c : d90802                   cmp abs1,y  ;test result
                                trap_ne
112f : f003            >        beq skip0832
                       >        trap            ;failed not equal (non zero)
1131 : 20a543          >        jsr report_error
                       >
1134 :                 >skip0832
                        
1134 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1135 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1137 : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
113a : f003            >        beq skip0835
                       >        trap            ;failed not equal (non zero)
113c : 20a543          >        jsr report_error
                       >
113f :                 >skip0835
                        
113f : 88                       dey
1140 : 10d9                     bpl tldx1                  
                        
1142 : a003                     ldy #3
1144 :                  tldx2   
                                set_stat 0
                       >            load_flag 0
1144 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1146 : 48              >            pha         ;use stack to load status
1147 : 28              >            plp
                        
1148 : be0802                   ldx abs1,y
114b : 08                       php         ;test stores do not alter flags
114c : 8a                       txa
114d : 49c3                     eor #$c3
114f : aa                       tax
1150 : 28                       plp
1151 : 960c                     stx zpt,y
1153 : 08                       php         ;flags after load/store sequence
1154 : 49c3                     eor #$c3
1156 : d91300                   cmp zp1,y   ;test result
                                trap_ne
1159 : f003            >        beq skip0839
                       >        trap            ;failed not equal (non zero)
115b : 20a543          >        jsr report_error
                       >
115e :                 >skip0839
                        
115e : 68                       pla         ;load status
                                eor_flag 0
115f : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1161 : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
1164 : f003            >        beq skip0842
                       >        trap            ;failed not equal (non zero)
1166 : 20a543          >        jsr report_error
                       >
1169 :                 >skip0842
                        
1169 : 88                       dey
116a : 10d8                     bpl tldx2                  
                        
116c : a003                     ldy #3
116e :                  tldx3   
                                set_stat $ff
                       >            load_flag $ff
116e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1170 : 48              >            pha         ;use stack to load status
1171 : 28              >            plp
                        
1172 : be0802                   ldx abs1,y
1175 : 08                       php         ;test stores do not alter flags
1176 : 8a                       txa
1177 : 49c3                     eor #$c3
1179 : aa                       tax
117a : 28                       plp
117b : 960c                     stx zpt,y
117d : 08                       php         ;flags after load/store sequence
117e : 49c3                     eor #$c3
1180 : d91300                   cmp zp1,y   ;test result
                                trap_ne
1183 : f003            >        beq skip0846
                       >        trap            ;failed not equal (non zero)
1185 : 20a543          >        jsr report_error
                       >
1188 :                 >skip0846
                        
1188 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1189 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
118b : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
118e : f003            >        beq skip0849
                       >        trap            ;failed not equal (non zero)
1190 : 20a543          >        jsr report_error
                       >
1193 :                 >skip0849
                        
1193 : 88                       dey
1194 : 10d8                     bpl tldx3
                                
1196 : a003                     ldy #3      ;testing store result
1198 : a200                     ldx #0
119a : b90c00           tstx    lda zpt,y
119d : 49c3                     eor #$c3
119f : d91300                   cmp zp1,y
                                trap_ne     ;store to zp data
11a2 : f003            >        beq skip0851
                       >        trap            ;failed not equal (non zero)
11a4 : 20a543          >        jsr report_error
                       >
11a7 :                 >skip0851
                        
11a7 : 960c                     stx zpt,y   ;clear                
11a9 : b90302                   lda abst,y
11ac : 49c3                     eor #$c3
11ae : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
11b1 : f003            >        beq skip0853
                       >        trap            ;failed not equal (non zero)
11b3 : 20a543          >        jsr report_error
                       >
11b6 :                 >skip0853
                        
11b6 : 8a                       txa
11b7 : 990302                   sta abst,y  ;clear                
11ba : 88                       dey
11bb : 10dd                     bpl tstx
                                next_test
11bd : ad0002          >            lda test_case   ;previous test
11c0 : c90f            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
11c2 : f003            >        beq skip0856
                       >        trap            ;failed not equal (non zero)
11c4 : 20a543          >        jsr report_error
                       >
11c7 :                 >skip0856
                       >
0010 =                 >test_num = test_num + 1
11c7 : a910            >            lda #test_num   ;*** next tests' number
11c9 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                        ; indexed wraparound test (only zp should wrap)
11cc : a0fd                     ldy #3+$fa
11ce : b619             tldx4   ldx zp1-$fa&$ff,y   ;wrap on indexed zp
11d0 : 8a                       txa
11d1 : 990901                   sta abst-$fa,y      ;no STX abs,y!
11d4 : 88                       dey
11d5 : c0fa                     cpy #$fa
11d7 : b0f5                     bcs tldx4                  
11d9 : a0fd                     ldy #3+$fa
11db : be0e01           tldx5   ldx abs1-$fa,y      ;no wrap on indexed abs
11de : 9612                     stx zpt-$fa&$ff,y
11e0 : 88                       dey
11e1 : c0fa                     cpy #$fa
11e3 : b0f6                     bcs tldx5                  
11e5 : a003                     ldy #3      ;testing wraparound result
11e7 : a200                     ldx #0
11e9 : b90c00           tstx1   lda zpt,y
11ec : d91300                   cmp zp1,y
                                trap_ne     ;store to zp data
11ef : f003            >        beq skip0858
                       >        trap            ;failed not equal (non zero)
11f1 : 20a543          >        jsr report_error
                       >
11f4 :                 >skip0858
                        
11f4 : 960c                     stx zpt,y   ;clear                
11f6 : b90302                   lda abst,y
11f9 : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
11fc : f003            >        beq skip0860
                       >        trap            ;failed not equal (non zero)
11fe : 20a543          >        jsr report_error
                       >
1201 :                 >skip0860
                        
1201 : 8a                       txa
1202 : 990302                   sta abst,y  ;clear                
1205 : 88                       dey
1206 : 10e1                     bpl tstx1
                                next_test
1208 : ad0002          >            lda test_case   ;previous test
120b : c910            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
120d : f003            >        beq skip0863
                       >        trap            ;failed not equal (non zero)
120f : 20a543          >        jsr report_error
                       >
1212 :                 >skip0863
                       >
0011 =                 >test_num = test_num + 1
1212 : a911            >            lda #test_num   ;*** next tests' number
1214 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                        ; LDY / STY - zp,x / abs,x
1217 : a203                     ldx #3
1219 :                  tldy    
                                set_stat 0
                       >            load_flag 0
1219 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
121b : 48              >            pha         ;use stack to load status
121c : 28              >            plp
                        
121d : b413                     ldy zp1,x
121f : 08                       php         ;test stores do not alter flags
1220 : 98                       tya
1221 : 49c3                     eor #$c3
1223 : 28                       plp
1224 : 9d0302                   sta abst,x
1227 : 08                       php         ;flags after load/store sequence
1228 : 49c3                     eor #$c3
122a : dd0802                   cmp abs1,x  ;test result
                                trap_ne
122d : f003            >        beq skip0867
                       >        trap            ;failed not equal (non zero)
122f : 20a543          >        jsr report_error
                       >
1232 :                 >skip0867
                        
1232 : 68                       pla         ;load status
                                eor_flag 0
1233 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1235 : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
1238 : f003            >        beq skip0870
                       >        trap            ;failed not equal (non zero)
123a : 20a543          >        jsr report_error
                       >
123d :                 >skip0870
                        
123d : ca                       dex
123e : 10d9                     bpl tldy                  
                        
1240 : a203                     ldx #3
1242 :                  tldy1   
                                set_stat $ff
                       >            load_flag $ff
1242 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1244 : 48              >            pha         ;use stack to load status
1245 : 28              >            plp
                        
1246 : b413                     ldy zp1,x
1248 : 08                       php         ;test stores do not alter flags
1249 : 98                       tya
124a : 49c3                     eor #$c3
124c : 28                       plp
124d : 9d0302                   sta abst,x
1250 : 08                       php         ;flags after load/store sequence
1251 : 49c3                     eor #$c3
1253 : dd0802                   cmp abs1,x  ;test result
                                trap_ne
1256 : f003            >        beq skip0874
                       >        trap            ;failed not equal (non zero)
1258 : 20a543          >        jsr report_error
                       >
125b :                 >skip0874
                        
125b : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
125c : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
125e : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
1261 : f003            >        beq skip0877
                       >        trap            ;failed not equal (non zero)
1263 : 20a543          >        jsr report_error
                       >
1266 :                 >skip0877
                        
1266 : ca                       dex
1267 : 10d9                     bpl tldy1                  
                        
1269 : a203                     ldx #3
126b :                  tldy2   
                                set_stat 0
                       >            load_flag 0
126b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
126d : 48              >            pha         ;use stack to load status
126e : 28              >            plp
                        
126f : bc0802                   ldy abs1,x
1272 : 08                       php         ;test stores do not alter flags
1273 : 98                       tya
1274 : 49c3                     eor #$c3
1276 : a8                       tay
1277 : 28                       plp
1278 : 940c                     sty zpt,x
127a : 08                       php         ;flags after load/store sequence
127b : 49c3                     eor #$c3
127d : d513                     cmp zp1,x   ;test result
                                trap_ne
127f : f003            >        beq skip0881
                       >        trap            ;failed not equal (non zero)
1281 : 20a543          >        jsr report_error
                       >
1284 :                 >skip0881
                        
1284 : 68                       pla         ;load status
                                eor_flag 0
1285 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1287 : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
128a : f003            >        beq skip0884
                       >        trap            ;failed not equal (non zero)
128c : 20a543          >        jsr report_error
                       >
128f :                 >skip0884
                        
128f : ca                       dex
1290 : 10d9                     bpl tldy2                  
                        
1292 : a203                     ldx #3
1294 :                  tldy3
                                set_stat $ff
                       >            load_flag $ff
1294 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1296 : 48              >            pha         ;use stack to load status
1297 : 28              >            plp
                        
1298 : bc0802                   ldy abs1,x
129b : 08                       php         ;test stores do not alter flags
129c : 98                       tya
129d : 49c3                     eor #$c3
129f : a8                       tay
12a0 : 28                       plp
12a1 : 940c                     sty zpt,x
12a3 : 08                       php         ;flags after load/store sequence
12a4 : 49c3                     eor #$c3
12a6 : d513                     cmp zp1,x   ;test result
                                trap_ne
12a8 : f003            >        beq skip0888
                       >        trap            ;failed not equal (non zero)
12aa : 20a543          >        jsr report_error
                       >
12ad :                 >skip0888
                        
12ad : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
12ae : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
12b0 : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
12b3 : f003            >        beq skip0891
                       >        trap            ;failed not equal (non zero)
12b5 : 20a543          >        jsr report_error
                       >
12b8 :                 >skip0891
                        
12b8 : ca                       dex
12b9 : 10d9                     bpl tldy3
                        
12bb : a203                     ldx #3      ;testing store result
12bd : a000                     ldy #0
12bf : b50c             tsty    lda zpt,x
12c1 : 49c3                     eor #$c3
12c3 : d513                     cmp zp1,x
                                trap_ne     ;store to zp,x data
12c5 : f003            >        beq skip0893
                       >        trap            ;failed not equal (non zero)
12c7 : 20a543          >        jsr report_error
                       >
12ca :                 >skip0893
                        
12ca : 940c                     sty zpt,x   ;clear                
12cc : bd0302                   lda abst,x
12cf : 49c3                     eor #$c3
12d1 : dd0802                   cmp abs1,x
                                trap_ne     ;store to abs,x data
12d4 : f003            >        beq skip0895
                       >        trap            ;failed not equal (non zero)
12d6 : 20a543          >        jsr report_error
                       >
12d9 :                 >skip0895
                        
12d9 : 8a                       txa
12da : 9d0302                   sta abst,x  ;clear                
12dd : ca                       dex
12de : 10df                     bpl tsty
                                next_test
12e0 : ad0002          >            lda test_case   ;previous test
12e3 : c911            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
12e5 : f003            >        beq skip0898
                       >        trap            ;failed not equal (non zero)
12e7 : 20a543          >        jsr report_error
                       >
12ea :                 >skip0898
                       >
0012 =                 >test_num = test_num + 1
12ea : a912            >            lda #test_num   ;*** next tests' number
12ec : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; indexed wraparound test (only zp should wrap)
12ef : a2fd                     ldx #3+$fa
12f1 : b419             tldy4   ldy zp1-$fa&$ff,x   ;wrap on indexed zp
12f3 : 98                       tya
12f4 : 9d0901                   sta abst-$fa,x      ;no STX abs,x!
12f7 : ca                       dex
12f8 : e0fa                     cpx #$fa
12fa : b0f5                     bcs tldy4                  
12fc : a2fd                     ldx #3+$fa
12fe : bc0e01           tldy5   ldy abs1-$fa,x      ;no wrap on indexed abs
1301 : 9412                     sty zpt-$fa&$ff,x
1303 : ca                       dex
1304 : e0fa                     cpx #$fa
1306 : b0f6                     bcs tldy5                  
1308 : a203                     ldx #3      ;testing wraparound result
130a : a000                     ldy #0
130c : b50c             tsty1   lda zpt,x
130e : d513                     cmp zp1,x
                                trap_ne     ;store to zp,x data
1310 : f003            >        beq skip0900
                       >        trap            ;failed not equal (non zero)
1312 : 20a543          >        jsr report_error
                       >
1315 :                 >skip0900
                        
1315 : 940c                     sty zpt,x   ;clear                
1317 : bd0302                   lda abst,x
131a : dd0802                   cmp abs1,x
                                trap_ne     ;store to abs,x data
131d : f003            >        beq skip0902
                       >        trap            ;failed not equal (non zero)
131f : 20a543          >        jsr report_error
                       >
1322 :                 >skip0902
                        
1322 : 8a                       txa
1323 : 9d0302                   sta abst,x  ;clear                
1326 : ca                       dex
1327 : 10e3                     bpl tsty1
                                next_test
1329 : ad0002          >            lda test_case   ;previous test
132c : c912            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
132e : f003            >        beq skip0905
                       >        trap            ;failed not equal (non zero)
1330 : 20a543          >        jsr report_error
                       >
1333 :                 >skip0905
                       >
0013 =                 >test_num = test_num + 1
1333 : a913            >            lda #test_num   ;*** next tests' number
1335 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; LDX / STX - zp / abs / #
                                set_stat 0  
                       >            load_flag 0  
1338 : a900            >            lda #0               ;allow test to change I-flag (no mask)
                       >
133a : 48              >            pha         ;use stack to load status
133b : 28              >            plp
                        
133c : a613                     ldx zp1
133e : 08                       php         ;test stores do not alter flags
133f : 8a                       txa
1340 : 49c3                     eor #$c3
1342 : aa                       tax
1343 : 28                       plp
1344 : 8e0302                   stx abst
1347 : 08                       php         ;flags after load/store sequence
1348 : 49c3                     eor #$c3
134a : aa                       tax
134b : e0c3                     cpx #$c3    ;test result
                                trap_ne
134d : f003            >        beq skip0909
                       >        trap            ;failed not equal (non zero)
134f : 20a543          >        jsr report_error
                       >
1352 :                 >skip0909
                        
1352 : 68                       pla         ;load status
                                eor_flag 0
1353 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1355 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
1358 : f003            >        beq skip0912
                       >        trap            ;failed not equal (non zero)
135a : 20a543          >        jsr report_error
                       >
135d :                 >skip0912
                        
                                set_stat 0
                       >            load_flag 0
135d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
135f : 48              >            pha         ;use stack to load status
1360 : 28              >            plp
                        
1361 : a614                     ldx zp1+1
1363 : 08                       php         ;test stores do not alter flags
1364 : 8a                       txa
1365 : 49c3                     eor #$c3
1367 : aa                       tax
1368 : 28                       plp
1369 : 8e0402                   stx abst+1
136c : 08                       php         ;flags after load/store sequence
136d : 49c3                     eor #$c3
136f : aa                       tax
1370 : e082                     cpx #$82    ;test result
                                trap_ne
1372 : f003            >        beq skip0916
                       >        trap            ;failed not equal (non zero)
1374 : 20a543          >        jsr report_error
                       >
1377 :                 >skip0916
                        
1377 : 68                       pla         ;load status
                                eor_flag 0
1378 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
137a : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
137d : f003            >        beq skip0919
                       >        trap            ;failed not equal (non zero)
137f : 20a543          >        jsr report_error
                       >
1382 :                 >skip0919
                        
                                set_stat 0
                       >            load_flag 0
1382 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1384 : 48              >            pha         ;use stack to load status
1385 : 28              >            plp
                        
1386 : a615                     ldx zp1+2
1388 : 08                       php         ;test stores do not alter flags
1389 : 8a                       txa
138a : 49c3                     eor #$c3
138c : aa                       tax
138d : 28                       plp
138e : 8e0502                   stx abst+2
1391 : 08                       php         ;flags after load/store sequence
1392 : 49c3                     eor #$c3
1394 : aa                       tax
1395 : e041                     cpx #$41    ;test result
                                trap_ne
1397 : f003            >        beq skip0923
                       >        trap            ;failed not equal (non zero)
1399 : 20a543          >        jsr report_error
                       >
139c :                 >skip0923
                        
139c : 68                       pla         ;load status
                                eor_flag 0
139d : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
139f : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
13a2 : f003            >        beq skip0926
                       >        trap            ;failed not equal (non zero)
13a4 : 20a543          >        jsr report_error
                       >
13a7 :                 >skip0926
                        
                                set_stat 0
                       >            load_flag 0
13a7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
13a9 : 48              >            pha         ;use stack to load status
13aa : 28              >            plp
                        
13ab : a616                     ldx zp1+3
13ad : 08                       php         ;test stores do not alter flags
13ae : 8a                       txa
13af : 49c3                     eor #$c3
13b1 : aa                       tax
13b2 : 28                       plp
13b3 : 8e0602                   stx abst+3
13b6 : 08                       php         ;flags after load/store sequence
13b7 : 49c3                     eor #$c3
13b9 : aa                       tax
13ba : e000                     cpx #0      ;test result
                                trap_ne
13bc : f003            >        beq skip0930
                       >        trap            ;failed not equal (non zero)
13be : 20a543          >        jsr report_error
                       >
13c1 :                 >skip0930
                        
13c1 : 68                       pla         ;load status
                                eor_flag 0
13c2 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
13c4 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
13c7 : f003            >        beq skip0933
                       >        trap            ;failed not equal (non zero)
13c9 : 20a543          >        jsr report_error
                       >
13cc :                 >skip0933
                        
                        
                                set_stat $ff
                       >            load_flag $ff
13cc : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
13ce : 48              >            pha         ;use stack to load status
13cf : 28              >            plp
                        
13d0 : a613                     ldx zp1  
13d2 : 08                       php         ;test stores do not alter flags
13d3 : 8a                       txa
13d4 : 49c3                     eor #$c3
13d6 : aa                       tax
13d7 : 28                       plp
13d8 : 8e0302                   stx abst  
13db : 08                       php         ;flags after load/store sequence
13dc : 49c3                     eor #$c3
13de : aa                       tax
13df : e0c3                     cpx #$c3    ;test result
                                trap_ne     ;
13e1 : f003            >        beq skip0937
                       >        trap            ;failed not equal (non zero)
13e3 : 20a543          >        jsr report_error
                       >
13e6 :                 >skip0937
                        
13e6 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
13e7 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
13e9 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
13ec : f003            >        beq skip0940
                       >        trap            ;failed not equal (non zero)
13ee : 20a543          >        jsr report_error
                       >
13f1 :                 >skip0940
                        
                                set_stat $ff
                       >            load_flag $ff
13f1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
13f3 : 48              >            pha         ;use stack to load status
13f4 : 28              >            plp
                        
13f5 : a614                     ldx zp1+1
13f7 : 08                       php         ;test stores do not alter flags
13f8 : 8a                       txa
13f9 : 49c3                     eor #$c3
13fb : aa                       tax
13fc : 28                       plp
13fd : 8e0402                   stx abst+1
1400 : 08                       php         ;flags after load/store sequence
1401 : 49c3                     eor #$c3
1403 : aa                       tax
1404 : e082                     cpx #$82    ;test result
                                trap_ne
1406 : f003            >        beq skip0944
                       >        trap            ;failed not equal (non zero)
1408 : 20a543          >        jsr report_error
                       >
140b :                 >skip0944
                        
140b : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
140c : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
140e : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
1411 : f003            >        beq skip0947
                       >        trap            ;failed not equal (non zero)
1413 : 20a543          >        jsr report_error
                       >
1416 :                 >skip0947
                        
                                set_stat $ff
                       >            load_flag $ff
1416 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1418 : 48              >            pha         ;use stack to load status
1419 : 28              >            plp
                        
141a : a615                     ldx zp1+2
141c : 08                       php         ;test stores do not alter flags
141d : 8a                       txa
141e : 49c3                     eor #$c3
1420 : aa                       tax
1421 : 28                       plp
1422 : 8e0502                   stx abst+2
1425 : 08                       php         ;flags after load/store sequence
1426 : 49c3                     eor #$c3
1428 : aa                       tax
1429 : e041                     cpx #$41    ;test result
                                trap_ne     ;
142b : f003            >        beq skip0951
                       >        trap            ;failed not equal (non zero)
142d : 20a543          >        jsr report_error
                       >
1430 :                 >skip0951
                        
1430 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1431 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1433 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
1436 : f003            >        beq skip0954
                       >        trap            ;failed not equal (non zero)
1438 : 20a543          >        jsr report_error
                       >
143b :                 >skip0954
                        
                                set_stat $ff
                       >            load_flag $ff
143b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
143d : 48              >            pha         ;use stack to load status
143e : 28              >            plp
                        
143f : a616                     ldx zp1+3
1441 : 08                       php         ;test stores do not alter flags
1442 : 8a                       txa
1443 : 49c3                     eor #$c3
1445 : aa                       tax
1446 : 28                       plp
1447 : 8e0602                   stx abst+3
144a : 08                       php         ;flags after load/store sequence
144b : 49c3                     eor #$c3
144d : aa                       tax
144e : e000                     cpx #0      ;test result
                                trap_ne
1450 : f003            >        beq skip0958
                       >        trap            ;failed not equal (non zero)
1452 : 20a543          >        jsr report_error
                       >
1455 :                 >skip0958
                        
1455 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1456 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1458 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
145b : f003            >        beq skip0961
                       >        trap            ;failed not equal (non zero)
145d : 20a543          >        jsr report_error
                       >
1460 :                 >skip0961
                        
                        
                                set_stat 0
                       >            load_flag 0
1460 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1462 : 48              >            pha         ;use stack to load status
1463 : 28              >            plp
                        
1464 : ae0802                   ldx abs1  
1467 : 08                       php         ;test stores do not alter flags
1468 : 8a                       txa
1469 : 49c3                     eor #$c3
146b : aa                       tax
146c : 28                       plp
146d : 860c                     stx zpt  
146f : 08                       php         ;flags after load/store sequence
1470 : 49c3                     eor #$c3
1472 : c513                     cmp zp1     ;test result
                                trap_ne
1474 : f003            >        beq skip0965
                       >        trap            ;failed not equal (non zero)
1476 : 20a543          >        jsr report_error
                       >
1479 :                 >skip0965
                        
1479 : 68                       pla         ;load status
                                eor_flag 0
147a : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
147c : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
147f : f003            >        beq skip0968
                       >        trap            ;failed not equal (non zero)
1481 : 20a543          >        jsr report_error
                       >
1484 :                 >skip0968
                        
                                set_stat 0
                       >            load_flag 0
1484 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1486 : 48              >            pha         ;use stack to load status
1487 : 28              >            plp
                        
1488 : ae0902                   ldx abs1+1
148b : 08                       php         ;test stores do not alter flags
148c : 8a                       txa
148d : 49c3                     eor #$c3
148f : aa                       tax
1490 : 28                       plp
1491 : 860d                     stx zpt+1
1493 : 08                       php         ;flags after load/store sequence
1494 : 49c3                     eor #$c3
1496 : c514                     cmp zp1+1   ;test result
                                trap_ne
1498 : f003            >        beq skip0972
                       >        trap            ;failed not equal (non zero)
149a : 20a543          >        jsr report_error
                       >
149d :                 >skip0972
                        
149d : 68                       pla         ;load status
                                eor_flag 0
149e : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
14a0 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
14a3 : f003            >        beq skip0975
                       >        trap            ;failed not equal (non zero)
14a5 : 20a543          >        jsr report_error
                       >
14a8 :                 >skip0975
                        
                                set_stat 0
                       >            load_flag 0
14a8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
14aa : 48              >            pha         ;use stack to load status
14ab : 28              >            plp
                        
14ac : ae0a02                   ldx abs1+2
14af : 08                       php         ;test stores do not alter flags
14b0 : 8a                       txa
14b1 : 49c3                     eor #$c3
14b3 : aa                       tax
14b4 : 28                       plp
14b5 : 860e                     stx zpt+2
14b7 : 08                       php         ;flags after load/store sequence
14b8 : 49c3                     eor #$c3
14ba : c515                     cmp zp1+2   ;test result
                                trap_ne
14bc : f003            >        beq skip0979
                       >        trap            ;failed not equal (non zero)
14be : 20a543          >        jsr report_error
                       >
14c1 :                 >skip0979
                        
14c1 : 68                       pla         ;load status
                                eor_flag 0
14c2 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
14c4 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
14c7 : f003            >        beq skip0982
                       >        trap            ;failed not equal (non zero)
14c9 : 20a543          >        jsr report_error
                       >
14cc :                 >skip0982
                        
                                set_stat 0
                       >            load_flag 0
14cc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
14ce : 48              >            pha         ;use stack to load status
14cf : 28              >            plp
                        
14d0 : ae0b02                   ldx abs1+3
14d3 : 08                       php         ;test stores do not alter flags
14d4 : 8a                       txa
14d5 : 49c3                     eor #$c3
14d7 : aa                       tax
14d8 : 28                       plp
14d9 : 860f                     stx zpt+3
14db : 08                       php         ;flags after load/store sequence
14dc : 49c3                     eor #$c3
14de : c516                     cmp zp1+3   ;test result
                                trap_ne
14e0 : f003            >        beq skip0986
                       >        trap            ;failed not equal (non zero)
14e2 : 20a543          >        jsr report_error
                       >
14e5 :                 >skip0986
                        
14e5 : 68                       pla         ;load status
                                eor_flag 0
14e6 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
14e8 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
14eb : f003            >        beq skip0989
                       >        trap            ;failed not equal (non zero)
14ed : 20a543          >        jsr report_error
                       >
14f0 :                 >skip0989
                        
                        
                                set_stat $ff
                       >            load_flag $ff
14f0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
14f2 : 48              >            pha         ;use stack to load status
14f3 : 28              >            plp
                        
14f4 : ae0802                   ldx abs1  
14f7 : 08                       php         ;test stores do not alter flags
14f8 : 8a                       txa
14f9 : 49c3                     eor #$c3
14fb : aa                       tax
14fc : 28                       plp
14fd : 860c                     stx zpt  
14ff : 08                       php         ;flags after load/store sequence
1500 : 49c3                     eor #$c3
1502 : aa                       tax
1503 : e413                     cpx zp1     ;test result
                                trap_ne
1505 : f003            >        beq skip0993
                       >        trap            ;failed not equal (non zero)
1507 : 20a543          >        jsr report_error
                       >
150a :                 >skip0993
                        
150a : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
150b : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
150d : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
1510 : f003            >        beq skip0996
                       >        trap            ;failed not equal (non zero)
1512 : 20a543          >        jsr report_error
                       >
1515 :                 >skip0996
                        
                                set_stat $ff
                       >            load_flag $ff
1515 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1517 : 48              >            pha         ;use stack to load status
1518 : 28              >            plp
                        
1519 : ae0902                   ldx abs1+1
151c : 08                       php         ;test stores do not alter flags
151d : 8a                       txa
151e : 49c3                     eor #$c3
1520 : aa                       tax
1521 : 28                       plp
1522 : 860d                     stx zpt+1
1524 : 08                       php         ;flags after load/store sequence
1525 : 49c3                     eor #$c3
1527 : aa                       tax
1528 : e414                     cpx zp1+1   ;test result
                                trap_ne
152a : f003            >        beq skip1000
                       >        trap            ;failed not equal (non zero)
152c : 20a543          >        jsr report_error
                       >
152f :                 >skip1000
                        
152f : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1530 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1532 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
1535 : f003            >        beq skip1003
                       >        trap            ;failed not equal (non zero)
1537 : 20a543          >        jsr report_error
                       >
153a :                 >skip1003
                        
                                set_stat $ff
                       >            load_flag $ff
153a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
153c : 48              >            pha         ;use stack to load status
153d : 28              >            plp
                        
153e : ae0a02                   ldx abs1+2
1541 : 08                       php         ;test stores do not alter flags
1542 : 8a                       txa
1543 : 49c3                     eor #$c3
1545 : aa                       tax
1546 : 28                       plp
1547 : 860e                     stx zpt+2
1549 : 08                       php         ;flags after load/store sequence
154a : 49c3                     eor #$c3
154c : aa                       tax
154d : e415                     cpx zp1+2   ;test result
                                trap_ne
154f : f003            >        beq skip1007
                       >        trap            ;failed not equal (non zero)
1551 : 20a543          >        jsr report_error
                       >
1554 :                 >skip1007
                        
1554 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1555 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1557 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
155a : f003            >        beq skip1010
                       >        trap            ;failed not equal (non zero)
155c : 20a543          >        jsr report_error
                       >
155f :                 >skip1010
                        
                                set_stat $ff
                       >            load_flag $ff
155f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1561 : 48              >            pha         ;use stack to load status
1562 : 28              >            plp
                        
1563 : ae0b02                   ldx abs1+3
1566 : 08                       php         ;test stores do not alter flags
1567 : 8a                       txa
1568 : 49c3                     eor #$c3
156a : aa                       tax
156b : 28                       plp
156c : 860f                     stx zpt+3
156e : 08                       php         ;flags after load/store sequence
156f : 49c3                     eor #$c3
1571 : aa                       tax
1572 : e416                     cpx zp1+3   ;test result
                                trap_ne
1574 : f003            >        beq skip1014
                       >        trap            ;failed not equal (non zero)
1576 : 20a543          >        jsr report_error
                       >
1579 :                 >skip1014
                        
1579 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
157a : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
157c : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
157f : f003            >        beq skip1017
                       >        trap            ;failed not equal (non zero)
1581 : 20a543          >        jsr report_error
                       >
1584 :                 >skip1017
                        
                        
                                set_stat 0  
                       >            load_flag 0  
1584 : a900            >            lda #0               ;allow test to change I-flag (no mask)
                       >
1586 : 48              >            pha         ;use stack to load status
1587 : 28              >            plp
                        
1588 : a2c3                     ldx #$c3
158a : 08                       php
158b : ec0802                   cpx abs1    ;test result
                                trap_ne
158e : f003            >        beq skip1021
                       >        trap            ;failed not equal (non zero)
1590 : 20a543          >        jsr report_error
                       >
1593 :                 >skip1021
                        
1593 : 68                       pla         ;load status
                                eor_flag 0
1594 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1596 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
1599 : f003            >        beq skip1024
                       >        trap            ;failed not equal (non zero)
159b : 20a543          >        jsr report_error
                       >
159e :                 >skip1024
                        
                                set_stat 0
                       >            load_flag 0
159e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
15a0 : 48              >            pha         ;use stack to load status
15a1 : 28              >            plp
                        
15a2 : a282                     ldx #$82
15a4 : 08                       php
15a5 : ec0902                   cpx abs1+1  ;test result
                                trap_ne
15a8 : f003            >        beq skip1028
                       >        trap            ;failed not equal (non zero)
15aa : 20a543          >        jsr report_error
                       >
15ad :                 >skip1028
                        
15ad : 68                       pla         ;load status
                                eor_flag 0
15ae : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
15b0 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
15b3 : f003            >        beq skip1031
                       >        trap            ;failed not equal (non zero)
15b5 : 20a543          >        jsr report_error
                       >
15b8 :                 >skip1031
                        
                                set_stat 0
                       >            load_flag 0
15b8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
15ba : 48              >            pha         ;use stack to load status
15bb : 28              >            plp
                        
15bc : a241                     ldx #$41
15be : 08                       php
15bf : ec0a02                   cpx abs1+2  ;test result
                                trap_ne
15c2 : f003            >        beq skip1035
                       >        trap            ;failed not equal (non zero)
15c4 : 20a543          >        jsr report_error
                       >
15c7 :                 >skip1035
                        
15c7 : 68                       pla         ;load status
                                eor_flag 0
15c8 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
15ca : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
15cd : f003            >        beq skip1038
                       >        trap            ;failed not equal (non zero)
15cf : 20a543          >        jsr report_error
                       >
15d2 :                 >skip1038
                        
                                set_stat 0
                       >            load_flag 0
15d2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
15d4 : 48              >            pha         ;use stack to load status
15d5 : 28              >            plp
                        
15d6 : a200                     ldx #0
15d8 : 08                       php
15d9 : ec0b02                   cpx abs1+3  ;test result
                                trap_ne
15dc : f003            >        beq skip1042
                       >        trap            ;failed not equal (non zero)
15de : 20a543          >        jsr report_error
                       >
15e1 :                 >skip1042
                        
15e1 : 68                       pla         ;load status
                                eor_flag 0
15e2 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
15e4 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
15e7 : f003            >        beq skip1045
                       >        trap            ;failed not equal (non zero)
15e9 : 20a543          >        jsr report_error
                       >
15ec :                 >skip1045
                        
                        
                                set_stat $ff
                       >            load_flag $ff
15ec : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
15ee : 48              >            pha         ;use stack to load status
15ef : 28              >            plp
                        
15f0 : a2c3                     ldx #$c3  
15f2 : 08                       php
15f3 : ec0802                   cpx abs1    ;test result
                                trap_ne
15f6 : f003            >        beq skip1049
                       >        trap            ;failed not equal (non zero)
15f8 : 20a543          >        jsr report_error
                       >
15fb :                 >skip1049
                        
15fb : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
15fc : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
15fe : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
1601 : f003            >        beq skip1052
                       >        trap            ;failed not equal (non zero)
1603 : 20a543          >        jsr report_error
                       >
1606 :                 >skip1052
                        
                                set_stat $ff
                       >            load_flag $ff
1606 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1608 : 48              >            pha         ;use stack to load status
1609 : 28              >            plp
                        
160a : a282                     ldx #$82
160c : 08                       php
160d : ec0902                   cpx abs1+1  ;test result
                                trap_ne
1610 : f003            >        beq skip1056
                       >        trap            ;failed not equal (non zero)
1612 : 20a543          >        jsr report_error
                       >
1615 :                 >skip1056
                        
1615 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1616 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1618 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
161b : f003            >        beq skip1059
                       >        trap            ;failed not equal (non zero)
161d : 20a543          >        jsr report_error
                       >
1620 :                 >skip1059
                        
                                set_stat $ff
                       >            load_flag $ff
1620 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1622 : 48              >            pha         ;use stack to load status
1623 : 28              >            plp
                        
1624 : a241                     ldx #$41
1626 : 08                       php
1627 : ec0a02                   cpx abs1+2  ;test result
                                trap_ne
162a : f003            >        beq skip1063
                       >        trap            ;failed not equal (non zero)
162c : 20a543          >        jsr report_error
                       >
162f :                 >skip1063
                        
162f : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1630 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1632 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
1635 : f003            >        beq skip1066
                       >        trap            ;failed not equal (non zero)
1637 : 20a543          >        jsr report_error
                       >
163a :                 >skip1066
                        
                                set_stat $ff
                       >            load_flag $ff
163a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
163c : 48              >            pha         ;use stack to load status
163d : 28              >            plp
                        
163e : a200                     ldx #0
1640 : 08                       php
1641 : ec0b02                   cpx abs1+3  ;test result
                                trap_ne
1644 : f003            >        beq skip1070
                       >        trap            ;failed not equal (non zero)
1646 : 20a543          >        jsr report_error
                       >
1649 :                 >skip1070
                        
1649 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
164a : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
164c : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
164f : f003            >        beq skip1073
                       >        trap            ;failed not equal (non zero)
1651 : 20a543          >        jsr report_error
                       >
1654 :                 >skip1073
                        
                        
1654 : a200                     ldx #0
1656 : a50c                     lda zpt  
1658 : 49c3                     eor #$c3
165a : c513                     cmp zp1  
                                trap_ne     ;store to zp data
165c : f003            >        beq skip1075
                       >        trap            ;failed not equal (non zero)
165e : 20a543          >        jsr report_error
                       >
1661 :                 >skip1075
                        
1661 : 860c                     stx zpt     ;clear                
1663 : ad0302                   lda abst  
1666 : 49c3                     eor #$c3
1668 : cd0802                   cmp abs1  
                                trap_ne     ;store to abs data
166b : f003            >        beq skip1077
                       >        trap            ;failed not equal (non zero)
166d : 20a543          >        jsr report_error
                       >
1670 :                 >skip1077
                        
1670 : 8e0302                   stx abst    ;clear                
1673 : a50d                     lda zpt+1
1675 : 49c3                     eor #$c3
1677 : c514                     cmp zp1+1
                                trap_ne     ;store to zp data
1679 : f003            >        beq skip1079
                       >        trap            ;failed not equal (non zero)
167b : 20a543          >        jsr report_error
                       >
167e :                 >skip1079
                        
167e : 860d                     stx zpt+1   ;clear                
1680 : ad0402                   lda abst+1
1683 : 49c3                     eor #$c3
1685 : cd0902                   cmp abs1+1
                                trap_ne     ;store to abs data
1688 : f003            >        beq skip1081
                       >        trap            ;failed not equal (non zero)
168a : 20a543          >        jsr report_error
                       >
168d :                 >skip1081
                        
168d : 8e0402                   stx abst+1  ;clear                
1690 : a50e                     lda zpt+2
1692 : 49c3                     eor #$c3
1694 : c515                     cmp zp1+2
                                trap_ne     ;store to zp data
1696 : f003            >        beq skip1083
                       >        trap            ;failed not equal (non zero)
1698 : 20a543          >        jsr report_error
                       >
169b :                 >skip1083
                        
169b : 860e                     stx zpt+2   ;clear                
169d : ad0502                   lda abst+2
16a0 : 49c3                     eor #$c3
16a2 : cd0a02                   cmp abs1+2
                                trap_ne     ;store to abs data
16a5 : f003            >        beq skip1085
                       >        trap            ;failed not equal (non zero)
16a7 : 20a543          >        jsr report_error
                       >
16aa :                 >skip1085
                        
16aa : 8e0502                   stx abst+2  ;clear                
16ad : a50f                     lda zpt+3
16af : 49c3                     eor #$c3
16b1 : c516                     cmp zp1+3
                                trap_ne     ;store to zp data
16b3 : f003            >        beq skip1087
                       >        trap            ;failed not equal (non zero)
16b5 : 20a543          >        jsr report_error
                       >
16b8 :                 >skip1087
                        
16b8 : 860f                     stx zpt+3   ;clear                
16ba : ad0602                   lda abst+3
16bd : 49c3                     eor #$c3
16bf : cd0b02                   cmp abs1+3
                                trap_ne     ;store to abs data
16c2 : f003            >        beq skip1089
                       >        trap            ;failed not equal (non zero)
16c4 : 20a543          >        jsr report_error
                       >
16c7 :                 >skip1089
                        
16c7 : 8e0602                   stx abst+3  ;clear                
                                next_test
16ca : ad0002          >            lda test_case   ;previous test
16cd : c913            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
16cf : f003            >        beq skip1092
                       >        trap            ;failed not equal (non zero)
16d1 : 20a543          >        jsr report_error
                       >
16d4 :                 >skip1092
                       >
0014 =                 >test_num = test_num + 1
16d4 : a914            >            lda #test_num   ;*** next tests' number
16d6 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; LDY / STY - zp / abs / #
                                set_stat 0
                       >            load_flag 0
16d9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
16db : 48              >            pha         ;use stack to load status
16dc : 28              >            plp
                        
16dd : a413                     ldy zp1  
16df : 08                       php         ;test stores do not alter flags
16e0 : 98                       tya
16e1 : 49c3                     eor #$c3
16e3 : a8                       tay
16e4 : 28                       plp
16e5 : 8c0302                   sty abst  
16e8 : 08                       php         ;flags after load/store sequence
16e9 : 49c3                     eor #$c3
16eb : a8                       tay
16ec : c0c3                     cpy #$c3    ;test result
                                trap_ne
16ee : f003            >        beq skip1096
                       >        trap            ;failed not equal (non zero)
16f0 : 20a543          >        jsr report_error
                       >
16f3 :                 >skip1096
                        
16f3 : 68                       pla         ;load status
                                eor_flag 0
16f4 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
16f6 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
16f9 : f003            >        beq skip1099
                       >        trap            ;failed not equal (non zero)
16fb : 20a543          >        jsr report_error
                       >
16fe :                 >skip1099
                        
                                set_stat 0
                       >            load_flag 0
16fe : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1700 : 48              >            pha         ;use stack to load status
1701 : 28              >            plp
                        
1702 : a414                     ldy zp1+1
1704 : 08                       php         ;test stores do not alter flags
1705 : 98                       tya
1706 : 49c3                     eor #$c3
1708 : a8                       tay
1709 : 28                       plp
170a : 8c0402                   sty abst+1
170d : 08                       php         ;flags after load/store sequence
170e : 49c3                     eor #$c3
1710 : a8                       tay
1711 : c082                     cpy #$82    ;test result
                                trap_ne
1713 : f003            >        beq skip1103
                       >        trap            ;failed not equal (non zero)
1715 : 20a543          >        jsr report_error
                       >
1718 :                 >skip1103
                        
1718 : 68                       pla         ;load status
                                eor_flag 0
1719 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
171b : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
171e : f003            >        beq skip1106
                       >        trap            ;failed not equal (non zero)
1720 : 20a543          >        jsr report_error
                       >
1723 :                 >skip1106
                        
                                set_stat 0
                       >            load_flag 0
1723 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1725 : 48              >            pha         ;use stack to load status
1726 : 28              >            plp
                        
1727 : a415                     ldy zp1+2
1729 : 08                       php         ;test stores do not alter flags
172a : 98                       tya
172b : 49c3                     eor #$c3
172d : a8                       tay
172e : 28                       plp
172f : 8c0502                   sty abst+2
1732 : 08                       php         ;flags after load/store sequence
1733 : 49c3                     eor #$c3
1735 : a8                       tay
1736 : c041                     cpy #$41    ;test result
                                trap_ne
1738 : f003            >        beq skip1110
                       >        trap            ;failed not equal (non zero)
173a : 20a543          >        jsr report_error
                       >
173d :                 >skip1110
                        
173d : 68                       pla         ;load status
                                eor_flag 0
173e : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1740 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
1743 : f003            >        beq skip1113
                       >        trap            ;failed not equal (non zero)
1745 : 20a543          >        jsr report_error
                       >
1748 :                 >skip1113
                        
                                set_stat 0
                       >            load_flag 0
1748 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
174a : 48              >            pha         ;use stack to load status
174b : 28              >            plp
                        
174c : a416                     ldy zp1+3
174e : 08                       php         ;test stores do not alter flags
174f : 98                       tya
1750 : 49c3                     eor #$c3
1752 : a8                       tay
1753 : 28                       plp
1754 : 8c0602                   sty abst+3
1757 : 08                       php         ;flags after load/store sequence
1758 : 49c3                     eor #$c3
175a : a8                       tay
175b : c000                     cpy #0      ;test result
                                trap_ne
175d : f003            >        beq skip1117
                       >        trap            ;failed not equal (non zero)
175f : 20a543          >        jsr report_error
                       >
1762 :                 >skip1117
                        
1762 : 68                       pla         ;load status
                                eor_flag 0
1763 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1765 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
1768 : f003            >        beq skip1120
                       >        trap            ;failed not equal (non zero)
176a : 20a543          >        jsr report_error
                       >
176d :                 >skip1120
                        
                        
                                set_stat $ff
                       >            load_flag $ff
176d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
176f : 48              >            pha         ;use stack to load status
1770 : 28              >            plp
                        
1771 : a413                     ldy zp1  
1773 : 08                       php         ;test stores do not alter flags
1774 : 98                       tya
1775 : 49c3                     eor #$c3
1777 : a8                       tay
1778 : 28                       plp
1779 : 8c0302                   sty abst  
177c : 08                       php         ;flags after load/store sequence
177d : 49c3                     eor #$c3
177f : a8                       tay
1780 : c0c3                     cpy #$c3    ;test result
                                trap_ne
1782 : f003            >        beq skip1124
                       >        trap            ;failed not equal (non zero)
1784 : 20a543          >        jsr report_error
                       >
1787 :                 >skip1124
                        
1787 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1788 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
178a : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
178d : f003            >        beq skip1127
                       >        trap            ;failed not equal (non zero)
178f : 20a543          >        jsr report_error
                       >
1792 :                 >skip1127
                        
                                set_stat $ff
                       >            load_flag $ff
1792 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1794 : 48              >            pha         ;use stack to load status
1795 : 28              >            plp
                        
1796 : a414                     ldy zp1+1
1798 : 08                       php         ;test stores do not alter flags
1799 : 98                       tya
179a : 49c3                     eor #$c3
179c : a8                       tay
179d : 28                       plp
179e : 8c0402                   sty abst+1
17a1 : 08                       php         ;flags after load/store sequence
17a2 : 49c3                     eor #$c3
17a4 : a8                       tay
17a5 : c082                     cpy #$82   ;test result
                                trap_ne
17a7 : f003            >        beq skip1131
                       >        trap            ;failed not equal (non zero)
17a9 : 20a543          >        jsr report_error
                       >
17ac :                 >skip1131
                        
17ac : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
17ad : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
17af : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
17b2 : f003            >        beq skip1134
                       >        trap            ;failed not equal (non zero)
17b4 : 20a543          >        jsr report_error
                       >
17b7 :                 >skip1134
                        
                                set_stat $ff
                       >            load_flag $ff
17b7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
17b9 : 48              >            pha         ;use stack to load status
17ba : 28              >            plp
                        
17bb : a415                     ldy zp1+2
17bd : 08                       php         ;test stores do not alter flags
17be : 98                       tya
17bf : 49c3                     eor #$c3
17c1 : a8                       tay
17c2 : 28                       plp
17c3 : 8c0502                   sty abst+2
17c6 : 08                       php         ;flags after load/store sequence
17c7 : 49c3                     eor #$c3
17c9 : a8                       tay
17ca : c041                     cpy #$41    ;test result
                                trap_ne
17cc : f003            >        beq skip1138
                       >        trap            ;failed not equal (non zero)
17ce : 20a543          >        jsr report_error
                       >
17d1 :                 >skip1138
                        
17d1 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
17d2 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
17d4 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
17d7 : f003            >        beq skip1141
                       >        trap            ;failed not equal (non zero)
17d9 : 20a543          >        jsr report_error
                       >
17dc :                 >skip1141
                        
                                set_stat $ff
                       >            load_flag $ff
17dc : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
17de : 48              >            pha         ;use stack to load status
17df : 28              >            plp
                        
17e0 : a416                     ldy zp1+3
17e2 : 08                       php         ;test stores do not alter flags
17e3 : 98                       tya
17e4 : 49c3                     eor #$c3
17e6 : a8                       tay
17e7 : 28                       plp
17e8 : 8c0602                   sty abst+3
17eb : 08                       php         ;flags after load/store sequence
17ec : 49c3                     eor #$c3
17ee : a8                       tay
17ef : c000                     cpy #0      ;test result
                                trap_ne
17f1 : f003            >        beq skip1145
                       >        trap            ;failed not equal (non zero)
17f3 : 20a543          >        jsr report_error
                       >
17f6 :                 >skip1145
                        
17f6 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
17f7 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
17f9 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
17fc : f003            >        beq skip1148
                       >        trap            ;failed not equal (non zero)
17fe : 20a543          >        jsr report_error
                       >
1801 :                 >skip1148
                        
                                
                                set_stat 0
                       >            load_flag 0
1801 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1803 : 48              >            pha         ;use stack to load status
1804 : 28              >            plp
                        
1805 : ac0802                   ldy abs1  
1808 : 08                       php         ;test stores do not alter flags
1809 : 98                       tya
180a : 49c3                     eor #$c3
180c : a8                       tay
180d : 28                       plp
180e : 840c                     sty zpt  
1810 : 08                       php         ;flags after load/store sequence
1811 : 49c3                     eor #$c3
1813 : a8                       tay
1814 : c413                     cpy zp1     ;test result
                                trap_ne
1816 : f003            >        beq skip1152
                       >        trap            ;failed not equal (non zero)
1818 : 20a543          >        jsr report_error
                       >
181b :                 >skip1152
                        
181b : 68                       pla         ;load status
                                eor_flag 0
181c : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
181e : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
1821 : f003            >        beq skip1155
                       >        trap            ;failed not equal (non zero)
1823 : 20a543          >        jsr report_error
                       >
1826 :                 >skip1155
                        
                                set_stat 0
                       >            load_flag 0
1826 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1828 : 48              >            pha         ;use stack to load status
1829 : 28              >            plp
                        
182a : ac0902                   ldy abs1+1
182d : 08                       php         ;test stores do not alter flags
182e : 98                       tya
182f : 49c3                     eor #$c3
1831 : a8                       tay
1832 : 28                       plp
1833 : 840d                     sty zpt+1
1835 : 08                       php         ;flags after load/store sequence
1836 : 49c3                     eor #$c3
1838 : a8                       tay
1839 : c414                     cpy zp1+1   ;test result
                                trap_ne
183b : f003            >        beq skip1159
                       >        trap            ;failed not equal (non zero)
183d : 20a543          >        jsr report_error
                       >
1840 :                 >skip1159
                        
1840 : 68                       pla         ;load status
                                eor_flag 0
1841 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1843 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
1846 : f003            >        beq skip1162
                       >        trap            ;failed not equal (non zero)
1848 : 20a543          >        jsr report_error
                       >
184b :                 >skip1162
                        
                                set_stat 0
                       >            load_flag 0
184b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
184d : 48              >            pha         ;use stack to load status
184e : 28              >            plp
                        
184f : ac0a02                   ldy abs1+2
1852 : 08                       php         ;test stores do not alter flags
1853 : 98                       tya
1854 : 49c3                     eor #$c3
1856 : a8                       tay
1857 : 28                       plp
1858 : 840e                     sty zpt+2
185a : 08                       php         ;flags after load/store sequence
185b : 49c3                     eor #$c3
185d : a8                       tay
185e : c415                     cpy zp1+2   ;test result
                                trap_ne
1860 : f003            >        beq skip1166
                       >        trap            ;failed not equal (non zero)
1862 : 20a543          >        jsr report_error
                       >
1865 :                 >skip1166
                        
1865 : 68                       pla         ;load status
                                eor_flag 0
1866 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1868 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
186b : f003            >        beq skip1169
                       >        trap            ;failed not equal (non zero)
186d : 20a543          >        jsr report_error
                       >
1870 :                 >skip1169
                        
                                set_stat 0
                       >            load_flag 0
1870 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1872 : 48              >            pha         ;use stack to load status
1873 : 28              >            plp
                        
1874 : ac0b02                   ldy abs1+3
1877 : 08                       php         ;test stores do not alter flags
1878 : 98                       tya
1879 : 49c3                     eor #$c3
187b : a8                       tay
187c : 28                       plp
187d : 840f                     sty zpt+3
187f : 08                       php         ;flags after load/store sequence
1880 : 49c3                     eor #$c3
1882 : a8                       tay
1883 : c416                     cpy zp1+3   ;test result
                                trap_ne
1885 : f003            >        beq skip1173
                       >        trap            ;failed not equal (non zero)
1887 : 20a543          >        jsr report_error
                       >
188a :                 >skip1173
                        
188a : 68                       pla         ;load status
                                eor_flag 0
188b : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
188d : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
1890 : f003            >        beq skip1176
                       >        trap            ;failed not equal (non zero)
1892 : 20a543          >        jsr report_error
                       >
1895 :                 >skip1176
                        
                        
                                set_stat $ff
                       >            load_flag $ff
1895 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1897 : 48              >            pha         ;use stack to load status
1898 : 28              >            plp
                        
1899 : ac0802                   ldy abs1  
189c : 08                       php         ;test stores do not alter flags
189d : 98                       tya
189e : 49c3                     eor #$c3
18a0 : a8                       tay
18a1 : 28                       plp
18a2 : 840c                     sty zpt  
18a4 : 08                       php         ;flags after load/store sequence
18a5 : 49c3                     eor #$c3
18a7 : a8                       tay
18a8 : c513                     cmp zp1     ;test result
                                trap_ne
18aa : f003            >        beq skip1180
                       >        trap            ;failed not equal (non zero)
18ac : 20a543          >        jsr report_error
                       >
18af :                 >skip1180
                        
18af : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
18b0 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
18b2 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
18b5 : f003            >        beq skip1183
                       >        trap            ;failed not equal (non zero)
18b7 : 20a543          >        jsr report_error
                       >
18ba :                 >skip1183
                        
                                set_stat $ff
                       >            load_flag $ff
18ba : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
18bc : 48              >            pha         ;use stack to load status
18bd : 28              >            plp
                        
18be : ac0902                   ldy abs1+1
18c1 : 08                       php         ;test stores do not alter flags
18c2 : 98                       tya
18c3 : 49c3                     eor #$c3
18c5 : a8                       tay
18c6 : 28                       plp
18c7 : 840d                     sty zpt+1
18c9 : 08                       php         ;flags after load/store sequence
18ca : 49c3                     eor #$c3
18cc : a8                       tay
18cd : c514                     cmp zp1+1   ;test result
                                trap_ne
18cf : f003            >        beq skip1187
                       >        trap            ;failed not equal (non zero)
18d1 : 20a543          >        jsr report_error
                       >
18d4 :                 >skip1187
                        
18d4 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
18d5 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
18d7 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
18da : f003            >        beq skip1190
                       >        trap            ;failed not equal (non zero)
18dc : 20a543          >        jsr report_error
                       >
18df :                 >skip1190
                        
                                set_stat $ff
                       >            load_flag $ff
18df : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
18e1 : 48              >            pha         ;use stack to load status
18e2 : 28              >            plp
                        
18e3 : ac0a02                   ldy abs1+2
18e6 : 08                       php         ;test stores do not alter flags
18e7 : 98                       tya
18e8 : 49c3                     eor #$c3
18ea : a8                       tay
18eb : 28                       plp
18ec : 840e                     sty zpt+2
18ee : 08                       php         ;flags after load/store sequence
18ef : 49c3                     eor #$c3
18f1 : a8                       tay
18f2 : c515                     cmp zp1+2   ;test result
                                trap_ne
18f4 : f003            >        beq skip1194
                       >        trap            ;failed not equal (non zero)
18f6 : 20a543          >        jsr report_error
                       >
18f9 :                 >skip1194
                        
18f9 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
18fa : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
18fc : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
18ff : f003            >        beq skip1197
                       >        trap            ;failed not equal (non zero)
1901 : 20a543          >        jsr report_error
                       >
1904 :                 >skip1197
                        
                                set_stat $ff
                       >            load_flag $ff
1904 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1906 : 48              >            pha         ;use stack to load status
1907 : 28              >            plp
                        
1908 : ac0b02                   ldy abs1+3
190b : 08                       php         ;test stores do not alter flags
190c : 98                       tya
190d : 49c3                     eor #$c3
190f : a8                       tay
1910 : 28                       plp
1911 : 840f                     sty zpt+3
1913 : 08                       php         ;flags after load/store sequence
1914 : 49c3                     eor #$c3
1916 : a8                       tay
1917 : c516                     cmp zp1+3   ;test result
                                trap_ne
1919 : f003            >        beq skip1201
                       >        trap            ;failed not equal (non zero)
191b : 20a543          >        jsr report_error
                       >
191e :                 >skip1201
                        
191e : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
191f : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1921 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
1924 : f003            >        beq skip1204
                       >        trap            ;failed not equal (non zero)
1926 : 20a543          >        jsr report_error
                       >
1929 :                 >skip1204
                        
                        
                        
                                set_stat 0
                       >            load_flag 0
1929 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
192b : 48              >            pha         ;use stack to load status
192c : 28              >            plp
                        
192d : a0c3                     ldy #$c3  
192f : 08                       php
1930 : cc0802                   cpy abs1    ;test result
                                trap_ne
1933 : f003            >        beq skip1208
                       >        trap            ;failed not equal (non zero)
1935 : 20a543          >        jsr report_error
                       >
1938 :                 >skip1208
                        
1938 : 68                       pla         ;load status
                                eor_flag 0
1939 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
193b : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
193e : f003            >        beq skip1211
                       >        trap            ;failed not equal (non zero)
1940 : 20a543          >        jsr report_error
                       >
1943 :                 >skip1211
                        
                                set_stat 0
                       >            load_flag 0
1943 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1945 : 48              >            pha         ;use stack to load status
1946 : 28              >            plp
                        
1947 : a082                     ldy #$82
1949 : 08                       php
194a : cc0902                   cpy abs1+1  ;test result
                                trap_ne
194d : f003            >        beq skip1215
                       >        trap            ;failed not equal (non zero)
194f : 20a543          >        jsr report_error
                       >
1952 :                 >skip1215
                        
1952 : 68                       pla         ;load status
                                eor_flag 0
1953 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1955 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
1958 : f003            >        beq skip1218
                       >        trap            ;failed not equal (non zero)
195a : 20a543          >        jsr report_error
                       >
195d :                 >skip1218
                        
                                set_stat 0
                       >            load_flag 0
195d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
195f : 48              >            pha         ;use stack to load status
1960 : 28              >            plp
                        
1961 : a041                     ldy #$41
1963 : 08                       php
1964 : cc0a02                   cpy abs1+2  ;test result
                                trap_ne
1967 : f003            >        beq skip1222
                       >        trap            ;failed not equal (non zero)
1969 : 20a543          >        jsr report_error
                       >
196c :                 >skip1222
                        
196c : 68                       pla         ;load status
                                eor_flag 0
196d : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
196f : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
1972 : f003            >        beq skip1225
                       >        trap            ;failed not equal (non zero)
1974 : 20a543          >        jsr report_error
                       >
1977 :                 >skip1225
                        
                                set_stat 0
                       >            load_flag 0
1977 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1979 : 48              >            pha         ;use stack to load status
197a : 28              >            plp
                        
197b : a000                     ldy #0
197d : 08                       php
197e : cc0b02                   cpy abs1+3  ;test result
                                trap_ne
1981 : f003            >        beq skip1229
                       >        trap            ;failed not equal (non zero)
1983 : 20a543          >        jsr report_error
                       >
1986 :                 >skip1229
                        
1986 : 68                       pla         ;load status
                                eor_flag 0
1987 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1989 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
198c : f003            >        beq skip1232
                       >        trap            ;failed not equal (non zero)
198e : 20a543          >        jsr report_error
                       >
1991 :                 >skip1232
                        
                        
                                set_stat $ff
                       >            load_flag $ff
1991 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1993 : 48              >            pha         ;use stack to load status
1994 : 28              >            plp
                        
1995 : a0c3                     ldy #$c3  
1997 : 08                       php
1998 : cc0802                   cpy abs1    ;test result
                                trap_ne
199b : f003            >        beq skip1236
                       >        trap            ;failed not equal (non zero)
199d : 20a543          >        jsr report_error
                       >
19a0 :                 >skip1236
                        
19a0 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
19a1 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
19a3 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
19a6 : f003            >        beq skip1239
                       >        trap            ;failed not equal (non zero)
19a8 : 20a543          >        jsr report_error
                       >
19ab :                 >skip1239
                        
                                set_stat $ff
                       >            load_flag $ff
19ab : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
19ad : 48              >            pha         ;use stack to load status
19ae : 28              >            plp
                        
19af : a082                     ldy #$82
19b1 : 08                       php
19b2 : cc0902                   cpy abs1+1  ;test result
                                trap_ne
19b5 : f003            >        beq skip1243
                       >        trap            ;failed not equal (non zero)
19b7 : 20a543          >        jsr report_error
                       >
19ba :                 >skip1243
                        
19ba : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
19bb : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
19bd : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
19c0 : f003            >        beq skip1246
                       >        trap            ;failed not equal (non zero)
19c2 : 20a543          >        jsr report_error
                       >
19c5 :                 >skip1246
                        
                                set_stat $ff
                       >            load_flag $ff
19c5 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
19c7 : 48              >            pha         ;use stack to load status
19c8 : 28              >            plp
                        
19c9 : a041                     ldy #$41
19cb : 08                       php
19cc : cc0a02                   cpy abs1+2   ;test result
                                trap_ne
19cf : f003            >        beq skip1250
                       >        trap            ;failed not equal (non zero)
19d1 : 20a543          >        jsr report_error
                       >
19d4 :                 >skip1250
                        
19d4 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
19d5 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
19d7 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
19da : f003            >        beq skip1253
                       >        trap            ;failed not equal (non zero)
19dc : 20a543          >        jsr report_error
                       >
19df :                 >skip1253
                        
                                set_stat $ff
                       >            load_flag $ff
19df : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
19e1 : 48              >            pha         ;use stack to load status
19e2 : 28              >            plp
                        
19e3 : a000                     ldy #0
19e5 : 08                       php
19e6 : cc0b02                   cpy abs1+3  ;test result
                                trap_ne
19e9 : f003            >        beq skip1257
                       >        trap            ;failed not equal (non zero)
19eb : 20a543          >        jsr report_error
                       >
19ee :                 >skip1257
                        
19ee : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
19ef : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
19f1 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
19f4 : f003            >        beq skip1260
                       >        trap            ;failed not equal (non zero)
19f6 : 20a543          >        jsr report_error
                       >
19f9 :                 >skip1260
                        
                                
19f9 : a000                     ldy #0
19fb : a50c                     lda zpt  
19fd : 49c3                     eor #$c3
19ff : c513                     cmp zp1  
                                trap_ne     ;store to zp   data
1a01 : f003            >        beq skip1262
                       >        trap            ;failed not equal (non zero)
1a03 : 20a543          >        jsr report_error
                       >
1a06 :                 >skip1262
                        
1a06 : 840c                     sty zpt     ;clear                
1a08 : ad0302                   lda abst  
1a0b : 49c3                     eor #$c3
1a0d : cd0802                   cmp abs1  
                                trap_ne     ;store to abs   data
1a10 : f003            >        beq skip1264
                       >        trap            ;failed not equal (non zero)
1a12 : 20a543          >        jsr report_error
                       >
1a15 :                 >skip1264
                        
1a15 : 8c0302                   sty abst    ;clear                
1a18 : a50d                     lda zpt+1
1a1a : 49c3                     eor #$c3
1a1c : c514                     cmp zp1+1
                                trap_ne     ;store to zp+1 data
1a1e : f003            >        beq skip1266
                       >        trap            ;failed not equal (non zero)
1a20 : 20a543          >        jsr report_error
                       >
1a23 :                 >skip1266
                        
1a23 : 840d                     sty zpt+1   ;clear                
1a25 : ad0402                   lda abst+1
1a28 : 49c3                     eor #$c3
1a2a : cd0902                   cmp abs1+1
                                trap_ne     ;store to abs+1 data
1a2d : f003            >        beq skip1268
                       >        trap            ;failed not equal (non zero)
1a2f : 20a543          >        jsr report_error
                       >
1a32 :                 >skip1268
                        
1a32 : 8c0402                   sty abst+1  ;clear                
1a35 : a50e                     lda zpt+2
1a37 : 49c3                     eor #$c3
1a39 : c515                     cmp zp1+2
                                trap_ne     ;store to zp+2 data
1a3b : f003            >        beq skip1270
                       >        trap            ;failed not equal (non zero)
1a3d : 20a543          >        jsr report_error
                       >
1a40 :                 >skip1270
                        
1a40 : 840e                     sty zpt+2   ;clear                
1a42 : ad0502                   lda abst+2
1a45 : 49c3                     eor #$c3
1a47 : cd0a02                   cmp abs1+2
                                trap_ne     ;store to abs+2 data
1a4a : f003            >        beq skip1272
                       >        trap            ;failed not equal (non zero)
1a4c : 20a543          >        jsr report_error
                       >
1a4f :                 >skip1272
                        
1a4f : 8c0502                   sty abst+2  ;clear                
1a52 : a50f                     lda zpt+3
1a54 : 49c3                     eor #$c3
1a56 : c516                     cmp zp1+3
                                trap_ne     ;store to zp+3 data
1a58 : f003            >        beq skip1274
                       >        trap            ;failed not equal (non zero)
1a5a : 20a543          >        jsr report_error
                       >
1a5d :                 >skip1274
                        
1a5d : 840f                     sty zpt+3   ;clear                
1a5f : ad0602                   lda abst+3
1a62 : 49c3                     eor #$c3
1a64 : cd0b02                   cmp abs1+3
                                trap_ne     ;store to abs+3 data
1a67 : f003            >        beq skip1276
                       >        trap            ;failed not equal (non zero)
1a69 : 20a543          >        jsr report_error
                       >
1a6c :                 >skip1276
                        
1a6c : 8c0602                   sty abst+3  ;clear                
                                next_test
1a6f : ad0002          >            lda test_case   ;previous test
1a72 : c914            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1a74 : f003            >        beq skip1279
                       >        trap            ;failed not equal (non zero)
1a76 : 20a543          >        jsr report_error
                       >
1a79 :                 >skip1279
                       >
0015 =                 >test_num = test_num + 1
1a79 : a915            >            lda #test_num   ;*** next tests' number
1a7b : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing load / store accumulator LDA / STA all addressing modes
                        ; LDA / STA - zp,x / abs,x
1a7e : a203                     ldx #3
1a80 :                  tldax    
                                set_stat 0
                       >            load_flag 0
1a80 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1a82 : 48              >            pha         ;use stack to load status
1a83 : 28              >            plp
                        
1a84 : b513                     lda zp1,x
1a86 : 08                       php         ;test stores do not alter flags
1a87 : 49c3                     eor #$c3
1a89 : 28                       plp
1a8a : 9d0302                   sta abst,x
1a8d : 08                       php         ;flags after load/store sequence
1a8e : 49c3                     eor #$c3
1a90 : dd0802                   cmp abs1,x  ;test result
                                trap_ne
1a93 : f003            >        beq skip1283
                       >        trap            ;failed not equal (non zero)
1a95 : 20a543          >        jsr report_error
                       >
1a98 :                 >skip1283
                        
1a98 : 68                       pla         ;load status
                                eor_flag 0
1a99 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1a9b : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
1a9e : f003            >        beq skip1286
                       >        trap            ;failed not equal (non zero)
1aa0 : 20a543          >        jsr report_error
                       >
1aa3 :                 >skip1286
                        
1aa3 : ca                       dex
1aa4 : 10da                     bpl tldax                  
                        
1aa6 : a203                     ldx #3
1aa8 :                  tldax1   
                                set_stat $ff
                       >            load_flag $ff
1aa8 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1aaa : 48              >            pha         ;use stack to load status
1aab : 28              >            plp
                        
1aac : b513                     lda zp1,x
1aae : 08                       php         ;test stores do not alter flags
1aaf : 49c3                     eor #$c3
1ab1 : 28                       plp
1ab2 : 9d0302                   sta abst,x
1ab5 : 08                       php         ;flags after load/store sequence
1ab6 : 49c3                     eor #$c3
1ab8 : dd0802                   cmp abs1,x   ;test result
                                trap_ne
1abb : f003            >        beq skip1290
                       >        trap            ;failed not equal (non zero)
1abd : 20a543          >        jsr report_error
                       >
1ac0 :                 >skip1290
                        
1ac0 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1ac1 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1ac3 : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
1ac6 : f003            >        beq skip1293
                       >        trap            ;failed not equal (non zero)
1ac8 : 20a543          >        jsr report_error
                       >
1acb :                 >skip1293
                        
1acb : ca                       dex
1acc : 10da                     bpl tldax1                  
                        
1ace : a203                     ldx #3
1ad0 :                  tldax2   
                                set_stat 0
                       >            load_flag 0
1ad0 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1ad2 : 48              >            pha         ;use stack to load status
1ad3 : 28              >            plp
                        
1ad4 : bd0802                   lda abs1,x
1ad7 : 08                       php         ;test stores do not alter flags
1ad8 : 49c3                     eor #$c3
1ada : 28                       plp
1adb : 950c                     sta zpt,x
1add : 08                       php         ;flags after load/store sequence
1ade : 49c3                     eor #$c3
1ae0 : d513                     cmp zp1,x   ;test result
                                trap_ne
1ae2 : f003            >        beq skip1297
                       >        trap            ;failed not equal (non zero)
1ae4 : 20a543          >        jsr report_error
                       >
1ae7 :                 >skip1297
                        
1ae7 : 68                       pla         ;load status
                                eor_flag 0
1ae8 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1aea : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
1aed : f003            >        beq skip1300
                       >        trap            ;failed not equal (non zero)
1aef : 20a543          >        jsr report_error
                       >
1af2 :                 >skip1300
                        
1af2 : ca                       dex
1af3 : 10db                     bpl tldax2                  
                        
1af5 : a203                     ldx #3
1af7 :                  tldax3
                                set_stat $ff
                       >            load_flag $ff
1af7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1af9 : 48              >            pha         ;use stack to load status
1afa : 28              >            plp
                        
1afb : bd0802                   lda abs1,x
1afe : 08                       php         ;test stores do not alter flags
1aff : 49c3                     eor #$c3
1b01 : 28                       plp
1b02 : 950c                     sta zpt,x
1b04 : 08                       php         ;flags after load/store sequence
1b05 : 49c3                     eor #$c3
1b07 : d513                     cmp zp1,x   ;test result
                                trap_ne
1b09 : f003            >        beq skip1304
                       >        trap            ;failed not equal (non zero)
1b0b : 20a543          >        jsr report_error
                       >
1b0e :                 >skip1304
                        
1b0e : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1b0f : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1b11 : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
1b14 : f003            >        beq skip1307
                       >        trap            ;failed not equal (non zero)
1b16 : 20a543          >        jsr report_error
                       >
1b19 :                 >skip1307
                        
1b19 : ca                       dex
1b1a : 10db                     bpl tldax3
                        
1b1c : a203                     ldx #3      ;testing store result
1b1e : a000                     ldy #0
1b20 : b50c             tstax   lda zpt,x
1b22 : 49c3                     eor #$c3
1b24 : d513                     cmp zp1,x
                                trap_ne     ;store to zp,x data
1b26 : f003            >        beq skip1309
                       >        trap            ;failed not equal (non zero)
1b28 : 20a543          >        jsr report_error
                       >
1b2b :                 >skip1309
                        
1b2b : 940c                     sty zpt,x   ;clear                
1b2d : bd0302                   lda abst,x
1b30 : 49c3                     eor #$c3
1b32 : dd0802                   cmp abs1,x
                                trap_ne     ;store to abs,x data
1b35 : f003            >        beq skip1311
                       >        trap            ;failed not equal (non zero)
1b37 : 20a543          >        jsr report_error
                       >
1b3a :                 >skip1311
                        
1b3a : 8a                       txa
1b3b : 9d0302                   sta abst,x  ;clear                
1b3e : ca                       dex
1b3f : 10df                     bpl tstax
                                next_test
1b41 : ad0002          >            lda test_case   ;previous test
1b44 : c915            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1b46 : f003            >        beq skip1314
                       >        trap            ;failed not equal (non zero)
1b48 : 20a543          >        jsr report_error
                       >
1b4b :                 >skip1314
                       >
0016 =                 >test_num = test_num + 1
1b4b : a916            >            lda #test_num   ;*** next tests' number
1b4d : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; LDA / STA - (zp),y / abs,y / (zp,x)
1b50 : a003                     ldy #3
1b52 :                  tlday    
                                set_stat 0
                       >            load_flag 0
1b52 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1b54 : 48              >            pha         ;use stack to load status
1b55 : 28              >            plp
                        
1b56 : b124                     lda (ind1),y
1b58 : 08                       php         ;test stores do not alter flags
1b59 : 49c3                     eor #$c3
1b5b : 28                       plp
1b5c : 990302                   sta abst,y
1b5f : 08                       php         ;flags after load/store sequence
1b60 : 49c3                     eor #$c3
1b62 : d90802                   cmp abs1,y  ;test result
                                trap_ne
1b65 : f003            >        beq skip1318
                       >        trap            ;failed not equal (non zero)
1b67 : 20a543          >        jsr report_error
                       >
1b6a :                 >skip1318
                        
1b6a : 68                       pla         ;load status
                                eor_flag 0
1b6b : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1b6d : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
1b70 : f003            >        beq skip1321
                       >        trap            ;failed not equal (non zero)
1b72 : 20a543          >        jsr report_error
                       >
1b75 :                 >skip1321
                        
1b75 : 88                       dey
1b76 : 10da                     bpl tlday                  
                        
1b78 : a003                     ldy #3
1b7a :                  tlday1   
                                set_stat $ff
                       >            load_flag $ff
1b7a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1b7c : 48              >            pha         ;use stack to load status
1b7d : 28              >            plp
                        
1b7e : b124                     lda (ind1),y
1b80 : 08                       php         ;test stores do not alter flags
1b81 : 49c3                     eor #$c3
1b83 : 28                       plp
1b84 : 990302                   sta abst,y
1b87 : 08                       php         ;flags after load/store sequence
1b88 : 49c3                     eor #$c3
1b8a : d90802                   cmp abs1,y  ;test result
                                trap_ne
1b8d : f003            >        beq skip1325
                       >        trap            ;failed not equal (non zero)
1b8f : 20a543          >        jsr report_error
                       >
1b92 :                 >skip1325
                        
1b92 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1b93 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1b95 : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
1b98 : f003            >        beq skip1328
                       >        trap            ;failed not equal (non zero)
1b9a : 20a543          >        jsr report_error
                       >
1b9d :                 >skip1328
                        
1b9d : 88                       dey
1b9e : 10da                     bpl tlday1                  
                        
1ba0 : a003                     ldy #3      ;testing store result
1ba2 : a200                     ldx #0
1ba4 : b90302           tstay   lda abst,y
1ba7 : 49c3                     eor #$c3
1ba9 : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
1bac : f003            >        beq skip1330
                       >        trap            ;failed not equal (non zero)
1bae : 20a543          >        jsr report_error
                       >
1bb1 :                 >skip1330
                        
1bb1 : 8a                       txa
1bb2 : 990302                   sta abst,y  ;clear                
1bb5 : 88                       dey
1bb6 : 10ec                     bpl tstay
                        
1bb8 : a003                     ldy #3
1bba :                  tlday2   
                                set_stat 0
                       >            load_flag 0
1bba : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1bbc : 48              >            pha         ;use stack to load status
1bbd : 28              >            plp
                        
1bbe : b90802                   lda abs1,y
1bc1 : 08                       php         ;test stores do not alter flags
1bc2 : 49c3                     eor #$c3
1bc4 : 28                       plp
1bc5 : 9130                     sta (indt),y
1bc7 : 08                       php         ;flags after load/store sequence
1bc8 : 49c3                     eor #$c3
1bca : d124                     cmp (ind1),y    ;test result
                                trap_ne
1bcc : f003            >        beq skip1334
                       >        trap            ;failed not equal (non zero)
1bce : 20a543          >        jsr report_error
                       >
1bd1 :                 >skip1334
                        
1bd1 : 68                       pla         ;load status
                                eor_flag 0
1bd2 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1bd4 : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
1bd7 : f003            >        beq skip1337
                       >        trap            ;failed not equal (non zero)
1bd9 : 20a543          >        jsr report_error
                       >
1bdc :                 >skip1337
                        
1bdc : 88                       dey
1bdd : 10db                     bpl tlday2                  
                        
1bdf : a003                     ldy #3
1be1 :                  tlday3   
                                set_stat $ff
                       >            load_flag $ff
1be1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1be3 : 48              >            pha         ;use stack to load status
1be4 : 28              >            plp
                        
1be5 : b90802                   lda abs1,y
1be8 : 08                       php         ;test stores do not alter flags
1be9 : 49c3                     eor #$c3
1beb : 28                       plp
1bec : 9130                     sta (indt),y
1bee : 08                       php         ;flags after load/store sequence
1bef : 49c3                     eor #$c3
1bf1 : d124                     cmp (ind1),y   ;test result
                                trap_ne
1bf3 : f003            >        beq skip1341
                       >        trap            ;failed not equal (non zero)
1bf5 : 20a543          >        jsr report_error
                       >
1bf8 :                 >skip1341
                        
1bf8 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1bf9 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1bfb : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
1bfe : f003            >        beq skip1344
                       >        trap            ;failed not equal (non zero)
1c00 : 20a543          >        jsr report_error
                       >
1c03 :                 >skip1344
                        
1c03 : 88                       dey
1c04 : 10db                     bpl tlday3
                                
1c06 : a003                     ldy #3      ;testing store result
1c08 : a200                     ldx #0
1c0a : b90302           tstay1  lda abst,y
1c0d : 49c3                     eor #$c3
1c0f : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
1c12 : f003            >        beq skip1346
                       >        trap            ;failed not equal (non zero)
1c14 : 20a543          >        jsr report_error
                       >
1c17 :                 >skip1346
                        
1c17 : 8a                       txa
1c18 : 990302                   sta abst,y  ;clear                
1c1b : 88                       dey
1c1c : 10ec                     bpl tstay1
                                
1c1e : a206                     ldx #6
1c20 : a003                     ldy #3
1c22 :                  tldax4   
                                set_stat 0
                       >            load_flag 0
1c22 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1c24 : 48              >            pha         ;use stack to load status
1c25 : 28              >            plp
                        
1c26 : a124                     lda (ind1,x)
1c28 : 08                       php         ;test stores do not alter flags
1c29 : 49c3                     eor #$c3
1c2b : 28                       plp
1c2c : 8130                     sta (indt,x)
1c2e : 08                       php         ;flags after load/store sequence
1c2f : 49c3                     eor #$c3
1c31 : d90802                   cmp abs1,y  ;test result
                                trap_ne
1c34 : f003            >        beq skip1350
                       >        trap            ;failed not equal (non zero)
1c36 : 20a543          >        jsr report_error
                       >
1c39 :                 >skip1350
                        
1c39 : 68                       pla         ;load status
                                eor_flag 0
1c3a : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1c3c : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
1c3f : f003            >        beq skip1353
                       >        trap            ;failed not equal (non zero)
1c41 : 20a543          >        jsr report_error
                       >
1c44 :                 >skip1353
                        
1c44 : ca                       dex
1c45 : ca                       dex
1c46 : 88                       dey
1c47 : 10d9                     bpl tldax4                  
                        
1c49 : a206                     ldx #6
1c4b : a003                     ldy #3
1c4d :                  tldax5
                                set_stat $ff
                       >            load_flag $ff
1c4d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1c4f : 48              >            pha         ;use stack to load status
1c50 : 28              >            plp
                        
1c51 : a124                     lda (ind1,x)
1c53 : 08                       php         ;test stores do not alter flags
1c54 : 49c3                     eor #$c3
1c56 : 28                       plp
1c57 : 8130                     sta (indt,x)
1c59 : 08                       php         ;flags after load/store sequence
1c5a : 49c3                     eor #$c3
1c5c : d90802                   cmp abs1,y  ;test result
                                trap_ne
1c5f : f003            >        beq skip1357
                       >        trap            ;failed not equal (non zero)
1c61 : 20a543          >        jsr report_error
                       >
1c64 :                 >skip1357
                        
1c64 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1c65 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1c67 : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
1c6a : f003            >        beq skip1360
                       >        trap            ;failed not equal (non zero)
1c6c : 20a543          >        jsr report_error
                       >
1c6f :                 >skip1360
                        
1c6f : ca                       dex
1c70 : ca                       dex
1c71 : 88                       dey
1c72 : 10d9                     bpl tldax5
                        
1c74 : a003                     ldy #3      ;testing store result
1c76 : a200                     ldx #0
1c78 : b90302           tstay2  lda abst,y
1c7b : 49c3                     eor #$c3
1c7d : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
1c80 : f003            >        beq skip1362
                       >        trap            ;failed not equal (non zero)
1c82 : 20a543          >        jsr report_error
                       >
1c85 :                 >skip1362
                        
1c85 : 8a                       txa
1c86 : 990302                   sta abst,y  ;clear                
1c89 : 88                       dey
1c8a : 10ec                     bpl tstay2
                                next_test
1c8c : ad0002          >            lda test_case   ;previous test
1c8f : c916            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1c91 : f003            >        beq skip1365
                       >        trap            ;failed not equal (non zero)
1c93 : 20a543          >        jsr report_error
                       >
1c96 :                 >skip1365
                       >
0017 =                 >test_num = test_num + 1
1c96 : a917            >            lda #test_num   ;*** next tests' number
1c98 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; indexed wraparound test (only zp should wrap)
1c9b : a2fd                     ldx #3+$fa
1c9d : b519             tldax6  lda zp1-$fa&$ff,x   ;wrap on indexed zp
1c9f : 9d0901                   sta abst-$fa,x      ;no STX abs,x!
1ca2 : ca                       dex
1ca3 : e0fa                     cpx #$fa
1ca5 : b0f6                     bcs tldax6                  
1ca7 : a2fd                     ldx #3+$fa
1ca9 : bd0e01           tldax7  lda abs1-$fa,x      ;no wrap on indexed abs
1cac : 9512                     sta zpt-$fa&$ff,x
1cae : ca                       dex
1caf : e0fa                     cpx #$fa
1cb1 : b0f6                     bcs tldax7
                                                  
1cb3 : a203                     ldx #3      ;testing wraparound result
1cb5 : a000                     ldy #0
1cb7 : b50c             tstax1  lda zpt,x
1cb9 : d513                     cmp zp1,x
                                trap_ne     ;store to zp,x data
1cbb : f003            >        beq skip1367
                       >        trap            ;failed not equal (non zero)
1cbd : 20a543          >        jsr report_error
                       >
1cc0 :                 >skip1367
                        
1cc0 : 940c                     sty zpt,x   ;clear                
1cc2 : bd0302                   lda abst,x
1cc5 : dd0802                   cmp abs1,x
                                trap_ne     ;store to abs,x data
1cc8 : f003            >        beq skip1369
                       >        trap            ;failed not equal (non zero)
1cca : 20a543          >        jsr report_error
                       >
1ccd :                 >skip1369
                        
1ccd : 8a                       txa
1cce : 9d0302                   sta abst,x  ;clear                
1cd1 : ca                       dex
1cd2 : 10e3                     bpl tstax1
                        
1cd4 : a0fb                     ldy #3+$f8
1cd6 : a2fe                     ldx #6+$f8
1cd8 : a12c             tlday4  lda (ind1-$f8&$ff,x) ;wrap on indexed zp indirect
1cda : 990b01                   sta abst-$f8,y
1cdd : ca                       dex
1cde : ca                       dex
1cdf : 88                       dey
1ce0 : c0f8                     cpy #$f8
1ce2 : b0f4                     bcs tlday4
1ce4 : a003                     ldy #3      ;testing wraparound result
1ce6 : a200                     ldx #0
1ce8 : b90302           tstay4  lda abst,y
1ceb : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
1cee : f003            >        beq skip1371
                       >        trap            ;failed not equal (non zero)
1cf0 : 20a543          >        jsr report_error
                       >
1cf3 :                 >skip1371
                        
1cf3 : 8a                       txa
1cf4 : 990302                   sta abst,y  ;clear                
1cf7 : 88                       dey
1cf8 : 10ee                     bpl tstay4
                                
1cfa : a0fb                     ldy #3+$f8
1cfc : b91001           tlday5  lda abs1-$f8,y  ;no wrap on indexed abs
1cff : 9138                     sta (inwt),y
1d01 : 88                       dey
1d02 : c0f8                     cpy #$f8
1d04 : b0f6                     bcs tlday5                  
1d06 : a003                     ldy #3      ;testing wraparound result
1d08 : a200                     ldx #0
1d0a : b90302           tstay5  lda abst,y
1d0d : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
1d10 : f003            >        beq skip1373
                       >        trap            ;failed not equal (non zero)
1d12 : 20a543          >        jsr report_error
                       >
1d15 :                 >skip1373
                        
1d15 : 8a                       txa
1d16 : 990302                   sta abst,y  ;clear                
1d19 : 88                       dey
1d1a : 10ee                     bpl tstay5
                        
1d1c : a0fb                     ldy #3+$f8
1d1e : a2fe                     ldx #6+$f8
1d20 : b12e             tlday6  lda (inw1),y    ;no wrap on zp indirect indexed 
1d22 : 8138                     sta (indt-$f8&$ff,x)
1d24 : ca                       dex
1d25 : ca                       dex
1d26 : 88                       dey
1d27 : c0f8                     cpy #$f8
1d29 : b0f5                     bcs tlday6
1d2b : a003                     ldy #3      ;testing wraparound result
1d2d : a200                     ldx #0
1d2f : b90302           tstay6  lda abst,y
1d32 : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
1d35 : f003            >        beq skip1375
                       >        trap            ;failed not equal (non zero)
1d37 : 20a543          >        jsr report_error
                       >
1d3a :                 >skip1375
                        
1d3a : 8a                       txa
1d3b : 990302                   sta abst,y  ;clear                
1d3e : 88                       dey
1d3f : 10ee                     bpl tstay6
                                next_test
1d41 : ad0002          >            lda test_case   ;previous test
1d44 : c917            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1d46 : f003            >        beq skip1378
                       >        trap            ;failed not equal (non zero)
1d48 : 20a543          >        jsr report_error
                       >
1d4b :                 >skip1378
                       >
0018 =                 >test_num = test_num + 1
1d4b : a918            >            lda #test_num   ;*** next tests' number
1d4d : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; LDA / STA - zp / abs / #
                                set_stat 0  
                       >            load_flag 0  
1d50 : a900            >            lda #0               ;allow test to change I-flag (no mask)
                       >
1d52 : 48              >            pha         ;use stack to load status
1d53 : 28              >            plp
                        
1d54 : a513                     lda zp1
1d56 : 08                       php         ;test stores do not alter flags
1d57 : 49c3                     eor #$c3
1d59 : 28                       plp
1d5a : 8d0302                   sta abst
1d5d : 08                       php         ;flags after load/store sequence
1d5e : 49c3                     eor #$c3
1d60 : c9c3                     cmp #$c3    ;test result
                                trap_ne
1d62 : f003            >        beq skip1382
                       >        trap            ;failed not equal (non zero)
1d64 : 20a543          >        jsr report_error
                       >
1d67 :                 >skip1382
                        
1d67 : 68                       pla         ;load status
                                eor_flag 0
1d68 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1d6a : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
1d6d : f003            >        beq skip1385
                       >        trap            ;failed not equal (non zero)
1d6f : 20a543          >        jsr report_error
                       >
1d72 :                 >skip1385
                        
                                set_stat 0
                       >            load_flag 0
1d72 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1d74 : 48              >            pha         ;use stack to load status
1d75 : 28              >            plp
                        
1d76 : a514                     lda zp1+1
1d78 : 08                       php         ;test stores do not alter flags
1d79 : 49c3                     eor #$c3
1d7b : 28                       plp
1d7c : 8d0402                   sta abst+1
1d7f : 08                       php         ;flags after load/store sequence
1d80 : 49c3                     eor #$c3
1d82 : c982                     cmp #$82    ;test result
                                trap_ne
1d84 : f003            >        beq skip1389
                       >        trap            ;failed not equal (non zero)
1d86 : 20a543          >        jsr report_error
                       >
1d89 :                 >skip1389
                        
1d89 : 68                       pla         ;load status
                                eor_flag 0
1d8a : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1d8c : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
1d8f : f003            >        beq skip1392
                       >        trap            ;failed not equal (non zero)
1d91 : 20a543          >        jsr report_error
                       >
1d94 :                 >skip1392
                        
                                set_stat 0
                       >            load_flag 0
1d94 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1d96 : 48              >            pha         ;use stack to load status
1d97 : 28              >            plp
                        
1d98 : a515                     lda zp1+2
1d9a : 08                       php         ;test stores do not alter flags
1d9b : 49c3                     eor #$c3
1d9d : 28                       plp
1d9e : 8d0502                   sta abst+2
1da1 : 08                       php         ;flags after load/store sequence
1da2 : 49c3                     eor #$c3
1da4 : c941                     cmp #$41    ;test result
                                trap_ne
1da6 : f003            >        beq skip1396
                       >        trap            ;failed not equal (non zero)
1da8 : 20a543          >        jsr report_error
                       >
1dab :                 >skip1396
                        
1dab : 68                       pla         ;load status
                                eor_flag 0
1dac : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1dae : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
1db1 : f003            >        beq skip1399
                       >        trap            ;failed not equal (non zero)
1db3 : 20a543          >        jsr report_error
                       >
1db6 :                 >skip1399
                        
                                set_stat 0
                       >            load_flag 0
1db6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1db8 : 48              >            pha         ;use stack to load status
1db9 : 28              >            plp
                        
1dba : a516                     lda zp1+3
1dbc : 08                       php         ;test stores do not alter flags
1dbd : 49c3                     eor #$c3
1dbf : 28                       plp
1dc0 : 8d0602                   sta abst+3
1dc3 : 08                       php         ;flags after load/store sequence
1dc4 : 49c3                     eor #$c3
1dc6 : c900                     cmp #0      ;test result
                                trap_ne
1dc8 : f003            >        beq skip1403
                       >        trap            ;failed not equal (non zero)
1dca : 20a543          >        jsr report_error
                       >
1dcd :                 >skip1403
                        
1dcd : 68                       pla         ;load status
                                eor_flag 0
1dce : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1dd0 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
1dd3 : f003            >        beq skip1406
                       >        trap            ;failed not equal (non zero)
1dd5 : 20a543          >        jsr report_error
                       >
1dd8 :                 >skip1406
                        
                                set_stat $ff
                       >            load_flag $ff
1dd8 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1dda : 48              >            pha         ;use stack to load status
1ddb : 28              >            plp
                        
1ddc : a513                     lda zp1  
1dde : 08                       php         ;test stores do not alter flags
1ddf : 49c3                     eor #$c3
1de1 : 28                       plp
1de2 : 8d0302                   sta abst  
1de5 : 08                       php         ;flags after load/store sequence
1de6 : 49c3                     eor #$c3
1de8 : c9c3                     cmp #$c3    ;test result
                                trap_ne
1dea : f003            >        beq skip1410
                       >        trap            ;failed not equal (non zero)
1dec : 20a543          >        jsr report_error
                       >
1def :                 >skip1410
                        
1def : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1df0 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1df2 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
1df5 : f003            >        beq skip1413
                       >        trap            ;failed not equal (non zero)
1df7 : 20a543          >        jsr report_error
                       >
1dfa :                 >skip1413
                        
                                set_stat $ff
                       >            load_flag $ff
1dfa : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1dfc : 48              >            pha         ;use stack to load status
1dfd : 28              >            plp
                        
1dfe : a514                     lda zp1+1
1e00 : 08                       php         ;test stores do not alter flags
1e01 : 49c3                     eor #$c3
1e03 : 28                       plp
1e04 : 8d0402                   sta abst+1
1e07 : 08                       php         ;flags after load/store sequence
1e08 : 49c3                     eor #$c3
1e0a : c982                     cmp #$82    ;test result
                                trap_ne
1e0c : f003            >        beq skip1417
                       >        trap            ;failed not equal (non zero)
1e0e : 20a543          >        jsr report_error
                       >
1e11 :                 >skip1417
                        
1e11 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1e12 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1e14 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
1e17 : f003            >        beq skip1420
                       >        trap            ;failed not equal (non zero)
1e19 : 20a543          >        jsr report_error
                       >
1e1c :                 >skip1420
                        
                                set_stat $ff
                       >            load_flag $ff
1e1c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1e1e : 48              >            pha         ;use stack to load status
1e1f : 28              >            plp
                        
1e20 : a515                     lda zp1+2
1e22 : 08                       php         ;test stores do not alter flags
1e23 : 49c3                     eor #$c3
1e25 : 28                       plp
1e26 : 8d0502                   sta abst+2
1e29 : 08                       php         ;flags after load/store sequence
1e2a : 49c3                     eor #$c3
1e2c : c941                     cmp #$41    ;test result
                                trap_ne
1e2e : f003            >        beq skip1424
                       >        trap            ;failed not equal (non zero)
1e30 : 20a543          >        jsr report_error
                       >
1e33 :                 >skip1424
                        
1e33 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1e34 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1e36 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
1e39 : f003            >        beq skip1427
                       >        trap            ;failed not equal (non zero)
1e3b : 20a543          >        jsr report_error
                       >
1e3e :                 >skip1427
                        
                                set_stat $ff
                       >            load_flag $ff
1e3e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1e40 : 48              >            pha         ;use stack to load status
1e41 : 28              >            plp
                        
1e42 : a516                     lda zp1+3
1e44 : 08                       php         ;test stores do not alter flags
1e45 : 49c3                     eor #$c3
1e47 : 28                       plp
1e48 : 8d0602                   sta abst+3
1e4b : 08                       php         ;flags after load/store sequence
1e4c : 49c3                     eor #$c3
1e4e : c900                     cmp #0      ;test result
                                trap_ne
1e50 : f003            >        beq skip1431
                       >        trap            ;failed not equal (non zero)
1e52 : 20a543          >        jsr report_error
                       >
1e55 :                 >skip1431
                        
1e55 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1e56 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1e58 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
1e5b : f003            >        beq skip1434
                       >        trap            ;failed not equal (non zero)
1e5d : 20a543          >        jsr report_error
                       >
1e60 :                 >skip1434
                        
                                set_stat 0
                       >            load_flag 0
1e60 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1e62 : 48              >            pha         ;use stack to load status
1e63 : 28              >            plp
                        
1e64 : ad0802                   lda abs1  
1e67 : 08                       php         ;test stores do not alter flags
1e68 : 49c3                     eor #$c3
1e6a : 28                       plp
1e6b : 850c                     sta zpt  
1e6d : 08                       php         ;flags after load/store sequence
1e6e : 49c3                     eor #$c3
1e70 : c513                     cmp zp1     ;test result
                                trap_ne
1e72 : f003            >        beq skip1438
                       >        trap            ;failed not equal (non zero)
1e74 : 20a543          >        jsr report_error
                       >
1e77 :                 >skip1438
                        
1e77 : 68                       pla         ;load status
                                eor_flag 0
1e78 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1e7a : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
1e7d : f003            >        beq skip1441
                       >        trap            ;failed not equal (non zero)
1e7f : 20a543          >        jsr report_error
                       >
1e82 :                 >skip1441
                        
                                set_stat 0
                       >            load_flag 0
1e82 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1e84 : 48              >            pha         ;use stack to load status
1e85 : 28              >            plp
                        
1e86 : ad0902                   lda abs1+1
1e89 : 08                       php         ;test stores do not alter flags
1e8a : 49c3                     eor #$c3
1e8c : 28                       plp
1e8d : 850d                     sta zpt+1
1e8f : 08                       php         ;flags after load/store sequence
1e90 : 49c3                     eor #$c3
1e92 : c514                     cmp zp1+1   ;test result
                                trap_ne
1e94 : f003            >        beq skip1445
                       >        trap            ;failed not equal (non zero)
1e96 : 20a543          >        jsr report_error
                       >
1e99 :                 >skip1445
                        
1e99 : 68                       pla         ;load status
                                eor_flag 0
1e9a : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1e9c : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
1e9f : f003            >        beq skip1448
                       >        trap            ;failed not equal (non zero)
1ea1 : 20a543          >        jsr report_error
                       >
1ea4 :                 >skip1448
                        
                                set_stat 0
                       >            load_flag 0
1ea4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1ea6 : 48              >            pha         ;use stack to load status
1ea7 : 28              >            plp
                        
1ea8 : ad0a02                   lda abs1+2
1eab : 08                       php         ;test stores do not alter flags
1eac : 49c3                     eor #$c3
1eae : 28                       plp
1eaf : 850e                     sta zpt+2
1eb1 : 08                       php         ;flags after load/store sequence
1eb2 : 49c3                     eor #$c3
1eb4 : c515                     cmp zp1+2   ;test result
                                trap_ne
1eb6 : f003            >        beq skip1452
                       >        trap            ;failed not equal (non zero)
1eb8 : 20a543          >        jsr report_error
                       >
1ebb :                 >skip1452
                        
1ebb : 68                       pla         ;load status
                                eor_flag 0
1ebc : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1ebe : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
1ec1 : f003            >        beq skip1455
                       >        trap            ;failed not equal (non zero)
1ec3 : 20a543          >        jsr report_error
                       >
1ec6 :                 >skip1455
                        
                                set_stat 0
                       >            load_flag 0
1ec6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1ec8 : 48              >            pha         ;use stack to load status
1ec9 : 28              >            plp
                        
1eca : ad0b02                   lda abs1+3
1ecd : 08                       php         ;test stores do not alter flags
1ece : 49c3                     eor #$c3
1ed0 : 28                       plp
1ed1 : 850f                     sta zpt+3
1ed3 : 08                       php         ;flags after load/store sequence
1ed4 : 49c3                     eor #$c3
1ed6 : c516                     cmp zp1+3   ;test result
                                trap_ne
1ed8 : f003            >        beq skip1459
                       >        trap            ;failed not equal (non zero)
1eda : 20a543          >        jsr report_error
                       >
1edd :                 >skip1459
                        
1edd : 68                       pla         ;load status
                                eor_flag 0
1ede : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1ee0 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
1ee3 : f003            >        beq skip1462
                       >        trap            ;failed not equal (non zero)
1ee5 : 20a543          >        jsr report_error
                       >
1ee8 :                 >skip1462
                        
                                set_stat $ff
                       >            load_flag $ff
1ee8 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1eea : 48              >            pha         ;use stack to load status
1eeb : 28              >            plp
                        
1eec : ad0802                   lda abs1  
1eef : 08                       php         ;test stores do not alter flags
1ef0 : 49c3                     eor #$c3
1ef2 : 28                       plp
1ef3 : 850c                     sta zpt  
1ef5 : 08                       php         ;flags after load/store sequence
1ef6 : 49c3                     eor #$c3
1ef8 : c513                     cmp zp1     ;test result
                                trap_ne
1efa : f003            >        beq skip1466
                       >        trap            ;failed not equal (non zero)
1efc : 20a543          >        jsr report_error
                       >
1eff :                 >skip1466
                        
1eff : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1f00 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1f02 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
1f05 : f003            >        beq skip1469
                       >        trap            ;failed not equal (non zero)
1f07 : 20a543          >        jsr report_error
                       >
1f0a :                 >skip1469
                        
                                set_stat $ff
                       >            load_flag $ff
1f0a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1f0c : 48              >            pha         ;use stack to load status
1f0d : 28              >            plp
                        
1f0e : ad0902                   lda abs1+1
1f11 : 08                       php         ;test stores do not alter flags
1f12 : 49c3                     eor #$c3
1f14 : 28                       plp
1f15 : 850d                     sta zpt+1
1f17 : 08                       php         ;flags after load/store sequence
1f18 : 49c3                     eor #$c3
1f1a : c514                     cmp zp1+1   ;test result
                                trap_ne
1f1c : f003            >        beq skip1473
                       >        trap            ;failed not equal (non zero)
1f1e : 20a543          >        jsr report_error
                       >
1f21 :                 >skip1473
                        
1f21 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1f22 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1f24 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
1f27 : f003            >        beq skip1476
                       >        trap            ;failed not equal (non zero)
1f29 : 20a543          >        jsr report_error
                       >
1f2c :                 >skip1476
                        
                                set_stat $ff
                       >            load_flag $ff
1f2c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1f2e : 48              >            pha         ;use stack to load status
1f2f : 28              >            plp
                        
1f30 : ad0a02                   lda abs1+2
1f33 : 08                       php         ;test stores do not alter flags
1f34 : 49c3                     eor #$c3
1f36 : 28                       plp
1f37 : 850e                     sta zpt+2
1f39 : 08                       php         ;flags after load/store sequence
1f3a : 49c3                     eor #$c3
1f3c : c515                     cmp zp1+2   ;test result
                                trap_ne
1f3e : f003            >        beq skip1480
                       >        trap            ;failed not equal (non zero)
1f40 : 20a543          >        jsr report_error
                       >
1f43 :                 >skip1480
                        
1f43 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1f44 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1f46 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
1f49 : f003            >        beq skip1483
                       >        trap            ;failed not equal (non zero)
1f4b : 20a543          >        jsr report_error
                       >
1f4e :                 >skip1483
                        
                                set_stat $ff
                       >            load_flag $ff
1f4e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1f50 : 48              >            pha         ;use stack to load status
1f51 : 28              >            plp
                        
1f52 : ad0b02                   lda abs1+3
1f55 : 08                       php         ;test stores do not alter flags
1f56 : 49c3                     eor #$c3
1f58 : 28                       plp
1f59 : 850f                     sta zpt+3
1f5b : 08                       php         ;flags after load/store sequence
1f5c : 49c3                     eor #$c3
1f5e : c516                     cmp zp1+3   ;test result
                                trap_ne
1f60 : f003            >        beq skip1487
                       >        trap            ;failed not equal (non zero)
1f62 : 20a543          >        jsr report_error
                       >
1f65 :                 >skip1487
                        
1f65 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1f66 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1f68 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
1f6b : f003            >        beq skip1490
                       >        trap            ;failed not equal (non zero)
1f6d : 20a543          >        jsr report_error
                       >
1f70 :                 >skip1490
                        
                                set_stat 0  
                       >            load_flag 0  
1f70 : a900            >            lda #0               ;allow test to change I-flag (no mask)
                       >
1f72 : 48              >            pha         ;use stack to load status
1f73 : 28              >            plp
                        
1f74 : a9c3                     lda #$c3
1f76 : 08                       php
1f77 : cd0802                   cmp abs1    ;test result
                                trap_ne
1f7a : f003            >        beq skip1494
                       >        trap            ;failed not equal (non zero)
1f7c : 20a543          >        jsr report_error
                       >
1f7f :                 >skip1494
                        
1f7f : 68                       pla         ;load status
                                eor_flag 0
1f80 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1f82 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
1f85 : f003            >        beq skip1497
                       >        trap            ;failed not equal (non zero)
1f87 : 20a543          >        jsr report_error
                       >
1f8a :                 >skip1497
                        
                                set_stat 0
                       >            load_flag 0
1f8a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1f8c : 48              >            pha         ;use stack to load status
1f8d : 28              >            plp
                        
1f8e : a982                     lda #$82
1f90 : 08                       php
1f91 : cd0902                   cmp abs1+1  ;test result
                                trap_ne
1f94 : f003            >        beq skip1501
                       >        trap            ;failed not equal (non zero)
1f96 : 20a543          >        jsr report_error
                       >
1f99 :                 >skip1501
                        
1f99 : 68                       pla         ;load status
                                eor_flag 0
1f9a : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1f9c : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
1f9f : f003            >        beq skip1504
                       >        trap            ;failed not equal (non zero)
1fa1 : 20a543          >        jsr report_error
                       >
1fa4 :                 >skip1504
                        
                                set_stat 0
                       >            load_flag 0
1fa4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1fa6 : 48              >            pha         ;use stack to load status
1fa7 : 28              >            plp
                        
1fa8 : a941                     lda #$41
1faa : 08                       php
1fab : cd0a02                   cmp abs1+2  ;test result
                                trap_ne
1fae : f003            >        beq skip1508
                       >        trap            ;failed not equal (non zero)
1fb0 : 20a543          >        jsr report_error
                       >
1fb3 :                 >skip1508
                        
1fb3 : 68                       pla         ;load status
                                eor_flag 0
1fb4 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1fb6 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
1fb9 : f003            >        beq skip1511
                       >        trap            ;failed not equal (non zero)
1fbb : 20a543          >        jsr report_error
                       >
1fbe :                 >skip1511
                        
                                set_stat 0
                       >            load_flag 0
1fbe : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1fc0 : 48              >            pha         ;use stack to load status
1fc1 : 28              >            plp
                        
1fc2 : a900                     lda #0
1fc4 : 08                       php
1fc5 : cd0b02                   cmp abs1+3  ;test result
                                trap_ne
1fc8 : f003            >        beq skip1515
                       >        trap            ;failed not equal (non zero)
1fca : 20a543          >        jsr report_error
                       >
1fcd :                 >skip1515
                        
1fcd : 68                       pla         ;load status
                                eor_flag 0
1fce : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1fd0 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
1fd3 : f003            >        beq skip1518
                       >        trap            ;failed not equal (non zero)
1fd5 : 20a543          >        jsr report_error
                       >
1fd8 :                 >skip1518
                        
                        
                                set_stat $ff
                       >            load_flag $ff
1fd8 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1fda : 48              >            pha         ;use stack to load status
1fdb : 28              >            plp
                        
1fdc : a9c3                     lda #$c3  
1fde : 08                       php
1fdf : cd0802                   cmp abs1    ;test result
                                trap_ne
1fe2 : f003            >        beq skip1522
                       >        trap            ;failed not equal (non zero)
1fe4 : 20a543          >        jsr report_error
                       >
1fe7 :                 >skip1522
                        
1fe7 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1fe8 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1fea : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
1fed : f003            >        beq skip1525
                       >        trap            ;failed not equal (non zero)
1fef : 20a543          >        jsr report_error
                       >
1ff2 :                 >skip1525
                        
                                set_stat $ff
                       >            load_flag $ff
1ff2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1ff4 : 48              >            pha         ;use stack to load status
1ff5 : 28              >            plp
                        
1ff6 : a982                     lda #$82
1ff8 : 08                       php
1ff9 : cd0902                   cmp abs1+1  ;test result
                                trap_ne
1ffc : f003            >        beq skip1529
                       >        trap            ;failed not equal (non zero)
1ffe : 20a543          >        jsr report_error
                       >
2001 :                 >skip1529
                        
2001 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2002 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2004 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
2007 : f003            >        beq skip1532
                       >        trap            ;failed not equal (non zero)
2009 : 20a543          >        jsr report_error
                       >
200c :                 >skip1532
                        
                                set_stat $ff
                       >            load_flag $ff
200c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
200e : 48              >            pha         ;use stack to load status
200f : 28              >            plp
                        
2010 : a941                     lda #$41
2012 : 08                       php
2013 : cd0a02                   cmp abs1+2  ;test result
                                trap_ne
2016 : f003            >        beq skip1536
                       >        trap            ;failed not equal (non zero)
2018 : 20a543          >        jsr report_error
                       >
201b :                 >skip1536
                        
201b : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
201c : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
201e : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
2021 : f003            >        beq skip1539
                       >        trap            ;failed not equal (non zero)
2023 : 20a543          >        jsr report_error
                       >
2026 :                 >skip1539
                        
                                set_stat $ff
                       >            load_flag $ff
2026 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2028 : 48              >            pha         ;use stack to load status
2029 : 28              >            plp
                        
202a : a900                     lda #0
202c : 08                       php
202d : cd0b02                   cmp abs1+3  ;test result
                                trap_ne
2030 : f003            >        beq skip1543
                       >        trap            ;failed not equal (non zero)
2032 : 20a543          >        jsr report_error
                       >
2035 :                 >skip1543
                        
2035 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2036 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2038 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
203b : f003            >        beq skip1546
                       >        trap            ;failed not equal (non zero)
203d : 20a543          >        jsr report_error
                       >
2040 :                 >skip1546
                        
                        
2040 : a200                     ldx #0
2042 : a50c                     lda zpt  
2044 : 49c3                     eor #$c3
2046 : c513                     cmp zp1  
                                trap_ne     ;store to zp data
2048 : f003            >        beq skip1548
                       >        trap            ;failed not equal (non zero)
204a : 20a543          >        jsr report_error
                       >
204d :                 >skip1548
                        
204d : 860c                     stx zpt     ;clear                
204f : ad0302                   lda abst  
2052 : 49c3                     eor #$c3
2054 : cd0802                   cmp abs1  
                                trap_ne     ;store to abs data
2057 : f003            >        beq skip1550
                       >        trap            ;failed not equal (non zero)
2059 : 20a543          >        jsr report_error
                       >
205c :                 >skip1550
                        
205c : 8e0302                   stx abst    ;clear                
205f : a50d                     lda zpt+1
2061 : 49c3                     eor #$c3
2063 : c514                     cmp zp1+1
                                trap_ne     ;store to zp data
2065 : f003            >        beq skip1552
                       >        trap            ;failed not equal (non zero)
2067 : 20a543          >        jsr report_error
                       >
206a :                 >skip1552
                        
206a : 860d                     stx zpt+1   ;clear                
206c : ad0402                   lda abst+1
206f : 49c3                     eor #$c3
2071 : cd0902                   cmp abs1+1
                                trap_ne     ;store to abs data
2074 : f003            >        beq skip1554
                       >        trap            ;failed not equal (non zero)
2076 : 20a543          >        jsr report_error
                       >
2079 :                 >skip1554
                        
2079 : 8e0402                   stx abst+1  ;clear                
207c : a50e                     lda zpt+2
207e : 49c3                     eor #$c3
2080 : c515                     cmp zp1+2
                                trap_ne     ;store to zp data
2082 : f003            >        beq skip1556
                       >        trap            ;failed not equal (non zero)
2084 : 20a543          >        jsr report_error
                       >
2087 :                 >skip1556
                        
2087 : 860e                     stx zpt+2   ;clear                
2089 : ad0502                   lda abst+2
208c : 49c3                     eor #$c3
208e : cd0a02                   cmp abs1+2
                                trap_ne     ;store to abs data
2091 : f003            >        beq skip1558
                       >        trap            ;failed not equal (non zero)
2093 : 20a543          >        jsr report_error
                       >
2096 :                 >skip1558
                        
2096 : 8e0502                   stx abst+2  ;clear                
2099 : a50f                     lda zpt+3
209b : 49c3                     eor #$c3
209d : c516                     cmp zp1+3
                                trap_ne     ;store to zp data
209f : f003            >        beq skip1560
                       >        trap            ;failed not equal (non zero)
20a1 : 20a543          >        jsr report_error
                       >
20a4 :                 >skip1560
                        
20a4 : 860f                     stx zpt+3   ;clear                
20a6 : ad0602                   lda abst+3
20a9 : 49c3                     eor #$c3
20ab : cd0b02                   cmp abs1+3
                                trap_ne     ;store to abs data
20ae : f003            >        beq skip1562
                       >        trap            ;failed not equal (non zero)
20b0 : 20a543          >        jsr report_error
                       >
20b3 :                 >skip1562
                        
20b3 : 8e0602                   stx abst+3  ;clear                
                                next_test
20b6 : ad0002          >            lda test_case   ;previous test
20b9 : c918            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
20bb : f003            >        beq skip1565
                       >        trap            ;failed not equal (non zero)
20bd : 20a543          >        jsr report_error
                       >
20c0 :                 >skip1565
                       >
0019 =                 >test_num = test_num + 1
20c0 : a919            >            lda #test_num   ;*** next tests' number
20c2 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing bit test & compares BIT CPX CPY CMP all addressing modes
                        ; BIT - zp / abs
                                set_a $ff,0
                       >            load_flag 0
20c5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
20c7 : 48              >            pha         ;use stack to load status
20c8 : a9ff            >            lda #$ff     ;precharge accu
20ca : 28              >            plp
                        
20cb : 2416                     bit zp1+3   ;00 - should set Z / clear  NV
                                tst_a $ff,fz 
20cd : 08              >            php         ;save flags
20ce : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
20d0 : f003            >        beq skip1570
                       >        trap            ;failed not equal (non zero)
20d2 : 20a543          >        jsr report_error
                       >
20d5 :                 >skip1570
                       >
20d5 : 68              >            pla         ;load status
20d6 : 48              >            pha
                       >            cmp_flag fz 
20d7 : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
20d9 : f003            >        beq skip1573
                       >        trap            ;failed not equal (non zero)
20db : 20a543          >        jsr report_error
                       >
20de :                 >skip1573
                       >
20de : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
20df : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
20e1 : 48              >            pha         ;use stack to load status
20e2 : a901            >            lda #1     ;precharge accu
20e4 : 28              >            plp
                        
20e5 : 2415                     bit zp1+2   ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
20e7 : 08              >            php         ;save flags
20e8 : c901            >            cmp #1     ;test result
                       >            trap_ne
20ea : f003            >        beq skip1578
                       >        trap            ;failed not equal (non zero)
20ec : 20a543          >        jsr report_error
                       >
20ef :                 >skip1578
                       >
20ef : 68              >            pla         ;load status
20f0 : 48              >            pha
                       >            cmp_flag fv
20f1 : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
20f3 : f003            >        beq skip1581
                       >        trap            ;failed not equal (non zero)
20f5 : 20a543          >        jsr report_error
                       >
20f8 :                 >skip1581
                       >
20f8 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
20f9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
20fb : 48              >            pha         ;use stack to load status
20fc : a901            >            lda #1     ;precharge accu
20fe : 28              >            plp
                        
20ff : 2414                     bit zp1+1   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
2101 : 08              >            php         ;save flags
2102 : c901            >            cmp #1     ;test result
                       >            trap_ne
2104 : f003            >        beq skip1586
                       >        trap            ;failed not equal (non zero)
2106 : 20a543          >        jsr report_error
                       >
2109 :                 >skip1586
                       >
2109 : 68              >            pla         ;load status
210a : 48              >            pha
                       >            cmp_flag fnz
210b : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
210d : f003            >        beq skip1589
                       >        trap            ;failed not equal (non zero)
210f : 20a543          >        jsr report_error
                       >
2112 :                 >skip1589
                       >
2112 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
2113 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2115 : 48              >            pha         ;use stack to load status
2116 : a901            >            lda #1     ;precharge accu
2118 : 28              >            plp
                        
2119 : 2413                     bit zp1     ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
211b : 08              >            php         ;save flags
211c : c901            >            cmp #1     ;test result
                       >            trap_ne
211e : f003            >        beq skip1594
                       >        trap            ;failed not equal (non zero)
2120 : 20a543          >        jsr report_error
                       >
2123 :                 >skip1594
                       >
2123 : 68              >            pla         ;load status
2124 : 48              >            pha
                       >            cmp_flag fnv
2125 : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2127 : f003            >        beq skip1597
                       >        trap            ;failed not equal (non zero)
2129 : 20a543          >        jsr report_error
                       >
212c :                 >skip1597
                       >
212c : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,$ff
                       >            load_flag $ff
212d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
212f : 48              >            pha         ;use stack to load status
2130 : a9ff            >            lda #$ff     ;precharge accu
2132 : 28              >            plp
                        
2133 : 2416                     bit zp1+3   ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv 
2135 : 08              >            php         ;save flags
2136 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
2138 : f003            >        beq skip1602
                       >        trap            ;failed not equal (non zero)
213a : 20a543          >        jsr report_error
                       >
213d :                 >skip1602
                       >
213d : 68              >            pla         ;load status
213e : 48              >            pha
                       >            cmp_flag ~fnv 
213f : c93f            >            cmp #(~fnv |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2141 : f003            >        beq skip1605
                       >        trap            ;failed not equal (non zero)
2143 : 20a543          >        jsr report_error
                       >
2146 :                 >skip1605
                       >
2146 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
2147 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2149 : 48              >            pha         ;use stack to load status
214a : a901            >            lda #1     ;precharge accu
214c : 28              >            plp
                        
214d : 2415                     bit zp1+2   ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
214f : 08              >            php         ;save flags
2150 : c901            >            cmp #1     ;test result
                       >            trap_ne
2152 : f003            >        beq skip1610
                       >        trap            ;failed not equal (non zero)
2154 : 20a543          >        jsr report_error
                       >
2157 :                 >skip1610
                       >
2157 : 68              >            pla         ;load status
2158 : 48              >            pha
                       >            cmp_flag ~fnz
2159 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
215b : f003            >        beq skip1613
                       >        trap            ;failed not equal (non zero)
215d : 20a543          >        jsr report_error
                       >
2160 :                 >skip1613
                       >
2160 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
2161 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2163 : 48              >            pha         ;use stack to load status
2164 : a901            >            lda #1     ;precharge accu
2166 : 28              >            plp
                        
2167 : 2414                     bit zp1+1   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
2169 : 08              >            php         ;save flags
216a : c901            >            cmp #1     ;test result
                       >            trap_ne
216c : f003            >        beq skip1618
                       >        trap            ;failed not equal (non zero)
216e : 20a543          >        jsr report_error
                       >
2171 :                 >skip1618
                       >
2171 : 68              >            pla         ;load status
2172 : 48              >            pha
                       >            cmp_flag ~fv
2173 : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2175 : f003            >        beq skip1621
                       >        trap            ;failed not equal (non zero)
2177 : 20a543          >        jsr report_error
                       >
217a :                 >skip1621
                       >
217a : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
217b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
217d : 48              >            pha         ;use stack to load status
217e : a901            >            lda #1     ;precharge accu
2180 : 28              >            plp
                        
2181 : 2413                     bit zp1     ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
2183 : 08              >            php         ;save flags
2184 : c901            >            cmp #1     ;test result
                       >            trap_ne
2186 : f003            >        beq skip1626
                       >        trap            ;failed not equal (non zero)
2188 : 20a543          >        jsr report_error
                       >
218b :                 >skip1626
                       >
218b : 68              >            pla         ;load status
218c : 48              >            pha
                       >            cmp_flag ~fz
218d : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
218f : f003            >        beq skip1629
                       >        trap            ;failed not equal (non zero)
2191 : 20a543          >        jsr report_error
                       >
2194 :                 >skip1629
                       >
2194 : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,0
                       >            load_flag 0
2195 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2197 : 48              >            pha         ;use stack to load status
2198 : a9ff            >            lda #$ff     ;precharge accu
219a : 28              >            plp
                        
219b : 2c0b02                   bit abs1+3  ;00 - should set Z / clear  NV
                                tst_a $ff,fz 
219e : 08              >            php         ;save flags
219f : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
21a1 : f003            >        beq skip1634
                       >        trap            ;failed not equal (non zero)
21a3 : 20a543          >        jsr report_error
                       >
21a6 :                 >skip1634
                       >
21a6 : 68              >            pla         ;load status
21a7 : 48              >            pha
                       >            cmp_flag fz 
21a8 : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
21aa : f003            >        beq skip1637
                       >        trap            ;failed not equal (non zero)
21ac : 20a543          >        jsr report_error
                       >
21af :                 >skip1637
                       >
21af : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
21b0 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
21b2 : 48              >            pha         ;use stack to load status
21b3 : a901            >            lda #1     ;precharge accu
21b5 : 28              >            plp
                        
21b6 : 2c0a02                   bit abs1+2  ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
21b9 : 08              >            php         ;save flags
21ba : c901            >            cmp #1     ;test result
                       >            trap_ne
21bc : f003            >        beq skip1642
                       >        trap            ;failed not equal (non zero)
21be : 20a543          >        jsr report_error
                       >
21c1 :                 >skip1642
                       >
21c1 : 68              >            pla         ;load status
21c2 : 48              >            pha
                       >            cmp_flag fv
21c3 : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
21c5 : f003            >        beq skip1645
                       >        trap            ;failed not equal (non zero)
21c7 : 20a543          >        jsr report_error
                       >
21ca :                 >skip1645
                       >
21ca : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
21cb : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
21cd : 48              >            pha         ;use stack to load status
21ce : a901            >            lda #1     ;precharge accu
21d0 : 28              >            plp
                        
21d1 : 2c0902                   bit abs1+1  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
21d4 : 08              >            php         ;save flags
21d5 : c901            >            cmp #1     ;test result
                       >            trap_ne
21d7 : f003            >        beq skip1650
                       >        trap            ;failed not equal (non zero)
21d9 : 20a543          >        jsr report_error
                       >
21dc :                 >skip1650
                       >
21dc : 68              >            pla         ;load status
21dd : 48              >            pha
                       >            cmp_flag fnz
21de : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
21e0 : f003            >        beq skip1653
                       >        trap            ;failed not equal (non zero)
21e2 : 20a543          >        jsr report_error
                       >
21e5 :                 >skip1653
                       >
21e5 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
21e6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
21e8 : 48              >            pha         ;use stack to load status
21e9 : a901            >            lda #1     ;precharge accu
21eb : 28              >            plp
                        
21ec : 2c0802                   bit abs1    ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
21ef : 08              >            php         ;save flags
21f0 : c901            >            cmp #1     ;test result
                       >            trap_ne
21f2 : f003            >        beq skip1658
                       >        trap            ;failed not equal (non zero)
21f4 : 20a543          >        jsr report_error
                       >
21f7 :                 >skip1658
                       >
21f7 : 68              >            pla         ;load status
21f8 : 48              >            pha
                       >            cmp_flag fnv
21f9 : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
21fb : f003            >        beq skip1661
                       >        trap            ;failed not equal (non zero)
21fd : 20a543          >        jsr report_error
                       >
2200 :                 >skip1661
                       >
2200 : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,$ff
                       >            load_flag $ff
2201 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2203 : 48              >            pha         ;use stack to load status
2204 : a9ff            >            lda #$ff     ;precharge accu
2206 : 28              >            plp
                        
2207 : 2c0b02                   bit abs1+3  ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv 
220a : 08              >            php         ;save flags
220b : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
220d : f003            >        beq skip1666
                       >        trap            ;failed not equal (non zero)
220f : 20a543          >        jsr report_error
                       >
2212 :                 >skip1666
                       >
2212 : 68              >            pla         ;load status
2213 : 48              >            pha
                       >            cmp_flag ~fnv 
2214 : c93f            >            cmp #(~fnv |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2216 : f003            >        beq skip1669
                       >        trap            ;failed not equal (non zero)
2218 : 20a543          >        jsr report_error
                       >
221b :                 >skip1669
                       >
221b : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
221c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
221e : 48              >            pha         ;use stack to load status
221f : a901            >            lda #1     ;precharge accu
2221 : 28              >            plp
                        
2222 : 2c0a02                   bit abs1+2  ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
2225 : 08              >            php         ;save flags
2226 : c901            >            cmp #1     ;test result
                       >            trap_ne
2228 : f003            >        beq skip1674
                       >        trap            ;failed not equal (non zero)
222a : 20a543          >        jsr report_error
                       >
222d :                 >skip1674
                       >
222d : 68              >            pla         ;load status
222e : 48              >            pha
                       >            cmp_flag ~fnz
222f : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2231 : f003            >        beq skip1677
                       >        trap            ;failed not equal (non zero)
2233 : 20a543          >        jsr report_error
                       >
2236 :                 >skip1677
                       >
2236 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
2237 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2239 : 48              >            pha         ;use stack to load status
223a : a901            >            lda #1     ;precharge accu
223c : 28              >            plp
                        
223d : 2c0902                   bit abs1+1  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
2240 : 08              >            php         ;save flags
2241 : c901            >            cmp #1     ;test result
                       >            trap_ne
2243 : f003            >        beq skip1682
                       >        trap            ;failed not equal (non zero)
2245 : 20a543          >        jsr report_error
                       >
2248 :                 >skip1682
                       >
2248 : 68              >            pla         ;load status
2249 : 48              >            pha
                       >            cmp_flag ~fv
224a : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
224c : f003            >        beq skip1685
                       >        trap            ;failed not equal (non zero)
224e : 20a543          >        jsr report_error
                       >
2251 :                 >skip1685
                       >
2251 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
2252 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2254 : 48              >            pha         ;use stack to load status
2255 : a901            >            lda #1     ;precharge accu
2257 : 28              >            plp
                        
2258 : 2c0802                   bit abs1    ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
225b : 08              >            php         ;save flags
225c : c901            >            cmp #1     ;test result
                       >            trap_ne
225e : f003            >        beq skip1690
                       >        trap            ;failed not equal (non zero)
2260 : 20a543          >        jsr report_error
                       >
2263 :                 >skip1690
                       >
2263 : 68              >            pla         ;load status
2264 : 48              >            pha
                       >            cmp_flag ~fz
2265 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2267 : f003            >        beq skip1693
                       >        trap            ;failed not equal (non zero)
2269 : 20a543          >        jsr report_error
                       >
226c :                 >skip1693
                       >
226c : 28              >            plp         ;restore status
                        
                                next_test
226d : ad0002          >            lda test_case   ;previous test
2270 : c919            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2272 : f003            >        beq skip1696
                       >        trap            ;failed not equal (non zero)
2274 : 20a543          >        jsr report_error
                       >
2277 :                 >skip1696
                       >
001a =                 >test_num = test_num + 1
2277 : a91a            >            lda #test_num   ;*** next tests' number
2279 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                        ; CPX - zp / abs / #         
                                set_x $80,0
                       >            load_flag 0
227c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
227e : 48              >            pha         ;use stack to load status
227f : a280            >            ldx #$80     ;precharge index x
2281 : 28              >            plp
                        
2282 : e417                     cpx zp7f
                                tst_stat fc
2284 : 08              >            php         ;save status
2285 : 68              >            pla         ;use stack to retrieve status
2286 : 48              >            pha
                       >            cmp_flag fc
2287 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2289 : f003            >        beq skip1702
                       >        trap            ;failed not equal (non zero)
228b : 20a543          >        jsr report_error
                       >
228e :                 >skip1702
                       >
228e : 28              >            plp         ;restore status
                        
228f : ca                       dex
2290 : e417                     cpx zp7f
                                tst_stat fzc
2292 : 08              >            php         ;save status
2293 : 68              >            pla         ;use stack to retrieve status
2294 : 48              >            pha
                       >            cmp_flag fzc
2295 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2297 : f003            >        beq skip1706
                       >        trap            ;failed not equal (non zero)
2299 : 20a543          >        jsr report_error
                       >
229c :                 >skip1706
                       >
229c : 28              >            plp         ;restore status
                        
229d : ca                       dex
229e : e417                     cpx zp7f
                                tst_x $7e,fn
22a0 : 08              >            php         ;save flags
22a1 : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
22a3 : f003            >        beq skip1709
                       >        trap            ;failed not equal (non zero)
22a5 : 20a543          >        jsr report_error
                       >
22a8 :                 >skip1709
                       >
22a8 : 68              >            pla         ;load status
22a9 : 48              >            pha
                       >            cmp_flag fn
22aa : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
22ac : f003            >        beq skip1712
                       >        trap            ;failed not equal (non zero)
22ae : 20a543          >        jsr report_error
                       >
22b1 :                 >skip1712
                       >
22b1 : 28              >            plp         ;restore status
                        
                                set_x $80,$ff
                       >            load_flag $ff
22b2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
22b4 : 48              >            pha         ;use stack to load status
22b5 : a280            >            ldx #$80     ;precharge index x
22b7 : 28              >            plp
                        
22b8 : e417                     cpx zp7f
                                tst_stat ~fnz
22ba : 08              >            php         ;save status
22bb : 68              >            pla         ;use stack to retrieve status
22bc : 48              >            pha
                       >            cmp_flag ~fnz
22bd : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
22bf : f003            >        beq skip1718
                       >        trap            ;failed not equal (non zero)
22c1 : 20a543          >        jsr report_error
                       >
22c4 :                 >skip1718
                       >
22c4 : 28              >            plp         ;restore status
                        
22c5 : ca                       dex
22c6 : e417                     cpx zp7f
                                tst_stat ~fn
22c8 : 08              >            php         ;save status
22c9 : 68              >            pla         ;use stack to retrieve status
22ca : 48              >            pha
                       >            cmp_flag ~fn
22cb : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
22cd : f003            >        beq skip1722
                       >        trap            ;failed not equal (non zero)
22cf : 20a543          >        jsr report_error
                       >
22d2 :                 >skip1722
                       >
22d2 : 28              >            plp         ;restore status
                        
22d3 : ca                       dex
22d4 : e417                     cpx zp7f
                                tst_x $7e,~fzc
22d6 : 08              >            php         ;save flags
22d7 : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
22d9 : f003            >        beq skip1725
                       >        trap            ;failed not equal (non zero)
22db : 20a543          >        jsr report_error
                       >
22de :                 >skip1725
                       >
22de : 68              >            pla         ;load status
22df : 48              >            pha
                       >            cmp_flag ~fzc
22e0 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
22e2 : f003            >        beq skip1728
                       >        trap            ;failed not equal (non zero)
22e4 : 20a543          >        jsr report_error
                       >
22e7 :                 >skip1728
                       >
22e7 : 28              >            plp         ;restore status
                        
                        
                                set_x $80,0
                       >            load_flag 0
22e8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
22ea : 48              >            pha         ;use stack to load status
22eb : a280            >            ldx #$80     ;precharge index x
22ed : 28              >            plp
                        
22ee : ec0c02                   cpx abs7f
                                tst_stat fc
22f1 : 08              >            php         ;save status
22f2 : 68              >            pla         ;use stack to retrieve status
22f3 : 48              >            pha
                       >            cmp_flag fc
22f4 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
22f6 : f003            >        beq skip1734
                       >        trap            ;failed not equal (non zero)
22f8 : 20a543          >        jsr report_error
                       >
22fb :                 >skip1734
                       >
22fb : 28              >            plp         ;restore status
                        
22fc : ca                       dex
22fd : ec0c02                   cpx abs7f
                                tst_stat fzc
2300 : 08              >            php         ;save status
2301 : 68              >            pla         ;use stack to retrieve status
2302 : 48              >            pha
                       >            cmp_flag fzc
2303 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2305 : f003            >        beq skip1738
                       >        trap            ;failed not equal (non zero)
2307 : 20a543          >        jsr report_error
                       >
230a :                 >skip1738
                       >
230a : 28              >            plp         ;restore status
                        
230b : ca                       dex
230c : ec0c02                   cpx abs7f
                                tst_x $7e,fn
230f : 08              >            php         ;save flags
2310 : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
2312 : f003            >        beq skip1741
                       >        trap            ;failed not equal (non zero)
2314 : 20a543          >        jsr report_error
                       >
2317 :                 >skip1741
                       >
2317 : 68              >            pla         ;load status
2318 : 48              >            pha
                       >            cmp_flag fn
2319 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
231b : f003            >        beq skip1744
                       >        trap            ;failed not equal (non zero)
231d : 20a543          >        jsr report_error
                       >
2320 :                 >skip1744
                       >
2320 : 28              >            plp         ;restore status
                        
                                set_x $80,$ff
                       >            load_flag $ff
2321 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2323 : 48              >            pha         ;use stack to load status
2324 : a280            >            ldx #$80     ;precharge index x
2326 : 28              >            plp
                        
2327 : ec0c02                   cpx abs7f
                                tst_stat ~fnz
232a : 08              >            php         ;save status
232b : 68              >            pla         ;use stack to retrieve status
232c : 48              >            pha
                       >            cmp_flag ~fnz
232d : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
232f : f003            >        beq skip1750
                       >        trap            ;failed not equal (non zero)
2331 : 20a543          >        jsr report_error
                       >
2334 :                 >skip1750
                       >
2334 : 28              >            plp         ;restore status
                        
2335 : ca                       dex
2336 : ec0c02                   cpx abs7f
                                tst_stat ~fn
2339 : 08              >            php         ;save status
233a : 68              >            pla         ;use stack to retrieve status
233b : 48              >            pha
                       >            cmp_flag ~fn
233c : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
233e : f003            >        beq skip1754
                       >        trap            ;failed not equal (non zero)
2340 : 20a543          >        jsr report_error
                       >
2343 :                 >skip1754
                       >
2343 : 28              >            plp         ;restore status
                        
2344 : ca                       dex
2345 : ec0c02                   cpx abs7f
                                tst_x $7e,~fzc
2348 : 08              >            php         ;save flags
2349 : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
234b : f003            >        beq skip1757
                       >        trap            ;failed not equal (non zero)
234d : 20a543          >        jsr report_error
                       >
2350 :                 >skip1757
                       >
2350 : 68              >            pla         ;load status
2351 : 48              >            pha
                       >            cmp_flag ~fzc
2352 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2354 : f003            >        beq skip1760
                       >        trap            ;failed not equal (non zero)
2356 : 20a543          >        jsr report_error
                       >
2359 :                 >skip1760
                       >
2359 : 28              >            plp         ;restore status
                        
                        
                                set_x $80,0
                       >            load_flag 0
235a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
235c : 48              >            pha         ;use stack to load status
235d : a280            >            ldx #$80     ;precharge index x
235f : 28              >            plp
                        
2360 : e07f                     cpx #$7f
                                tst_stat fc
2362 : 08              >            php         ;save status
2363 : 68              >            pla         ;use stack to retrieve status
2364 : 48              >            pha
                       >            cmp_flag fc
2365 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2367 : f003            >        beq skip1766
                       >        trap            ;failed not equal (non zero)
2369 : 20a543          >        jsr report_error
                       >
236c :                 >skip1766
                       >
236c : 28              >            plp         ;restore status
                        
236d : ca                       dex
236e : e07f                     cpx #$7f
                                tst_stat fzc
2370 : 08              >            php         ;save status
2371 : 68              >            pla         ;use stack to retrieve status
2372 : 48              >            pha
                       >            cmp_flag fzc
2373 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2375 : f003            >        beq skip1770
                       >        trap            ;failed not equal (non zero)
2377 : 20a543          >        jsr report_error
                       >
237a :                 >skip1770
                       >
237a : 28              >            plp         ;restore status
                        
237b : ca                       dex
237c : e07f                     cpx #$7f
                                tst_x $7e,fn
237e : 08              >            php         ;save flags
237f : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
2381 : f003            >        beq skip1773
                       >        trap            ;failed not equal (non zero)
2383 : 20a543          >        jsr report_error
                       >
2386 :                 >skip1773
                       >
2386 : 68              >            pla         ;load status
2387 : 48              >            pha
                       >            cmp_flag fn
2388 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
238a : f003            >        beq skip1776
                       >        trap            ;failed not equal (non zero)
238c : 20a543          >        jsr report_error
                       >
238f :                 >skip1776
                       >
238f : 28              >            plp         ;restore status
                        
                                set_x $80,$ff
                       >            load_flag $ff
2390 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2392 : 48              >            pha         ;use stack to load status
2393 : a280            >            ldx #$80     ;precharge index x
2395 : 28              >            plp
                        
2396 : e07f                     cpx #$7f
                                tst_stat ~fnz
2398 : 08              >            php         ;save status
2399 : 68              >            pla         ;use stack to retrieve status
239a : 48              >            pha
                       >            cmp_flag ~fnz
239b : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
239d : f003            >        beq skip1782
                       >        trap            ;failed not equal (non zero)
239f : 20a543          >        jsr report_error
                       >
23a2 :                 >skip1782
                       >
23a2 : 28              >            plp         ;restore status
                        
23a3 : ca                       dex
23a4 : e07f                     cpx #$7f
                                tst_stat ~fn
23a6 : 08              >            php         ;save status
23a7 : 68              >            pla         ;use stack to retrieve status
23a8 : 48              >            pha
                       >            cmp_flag ~fn
23a9 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
23ab : f003            >        beq skip1786
                       >        trap            ;failed not equal (non zero)
23ad : 20a543          >        jsr report_error
                       >
23b0 :                 >skip1786
                       >
23b0 : 28              >            plp         ;restore status
                        
23b1 : ca                       dex
23b2 : e07f                     cpx #$7f
                                tst_x $7e,~fzc
23b4 : 08              >            php         ;save flags
23b5 : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
23b7 : f003            >        beq skip1789
                       >        trap            ;failed not equal (non zero)
23b9 : 20a543          >        jsr report_error
                       >
23bc :                 >skip1789
                       >
23bc : 68              >            pla         ;load status
23bd : 48              >            pha
                       >            cmp_flag ~fzc
23be : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
23c0 : f003            >        beq skip1792
                       >        trap            ;failed not equal (non zero)
23c2 : 20a543          >        jsr report_error
                       >
23c5 :                 >skip1792
                       >
23c5 : 28              >            plp         ;restore status
                        
                                next_test
23c6 : ad0002          >            lda test_case   ;previous test
23c9 : c91a            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
23cb : f003            >        beq skip1795
                       >        trap            ;failed not equal (non zero)
23cd : 20a543          >        jsr report_error
                       >
23d0 :                 >skip1795
                       >
001b =                 >test_num = test_num + 1
23d0 : a91b            >            lda #test_num   ;*** next tests' number
23d2 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; CPY - zp / abs / #         
                                set_y $80,0
                       >            load_flag 0
23d5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
23d7 : 48              >            pha         ;use stack to load status
23d8 : a080            >            ldy #$80     ;precharge index y
23da : 28              >            plp
                        
23db : c417                     cpy zp7f
                                tst_stat fc
23dd : 08              >            php         ;save status
23de : 68              >            pla         ;use stack to retrieve status
23df : 48              >            pha
                       >            cmp_flag fc
23e0 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
23e2 : f003            >        beq skip1801
                       >        trap            ;failed not equal (non zero)
23e4 : 20a543          >        jsr report_error
                       >
23e7 :                 >skip1801
                       >
23e7 : 28              >            plp         ;restore status
                        
23e8 : 88                       dey
23e9 : c417                     cpy zp7f
                                tst_stat fzc
23eb : 08              >            php         ;save status
23ec : 68              >            pla         ;use stack to retrieve status
23ed : 48              >            pha
                       >            cmp_flag fzc
23ee : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
23f0 : f003            >        beq skip1805
                       >        trap            ;failed not equal (non zero)
23f2 : 20a543          >        jsr report_error
                       >
23f5 :                 >skip1805
                       >
23f5 : 28              >            plp         ;restore status
                        
23f6 : 88                       dey
23f7 : c417                     cpy zp7f
                                tst_y $7e,fn
23f9 : 08              >            php         ;save flags
23fa : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
23fc : f003            >        beq skip1808
                       >        trap            ;failed not equal (non zero)
23fe : 20a543          >        jsr report_error
                       >
2401 :                 >skip1808
                       >
2401 : 68              >            pla         ;load status
2402 : 48              >            pha
                       >            cmp_flag fn
2403 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2405 : f003            >        beq skip1811
                       >        trap            ;failed not equal (non zero)
2407 : 20a543          >        jsr report_error
                       >
240a :                 >skip1811
                       >
240a : 28              >            plp         ;restore status
                        
                                set_y $80,$ff
                       >            load_flag $ff
240b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
240d : 48              >            pha         ;use stack to load status
240e : a080            >            ldy #$80     ;precharge index y
2410 : 28              >            plp
                        
2411 : c417                     cpy zp7f
                                tst_stat ~fnz
2413 : 08              >            php         ;save status
2414 : 68              >            pla         ;use stack to retrieve status
2415 : 48              >            pha
                       >            cmp_flag ~fnz
2416 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2418 : f003            >        beq skip1817
                       >        trap            ;failed not equal (non zero)
241a : 20a543          >        jsr report_error
                       >
241d :                 >skip1817
                       >
241d : 28              >            plp         ;restore status
                        
241e : 88                       dey
241f : c417                     cpy zp7f
                                tst_stat ~fn
2421 : 08              >            php         ;save status
2422 : 68              >            pla         ;use stack to retrieve status
2423 : 48              >            pha
                       >            cmp_flag ~fn
2424 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2426 : f003            >        beq skip1821
                       >        trap            ;failed not equal (non zero)
2428 : 20a543          >        jsr report_error
                       >
242b :                 >skip1821
                       >
242b : 28              >            plp         ;restore status
                        
242c : 88                       dey
242d : c417                     cpy zp7f
                                tst_y $7e,~fzc
242f : 08              >            php         ;save flags
2430 : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
2432 : f003            >        beq skip1824
                       >        trap            ;failed not equal (non zero)
2434 : 20a543          >        jsr report_error
                       >
2437 :                 >skip1824
                       >
2437 : 68              >            pla         ;load status
2438 : 48              >            pha
                       >            cmp_flag ~fzc
2439 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
243b : f003            >        beq skip1827
                       >        trap            ;failed not equal (non zero)
243d : 20a543          >        jsr report_error
                       >
2440 :                 >skip1827
                       >
2440 : 28              >            plp         ;restore status
                        
                        
                                set_y $80,0
                       >            load_flag 0
2441 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2443 : 48              >            pha         ;use stack to load status
2444 : a080            >            ldy #$80     ;precharge index y
2446 : 28              >            plp
                        
2447 : cc0c02                   cpy abs7f
                                tst_stat fc
244a : 08              >            php         ;save status
244b : 68              >            pla         ;use stack to retrieve status
244c : 48              >            pha
                       >            cmp_flag fc
244d : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
244f : f003            >        beq skip1833
                       >        trap            ;failed not equal (non zero)
2451 : 20a543          >        jsr report_error
                       >
2454 :                 >skip1833
                       >
2454 : 28              >            plp         ;restore status
                        
2455 : 88                       dey
2456 : cc0c02                   cpy abs7f
                                tst_stat fzc
2459 : 08              >            php         ;save status
245a : 68              >            pla         ;use stack to retrieve status
245b : 48              >            pha
                       >            cmp_flag fzc
245c : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
245e : f003            >        beq skip1837
                       >        trap            ;failed not equal (non zero)
2460 : 20a543          >        jsr report_error
                       >
2463 :                 >skip1837
                       >
2463 : 28              >            plp         ;restore status
                        
2464 : 88                       dey
2465 : cc0c02                   cpy abs7f
                                tst_y $7e,fn
2468 : 08              >            php         ;save flags
2469 : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
246b : f003            >        beq skip1840
                       >        trap            ;failed not equal (non zero)
246d : 20a543          >        jsr report_error
                       >
2470 :                 >skip1840
                       >
2470 : 68              >            pla         ;load status
2471 : 48              >            pha
                       >            cmp_flag fn
2472 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2474 : f003            >        beq skip1843
                       >        trap            ;failed not equal (non zero)
2476 : 20a543          >        jsr report_error
                       >
2479 :                 >skip1843
                       >
2479 : 28              >            plp         ;restore status
                        
                                set_y $80,$ff
                       >            load_flag $ff
247a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
247c : 48              >            pha         ;use stack to load status
247d : a080            >            ldy #$80     ;precharge index y
247f : 28              >            plp
                        
2480 : cc0c02                   cpy abs7f
                                tst_stat ~fnz
2483 : 08              >            php         ;save status
2484 : 68              >            pla         ;use stack to retrieve status
2485 : 48              >            pha
                       >            cmp_flag ~fnz
2486 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2488 : f003            >        beq skip1849
                       >        trap            ;failed not equal (non zero)
248a : 20a543          >        jsr report_error
                       >
248d :                 >skip1849
                       >
248d : 28              >            plp         ;restore status
                        
248e : 88                       dey
248f : cc0c02                   cpy abs7f
                                tst_stat ~fn
2492 : 08              >            php         ;save status
2493 : 68              >            pla         ;use stack to retrieve status
2494 : 48              >            pha
                       >            cmp_flag ~fn
2495 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2497 : f003            >        beq skip1853
                       >        trap            ;failed not equal (non zero)
2499 : 20a543          >        jsr report_error
                       >
249c :                 >skip1853
                       >
249c : 28              >            plp         ;restore status
                        
249d : 88                       dey
249e : cc0c02                   cpy abs7f
                                tst_y $7e,~fzc
24a1 : 08              >            php         ;save flags
24a2 : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
24a4 : f003            >        beq skip1856
                       >        trap            ;failed not equal (non zero)
24a6 : 20a543          >        jsr report_error
                       >
24a9 :                 >skip1856
                       >
24a9 : 68              >            pla         ;load status
24aa : 48              >            pha
                       >            cmp_flag ~fzc
24ab : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
24ad : f003            >        beq skip1859
                       >        trap            ;failed not equal (non zero)
24af : 20a543          >        jsr report_error
                       >
24b2 :                 >skip1859
                       >
24b2 : 28              >            plp         ;restore status
                        
                        
                                set_y $80,0
                       >            load_flag 0
24b3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
24b5 : 48              >            pha         ;use stack to load status
24b6 : a080            >            ldy #$80     ;precharge index y
24b8 : 28              >            plp
                        
24b9 : c07f                     cpy #$7f
                                tst_stat fc
24bb : 08              >            php         ;save status
24bc : 68              >            pla         ;use stack to retrieve status
24bd : 48              >            pha
                       >            cmp_flag fc
24be : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
24c0 : f003            >        beq skip1865
                       >        trap            ;failed not equal (non zero)
24c2 : 20a543          >        jsr report_error
                       >
24c5 :                 >skip1865
                       >
24c5 : 28              >            plp         ;restore status
                        
24c6 : 88                       dey
24c7 : c07f                     cpy #$7f
                                tst_stat fzc
24c9 : 08              >            php         ;save status
24ca : 68              >            pla         ;use stack to retrieve status
24cb : 48              >            pha
                       >            cmp_flag fzc
24cc : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
24ce : f003            >        beq skip1869
                       >        trap            ;failed not equal (non zero)
24d0 : 20a543          >        jsr report_error
                       >
24d3 :                 >skip1869
                       >
24d3 : 28              >            plp         ;restore status
                        
24d4 : 88                       dey
24d5 : c07f                     cpy #$7f
                                tst_y $7e,fn
24d7 : 08              >            php         ;save flags
24d8 : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
24da : f003            >        beq skip1872
                       >        trap            ;failed not equal (non zero)
24dc : 20a543          >        jsr report_error
                       >
24df :                 >skip1872
                       >
24df : 68              >            pla         ;load status
24e0 : 48              >            pha
                       >            cmp_flag fn
24e1 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
24e3 : f003            >        beq skip1875
                       >        trap            ;failed not equal (non zero)
24e5 : 20a543          >        jsr report_error
                       >
24e8 :                 >skip1875
                       >
24e8 : 28              >            plp         ;restore status
                        
                                set_y $80,$ff
                       >            load_flag $ff
24e9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
24eb : 48              >            pha         ;use stack to load status
24ec : a080            >            ldy #$80     ;precharge index y
24ee : 28              >            plp
                        
24ef : c07f                     cpy #$7f
                                tst_stat ~fnz
24f1 : 08              >            php         ;save status
24f2 : 68              >            pla         ;use stack to retrieve status
24f3 : 48              >            pha
                       >            cmp_flag ~fnz
24f4 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
24f6 : f003            >        beq skip1881
                       >        trap            ;failed not equal (non zero)
24f8 : 20a543          >        jsr report_error
                       >
24fb :                 >skip1881
                       >
24fb : 28              >            plp         ;restore status
                        
24fc : 88                       dey
24fd : c07f                     cpy #$7f
                                tst_stat ~fn
24ff : 08              >            php         ;save status
2500 : 68              >            pla         ;use stack to retrieve status
2501 : 48              >            pha
                       >            cmp_flag ~fn
2502 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2504 : f003            >        beq skip1885
                       >        trap            ;failed not equal (non zero)
2506 : 20a543          >        jsr report_error
                       >
2509 :                 >skip1885
                       >
2509 : 28              >            plp         ;restore status
                        
250a : 88                       dey
250b : c07f                     cpy #$7f
                                tst_y $7e,~fzc
250d : 08              >            php         ;save flags
250e : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
2510 : f003            >        beq skip1888
                       >        trap            ;failed not equal (non zero)
2512 : 20a543          >        jsr report_error
                       >
2515 :                 >skip1888
                       >
2515 : 68              >            pla         ;load status
2516 : 48              >            pha
                       >            cmp_flag ~fzc
2517 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2519 : f003            >        beq skip1891
                       >        trap            ;failed not equal (non zero)
251b : 20a543          >        jsr report_error
                       >
251e :                 >skip1891
                       >
251e : 28              >            plp         ;restore status
                        
                                next_test
251f : ad0002          >            lda test_case   ;previous test
2522 : c91b            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2524 : f003            >        beq skip1894
                       >        trap            ;failed not equal (non zero)
2526 : 20a543          >        jsr report_error
                       >
2529 :                 >skip1894
                       >
001c =                 >test_num = test_num + 1
2529 : a91c            >            lda #test_num   ;*** next tests' number
252b : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; CMP - zp / abs / #         
                                set_a $80,0
                       >            load_flag 0
252e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2530 : 48              >            pha         ;use stack to load status
2531 : a980            >            lda #$80     ;precharge accu
2533 : 28              >            plp
                        
2534 : c517                     cmp zp7f
                                tst_a $80,fc
2536 : 08              >            php         ;save flags
2537 : c980            >            cmp #$80     ;test result
                       >            trap_ne
2539 : f003            >        beq skip1899
                       >        trap            ;failed not equal (non zero)
253b : 20a543          >        jsr report_error
                       >
253e :                 >skip1899
                       >
253e : 68              >            pla         ;load status
253f : 48              >            pha
                       >            cmp_flag fc
2540 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2542 : f003            >        beq skip1902
                       >        trap            ;failed not equal (non zero)
2544 : 20a543          >        jsr report_error
                       >
2547 :                 >skip1902
                       >
2547 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
2548 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
254a : 48              >            pha         ;use stack to load status
254b : a97f            >            lda #$7f     ;precharge accu
254d : 28              >            plp
                        
254e : c517                     cmp zp7f
                                tst_a $7f,fzc
2550 : 08              >            php         ;save flags
2551 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
2553 : f003            >        beq skip1907
                       >        trap            ;failed not equal (non zero)
2555 : 20a543          >        jsr report_error
                       >
2558 :                 >skip1907
                       >
2558 : 68              >            pla         ;load status
2559 : 48              >            pha
                       >            cmp_flag fzc
255a : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
255c : f003            >        beq skip1910
                       >        trap            ;failed not equal (non zero)
255e : 20a543          >        jsr report_error
                       >
2561 :                 >skip1910
                       >
2561 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
2562 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2564 : 48              >            pha         ;use stack to load status
2565 : a97e            >            lda #$7e     ;precharge accu
2567 : 28              >            plp
                        
2568 : c517                     cmp zp7f
                                tst_a $7e,fn
256a : 08              >            php         ;save flags
256b : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
256d : f003            >        beq skip1915
                       >        trap            ;failed not equal (non zero)
256f : 20a543          >        jsr report_error
                       >
2572 :                 >skip1915
                       >
2572 : 68              >            pla         ;load status
2573 : 48              >            pha
                       >            cmp_flag fn
2574 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2576 : f003            >        beq skip1918
                       >        trap            ;failed not equal (non zero)
2578 : 20a543          >        jsr report_error
                       >
257b :                 >skip1918
                       >
257b : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
257c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
257e : 48              >            pha         ;use stack to load status
257f : a980            >            lda #$80     ;precharge accu
2581 : 28              >            plp
                        
2582 : c517                     cmp zp7f
                                tst_a $80,~fnz
2584 : 08              >            php         ;save flags
2585 : c980            >            cmp #$80     ;test result
                       >            trap_ne
2587 : f003            >        beq skip1923
                       >        trap            ;failed not equal (non zero)
2589 : 20a543          >        jsr report_error
                       >
258c :                 >skip1923
                       >
258c : 68              >            pla         ;load status
258d : 48              >            pha
                       >            cmp_flag ~fnz
258e : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2590 : f003            >        beq skip1926
                       >        trap            ;failed not equal (non zero)
2592 : 20a543          >        jsr report_error
                       >
2595 :                 >skip1926
                       >
2595 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
2596 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2598 : 48              >            pha         ;use stack to load status
2599 : a97f            >            lda #$7f     ;precharge accu
259b : 28              >            plp
                        
259c : c517                     cmp zp7f
                                tst_a $7f,~fn
259e : 08              >            php         ;save flags
259f : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
25a1 : f003            >        beq skip1931
                       >        trap            ;failed not equal (non zero)
25a3 : 20a543          >        jsr report_error
                       >
25a6 :                 >skip1931
                       >
25a6 : 68              >            pla         ;load status
25a7 : 48              >            pha
                       >            cmp_flag ~fn
25a8 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
25aa : f003            >        beq skip1934
                       >        trap            ;failed not equal (non zero)
25ac : 20a543          >        jsr report_error
                       >
25af :                 >skip1934
                       >
25af : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
25b0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
25b2 : 48              >            pha         ;use stack to load status
25b3 : a97e            >            lda #$7e     ;precharge accu
25b5 : 28              >            plp
                        
25b6 : c517                     cmp zp7f
                                tst_a $7e,~fzc
25b8 : 08              >            php         ;save flags
25b9 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
25bb : f003            >        beq skip1939
                       >        trap            ;failed not equal (non zero)
25bd : 20a543          >        jsr report_error
                       >
25c0 :                 >skip1939
                       >
25c0 : 68              >            pla         ;load status
25c1 : 48              >            pha
                       >            cmp_flag ~fzc
25c2 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
25c4 : f003            >        beq skip1942
                       >        trap            ;failed not equal (non zero)
25c6 : 20a543          >        jsr report_error
                       >
25c9 :                 >skip1942
                       >
25c9 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
25ca : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
25cc : 48              >            pha         ;use stack to load status
25cd : a980            >            lda #$80     ;precharge accu
25cf : 28              >            plp
                        
25d0 : cd0c02                   cmp abs7f
                                tst_a $80,fc
25d3 : 08              >            php         ;save flags
25d4 : c980            >            cmp #$80     ;test result
                       >            trap_ne
25d6 : f003            >        beq skip1947
                       >        trap            ;failed not equal (non zero)
25d8 : 20a543          >        jsr report_error
                       >
25db :                 >skip1947
                       >
25db : 68              >            pla         ;load status
25dc : 48              >            pha
                       >            cmp_flag fc
25dd : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
25df : f003            >        beq skip1950
                       >        trap            ;failed not equal (non zero)
25e1 : 20a543          >        jsr report_error
                       >
25e4 :                 >skip1950
                       >
25e4 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
25e5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
25e7 : 48              >            pha         ;use stack to load status
25e8 : a97f            >            lda #$7f     ;precharge accu
25ea : 28              >            plp
                        
25eb : cd0c02                   cmp abs7f
                                tst_a $7f,fzc
25ee : 08              >            php         ;save flags
25ef : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
25f1 : f003            >        beq skip1955
                       >        trap            ;failed not equal (non zero)
25f3 : 20a543          >        jsr report_error
                       >
25f6 :                 >skip1955
                       >
25f6 : 68              >            pla         ;load status
25f7 : 48              >            pha
                       >            cmp_flag fzc
25f8 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
25fa : f003            >        beq skip1958
                       >        trap            ;failed not equal (non zero)
25fc : 20a543          >        jsr report_error
                       >
25ff :                 >skip1958
                       >
25ff : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
2600 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2602 : 48              >            pha         ;use stack to load status
2603 : a97e            >            lda #$7e     ;precharge accu
2605 : 28              >            plp
                        
2606 : cd0c02                   cmp abs7f
                                tst_a $7e,fn
2609 : 08              >            php         ;save flags
260a : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
260c : f003            >        beq skip1963
                       >        trap            ;failed not equal (non zero)
260e : 20a543          >        jsr report_error
                       >
2611 :                 >skip1963
                       >
2611 : 68              >            pla         ;load status
2612 : 48              >            pha
                       >            cmp_flag fn
2613 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2615 : f003            >        beq skip1966
                       >        trap            ;failed not equal (non zero)
2617 : 20a543          >        jsr report_error
                       >
261a :                 >skip1966
                       >
261a : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
261b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
261d : 48              >            pha         ;use stack to load status
261e : a980            >            lda #$80     ;precharge accu
2620 : 28              >            plp
                        
2621 : cd0c02                   cmp abs7f
                                tst_a $80,~fnz
2624 : 08              >            php         ;save flags
2625 : c980            >            cmp #$80     ;test result
                       >            trap_ne
2627 : f003            >        beq skip1971
                       >        trap            ;failed not equal (non zero)
2629 : 20a543          >        jsr report_error
                       >
262c :                 >skip1971
                       >
262c : 68              >            pla         ;load status
262d : 48              >            pha
                       >            cmp_flag ~fnz
262e : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2630 : f003            >        beq skip1974
                       >        trap            ;failed not equal (non zero)
2632 : 20a543          >        jsr report_error
                       >
2635 :                 >skip1974
                       >
2635 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
2636 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2638 : 48              >            pha         ;use stack to load status
2639 : a97f            >            lda #$7f     ;precharge accu
263b : 28              >            plp
                        
263c : cd0c02                   cmp abs7f
                                tst_a $7f,~fn
263f : 08              >            php         ;save flags
2640 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
2642 : f003            >        beq skip1979
                       >        trap            ;failed not equal (non zero)
2644 : 20a543          >        jsr report_error
                       >
2647 :                 >skip1979
                       >
2647 : 68              >            pla         ;load status
2648 : 48              >            pha
                       >            cmp_flag ~fn
2649 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
264b : f003            >        beq skip1982
                       >        trap            ;failed not equal (non zero)
264d : 20a543          >        jsr report_error
                       >
2650 :                 >skip1982
                       >
2650 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
2651 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2653 : 48              >            pha         ;use stack to load status
2654 : a97e            >            lda #$7e     ;precharge accu
2656 : 28              >            plp
                        
2657 : cd0c02                   cmp abs7f
                                tst_a $7e,~fzc
265a : 08              >            php         ;save flags
265b : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
265d : f003            >        beq skip1987
                       >        trap            ;failed not equal (non zero)
265f : 20a543          >        jsr report_error
                       >
2662 :                 >skip1987
                       >
2662 : 68              >            pla         ;load status
2663 : 48              >            pha
                       >            cmp_flag ~fzc
2664 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2666 : f003            >        beq skip1990
                       >        trap            ;failed not equal (non zero)
2668 : 20a543          >        jsr report_error
                       >
266b :                 >skip1990
                       >
266b : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
266c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
266e : 48              >            pha         ;use stack to load status
266f : a980            >            lda #$80     ;precharge accu
2671 : 28              >            plp
                        
2672 : c97f                     cmp #$7f
                                tst_a $80,fc
2674 : 08              >            php         ;save flags
2675 : c980            >            cmp #$80     ;test result
                       >            trap_ne
2677 : f003            >        beq skip1995
                       >        trap            ;failed not equal (non zero)
2679 : 20a543          >        jsr report_error
                       >
267c :                 >skip1995
                       >
267c : 68              >            pla         ;load status
267d : 48              >            pha
                       >            cmp_flag fc
267e : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2680 : f003            >        beq skip1998
                       >        trap            ;failed not equal (non zero)
2682 : 20a543          >        jsr report_error
                       >
2685 :                 >skip1998
                       >
2685 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
2686 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2688 : 48              >            pha         ;use stack to load status
2689 : a97f            >            lda #$7f     ;precharge accu
268b : 28              >            plp
                        
268c : c97f                     cmp #$7f
                                tst_a $7f,fzc
268e : 08              >            php         ;save flags
268f : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
2691 : f003            >        beq skip2003
                       >        trap            ;failed not equal (non zero)
2693 : 20a543          >        jsr report_error
                       >
2696 :                 >skip2003
                       >
2696 : 68              >            pla         ;load status
2697 : 48              >            pha
                       >            cmp_flag fzc
2698 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
269a : f003            >        beq skip2006
                       >        trap            ;failed not equal (non zero)
269c : 20a543          >        jsr report_error
                       >
269f :                 >skip2006
                       >
269f : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
26a0 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
26a2 : 48              >            pha         ;use stack to load status
26a3 : a97e            >            lda #$7e     ;precharge accu
26a5 : 28              >            plp
                        
26a6 : c97f                     cmp #$7f
                                tst_a $7e,fn
26a8 : 08              >            php         ;save flags
26a9 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
26ab : f003            >        beq skip2011
                       >        trap            ;failed not equal (non zero)
26ad : 20a543          >        jsr report_error
                       >
26b0 :                 >skip2011
                       >
26b0 : 68              >            pla         ;load status
26b1 : 48              >            pha
                       >            cmp_flag fn
26b2 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
26b4 : f003            >        beq skip2014
                       >        trap            ;failed not equal (non zero)
26b6 : 20a543          >        jsr report_error
                       >
26b9 :                 >skip2014
                       >
26b9 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
26ba : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
26bc : 48              >            pha         ;use stack to load status
26bd : a980            >            lda #$80     ;precharge accu
26bf : 28              >            plp
                        
26c0 : c97f                     cmp #$7f
                                tst_a $80,~fnz
26c2 : 08              >            php         ;save flags
26c3 : c980            >            cmp #$80     ;test result
                       >            trap_ne
26c5 : f003            >        beq skip2019
                       >        trap            ;failed not equal (non zero)
26c7 : 20a543          >        jsr report_error
                       >
26ca :                 >skip2019
                       >
26ca : 68              >            pla         ;load status
26cb : 48              >            pha
                       >            cmp_flag ~fnz
26cc : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
26ce : f003            >        beq skip2022
                       >        trap            ;failed not equal (non zero)
26d0 : 20a543          >        jsr report_error
                       >
26d3 :                 >skip2022
                       >
26d3 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
26d4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
26d6 : 48              >            pha         ;use stack to load status
26d7 : a97f            >            lda #$7f     ;precharge accu
26d9 : 28              >            plp
                        
26da : c97f                     cmp #$7f
                                tst_a $7f,~fn
26dc : 08              >            php         ;save flags
26dd : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
26df : f003            >        beq skip2027
                       >        trap            ;failed not equal (non zero)
26e1 : 20a543          >        jsr report_error
                       >
26e4 :                 >skip2027
                       >
26e4 : 68              >            pla         ;load status
26e5 : 48              >            pha
                       >            cmp_flag ~fn
26e6 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
26e8 : f003            >        beq skip2030
                       >        trap            ;failed not equal (non zero)
26ea : 20a543          >        jsr report_error
                       >
26ed :                 >skip2030
                       >
26ed : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
26ee : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
26f0 : 48              >            pha         ;use stack to load status
26f1 : a97e            >            lda #$7e     ;precharge accu
26f3 : 28              >            plp
                        
26f4 : c97f                     cmp #$7f
                                tst_a $7e,~fzc
26f6 : 08              >            php         ;save flags
26f7 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
26f9 : f003            >        beq skip2035
                       >        trap            ;failed not equal (non zero)
26fb : 20a543          >        jsr report_error
                       >
26fe :                 >skip2035
                       >
26fe : 68              >            pla         ;load status
26ff : 48              >            pha
                       >            cmp_flag ~fzc
2700 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2702 : f003            >        beq skip2038
                       >        trap            ;failed not equal (non zero)
2704 : 20a543          >        jsr report_error
                       >
2707 :                 >skip2038
                       >
2707 : 28              >            plp         ;restore status
                        
                        
2708 : a204                     ldx #4          ;with indexing by X
                                set_a $80,0
                       >            load_flag 0
270a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
270c : 48              >            pha         ;use stack to load status
270d : a980            >            lda #$80     ;precharge accu
270f : 28              >            plp
                        
2710 : d513                     cmp zp1,x
                                tst_a $80,fc
2712 : 08              >            php         ;save flags
2713 : c980            >            cmp #$80     ;test result
                       >            trap_ne
2715 : f003            >        beq skip2043
                       >        trap            ;failed not equal (non zero)
2717 : 20a543          >        jsr report_error
                       >
271a :                 >skip2043
                       >
271a : 68              >            pla         ;load status
271b : 48              >            pha
                       >            cmp_flag fc
271c : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
271e : f003            >        beq skip2046
                       >        trap            ;failed not equal (non zero)
2720 : 20a543          >        jsr report_error
                       >
2723 :                 >skip2046
                       >
2723 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
2724 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2726 : 48              >            pha         ;use stack to load status
2727 : a97f            >            lda #$7f     ;precharge accu
2729 : 28              >            plp
                        
272a : d513                     cmp zp1,x
                                tst_a $7f,fzc
272c : 08              >            php         ;save flags
272d : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
272f : f003            >        beq skip2051
                       >        trap            ;failed not equal (non zero)
2731 : 20a543          >        jsr report_error
                       >
2734 :                 >skip2051
                       >
2734 : 68              >            pla         ;load status
2735 : 48              >            pha
                       >            cmp_flag fzc
2736 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2738 : f003            >        beq skip2054
                       >        trap            ;failed not equal (non zero)
273a : 20a543          >        jsr report_error
                       >
273d :                 >skip2054
                       >
273d : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
273e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2740 : 48              >            pha         ;use stack to load status
2741 : a97e            >            lda #$7e     ;precharge accu
2743 : 28              >            plp
                        
2744 : d513                     cmp zp1,x
                                tst_a $7e,fn
2746 : 08              >            php         ;save flags
2747 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
2749 : f003            >        beq skip2059
                       >        trap            ;failed not equal (non zero)
274b : 20a543          >        jsr report_error
                       >
274e :                 >skip2059
                       >
274e : 68              >            pla         ;load status
274f : 48              >            pha
                       >            cmp_flag fn
2750 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2752 : f003            >        beq skip2062
                       >        trap            ;failed not equal (non zero)
2754 : 20a543          >        jsr report_error
                       >
2757 :                 >skip2062
                       >
2757 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
2758 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
275a : 48              >            pha         ;use stack to load status
275b : a980            >            lda #$80     ;precharge accu
275d : 28              >            plp
                        
275e : d513                     cmp zp1,x
                                tst_a $80,~fnz
2760 : 08              >            php         ;save flags
2761 : c980            >            cmp #$80     ;test result
                       >            trap_ne
2763 : f003            >        beq skip2067
                       >        trap            ;failed not equal (non zero)
2765 : 20a543          >        jsr report_error
                       >
2768 :                 >skip2067
                       >
2768 : 68              >            pla         ;load status
2769 : 48              >            pha
                       >            cmp_flag ~fnz
276a : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
276c : f003            >        beq skip2070
                       >        trap            ;failed not equal (non zero)
276e : 20a543          >        jsr report_error
                       >
2771 :                 >skip2070
                       >
2771 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
2772 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2774 : 48              >            pha         ;use stack to load status
2775 : a97f            >            lda #$7f     ;precharge accu
2777 : 28              >            plp
                        
2778 : d513                     cmp zp1,x
                                tst_a $7f,~fn
277a : 08              >            php         ;save flags
277b : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
277d : f003            >        beq skip2075
                       >        trap            ;failed not equal (non zero)
277f : 20a543          >        jsr report_error
                       >
2782 :                 >skip2075
                       >
2782 : 68              >            pla         ;load status
2783 : 48              >            pha
                       >            cmp_flag ~fn
2784 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2786 : f003            >        beq skip2078
                       >        trap            ;failed not equal (non zero)
2788 : 20a543          >        jsr report_error
                       >
278b :                 >skip2078
                       >
278b : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
278c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
278e : 48              >            pha         ;use stack to load status
278f : a97e            >            lda #$7e     ;precharge accu
2791 : 28              >            plp
                        
2792 : d513                     cmp zp1,x
                                tst_a $7e,~fzc
2794 : 08              >            php         ;save flags
2795 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
2797 : f003            >        beq skip2083
                       >        trap            ;failed not equal (non zero)
2799 : 20a543          >        jsr report_error
                       >
279c :                 >skip2083
                       >
279c : 68              >            pla         ;load status
279d : 48              >            pha
                       >            cmp_flag ~fzc
279e : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
27a0 : f003            >        beq skip2086
                       >        trap            ;failed not equal (non zero)
27a2 : 20a543          >        jsr report_error
                       >
27a5 :                 >skip2086
                       >
27a5 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
27a6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
27a8 : 48              >            pha         ;use stack to load status
27a9 : a980            >            lda #$80     ;precharge accu
27ab : 28              >            plp
                        
27ac : dd0802                   cmp abs1,x
                                tst_a $80,fc
27af : 08              >            php         ;save flags
27b0 : c980            >            cmp #$80     ;test result
                       >            trap_ne
27b2 : f003            >        beq skip2091
                       >        trap            ;failed not equal (non zero)
27b4 : 20a543          >        jsr report_error
                       >
27b7 :                 >skip2091
                       >
27b7 : 68              >            pla         ;load status
27b8 : 48              >            pha
                       >            cmp_flag fc
27b9 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
27bb : f003            >        beq skip2094
                       >        trap            ;failed not equal (non zero)
27bd : 20a543          >        jsr report_error
                       >
27c0 :                 >skip2094
                       >
27c0 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
27c1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
27c3 : 48              >            pha         ;use stack to load status
27c4 : a97f            >            lda #$7f     ;precharge accu
27c6 : 28              >            plp
                        
27c7 : dd0802                   cmp abs1,x
                                tst_a $7f,fzc
27ca : 08              >            php         ;save flags
27cb : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
27cd : f003            >        beq skip2099
                       >        trap            ;failed not equal (non zero)
27cf : 20a543          >        jsr report_error
                       >
27d2 :                 >skip2099
                       >
27d2 : 68              >            pla         ;load status
27d3 : 48              >            pha
                       >            cmp_flag fzc
27d4 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
27d6 : f003            >        beq skip2102
                       >        trap            ;failed not equal (non zero)
27d8 : 20a543          >        jsr report_error
                       >
27db :                 >skip2102
                       >
27db : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
27dc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
27de : 48              >            pha         ;use stack to load status
27df : a97e            >            lda #$7e     ;precharge accu
27e1 : 28              >            plp
                        
27e2 : dd0802                   cmp abs1,x
                                tst_a $7e,fn
27e5 : 08              >            php         ;save flags
27e6 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
27e8 : f003            >        beq skip2107
                       >        trap            ;failed not equal (non zero)
27ea : 20a543          >        jsr report_error
                       >
27ed :                 >skip2107
                       >
27ed : 68              >            pla         ;load status
27ee : 48              >            pha
                       >            cmp_flag fn
27ef : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
27f1 : f003            >        beq skip2110
                       >        trap            ;failed not equal (non zero)
27f3 : 20a543          >        jsr report_error
                       >
27f6 :                 >skip2110
                       >
27f6 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
27f7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
27f9 : 48              >            pha         ;use stack to load status
27fa : a980            >            lda #$80     ;precharge accu
27fc : 28              >            plp
                        
27fd : dd0802                   cmp abs1,x
                                tst_a $80,~fnz
2800 : 08              >            php         ;save flags
2801 : c980            >            cmp #$80     ;test result
                       >            trap_ne
2803 : f003            >        beq skip2115
                       >        trap            ;failed not equal (non zero)
2805 : 20a543          >        jsr report_error
                       >
2808 :                 >skip2115
                       >
2808 : 68              >            pla         ;load status
2809 : 48              >            pha
                       >            cmp_flag ~fnz
280a : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
280c : f003            >        beq skip2118
                       >        trap            ;failed not equal (non zero)
280e : 20a543          >        jsr report_error
                       >
2811 :                 >skip2118
                       >
2811 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
2812 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2814 : 48              >            pha         ;use stack to load status
2815 : a97f            >            lda #$7f     ;precharge accu
2817 : 28              >            plp
                        
2818 : dd0802                   cmp abs1,x
                                tst_a $7f,~fn
281b : 08              >            php         ;save flags
281c : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
281e : f003            >        beq skip2123
                       >        trap            ;failed not equal (non zero)
2820 : 20a543          >        jsr report_error
                       >
2823 :                 >skip2123
                       >
2823 : 68              >            pla         ;load status
2824 : 48              >            pha
                       >            cmp_flag ~fn
2825 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2827 : f003            >        beq skip2126
                       >        trap            ;failed not equal (non zero)
2829 : 20a543          >        jsr report_error
                       >
282c :                 >skip2126
                       >
282c : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
282d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
282f : 48              >            pha         ;use stack to load status
2830 : a97e            >            lda #$7e     ;precharge accu
2832 : 28              >            plp
                        
2833 : dd0802                   cmp abs1,x
                                tst_a $7e,~fzc
2836 : 08              >            php         ;save flags
2837 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
2839 : f003            >        beq skip2131
                       >        trap            ;failed not equal (non zero)
283b : 20a543          >        jsr report_error
                       >
283e :                 >skip2131
                       >
283e : 68              >            pla         ;load status
283f : 48              >            pha
                       >            cmp_flag ~fzc
2840 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2842 : f003            >        beq skip2134
                       >        trap            ;failed not equal (non zero)
2844 : 20a543          >        jsr report_error
                       >
2847 :                 >skip2134
                       >
2847 : 28              >            plp         ;restore status
                        
                        
2848 : a004                     ldy #4          ;with indexing by Y
284a : a208                     ldx #8          ;with indexed indirect
                                set_a $80,0
                       >            load_flag 0
284c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
284e : 48              >            pha         ;use stack to load status
284f : a980            >            lda #$80     ;precharge accu
2851 : 28              >            plp
                        
2852 : d90802                   cmp abs1,y
                                tst_a $80,fc
2855 : 08              >            php         ;save flags
2856 : c980            >            cmp #$80     ;test result
                       >            trap_ne
2858 : f003            >        beq skip2139
                       >        trap            ;failed not equal (non zero)
285a : 20a543          >        jsr report_error
                       >
285d :                 >skip2139
                       >
285d : 68              >            pla         ;load status
285e : 48              >            pha
                       >            cmp_flag fc
285f : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2861 : f003            >        beq skip2142
                       >        trap            ;failed not equal (non zero)
2863 : 20a543          >        jsr report_error
                       >
2866 :                 >skip2142
                       >
2866 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
2867 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2869 : 48              >            pha         ;use stack to load status
286a : a97f            >            lda #$7f     ;precharge accu
286c : 28              >            plp
                        
286d : d90802                   cmp abs1,y
                                tst_a $7f,fzc
2870 : 08              >            php         ;save flags
2871 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
2873 : f003            >        beq skip2147
                       >        trap            ;failed not equal (non zero)
2875 : 20a543          >        jsr report_error
                       >
2878 :                 >skip2147
                       >
2878 : 68              >            pla         ;load status
2879 : 48              >            pha
                       >            cmp_flag fzc
287a : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
287c : f003            >        beq skip2150
                       >        trap            ;failed not equal (non zero)
287e : 20a543          >        jsr report_error
                       >
2881 :                 >skip2150
                       >
2881 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
2882 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2884 : 48              >            pha         ;use stack to load status
2885 : a97e            >            lda #$7e     ;precharge accu
2887 : 28              >            plp
                        
2888 : d90802                   cmp abs1,y
                                tst_a $7e,fn
288b : 08              >            php         ;save flags
288c : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
288e : f003            >        beq skip2155
                       >        trap            ;failed not equal (non zero)
2890 : 20a543          >        jsr report_error
                       >
2893 :                 >skip2155
                       >
2893 : 68              >            pla         ;load status
2894 : 48              >            pha
                       >            cmp_flag fn
2895 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2897 : f003            >        beq skip2158
                       >        trap            ;failed not equal (non zero)
2899 : 20a543          >        jsr report_error
                       >
289c :                 >skip2158
                       >
289c : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
289d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
289f : 48              >            pha         ;use stack to load status
28a0 : a980            >            lda #$80     ;precharge accu
28a2 : 28              >            plp
                        
28a3 : d90802                   cmp abs1,y
                                tst_a $80,~fnz
28a6 : 08              >            php         ;save flags
28a7 : c980            >            cmp #$80     ;test result
                       >            trap_ne
28a9 : f003            >        beq skip2163
                       >        trap            ;failed not equal (non zero)
28ab : 20a543          >        jsr report_error
                       >
28ae :                 >skip2163
                       >
28ae : 68              >            pla         ;load status
28af : 48              >            pha
                       >            cmp_flag ~fnz
28b0 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
28b2 : f003            >        beq skip2166
                       >        trap            ;failed not equal (non zero)
28b4 : 20a543          >        jsr report_error
                       >
28b7 :                 >skip2166
                       >
28b7 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
28b8 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
28ba : 48              >            pha         ;use stack to load status
28bb : a97f            >            lda #$7f     ;precharge accu
28bd : 28              >            plp
                        
28be : d90802                   cmp abs1,y
                                tst_a $7f,~fn
28c1 : 08              >            php         ;save flags
28c2 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
28c4 : f003            >        beq skip2171
                       >        trap            ;failed not equal (non zero)
28c6 : 20a543          >        jsr report_error
                       >
28c9 :                 >skip2171
                       >
28c9 : 68              >            pla         ;load status
28ca : 48              >            pha
                       >            cmp_flag ~fn
28cb : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
28cd : f003            >        beq skip2174
                       >        trap            ;failed not equal (non zero)
28cf : 20a543          >        jsr report_error
                       >
28d2 :                 >skip2174
                       >
28d2 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
28d3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
28d5 : 48              >            pha         ;use stack to load status
28d6 : a97e            >            lda #$7e     ;precharge accu
28d8 : 28              >            plp
                        
28d9 : d90802                   cmp abs1,y
                                tst_a $7e,~fzc
28dc : 08              >            php         ;save flags
28dd : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
28df : f003            >        beq skip2179
                       >        trap            ;failed not equal (non zero)
28e1 : 20a543          >        jsr report_error
                       >
28e4 :                 >skip2179
                       >
28e4 : 68              >            pla         ;load status
28e5 : 48              >            pha
                       >            cmp_flag ~fzc
28e6 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
28e8 : f003            >        beq skip2182
                       >        trap            ;failed not equal (non zero)
28ea : 20a543          >        jsr report_error
                       >
28ed :                 >skip2182
                       >
28ed : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
28ee : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
28f0 : 48              >            pha         ;use stack to load status
28f1 : a980            >            lda #$80     ;precharge accu
28f3 : 28              >            plp
                        
28f4 : c124                     cmp (ind1,x)
                                tst_a $80,fc
28f6 : 08              >            php         ;save flags
28f7 : c980            >            cmp #$80     ;test result
                       >            trap_ne
28f9 : f003            >        beq skip2187
                       >        trap            ;failed not equal (non zero)
28fb : 20a543          >        jsr report_error
                       >
28fe :                 >skip2187
                       >
28fe : 68              >            pla         ;load status
28ff : 48              >            pha
                       >            cmp_flag fc
2900 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2902 : f003            >        beq skip2190
                       >        trap            ;failed not equal (non zero)
2904 : 20a543          >        jsr report_error
                       >
2907 :                 >skip2190
                       >
2907 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
2908 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
290a : 48              >            pha         ;use stack to load status
290b : a97f            >            lda #$7f     ;precharge accu
290d : 28              >            plp
                        
290e : c124                     cmp (ind1,x)
                                tst_a $7f,fzc
2910 : 08              >            php         ;save flags
2911 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
2913 : f003            >        beq skip2195
                       >        trap            ;failed not equal (non zero)
2915 : 20a543          >        jsr report_error
                       >
2918 :                 >skip2195
                       >
2918 : 68              >            pla         ;load status
2919 : 48              >            pha
                       >            cmp_flag fzc
291a : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
291c : f003            >        beq skip2198
                       >        trap            ;failed not equal (non zero)
291e : 20a543          >        jsr report_error
                       >
2921 :                 >skip2198
                       >
2921 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
2922 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2924 : 48              >            pha         ;use stack to load status
2925 : a97e            >            lda #$7e     ;precharge accu
2927 : 28              >            plp
                        
2928 : c124                     cmp (ind1,x)
                                tst_a $7e,fn
292a : 08              >            php         ;save flags
292b : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
292d : f003            >        beq skip2203
                       >        trap            ;failed not equal (non zero)
292f : 20a543          >        jsr report_error
                       >
2932 :                 >skip2203
                       >
2932 : 68              >            pla         ;load status
2933 : 48              >            pha
                       >            cmp_flag fn
2934 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2936 : f003            >        beq skip2206
                       >        trap            ;failed not equal (non zero)
2938 : 20a543          >        jsr report_error
                       >
293b :                 >skip2206
                       >
293b : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
293c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
293e : 48              >            pha         ;use stack to load status
293f : a980            >            lda #$80     ;precharge accu
2941 : 28              >            plp
                        
2942 : c124                     cmp (ind1,x)
                                tst_a $80,~fnz
2944 : 08              >            php         ;save flags
2945 : c980            >            cmp #$80     ;test result
                       >            trap_ne
2947 : f003            >        beq skip2211
                       >        trap            ;failed not equal (non zero)
2949 : 20a543          >        jsr report_error
                       >
294c :                 >skip2211
                       >
294c : 68              >            pla         ;load status
294d : 48              >            pha
                       >            cmp_flag ~fnz
294e : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2950 : f003            >        beq skip2214
                       >        trap            ;failed not equal (non zero)
2952 : 20a543          >        jsr report_error
                       >
2955 :                 >skip2214
                       >
2955 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
2956 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2958 : 48              >            pha         ;use stack to load status
2959 : a97f            >            lda #$7f     ;precharge accu
295b : 28              >            plp
                        
295c : c124                     cmp (ind1,x)
                                tst_a $7f,~fn
295e : 08              >            php         ;save flags
295f : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
2961 : f003            >        beq skip2219
                       >        trap            ;failed not equal (non zero)
2963 : 20a543          >        jsr report_error
                       >
2966 :                 >skip2219
                       >
2966 : 68              >            pla         ;load status
2967 : 48              >            pha
                       >            cmp_flag ~fn
2968 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
296a : f003            >        beq skip2222
                       >        trap            ;failed not equal (non zero)
296c : 20a543          >        jsr report_error
                       >
296f :                 >skip2222
                       >
296f : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
2970 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2972 : 48              >            pha         ;use stack to load status
2973 : a97e            >            lda #$7e     ;precharge accu
2975 : 28              >            plp
                        
2976 : c124                     cmp (ind1,x)
                                tst_a $7e,~fzc
2978 : 08              >            php         ;save flags
2979 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
297b : f003            >        beq skip2227
                       >        trap            ;failed not equal (non zero)
297d : 20a543          >        jsr report_error
                       >
2980 :                 >skip2227
                       >
2980 : 68              >            pla         ;load status
2981 : 48              >            pha
                       >            cmp_flag ~fzc
2982 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2984 : f003            >        beq skip2230
                       >        trap            ;failed not equal (non zero)
2986 : 20a543          >        jsr report_error
                       >
2989 :                 >skip2230
                       >
2989 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
298a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
298c : 48              >            pha         ;use stack to load status
298d : a980            >            lda #$80     ;precharge accu
298f : 28              >            plp
                        
2990 : d124                     cmp (ind1),y
                                tst_a $80,fc
2992 : 08              >            php         ;save flags
2993 : c980            >            cmp #$80     ;test result
                       >            trap_ne
2995 : f003            >        beq skip2235
                       >        trap            ;failed not equal (non zero)
2997 : 20a543          >        jsr report_error
                       >
299a :                 >skip2235
                       >
299a : 68              >            pla         ;load status
299b : 48              >            pha
                       >            cmp_flag fc
299c : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
299e : f003            >        beq skip2238
                       >        trap            ;failed not equal (non zero)
29a0 : 20a543          >        jsr report_error
                       >
29a3 :                 >skip2238
                       >
29a3 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
29a4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
29a6 : 48              >            pha         ;use stack to load status
29a7 : a97f            >            lda #$7f     ;precharge accu
29a9 : 28              >            plp
                        
29aa : d124                     cmp (ind1),y
                                tst_a $7f,fzc
29ac : 08              >            php         ;save flags
29ad : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
29af : f003            >        beq skip2243
                       >        trap            ;failed not equal (non zero)
29b1 : 20a543          >        jsr report_error
                       >
29b4 :                 >skip2243
                       >
29b4 : 68              >            pla         ;load status
29b5 : 48              >            pha
                       >            cmp_flag fzc
29b6 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
29b8 : f003            >        beq skip2246
                       >        trap            ;failed not equal (non zero)
29ba : 20a543          >        jsr report_error
                       >
29bd :                 >skip2246
                       >
29bd : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
29be : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
29c0 : 48              >            pha         ;use stack to load status
29c1 : a97e            >            lda #$7e     ;precharge accu
29c3 : 28              >            plp
                        
29c4 : d124                     cmp (ind1),y
                                tst_a $7e,fn
29c6 : 08              >            php         ;save flags
29c7 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
29c9 : f003            >        beq skip2251
                       >        trap            ;failed not equal (non zero)
29cb : 20a543          >        jsr report_error
                       >
29ce :                 >skip2251
                       >
29ce : 68              >            pla         ;load status
29cf : 48              >            pha
                       >            cmp_flag fn
29d0 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
29d2 : f003            >        beq skip2254
                       >        trap            ;failed not equal (non zero)
29d4 : 20a543          >        jsr report_error
                       >
29d7 :                 >skip2254
                       >
29d7 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
29d8 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
29da : 48              >            pha         ;use stack to load status
29db : a980            >            lda #$80     ;precharge accu
29dd : 28              >            plp
                        
29de : d124                     cmp (ind1),y
                                tst_a $80,~fnz
29e0 : 08              >            php         ;save flags
29e1 : c980            >            cmp #$80     ;test result
                       >            trap_ne
29e3 : f003            >        beq skip2259
                       >        trap            ;failed not equal (non zero)
29e5 : 20a543          >        jsr report_error
                       >
29e8 :                 >skip2259
                       >
29e8 : 68              >            pla         ;load status
29e9 : 48              >            pha
                       >            cmp_flag ~fnz
29ea : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
29ec : f003            >        beq skip2262
                       >        trap            ;failed not equal (non zero)
29ee : 20a543          >        jsr report_error
                       >
29f1 :                 >skip2262
                       >
29f1 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
29f2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
29f4 : 48              >            pha         ;use stack to load status
29f5 : a97f            >            lda #$7f     ;precharge accu
29f7 : 28              >            plp
                        
29f8 : d124                     cmp (ind1),y
                                tst_a $7f,~fn
29fa : 08              >            php         ;save flags
29fb : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
29fd : f003            >        beq skip2267
                       >        trap            ;failed not equal (non zero)
29ff : 20a543          >        jsr report_error
                       >
2a02 :                 >skip2267
                       >
2a02 : 68              >            pla         ;load status
2a03 : 48              >            pha
                       >            cmp_flag ~fn
2a04 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2a06 : f003            >        beq skip2270
                       >        trap            ;failed not equal (non zero)
2a08 : 20a543          >        jsr report_error
                       >
2a0b :                 >skip2270
                       >
2a0b : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
2a0c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2a0e : 48              >            pha         ;use stack to load status
2a0f : a97e            >            lda #$7e     ;precharge accu
2a11 : 28              >            plp
                        
2a12 : d124                     cmp (ind1),y
                                tst_a $7e,~fzc
2a14 : 08              >            php         ;save flags
2a15 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
2a17 : f003            >        beq skip2275
                       >        trap            ;failed not equal (non zero)
2a19 : 20a543          >        jsr report_error
                       >
2a1c :                 >skip2275
                       >
2a1c : 68              >            pla         ;load status
2a1d : 48              >            pha
                       >            cmp_flag ~fzc
2a1e : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2a20 : f003            >        beq skip2278
                       >        trap            ;failed not equal (non zero)
2a22 : 20a543          >        jsr report_error
                       >
2a25 :                 >skip2278
                       >
2a25 : 28              >            plp         ;restore status
                        
                                next_test
2a26 : ad0002          >            lda test_case   ;previous test
2a29 : c91c            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2a2b : f003            >        beq skip2281
                       >        trap            ;failed not equal (non zero)
2a2d : 20a543          >        jsr report_error
                       >
2a30 :                 >skip2281
                       >
001d =                 >test_num = test_num + 1
2a30 : a91d            >            lda #test_num   ;*** next tests' number
2a32 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing shifts - ASL LSR ROL ROR all addressing modes
                        ; shifts - accumulator
2a35 : a203                     ldx #3
2a37 :                  tasl
                                set_ax zp1,0
                       >            load_flag 0
2a37 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2a39 : 48              >            pha         ;use stack to load status
2a3a : b513            >            lda zp1,x    ;precharge accu
2a3c : 28              >            plp
                        
2a3d : 0a                       asl a
                                tst_ax rASL,fASL,0
2a3e : 08              >            php         ;save flags
2a3f : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
2a42 : f003            >        beq skip2286
                       >        trap            ;failed not equal (non zero)
2a44 : 20a543          >        jsr report_error
                       >
2a47 :                 >skip2286
                       >
2a47 : 68              >            pla         ;load status
                       >            eor_flag 0
2a48 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
2a4a : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne     ;
2a4d : f003            >        beq skip2289
                       >        trap            ;failed not equal (non zero)
2a4f : 20a543          >        jsr report_error
                       >
2a52 :                 >skip2289
                       >
                        
2a52 : ca                       dex
2a53 : 10e2                     bpl tasl
2a55 : a203                     ldx #3
2a57 :                  tasl1
                                set_ax zp1,$ff
                       >            load_flag $ff
2a57 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2a59 : 48              >            pha         ;use stack to load status
2a5a : b513            >            lda zp1,x    ;precharge accu
2a5c : 28              >            plp
                        
2a5d : 0a                       asl a
                                tst_ax rASL,fASL,$ff-fnzc
2a5e : 08              >            php         ;save flags
2a5f : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
2a62 : f003            >        beq skip2294
                       >        trap            ;failed not equal (non zero)
2a64 : 20a543          >        jsr report_error
                       >
2a67 :                 >skip2294
                       >
2a67 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2a68 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
2a6a : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne     ;
2a6d : f003            >        beq skip2297
                       >        trap            ;failed not equal (non zero)
2a6f : 20a543          >        jsr report_error
                       >
2a72 :                 >skip2297
                       >
                        
2a72 : ca                       dex
2a73 : 10e2                     bpl tasl1
                        
2a75 : a203                     ldx #3
2a77 :                  tlsr
                                set_ax zp1,0
                       >            load_flag 0
2a77 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2a79 : 48              >            pha         ;use stack to load status
2a7a : b513            >            lda zp1,x    ;precharge accu
2a7c : 28              >            plp
                        
2a7d : 4a                       lsr a
                                tst_ax rLSR,fLSR,0
2a7e : 08              >            php         ;save flags
2a7f : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
2a82 : f003            >        beq skip2302
                       >        trap            ;failed not equal (non zero)
2a84 : 20a543          >        jsr report_error
                       >
2a87 :                 >skip2302
                       >
2a87 : 68              >            pla         ;load status
                       >            eor_flag 0
2a88 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
2a8a : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne     ;
2a8d : f003            >        beq skip2305
                       >        trap            ;failed not equal (non zero)
2a8f : 20a543          >        jsr report_error
                       >
2a92 :                 >skip2305
                       >
                        
2a92 : ca                       dex
2a93 : 10e2                     bpl tlsr
2a95 : a203                     ldx #3
2a97 :                  tlsr1
                                set_ax zp1,$ff
                       >            load_flag $ff
2a97 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2a99 : 48              >            pha         ;use stack to load status
2a9a : b513            >            lda zp1,x    ;precharge accu
2a9c : 28              >            plp
                        
2a9d : 4a                       lsr a
                                tst_ax rLSR,fLSR,$ff-fnzc
2a9e : 08              >            php         ;save flags
2a9f : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
2aa2 : f003            >        beq skip2310
                       >        trap            ;failed not equal (non zero)
2aa4 : 20a543          >        jsr report_error
                       >
2aa7 :                 >skip2310
                       >
2aa7 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2aa8 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
2aaa : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne     ;
2aad : f003            >        beq skip2313
                       >        trap            ;failed not equal (non zero)
2aaf : 20a543          >        jsr report_error
                       >
2ab2 :                 >skip2313
                       >
                        
2ab2 : ca                       dex
2ab3 : 10e2                     bpl tlsr1
                        
2ab5 : a203                     ldx #3
2ab7 :                  trol
                                set_ax zp1,0
                       >            load_flag 0
2ab7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2ab9 : 48              >            pha         ;use stack to load status
2aba : b513            >            lda zp1,x    ;precharge accu
2abc : 28              >            plp
                        
2abd : 2a                       rol a
                                tst_ax rROL,fROL,0
2abe : 08              >            php         ;save flags
2abf : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
2ac2 : f003            >        beq skip2318
                       >        trap            ;failed not equal (non zero)
2ac4 : 20a543          >        jsr report_error
                       >
2ac7 :                 >skip2318
                       >
2ac7 : 68              >            pla         ;load status
                       >            eor_flag 0
2ac8 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
2aca : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne     ;
2acd : f003            >        beq skip2321
                       >        trap            ;failed not equal (non zero)
2acf : 20a543          >        jsr report_error
                       >
2ad2 :                 >skip2321
                       >
                        
2ad2 : ca                       dex
2ad3 : 10e2                     bpl trol
2ad5 : a203                     ldx #3
2ad7 :                  trol1
                                set_ax zp1,$ff-fc
                       >            load_flag $ff-fc
2ad7 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
2ad9 : 48              >            pha         ;use stack to load status
2ada : b513            >            lda zp1,x    ;precharge accu
2adc : 28              >            plp
                        
2add : 2a                       rol a
                                tst_ax rROL,fROL,$ff-fnzc
2ade : 08              >            php         ;save flags
2adf : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
2ae2 : f003            >        beq skip2326
                       >        trap            ;failed not equal (non zero)
2ae4 : 20a543          >        jsr report_error
                       >
2ae7 :                 >skip2326
                       >
2ae7 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2ae8 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
2aea : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne     ;
2aed : f003            >        beq skip2329
                       >        trap            ;failed not equal (non zero)
2aef : 20a543          >        jsr report_error
                       >
2af2 :                 >skip2329
                       >
                        
2af2 : ca                       dex
2af3 : 10e2                     bpl trol1
                        
2af5 : a203                     ldx #3
2af7 :                  trolc
                                set_ax zp1,fc
                       >            load_flag fc
2af7 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
2af9 : 48              >            pha         ;use stack to load status
2afa : b513            >            lda zp1,x    ;precharge accu
2afc : 28              >            plp
                        
2afd : 2a                       rol a
                                tst_ax rROLc,fROLc,0
2afe : 08              >            php         ;save flags
2aff : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
2b02 : f003            >        beq skip2334
                       >        trap            ;failed not equal (non zero)
2b04 : 20a543          >        jsr report_error
                       >
2b07 :                 >skip2334
                       >
2b07 : 68              >            pla         ;load status
                       >            eor_flag 0
2b08 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
2b0a : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne     ;
2b0d : f003            >        beq skip2337
                       >        trap            ;failed not equal (non zero)
2b0f : 20a543          >        jsr report_error
                       >
2b12 :                 >skip2337
                       >
                        
2b12 : ca                       dex
2b13 : 10e2                     bpl trolc
2b15 : a203                     ldx #3
2b17 :                  trolc1
                                set_ax zp1,$ff
                       >            load_flag $ff
2b17 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2b19 : 48              >            pha         ;use stack to load status
2b1a : b513            >            lda zp1,x    ;precharge accu
2b1c : 28              >            plp
                        
2b1d : 2a                       rol a
                                tst_ax rROLc,fROLc,$ff-fnzc
2b1e : 08              >            php         ;save flags
2b1f : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
2b22 : f003            >        beq skip2342
                       >        trap            ;failed not equal (non zero)
2b24 : 20a543          >        jsr report_error
                       >
2b27 :                 >skip2342
                       >
2b27 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2b28 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
2b2a : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne     ;
2b2d : f003            >        beq skip2345
                       >        trap            ;failed not equal (non zero)
2b2f : 20a543          >        jsr report_error
                       >
2b32 :                 >skip2345
                       >
                        
2b32 : ca                       dex
2b33 : 10e2                     bpl trolc1
                        
2b35 : a203                     ldx #3
2b37 :                  tror
                                set_ax zp1,0
                       >            load_flag 0
2b37 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2b39 : 48              >            pha         ;use stack to load status
2b3a : b513            >            lda zp1,x    ;precharge accu
2b3c : 28              >            plp
                        
2b3d : 6a                       ror a
                                tst_ax rROR,fROR,0
2b3e : 08              >            php         ;save flags
2b3f : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
2b42 : f003            >        beq skip2350
                       >        trap            ;failed not equal (non zero)
2b44 : 20a543          >        jsr report_error
                       >
2b47 :                 >skip2350
                       >
2b47 : 68              >            pla         ;load status
                       >            eor_flag 0
2b48 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
2b4a : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne     ;
2b4d : f003            >        beq skip2353
                       >        trap            ;failed not equal (non zero)
2b4f : 20a543          >        jsr report_error
                       >
2b52 :                 >skip2353
                       >
                        
2b52 : ca                       dex
2b53 : 10e2                     bpl tror
2b55 : a203                     ldx #3
2b57 :                  tror1
                                set_ax zp1,$ff-fc
                       >            load_flag $ff-fc
2b57 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
2b59 : 48              >            pha         ;use stack to load status
2b5a : b513            >            lda zp1,x    ;precharge accu
2b5c : 28              >            plp
                        
2b5d : 6a                       ror a
                                tst_ax rROR,fROR,$ff-fnzc
2b5e : 08              >            php         ;save flags
2b5f : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
2b62 : f003            >        beq skip2358
                       >        trap            ;failed not equal (non zero)
2b64 : 20a543          >        jsr report_error
                       >
2b67 :                 >skip2358
                       >
2b67 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2b68 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
2b6a : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne     ;
2b6d : f003            >        beq skip2361
                       >        trap            ;failed not equal (non zero)
2b6f : 20a543          >        jsr report_error
                       >
2b72 :                 >skip2361
                       >
                        
2b72 : ca                       dex
2b73 : 10e2                     bpl tror1
                        
2b75 : a203                     ldx #3
2b77 :                  trorc
                                set_ax zp1,fc
                       >            load_flag fc
2b77 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
2b79 : 48              >            pha         ;use stack to load status
2b7a : b513            >            lda zp1,x    ;precharge accu
2b7c : 28              >            plp
                        
2b7d : 6a                       ror a
                                tst_ax rRORc,fRORc,0
2b7e : 08              >            php         ;save flags
2b7f : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
2b82 : f003            >        beq skip2366
                       >        trap            ;failed not equal (non zero)
2b84 : 20a543          >        jsr report_error
                       >
2b87 :                 >skip2366
                       >
2b87 : 68              >            pla         ;load status
                       >            eor_flag 0
2b88 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
2b8a : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne     ;
2b8d : f003            >        beq skip2369
                       >        trap            ;failed not equal (non zero)
2b8f : 20a543          >        jsr report_error
                       >
2b92 :                 >skip2369
                       >
                        
2b92 : ca                       dex
2b93 : 10e2                     bpl trorc
2b95 : a203                     ldx #3
2b97 :                  trorc1
                                set_ax zp1,$ff
                       >            load_flag $ff
2b97 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2b99 : 48              >            pha         ;use stack to load status
2b9a : b513            >            lda zp1,x    ;precharge accu
2b9c : 28              >            plp
                        
2b9d : 6a                       ror a
                                tst_ax rRORc,fRORc,$ff-fnzc
2b9e : 08              >            php         ;save flags
2b9f : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
2ba2 : f003            >        beq skip2374
                       >        trap            ;failed not equal (non zero)
2ba4 : 20a543          >        jsr report_error
                       >
2ba7 :                 >skip2374
                       >
2ba7 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2ba8 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
2baa : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne     ;
2bad : f003            >        beq skip2377
                       >        trap            ;failed not equal (non zero)
2baf : 20a543          >        jsr report_error
                       >
2bb2 :                 >skip2377
                       >
                        
2bb2 : ca                       dex
2bb3 : 10e2                     bpl trorc1
                                next_test
2bb5 : ad0002          >            lda test_case   ;previous test
2bb8 : c91d            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2bba : f003            >        beq skip2380
                       >        trap            ;failed not equal (non zero)
2bbc : 20a543          >        jsr report_error
                       >
2bbf :                 >skip2380
                       >
001e =                 >test_num = test_num + 1
2bbf : a91e            >            lda #test_num   ;*** next tests' number
2bc1 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; shifts - zeropage
2bc4 : a203                     ldx #3
2bc6 :                  tasl2
                                set_z zp1,0
                       >            load_flag 0
2bc6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2bc8 : 48              >            pha         ;use stack to load status
2bc9 : b513            >            lda zp1,x    ;load to zeropage
2bcb : 850c            >            sta zpt
2bcd : 28              >            plp
                        
2bce : 060c                     asl zpt
                                tst_z rASL,fASL,0
2bd0 : 08              >            php         ;save flags
2bd1 : a50c            >            lda zpt
2bd3 : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
2bd6 : f003            >        beq skip2385
                       >        trap            ;failed not equal (non zero)
2bd8 : 20a543          >        jsr report_error
                       >
2bdb :                 >skip2385
                       >
2bdb : 68              >            pla         ;load status
                       >            eor_flag 0
2bdc : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
2bde : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
2be1 : f003            >        beq skip2388
                       >        trap            ;failed not equal (non zero)
2be3 : 20a543          >        jsr report_error
                       >
2be6 :                 >skip2388
                       >
                        
2be6 : ca                       dex
2be7 : 10dd                     bpl tasl2
2be9 : a203                     ldx #3
2beb :                  tasl3
                                set_z zp1,$ff
                       >            load_flag $ff
2beb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2bed : 48              >            pha         ;use stack to load status
2bee : b513            >            lda zp1,x    ;load to zeropage
2bf0 : 850c            >            sta zpt
2bf2 : 28              >            plp
                        
2bf3 : 060c                     asl zpt
                                tst_z rASL,fASL,$ff-fnzc
2bf5 : 08              >            php         ;save flags
2bf6 : a50c            >            lda zpt
2bf8 : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
2bfb : f003            >        beq skip2393
                       >        trap            ;failed not equal (non zero)
2bfd : 20a543          >        jsr report_error
                       >
2c00 :                 >skip2393
                       >
2c00 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2c01 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
2c03 : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
2c06 : f003            >        beq skip2396
                       >        trap            ;failed not equal (non zero)
2c08 : 20a543          >        jsr report_error
                       >
2c0b :                 >skip2396
                       >
                        
2c0b : ca                       dex
2c0c : 10dd                     bpl tasl3
                        
2c0e : a203                     ldx #3
2c10 :                  tlsr2
                                set_z zp1,0
                       >            load_flag 0
2c10 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2c12 : 48              >            pha         ;use stack to load status
2c13 : b513            >            lda zp1,x    ;load to zeropage
2c15 : 850c            >            sta zpt
2c17 : 28              >            plp
                        
2c18 : 460c                     lsr zpt
                                tst_z rLSR,fLSR,0
2c1a : 08              >            php         ;save flags
2c1b : a50c            >            lda zpt
2c1d : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
2c20 : f003            >        beq skip2401
                       >        trap            ;failed not equal (non zero)
2c22 : 20a543          >        jsr report_error
                       >
2c25 :                 >skip2401
                       >
2c25 : 68              >            pla         ;load status
                       >            eor_flag 0
2c26 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
2c28 : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
2c2b : f003            >        beq skip2404
                       >        trap            ;failed not equal (non zero)
2c2d : 20a543          >        jsr report_error
                       >
2c30 :                 >skip2404
                       >
                        
2c30 : ca                       dex
2c31 : 10dd                     bpl tlsr2
2c33 : a203                     ldx #3
2c35 :                  tlsr3
                                set_z zp1,$ff
                       >            load_flag $ff
2c35 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2c37 : 48              >            pha         ;use stack to load status
2c38 : b513            >            lda zp1,x    ;load to zeropage
2c3a : 850c            >            sta zpt
2c3c : 28              >            plp
                        
2c3d : 460c                     lsr zpt
                                tst_z rLSR,fLSR,$ff-fnzc
2c3f : 08              >            php         ;save flags
2c40 : a50c            >            lda zpt
2c42 : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
2c45 : f003            >        beq skip2409
                       >        trap            ;failed not equal (non zero)
2c47 : 20a543          >        jsr report_error
                       >
2c4a :                 >skip2409
                       >
2c4a : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2c4b : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
2c4d : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
2c50 : f003            >        beq skip2412
                       >        trap            ;failed not equal (non zero)
2c52 : 20a543          >        jsr report_error
                       >
2c55 :                 >skip2412
                       >
                        
2c55 : ca                       dex
2c56 : 10dd                     bpl tlsr3
                        
2c58 : a203                     ldx #3
2c5a :                  trol2
                                set_z zp1,0
                       >            load_flag 0
2c5a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2c5c : 48              >            pha         ;use stack to load status
2c5d : b513            >            lda zp1,x    ;load to zeropage
2c5f : 850c            >            sta zpt
2c61 : 28              >            plp
                        
2c62 : 260c                     rol zpt
                                tst_z rROL,fROL,0
2c64 : 08              >            php         ;save flags
2c65 : a50c            >            lda zpt
2c67 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
2c6a : f003            >        beq skip2417
                       >        trap            ;failed not equal (non zero)
2c6c : 20a543          >        jsr report_error
                       >
2c6f :                 >skip2417
                       >
2c6f : 68              >            pla         ;load status
                       >            eor_flag 0
2c70 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
2c72 : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
2c75 : f003            >        beq skip2420
                       >        trap            ;failed not equal (non zero)
2c77 : 20a543          >        jsr report_error
                       >
2c7a :                 >skip2420
                       >
                        
2c7a : ca                       dex
2c7b : 10dd                     bpl trol2
2c7d : a203                     ldx #3
2c7f :                  trol3
                                set_z zp1,$ff-fc
                       >            load_flag $ff-fc
2c7f : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
2c81 : 48              >            pha         ;use stack to load status
2c82 : b513            >            lda zp1,x    ;load to zeropage
2c84 : 850c            >            sta zpt
2c86 : 28              >            plp
                        
2c87 : 260c                     rol zpt
                                tst_z rROL,fROL,$ff-fnzc
2c89 : 08              >            php         ;save flags
2c8a : a50c            >            lda zpt
2c8c : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
2c8f : f003            >        beq skip2425
                       >        trap            ;failed not equal (non zero)
2c91 : 20a543          >        jsr report_error
                       >
2c94 :                 >skip2425
                       >
2c94 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2c95 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
2c97 : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
2c9a : f003            >        beq skip2428
                       >        trap            ;failed not equal (non zero)
2c9c : 20a543          >        jsr report_error
                       >
2c9f :                 >skip2428
                       >
                        
2c9f : ca                       dex
2ca0 : 10dd                     bpl trol3
                        
2ca2 : a203                     ldx #3
2ca4 :                  trolc2
                                set_z zp1,fc
                       >            load_flag fc
2ca4 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
2ca6 : 48              >            pha         ;use stack to load status
2ca7 : b513            >            lda zp1,x    ;load to zeropage
2ca9 : 850c            >            sta zpt
2cab : 28              >            plp
                        
2cac : 260c                     rol zpt
                                tst_z rROLc,fROLc,0
2cae : 08              >            php         ;save flags
2caf : a50c            >            lda zpt
2cb1 : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
2cb4 : f003            >        beq skip2433
                       >        trap            ;failed not equal (non zero)
2cb6 : 20a543          >        jsr report_error
                       >
2cb9 :                 >skip2433
                       >
2cb9 : 68              >            pla         ;load status
                       >            eor_flag 0
2cba : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
2cbc : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
2cbf : f003            >        beq skip2436
                       >        trap            ;failed not equal (non zero)
2cc1 : 20a543          >        jsr report_error
                       >
2cc4 :                 >skip2436
                       >
                        
2cc4 : ca                       dex
2cc5 : 10dd                     bpl trolc2
2cc7 : a203                     ldx #3
2cc9 :                  trolc3
                                set_z zp1,$ff
                       >            load_flag $ff
2cc9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2ccb : 48              >            pha         ;use stack to load status
2ccc : b513            >            lda zp1,x    ;load to zeropage
2cce : 850c            >            sta zpt
2cd0 : 28              >            plp
                        
2cd1 : 260c                     rol zpt
                                tst_z rROLc,fROLc,$ff-fnzc
2cd3 : 08              >            php         ;save flags
2cd4 : a50c            >            lda zpt
2cd6 : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
2cd9 : f003            >        beq skip2441
                       >        trap            ;failed not equal (non zero)
2cdb : 20a543          >        jsr report_error
                       >
2cde :                 >skip2441
                       >
2cde : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2cdf : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
2ce1 : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
2ce4 : f003            >        beq skip2444
                       >        trap            ;failed not equal (non zero)
2ce6 : 20a543          >        jsr report_error
                       >
2ce9 :                 >skip2444
                       >
                        
2ce9 : ca                       dex
2cea : 10dd                     bpl trolc3
                        
2cec : a203                     ldx #3
2cee :                  tror2
                                set_z zp1,0
                       >            load_flag 0
2cee : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2cf0 : 48              >            pha         ;use stack to load status
2cf1 : b513            >            lda zp1,x    ;load to zeropage
2cf3 : 850c            >            sta zpt
2cf5 : 28              >            plp
                        
2cf6 : 660c                     ror zpt
                                tst_z rROR,fROR,0
2cf8 : 08              >            php         ;save flags
2cf9 : a50c            >            lda zpt
2cfb : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
2cfe : f003            >        beq skip2449
                       >        trap            ;failed not equal (non zero)
2d00 : 20a543          >        jsr report_error
                       >
2d03 :                 >skip2449
                       >
2d03 : 68              >            pla         ;load status
                       >            eor_flag 0
2d04 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
2d06 : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
2d09 : f003            >        beq skip2452
                       >        trap            ;failed not equal (non zero)
2d0b : 20a543          >        jsr report_error
                       >
2d0e :                 >skip2452
                       >
                        
2d0e : ca                       dex
2d0f : 10dd                     bpl tror2
2d11 : a203                     ldx #3
2d13 :                  tror3
                                set_z zp1,$ff-fc
                       >            load_flag $ff-fc
2d13 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
2d15 : 48              >            pha         ;use stack to load status
2d16 : b513            >            lda zp1,x    ;load to zeropage
2d18 : 850c            >            sta zpt
2d1a : 28              >            plp
                        
2d1b : 660c                     ror zpt
                                tst_z rROR,fROR,$ff-fnzc
2d1d : 08              >            php         ;save flags
2d1e : a50c            >            lda zpt
2d20 : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
2d23 : f003            >        beq skip2457
                       >        trap            ;failed not equal (non zero)
2d25 : 20a543          >        jsr report_error
                       >
2d28 :                 >skip2457
                       >
2d28 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2d29 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
2d2b : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
2d2e : f003            >        beq skip2460
                       >        trap            ;failed not equal (non zero)
2d30 : 20a543          >        jsr report_error
                       >
2d33 :                 >skip2460
                       >
                        
2d33 : ca                       dex
2d34 : 10dd                     bpl tror3
                        
2d36 : a203                     ldx #3
2d38 :                  trorc2
                                set_z zp1,fc
                       >            load_flag fc
2d38 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
2d3a : 48              >            pha         ;use stack to load status
2d3b : b513            >            lda zp1,x    ;load to zeropage
2d3d : 850c            >            sta zpt
2d3f : 28              >            plp
                        
2d40 : 660c                     ror zpt
                                tst_z rRORc,fRORc,0
2d42 : 08              >            php         ;save flags
2d43 : a50c            >            lda zpt
2d45 : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
2d48 : f003            >        beq skip2465
                       >        trap            ;failed not equal (non zero)
2d4a : 20a543          >        jsr report_error
                       >
2d4d :                 >skip2465
                       >
2d4d : 68              >            pla         ;load status
                       >            eor_flag 0
2d4e : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
2d50 : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
2d53 : f003            >        beq skip2468
                       >        trap            ;failed not equal (non zero)
2d55 : 20a543          >        jsr report_error
                       >
2d58 :                 >skip2468
                       >
                        
2d58 : ca                       dex
2d59 : 10dd                     bpl trorc2
2d5b : a203                     ldx #3
2d5d :                  trorc3
                                set_z zp1,$ff
                       >            load_flag $ff
2d5d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2d5f : 48              >            pha         ;use stack to load status
2d60 : b513            >            lda zp1,x    ;load to zeropage
2d62 : 850c            >            sta zpt
2d64 : 28              >            plp
                        
2d65 : 660c                     ror zpt
                                tst_z rRORc,fRORc,$ff-fnzc
2d67 : 08              >            php         ;save flags
2d68 : a50c            >            lda zpt
2d6a : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
2d6d : f003            >        beq skip2473
                       >        trap            ;failed not equal (non zero)
2d6f : 20a543          >        jsr report_error
                       >
2d72 :                 >skip2473
                       >
2d72 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2d73 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
2d75 : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
2d78 : f003            >        beq skip2476
                       >        trap            ;failed not equal (non zero)
2d7a : 20a543          >        jsr report_error
                       >
2d7d :                 >skip2476
                       >
                        
2d7d : ca                       dex
2d7e : 10dd                     bpl trorc3
                                next_test
2d80 : ad0002          >            lda test_case   ;previous test
2d83 : c91e            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2d85 : f003            >        beq skip2479
                       >        trap            ;failed not equal (non zero)
2d87 : 20a543          >        jsr report_error
                       >
2d8a :                 >skip2479
                       >
001f =                 >test_num = test_num + 1
2d8a : a91f            >            lda #test_num   ;*** next tests' number
2d8c : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; shifts - absolute
2d8f : a203                     ldx #3
2d91 :                  tasl4
                                set_abs zp1,0
                       >            load_flag 0
2d91 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2d93 : 48              >            pha         ;use stack to load status
2d94 : b513            >            lda zp1,x    ;load to memory
2d96 : 8d0302          >            sta abst
2d99 : 28              >            plp
                        
2d9a : 0e0302                   asl abst
                                tst_abs rASL,fASL,0
2d9d : 08              >            php         ;save flags
2d9e : ad0302          >            lda abst
2da1 : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
2da4 : f003            >        beq skip2484
                       >        trap            ;failed not equal (non zero)
2da6 : 20a543          >        jsr report_error
                       >
2da9 :                 >skip2484
                       >
2da9 : 68              >            pla         ;load status
                       >            eor_flag 0
2daa : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
2dac : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
2daf : f003            >        beq skip2487
                       >        trap            ;failed not equal (non zero)
2db1 : 20a543          >        jsr report_error
                       >
2db4 :                 >skip2487
                       >
                        
2db4 : ca                       dex
2db5 : 10da                     bpl tasl4
2db7 : a203                     ldx #3
2db9 :                  tasl5
                                set_abs zp1,$ff
                       >            load_flag $ff
2db9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2dbb : 48              >            pha         ;use stack to load status
2dbc : b513            >            lda zp1,x    ;load to memory
2dbe : 8d0302          >            sta abst
2dc1 : 28              >            plp
                        
2dc2 : 0e0302                   asl abst
                                tst_abs rASL,fASL,$ff-fnzc
2dc5 : 08              >            php         ;save flags
2dc6 : ad0302          >            lda abst
2dc9 : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
2dcc : f003            >        beq skip2492
                       >        trap            ;failed not equal (non zero)
2dce : 20a543          >        jsr report_error
                       >
2dd1 :                 >skip2492
                       >
2dd1 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2dd2 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
2dd4 : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
2dd7 : f003            >        beq skip2495
                       >        trap            ;failed not equal (non zero)
2dd9 : 20a543          >        jsr report_error
                       >
2ddc :                 >skip2495
                       >
                        
2ddc : ca                       dex
2ddd : 10da                     bpl tasl5
                        
2ddf : a203                     ldx #3
2de1 :                  tlsr4
                                set_abs zp1,0
                       >            load_flag 0
2de1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2de3 : 48              >            pha         ;use stack to load status
2de4 : b513            >            lda zp1,x    ;load to memory
2de6 : 8d0302          >            sta abst
2de9 : 28              >            plp
                        
2dea : 4e0302                   lsr abst
                                tst_abs rLSR,fLSR,0
2ded : 08              >            php         ;save flags
2dee : ad0302          >            lda abst
2df1 : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
2df4 : f003            >        beq skip2500
                       >        trap            ;failed not equal (non zero)
2df6 : 20a543          >        jsr report_error
                       >
2df9 :                 >skip2500
                       >
2df9 : 68              >            pla         ;load status
                       >            eor_flag 0
2dfa : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
2dfc : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
2dff : f003            >        beq skip2503
                       >        trap            ;failed not equal (non zero)
2e01 : 20a543          >        jsr report_error
                       >
2e04 :                 >skip2503
                       >
                        
2e04 : ca                       dex
2e05 : 10da                     bpl tlsr4
2e07 : a203                     ldx #3
2e09 :                  tlsr5
                                set_abs zp1,$ff
                       >            load_flag $ff
2e09 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2e0b : 48              >            pha         ;use stack to load status
2e0c : b513            >            lda zp1,x    ;load to memory
2e0e : 8d0302          >            sta abst
2e11 : 28              >            plp
                        
2e12 : 4e0302                   lsr abst
                                tst_abs rLSR,fLSR,$ff-fnzc
2e15 : 08              >            php         ;save flags
2e16 : ad0302          >            lda abst
2e19 : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
2e1c : f003            >        beq skip2508
                       >        trap            ;failed not equal (non zero)
2e1e : 20a543          >        jsr report_error
                       >
2e21 :                 >skip2508
                       >
2e21 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2e22 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
2e24 : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
2e27 : f003            >        beq skip2511
                       >        trap            ;failed not equal (non zero)
2e29 : 20a543          >        jsr report_error
                       >
2e2c :                 >skip2511
                       >
                        
2e2c : ca                       dex
2e2d : 10da                     bpl tlsr5
                        
2e2f : a203                     ldx #3
2e31 :                  trol4
                                set_abs zp1,0
                       >            load_flag 0
2e31 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2e33 : 48              >            pha         ;use stack to load status
2e34 : b513            >            lda zp1,x    ;load to memory
2e36 : 8d0302          >            sta abst
2e39 : 28              >            plp
                        
2e3a : 2e0302                   rol abst
                                tst_abs rROL,fROL,0
2e3d : 08              >            php         ;save flags
2e3e : ad0302          >            lda abst
2e41 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
2e44 : f003            >        beq skip2516
                       >        trap            ;failed not equal (non zero)
2e46 : 20a543          >        jsr report_error
                       >
2e49 :                 >skip2516
                       >
2e49 : 68              >            pla         ;load status
                       >            eor_flag 0
2e4a : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
2e4c : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
2e4f : f003            >        beq skip2519
                       >        trap            ;failed not equal (non zero)
2e51 : 20a543          >        jsr report_error
                       >
2e54 :                 >skip2519
                       >
                        
2e54 : ca                       dex
2e55 : 10da                     bpl trol4
2e57 : a203                     ldx #3
2e59 :                  trol5
                                set_abs zp1,$ff-fc
                       >            load_flag $ff-fc
2e59 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
2e5b : 48              >            pha         ;use stack to load status
2e5c : b513            >            lda zp1,x    ;load to memory
2e5e : 8d0302          >            sta abst
2e61 : 28              >            plp
                        
2e62 : 2e0302                   rol abst
                                tst_abs rROL,fROL,$ff-fnzc
2e65 : 08              >            php         ;save flags
2e66 : ad0302          >            lda abst
2e69 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
2e6c : f003            >        beq skip2524
                       >        trap            ;failed not equal (non zero)
2e6e : 20a543          >        jsr report_error
                       >
2e71 :                 >skip2524
                       >
2e71 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2e72 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
2e74 : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
2e77 : f003            >        beq skip2527
                       >        trap            ;failed not equal (non zero)
2e79 : 20a543          >        jsr report_error
                       >
2e7c :                 >skip2527
                       >
                        
2e7c : ca                       dex
2e7d : 10da                     bpl trol5
                        
2e7f : a203                     ldx #3
2e81 :                  trolc4
                                set_abs zp1,fc
                       >            load_flag fc
2e81 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
2e83 : 48              >            pha         ;use stack to load status
2e84 : b513            >            lda zp1,x    ;load to memory
2e86 : 8d0302          >            sta abst
2e89 : 28              >            plp
                        
2e8a : 2e0302                   rol abst
                                tst_abs rROLc,fROLc,0
2e8d : 08              >            php         ;save flags
2e8e : ad0302          >            lda abst
2e91 : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
2e94 : f003            >        beq skip2532
                       >        trap            ;failed not equal (non zero)
2e96 : 20a543          >        jsr report_error
                       >
2e99 :                 >skip2532
                       >
2e99 : 68              >            pla         ;load status
                       >            eor_flag 0
2e9a : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
2e9c : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
2e9f : f003            >        beq skip2535
                       >        trap            ;failed not equal (non zero)
2ea1 : 20a543          >        jsr report_error
                       >
2ea4 :                 >skip2535
                       >
                        
2ea4 : ca                       dex
2ea5 : 10da                     bpl trolc4
2ea7 : a203                     ldx #3
2ea9 :                  trolc5
                                set_abs zp1,$ff
                       >            load_flag $ff
2ea9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2eab : 48              >            pha         ;use stack to load status
2eac : b513            >            lda zp1,x    ;load to memory
2eae : 8d0302          >            sta abst
2eb1 : 28              >            plp
                        
2eb2 : 2e0302                   rol abst
                                tst_abs rROLc,fROLc,$ff-fnzc
2eb5 : 08              >            php         ;save flags
2eb6 : ad0302          >            lda abst
2eb9 : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
2ebc : f003            >        beq skip2540
                       >        trap            ;failed not equal (non zero)
2ebe : 20a543          >        jsr report_error
                       >
2ec1 :                 >skip2540
                       >
2ec1 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2ec2 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
2ec4 : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
2ec7 : f003            >        beq skip2543
                       >        trap            ;failed not equal (non zero)
2ec9 : 20a543          >        jsr report_error
                       >
2ecc :                 >skip2543
                       >
                        
2ecc : ca                       dex
2ecd : 10da                     bpl trolc5
                        
2ecf : a203                     ldx #3
2ed1 :                  tror4
                                set_abs zp1,0
                       >            load_flag 0
2ed1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2ed3 : 48              >            pha         ;use stack to load status
2ed4 : b513            >            lda zp1,x    ;load to memory
2ed6 : 8d0302          >            sta abst
2ed9 : 28              >            plp
                        
2eda : 6e0302                   ror abst
                                tst_abs rROR,fROR,0
2edd : 08              >            php         ;save flags
2ede : ad0302          >            lda abst
2ee1 : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
2ee4 : f003            >        beq skip2548
                       >        trap            ;failed not equal (non zero)
2ee6 : 20a543          >        jsr report_error
                       >
2ee9 :                 >skip2548
                       >
2ee9 : 68              >            pla         ;load status
                       >            eor_flag 0
2eea : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
2eec : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
2eef : f003            >        beq skip2551
                       >        trap            ;failed not equal (non zero)
2ef1 : 20a543          >        jsr report_error
                       >
2ef4 :                 >skip2551
                       >
                        
2ef4 : ca                       dex
2ef5 : 10da                     bpl tror4
2ef7 : a203                     ldx #3
2ef9 :                  tror5
                                set_abs zp1,$ff-fc
                       >            load_flag $ff-fc
2ef9 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
2efb : 48              >            pha         ;use stack to load status
2efc : b513            >            lda zp1,x    ;load to memory
2efe : 8d0302          >            sta abst
2f01 : 28              >            plp
                        
2f02 : 6e0302                   ror abst
                                tst_abs rROR,fROR,$ff-fnzc
2f05 : 08              >            php         ;save flags
2f06 : ad0302          >            lda abst
2f09 : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
2f0c : f003            >        beq skip2556
                       >        trap            ;failed not equal (non zero)
2f0e : 20a543          >        jsr report_error
                       >
2f11 :                 >skip2556
                       >
2f11 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2f12 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
2f14 : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
2f17 : f003            >        beq skip2559
                       >        trap            ;failed not equal (non zero)
2f19 : 20a543          >        jsr report_error
                       >
2f1c :                 >skip2559
                       >
                        
2f1c : ca                       dex
2f1d : 10da                     bpl tror5
                        
2f1f : a203                     ldx #3
2f21 :                  trorc4
                                set_abs zp1,fc
                       >            load_flag fc
2f21 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
2f23 : 48              >            pha         ;use stack to load status
2f24 : b513            >            lda zp1,x    ;load to memory
2f26 : 8d0302          >            sta abst
2f29 : 28              >            plp
                        
2f2a : 6e0302                   ror abst
                                tst_abs rRORc,fRORc,0
2f2d : 08              >            php         ;save flags
2f2e : ad0302          >            lda abst
2f31 : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
2f34 : f003            >        beq skip2564
                       >        trap            ;failed not equal (non zero)
2f36 : 20a543          >        jsr report_error
                       >
2f39 :                 >skip2564
                       >
2f39 : 68              >            pla         ;load status
                       >            eor_flag 0
2f3a : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
2f3c : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
2f3f : f003            >        beq skip2567
                       >        trap            ;failed not equal (non zero)
2f41 : 20a543          >        jsr report_error
                       >
2f44 :                 >skip2567
                       >
                        
2f44 : ca                       dex
2f45 : 10da                     bpl trorc4
2f47 : a203                     ldx #3
2f49 :                  trorc5
                                set_abs zp1,$ff
                       >            load_flag $ff
2f49 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2f4b : 48              >            pha         ;use stack to load status
2f4c : b513            >            lda zp1,x    ;load to memory
2f4e : 8d0302          >            sta abst
2f51 : 28              >            plp
                        
2f52 : 6e0302                   ror abst
                                tst_abs rRORc,fRORc,$ff-fnzc
2f55 : 08              >            php         ;save flags
2f56 : ad0302          >            lda abst
2f59 : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
2f5c : f003            >        beq skip2572
                       >        trap            ;failed not equal (non zero)
2f5e : 20a543          >        jsr report_error
                       >
2f61 :                 >skip2572
                       >
2f61 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2f62 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
2f64 : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
2f67 : f003            >        beq skip2575
                       >        trap            ;failed not equal (non zero)
2f69 : 20a543          >        jsr report_error
                       >
2f6c :                 >skip2575
                       >
                        
2f6c : ca                       dex
2f6d : 10da                     bpl trorc5
                                next_test
2f6f : ad0002          >            lda test_case   ;previous test
2f72 : c91f            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2f74 : f003            >        beq skip2578
                       >        trap            ;failed not equal (non zero)
2f76 : 20a543          >        jsr report_error
                       >
2f79 :                 >skip2578
                       >
0020 =                 >test_num = test_num + 1
2f79 : a920            >            lda #test_num   ;*** next tests' number
2f7b : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; shifts - zp indexed
2f7e : a203                     ldx #3
2f80 :                  tasl6
                                set_zx zp1,0
                       >            load_flag 0
2f80 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2f82 : 48              >            pha         ;use stack to load status
2f83 : b513            >            lda zp1,x    ;load to indexed zeropage
2f85 : 950c            >            sta zpt,x
2f87 : 28              >            plp
                        
2f88 : 160c                     asl zpt,x
                                tst_zx rASL,fASL,0
2f8a : 08              >            php         ;save flags
2f8b : b50c            >            lda zpt,x
2f8d : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
2f90 : f003            >        beq skip2583
                       >        trap            ;failed not equal (non zero)
2f92 : 20a543          >        jsr report_error
                       >
2f95 :                 >skip2583
                       >
2f95 : 68              >            pla         ;load status
                       >            eor_flag 0
2f96 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
2f98 : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
2f9b : f003            >        beq skip2586
                       >        trap            ;failed not equal (non zero)
2f9d : 20a543          >        jsr report_error
                       >
2fa0 :                 >skip2586
                       >
                        
2fa0 : ca                       dex
2fa1 : 10dd                     bpl tasl6
2fa3 : a203                     ldx #3
2fa5 :                  tasl7
                                set_zx zp1,$ff
                       >            load_flag $ff
2fa5 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2fa7 : 48              >            pha         ;use stack to load status
2fa8 : b513            >            lda zp1,x    ;load to indexed zeropage
2faa : 950c            >            sta zpt,x
2fac : 28              >            plp
                        
2fad : 160c                     asl zpt,x
                                tst_zx rASL,fASL,$ff-fnzc
2faf : 08              >            php         ;save flags
2fb0 : b50c            >            lda zpt,x
2fb2 : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
2fb5 : f003            >        beq skip2591
                       >        trap            ;failed not equal (non zero)
2fb7 : 20a543          >        jsr report_error
                       >
2fba :                 >skip2591
                       >
2fba : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
2fbb : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
2fbd : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
2fc0 : f003            >        beq skip2594
                       >        trap            ;failed not equal (non zero)
2fc2 : 20a543          >        jsr report_error
                       >
2fc5 :                 >skip2594
                       >
                        
2fc5 : ca                       dex
2fc6 : 10dd                     bpl tasl7
                        
2fc8 : a203                     ldx #3
2fca :                  tlsr6
                                set_zx zp1,0
                       >            load_flag 0
2fca : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2fcc : 48              >            pha         ;use stack to load status
2fcd : b513            >            lda zp1,x    ;load to indexed zeropage
2fcf : 950c            >            sta zpt,x
2fd1 : 28              >            plp
                        
2fd2 : 560c                     lsr zpt,x
                                tst_zx rLSR,fLSR,0
2fd4 : 08              >            php         ;save flags
2fd5 : b50c            >            lda zpt,x
2fd7 : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
2fda : f003            >        beq skip2599
                       >        trap            ;failed not equal (non zero)
2fdc : 20a543          >        jsr report_error
                       >
2fdf :                 >skip2599
                       >
2fdf : 68              >            pla         ;load status
                       >            eor_flag 0
2fe0 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
2fe2 : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
2fe5 : f003            >        beq skip2602
                       >        trap            ;failed not equal (non zero)
2fe7 : 20a543          >        jsr report_error
                       >
2fea :                 >skip2602
                       >
                        
2fea : ca                       dex
2feb : 10dd                     bpl tlsr6
2fed : a203                     ldx #3
2fef :                  tlsr7
                                set_zx zp1,$ff
                       >            load_flag $ff
2fef : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2ff1 : 48              >            pha         ;use stack to load status
2ff2 : b513            >            lda zp1,x    ;load to indexed zeropage
2ff4 : 950c            >            sta zpt,x
2ff6 : 28              >            plp
                        
2ff7 : 560c                     lsr zpt,x
                                tst_zx rLSR,fLSR,$ff-fnzc
2ff9 : 08              >            php         ;save flags
2ffa : b50c            >            lda zpt,x
2ffc : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
2fff : f003            >        beq skip2607
                       >        trap            ;failed not equal (non zero)
3001 : 20a543          >        jsr report_error
                       >
3004 :                 >skip2607
                       >
3004 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3005 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3007 : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
300a : f003            >        beq skip2610
                       >        trap            ;failed not equal (non zero)
300c : 20a543          >        jsr report_error
                       >
300f :                 >skip2610
                       >
                        
300f : ca                       dex
3010 : 10dd                     bpl tlsr7
                        
3012 : a203                     ldx #3
3014 :                  trol6
                                set_zx zp1,0
                       >            load_flag 0
3014 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3016 : 48              >            pha         ;use stack to load status
3017 : b513            >            lda zp1,x    ;load to indexed zeropage
3019 : 950c            >            sta zpt,x
301b : 28              >            plp
                        
301c : 360c                     rol zpt,x
                                tst_zx rROL,fROL,0
301e : 08              >            php         ;save flags
301f : b50c            >            lda zpt,x
3021 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
3024 : f003            >        beq skip2615
                       >        trap            ;failed not equal (non zero)
3026 : 20a543          >        jsr report_error
                       >
3029 :                 >skip2615
                       >
3029 : 68              >            pla         ;load status
                       >            eor_flag 0
302a : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
302c : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
302f : f003            >        beq skip2618
                       >        trap            ;failed not equal (non zero)
3031 : 20a543          >        jsr report_error
                       >
3034 :                 >skip2618
                       >
                        
3034 : ca                       dex
3035 : 10dd                     bpl trol6
3037 : a203                     ldx #3
3039 :                  trol7
                                set_zx zp1,$ff-fc
                       >            load_flag $ff-fc
3039 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
303b : 48              >            pha         ;use stack to load status
303c : b513            >            lda zp1,x    ;load to indexed zeropage
303e : 950c            >            sta zpt,x
3040 : 28              >            plp
                        
3041 : 360c                     rol zpt,x
                                tst_zx rROL,fROL,$ff-fnzc
3043 : 08              >            php         ;save flags
3044 : b50c            >            lda zpt,x
3046 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
3049 : f003            >        beq skip2623
                       >        trap            ;failed not equal (non zero)
304b : 20a543          >        jsr report_error
                       >
304e :                 >skip2623
                       >
304e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
304f : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3051 : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
3054 : f003            >        beq skip2626
                       >        trap            ;failed not equal (non zero)
3056 : 20a543          >        jsr report_error
                       >
3059 :                 >skip2626
                       >
                        
3059 : ca                       dex
305a : 10dd                     bpl trol7
                        
305c : a203                     ldx #3
305e :                  trolc6
                                set_zx zp1,fc
                       >            load_flag fc
305e : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
3060 : 48              >            pha         ;use stack to load status
3061 : b513            >            lda zp1,x    ;load to indexed zeropage
3063 : 950c            >            sta zpt,x
3065 : 28              >            plp
                        
3066 : 360c                     rol zpt,x
                                tst_zx rROLc,fROLc,0
3068 : 08              >            php         ;save flags
3069 : b50c            >            lda zpt,x
306b : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
306e : f003            >        beq skip2631
                       >        trap            ;failed not equal (non zero)
3070 : 20a543          >        jsr report_error
                       >
3073 :                 >skip2631
                       >
3073 : 68              >            pla         ;load status
                       >            eor_flag 0
3074 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3076 : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
3079 : f003            >        beq skip2634
                       >        trap            ;failed not equal (non zero)
307b : 20a543          >        jsr report_error
                       >
307e :                 >skip2634
                       >
                        
307e : ca                       dex
307f : 10dd                     bpl trolc6
3081 : a203                     ldx #3
3083 :                  trolc7
                                set_zx zp1,$ff
                       >            load_flag $ff
3083 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3085 : 48              >            pha         ;use stack to load status
3086 : b513            >            lda zp1,x    ;load to indexed zeropage
3088 : 950c            >            sta zpt,x
308a : 28              >            plp
                        
308b : 360c                     rol zpt,x
                                tst_zx rROLc,fROLc,$ff-fnzc
308d : 08              >            php         ;save flags
308e : b50c            >            lda zpt,x
3090 : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
3093 : f003            >        beq skip2639
                       >        trap            ;failed not equal (non zero)
3095 : 20a543          >        jsr report_error
                       >
3098 :                 >skip2639
                       >
3098 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3099 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
309b : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
309e : f003            >        beq skip2642
                       >        trap            ;failed not equal (non zero)
30a0 : 20a543          >        jsr report_error
                       >
30a3 :                 >skip2642
                       >
                        
30a3 : ca                       dex
30a4 : 10dd                     bpl trolc7
                        
30a6 : a203                     ldx #3
30a8 :                  tror6
                                set_zx zp1,0
                       >            load_flag 0
30a8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
30aa : 48              >            pha         ;use stack to load status
30ab : b513            >            lda zp1,x    ;load to indexed zeropage
30ad : 950c            >            sta zpt,x
30af : 28              >            plp
                        
30b0 : 760c                     ror zpt,x
                                tst_zx rROR,fROR,0
30b2 : 08              >            php         ;save flags
30b3 : b50c            >            lda zpt,x
30b5 : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
30b8 : f003            >        beq skip2647
                       >        trap            ;failed not equal (non zero)
30ba : 20a543          >        jsr report_error
                       >
30bd :                 >skip2647
                       >
30bd : 68              >            pla         ;load status
                       >            eor_flag 0
30be : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
30c0 : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
30c3 : f003            >        beq skip2650
                       >        trap            ;failed not equal (non zero)
30c5 : 20a543          >        jsr report_error
                       >
30c8 :                 >skip2650
                       >
                        
30c8 : ca                       dex
30c9 : 10dd                     bpl tror6
30cb : a203                     ldx #3
30cd :                  tror7
                                set_zx zp1,$ff-fc
                       >            load_flag $ff-fc
30cd : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
30cf : 48              >            pha         ;use stack to load status
30d0 : b513            >            lda zp1,x    ;load to indexed zeropage
30d2 : 950c            >            sta zpt,x
30d4 : 28              >            plp
                        
30d5 : 760c                     ror zpt,x
                                tst_zx rROR,fROR,$ff-fnzc
30d7 : 08              >            php         ;save flags
30d8 : b50c            >            lda zpt,x
30da : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
30dd : f003            >        beq skip2655
                       >        trap            ;failed not equal (non zero)
30df : 20a543          >        jsr report_error
                       >
30e2 :                 >skip2655
                       >
30e2 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
30e3 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
30e5 : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
30e8 : f003            >        beq skip2658
                       >        trap            ;failed not equal (non zero)
30ea : 20a543          >        jsr report_error
                       >
30ed :                 >skip2658
                       >
                        
30ed : ca                       dex
30ee : 10dd                     bpl tror7
                        
30f0 : a203                     ldx #3
30f2 :                  trorc6
                                set_zx zp1,fc
                       >            load_flag fc
30f2 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
30f4 : 48              >            pha         ;use stack to load status
30f5 : b513            >            lda zp1,x    ;load to indexed zeropage
30f7 : 950c            >            sta zpt,x
30f9 : 28              >            plp
                        
30fa : 760c                     ror zpt,x
                                tst_zx rRORc,fRORc,0
30fc : 08              >            php         ;save flags
30fd : b50c            >            lda zpt,x
30ff : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
3102 : f003            >        beq skip2663
                       >        trap            ;failed not equal (non zero)
3104 : 20a543          >        jsr report_error
                       >
3107 :                 >skip2663
                       >
3107 : 68              >            pla         ;load status
                       >            eor_flag 0
3108 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
310a : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
310d : f003            >        beq skip2666
                       >        trap            ;failed not equal (non zero)
310f : 20a543          >        jsr report_error
                       >
3112 :                 >skip2666
                       >
                        
3112 : ca                       dex
3113 : 10dd                     bpl trorc6
3115 : a203                     ldx #3
3117 :                  trorc7
                                set_zx zp1,$ff
                       >            load_flag $ff
3117 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3119 : 48              >            pha         ;use stack to load status
311a : b513            >            lda zp1,x    ;load to indexed zeropage
311c : 950c            >            sta zpt,x
311e : 28              >            plp
                        
311f : 760c                     ror zpt,x
                                tst_zx rRORc,fRORc,$ff-fnzc
3121 : 08              >            php         ;save flags
3122 : b50c            >            lda zpt,x
3124 : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
3127 : f003            >        beq skip2671
                       >        trap            ;failed not equal (non zero)
3129 : 20a543          >        jsr report_error
                       >
312c :                 >skip2671
                       >
312c : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
312d : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
312f : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
3132 : f003            >        beq skip2674
                       >        trap            ;failed not equal (non zero)
3134 : 20a543          >        jsr report_error
                       >
3137 :                 >skip2674
                       >
                        
3137 : ca                       dex
3138 : 10dd                     bpl trorc7
                                next_test
313a : ad0002          >            lda test_case   ;previous test
313d : c920            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
313f : f003            >        beq skip2677
                       >        trap            ;failed not equal (non zero)
3141 : 20a543          >        jsr report_error
                       >
3144 :                 >skip2677
                       >
0021 =                 >test_num = test_num + 1
3144 : a921            >            lda #test_num   ;*** next tests' number
3146 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                        ; shifts - abs indexed
3149 : a203                     ldx #3
314b :                  tasl8
                                set_absx zp1,0
                       >            load_flag 0
314b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
314d : 48              >            pha         ;use stack to load status
314e : b513            >            lda zp1,x    ;load to indexed memory
3150 : 9d0302          >            sta abst,x
3153 : 28              >            plp
                        
3154 : 1e0302                   asl abst,x
                                tst_absx rASL,fASL,0
3157 : 08              >            php         ;save flags
3158 : bd0302          >            lda abst,x
315b : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
315e : f003            >        beq skip2682
                       >        trap            ;failed not equal (non zero)
3160 : 20a543          >        jsr report_error
                       >
3163 :                 >skip2682
                       >
3163 : 68              >            pla         ;load status
                       >            eor_flag 0
3164 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3166 : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
3169 : f003            >        beq skip2685
                       >        trap            ;failed not equal (non zero)
316b : 20a543          >        jsr report_error
                       >
316e :                 >skip2685
                       >
                        
316e : ca                       dex
316f : 10da                     bpl tasl8
3171 : a203                     ldx #3
3173 :                  tasl9
                                set_absx zp1,$ff
                       >            load_flag $ff
3173 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3175 : 48              >            pha         ;use stack to load status
3176 : b513            >            lda zp1,x    ;load to indexed memory
3178 : 9d0302          >            sta abst,x
317b : 28              >            plp
                        
317c : 1e0302                   asl abst,x
                                tst_absx rASL,fASL,$ff-fnzc
317f : 08              >            php         ;save flags
3180 : bd0302          >            lda abst,x
3183 : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
3186 : f003            >        beq skip2690
                       >        trap            ;failed not equal (non zero)
3188 : 20a543          >        jsr report_error
                       >
318b :                 >skip2690
                       >
318b : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
318c : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
318e : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
3191 : f003            >        beq skip2693
                       >        trap            ;failed not equal (non zero)
3193 : 20a543          >        jsr report_error
                       >
3196 :                 >skip2693
                       >
                        
3196 : ca                       dex
3197 : 10da                     bpl tasl9
                        
3199 : a203                     ldx #3
319b :                  tlsr8
                                set_absx zp1,0
                       >            load_flag 0
319b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
319d : 48              >            pha         ;use stack to load status
319e : b513            >            lda zp1,x    ;load to indexed memory
31a0 : 9d0302          >            sta abst,x
31a3 : 28              >            plp
                        
31a4 : 5e0302                   lsr abst,x
                                tst_absx rLSR,fLSR,0
31a7 : 08              >            php         ;save flags
31a8 : bd0302          >            lda abst,x
31ab : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
31ae : f003            >        beq skip2698
                       >        trap            ;failed not equal (non zero)
31b0 : 20a543          >        jsr report_error
                       >
31b3 :                 >skip2698
                       >
31b3 : 68              >            pla         ;load status
                       >            eor_flag 0
31b4 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
31b6 : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
31b9 : f003            >        beq skip2701
                       >        trap            ;failed not equal (non zero)
31bb : 20a543          >        jsr report_error
                       >
31be :                 >skip2701
                       >
                        
31be : ca                       dex
31bf : 10da                     bpl tlsr8
31c1 : a203                     ldx #3
31c3 :                  tlsr9
                                set_absx zp1,$ff
                       >            load_flag $ff
31c3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
31c5 : 48              >            pha         ;use stack to load status
31c6 : b513            >            lda zp1,x    ;load to indexed memory
31c8 : 9d0302          >            sta abst,x
31cb : 28              >            plp
                        
31cc : 5e0302                   lsr abst,x
                                tst_absx rLSR,fLSR,$ff-fnzc
31cf : 08              >            php         ;save flags
31d0 : bd0302          >            lda abst,x
31d3 : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
31d6 : f003            >        beq skip2706
                       >        trap            ;failed not equal (non zero)
31d8 : 20a543          >        jsr report_error
                       >
31db :                 >skip2706
                       >
31db : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
31dc : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
31de : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
31e1 : f003            >        beq skip2709
                       >        trap            ;failed not equal (non zero)
31e3 : 20a543          >        jsr report_error
                       >
31e6 :                 >skip2709
                       >
                        
31e6 : ca                       dex
31e7 : 10da                     bpl tlsr9
                        
31e9 : a203                     ldx #3
31eb :                  trol8
                                set_absx zp1,0
                       >            load_flag 0
31eb : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
31ed : 48              >            pha         ;use stack to load status
31ee : b513            >            lda zp1,x    ;load to indexed memory
31f0 : 9d0302          >            sta abst,x
31f3 : 28              >            plp
                        
31f4 : 3e0302                   rol abst,x
                                tst_absx rROL,fROL,0
31f7 : 08              >            php         ;save flags
31f8 : bd0302          >            lda abst,x
31fb : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
31fe : f003            >        beq skip2714
                       >        trap            ;failed not equal (non zero)
3200 : 20a543          >        jsr report_error
                       >
3203 :                 >skip2714
                       >
3203 : 68              >            pla         ;load status
                       >            eor_flag 0
3204 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3206 : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
3209 : f003            >        beq skip2717
                       >        trap            ;failed not equal (non zero)
320b : 20a543          >        jsr report_error
                       >
320e :                 >skip2717
                       >
                        
320e : ca                       dex
320f : 10da                     bpl trol8
3211 : a203                     ldx #3
3213 :                  trol9
                                set_absx zp1,$ff-fc
                       >            load_flag $ff-fc
3213 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
3215 : 48              >            pha         ;use stack to load status
3216 : b513            >            lda zp1,x    ;load to indexed memory
3218 : 9d0302          >            sta abst,x
321b : 28              >            plp
                        
321c : 3e0302                   rol abst,x
                                tst_absx rROL,fROL,$ff-fnzc
321f : 08              >            php         ;save flags
3220 : bd0302          >            lda abst,x
3223 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
3226 : f003            >        beq skip2722
                       >        trap            ;failed not equal (non zero)
3228 : 20a543          >        jsr report_error
                       >
322b :                 >skip2722
                       >
322b : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
322c : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
322e : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
3231 : f003            >        beq skip2725
                       >        trap            ;failed not equal (non zero)
3233 : 20a543          >        jsr report_error
                       >
3236 :                 >skip2725
                       >
                        
3236 : ca                       dex
3237 : 10da                     bpl trol9
                        
3239 : a203                     ldx #3
323b :                  trolc8
                                set_absx zp1,fc
                       >            load_flag fc
323b : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
323d : 48              >            pha         ;use stack to load status
323e : b513            >            lda zp1,x    ;load to indexed memory
3240 : 9d0302          >            sta abst,x
3243 : 28              >            plp
                        
3244 : 3e0302                   rol abst,x
                                tst_absx rROLc,fROLc,0
3247 : 08              >            php         ;save flags
3248 : bd0302          >            lda abst,x
324b : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
324e : f003            >        beq skip2730
                       >        trap            ;failed not equal (non zero)
3250 : 20a543          >        jsr report_error
                       >
3253 :                 >skip2730
                       >
3253 : 68              >            pla         ;load status
                       >            eor_flag 0
3254 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3256 : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
3259 : f003            >        beq skip2733
                       >        trap            ;failed not equal (non zero)
325b : 20a543          >        jsr report_error
                       >
325e :                 >skip2733
                       >
                        
325e : ca                       dex
325f : 10da                     bpl trolc8
3261 : a203                     ldx #3
3263 :                  trolc9
                                set_absx zp1,$ff
                       >            load_flag $ff
3263 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3265 : 48              >            pha         ;use stack to load status
3266 : b513            >            lda zp1,x    ;load to indexed memory
3268 : 9d0302          >            sta abst,x
326b : 28              >            plp
                        
326c : 3e0302                   rol abst,x
                                tst_absx rROLc,fROLc,$ff-fnzc
326f : 08              >            php         ;save flags
3270 : bd0302          >            lda abst,x
3273 : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
3276 : f003            >        beq skip2738
                       >        trap            ;failed not equal (non zero)
3278 : 20a543          >        jsr report_error
                       >
327b :                 >skip2738
                       >
327b : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
327c : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
327e : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
3281 : f003            >        beq skip2741
                       >        trap            ;failed not equal (non zero)
3283 : 20a543          >        jsr report_error
                       >
3286 :                 >skip2741
                       >
                        
3286 : ca                       dex
3287 : 10da                     bpl trolc9
                        
3289 : a203                     ldx #3
328b :                  tror8
                                set_absx zp1,0
                       >            load_flag 0
328b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
328d : 48              >            pha         ;use stack to load status
328e : b513            >            lda zp1,x    ;load to indexed memory
3290 : 9d0302          >            sta abst,x
3293 : 28              >            plp
                        
3294 : 7e0302                   ror abst,x
                                tst_absx rROR,fROR,0
3297 : 08              >            php         ;save flags
3298 : bd0302          >            lda abst,x
329b : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
329e : f003            >        beq skip2746
                       >        trap            ;failed not equal (non zero)
32a0 : 20a543          >        jsr report_error
                       >
32a3 :                 >skip2746
                       >
32a3 : 68              >            pla         ;load status
                       >            eor_flag 0
32a4 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
32a6 : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
32a9 : f003            >        beq skip2749
                       >        trap            ;failed not equal (non zero)
32ab : 20a543          >        jsr report_error
                       >
32ae :                 >skip2749
                       >
                        
32ae : ca                       dex
32af : 10da                     bpl tror8
32b1 : a203                     ldx #3
32b3 :                  tror9
                                set_absx zp1,$ff-fc
                       >            load_flag $ff-fc
32b3 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
32b5 : 48              >            pha         ;use stack to load status
32b6 : b513            >            lda zp1,x    ;load to indexed memory
32b8 : 9d0302          >            sta abst,x
32bb : 28              >            plp
                        
32bc : 7e0302                   ror abst,x
                                tst_absx rROR,fROR,$ff-fnzc
32bf : 08              >            php         ;save flags
32c0 : bd0302          >            lda abst,x
32c3 : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
32c6 : f003            >        beq skip2754
                       >        trap            ;failed not equal (non zero)
32c8 : 20a543          >        jsr report_error
                       >
32cb :                 >skip2754
                       >
32cb : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
32cc : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
32ce : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
32d1 : f003            >        beq skip2757
                       >        trap            ;failed not equal (non zero)
32d3 : 20a543          >        jsr report_error
                       >
32d6 :                 >skip2757
                       >
                        
32d6 : ca                       dex
32d7 : 10da                     bpl tror9
                        
32d9 : a203                     ldx #3
32db :                  trorc8
                                set_absx zp1,fc
                       >            load_flag fc
32db : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
32dd : 48              >            pha         ;use stack to load status
32de : b513            >            lda zp1,x    ;load to indexed memory
32e0 : 9d0302          >            sta abst,x
32e3 : 28              >            plp
                        
32e4 : 7e0302                   ror abst,x
                                tst_absx rRORc,fRORc,0
32e7 : 08              >            php         ;save flags
32e8 : bd0302          >            lda abst,x
32eb : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
32ee : f003            >        beq skip2762
                       >        trap            ;failed not equal (non zero)
32f0 : 20a543          >        jsr report_error
                       >
32f3 :                 >skip2762
                       >
32f3 : 68              >            pla         ;load status
                       >            eor_flag 0
32f4 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
32f6 : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
32f9 : f003            >        beq skip2765
                       >        trap            ;failed not equal (non zero)
32fb : 20a543          >        jsr report_error
                       >
32fe :                 >skip2765
                       >
                        
32fe : ca                       dex
32ff : 10da                     bpl trorc8
3301 : a203                     ldx #3
3303 :                  trorc9
                                set_absx zp1,$ff
                       >            load_flag $ff
3303 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3305 : 48              >            pha         ;use stack to load status
3306 : b513            >            lda zp1,x    ;load to indexed memory
3308 : 9d0302          >            sta abst,x
330b : 28              >            plp
                        
330c : 7e0302                   ror abst,x
                                tst_absx rRORc,fRORc,$ff-fnzc
330f : 08              >            php         ;save flags
3310 : bd0302          >            lda abst,x
3313 : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
3316 : f003            >        beq skip2770
                       >        trap            ;failed not equal (non zero)
3318 : 20a543          >        jsr report_error
                       >
331b :                 >skip2770
                       >
331b : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
331c : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
331e : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
3321 : f003            >        beq skip2773
                       >        trap            ;failed not equal (non zero)
3323 : 20a543          >        jsr report_error
                       >
3326 :                 >skip2773
                       >
                        
3326 : ca                       dex
3327 : 10da                     bpl trorc9
                                next_test
3329 : ad0002          >            lda test_case   ;previous test
332c : c921            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
332e : f003            >        beq skip2776
                       >        trap            ;failed not equal (non zero)
3330 : 20a543          >        jsr report_error
                       >
3333 :                 >skip2776
                       >
0022 =                 >test_num = test_num + 1
3333 : a922            >            lda #test_num   ;*** next tests' number
3335 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing memory increment/decrement - INC DEC all addressing modes
                        ; zeropage
3338 : a200                     ldx #0
333a : a97e                     lda #$7e
333c : 850c                     sta zpt
333e :                  tinc    
                                set_stat 0
                       >            load_flag 0
333e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3340 : 48              >            pha         ;use stack to load status
3341 : 28              >            plp
                        
3342 : e60c                     inc zpt
                                tst_z rINC,fINC,0
3344 : 08              >            php         ;save flags
3345 : a50c            >            lda zpt
3347 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
334a : f003            >        beq skip2781
                       >        trap            ;failed not equal (non zero)
334c : 20a543          >        jsr report_error
                       >
334f :                 >skip2781
                       >
334f : 68              >            pla         ;load status
                       >            eor_flag 0
3350 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3352 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
3355 : f003            >        beq skip2784
                       >        trap            ;failed not equal (non zero)
3357 : 20a543          >        jsr report_error
                       >
335a :                 >skip2784
                       >
                        
335a : e8                       inx
335b : e002                     cpx #2
335d : d004                     bne tinc1
335f : a9fe                     lda #$fe
3361 : 850c                     sta zpt
3363 : e005             tinc1   cpx #5
3365 : d0d7                     bne tinc
3367 : ca                       dex
3368 : e60c                     inc zpt
336a :                  tdec    
                                set_stat 0
                       >            load_flag 0
336a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
336c : 48              >            pha         ;use stack to load status
336d : 28              >            plp
                        
336e : c60c                     dec zpt
                                tst_z rINC,fINC,0
3370 : 08              >            php         ;save flags
3371 : a50c            >            lda zpt
3373 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
3376 : f003            >        beq skip2789
                       >        trap            ;failed not equal (non zero)
3378 : 20a543          >        jsr report_error
                       >
337b :                 >skip2789
                       >
337b : 68              >            pla         ;load status
                       >            eor_flag 0
337c : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
337e : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
3381 : f003            >        beq skip2792
                       >        trap            ;failed not equal (non zero)
3383 : 20a543          >        jsr report_error
                       >
3386 :                 >skip2792
                       >
                        
3386 : ca                       dex
3387 : 300a                     bmi tdec1
3389 : e001                     cpx #1
338b : d0dd                     bne tdec
338d : a981                     lda #$81
338f : 850c                     sta zpt
3391 : d0d7                     bne tdec
3393 :                  tdec1
3393 : a200                     ldx #0
3395 : a97e                     lda #$7e
3397 : 850c                     sta zpt
3399 :                  tinc10    
                                set_stat $ff
                       >            load_flag $ff
3399 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
339b : 48              >            pha         ;use stack to load status
339c : 28              >            plp
                        
339d : e60c                     inc zpt
                                tst_z rINC,fINC,$ff-fnz
339f : 08              >            php         ;save flags
33a0 : a50c            >            lda zpt
33a2 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
33a5 : f003            >        beq skip2797
                       >        trap            ;failed not equal (non zero)
33a7 : 20a543          >        jsr report_error
                       >
33aa :                 >skip2797
                       >
33aa : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
33ab : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
33ad : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
33b0 : f003            >        beq skip2800
                       >        trap            ;failed not equal (non zero)
33b2 : 20a543          >        jsr report_error
                       >
33b5 :                 >skip2800
                       >
                        
33b5 : e8                       inx
33b6 : e002                     cpx #2
33b8 : d004                     bne tinc11
33ba : a9fe                     lda #$fe
33bc : 850c                     sta zpt
33be : e005             tinc11  cpx #5
33c0 : d0d7                     bne tinc10
33c2 : ca                       dex
33c3 : e60c                     inc zpt
33c5 :                  tdec10    
                                set_stat $ff
                       >            load_flag $ff
33c5 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
33c7 : 48              >            pha         ;use stack to load status
33c8 : 28              >            plp
                        
33c9 : c60c                     dec zpt
                                tst_z rINC,fINC,$ff-fnz
33cb : 08              >            php         ;save flags
33cc : a50c            >            lda zpt
33ce : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
33d1 : f003            >        beq skip2805
                       >        trap            ;failed not equal (non zero)
33d3 : 20a543          >        jsr report_error
                       >
33d6 :                 >skip2805
                       >
33d6 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
33d7 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
33d9 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
33dc : f003            >        beq skip2808
                       >        trap            ;failed not equal (non zero)
33de : 20a543          >        jsr report_error
                       >
33e1 :                 >skip2808
                       >
                        
33e1 : ca                       dex
33e2 : 300a                     bmi tdec11
33e4 : e001                     cpx #1
33e6 : d0dd                     bne tdec10
33e8 : a981                     lda #$81
33ea : 850c                     sta zpt
33ec : d0d7                     bne tdec10
33ee :                  tdec11
                                next_test
33ee : ad0002          >            lda test_case   ;previous test
33f1 : c922            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
33f3 : f003            >        beq skip2811
                       >        trap            ;failed not equal (non zero)
33f5 : 20a543          >        jsr report_error
                       >
33f8 :                 >skip2811
                       >
0023 =                 >test_num = test_num + 1
33f8 : a923            >            lda #test_num   ;*** next tests' number
33fa : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; absolute memory
33fd : a200                     ldx #0
33ff : a97e                     lda #$7e
3401 : 8d0302                   sta abst
3404 :                  tinc2    
                                set_stat 0
                       >            load_flag 0
3404 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3406 : 48              >            pha         ;use stack to load status
3407 : 28              >            plp
                        
3408 : ee0302                   inc abst
                                tst_abs rINC,fINC,0
340b : 08              >            php         ;save flags
340c : ad0302          >            lda abst
340f : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
3412 : f003            >        beq skip2816
                       >        trap            ;failed not equal (non zero)
3414 : 20a543          >        jsr report_error
                       >
3417 :                 >skip2816
                       >
3417 : 68              >            pla         ;load status
                       >            eor_flag 0
3418 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
341a : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
341d : f003            >        beq skip2819
                       >        trap            ;failed not equal (non zero)
341f : 20a543          >        jsr report_error
                       >
3422 :                 >skip2819
                       >
                        
3422 : e8                       inx
3423 : e002                     cpx #2
3425 : d005                     bne tinc3
3427 : a9fe                     lda #$fe
3429 : 8d0302                   sta abst
342c : e005             tinc3   cpx #5
342e : d0d4                     bne tinc2
3430 : ca                       dex
3431 : ee0302                   inc abst
3434 :                  tdec2    
                                set_stat 0
                       >            load_flag 0
3434 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3436 : 48              >            pha         ;use stack to load status
3437 : 28              >            plp
                        
3438 : ce0302                   dec abst
                                tst_abs rINC,fINC,0
343b : 08              >            php         ;save flags
343c : ad0302          >            lda abst
343f : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
3442 : f003            >        beq skip2824
                       >        trap            ;failed not equal (non zero)
3444 : 20a543          >        jsr report_error
                       >
3447 :                 >skip2824
                       >
3447 : 68              >            pla         ;load status
                       >            eor_flag 0
3448 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
344a : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
344d : f003            >        beq skip2827
                       >        trap            ;failed not equal (non zero)
344f : 20a543          >        jsr report_error
                       >
3452 :                 >skip2827
                       >
                        
3452 : ca                       dex
3453 : 300b                     bmi tdec3
3455 : e001                     cpx #1
3457 : d0db                     bne tdec2
3459 : a981                     lda #$81
345b : 8d0302                   sta abst
345e : d0d4                     bne tdec2
3460 :                  tdec3
3460 : a200                     ldx #0
3462 : a97e                     lda #$7e
3464 : 8d0302                   sta abst
3467 :                  tinc12    
                                set_stat $ff
                       >            load_flag $ff
3467 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3469 : 48              >            pha         ;use stack to load status
346a : 28              >            plp
                        
346b : ee0302                   inc abst
                                tst_abs rINC,fINC,$ff-fnz
346e : 08              >            php         ;save flags
346f : ad0302          >            lda abst
3472 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
3475 : f003            >        beq skip2832
                       >        trap            ;failed not equal (non zero)
3477 : 20a543          >        jsr report_error
                       >
347a :                 >skip2832
                       >
347a : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
347b : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
347d : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
3480 : f003            >        beq skip2835
                       >        trap            ;failed not equal (non zero)
3482 : 20a543          >        jsr report_error
                       >
3485 :                 >skip2835
                       >
                        
3485 : e8                       inx
3486 : e002                     cpx #2
3488 : d005                     bne tinc13
348a : a9fe                     lda #$fe
348c : 8d0302                   sta abst
348f : e005             tinc13   cpx #5
3491 : d0d4                     bne tinc12
3493 : ca                       dex
3494 : ee0302                   inc abst
3497 :                  tdec12    
                                set_stat $ff
                       >            load_flag $ff
3497 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3499 : 48              >            pha         ;use stack to load status
349a : 28              >            plp
                        
349b : ce0302                   dec abst
                                tst_abs rINC,fINC,$ff-fnz
349e : 08              >            php         ;save flags
349f : ad0302          >            lda abst
34a2 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
34a5 : f003            >        beq skip2840
                       >        trap            ;failed not equal (non zero)
34a7 : 20a543          >        jsr report_error
                       >
34aa :                 >skip2840
                       >
34aa : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
34ab : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
34ad : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
34b0 : f003            >        beq skip2843
                       >        trap            ;failed not equal (non zero)
34b2 : 20a543          >        jsr report_error
                       >
34b5 :                 >skip2843
                       >
                        
34b5 : ca                       dex
34b6 : 300b                     bmi tdec13
34b8 : e001                     cpx #1
34ba : d0db                     bne tdec12
34bc : a981                     lda #$81
34be : 8d0302                   sta abst
34c1 : d0d4                     bne tdec12
34c3 :                  tdec13
                                next_test
34c3 : ad0002          >            lda test_case   ;previous test
34c6 : c923            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
34c8 : f003            >        beq skip2846
                       >        trap            ;failed not equal (non zero)
34ca : 20a543          >        jsr report_error
                       >
34cd :                 >skip2846
                       >
0024 =                 >test_num = test_num + 1
34cd : a924            >            lda #test_num   ;*** next tests' number
34cf : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; zeropage indexed
34d2 : a200                     ldx #0
34d4 : a97e                     lda #$7e
34d6 : 950c             tinc4   sta zpt,x
                                set_stat 0
                       >            load_flag 0
34d8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
34da : 48              >            pha         ;use stack to load status
34db : 28              >            plp
                        
34dc : f60c                     inc zpt,x
                                tst_zx rINC,fINC,0
34de : 08              >            php         ;save flags
34df : b50c            >            lda zpt,x
34e1 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
34e4 : f003            >        beq skip2851
                       >        trap            ;failed not equal (non zero)
34e6 : 20a543          >        jsr report_error
                       >
34e9 :                 >skip2851
                       >
34e9 : 68              >            pla         ;load status
                       >            eor_flag 0
34ea : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
34ec : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
34ef : f003            >        beq skip2854
                       >        trap            ;failed not equal (non zero)
34f1 : 20a543          >        jsr report_error
                       >
34f4 :                 >skip2854
                       >
                        
34f4 : b50c                     lda zpt,x
34f6 : e8                       inx
34f7 : e002                     cpx #2
34f9 : d002                     bne tinc5
34fb : a9fe                     lda #$fe
34fd : e005             tinc5   cpx #5
34ff : d0d5                     bne tinc4
3501 : ca                       dex
3502 : a902                     lda #2
3504 : 950c             tdec4   sta zpt,x 
                                set_stat 0
                       >            load_flag 0
3506 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3508 : 48              >            pha         ;use stack to load status
3509 : 28              >            plp
                        
350a : d60c                     dec zpt,x
                                tst_zx rINC,fINC,0
350c : 08              >            php         ;save flags
350d : b50c            >            lda zpt,x
350f : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
3512 : f003            >        beq skip2859
                       >        trap            ;failed not equal (non zero)
3514 : 20a543          >        jsr report_error
                       >
3517 :                 >skip2859
                       >
3517 : 68              >            pla         ;load status
                       >            eor_flag 0
3518 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
351a : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
351d : f003            >        beq skip2862
                       >        trap            ;failed not equal (non zero)
351f : 20a543          >        jsr report_error
                       >
3522 :                 >skip2862
                       >
                        
3522 : b50c                     lda zpt,x
3524 : ca                       dex
3525 : 3008                     bmi tdec5
3527 : e001                     cpx #1
3529 : d0d9                     bne tdec4
352b : a981                     lda #$81
352d : d0d5                     bne tdec4
352f :                  tdec5
352f : a200                     ldx #0
3531 : a97e                     lda #$7e
3533 : 950c             tinc14  sta zpt,x
                                set_stat $ff
                       >            load_flag $ff
3535 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3537 : 48              >            pha         ;use stack to load status
3538 : 28              >            plp
                        
3539 : f60c                     inc zpt,x
                                tst_zx rINC,fINC,$ff-fnz
353b : 08              >            php         ;save flags
353c : b50c            >            lda zpt,x
353e : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
3541 : f003            >        beq skip2867
                       >        trap            ;failed not equal (non zero)
3543 : 20a543          >        jsr report_error
                       >
3546 :                 >skip2867
                       >
3546 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3547 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3549 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
354c : f003            >        beq skip2870
                       >        trap            ;failed not equal (non zero)
354e : 20a543          >        jsr report_error
                       >
3551 :                 >skip2870
                       >
                        
3551 : b50c                     lda zpt,x
3553 : e8                       inx
3554 : e002                     cpx #2
3556 : d002                     bne tinc15
3558 : a9fe                     lda #$fe
355a : e005             tinc15  cpx #5
355c : d0d5                     bne tinc14
355e : ca                       dex
355f : a902                     lda #2
3561 : 950c             tdec14  sta zpt,x 
                                set_stat $ff
                       >            load_flag $ff
3563 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3565 : 48              >            pha         ;use stack to load status
3566 : 28              >            plp
                        
3567 : d60c                     dec zpt,x
                                tst_zx rINC,fINC,$ff-fnz
3569 : 08              >            php         ;save flags
356a : b50c            >            lda zpt,x
356c : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
356f : f003            >        beq skip2875
                       >        trap            ;failed not equal (non zero)
3571 : 20a543          >        jsr report_error
                       >
3574 :                 >skip2875
                       >
3574 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3575 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3577 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
357a : f003            >        beq skip2878
                       >        trap            ;failed not equal (non zero)
357c : 20a543          >        jsr report_error
                       >
357f :                 >skip2878
                       >
                        
357f : b50c                     lda zpt,x
3581 : ca                       dex
3582 : 3008                     bmi tdec15
3584 : e001                     cpx #1
3586 : d0d9                     bne tdec14
3588 : a981                     lda #$81
358a : d0d5                     bne tdec14
358c :                  tdec15
                                next_test
358c : ad0002          >            lda test_case   ;previous test
358f : c924            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3591 : f003            >        beq skip2881
                       >        trap            ;failed not equal (non zero)
3593 : 20a543          >        jsr report_error
                       >
3596 :                 >skip2881
                       >
0025 =                 >test_num = test_num + 1
3596 : a925            >            lda #test_num   ;*** next tests' number
3598 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; memory indexed
359b : a200                     ldx #0
359d : a97e                     lda #$7e
359f : 9d0302           tinc6   sta abst,x
                                set_stat 0
                       >            load_flag 0
35a2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
35a4 : 48              >            pha         ;use stack to load status
35a5 : 28              >            plp
                        
35a6 : fe0302                   inc abst,x
                                tst_absx rINC,fINC,0
35a9 : 08              >            php         ;save flags
35aa : bd0302          >            lda abst,x
35ad : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
35b0 : f003            >        beq skip2886
                       >        trap            ;failed not equal (non zero)
35b2 : 20a543          >        jsr report_error
                       >
35b5 :                 >skip2886
                       >
35b5 : 68              >            pla         ;load status
                       >            eor_flag 0
35b6 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
35b8 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
35bb : f003            >        beq skip2889
                       >        trap            ;failed not equal (non zero)
35bd : 20a543          >        jsr report_error
                       >
35c0 :                 >skip2889
                       >
                        
35c0 : bd0302                   lda abst,x
35c3 : e8                       inx
35c4 : e002                     cpx #2
35c6 : d002                     bne tinc7
35c8 : a9fe                     lda #$fe
35ca : e005             tinc7   cpx #5
35cc : d0d1                     bne tinc6
35ce : ca                       dex
35cf : a902                     lda #2
35d1 : 9d0302           tdec6   sta abst,x 
                                set_stat 0
                       >            load_flag 0
35d4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
35d6 : 48              >            pha         ;use stack to load status
35d7 : 28              >            plp
                        
35d8 : de0302                   dec abst,x
                                tst_absx rINC,fINC,0
35db : 08              >            php         ;save flags
35dc : bd0302          >            lda abst,x
35df : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
35e2 : f003            >        beq skip2894
                       >        trap            ;failed not equal (non zero)
35e4 : 20a543          >        jsr report_error
                       >
35e7 :                 >skip2894
                       >
35e7 : 68              >            pla         ;load status
                       >            eor_flag 0
35e8 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
35ea : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
35ed : f003            >        beq skip2897
                       >        trap            ;failed not equal (non zero)
35ef : 20a543          >        jsr report_error
                       >
35f2 :                 >skip2897
                       >
                        
35f2 : bd0302                   lda abst,x
35f5 : ca                       dex
35f6 : 3008                     bmi tdec7
35f8 : e001                     cpx #1
35fa : d0d5                     bne tdec6
35fc : a981                     lda #$81
35fe : d0d1                     bne tdec6
3600 :                  tdec7
3600 : a200                     ldx #0
3602 : a97e                     lda #$7e
3604 : 9d0302           tinc16  sta abst,x
                                set_stat $ff
                       >            load_flag $ff
3607 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3609 : 48              >            pha         ;use stack to load status
360a : 28              >            plp
                        
360b : fe0302                   inc abst,x
                                tst_absx rINC,fINC,$ff-fnz
360e : 08              >            php         ;save flags
360f : bd0302          >            lda abst,x
3612 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
3615 : f003            >        beq skip2902
                       >        trap            ;failed not equal (non zero)
3617 : 20a543          >        jsr report_error
                       >
361a :                 >skip2902
                       >
361a : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
361b : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
361d : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
3620 : f003            >        beq skip2905
                       >        trap            ;failed not equal (non zero)
3622 : 20a543          >        jsr report_error
                       >
3625 :                 >skip2905
                       >
                        
3625 : bd0302                   lda abst,x
3628 : e8                       inx
3629 : e002                     cpx #2
362b : d002                     bne tinc17
362d : a9fe                     lda #$fe
362f : e005             tinc17  cpx #5
3631 : d0d1                     bne tinc16
3633 : ca                       dex
3634 : a902                     lda #2
3636 : 9d0302           tdec16  sta abst,x 
                                set_stat $ff
                       >            load_flag $ff
3639 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
363b : 48              >            pha         ;use stack to load status
363c : 28              >            plp
                        
363d : de0302                   dec abst,x
                                tst_absx rINC,fINC,$ff-fnz
3640 : 08              >            php         ;save flags
3641 : bd0302          >            lda abst,x
3644 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
3647 : f003            >        beq skip2910
                       >        trap            ;failed not equal (non zero)
3649 : 20a543          >        jsr report_error
                       >
364c :                 >skip2910
                       >
364c : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
364d : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
364f : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
3652 : f003            >        beq skip2913
                       >        trap            ;failed not equal (non zero)
3654 : 20a543          >        jsr report_error
                       >
3657 :                 >skip2913
                       >
                        
3657 : bd0302                   lda abst,x
365a : ca                       dex
365b : 3008                     bmi tdec17
365d : e001                     cpx #1
365f : d0d5                     bne tdec16
3661 : a981                     lda #$81
3663 : d0d1                     bne tdec16
3665 :                  tdec17
                                next_test
3665 : ad0002          >            lda test_case   ;previous test
3668 : c925            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
366a : f003            >        beq skip2916
                       >        trap            ;failed not equal (non zero)
366c : 20a543          >        jsr report_error
                       >
366f :                 >skip2916
                       >
0026 =                 >test_num = test_num + 1
366f : a926            >            lda #test_num   ;*** next tests' number
3671 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing logical instructions - AND EOR ORA all addressing modes
                        ; AND
3674 : a203                     ldx #3      ;immediate - self modifying code
3676 : b51c             tand    lda zpAN,x
3678 : 8d8336                   sta tandi1
                                set_ax  absANa,0
                       >            load_flag 0
367b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
367d : 48              >            pha         ;use stack to load status
367e : bd4b02          >            lda absANa,x    ;precharge accu
3681 : 28              >            plp
                        
3683 =                  tandi1  equ *+1     ;target for immediate operand
3682 : 2963                     and #99
                                tst_ax  absrlo,absflo,0
3684 : 08              >            php         ;save flags
3685 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
3688 : f003            >        beq skip2921
                       >        trap            ;failed not equal (non zero)
368a : 20a543          >        jsr report_error
                       >
368d :                 >skip2921
                       >
368d : 68              >            pla         ;load status
                       >            eor_flag 0
368e : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3690 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
3693 : f003            >        beq skip2924
                       >        trap            ;failed not equal (non zero)
3695 : 20a543          >        jsr report_error
                       >
3698 :                 >skip2924
                       >
                        
3698 : ca                       dex
3699 : 10db                     bpl tand
369b : a203                     ldx #3
369d : b51c             tand1   lda zpAN,x
369f : 8daa36                   sta tandi2
                                set_ax  absANa,$ff
                       >            load_flag $ff
36a2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
36a4 : 48              >            pha         ;use stack to load status
36a5 : bd4b02          >            lda absANa,x    ;precharge accu
36a8 : 28              >            plp
                        
36aa =                  tandi2  equ *+1     ;target for immediate operand
36a9 : 2963                     and #99
                                tst_ax  absrlo,absflo,$ff-fnz
36ab : 08              >            php         ;save flags
36ac : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
36af : f003            >        beq skip2929
                       >        trap            ;failed not equal (non zero)
36b1 : 20a543          >        jsr report_error
                       >
36b4 :                 >skip2929
                       >
36b4 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
36b5 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
36b7 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
36ba : f003            >        beq skip2932
                       >        trap            ;failed not equal (non zero)
36bc : 20a543          >        jsr report_error
                       >
36bf :                 >skip2932
                       >
                        
36bf : ca                       dex
36c0 : 10db                     bpl tand1
                        
36c2 : a203                     ldx #3      ;zp
36c4 : b51c             tand2    lda zpAN,x
36c6 : 850c                     sta zpt
                                set_ax  absANa,0
                       >            load_flag 0
36c8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
36ca : 48              >            pha         ;use stack to load status
36cb : bd4b02          >            lda absANa,x    ;precharge accu
36ce : 28              >            plp
                        
36cf : 250c                     and zpt
                                tst_ax  absrlo,absflo,0
36d1 : 08              >            php         ;save flags
36d2 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
36d5 : f003            >        beq skip2937
                       >        trap            ;failed not equal (non zero)
36d7 : 20a543          >        jsr report_error
                       >
36da :                 >skip2937
                       >
36da : 68              >            pla         ;load status
                       >            eor_flag 0
36db : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
36dd : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
36e0 : f003            >        beq skip2940
                       >        trap            ;failed not equal (non zero)
36e2 : 20a543          >        jsr report_error
                       >
36e5 :                 >skip2940
                       >
                        
36e5 : ca                       dex
36e6 : 10dc                     bpl tand2
36e8 : a203                     ldx #3
36ea : b51c             tand3   lda zpAN,x
36ec : 850c                     sta zpt
                                set_ax  absANa,$ff
                       >            load_flag $ff
36ee : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
36f0 : 48              >            pha         ;use stack to load status
36f1 : bd4b02          >            lda absANa,x    ;precharge accu
36f4 : 28              >            plp
                        
36f5 : 250c                     and zpt
                                tst_ax  absrlo,absflo,$ff-fnz
36f7 : 08              >            php         ;save flags
36f8 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
36fb : f003            >        beq skip2945
                       >        trap            ;failed not equal (non zero)
36fd : 20a543          >        jsr report_error
                       >
3700 :                 >skip2945
                       >
3700 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3701 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3703 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
3706 : f003            >        beq skip2948
                       >        trap            ;failed not equal (non zero)
3708 : 20a543          >        jsr report_error
                       >
370b :                 >skip2948
                       >
                        
370b : ca                       dex
370c : 10dc                     bpl tand3
                        
370e : a203                     ldx #3      ;abs
3710 : b51c             tand4   lda zpAN,x
3712 : 8d0302                   sta abst
                                set_ax  absANa,0
                       >            load_flag 0
3715 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3717 : 48              >            pha         ;use stack to load status
3718 : bd4b02          >            lda absANa,x    ;precharge accu
371b : 28              >            plp
                        
371c : 2d0302                   and abst
                                tst_ax  absrlo,absflo,0
371f : 08              >            php         ;save flags
3720 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
3723 : f003            >        beq skip2953
                       >        trap            ;failed not equal (non zero)
3725 : 20a543          >        jsr report_error
                       >
3728 :                 >skip2953
                       >
3728 : 68              >            pla         ;load status
                       >            eor_flag 0
3729 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
372b : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
372e : f003            >        beq skip2956
                       >        trap            ;failed not equal (non zero)
3730 : 20a543          >        jsr report_error
                       >
3733 :                 >skip2956
                       >
                        
3733 : ca                       dex
3734 : 10da                     bpl tand4
3736 : a203                     ldx #3
3738 : b51c             tand5   lda zpAN,x
373a : 8d0302                   sta abst
                                set_ax  absANa,$ff
                       >            load_flag $ff
373d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
373f : 48              >            pha         ;use stack to load status
3740 : bd4b02          >            lda absANa,x    ;precharge accu
3743 : 28              >            plp
                        
3744 : 2d0302                   and abst
                                tst_ax  absrlo,absflo,$ff-fnz
3747 : 08              >            php         ;save flags
3748 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
374b : f003            >        beq skip2961
                       >        trap            ;failed not equal (non zero)
374d : 20a543          >        jsr report_error
                       >
3750 :                 >skip2961
                       >
3750 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3751 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3753 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
3756 : f003            >        beq skip2964
                       >        trap            ;failed not equal (non zero)
3758 : 20a543          >        jsr report_error
                       >
375b :                 >skip2964
                       >
                        
375b : ca                       dex
375c : 1002                     bpl tand6
                        
375e : a203                     ldx #3      ;zp,x
3760 :                  tand6
                                set_ax  absANa,0
                       >            load_flag 0
3760 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3762 : 48              >            pha         ;use stack to load status
3763 : bd4b02          >            lda absANa,x    ;precharge accu
3766 : 28              >            plp
                        
3767 : 351c                     and zpAN,x
                                tst_ax  absrlo,absflo,0
3769 : 08              >            php         ;save flags
376a : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
376d : f003            >        beq skip2969
                       >        trap            ;failed not equal (non zero)
376f : 20a543          >        jsr report_error
                       >
3772 :                 >skip2969
                       >
3772 : 68              >            pla         ;load status
                       >            eor_flag 0
3773 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3775 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
3778 : f003            >        beq skip2972
                       >        trap            ;failed not equal (non zero)
377a : 20a543          >        jsr report_error
                       >
377d :                 >skip2972
                       >
                        
377d : ca                       dex
377e : 10e0                     bpl tand6
3780 : a203                     ldx #3
3782 :                  tand7
                                set_ax  absANa,$ff
                       >            load_flag $ff
3782 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3784 : 48              >            pha         ;use stack to load status
3785 : bd4b02          >            lda absANa,x    ;precharge accu
3788 : 28              >            plp
                        
3789 : 351c                     and zpAN,x
                                tst_ax  absrlo,absflo,$ff-fnz
378b : 08              >            php         ;save flags
378c : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
378f : f003            >        beq skip2977
                       >        trap            ;failed not equal (non zero)
3791 : 20a543          >        jsr report_error
                       >
3794 :                 >skip2977
                       >
3794 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3795 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3797 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
379a : f003            >        beq skip2980
                       >        trap            ;failed not equal (non zero)
379c : 20a543          >        jsr report_error
                       >
379f :                 >skip2980
                       >
                        
379f : ca                       dex
37a0 : 10e0                     bpl tand7
                        
37a2 : a203                     ldx #3      ;abs,x
37a4 :                  tand8
                                set_ax  absANa,0
                       >            load_flag 0
37a4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
37a6 : 48              >            pha         ;use stack to load status
37a7 : bd4b02          >            lda absANa,x    ;precharge accu
37aa : 28              >            plp
                        
37ab : 3d3f02                   and absAN,x
                                tst_ax  absrlo,absflo,0
37ae : 08              >            php         ;save flags
37af : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
37b2 : f003            >        beq skip2985
                       >        trap            ;failed not equal (non zero)
37b4 : 20a543          >        jsr report_error
                       >
37b7 :                 >skip2985
                       >
37b7 : 68              >            pla         ;load status
                       >            eor_flag 0
37b8 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
37ba : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
37bd : f003            >        beq skip2988
                       >        trap            ;failed not equal (non zero)
37bf : 20a543          >        jsr report_error
                       >
37c2 :                 >skip2988
                       >
                        
37c2 : ca                       dex
37c3 : 10df                     bpl tand8
37c5 : a203                     ldx #3
37c7 :                  tand9
                                set_ax  absANa,$ff
                       >            load_flag $ff
37c7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
37c9 : 48              >            pha         ;use stack to load status
37ca : bd4b02          >            lda absANa,x    ;precharge accu
37cd : 28              >            plp
                        
37ce : 3d3f02                   and absAN,x
                                tst_ax  absrlo,absflo,$ff-fnz
37d1 : 08              >            php         ;save flags
37d2 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
37d5 : f003            >        beq skip2993
                       >        trap            ;failed not equal (non zero)
37d7 : 20a543          >        jsr report_error
                       >
37da :                 >skip2993
                       >
37da : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
37db : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
37dd : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
37e0 : f003            >        beq skip2996
                       >        trap            ;failed not equal (non zero)
37e2 : 20a543          >        jsr report_error
                       >
37e5 :                 >skip2996
                       >
                        
37e5 : ca                       dex
37e6 : 10df                     bpl tand9
                        
37e8 : a003                     ldy #3      ;abs,y
37ea :                  tand10
                                set_ay  absANa,0
                       >            load_flag 0
37ea : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
37ec : 48              >            pha         ;use stack to load status
37ed : b94b02          >            lda absANa,y    ;precharge accu
37f0 : 28              >            plp
                        
37f1 : 393f02                   and absAN,y
                                tst_ay  absrlo,absflo,0
37f4 : 08              >            php         ;save flags
37f5 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
37f8 : f003            >        beq skip3001
                       >        trap            ;failed not equal (non zero)
37fa : 20a543          >        jsr report_error
                       >
37fd :                 >skip3001
                       >
37fd : 68              >            pla         ;load status
                       >            eor_flag 0
37fe : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3800 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
3803 : f003            >        beq skip3004
                       >        trap            ;failed not equal (non zero)
3805 : 20a543          >        jsr report_error
                       >
3808 :                 >skip3004
                       >
                        
3808 : 88                       dey
3809 : 10df                     bpl tand10
380b : a003                     ldy #3
380d :                  tand11
                                set_ay  absANa,$ff
                       >            load_flag $ff
380d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
380f : 48              >            pha         ;use stack to load status
3810 : b94b02          >            lda absANa,y    ;precharge accu
3813 : 28              >            plp
                        
3814 : 393f02                   and absAN,y
                                tst_ay  absrlo,absflo,$ff-fnz
3817 : 08              >            php         ;save flags
3818 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
381b : f003            >        beq skip3009
                       >        trap            ;failed not equal (non zero)
381d : 20a543          >        jsr report_error
                       >
3820 :                 >skip3009
                       >
3820 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3821 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3823 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
3826 : f003            >        beq skip3012
                       >        trap            ;failed not equal (non zero)
3828 : 20a543          >        jsr report_error
                       >
382b :                 >skip3012
                       >
                        
382b : 88                       dey
382c : 10df                     bpl tand11
                        
382e : a206                     ldx #6      ;(zp,x)
3830 : a003                     ldy #3
3832 :                  tand12
                                set_ay  absANa,0
                       >            load_flag 0
3832 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3834 : 48              >            pha         ;use stack to load status
3835 : b94b02          >            lda absANa,y    ;precharge accu
3838 : 28              >            plp
                        
3839 : 213a                     and (indAN,x)
                                tst_ay  absrlo,absflo,0
383b : 08              >            php         ;save flags
383c : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
383f : f003            >        beq skip3017
                       >        trap            ;failed not equal (non zero)
3841 : 20a543          >        jsr report_error
                       >
3844 :                 >skip3017
                       >
3844 : 68              >            pla         ;load status
                       >            eor_flag 0
3845 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3847 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
384a : f003            >        beq skip3020
                       >        trap            ;failed not equal (non zero)
384c : 20a543          >        jsr report_error
                       >
384f :                 >skip3020
                       >
                        
384f : ca                       dex
3850 : ca                       dex
3851 : 88                       dey
3852 : 10de                     bpl tand12
3854 : a206                     ldx #6
3856 : a003                     ldy #3
3858 :                  tand13
                                set_ay  absANa,$ff
                       >            load_flag $ff
3858 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
385a : 48              >            pha         ;use stack to load status
385b : b94b02          >            lda absANa,y    ;precharge accu
385e : 28              >            plp
                        
385f : 213a                     and (indAN,x)
                                tst_ay  absrlo,absflo,$ff-fnz
3861 : 08              >            php         ;save flags
3862 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3865 : f003            >        beq skip3025
                       >        trap            ;failed not equal (non zero)
3867 : 20a543          >        jsr report_error
                       >
386a :                 >skip3025
                       >
386a : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
386b : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
386d : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
3870 : f003            >        beq skip3028
                       >        trap            ;failed not equal (non zero)
3872 : 20a543          >        jsr report_error
                       >
3875 :                 >skip3028
                       >
                        
3875 : ca                       dex
3876 : ca                       dex
3877 : 88                       dey
3878 : 10de                     bpl tand13
                        
387a : a003                     ldy #3      ;(zp),y
387c :                  tand14
                                set_ay  absANa,0
                       >            load_flag 0
387c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
387e : 48              >            pha         ;use stack to load status
387f : b94b02          >            lda absANa,y    ;precharge accu
3882 : 28              >            plp
                        
3883 : 313a                     and (indAN),y
                                tst_ay  absrlo,absflo,0
3885 : 08              >            php         ;save flags
3886 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3889 : f003            >        beq skip3033
                       >        trap            ;failed not equal (non zero)
388b : 20a543          >        jsr report_error
                       >
388e :                 >skip3033
                       >
388e : 68              >            pla         ;load status
                       >            eor_flag 0
388f : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3891 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
3894 : f003            >        beq skip3036
                       >        trap            ;failed not equal (non zero)
3896 : 20a543          >        jsr report_error
                       >
3899 :                 >skip3036
                       >
                        
3899 : 88                       dey
389a : 10e0                     bpl tand14
389c : a003                     ldy #3
389e :                  tand15
                                set_ay  absANa,$ff
                       >            load_flag $ff
389e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
38a0 : 48              >            pha         ;use stack to load status
38a1 : b94b02          >            lda absANa,y    ;precharge accu
38a4 : 28              >            plp
                        
38a5 : 313a                     and (indAN),y
                                tst_ay  absrlo,absflo,$ff-fnz
38a7 : 08              >            php         ;save flags
38a8 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
38ab : f003            >        beq skip3041
                       >        trap            ;failed not equal (non zero)
38ad : 20a543          >        jsr report_error
                       >
38b0 :                 >skip3041
                       >
38b0 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
38b1 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
38b3 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
38b6 : f003            >        beq skip3044
                       >        trap            ;failed not equal (non zero)
38b8 : 20a543          >        jsr report_error
                       >
38bb :                 >skip3044
                       >
                        
38bb : 88                       dey
38bc : 10e0                     bpl tand15
                                next_test
38be : ad0002          >            lda test_case   ;previous test
38c1 : c926            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
38c3 : f003            >        beq skip3047
                       >        trap            ;failed not equal (non zero)
38c5 : 20a543          >        jsr report_error
                       >
38c8 :                 >skip3047
                       >
0027 =                 >test_num = test_num + 1
38c8 : a927            >            lda #test_num   ;*** next tests' number
38ca : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; EOR
38cd : a203                     ldx #3      ;immediate - self modifying code
38cf : b520             teor    lda zpEO,x
38d1 : 8ddc38                   sta teori1
                                set_ax  absEOa,0
                       >            load_flag 0
38d4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
38d6 : 48              >            pha         ;use stack to load status
38d7 : bd4f02          >            lda absEOa,x    ;precharge accu
38da : 28              >            plp
                        
38dc =                  teori1  equ *+1     ;target for immediate operand
38db : 4963                     eor #99
                                tst_ax  absrlo,absflo,0
38dd : 08              >            php         ;save flags
38de : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
38e1 : f003            >        beq skip3052
                       >        trap            ;failed not equal (non zero)
38e3 : 20a543          >        jsr report_error
                       >
38e6 :                 >skip3052
                       >
38e6 : 68              >            pla         ;load status
                       >            eor_flag 0
38e7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
38e9 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
38ec : f003            >        beq skip3055
                       >        trap            ;failed not equal (non zero)
38ee : 20a543          >        jsr report_error
                       >
38f1 :                 >skip3055
                       >
                        
38f1 : ca                       dex
38f2 : 10db                     bpl teor
38f4 : a203                     ldx #3
38f6 : b520             teor1   lda zpEO,x
38f8 : 8d0339                   sta teori2
                                set_ax  absEOa,$ff
                       >            load_flag $ff
38fb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
38fd : 48              >            pha         ;use stack to load status
38fe : bd4f02          >            lda absEOa,x    ;precharge accu
3901 : 28              >            plp
                        
3903 =                  teori2  equ *+1     ;target for immediate operand
3902 : 4963                     eor #99
                                tst_ax  absrlo,absflo,$ff-fnz
3904 : 08              >            php         ;save flags
3905 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
3908 : f003            >        beq skip3060
                       >        trap            ;failed not equal (non zero)
390a : 20a543          >        jsr report_error
                       >
390d :                 >skip3060
                       >
390d : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
390e : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3910 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
3913 : f003            >        beq skip3063
                       >        trap            ;failed not equal (non zero)
3915 : 20a543          >        jsr report_error
                       >
3918 :                 >skip3063
                       >
                        
3918 : ca                       dex
3919 : 10db                     bpl teor1
                        
391b : a203                     ldx #3      ;zp
391d : b520             teor2    lda zpEO,x
391f : 850c                     sta zpt
                                set_ax  absEOa,0
                       >            load_flag 0
3921 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3923 : 48              >            pha         ;use stack to load status
3924 : bd4f02          >            lda absEOa,x    ;precharge accu
3927 : 28              >            plp
                        
3928 : 450c                     eor zpt
                                tst_ax  absrlo,absflo,0
392a : 08              >            php         ;save flags
392b : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
392e : f003            >        beq skip3068
                       >        trap            ;failed not equal (non zero)
3930 : 20a543          >        jsr report_error
                       >
3933 :                 >skip3068
                       >
3933 : 68              >            pla         ;load status
                       >            eor_flag 0
3934 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3936 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
3939 : f003            >        beq skip3071
                       >        trap            ;failed not equal (non zero)
393b : 20a543          >        jsr report_error
                       >
393e :                 >skip3071
                       >
                        
393e : ca                       dex
393f : 10dc                     bpl teor2
3941 : a203                     ldx #3
3943 : b520             teor3   lda zpEO,x
3945 : 850c                     sta zpt
                                set_ax  absEOa,$ff
                       >            load_flag $ff
3947 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3949 : 48              >            pha         ;use stack to load status
394a : bd4f02          >            lda absEOa,x    ;precharge accu
394d : 28              >            plp
                        
394e : 450c                     eor zpt
                                tst_ax  absrlo,absflo,$ff-fnz
3950 : 08              >            php         ;save flags
3951 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
3954 : f003            >        beq skip3076
                       >        trap            ;failed not equal (non zero)
3956 : 20a543          >        jsr report_error
                       >
3959 :                 >skip3076
                       >
3959 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
395a : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
395c : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
395f : f003            >        beq skip3079
                       >        trap            ;failed not equal (non zero)
3961 : 20a543          >        jsr report_error
                       >
3964 :                 >skip3079
                       >
                        
3964 : ca                       dex
3965 : 10dc                     bpl teor3
                        
3967 : a203                     ldx #3      ;abs
3969 : b520             teor4   lda zpEO,x
396b : 8d0302                   sta abst
                                set_ax  absEOa,0
                       >            load_flag 0
396e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3970 : 48              >            pha         ;use stack to load status
3971 : bd4f02          >            lda absEOa,x    ;precharge accu
3974 : 28              >            plp
                        
3975 : 4d0302                   eor abst
                                tst_ax  absrlo,absflo,0
3978 : 08              >            php         ;save flags
3979 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
397c : f003            >        beq skip3084
                       >        trap            ;failed not equal (non zero)
397e : 20a543          >        jsr report_error
                       >
3981 :                 >skip3084
                       >
3981 : 68              >            pla         ;load status
                       >            eor_flag 0
3982 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3984 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
3987 : f003            >        beq skip3087
                       >        trap            ;failed not equal (non zero)
3989 : 20a543          >        jsr report_error
                       >
398c :                 >skip3087
                       >
                        
398c : ca                       dex
398d : 10da                     bpl teor4
398f : a203                     ldx #3
3991 : b520             teor5   lda zpEO,x
3993 : 8d0302                   sta abst
                                set_ax  absEOa,$ff
                       >            load_flag $ff
3996 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3998 : 48              >            pha         ;use stack to load status
3999 : bd4f02          >            lda absEOa,x    ;precharge accu
399c : 28              >            plp
                        
399d : 4d0302                   eor abst
                                tst_ax  absrlo,absflo,$ff-fnz
39a0 : 08              >            php         ;save flags
39a1 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
39a4 : f003            >        beq skip3092
                       >        trap            ;failed not equal (non zero)
39a6 : 20a543          >        jsr report_error
                       >
39a9 :                 >skip3092
                       >
39a9 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
39aa : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
39ac : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
39af : f003            >        beq skip3095
                       >        trap            ;failed not equal (non zero)
39b1 : 20a543          >        jsr report_error
                       >
39b4 :                 >skip3095
                       >
                        
39b4 : ca                       dex
39b5 : 1002                     bpl teor6
                        
39b7 : a203                     ldx #3      ;zp,x
39b9 :                  teor6
                                set_ax  absEOa,0
                       >            load_flag 0
39b9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
39bb : 48              >            pha         ;use stack to load status
39bc : bd4f02          >            lda absEOa,x    ;precharge accu
39bf : 28              >            plp
                        
39c0 : 5520                     eor zpEO,x
                                tst_ax  absrlo,absflo,0
39c2 : 08              >            php         ;save flags
39c3 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
39c6 : f003            >        beq skip3100
                       >        trap            ;failed not equal (non zero)
39c8 : 20a543          >        jsr report_error
                       >
39cb :                 >skip3100
                       >
39cb : 68              >            pla         ;load status
                       >            eor_flag 0
39cc : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
39ce : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
39d1 : f003            >        beq skip3103
                       >        trap            ;failed not equal (non zero)
39d3 : 20a543          >        jsr report_error
                       >
39d6 :                 >skip3103
                       >
                        
39d6 : ca                       dex
39d7 : 10e0                     bpl teor6
39d9 : a203                     ldx #3
39db :                  teor7
                                set_ax  absEOa,$ff
                       >            load_flag $ff
39db : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
39dd : 48              >            pha         ;use stack to load status
39de : bd4f02          >            lda absEOa,x    ;precharge accu
39e1 : 28              >            plp
                        
39e2 : 5520                     eor zpEO,x
                                tst_ax  absrlo,absflo,$ff-fnz
39e4 : 08              >            php         ;save flags
39e5 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
39e8 : f003            >        beq skip3108
                       >        trap            ;failed not equal (non zero)
39ea : 20a543          >        jsr report_error
                       >
39ed :                 >skip3108
                       >
39ed : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
39ee : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
39f0 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
39f3 : f003            >        beq skip3111
                       >        trap            ;failed not equal (non zero)
39f5 : 20a543          >        jsr report_error
                       >
39f8 :                 >skip3111
                       >
                        
39f8 : ca                       dex
39f9 : 10e0                     bpl teor7
                        
39fb : a203                     ldx #3      ;abs,x
39fd :                  teor8
                                set_ax  absEOa,0
                       >            load_flag 0
39fd : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
39ff : 48              >            pha         ;use stack to load status
3a00 : bd4f02          >            lda absEOa,x    ;precharge accu
3a03 : 28              >            plp
                        
3a04 : 5d4302                   eor absEO,x
                                tst_ax  absrlo,absflo,0
3a07 : 08              >            php         ;save flags
3a08 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
3a0b : f003            >        beq skip3116
                       >        trap            ;failed not equal (non zero)
3a0d : 20a543          >        jsr report_error
                       >
3a10 :                 >skip3116
                       >
3a10 : 68              >            pla         ;load status
                       >            eor_flag 0
3a11 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3a13 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
3a16 : f003            >        beq skip3119
                       >        trap            ;failed not equal (non zero)
3a18 : 20a543          >        jsr report_error
                       >
3a1b :                 >skip3119
                       >
                        
3a1b : ca                       dex
3a1c : 10df                     bpl teor8
3a1e : a203                     ldx #3
3a20 :                  teor9
                                set_ax  absEOa,$ff
                       >            load_flag $ff
3a20 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3a22 : 48              >            pha         ;use stack to load status
3a23 : bd4f02          >            lda absEOa,x    ;precharge accu
3a26 : 28              >            plp
                        
3a27 : 5d4302                   eor absEO,x
                                tst_ax  absrlo,absflo,$ff-fnz
3a2a : 08              >            php         ;save flags
3a2b : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
3a2e : f003            >        beq skip3124
                       >        trap            ;failed not equal (non zero)
3a30 : 20a543          >        jsr report_error
                       >
3a33 :                 >skip3124
                       >
3a33 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3a34 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3a36 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
3a39 : f003            >        beq skip3127
                       >        trap            ;failed not equal (non zero)
3a3b : 20a543          >        jsr report_error
                       >
3a3e :                 >skip3127
                       >
                        
3a3e : ca                       dex
3a3f : 10df                     bpl teor9
                        
3a41 : a003                     ldy #3      ;abs,y
3a43 :                  teor10
                                set_ay  absEOa,0
                       >            load_flag 0
3a43 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3a45 : 48              >            pha         ;use stack to load status
3a46 : b94f02          >            lda absEOa,y    ;precharge accu
3a49 : 28              >            plp
                        
3a4a : 594302                   eor absEO,y
                                tst_ay  absrlo,absflo,0
3a4d : 08              >            php         ;save flags
3a4e : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3a51 : f003            >        beq skip3132
                       >        trap            ;failed not equal (non zero)
3a53 : 20a543          >        jsr report_error
                       >
3a56 :                 >skip3132
                       >
3a56 : 68              >            pla         ;load status
                       >            eor_flag 0
3a57 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3a59 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
3a5c : f003            >        beq skip3135
                       >        trap            ;failed not equal (non zero)
3a5e : 20a543          >        jsr report_error
                       >
3a61 :                 >skip3135
                       >
                        
3a61 : 88                       dey
3a62 : 10df                     bpl teor10
3a64 : a003                     ldy #3
3a66 :                  teor11
                                set_ay  absEOa,$ff
                       >            load_flag $ff
3a66 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3a68 : 48              >            pha         ;use stack to load status
3a69 : b94f02          >            lda absEOa,y    ;precharge accu
3a6c : 28              >            plp
                        
3a6d : 594302                   eor absEO,y
                                tst_ay  absrlo,absflo,$ff-fnz
3a70 : 08              >            php         ;save flags
3a71 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3a74 : f003            >        beq skip3140
                       >        trap            ;failed not equal (non zero)
3a76 : 20a543          >        jsr report_error
                       >
3a79 :                 >skip3140
                       >
3a79 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3a7a : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3a7c : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
3a7f : f003            >        beq skip3143
                       >        trap            ;failed not equal (non zero)
3a81 : 20a543          >        jsr report_error
                       >
3a84 :                 >skip3143
                       >
                        
3a84 : 88                       dey
3a85 : 10df                     bpl teor11
                        
3a87 : a206                     ldx #6      ;(zp,x)
3a89 : a003                     ldy #3
3a8b :                  teor12
                                set_ay  absEOa,0
                       >            load_flag 0
3a8b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3a8d : 48              >            pha         ;use stack to load status
3a8e : b94f02          >            lda absEOa,y    ;precharge accu
3a91 : 28              >            plp
                        
3a92 : 4142                     eor (indEO,x)
                                tst_ay  absrlo,absflo,0
3a94 : 08              >            php         ;save flags
3a95 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3a98 : f003            >        beq skip3148
                       >        trap            ;failed not equal (non zero)
3a9a : 20a543          >        jsr report_error
                       >
3a9d :                 >skip3148
                       >
3a9d : 68              >            pla         ;load status
                       >            eor_flag 0
3a9e : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3aa0 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
3aa3 : f003            >        beq skip3151
                       >        trap            ;failed not equal (non zero)
3aa5 : 20a543          >        jsr report_error
                       >
3aa8 :                 >skip3151
                       >
                        
3aa8 : ca                       dex
3aa9 : ca                       dex
3aaa : 88                       dey
3aab : 10de                     bpl teor12
3aad : a206                     ldx #6
3aaf : a003                     ldy #3
3ab1 :                  teor13
                                set_ay  absEOa,$ff
                       >            load_flag $ff
3ab1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3ab3 : 48              >            pha         ;use stack to load status
3ab4 : b94f02          >            lda absEOa,y    ;precharge accu
3ab7 : 28              >            plp
                        
3ab8 : 4142                     eor (indEO,x)
                                tst_ay  absrlo,absflo,$ff-fnz
3aba : 08              >            php         ;save flags
3abb : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3abe : f003            >        beq skip3156
                       >        trap            ;failed not equal (non zero)
3ac0 : 20a543          >        jsr report_error
                       >
3ac3 :                 >skip3156
                       >
3ac3 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3ac4 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3ac6 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
3ac9 : f003            >        beq skip3159
                       >        trap            ;failed not equal (non zero)
3acb : 20a543          >        jsr report_error
                       >
3ace :                 >skip3159
                       >
                        
3ace : ca                       dex
3acf : ca                       dex
3ad0 : 88                       dey
3ad1 : 10de                     bpl teor13
                        
3ad3 : a003                     ldy #3      ;(zp),y
3ad5 :                  teor14
                                set_ay  absEOa,0
                       >            load_flag 0
3ad5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3ad7 : 48              >            pha         ;use stack to load status
3ad8 : b94f02          >            lda absEOa,y    ;precharge accu
3adb : 28              >            plp
                        
3adc : 5142                     eor (indEO),y
                                tst_ay  absrlo,absflo,0
3ade : 08              >            php         ;save flags
3adf : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3ae2 : f003            >        beq skip3164
                       >        trap            ;failed not equal (non zero)
3ae4 : 20a543          >        jsr report_error
                       >
3ae7 :                 >skip3164
                       >
3ae7 : 68              >            pla         ;load status
                       >            eor_flag 0
3ae8 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3aea : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
3aed : f003            >        beq skip3167
                       >        trap            ;failed not equal (non zero)
3aef : 20a543          >        jsr report_error
                       >
3af2 :                 >skip3167
                       >
                        
3af2 : 88                       dey
3af3 : 10e0                     bpl teor14
3af5 : a003                     ldy #3
3af7 :                  teor15
                                set_ay  absEOa,$ff
                       >            load_flag $ff
3af7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3af9 : 48              >            pha         ;use stack to load status
3afa : b94f02          >            lda absEOa,y    ;precharge accu
3afd : 28              >            plp
                        
3afe : 5142                     eor (indEO),y
                                tst_ay  absrlo,absflo,$ff-fnz
3b00 : 08              >            php         ;save flags
3b01 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3b04 : f003            >        beq skip3172
                       >        trap            ;failed not equal (non zero)
3b06 : 20a543          >        jsr report_error
                       >
3b09 :                 >skip3172
                       >
3b09 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3b0a : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3b0c : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
3b0f : f003            >        beq skip3175
                       >        trap            ;failed not equal (non zero)
3b11 : 20a543          >        jsr report_error
                       >
3b14 :                 >skip3175
                       >
                        
3b14 : 88                       dey
3b15 : 10e0                     bpl teor15
                                next_test
3b17 : ad0002          >            lda test_case   ;previous test
3b1a : c927            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3b1c : f003            >        beq skip3178
                       >        trap            ;failed not equal (non zero)
3b1e : 20a543          >        jsr report_error
                       >
3b21 :                 >skip3178
                       >
0028 =                 >test_num = test_num + 1
3b21 : a928            >            lda #test_num   ;*** next tests' number
3b23 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; OR
3b26 : a203                     ldx #3      ;immediate - self modifying code
3b28 : b518             tora    lda zpOR,x
3b2a : 8d353b                   sta torai1
                                set_ax  absORa,0
                       >            load_flag 0
3b2d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3b2f : 48              >            pha         ;use stack to load status
3b30 : bd4702          >            lda absORa,x    ;precharge accu
3b33 : 28              >            plp
                        
3b35 =                  torai1  equ *+1     ;target for immediate operand
3b34 : 0963                     ora #99
                                tst_ax  absrlo,absflo,0
3b36 : 08              >            php         ;save flags
3b37 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
3b3a : f003            >        beq skip3183
                       >        trap            ;failed not equal (non zero)
3b3c : 20a543          >        jsr report_error
                       >
3b3f :                 >skip3183
                       >
3b3f : 68              >            pla         ;load status
                       >            eor_flag 0
3b40 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3b42 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
3b45 : f003            >        beq skip3186
                       >        trap            ;failed not equal (non zero)
3b47 : 20a543          >        jsr report_error
                       >
3b4a :                 >skip3186
                       >
                        
3b4a : ca                       dex
3b4b : 10db                     bpl tora
3b4d : a203                     ldx #3
3b4f : b518             tora1   lda zpOR,x
3b51 : 8d5c3b                   sta torai2
                                set_ax  absORa,$ff
                       >            load_flag $ff
3b54 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3b56 : 48              >            pha         ;use stack to load status
3b57 : bd4702          >            lda absORa,x    ;precharge accu
3b5a : 28              >            plp
                        
3b5c =                  torai2  equ *+1     ;target for immediate operand
3b5b : 0963                     ora #99
                                tst_ax  absrlo,absflo,$ff-fnz
3b5d : 08              >            php         ;save flags
3b5e : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
3b61 : f003            >        beq skip3191
                       >        trap            ;failed not equal (non zero)
3b63 : 20a543          >        jsr report_error
                       >
3b66 :                 >skip3191
                       >
3b66 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3b67 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3b69 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
3b6c : f003            >        beq skip3194
                       >        trap            ;failed not equal (non zero)
3b6e : 20a543          >        jsr report_error
                       >
3b71 :                 >skip3194
                       >
                        
3b71 : ca                       dex
3b72 : 10db                     bpl tora1
                        
3b74 : a203                     ldx #3      ;zp
3b76 : b518             tora2   lda zpOR,x
3b78 : 850c                     sta zpt
                                set_ax  absORa,0
                       >            load_flag 0
3b7a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3b7c : 48              >            pha         ;use stack to load status
3b7d : bd4702          >            lda absORa,x    ;precharge accu
3b80 : 28              >            plp
                        
3b81 : 050c                     ora zpt
                                tst_ax  absrlo,absflo,0
3b83 : 08              >            php         ;save flags
3b84 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
3b87 : f003            >        beq skip3199
                       >        trap            ;failed not equal (non zero)
3b89 : 20a543          >        jsr report_error
                       >
3b8c :                 >skip3199
                       >
3b8c : 68              >            pla         ;load status
                       >            eor_flag 0
3b8d : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3b8f : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
3b92 : f003            >        beq skip3202
                       >        trap            ;failed not equal (non zero)
3b94 : 20a543          >        jsr report_error
                       >
3b97 :                 >skip3202
                       >
                        
3b97 : ca                       dex
3b98 : 10dc                     bpl tora2
3b9a : a203                     ldx #3
3b9c : b518             tora3   lda zpOR,x
3b9e : 850c                     sta zpt
                                set_ax  absORa,$ff
                       >            load_flag $ff
3ba0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3ba2 : 48              >            pha         ;use stack to load status
3ba3 : bd4702          >            lda absORa,x    ;precharge accu
3ba6 : 28              >            plp
                        
3ba7 : 050c                     ora zpt
                                tst_ax  absrlo,absflo,$ff-fnz
3ba9 : 08              >            php         ;save flags
3baa : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
3bad : f003            >        beq skip3207
                       >        trap            ;failed not equal (non zero)
3baf : 20a543          >        jsr report_error
                       >
3bb2 :                 >skip3207
                       >
3bb2 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3bb3 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3bb5 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
3bb8 : f003            >        beq skip3210
                       >        trap            ;failed not equal (non zero)
3bba : 20a543          >        jsr report_error
                       >
3bbd :                 >skip3210
                       >
                        
3bbd : ca                       dex
3bbe : 10dc                     bpl tora3
                        
3bc0 : a203                     ldx #3      ;abs
3bc2 : b518             tora4   lda zpOR,x
3bc4 : 8d0302                   sta abst
                                set_ax  absORa,0
                       >            load_flag 0
3bc7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3bc9 : 48              >            pha         ;use stack to load status
3bca : bd4702          >            lda absORa,x    ;precharge accu
3bcd : 28              >            plp
                        
3bce : 0d0302                   ora abst
                                tst_ax  absrlo,absflo,0
3bd1 : 08              >            php         ;save flags
3bd2 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
3bd5 : f003            >        beq skip3215
                       >        trap            ;failed not equal (non zero)
3bd7 : 20a543          >        jsr report_error
                       >
3bda :                 >skip3215
                       >
3bda : 68              >            pla         ;load status
                       >            eor_flag 0
3bdb : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3bdd : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
3be0 : f003            >        beq skip3218
                       >        trap            ;failed not equal (non zero)
3be2 : 20a543          >        jsr report_error
                       >
3be5 :                 >skip3218
                       >
                        
3be5 : ca                       dex
3be6 : 10da                     bpl tora4
3be8 : a203                     ldx #3
3bea : b518             tora5   lda zpOR,x
3bec : 8d0302                   sta abst
                                set_ax  absORa,$ff
                       >            load_flag $ff
3bef : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3bf1 : 48              >            pha         ;use stack to load status
3bf2 : bd4702          >            lda absORa,x    ;precharge accu
3bf5 : 28              >            plp
                        
3bf6 : 0d0302                   ora abst
                                tst_ax  absrlo,absflo,$ff-fnz
3bf9 : 08              >            php         ;save flags
3bfa : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
3bfd : f003            >        beq skip3223
                       >        trap            ;failed not equal (non zero)
3bff : 20a543          >        jsr report_error
                       >
3c02 :                 >skip3223
                       >
3c02 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3c03 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3c05 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
3c08 : f003            >        beq skip3226
                       >        trap            ;failed not equal (non zero)
3c0a : 20a543          >        jsr report_error
                       >
3c0d :                 >skip3226
                       >
                        
3c0d : ca                       dex
3c0e : 1002                     bpl tora6
                        
3c10 : a203                     ldx #3      ;zp,x
3c12 :                  tora6
                                set_ax  absORa,0
                       >            load_flag 0
3c12 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3c14 : 48              >            pha         ;use stack to load status
3c15 : bd4702          >            lda absORa,x    ;precharge accu
3c18 : 28              >            plp
                        
3c19 : 1518                     ora zpOR,x
                                tst_ax  absrlo,absflo,0
3c1b : 08              >            php         ;save flags
3c1c : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
3c1f : f003            >        beq skip3231
                       >        trap            ;failed not equal (non zero)
3c21 : 20a543          >        jsr report_error
                       >
3c24 :                 >skip3231
                       >
3c24 : 68              >            pla         ;load status
                       >            eor_flag 0
3c25 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3c27 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
3c2a : f003            >        beq skip3234
                       >        trap            ;failed not equal (non zero)
3c2c : 20a543          >        jsr report_error
                       >
3c2f :                 >skip3234
                       >
                        
3c2f : ca                       dex
3c30 : 10e0                     bpl tora6
3c32 : a203                     ldx #3
3c34 :                  tora7
                                set_ax  absORa,$ff
                       >            load_flag $ff
3c34 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3c36 : 48              >            pha         ;use stack to load status
3c37 : bd4702          >            lda absORa,x    ;precharge accu
3c3a : 28              >            plp
                        
3c3b : 1518                     ora zpOR,x
                                tst_ax  absrlo,absflo,$ff-fnz
3c3d : 08              >            php         ;save flags
3c3e : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
3c41 : f003            >        beq skip3239
                       >        trap            ;failed not equal (non zero)
3c43 : 20a543          >        jsr report_error
                       >
3c46 :                 >skip3239
                       >
3c46 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3c47 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3c49 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
3c4c : f003            >        beq skip3242
                       >        trap            ;failed not equal (non zero)
3c4e : 20a543          >        jsr report_error
                       >
3c51 :                 >skip3242
                       >
                        
3c51 : ca                       dex
3c52 : 10e0                     bpl tora7
                        
3c54 : a203                     ldx #3      ;abs,x
3c56 :                  tora8
                                set_ax  absORa,0
                       >            load_flag 0
3c56 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3c58 : 48              >            pha         ;use stack to load status
3c59 : bd4702          >            lda absORa,x    ;precharge accu
3c5c : 28              >            plp
                        
3c5d : 1d3b02                   ora absOR,x
                                tst_ax  absrlo,absflo,0
3c60 : 08              >            php         ;save flags
3c61 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
3c64 : f003            >        beq skip3247
                       >        trap            ;failed not equal (non zero)
3c66 : 20a543          >        jsr report_error
                       >
3c69 :                 >skip3247
                       >
3c69 : 68              >            pla         ;load status
                       >            eor_flag 0
3c6a : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3c6c : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
3c6f : f003            >        beq skip3250
                       >        trap            ;failed not equal (non zero)
3c71 : 20a543          >        jsr report_error
                       >
3c74 :                 >skip3250
                       >
                        
3c74 : ca                       dex
3c75 : 10df                     bpl tora8
3c77 : a203                     ldx #3
3c79 :                  tora9
                                set_ax  absORa,$ff
                       >            load_flag $ff
3c79 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3c7b : 48              >            pha         ;use stack to load status
3c7c : bd4702          >            lda absORa,x    ;precharge accu
3c7f : 28              >            plp
                        
3c80 : 1d3b02                   ora absOR,x
                                tst_ax  absrlo,absflo,$ff-fnz
3c83 : 08              >            php         ;save flags
3c84 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
3c87 : f003            >        beq skip3255
                       >        trap            ;failed not equal (non zero)
3c89 : 20a543          >        jsr report_error
                       >
3c8c :                 >skip3255
                       >
3c8c : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3c8d : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3c8f : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
3c92 : f003            >        beq skip3258
                       >        trap            ;failed not equal (non zero)
3c94 : 20a543          >        jsr report_error
                       >
3c97 :                 >skip3258
                       >
                        
3c97 : ca                       dex
3c98 : 10df                     bpl tora9
                        
3c9a : a003                     ldy #3      ;abs,y
3c9c :                  tora10
                                set_ay  absORa,0
                       >            load_flag 0
3c9c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3c9e : 48              >            pha         ;use stack to load status
3c9f : b94702          >            lda absORa,y    ;precharge accu
3ca2 : 28              >            plp
                        
3ca3 : 193b02                   ora absOR,y
                                tst_ay  absrlo,absflo,0
3ca6 : 08              >            php         ;save flags
3ca7 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3caa : f003            >        beq skip3263
                       >        trap            ;failed not equal (non zero)
3cac : 20a543          >        jsr report_error
                       >
3caf :                 >skip3263
                       >
3caf : 68              >            pla         ;load status
                       >            eor_flag 0
3cb0 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3cb2 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
3cb5 : f003            >        beq skip3266
                       >        trap            ;failed not equal (non zero)
3cb7 : 20a543          >        jsr report_error
                       >
3cba :                 >skip3266
                       >
                        
3cba : 88                       dey
3cbb : 10df                     bpl tora10
3cbd : a003                     ldy #3
3cbf :                  tora11
                                set_ay  absORa,$ff
                       >            load_flag $ff
3cbf : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3cc1 : 48              >            pha         ;use stack to load status
3cc2 : b94702          >            lda absORa,y    ;precharge accu
3cc5 : 28              >            plp
                        
3cc6 : 193b02                   ora absOR,y
                                tst_ay  absrlo,absflo,$ff-fnz
3cc9 : 08              >            php         ;save flags
3cca : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3ccd : f003            >        beq skip3271
                       >        trap            ;failed not equal (non zero)
3ccf : 20a543          >        jsr report_error
                       >
3cd2 :                 >skip3271
                       >
3cd2 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3cd3 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3cd5 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
3cd8 : f003            >        beq skip3274
                       >        trap            ;failed not equal (non zero)
3cda : 20a543          >        jsr report_error
                       >
3cdd :                 >skip3274
                       >
                        
3cdd : 88                       dey
3cde : 10df                     bpl tora11
                        
3ce0 : a206                     ldx #6      ;(zp,x)
3ce2 : a003                     ldy #3
3ce4 :                  tora12
                                set_ay  absORa,0
                       >            load_flag 0
3ce4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3ce6 : 48              >            pha         ;use stack to load status
3ce7 : b94702          >            lda absORa,y    ;precharge accu
3cea : 28              >            plp
                        
3ceb : 014a                     ora (indOR,x)
                                tst_ay  absrlo,absflo,0
3ced : 08              >            php         ;save flags
3cee : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3cf1 : f003            >        beq skip3279
                       >        trap            ;failed not equal (non zero)
3cf3 : 20a543          >        jsr report_error
                       >
3cf6 :                 >skip3279
                       >
3cf6 : 68              >            pla         ;load status
                       >            eor_flag 0
3cf7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3cf9 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
3cfc : f003            >        beq skip3282
                       >        trap            ;failed not equal (non zero)
3cfe : 20a543          >        jsr report_error
                       >
3d01 :                 >skip3282
                       >
                        
3d01 : ca                       dex
3d02 : ca                       dex
3d03 : 88                       dey
3d04 : 10de                     bpl tora12
3d06 : a206                     ldx #6
3d08 : a003                     ldy #3
3d0a :                  tora13
                                set_ay  absORa,$ff
                       >            load_flag $ff
3d0a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3d0c : 48              >            pha         ;use stack to load status
3d0d : b94702          >            lda absORa,y    ;precharge accu
3d10 : 28              >            plp
                        
3d11 : 014a                     ora (indOR,x)
                                tst_ay  absrlo,absflo,$ff-fnz
3d13 : 08              >            php         ;save flags
3d14 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3d17 : f003            >        beq skip3287
                       >        trap            ;failed not equal (non zero)
3d19 : 20a543          >        jsr report_error
                       >
3d1c :                 >skip3287
                       >
3d1c : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3d1d : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3d1f : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
3d22 : f003            >        beq skip3290
                       >        trap            ;failed not equal (non zero)
3d24 : 20a543          >        jsr report_error
                       >
3d27 :                 >skip3290
                       >
                        
3d27 : ca                       dex
3d28 : ca                       dex
3d29 : 88                       dey
3d2a : 10de                     bpl tora13
                        
3d2c : a003                     ldy #3      ;(zp),y
3d2e :                  tora14
                                set_ay  absORa,0
                       >            load_flag 0
3d2e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3d30 : 48              >            pha         ;use stack to load status
3d31 : b94702          >            lda absORa,y    ;precharge accu
3d34 : 28              >            plp
                        
3d35 : 114a                     ora (indOR),y
                                tst_ay  absrlo,absflo,0
3d37 : 08              >            php         ;save flags
3d38 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3d3b : f003            >        beq skip3295
                       >        trap            ;failed not equal (non zero)
3d3d : 20a543          >        jsr report_error
                       >
3d40 :                 >skip3295
                       >
3d40 : 68              >            pla         ;load status
                       >            eor_flag 0
3d41 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3d43 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
3d46 : f003            >        beq skip3298
                       >        trap            ;failed not equal (non zero)
3d48 : 20a543          >        jsr report_error
                       >
3d4b :                 >skip3298
                       >
                        
3d4b : 88                       dey
3d4c : 10e0                     bpl tora14
3d4e : a003                     ldy #3
3d50 :                  tora15
                                set_ay  absORa,$ff
                       >            load_flag $ff
3d50 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3d52 : 48              >            pha         ;use stack to load status
3d53 : b94702          >            lda absORa,y    ;precharge accu
3d56 : 28              >            plp
                        
3d57 : 114a                     ora (indOR),y
                                tst_ay  absrlo,absflo,$ff-fnz
3d59 : 08              >            php         ;save flags
3d5a : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3d5d : f003            >        beq skip3303
                       >        trap            ;failed not equal (non zero)
3d5f : 20a543          >        jsr report_error
                       >
3d62 :                 >skip3303
                       >
3d62 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3d63 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3d65 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
3d68 : f003            >        beq skip3306
                       >        trap            ;failed not equal (non zero)
3d6a : 20a543          >        jsr report_error
                       >
3d6d :                 >skip3306
                       >
                        
3d6d : 88                       dey
3d6e : 10e0                     bpl tora15
                            if I_flag = 3
3d70 : 58                       cli
                            endif                
                                next_test
3d71 : ad0002          >            lda test_case   ;previous test
3d74 : c928            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3d76 : f003            >        beq skip3309
                       >        trap            ;failed not equal (non zero)
3d78 : 20a543          >        jsr report_error
                       >
3d7b :                 >skip3309
                       >
0029 =                 >test_num = test_num + 1
3d7b : a929            >            lda #test_num   ;*** next tests' number
3d7d : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; full binary add/subtract test
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
3d80 : d8                       cld
3d81 : a20e                     ldx #ad2        ;for indexed test
3d83 : a0ff                     ldy #$ff        ;max range
3d85 : a900                     lda #0          ;start with adding zeroes & no carry
3d87 : 850c                     sta adfc        ;carry in - for diag
3d89 : 850d                     sta ad1         ;operand 1 - accumulator
3d8b : 850e                     sta ad2         ;operand 2 - memory or immediate
3d8d : 8d0302                   sta ada2        ;non zp
3d90 : 850f                     sta adrl        ;expected result bits 0-7
3d92 : 8510                     sta adrh        ;expected result bit 8 (carry out)
3d94 : a9ff                     lda #$ff        ;complemented operand 2 for subtract
3d96 : 8512                     sta sb2
3d98 : 8d0402                   sta sba2        ;non zp
3d9b : a902                     lda #2          ;expected Z-flag
3d9d : 8511                     sta adrf
3d9f : 18               tadd    clc             ;test with carry clear
3da0 : 209340                   jsr chkadd
3da3 : e60c                     inc adfc        ;now with carry
3da5 : e60f                     inc adrl        ;result +1
3da7 : 08                       php             ;save N & Z from low result
3da8 : 08                       php
3da9 : 68                       pla             ;accu holds expected flags
3daa : 2982                     and #$82        ;mask N & Z
3dac : 28                       plp
3dad : d002                     bne tadd1
3daf : e610                     inc adrh        ;result bit 8 - carry
3db1 : 0510             tadd1   ora adrh        ;merge C to expected flags
3db3 : 8511                     sta adrf        ;save expected flags except overflow
3db5 : 38                       sec             ;test with carry set
3db6 : 209340                   jsr chkadd
3db9 : c60c                     dec adfc        ;same for operand +1 but no carry
3dbb : e60d                     inc ad1
3dbd : d0e0                     bne tadd        ;iterate op1
3dbf : a900                     lda #0          ;preset result to op2 when op1 = 0
3dc1 : 8510                     sta adrh
3dc3 : ee0302                   inc ada2
3dc6 : e60e                     inc ad2
3dc8 : 08                       php             ;save NZ as operand 2 becomes the new result
3dc9 : 68                       pla
3dca : 2982                     and #$82        ;mask N00000Z0
3dcc : 8511                     sta adrf        ;no need to check carry as we are adding to 0
3dce : c612                     dec sb2         ;complement subtract operand 2
3dd0 : ce0402                   dec sba2
3dd3 : a50e                     lda ad2         
3dd5 : 850f                     sta adrl
3dd7 : d0c6                     bne tadd        ;iterate op2
                                next_test
3dd9 : ad0002          >            lda test_case   ;previous test
3ddc : c929            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3dde : f003            >        beq skip3312
                       >        trap            ;failed not equal (non zero)
3de0 : 20a543          >        jsr report_error
                       >
3de3 :                 >skip3312
                       >
002a =                 >test_num = test_num + 1
3de3 : a92a            >            lda #test_num   ;*** next tests' number
3de5 : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, N V Z flags are ignored
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
3de8 : f8                       sed 
3de9 : a20e                     ldx #ad2        ;for indexed test
3deb : a0ff                     ldy #$ff        ;max range
3ded : a999                     lda #$99        ;start with adding 99 to 99 with carry
3def : 850d                     sta ad1         ;operand 1 - accumulator
3df1 : 850e                     sta ad2         ;operand 2 - memory or immediate
3df3 : 8d0302                   sta ada2        ;non zp
3df6 : 850f                     sta adrl        ;expected result bits 0-7
3df8 : a901                     lda #1          ;set carry in & out
3dfa : 850c                     sta adfc        ;carry in - for diag
3dfc : 8510                     sta adrh        ;expected result bit 8 (carry out)
3dfe : a900                     lda #0          ;complemented operand 2 for subtract
3e00 : 8512                     sta sb2
3e02 : 8d0402                   sta sba2        ;non zp
3e05 : 38               tdad    sec             ;test with carry set
3e06 : 20023f                   jsr chkdad
3e09 : c60c                     dec adfc        ;now with carry clear
3e0b : a50f                     lda adrl        ;decimal adjust result
3e0d : d008                     bne tdad1       ;skip clear carry & preset result 99 (9A-1)
3e0f : c610                     dec adrh
3e11 : a999                     lda #$99
3e13 : 850f                     sta adrl
3e15 : d012                     bne tdad3
3e17 : 290f             tdad1   and #$f         ;lower nibble mask
3e19 : d00c                     bne tdad2       ;no decimal adjust needed
3e1b : c60f                     dec adrl        ;decimal adjust (?0-6)
3e1d : c60f                     dec adrl
3e1f : c60f                     dec adrl
3e21 : c60f                     dec adrl
3e23 : c60f                     dec adrl
3e25 : c60f                     dec adrl
3e27 : c60f             tdad2   dec adrl        ;result -1
3e29 : 18               tdad3   clc             ;test with carry clear
3e2a : 20023f                   jsr chkdad
3e2d : e60c                     inc adfc        ;same for operand -1 but with carry
3e2f : a50d                     lda ad1         ;decimal adjust operand 1
3e31 : f015                     beq tdad5       ;iterate operand 2
3e33 : 290f                     and #$f         ;lower nibble mask
3e35 : d00c                     bne tdad4       ;skip decimal adjust
3e37 : c60d                     dec ad1         ;decimal adjust (?0-6)
3e39 : c60d                     dec ad1
3e3b : c60d                     dec ad1
3e3d : c60d                     dec ad1
3e3f : c60d                     dec ad1
3e41 : c60d                     dec ad1
3e43 : c60d             tdad4   dec ad1         ;operand 1 -1
3e45 : 4c053e                   jmp tdad        ;iterate op1
                        
3e48 : a999             tdad5   lda #$99        ;precharge op1 max
3e4a : 850d                     sta ad1
3e4c : a50e                     lda ad2         ;decimal adjust operand 2
3e4e : f030                     beq tdad7       ;end of iteration
3e50 : 290f                     and #$f         ;lower nibble mask
3e52 : d018                     bne tdad6       ;skip decimal adjust
3e54 : c60e                     dec ad2         ;decimal adjust (?0-6)
3e56 : c60e                     dec ad2
3e58 : c60e                     dec ad2
3e5a : c60e                     dec ad2
3e5c : c60e                     dec ad2
3e5e : c60e                     dec ad2
3e60 : e612                     inc sb2         ;complemented decimal adjust for subtract (?9+6)
3e62 : e612                     inc sb2
3e64 : e612                     inc sb2
3e66 : e612                     inc sb2
3e68 : e612                     inc sb2
3e6a : e612                     inc sb2
3e6c : c60e             tdad6   dec ad2         ;operand 2 -1
3e6e : e612                     inc sb2         ;complemented operand for subtract
3e70 : a512                     lda sb2
3e72 : 8d0402                   sta sba2        ;copy as non zp operand
3e75 : a50e                     lda ad2
3e77 : 8d0302                   sta ada2        ;copy as non zp operand
3e7a : 850f                     sta adrl        ;new result since op1+carry=00+carry +op2=op2
3e7c : e610                     inc adrh        ;result carry
3e7e : d085                     bne tdad        ;iterate op2
3e80 :                  tdad7
                                next_test
3e80 : ad0002          >            lda test_case   ;previous test
3e83 : c92a            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3e85 : f003            >        beq skip3315
                       >        trap            ;failed not equal (non zero)
3e87 : 20a543          >        jsr report_error
                       >
3e8a :                 >skip3315
                       >
002b =                 >test_num = test_num + 1
3e8a : a92b            >            lda #test_num   ;*** next tests' number
3e8c : 8d0002          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; decimal/binary switch test
                        ; tests CLD, SED, PLP, RTI to properly switch between decimal & binary opcode
                        ;   tables
3e8f : 18                       clc
3e90 : d8                       cld
3e91 : 08                       php
3e92 : a955                     lda #$55
3e94 : 6955                     adc #$55
3e96 : c9aa                     cmp #$aa
                                trap_ne         ;expected binary result after cld
3e98 : f003            >        beq skip3317
                       >        trap            ;failed not equal (non zero)
3e9a : 20a543          >        jsr report_error
                       >
3e9d :                 >skip3317
                        
3e9d : 18                       clc
3e9e : f8                       sed
3e9f : 08                       php
3ea0 : a955                     lda #$55
3ea2 : 6955                     adc #$55
3ea4 : c910                     cmp #$10
                                trap_ne         ;expected decimal result after sed
3ea6 : f003            >        beq skip3319
                       >        trap            ;failed not equal (non zero)
3ea8 : 20a543          >        jsr report_error
                       >
3eab :                 >skip3319
                        
3eab : d8                       cld
3eac : 28                       plp
3ead : a955                     lda #$55
3eaf : 6955                     adc #$55
3eb1 : c910                     cmp #$10
                                trap_ne         ;expected decimal result after plp D=1
3eb3 : f003            >        beq skip3321
                       >        trap            ;failed not equal (non zero)
3eb5 : 20a543          >        jsr report_error
                       >
3eb8 :                 >skip3321
                        
3eb8 : 28                       plp
3eb9 : a955                     lda #$55
3ebb : 6955                     adc #$55
3ebd : c9aa                     cmp #$aa
                                trap_ne         ;expected binary result after plp D=0
3ebf : f003            >        beq skip3323
                       >        trap            ;failed not equal (non zero)
3ec1 : 20a543          >        jsr report_error
                       >
3ec4 :                 >skip3323
                        
3ec4 : 18                       clc
3ec5 : a93e                     lda #hi bin_rti_ret ;emulated interrupt for rti
3ec7 : 48                       pha
3ec8 : a9e2                     lda #lo bin_rti_ret
3eca : 48                       pha
3ecb : 08                       php
3ecc : f8                       sed
3ecd : a93e                     lda #hi dec_rti_ret ;emulated interrupt for rti
3ecf : 48                       pha
3ed0 : a9d6                     lda #lo dec_rti_ret
3ed2 : 48                       pha
3ed3 : 08                       php
3ed4 : d8                       cld
3ed5 : 40                       rti
3ed6 :                  dec_rti_ret
3ed6 : a955                     lda #$55
3ed8 : 6955                     adc #$55
3eda : c910                     cmp #$10
                                trap_ne         ;expected decimal result after rti D=1
3edc : f003            >        beq skip3325
                       >        trap            ;failed not equal (non zero)
3ede : 20a543          >        jsr report_error
                       >
3ee1 :                 >skip3325
                        
3ee1 : 40                       rti
3ee2 :                  bin_rti_ret        
3ee2 : a955                     lda #$55
3ee4 : 6955                     adc #$55
3ee6 : c9aa                     cmp #$aa
                                trap_ne         ;expected binary result after rti D=0
3ee8 : f003            >        beq skip3327
                       >        trap            ;failed not equal (non zero)
3eea : 20a543          >        jsr report_error
                       >
3eed :                 >skip3327
                        
                        
3eed : ad0002                   lda test_case
3ef0 : c92b                     cmp #test_num
                                trap_ne         ;previous test is out of sequence
3ef2 : f003            >        beq skip3329
                       >        trap            ;failed not equal (non zero)
3ef4 : 20a543          >        jsr report_error
                       >
3ef7 :                 >skip3329
                        
3ef7 : a9f0                     lda #$f0        ;mark opcode testing complete
3ef9 : 8d0002                   sta test_case
                                
                        ; final RAM integrity test
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                                check_ram
                       >            ;RAM check disabled - RAM size not set
                        
                        ; *** DEBUG INFO ***
                        ; to debug checksum errors uncomment check_ram in the next_test macro to 
                        ; narrow down the responsible opcode.
                        ; may give false errors when monitor, OS or other background activity is
                        ; allowed during previous tests.
                        
                        
                        ; S U C C E S S ************************************************       
                        ; -------------       
                                success         ;if you get here everything went well
3efc : 202544          >        jsr report_success
                        
                        ; -------------       
                        ; S U C C E S S ************************************************ 
3eff : 4c0004                   jmp start       ;run again      
                        
                        ; core subroutine of the decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, N V Z flags are ignored
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
3f02 :                  chkdad
                        ; decimal ADC / SBC zp
3f02 : 08                       php             ;save carry for subtract
3f03 : a50d                     lda ad1
3f05 : 650e                     adc ad2         ;perform add
3f07 : 08                       php          
3f08 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
3f0a : f003            >        beq skip3333
                       >        trap            ;failed not equal (non zero)
3f0c : 20a543          >        jsr report_error
                       >
3f0f :                 >skip3333
                        
3f0f : 68                       pla             ;check flags
3f10 : 2901                     and #1          ;mask carry
3f12 : c510                     cmp adrh
                                trap_ne         ;bad carry
3f14 : f003            >        beq skip3335
                       >        trap            ;failed not equal (non zero)
3f16 : 20a543          >        jsr report_error
                       >
3f19 :                 >skip3335
                        
3f19 : 28                       plp
3f1a : 08                       php             ;save carry for next add
3f1b : a50d                     lda ad1
3f1d : e512                     sbc sb2         ;perform subtract
3f1f : 08                       php          
3f20 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
3f22 : f003            >        beq skip3337
                       >        trap            ;failed not equal (non zero)
3f24 : 20a543          >        jsr report_error
                       >
3f27 :                 >skip3337
                        
3f27 : 68                       pla             ;check flags
3f28 : 2901                     and #1          ;mask carry
3f2a : c510                     cmp adrh
                                trap_ne         ;bad flags
3f2c : f003            >        beq skip3339
                       >        trap            ;failed not equal (non zero)
3f2e : 20a543          >        jsr report_error
                       >
3f31 :                 >skip3339
                        
3f31 : 28                       plp
                        ; decimal ADC / SBC abs
3f32 : 08                       php             ;save carry for subtract
3f33 : a50d                     lda ad1
3f35 : 6d0302                   adc ada2        ;perform add
3f38 : 08                       php          
3f39 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
3f3b : f003            >        beq skip3341
                       >        trap            ;failed not equal (non zero)
3f3d : 20a543          >        jsr report_error
                       >
3f40 :                 >skip3341
                        
3f40 : 68                       pla             ;check flags
3f41 : 2901                     and #1          ;mask carry
3f43 : c510                     cmp adrh
                                trap_ne         ;bad carry
3f45 : f003            >        beq skip3343
                       >        trap            ;failed not equal (non zero)
3f47 : 20a543          >        jsr report_error
                       >
3f4a :                 >skip3343
                        
3f4a : 28                       plp
3f4b : 08                       php             ;save carry for next add
3f4c : a50d                     lda ad1
3f4e : ed0402                   sbc sba2        ;perform subtract
3f51 : 08                       php          
3f52 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
3f54 : f003            >        beq skip3345
                       >        trap            ;failed not equal (non zero)
3f56 : 20a543          >        jsr report_error
                       >
3f59 :                 >skip3345
                        
3f59 : 68                       pla             ;check flags
3f5a : 2901                     and #1          ;mask carry
3f5c : c510                     cmp adrh
                                trap_ne         ;bad carry
3f5e : f003            >        beq skip3347
                       >        trap            ;failed not equal (non zero)
3f60 : 20a543          >        jsr report_error
                       >
3f63 :                 >skip3347
                        
3f63 : 28                       plp
                        ; decimal ADC / SBC #
3f64 : 08                       php             ;save carry for subtract
3f65 : a50e                     lda ad2
3f67 : 8d6d3f                   sta chkdadi     ;self modify immediate
3f6a : a50d                     lda ad1
3f6d =                  chkdadi = * + 1         ;operand of the immediate ADC
3f6c : 6900                     adc #0          ;perform add
3f6e : 08                       php          
3f6f : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
3f71 : f003            >        beq skip3349
                       >        trap            ;failed not equal (non zero)
3f73 : 20a543          >        jsr report_error
                       >
3f76 :                 >skip3349
                        
3f76 : 68                       pla             ;check flags
3f77 : 2901                     and #1          ;mask carry
3f79 : c510                     cmp adrh
                                trap_ne         ;bad carry
3f7b : f003            >        beq skip3351
                       >        trap            ;failed not equal (non zero)
3f7d : 20a543          >        jsr report_error
                       >
3f80 :                 >skip3351
                        
3f80 : 28                       plp
3f81 : 08                       php             ;save carry for next add
3f82 : a512                     lda sb2
3f84 : 8d8a3f                   sta chkdsbi     ;self modify immediate
3f87 : a50d                     lda ad1
3f8a =                  chkdsbi = * + 1         ;operand of the immediate SBC
3f89 : e900                     sbc #0          ;perform subtract
3f8b : 08                       php          
3f8c : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
3f8e : f003            >        beq skip3353
                       >        trap            ;failed not equal (non zero)
3f90 : 20a543          >        jsr report_error
                       >
3f93 :                 >skip3353
                        
3f93 : 68                       pla             ;check flags
3f94 : 2901                     and #1          ;mask carry
3f96 : c510                     cmp adrh
                                trap_ne         ;bad carry
3f98 : f003            >        beq skip3355
                       >        trap            ;failed not equal (non zero)
3f9a : 20a543          >        jsr report_error
                       >
3f9d :                 >skip3355
                        
3f9d : 28                       plp
                        ; decimal ADC / SBC zp,x
3f9e : 08                       php             ;save carry for subtract
3f9f : a50d                     lda ad1
3fa1 : 7500                     adc 0,x         ;perform add
3fa3 : 08                       php          
3fa4 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
3fa6 : f003            >        beq skip3357
                       >        trap            ;failed not equal (non zero)
3fa8 : 20a543          >        jsr report_error
                       >
3fab :                 >skip3357
                        
3fab : 68                       pla             ;check flags
3fac : 2901                     and #1          ;mask carry
3fae : c510                     cmp adrh
                                trap_ne         ;bad carry
3fb0 : f003            >        beq skip3359
                       >        trap            ;failed not equal (non zero)
3fb2 : 20a543          >        jsr report_error
                       >
3fb5 :                 >skip3359
                        
3fb5 : 28                       plp
3fb6 : 08                       php             ;save carry for next add
3fb7 : a50d                     lda ad1
3fb9 : f504                     sbc sb2-ad2,x   ;perform subtract
3fbb : 08                       php          
3fbc : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
3fbe : f003            >        beq skip3361
                       >        trap            ;failed not equal (non zero)
3fc0 : 20a543          >        jsr report_error
                       >
3fc3 :                 >skip3361
                        
3fc3 : 68                       pla             ;check flags
3fc4 : 2901                     and #1          ;mask carry
3fc6 : c510                     cmp adrh
                                trap_ne         ;bad carry
3fc8 : f003            >        beq skip3363
                       >        trap            ;failed not equal (non zero)
3fca : 20a543          >        jsr report_error
                       >
3fcd :                 >skip3363
                        
3fcd : 28                       plp
                        ; decimal ADC / SBC abs,x
3fce : 08                       php             ;save carry for subtract
3fcf : a50d                     lda ad1
3fd1 : 7df501                   adc ada2-ad2,x  ;perform add
3fd4 : 08                       php          
3fd5 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
3fd7 : f003            >        beq skip3365
                       >        trap            ;failed not equal (non zero)
3fd9 : 20a543          >        jsr report_error
                       >
3fdc :                 >skip3365
                        
3fdc : 68                       pla             ;check flags
3fdd : 2901                     and #1          ;mask carry
3fdf : c510                     cmp adrh
                                trap_ne         ;bad carry
3fe1 : f003            >        beq skip3367
                       >        trap            ;failed not equal (non zero)
3fe3 : 20a543          >        jsr report_error
                       >
3fe6 :                 >skip3367
                        
3fe6 : 28                       plp
3fe7 : 08                       php             ;save carry for next add
3fe8 : a50d                     lda ad1
3fea : fdf601                   sbc sba2-ad2,x  ;perform subtract
3fed : 08                       php          
3fee : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
3ff0 : f003            >        beq skip3369
                       >        trap            ;failed not equal (non zero)
3ff2 : 20a543          >        jsr report_error
                       >
3ff5 :                 >skip3369
                        
3ff5 : 68                       pla             ;check flags
3ff6 : 2901                     and #1          ;mask carry
3ff8 : c510                     cmp adrh
                                trap_ne         ;bad carry
3ffa : f003            >        beq skip3371
                       >        trap            ;failed not equal (non zero)
3ffc : 20a543          >        jsr report_error
                       >
3fff :                 >skip3371
                        
3fff : 28                       plp
                        ; decimal ADC / SBC abs,y
4000 : 08                       php             ;save carry for subtract
4001 : a50d                     lda ad1
4003 : 790401                   adc ada2-$ff,y  ;perform add
4006 : 08                       php          
4007 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
4009 : f003            >        beq skip3373
                       >        trap            ;failed not equal (non zero)
400b : 20a543          >        jsr report_error
                       >
400e :                 >skip3373
                        
400e : 68                       pla             ;check flags
400f : 2901                     and #1          ;mask carry
4011 : c510                     cmp adrh
                                trap_ne         ;bad carry
4013 : f003            >        beq skip3375
                       >        trap            ;failed not equal (non zero)
4015 : 20a543          >        jsr report_error
                       >
4018 :                 >skip3375
                        
4018 : 28                       plp
4019 : 08                       php             ;save carry for next add
401a : a50d                     lda ad1
401c : f90501                   sbc sba2-$ff,y  ;perform subtract
401f : 08                       php          
4020 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
4022 : f003            >        beq skip3377
                       >        trap            ;failed not equal (non zero)
4024 : 20a543          >        jsr report_error
                       >
4027 :                 >skip3377
                        
4027 : 68                       pla             ;check flags
4028 : 2901                     and #1          ;mask carry
402a : c510                     cmp adrh
                                trap_ne         ;bad carry
402c : f003            >        beq skip3379
                       >        trap            ;failed not equal (non zero)
402e : 20a543          >        jsr report_error
                       >
4031 :                 >skip3379
                        
4031 : 28                       plp
                        ; decimal ADC / SBC (zp,x)
4032 : 08                       php             ;save carry for subtract
4033 : a50d                     lda ad1
4035 : 6144                     adc (lo adi2-ad2,x) ;perform add
4037 : 08                       php          
4038 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
403a : f003            >        beq skip3381
                       >        trap            ;failed not equal (non zero)
403c : 20a543          >        jsr report_error
                       >
403f :                 >skip3381
                        
403f : 68                       pla             ;check flags
4040 : 2901                     and #1          ;mask carry
4042 : c510                     cmp adrh
                                trap_ne         ;bad carry
4044 : f003            >        beq skip3383
                       >        trap            ;failed not equal (non zero)
4046 : 20a543          >        jsr report_error
                       >
4049 :                 >skip3383
                        
4049 : 28                       plp
404a : 08                       php             ;save carry for next add
404b : a50d                     lda ad1
404d : e146                     sbc (lo sbi2-ad2,x) ;perform subtract
404f : 08                       php          
4050 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
4052 : f003            >        beq skip3385
                       >        trap            ;failed not equal (non zero)
4054 : 20a543          >        jsr report_error
                       >
4057 :                 >skip3385
                        
4057 : 68                       pla             ;check flags
4058 : 2901                     and #1          ;mask carry
405a : c510                     cmp adrh
                                trap_ne         ;bad carry
405c : f003            >        beq skip3387
                       >        trap            ;failed not equal (non zero)
405e : 20a543          >        jsr report_error
                       >
4061 :                 >skip3387
                        
4061 : 28                       plp
                        ; decimal ADC / SBC (abs),y
4062 : 08                       php             ;save carry for subtract
4063 : a50d                     lda ad1
4065 : 7156                     adc (adiy2),y   ;perform add
4067 : 08                       php          
4068 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
406a : f003            >        beq skip3389
                       >        trap            ;failed not equal (non zero)
406c : 20a543          >        jsr report_error
                       >
406f :                 >skip3389
                        
406f : 68                       pla             ;check flags
4070 : 2901                     and #1          ;mask carry
4072 : c510                     cmp adrh
                                trap_ne         ;bad carry
4074 : f003            >        beq skip3391
                       >        trap            ;failed not equal (non zero)
4076 : 20a543          >        jsr report_error
                       >
4079 :                 >skip3391
                        
4079 : 28                       plp
407a : 08                       php             ;save carry for next add
407b : a50d                     lda ad1
407d : f158                     sbc (sbiy2),y   ;perform subtract
407f : 08                       php          
4080 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
4082 : f003            >        beq skip3393
                       >        trap            ;failed not equal (non zero)
4084 : 20a543          >        jsr report_error
                       >
4087 :                 >skip3393
                        
4087 : 68                       pla             ;check flags
4088 : 2901                     and #1          ;mask carry
408a : c510                     cmp adrh
                                trap_ne         ;bad carry
408c : f003            >        beq skip3395
                       >        trap            ;failed not equal (non zero)
408e : 20a543          >        jsr report_error
                       >
4091 :                 >skip3395
                        
4091 : 28                       plp
4092 : 60                       rts
                        
                        ; core subroutine of the full binary add/subtract test
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
4093 : a511             chkadd  lda adrf        ;add V-flag if overflow
4095 : 2983                     and #$83        ;keep N-----ZC / clear V
4097 : 48                       pha
4098 : a50d                     lda ad1         ;test sign unequal between operands
409a : 450e                     eor ad2
409c : 300a                     bmi ckad1       ;no overflow possible - operands have different sign
409e : a50d                     lda ad1         ;test sign equal between operands and result
40a0 : 450f                     eor adrl
40a2 : 1004                     bpl ckad1       ;no overflow occured - operand and result have same sign
40a4 : 68                       pla
40a5 : 0940                     ora #$40        ;set V
40a7 : 48                       pha
40a8 : 68               ckad1   pla
40a9 : 8511                     sta adrf        ;save expected flags
                        ; binary ADC / SBC zp
40ab : 08                       php             ;save carry for subtract
40ac : a50d                     lda ad1
40ae : 650e                     adc ad2         ;perform add
40b0 : 08                       php          
40b1 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
40b3 : f003            >        beq skip3397
                       >        trap            ;failed not equal (non zero)
40b5 : 20a543          >        jsr report_error
                       >
40b8 :                 >skip3397
                        
40b8 : 68                       pla             ;check flags
40b9 : 29c3                     and #$c3        ;mask NV----ZC
40bb : c511                     cmp adrf
                                trap_ne         ;bad flags
40bd : f003            >        beq skip3399
                       >        trap            ;failed not equal (non zero)
40bf : 20a543          >        jsr report_error
                       >
40c2 :                 >skip3399
                        
40c2 : 28                       plp
40c3 : 08                       php             ;save carry for next add
40c4 : a50d                     lda ad1
40c6 : e512                     sbc sb2         ;perform subtract
40c8 : 08                       php          
40c9 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
40cb : f003            >        beq skip3401
                       >        trap            ;failed not equal (non zero)
40cd : 20a543          >        jsr report_error
                       >
40d0 :                 >skip3401
                        
40d0 : 68                       pla             ;check flags
40d1 : 29c3                     and #$c3        ;mask NV----ZC
40d3 : c511                     cmp adrf
                                trap_ne         ;bad flags
40d5 : f003            >        beq skip3403
                       >        trap            ;failed not equal (non zero)
40d7 : 20a543          >        jsr report_error
                       >
40da :                 >skip3403
                        
40da : 28                       plp
                        ; binary ADC / SBC abs
40db : 08                       php             ;save carry for subtract
40dc : a50d                     lda ad1
40de : 6d0302                   adc ada2        ;perform add
40e1 : 08                       php          
40e2 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
40e4 : f003            >        beq skip3405
                       >        trap            ;failed not equal (non zero)
40e6 : 20a543          >        jsr report_error
                       >
40e9 :                 >skip3405
                        
40e9 : 68                       pla             ;check flags
40ea : 29c3                     and #$c3        ;mask NV----ZC
40ec : c511                     cmp adrf
                                trap_ne         ;bad flags
40ee : f003            >        beq skip3407
                       >        trap            ;failed not equal (non zero)
40f0 : 20a543          >        jsr report_error
                       >
40f3 :                 >skip3407
                        
40f3 : 28                       plp
40f4 : 08                       php             ;save carry for next add
40f5 : a50d                     lda ad1
40f7 : ed0402                   sbc sba2        ;perform subtract
40fa : 08                       php          
40fb : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
40fd : f003            >        beq skip3409
                       >        trap            ;failed not equal (non zero)
40ff : 20a543          >        jsr report_error
                       >
4102 :                 >skip3409
                        
4102 : 68                       pla             ;check flags
4103 : 29c3                     and #$c3        ;mask NV----ZC
4105 : c511                     cmp adrf
                                trap_ne         ;bad flags
4107 : f003            >        beq skip3411
                       >        trap            ;failed not equal (non zero)
4109 : 20a543          >        jsr report_error
                       >
410c :                 >skip3411
                        
410c : 28                       plp
                        ; binary ADC / SBC #
410d : 08                       php             ;save carry for subtract
410e : a50e                     lda ad2
4110 : 8d1641                   sta chkadi      ;self modify immediate
4113 : a50d                     lda ad1
4116 =                  chkadi  = * + 1         ;operand of the immediate ADC
4115 : 6900                     adc #0          ;perform add
4117 : 08                       php          
4118 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
411a : f003            >        beq skip3413
                       >        trap            ;failed not equal (non zero)
411c : 20a543          >        jsr report_error
                       >
411f :                 >skip3413
                        
411f : 68                       pla             ;check flags
4120 : 29c3                     and #$c3        ;mask NV----ZC
4122 : c511                     cmp adrf
                                trap_ne         ;bad flags
4124 : f003            >        beq skip3415
                       >        trap            ;failed not equal (non zero)
4126 : 20a543          >        jsr report_error
                       >
4129 :                 >skip3415
                        
4129 : 28                       plp
412a : 08                       php             ;save carry for next add
412b : a512                     lda sb2
412d : 8d3341                   sta chksbi      ;self modify immediate
4130 : a50d                     lda ad1
4133 =                  chksbi  = * + 1         ;operand of the immediate SBC
4132 : e900                     sbc #0          ;perform subtract
4134 : 08                       php          
4135 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
4137 : f003            >        beq skip3417
                       >        trap            ;failed not equal (non zero)
4139 : 20a543          >        jsr report_error
                       >
413c :                 >skip3417
                        
413c : 68                       pla             ;check flags
413d : 29c3                     and #$c3        ;mask NV----ZC
413f : c511                     cmp adrf
                                trap_ne         ;bad flags
4141 : f003            >        beq skip3419
                       >        trap            ;failed not equal (non zero)
4143 : 20a543          >        jsr report_error
                       >
4146 :                 >skip3419
                        
4146 : 28                       plp
                        ; binary ADC / SBC zp,x
4147 : 08                       php             ;save carry for subtract
4148 : a50d                     lda ad1
414a : 7500                     adc 0,x         ;perform add
414c : 08                       php          
414d : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
414f : f003            >        beq skip3421
                       >        trap            ;failed not equal (non zero)
4151 : 20a543          >        jsr report_error
                       >
4154 :                 >skip3421
                        
4154 : 68                       pla             ;check flags
4155 : 29c3                     and #$c3        ;mask NV----ZC
4157 : c511                     cmp adrf
                                trap_ne         ;bad flags
4159 : f003            >        beq skip3423
                       >        trap            ;failed not equal (non zero)
415b : 20a543          >        jsr report_error
                       >
415e :                 >skip3423
                        
415e : 28                       plp
415f : 08                       php             ;save carry for next add
4160 : a50d                     lda ad1
4162 : f504                     sbc sb2-ad2,x   ;perform subtract
4164 : 08                       php          
4165 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
4167 : f003            >        beq skip3425
                       >        trap            ;failed not equal (non zero)
4169 : 20a543          >        jsr report_error
                       >
416c :                 >skip3425
                        
416c : 68                       pla             ;check flags
416d : 29c3                     and #$c3        ;mask NV----ZC
416f : c511                     cmp adrf
                                trap_ne         ;bad flags
4171 : f003            >        beq skip3427
                       >        trap            ;failed not equal (non zero)
4173 : 20a543          >        jsr report_error
                       >
4176 :                 >skip3427
                        
4176 : 28                       plp
                        ; binary ADC / SBC abs,x
4177 : 08                       php             ;save carry for subtract
4178 : a50d                     lda ad1
417a : 7df501                   adc ada2-ad2,x  ;perform add
417d : 08                       php          
417e : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
4180 : f003            >        beq skip3429
                       >        trap            ;failed not equal (non zero)
4182 : 20a543          >        jsr report_error
                       >
4185 :                 >skip3429
                        
4185 : 68                       pla             ;check flags
4186 : 29c3                     and #$c3        ;mask NV----ZC
4188 : c511                     cmp adrf
                                trap_ne         ;bad flags
418a : f003            >        beq skip3431
                       >        trap            ;failed not equal (non zero)
418c : 20a543          >        jsr report_error
                       >
418f :                 >skip3431
                        
418f : 28                       plp
4190 : 08                       php             ;save carry for next add
4191 : a50d                     lda ad1
4193 : fdf601                   sbc sba2-ad2,x  ;perform subtract
4196 : 08                       php          
4197 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
4199 : f003            >        beq skip3433
                       >        trap            ;failed not equal (non zero)
419b : 20a543          >        jsr report_error
                       >
419e :                 >skip3433
                        
419e : 68                       pla             ;check flags
419f : 29c3                     and #$c3        ;mask NV----ZC
41a1 : c511                     cmp adrf
                                trap_ne         ;bad flags
41a3 : f003            >        beq skip3435
                       >        trap            ;failed not equal (non zero)
41a5 : 20a543          >        jsr report_error
                       >
41a8 :                 >skip3435
                        
41a8 : 28                       plp
                        ; binary ADC / SBC abs,y
41a9 : 08                       php             ;save carry for subtract
41aa : a50d                     lda ad1
41ac : 790401                   adc ada2-$ff,y  ;perform add
41af : 08                       php          
41b0 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
41b2 : f003            >        beq skip3437
                       >        trap            ;failed not equal (non zero)
41b4 : 20a543          >        jsr report_error
                       >
41b7 :                 >skip3437
                        
41b7 : 68                       pla             ;check flags
41b8 : 29c3                     and #$c3        ;mask NV----ZC
41ba : c511                     cmp adrf
                                trap_ne         ;bad flags
41bc : f003            >        beq skip3439
                       >        trap            ;failed not equal (non zero)
41be : 20a543          >        jsr report_error
                       >
41c1 :                 >skip3439
                        
41c1 : 28                       plp
41c2 : 08                       php             ;save carry for next add
41c3 : a50d                     lda ad1
41c5 : f90501                   sbc sba2-$ff,y  ;perform subtract
41c8 : 08                       php          
41c9 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
41cb : f003            >        beq skip3441
                       >        trap            ;failed not equal (non zero)
41cd : 20a543          >        jsr report_error
                       >
41d0 :                 >skip3441
                        
41d0 : 68                       pla             ;check flags
41d1 : 29c3                     and #$c3        ;mask NV----ZC
41d3 : c511                     cmp adrf
                                trap_ne         ;bad flags
41d5 : f003            >        beq skip3443
                       >        trap            ;failed not equal (non zero)
41d7 : 20a543          >        jsr report_error
                       >
41da :                 >skip3443
                        
41da : 28                       plp
                        ; binary ADC / SBC (zp,x)
41db : 08                       php             ;save carry for subtract
41dc : a50d                     lda ad1
41de : 6144                     adc (lo adi2-ad2,x) ;perform add
41e0 : 08                       php          
41e1 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
41e3 : f003            >        beq skip3445
                       >        trap            ;failed not equal (non zero)
41e5 : 20a543          >        jsr report_error
                       >
41e8 :                 >skip3445
                        
41e8 : 68                       pla             ;check flags
41e9 : 29c3                     and #$c3        ;mask NV----ZC
41eb : c511                     cmp adrf
                                trap_ne         ;bad flags
41ed : f003            >        beq skip3447
                       >        trap            ;failed not equal (non zero)
41ef : 20a543          >        jsr report_error
                       >
41f2 :                 >skip3447
                        
41f2 : 28                       plp
41f3 : 08                       php             ;save carry for next add
41f4 : a50d                     lda ad1
41f6 : e146                     sbc (lo sbi2-ad2,x) ;perform subtract
41f8 : 08                       php          
41f9 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
41fb : f003            >        beq skip3449
                       >        trap            ;failed not equal (non zero)
41fd : 20a543          >        jsr report_error
                       >
4200 :                 >skip3449
                        
4200 : 68                       pla             ;check flags
4201 : 29c3                     and #$c3        ;mask NV----ZC
4203 : c511                     cmp adrf
                                trap_ne         ;bad flags
4205 : f003            >        beq skip3451
                       >        trap            ;failed not equal (non zero)
4207 : 20a543          >        jsr report_error
                       >
420a :                 >skip3451
                        
420a : 28                       plp
                        ; binary ADC / SBC (abs),y
420b : 08                       php             ;save carry for subtract
420c : a50d                     lda ad1
420e : 7156                     adc (adiy2),y   ;perform add
4210 : 08                       php          
4211 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
4213 : f003            >        beq skip3453
                       >        trap            ;failed not equal (non zero)
4215 : 20a543          >        jsr report_error
                       >
4218 :                 >skip3453
                        
4218 : 68                       pla             ;check flags
4219 : 29c3                     and #$c3        ;mask NV----ZC
421b : c511                     cmp adrf
                                trap_ne         ;bad flags
421d : f003            >        beq skip3455
                       >        trap            ;failed not equal (non zero)
421f : 20a543          >        jsr report_error
                       >
4222 :                 >skip3455
                        
4222 : 28                       plp
4223 : 08                       php             ;save carry for next add
4224 : a50d                     lda ad1
4226 : f158                     sbc (sbiy2),y   ;perform subtract
4228 : 08                       php          
4229 : c50f                     cmp adrl        ;check result
                                trap_ne         ;bad result
422b : f003            >        beq skip3457
                       >        trap            ;failed not equal (non zero)
422d : 20a543          >        jsr report_error
                       >
4230 :                 >skip3457
                        
4230 : 68                       pla             ;check flags
4231 : 29c3                     and #$c3        ;mask NV----ZC
4233 : c511                     cmp adrf
                                trap_ne         ;bad flags
4235 : f003            >        beq skip3459
                       >        trap            ;failed not equal (non zero)
4237 : 20a543          >        jsr report_error
                       >
423a :                 >skip3459
                        
423a : 28                       plp
423b : 60                       rts
                        
                        ; target for the jump absolute test
423c : 88                       dey
423d : 88                       dey
423e :                  test_far
423e : 08                       php             ;either SP or Y count will fail, if we do not hit
423f : 88                       dey
4240 : 88                       dey
4241 : 88                       dey
4242 : 28                       plp
                                trap_cs         ;flags loaded?
4243 : 9003            >        bcc skip3461
                       >        trap            ;failed carry set
4245 : 20a543          >        jsr report_error
                       >
4248 :                 >skip3461
                        
                                trap_vs
4248 : 5003            >        bvc skip3463
                       >        trap            ;failed overflow set
424a : 20a543          >        jsr report_error
                       >
424d :                 >skip3463
                        
                                trap_mi
424d : 1003            >        bpl skip3465
                       >        trap            ;failed minus (bit 7 set)
424f : 20a543          >        jsr report_error
                       >
4252 :                 >skip3465
                        
                                trap_eq 
4252 : d003            >        bne skip3467
                       >        trap           ;failed equal (zero)
4254 : 20a543          >        jsr report_error
                       >
4257 :                 >skip3467
                        
4257 : c946                     cmp #'F'        ;registers loaded?
                                trap_ne
4259 : f003            >        beq skip3469
                       >        trap            ;failed not equal (non zero)
425b : 20a543          >        jsr report_error
                       >
425e :                 >skip3469
                        
425e : e041                     cpx #'A'
                                trap_ne        
4260 : f003            >        beq skip3471
                       >        trap            ;failed not equal (non zero)
4262 : 20a543          >        jsr report_error
                       >
4265 :                 >skip3471
                        
4265 : c04f                     cpy #('R'-3)
                                trap_ne
4267 : f003            >        beq skip3473
                       >        trap            ;failed not equal (non zero)
4269 : 20a543          >        jsr report_error
                       >
426c :                 >skip3473
                        
426c : 48                       pha             ;save a,x
426d : 8a                       txa
426e : 48                       pha
426f : ba                       tsx
4270 : e0fd                     cpx #$fd        ;check SP
                                trap_ne
4272 : f003            >        beq skip3475
                       >        trap            ;failed not equal (non zero)
4274 : 20a543          >        jsr report_error
                       >
4277 :                 >skip3475
                        
4277 : 68                       pla             ;restore x
4278 : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
4279 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
427b : 48              >            pha         ;use stack to load status
427c : 28              >            plp
                        
427d : 68                       pla             ;restore a
427e : e8                       inx             ;return registers with modifications
427f : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
4281 : 4cd909                   jmp far_ret
                                
                        ; target for the jump indirect test
                                align
4284 : 8d42             ptr_tst_ind dw test_ind
4286 : 610a             ptr_ind_ret dw ind_ret
                                trap            ;runover protection
4288 : 20a543          >        jsr report_error
                        
428b : 88                       dey
428c : 88                       dey
428d :                  test_ind
428d : 08                       php             ;either SP or Y count will fail, if we do not hit
428e : 88                       dey
428f : 88                       dey
4290 : 88                       dey
4291 : 28                       plp
                                trap_cs         ;flags loaded?
4292 : 9003            >        bcc skip3480
                       >        trap            ;failed carry set
4294 : 20a543          >        jsr report_error
                       >
4297 :                 >skip3480
                        
                                trap_vs
4297 : 5003            >        bvc skip3482
                       >        trap            ;failed overflow set
4299 : 20a543          >        jsr report_error
                       >
429c :                 >skip3482
                        
                                trap_mi
429c : 1003            >        bpl skip3484
                       >        trap            ;failed minus (bit 7 set)
429e : 20a543          >        jsr report_error
                       >
42a1 :                 >skip3484
                        
                                trap_eq 
42a1 : d003            >        bne skip3486
                       >        trap           ;failed equal (zero)
42a3 : 20a543          >        jsr report_error
                       >
42a6 :                 >skip3486
                        
42a6 : c949                     cmp #'I'        ;registers loaded?
                                trap_ne
42a8 : f003            >        beq skip3488
                       >        trap            ;failed not equal (non zero)
42aa : 20a543          >        jsr report_error
                       >
42ad :                 >skip3488
                        
42ad : e04e                     cpx #'N'
                                trap_ne        
42af : f003            >        beq skip3490
                       >        trap            ;failed not equal (non zero)
42b1 : 20a543          >        jsr report_error
                       >
42b4 :                 >skip3490
                        
42b4 : c041                     cpy #('D'-3)
                                trap_ne
42b6 : f003            >        beq skip3492
                       >        trap            ;failed not equal (non zero)
42b8 : 20a543          >        jsr report_error
                       >
42bb :                 >skip3492
                        
42bb : 48                       pha             ;save a,x
42bc : 8a                       txa
42bd : 48                       pha
42be : ba                       tsx
42bf : e0fd                     cpx #$fd        ;check SP
                                trap_ne
42c1 : f003            >        beq skip3494
                       >        trap            ;failed not equal (non zero)
42c3 : 20a543          >        jsr report_error
                       >
42c6 :                 >skip3494
                        
42c6 : 68                       pla             ;restore x
42c7 : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
42c8 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
42ca : 48              >            pha         ;use stack to load status
42cb : 28              >            plp
                        
42cc : 68                       pla             ;restore a
42cd : e8                       inx             ;return registers with modifications
42ce : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
42d0 : 6c8642                   jmp (ptr_ind_ret)
                                trap            ;runover protection
42d3 : 20a543          >        jsr report_error
                        
                        
                        ; target for the jump subroutine test
42d6 : 88                       dey
42d7 : 88                       dey
42d8 :                  test_jsr
42d8 : 08                       php             ;either SP or Y count will fail, if we do not hit
42d9 : 88                       dey
42da : 88                       dey
42db : 88                       dey
42dc : 28                       plp
                                trap_cs         ;flags loaded?
42dd : 9003            >        bcc skip3499
                       >        trap            ;failed carry set
42df : 20a543          >        jsr report_error
                       >
42e2 :                 >skip3499
                        
                                trap_vs
42e2 : 5003            >        bvc skip3501
                       >        trap            ;failed overflow set
42e4 : 20a543          >        jsr report_error
                       >
42e7 :                 >skip3501
                        
                                trap_mi
42e7 : 1003            >        bpl skip3503
                       >        trap            ;failed minus (bit 7 set)
42e9 : 20a543          >        jsr report_error
                       >
42ec :                 >skip3503
                        
                                trap_eq 
42ec : d003            >        bne skip3505
                       >        trap           ;failed equal (zero)
42ee : 20a543          >        jsr report_error
                       >
42f1 :                 >skip3505
                        
42f1 : c94a                     cmp #'J'        ;registers loaded?
                                trap_ne
42f3 : f003            >        beq skip3507
                       >        trap            ;failed not equal (non zero)
42f5 : 20a543          >        jsr report_error
                       >
42f8 :                 >skip3507
                        
42f8 : e053                     cpx #'S'
                                trap_ne        
42fa : f003            >        beq skip3509
                       >        trap            ;failed not equal (non zero)
42fc : 20a543          >        jsr report_error
                       >
42ff :                 >skip3509
                        
42ff : c04f                     cpy #('R'-3)
                                trap_ne
4301 : f003            >        beq skip3511
                       >        trap            ;failed not equal (non zero)
4303 : 20a543          >        jsr report_error
                       >
4306 :                 >skip3511
                        
4306 : 48                       pha             ;save a,x
4307 : 8a                       txa
4308 : 48                       pha       
4309 : ba                       tsx             ;sp -4? (return addr,a,x)
430a : e0fb                     cpx #$fb
                                trap_ne
430c : f003            >        beq skip3513
                       >        trap            ;failed not equal (non zero)
430e : 20a543          >        jsr report_error
                       >
4311 :                 >skip3513
                        
4311 : adff01                   lda $1ff        ;propper return on stack
4314 : c90a                     cmp #hi(jsr_ret)
                                trap_ne
4316 : f003            >        beq skip3515
                       >        trap            ;failed not equal (non zero)
4318 : 20a543          >        jsr report_error
                       >
431b :                 >skip3515
                        
431b : adfe01                   lda $1fe
431e : c9b2                     cmp #lo(jsr_ret)
                                trap_ne
4320 : f003            >        beq skip3517
                       >        trap            ;failed not equal (non zero)
4322 : 20a543          >        jsr report_error
                       >
4325 :                 >skip3517
                        
                                set_stat $ff
                       >            load_flag $ff
4325 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4327 : 48              >            pha         ;use stack to load status
4328 : 28              >            plp
                        
4329 : 68                       pla             ;pull x,a
432a : aa                       tax
432b : 68                       pla
432c : e8                       inx             ;return registers with modifications
432d : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
432f : 60                       rts
                                trap            ;runover protection
4330 : 20a543          >        jsr report_error
                        
                                
                        ;trap in case of unexpected IRQ, NMI, BRK, RESET - BRK test target
4333 :                  nmi_trap
                                trap            ;check stack for conditions at NMI
4333 : 20a543          >        jsr report_error
                        
4336 :                  res_trap
                                trap            ;unexpected RESET
4336 : 20a543          >        jsr report_error
                        
                                
4339 : 88                       dey
433a : 88                       dey
433b :                  irq_trap                ;BRK test or unextpected BRK or IRQ
433b : 08                       php             ;either SP or Y count will fail, if we do not hit
433c : 88                       dey
433d : 88                       dey
433e : 88                       dey
                                ;next 4 traps could be caused by unexpected BRK or IRQ
                                ;check stack for BREAK and originating location
                                ;possible jump/branch into weeds (uninitialized space)
433f : c942                     cmp #'B'        ;registers loaded?
                                trap_ne
4341 : f003            >        beq skip3524
                       >        trap            ;failed not equal (non zero)
4343 : 20a543          >        jsr report_error
                       >
4346 :                 >skip3524
                        
4346 : e052                     cpx #'R'
                                trap_ne        
4348 : f003            >        beq skip3526
                       >        trap            ;failed not equal (non zero)
434a : 20a543          >        jsr report_error
                       >
434d :                 >skip3526
                        
434d : c048                     cpy #('K'-3)
                                trap_ne
434f : f003            >        beq skip3528
                       >        trap            ;failed not equal (non zero)
4351 : 20a543          >        jsr report_error
                       >
4354 :                 >skip3528
                        
4354 : 850a                     sta irq_a       ;save registers during break test
4356 : 860b                     stx irq_x
4358 : ba                       tsx             ;test break on stack
4359 : bd0201                   lda $102,x
                                cmp_flag 0      ;break test should have B=1
435c : c930            >            cmp #(0      |fao)&m8    ;expected flags + always on bits
                        
                                trap_ne         ; - no break flag on stack
435e : f003            >        beq skip3531
                       >        trap            ;failed not equal (non zero)
4360 : 20a543          >        jsr report_error
                       >
4363 :                 >skip3531
                        
4363 : 68                       pla
4364 : c934                     cmp #fai        ;should have added interrupt disable
                                trap_ne
4366 : f003            >        beq skip3533
                       >        trap            ;failed not equal (non zero)
4368 : 20a543          >        jsr report_error
                       >
436b :                 >skip3533
                        
436b : ba                       tsx
436c : e0fc                     cpx #$fc        ;sp -3? (return addr, flags)
                                trap_ne
436e : f003            >        beq skip3535
                       >        trap            ;failed not equal (non zero)
4370 : 20a543          >        jsr report_error
                       >
4373 :                 >skip3535
                        
4373 : adff01                   lda $1ff        ;propper return on stack
4376 : c90b                     cmp #hi(brk_ret)
                                trap_ne
4378 : f003            >        beq skip3537
                       >        trap            ;failed not equal (non zero)
437a : 20a543          >        jsr report_error
                       >
437d :                 >skip3537
                        
437d : adfe01                   lda $1fe
4380 : c90f                     cmp #lo(brk_ret)
                                trap_ne
4382 : f003            >        beq skip3539
                       >        trap            ;failed not equal (non zero)
4384 : 20a543          >        jsr report_error
                       >
4387 :                 >skip3539
                        
                                set_stat $ff
                       >            load_flag $ff
4387 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4389 : 48              >            pha         ;use stack to load status
438a : 28              >            plp
                        
438b : a60b                     ldx irq_x
438d : e8                       inx             ;return registers with modifications
438e : a50a                     lda irq_a
4390 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1 but original flags should be restored
4392 : 40                       rti
                                trap            ;runover protection
4393 : 20a543          >        jsr report_error
                        
                                
                            if report = 1
                                include "report.i65"
                        ;**** report 6502 funtional test errors to standard I/O ****
                        ;
                        ;this include file is part of the 6502 functional tests
                        ;it is used when you configure report = 1 in the tests
                        ;
                        ;to adopt the standard output vectors of your test environment
                        ;you must modify the rchar and rget subroutines in this include
                        ;
                        ;I/O hardware may have to be initialized in report_init
                        
                        ;print message macro - \1 = message location
                        rprt    macro
                                ldx #0
                                lda \1
                        loop\?
                                jsr rchar
                                inx
                                lda \1,x
                                bne loop\?
                                endm
                        
                        ;initialize I/O as required (example: configure & enable ACIA)
4396 :                  report_init
                                ;nothing to initialize
                                rprt rmsg_start
4396 : a200            >        ldx #0
4398 : ad6c44          >        lda rmsg_start
439b :                 >loop3544
439b : 206844          >        jsr rchar
439e : e8              >        inx
439f : bd6c44          >        lda rmsg_start,x
43a2 : d0f7            >        bne loop3544
                        
43a4 : 60                       rts
                                
                        ;show stack (with saved registers), zeropage and absolute memory workspace
                        ;after an error was trapped in the test program
43a5 :                  report_error
                        ;save registers
43a5 : 08                       php
43a6 : 48                       pha
43a7 : 8a                       txa
43a8 : 48                       pha
43a9 : 98                       tya
43aa : 48                       pha
43ab : d8                       cld
                        ;show stack with index to registers at error
                                rprt rmsg_stack
43ac : a200            >        ldx #0
43ae : ad8044          >        lda rmsg_stack
43b1 :                 >loop3545
43b1 : 206844          >        jsr rchar
43b4 : e8              >        inx
43b5 : bd8044          >        lda rmsg_stack,x
43b8 : d0f7            >        bne loop3545
                        
43ba : ba                       tsx
43bb : e8                       inx
43bc : a901                     lda #1      ;address high
43be : 205444                   jsr rhex
43c1 : 8a                       txa         ;address low
43c2 : 205444                   jsr rhex
43c5 : 205044           rstack  jsr rspace
43c8 : bd0001                   lda $100,x  ;stack data
43cb : 205444                   jsr rhex
43ce : e8                       inx
43cf : d0f4                     bne rstack
43d1 : 204744                   jsr rcrlf   ;new line
                        ;show zero page workspace
43d4 : a900                     lda #0
43d6 : 205444                   jsr rhex
43d9 : a90c                     lda #zpt
43db : aa                       tax
43dc : 205444                   jsr rhex
43df : 205044           rzp     jsr rspace
43e2 : b500                     lda 0,x
43e4 : 205444                   jsr rhex
43e7 : e8                       inx
43e8 : e013                     cpx #zp_bss
43ea : d0f3                     bne rzp
43ec : 204744                   jsr rcrlf
                        ;show absolute workspace
43ef : a902                     lda #hi(data_segment)
43f1 : 205444                   jsr rhex
43f4 : a900                     lda #lo(data_segment)
43f6 : 205444                   jsr rhex
43f9 : a200                     ldx #0
43fb : 205044           rabs    jsr rspace
43fe : bd0002                   lda data_segment,x
4401 : 205444                   jsr rhex
4404 : e8                       inx
4405 : e008                     cpx #(data_bss-data_segment)
4407 : d0f2                     bne rabs
                        ;ask to continue
                                rprt rmsg_cont
4409 : a200            >        ldx #0
440b : ad9c44          >        lda rmsg_cont
440e :                 >loop3546
440e : 206844          >        jsr rchar
4411 : e8              >        inx
4412 : bd9c44          >        lda rmsg_cont,x
4415 : d0f7            >        bne loop3546
                        
4417 : 203b44           rerr1   jsr rget
441a : c943                     cmp #'C'
441c : d0f9                     bne rerr1        
                        ;restore registers
441e : 68                       pla
441f : a8                       tay
4420 : 68                       pla
4421 : aa                       tax
4422 : 68                       pla 
4423 : 28                       plp
4424 : 60                       rts   
                        
                        ;show test has ended, ask to repeat
4425 :                  report_success
                            if rep_int = 1
                                rprt rmsg_priority
                                lda data_segment    ;show interrupt sequence
                                jsr rhex
                                jsr rspace
                                lda data_segment+1
                                jsr rhex
                                jsr rspace
                                lda data_segment+2
                                jsr rhex
                            endif
                                rprt rmsg_success
4425 : a200            >        ldx #0
4427 : adb444          >        lda rmsg_success
442a :                 >loop3547
442a : 206844          >        jsr rchar
442d : e8              >        inx
442e : bdb444          >        lda rmsg_success,x
4431 : d0f7            >        bne loop3547
                        
4433 : 203b44           rsuc1   jsr rget
4436 : c952                     cmp #'R'
4438 : d0f9                     bne rsuc1        
443a : 60                       rts
                        
                        ;input subroutine
                        ;get a character from standard input 
                        ;adjust according to the needs in your test environment
443b :                  rget                ;get character in A
                        ;rget1
                        ;        lda $bff1   ;wait RDRF
                        ;        and #8
                        ;        beq rget1
                        ;not a real ACIA - so RDRF is not checked
443b : adf0bf                   lda $bff0   ;read acia rx reg
                        ;the load can be replaced by a call to a kernal routine
                        ;        jsr $ffcf   ;example: CHRIN for a C64
443e : c961                     cmp #'a'    ;lower case
4440 : 9002                     bcc rget1
4442 : 295f                     and #$5f    ;convert to upper case
4444 : a943             rget1   lda #'C'
4446 : 60               		rts
                        
                        ;output subroutines
4447 : a90a             rcrlf   lda #10
4449 : 206844                   jsr rchar
444c : a90d                     lda #13
444e : d018                     bne rchar
                        
4450 : a920             rspace  lda #' '
4452 : d014                     bne rchar
                                
4454 : 48               rhex    pha         ;report hex byte in A
4455 : 4a                       lsr a       ;high nibble first
4456 : 4a                       lsr a
4457 : 4a                       lsr a
4458 : 4a                       lsr a
4459 : 205f44                   jsr rnib
445c : 68                       pla         ;now low nibble
445d : 290f                     and #$f
                        
445f : 18               rnib    clc         ;report nibble in A
4460 : 6930                     adc #'0'    ;make printable 0-9
4462 : c93a                     cmp #'9'+1
4464 : 9002                     bcc rchar
4466 : 6906                     adc #6      ;make printable A-F
                        
                        ;send a character to standard output 
                        ;adjust according to the needs in your test environment
                        ;register X needs to be preserved!
4468 :                  rchar               ;report character in A
                        ;        pha         ;wait TDRF
                        ;rchar1  lda $bff1
                        ;        and #$10
                        ;        beq rchar1
                        ;        pla
                        ;not a real ACIA - so TDRF is not checked
4468 : 8d00ef                   sta $ef00   ;write acia tx reg
                        ;the store can be replaced by a call to a kernal routine
                        ;        jsr $ffd2   ;example: CHROUT for a C64
446b : 60                       rts
                        
446c :                  rmsg_start
446c : 0a0d5374617274..         db  10,13,"Started testing",10,13,0
4480 :                  rmsg_stack
4480 : 0a0d7265677320..         db  10,13,"regs Y  X  A  PS PCLPCH",10,13,0
449c :                  rmsg_cont
449c : 0a0d7072657373..         db  10,13,"press C to continue",10,13,0
44b4 :                  rmsg_success
44b4 : 0a0d416c6c2074..         db  10,13,"All tests completed, press R to repeat",10,13,0
                            if rep_int = 1
                        rmsg_priority
                                db  10,13,"interrupt sequence (NMI IRQ BRK) ",0
                            endif
                           
                            endif
                                
                        ;copy of data to initialize BSS segment
                            if load_data_direct != 1
44df :                  zp_init
44df : c3824100         zp1_    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
44e3 : 7f               zp7f_   db  $7f             ;test pattern for compare  
                        ;logical zeropage operands
44e4 : 001f7180         zpOR_   db  0,$1f,$71,$80   ;test pattern for OR
44e8 : 0fff7f80         zpAN_   db  $0f,$ff,$7f,$80 ;test pattern for AND
44ec : ff0f8f8f         zpEO_   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
44f0 : 0802             ind1_   dw  abs1            ;indirect pointer to pattern in absolute memory
44f2 : 0902                     dw  abs1+1
44f4 : 0a02                     dw  abs1+2
44f6 : 0b02                     dw  abs1+3
44f8 : 0c02                     dw  abs7f
44fa : 1001             inw1_   dw  abs1-$f8        ;indirect pointer for wrap-test pattern
44fc : 0302             indt_   dw  abst            ;indirect pointer to store area in absolute memory
44fe : 0402                     dw  abst+1
4500 : 0502                     dw  abst+2
4502 : 0602                     dw  abst+3
4504 : 0b01             inwt_   dw  abst-$f8        ;indirect pointer for wrap-test store
4506 : 3f02             indAN_  dw  absAN           ;indirect pointer to AND pattern in absolute memory
4508 : 4002                     dw  absAN+1
450a : 4102                     dw  absAN+2
450c : 4202                     dw  absAN+3
450e : 4302             indEO_  dw  absEO           ;indirect pointer to EOR pattern in absolute memory
4510 : 4402                     dw  absEO+1
4512 : 4502                     dw  absEO+2
4514 : 4602                     dw  absEO+3
4516 : 3b02             indOR_  dw  absOR           ;indirect pointer to OR pattern in absolute memory
4518 : 3c02                     dw  absOR+1
451a : 3d02                     dw  absOR+2
451c : 3e02                     dw  absOR+3
                        ;add/subtract indirect pointers
451e : 0302             adi2_   dw  ada2            ;indirect pointer to operand 2 in absolute memory
4520 : 0402             sbi2_   dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
4522 : 0401             adiy2_  dw  ada2-$ff        ;with offset for indirect indexed
4524 : 0501             sbiy2_  dw  sba2-$ff
4526 :                  zp_end
                            if (zp_end - zp_init) != (zp_bss_end - zp_bss)   
                                ;force assembler error if size is different   
                                ERROR ERROR ERROR   ;mismatch between bss and zeropage data
                            endif 
4526 :                  data_init
4526 : c3824100         abs1_   db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
452a : 7f               abs7f_  db  $7f             ;test pattern for compare
                        ;loads
452b : 80800002         fLDx_   db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
452f :                  rASL_                       ;expected result ASL & ROL -carry  
452f : 86048200         rROL_   db  $86,$04,$82,0   ; "
4533 : 87058301         rROLc_  db  $87,$05,$83,1   ;expected result ROL +carry
4537 :                  rLSR_                       ;expected result LSR & ROR -carry
4537 : 61412000         rROR_   db  $61,$41,$20,0   ; "
453b : e1c1a080         rRORc_  db  $e1,$c1,$a0,$80 ;expected result ROR +carry
453f :                  fASL_                       ;expected flags for shifts
453f : 81018002         fROL_   db  fnc,fc,fn,fz    ;no carry in
4543 : 81018000         fROLc_  db  fnc,fc,fn,0     ;carry in
4547 :                  fLSR_
4547 : 01000102         fROR_   db  fc,0,fc,fz      ;no carry in
454b : 81808180         fRORc_  db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
454f : 7f80ff0001       rINC_   db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
4554 : 0080800200       fINC_   db  0,fn,fn,fz,0    ;expected flags for INC/DEC
                        ;logical memory operand
4559 : 001f7180         absOR_  db  0,$1f,$71,$80   ;test pattern for OR
455d : 0fff7f80         absAN_  db  $0f,$ff,$7f,$80 ;test pattern for AND
4561 : ff0f8f8f         absEO_  db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
4565 : 00f11f00         absORa_ db  0,$f1,$1f,0     ;test pattern for OR
4569 : f0ffffff         absANa_ db  $f0,$ff,$ff,$ff ;test pattern for AND
456d : fff0f00f         absEOa_ db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
4571 : 00ff7f80         absrlo_ db  0,$ff,$7f,$80
4575 : 02800080         absflo_ db  fz,fn,0,fn
4579 :                  data_end
                            if (data_end - data_init) != (data_bss_end - data_bss)
                                ;force assembler error if size is different   
                                ERROR ERROR ERROR   ;mismatch between bss and data
                            endif 
                        
4579 :                  vec_init
4579 : 3343                     dw  nmi_trap
457b : 3643                     dw  res_trap
457d : 3b43                     dw  irq_trap
fffa =                  vec_bss equ $fffa
                            endif                   ;end of RAM init data
                            
                            if (load_data_direct = 1) & (ROM_vectors = 1)  
                                org $fffa       ;vectors
                                dw  nmi_trap
                                dw  res_trap
                                dw  irq_trap
                            endif
                        
fffa =                          end start
                                    
No errors in pass 2.
Wrote binary from address $0400 through $457e.
Total size 16767 bytes.
Program start address is at $0400 (1024).
