AS65 Assembler for R6502 [1.42].  Copyright 1994-2007, Frank A. Kingswood                                                Page    1
---------------------------------------------------- 6502_functional_test.a65 ----------------------------------------------------

6125 lines read, no errors in pass 1.
                        ;
                        ; 6 5 0 2   F U N C T I O N A L   T E S T
                        ;
                        ; Copyright (C) 2012-2014  Klaus Dormann
                        ;
                        ; This program is free software: you can redistribute it and/or modify
                        ; it under the terms of the GNU General Public License as published by
                        ; the Free Software Foundation, either version 3 of the License, or
                        ; (at your option) any later version.
                        ;
                        ; This program is distributed in the hope that it will be useful,
                        ; but WITHOUT ANY WARRANTY; without even the implied warranty of
                        ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        ; GNU General Public License for more details.
                        ;
                        ; You should have received a copy of the GNU General Public License
                        ; along with this program.  If not, see <http://www.gnu.org/licenses/>.
                        
                        
                        ; This program is designed to test all opcodes of a 6502 emulator using all
                        ; addressing modes with focus on propper setting of the processor status
                        ; register bits.
                        ; 
                        ; version 14-dec-2014
                        ; contact info at http://2m5.de or email K@2m5.de
                        ;
                        ; assembled with AS65 from http://www.kingswood-consulting.co.uk/assemblers/
                        ; command line switches: -l -m -s2 -w -h0
                        ;                         |  |  |   |  no page headers in listing
                        ;                         |  |  |   wide listing (133 char/col)
                        ;                         |  |  write intel hex file instead of binary
                        ;                         |  expand macros in listing
                        ;                         generate pass2 listing
                        ;
                        ; No IO - should be run from a monitor with access to registers.
                        ; To run load intel hex image with a load command, than alter PC to 400 hex
                        ; (code_segment) and enter a go command.
                        ; Loop on program counter determines error or successful completion of test.
                        ; Check listing for relevant traps (jump/branch *).
                        ; Please note that in early tests some instructions will have to be used before
                        ; they are actually tested!
                        ;
                        ; RESET, NMI or IRQ should not occur and will be trapped if vectors are enabled.
                        ; Tests documented behavior of the original NMOS 6502 only! No unofficial
                        ; opcodes. Additional opcodes of newer versions of the CPU (65C02, 65816) will
                        ; not be tested. Decimal ops will only be tested with valid BCD operands and
                        ; N V Z flags will be ignored.
                        ;
                        ; Debugging hints:
                        ;     Most of the code is written sequentially. if you hit a trap, check the
                        ;   immediately preceeding code for the instruction to be tested. Results are
                        ;   tested first, flags are checked second by pushing them onto the stack and
                        ;   pulling them to the accumulator after the result was checked. The "real"
                        ;   flags are no longer valid for the tested instruction at this time!
                        ;     If the tested instruction was indexed, the relevant index (X or Y) must
                        ;   also be checked. Opposed to the flags, X and Y registers are still valid.
                        ;
                        ; versions:
                        ;   28-jul-2012  1st version distributed for testing
                        ;   29-jul-2012  fixed references to location 0, now #0
                        ;                added license - GPLv3
                        ;   30-jul-2012  added configuration options
                        ;   01-aug-2012  added trap macro to allow user to change error handling
                        ;   01-dec-2012  fixed trap in branch field must be a branch
                        ;   02-mar-2013  fixed PLA flags not tested
                        ;   19-jul-2013  allowed ROM vectors to be loaded when load_data_direct = 0
                        ;                added test sequence check to detect if tests jump their fence
                        ;   23-jul-2013  added RAM integrity check option
                        ;   16-aug-2013  added error report to standard output option
                        ;   13-dec-2014  added binary/decimal opcode table switch test
                        ;   14-dec-2014  improved relative address test
                        
                        
                        ; C O N F I G U R A T I O N
                        
                        ;ROM_vectors writable (0=no, 1=yes)
                        ;if ROM vectors can not be used interrupts will not be trapped
                        ;as a consequence BRK can not be tested but will be emulated to test RTI
0000 =                  ROM_vectors = 0
                        
                        ;load_data_direct (0=move from code segment, 1=load directly)
                        ;loading directly is preferred but may not be supported by your platform
                        ;0 produces only consecutive object code, 1 is not suitable for a binary image
0000 =                  load_data_direct = 0
                        
                        ;I_flag behavior (0=force enabled, 1=force disabled, 2=prohibit change, 3=allow
                        ;change) 2 requires extra code and is not recommended. SEI & CLI can only be
                        ;tested if you allow changing the interrupt status (I_flag = 3)
0003 =                  I_flag = 3
                        
                        ;configure memory - try to stay away from memory used by the system
                        ;zero_page memory start address, $50 (80) consecutive Bytes required
                        ;                                add 2 if I_flag = 2
0010 =                  zero_page = $10
                        
                        ;data_segment memory start address, $5B (91) consecutive Bytes required
0200 =                  data_segment = $200  
                            if (data_segment & $ff) != 0
                                ERROR ERROR ERROR low byte of data_segment MUST be $00 !!
                            endif  
                        
                        ;code_segment memory start address, 13kB of consecutive space required
                        ;                                   add 2.5 kB if I_flag = 2
                        ;parts of the code are self modifying and must reside in RAM
1000 =                  code_segment = $1000  
                        
                        ;report errors through I/O channel (0=use standard self trap loops, 1=include
                        ;report.i65 as I/O channel, add 3.5 kB)
0001 =                  report = 1
                        
                        ;RAM integrity test option. Checks for undesired RAM writes.
                        ;set lowest non RAM or RAM mirror address page (-1=disable, 0=64k, $40=16k)
                        ;leave disabled if a monitor, OS or background interrupt is allowed to alter RAM
ffff =                  ram_top = -1
                        
                                noopt       ;do not take shortcuts
                        
                        ;macros for error & success traps to allow user modification
                        ;example:
                        ;trap    macro
                        ;        jsr my_error_handler
                        ;        endm
                        ;trap_eq macro
                        ;        bne skip\?
                        ;        trap           ;failed equal (zero)
                        ;skip\?
                        ;        endm
                        ;
                        ; my_error_handler should pop the calling address from the stack and report it.
                        ; putting larger portions of code (more than 3 bytes) inside the trap macro
                        ; may lead to branch range problems for some tests.
                            if report = 0
                        trap    macro
                                jmp *           ;failed anyway
                                endm
                        trap_eq macro
                                beq *           ;failed equal (zero)
                                endm
                        trap_ne macro
                                bne *           ;failed not equal (non zero)
                                endm
                        trap_cs macro
                                bcs *           ;failed carry set
                                endm
                        trap_cc macro
                                bcc *           ;failed carry clear
                                endm
                        trap_mi macro
                                bmi *           ;failed minus (bit 7 set)
                                endm
                        trap_pl macro
                                bpl *           ;failed plus (bit 7 clear)
                                endm
                        trap_vs macro
                                bvs *           ;failed overflow set
                                endm
                        trap_vc macro
                                bvc *           ;failed overflow clear
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                         sta $ef04
                         db "success", 10, 0
                                jmp *           ;test passed, no errors
                                endm
                            endif
                            if report = 1
                        trap    macro
                                sta $ef02
                                ;jsr report_error
                                endm
                        trap_eq macro
                                bne skip\?
                                trap           ;failed equal (zero)
                        skip\?
                                endm
                        trap_ne macro
                                beq skip\?
                                trap            ;failed not equal (non zero)
                        skip\?
                                endm
                        trap_cs macro
                                bcc skip\?
                                trap            ;failed carry set
                        skip\?
                                endm
                        trap_cc macro
                                bcs skip\?
                                trap            ;failed carry clear
                        skip\?
                                endm
                        trap_mi macro
                                bpl skip\?
                                trap            ;failed minus (bit 7 set)
                        skip\?
                                endm
                        trap_pl macro
                                bmi skip\?
                                trap            ;failed plus (bit 7 clear)
                        skip\?
                                endm
                        trap_vs macro
                                bvc skip\?
                                trap            ;failed overflow set
                        skip\?
                                endm
                        trap_vc macro
                                bvs skip\?
                                trap            ;failed overflow clear
                        skip\?
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                         sta $ef04
                         db "success", 10, 0
                                db $db
                                ;jsr report_success
                                endm
                            endif
                        
                        
0001 =                  carry   equ %00000001   ;flag bits in status
0002 =                  zero    equ %00000010
0004 =                  intdis  equ %00000100
0008 =                  decmode equ %00001000
0010 =                  break   equ %00010000
0020 =                  reserv  equ %00100000
0040 =                  overfl  equ %01000000
0080 =                  minus   equ %10000000
                        
0001 =                  fc      equ carry
0002 =                  fz      equ zero
0003 =                  fzc     equ carry+zero
0040 =                  fv      equ overfl
0042 =                  fvz     equ overfl+zero
0080 =                  fn      equ minus
0081 =                  fnc     equ minus+carry
0082 =                  fnz     equ minus+zero
0083 =                  fnzc    equ minus+zero+carry
00c0 =                  fnv     equ minus+overfl
                        
0030 =                  fao     equ break+reserv    ;bits always on after PHP, BRK
0034 =                  fai     equ fao+intdis      ;+ forced interrupt disable
00ff =                  m8      equ $ff             ;8 bit mask
00fb =                  m8i     equ $ff&~intdis     ;8 bit mask - interrupt disable
                        
                        ;macros to allow masking of status bits.
                        ;masking of interrupt enable/disable on load and compare
                        ;masking of always on bits after PHP or BRK (unused & break) on compare
                                if I_flag = 0
                        load_flag   macro
                                    lda #\1&m8i         ;force enable interrupts (mask I)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8i   ;I_flag is always enabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 1
                        load_flag   macro
                                    lda #\1|intdis      ;force disable interrupts
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fai)&m8    ;I_flag is always disabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1|fai)       ;invert expected flags + always on bits + I
                                    endm
                                endif
                                if I_flag = 2
                        load_flag   macro
                                    lda #\1
                                    ora flag_I_on       ;restore I-flag
                                    and flag_I_off
                                    endm
                        cmp_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    cmp #(\1|fao)&m8i   ;expected flags + always on bits, mask I
                                    endm
                        eor_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 3
                        load_flag   macro
                                    lda #\1             ;allow test to change I-flag (no mask)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8    ;expected flags + always on bits
                                    endm
                        eor_flag    macro
                                    eor #\1|fao         ;invert expected flags + always on bits
                                    endm
                                endif
                        
                        ;macros to set (register|memory|zeropage) & status
                        set_stat    macro       ;setting flags in the processor status register
                                    load_flag \1
                                    pha         ;use stack to load status
                                    plp
                                    endm
                        
                        set_a       macro       ;precharging accu & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda #\1     ;precharge accu
                                    plp
                                    endm
                        
                        set_x       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldx #\1     ;precharge index x
                                    plp
                                    endm
                        
                        set_y       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldy #\1     ;precharge index y
                                    plp
                                    endm
                        
                        set_ax      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;precharge accu
                                    plp
                                    endm
                        
                        set_ay      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,y    ;precharge accu
                                    plp
                                    endm
                        
                        set_z       macro       ;precharging indexed zp & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to zeropage
                                    sta zpt
                                    plp
                                    endm
                        
                        set_zx      macro       ;precharging zp,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed zeropage
                                    sta zpt,x
                                    plp
                                    endm
                        
                        set_abs     macro       ;precharging indexed memory & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to memory
                                    sta abst
                                    plp
                                    endm
                        
                        set_absx    macro       ;precharging abs,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed memory
                                    sta abst,x
                                    plp
                                    endm
                        
                        ;macros to test (register|memory|zeropage) & status & (mask)
                        tst_stat    macro       ;testing flags in the processor status register
                                    php         ;save status
                                    pla         ;use stack to retrieve status
                                    pha
                                    cmp_flag \1
                                    trap_ne
                                    plp         ;restore status
                                    endm
                                    
                        tst_a       macro       ;testing result in accu & flags
                                    php         ;save flags
                                    cmp #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_x       macro       ;testing result in x index & flags
                                    php         ;save flags
                                    cpx #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_y       macro       ;testing result in y index & flags
                                    php         ;save flags
                                    cpy #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    pha
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_ax      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne     ;
                                    endm
                        
                        tst_ay      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,y    ;test result
                                    trap_ne     ;
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,y    ;test flags
                                    trap_ne
                                    endm
                                
                        tst_z       macro       ;indexed testing result in zp & flags
                                    php         ;save flags
                                    lda zpt
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_zx      macro       ;testing result in zp,x & flags
                                    php         ;save flags
                                    lda zpt,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_abs     macro       ;indexed testing result in memory & flags
                                    php         ;save flags
                                    lda abst
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_absx    macro       ;testing result in abs,x & flags
                                    php         ;save flags
                                    lda abst,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                                    
                        ; RAM integrity test
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                        ;   uses zpt word as indirect pointer, zpt+2 word as checksum
                                if ram_top > -1
                        check_ram   macro 
                                    cld
                                    lda #0
                                    sta zpt         ;set low byte of indirect pointer
                                    sta zpt+3       ;checksum high byte
                                    sta range_adr   ;reset self modifying code
                                    sta tandi1
                                    sta tandi2
                                    sta teori1
                                    sta teori2
                                    sta torai1
                                    sta torai2
                                    sta chkdadi  
                                    sta chkdsbi
                                    sta chkadi
                                    sta chksbi
                                    clc
                                    ldx #zp_bss-zero_page ;zeropage - write test area
                        ccs3\?      adc zero_page,x
                                    bcc ccs2\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs2\?      inx
                                    bne ccs3\?
                                    ldx #hi(data_segment) ;set high byte of indirect pointer
                                    stx zpt+1
                                    ldy #lo(data_bss) ;data after write test area
                        ccs5\?      adc (zpt),y
                                    bcc ccs4\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs4\?      iny
                                    bne ccs5\?
                                    inx             ;advance RAM high address
                                    stx zpt+1
                                    cpx #ram_top
                                    bne ccs5\?
                                    sta zpt+2       ;checksum low is
                                    cmp ram_chksm   ;checksum low expected
                                    trap_ne         ;checksum mismatch
                                    lda zpt+3       ;checksum high is
                                    cmp ram_chksm+1 ;checksum high expected
                                    trap_ne         ;checksum mismatch
                                    endm            
                                else
                        check_ram   macro
                                    ;RAM check disabled - RAM size not set
                                    endm
                                endif
                        
                        next_test   macro           ;make sure, tests don't jump the fence
                                    lda test_case   ;previous test
                                    cmp #test_num
                                    trap_ne         ;test is out of sequence
                        test_num = test_num + 1
                                    lda #test_num   ;*** next tests' number
                                    sta test_case
                                    ;sta $ef03
                                    ;check_ram       ;uncomment to find altered RAM after each test
                                    endm
                        
                            if load_data_direct = 1
                                data
                            else
                                bss                 ;uninitialized segment, copy of data at end of code!
                            endif
0010 =                          org zero_page
                        ;break test interrupt save
0010 =                  irq_a   ds  1               ;a register
0011 =                  irq_x   ds  1               ;x register
                            if I_flag = 2
                        ;masking for I bit in status
                        flag_I_on   ds  1           ;or mask to load flags   
                        flag_I_off  ds  1           ;and mask to load flags
                            endif
0012 =                  zpt                         ;5 bytes store/modify test area
                        ;add/subtract operand generation and result/flag prediction
0012 =                  adfc    ds  1               ;carry flag before op
0013 =                  ad1     ds  1               ;operand 1 - accumulator
0014 =                  ad2     ds  1               ;operand 2 - memory / immediate
0015 =                  adrl    ds  1               ;expected result bits 0-7
0016 =                  adrh    ds  1               ;expected result bit 8 (carry)
0017 =                  adrf    ds  1               ;expected flags NV0000ZC (only binary mode)
0018 =                  sb2     ds  1               ;operand 2 complemented for subtract
0019 =                  zp_bss
0019 =                  zp1     db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
001d =                  zp7f    db  $7f             ;test pattern for compare  
                        ;logical zeropage operands
001e =                  zpOR    db  0,$1f,$71,$80   ;test pattern for OR
0022 =                  zpAN    db  $0f,$ff,$7f,$80 ;test pattern for AND
0026 =                  zpEO    db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
002a =                  ind1    dw  abs1            ;indirect pointer to pattern in absolute memory
002c =                          dw  abs1+1
002e =                          dw  abs1+2
0030 =                          dw  abs1+3
0032 =                          dw  abs7f
0034 =                  inw1    dw  abs1-$f8        ;indirect pointer for wrap-test pattern
0036 =                  indt    dw  abst            ;indirect pointer to store area in absolute memory
0038 =                          dw  abst+1
003a =                          dw  abst+2
003c =                          dw  abst+3
003e =                  inwt    dw  abst-$f8        ;indirect pointer for wrap-test store
0040 =                  indAN   dw  absAN           ;indirect pointer to AND pattern in absolute memory
0042 =                          dw  absAN+1
0044 =                          dw  absAN+2
0046 =                          dw  absAN+3
0048 =                  indEO   dw  absEO           ;indirect pointer to EOR pattern in absolute memory
004a =                          dw  absEO+1
004c =                          dw  absEO+2
004e =                          dw  absEO+3
0050 =                  indOR   dw  absOR           ;indirect pointer to OR pattern in absolute memory
0052 =                          dw  absOR+1
0054 =                          dw  absOR+2
0056 =                          dw  absOR+3
                        ;add/subtract indirect pointers
0058 =                  adi2    dw  ada2            ;indirect pointer to operand 2 in absolute memory
005a =                  sbi2    dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
005c =                  adiy2   dw  ada2-$ff        ;with offset for indirect indexed
005e =                  sbiy2   dw  sba2-$ff
0060 =                  zp_bss_end
                           
0200 =                          org data_segment
0200 =                  test_case   ds  1           ;current test number
0201 =                  ram_chksm   ds  2           ;checksum for RAM integrity test
                        ;add/subtract operand copy - abs tests write area
0203 =                  abst                        ;5 bytes store/modify test area
0203 =                  ada2    ds  1               ;operand 2
0204 =                  sba2    ds  1               ;operand 2 complemented for subtract
0205 =                          ds  3               ;fill remaining bytes
0208 =                  data_bss
0208 =                  abs1    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
020c =                  abs7f   db  $7f             ;test pattern for compare
                        ;loads
020d =                  fLDx    db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
0211 =                  rASL                        ;expected result ASL & ROL -carry  
0211 =                  rROL    db  $86,$04,$82,0   ; "
0215 =                  rROLc   db  $87,$05,$83,1   ;expected result ROL +carry
0219 =                  rLSR                        ;expected result LSR & ROR -carry
0219 =                  rROR    db  $61,$41,$20,0   ; "
021d =                  rRORc   db  $e1,$c1,$a0,$80 ;expected result ROR +carry
0221 =                  fASL                        ;expected flags for shifts
0221 =                  fROL    db  fnc,fc,fn,fz    ;no carry in
0225 =                  fROLc   db  fnc,fc,fn,0     ;carry in
0229 =                  fLSR
0229 =                  fROR    db  fc,0,fc,fz      ;no carry in
022d =                  fRORc   db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
0231 =                  rINC    db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
0236 =                  fINC    db  0,fn,fn,fz,0    ;expected flags for INC/DEC
                        ;logical memory operand
023b =                  absOR   db  0,$1f,$71,$80   ;test pattern for OR
023f =                  absAN   db  $0f,$ff,$7f,$80 ;test pattern for AND
0243 =                  absEO   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
0247 =                  absORa  db  0,$f1,$1f,0     ;test pattern for OR
024b =                  absANa  db  $f0,$ff,$ff,$ff ;test pattern for AND
024f =                  absEOa  db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
0253 =                  absrlo  db  0,$ff,$7f,$80
0257 =                  absflo  db  fz,fn,0,fn
025b =                  data_bss_end
                        
                        
                                code
1000 =                          org code_segment
1000 : d8               start   cld
1001 : a2ff                     ldx #$ff
1003 : 9a                       txs
1004 : a900                     lda #0          ;*** test 0 = initialize
1006 : 8d0002                   sta test_case
0000 =                  test_num = 0
                        
                        ;stop interrupts before initializing BSS
                            if I_flag = 1
                                sei
                            endif
                            
                        ;initialize I/O for report channel
                            if report = 1
1009 : 20f256                   jsr report_init
                            endif
                            
                        ;initialize BSS segment
                            if load_data_direct != 1
100c : a246                     ldx #zp_end-zp_init-1
100e : bd3b58           ld_zp   lda zp_init,x
1011 : 9519                     sta zp_bss,x
1013 : ca                       dex
1014 : 10f8                     bpl ld_zp
1016 : a252                     ldx #data_end-data_init-1
1018 : bd8258           ld_data lda data_init,x
101b : 9d0802                   sta data_bss,x
101e : ca                       dex
101f : 10f7                     bpl ld_data
                              if ROM_vectors = 1
                                ldx #5
                        ld_vect lda vec_init,x
                                sta vec_bss,x
                                dex
                                bpl ld_vect
                              endif
                            endif
                        
                        ;retain status of interrupt flag
                            if I_flag = 2
                                php
                                pla
                                and #4          ;isolate flag
                                sta flag_I_on   ;or mask
                                eor #lo(~4)     ;reverse
                                sta flag_I_off  ;and mask
                            endif
                                
                        ;generate checksum for RAM integrity test
                            if ram_top > -1
                                lda #0 
                                sta zpt         ;set low byte of indirect pointer
                                sta ram_chksm+1 ;checksum high byte
                                sta range_adr   ;reset self modifying code
                                sta tandi1
                                sta tandi2
                                sta teori1
                                sta teori2
                                sta torai1
                                sta torai2
                                sta chkdadi  
                                sta chkdsbi
                                sta chkadi
                                sta chksbi
                                clc
                                ldx #zp_bss-zero_page ;zeropage - write test area
                        gcs3    adc zero_page,x
                                bcc gcs2
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs2    inx
                                bne gcs3
                                ldx #hi(data_segment) ;set high byte of indirect pointer
                                stx zpt+1
                                ldy #lo(data_bss) ;data after write test area
                        gcs5    adc (zpt),y
                                bcc gcs4
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs4    iny
                                bne gcs5
                                inx             ;advance RAM high address
                                stx zpt+1
                                cpx #ram_top
                                bne gcs5
                                sta ram_chksm   ;checksum complete
                            endif
                                next_test            
1021 : ad0002          >            lda test_case   ;previous test
1024 : c900            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1026 : f003            >        beq skip0002
                       >        trap            ;failed not equal (non zero)
1028 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
102b :                 >skip0002
                       >
0001 =                 >test_num = test_num + 1
102b : a901            >            lda #test_num   ;*** next tests' number
102d : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
1030 : 8d04ef            sta $ef04
1033 : 74657374696e67..  db "testing relative addressing with BEQ", 10, 0
1059 : a0fe                     ldy #$fe        ;testing maximum range, not -1/-2 (invalid/self adr)
105b :                  range_loop
105b : 88                       dey             ;next relative address
105c : 98                       tya
105d : aa                       tax             ;precharge count to end of loop
105e : 1008                     bpl range_fw    ;calculate relative address
1060 : 18                       clc             ;avoid branch self or to relative address of branch
1061 : 6902                     adc #2
1063 : ea                       nop             ;offset landing zone - tolerate +/-5 offset to branch
1064 : ea                       nop
1065 : ea                       nop
1066 : ea                       nop
1067 : ea                       nop
1068 :                  range_fw
1068 : ea                       nop
1069 : ea                       nop
106a : ea                       nop
106b : ea                       nop
106c : ea                       nop
106d : 497f                     eor #$7f        ;complement except sign
106f : 8dfb10                   sta range_adr   ;load into test target
1072 : a900                     lda #0          ;should set zero flag in status register
1074 : 4cfa10                   jmp range_op
                                
1077 : ca                       dex             ; offset landing zone - backward branch too far
1078 : ca                       dex
1079 : ca                       dex
107a : ca                       dex
107b : ca                       dex
                                ;relative address target field with branch under test in the middle                       
107c : ca                       dex             ;-128 - max backward
107d : ca                       dex
107e : ca                       dex
107f : ca                       dex
1080 : ca                       dex
1081 : ca                       dex
1082 : ca                       dex
1083 : ca                       dex
1084 : ca                       dex             ;-120
1085 : ca                       dex
1086 : ca                       dex
1087 : ca                       dex
1088 : ca                       dex
1089 : ca                       dex
108a : ca                       dex
108b : ca                       dex
108c : ca                       dex
108d : ca                       dex
108e : ca                       dex             ;-110
108f : ca                       dex
1090 : ca                       dex
1091 : ca                       dex
1092 : ca                       dex
1093 : ca                       dex
1094 : ca                       dex
1095 : ca                       dex
1096 : ca                       dex
1097 : ca                       dex
1098 : ca                       dex             ;-100
1099 : ca                       dex
109a : ca                       dex
109b : ca                       dex
109c : ca                       dex
109d : ca                       dex
109e : ca                       dex
109f : ca                       dex
10a0 : ca                       dex
10a1 : ca                       dex
10a2 : ca                       dex             ;-90
10a3 : ca                       dex
10a4 : ca                       dex
10a5 : ca                       dex
10a6 : ca                       dex
10a7 : ca                       dex
10a8 : ca                       dex
10a9 : ca                       dex
10aa : ca                       dex
10ab : ca                       dex
10ac : ca                       dex             ;-80
10ad : ca                       dex
10ae : ca                       dex
10af : ca                       dex
10b0 : ca                       dex
10b1 : ca                       dex
10b2 : ca                       dex
10b3 : ca                       dex
10b4 : ca                       dex
10b5 : ca                       dex
10b6 : ca                       dex             ;-70
10b7 : ca                       dex
10b8 : ca                       dex
10b9 : ca                       dex
10ba : ca                       dex
10bb : ca                       dex
10bc : ca                       dex
10bd : ca                       dex
10be : ca                       dex
10bf : ca                       dex
10c0 : ca                       dex             ;-60
10c1 : ca                       dex
10c2 : ca                       dex
10c3 : ca                       dex
10c4 : ca                       dex
10c5 : ca                       dex
10c6 : ca                       dex
10c7 : ca                       dex
10c8 : ca                       dex
10c9 : ca                       dex
10ca : ca                       dex             ;-50
10cb : ca                       dex
10cc : ca                       dex
10cd : ca                       dex
10ce : ca                       dex
10cf : ca                       dex
10d0 : ca                       dex
10d1 : ca                       dex
10d2 : ca                       dex
10d3 : ca                       dex
10d4 : ca                       dex             ;-40
10d5 : ca                       dex
10d6 : ca                       dex
10d7 : ca                       dex
10d8 : ca                       dex
10d9 : ca                       dex
10da : ca                       dex
10db : ca                       dex
10dc : ca                       dex
10dd : ca                       dex
10de : ca                       dex             ;-30
10df : ca                       dex
10e0 : ca                       dex
10e1 : ca                       dex
10e2 : ca                       dex
10e3 : ca                       dex
10e4 : ca                       dex
10e5 : ca                       dex
10e6 : ca                       dex
10e7 : ca                       dex
10e8 : ca                       dex             ;-20
10e9 : ca                       dex
10ea : ca                       dex
10eb : ca                       dex
10ec : ca                       dex
10ed : ca                       dex
10ee : ca                       dex
10ef : ca                       dex
10f0 : ca                       dex
10f1 : ca                       dex
10f2 : ca                       dex             ;-10
10f3 : ca                       dex
10f4 : ca                       dex
10f5 : ca                       dex
10f6 : ca                       dex
10f7 : ca                       dex
10f8 : ca                       dex
10f9 : ca                       dex             ;-3
10fa :                  range_op                ;test target with zero flag=0, z=1 if previous dex
10fb =                  range_adr   = *+1       ;modifiable relative address
10fa : f03e                     beq *+64        ;+64 if called without modification
10fc : ca                       dex             ;+0
10fd : ca                       dex
10fe : ca                       dex
10ff : ca                       dex
1100 : ca                       dex
1101 : ca                       dex
1102 : ca                       dex
1103 : ca                       dex
1104 : ca                       dex
1105 : ca                       dex
1106 : ca                       dex             ;+10
1107 : ca                       dex
1108 : ca                       dex
1109 : ca                       dex
110a : ca                       dex
110b : ca                       dex
110c : ca                       dex
110d : ca                       dex
110e : ca                       dex
110f : ca                       dex
1110 : ca                       dex             ;+20
1111 : ca                       dex
1112 : ca                       dex
1113 : ca                       dex
1114 : ca                       dex
1115 : ca                       dex
1116 : ca                       dex
1117 : ca                       dex
1118 : ca                       dex
1119 : ca                       dex
111a : ca                       dex             ;+30
111b : ca                       dex
111c : ca                       dex
111d : ca                       dex
111e : ca                       dex
111f : ca                       dex
1120 : ca                       dex
1121 : ca                       dex
1122 : ca                       dex
1123 : ca                       dex
1124 : ca                       dex             ;+40
1125 : ca                       dex
1126 : ca                       dex
1127 : ca                       dex
1128 : ca                       dex
1129 : ca                       dex
112a : ca                       dex
112b : ca                       dex
112c : ca                       dex
112d : ca                       dex
112e : ca                       dex             ;+50
112f : ca                       dex
1130 : ca                       dex
1131 : ca                       dex
1132 : ca                       dex
1133 : ca                       dex
1134 : ca                       dex
1135 : ca                       dex
1136 : ca                       dex
1137 : ca                       dex
1138 : ca                       dex             ;+60
1139 : ca                       dex
113a : ca                       dex
113b : ca                       dex
113c : ca                       dex
113d : ca                       dex
113e : ca                       dex
113f : ca                       dex
1140 : ca                       dex
1141 : ca                       dex
1142 : ca                       dex             ;+70
1143 : ca                       dex
1144 : ca                       dex
1145 : ca                       dex
1146 : ca                       dex
1147 : ca                       dex
1148 : ca                       dex
1149 : ca                       dex
114a : ca                       dex
114b : ca                       dex
114c : ca                       dex             ;+80
114d : ca                       dex
114e : ca                       dex
114f : ca                       dex
1150 : ca                       dex
1151 : ca                       dex
1152 : ca                       dex
1153 : ca                       dex
1154 : ca                       dex
1155 : ca                       dex
1156 : ca                       dex             ;+90
1157 : ca                       dex
1158 : ca                       dex
1159 : ca                       dex
115a : ca                       dex
115b : ca                       dex
115c : ca                       dex
115d : ca                       dex
115e : ca                       dex
115f : ca                       dex
1160 : ca                       dex             ;+100
1161 : ca                       dex
1162 : ca                       dex
1163 : ca                       dex
1164 : ca                       dex
1165 : ca                       dex
1166 : ca                       dex
1167 : ca                       dex
1168 : ca                       dex
1169 : ca                       dex
116a : ca                       dex             ;+110
116b : ca                       dex
116c : ca                       dex
116d : ca                       dex
116e : ca                       dex
116f : ca                       dex
1170 : ca                       dex
1171 : ca                       dex
1172 : ca                       dex
1173 : ca                       dex
1174 : ca                       dex             ;+120
1175 : ca                       dex
1176 : ca                       dex
1177 : ca                       dex
1178 : ca                       dex
1179 : ca                       dex
117a : ca                       dex
117b : ea                       nop             ;offset landing zone - forward branch too far
117c : ea                       nop
117d : ea                       nop
117e : ea                       nop
117f : ea                       nop
1180 : f008                     beq range_ok    ;+127 - max forward
                                trap            ; bad range
1182 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1185 : ea                       nop             ;offset landing zone - tolerate +/-5 offset to branch
1186 : ea                       nop
1187 : ea                       nop
1188 : ea                       nop
1189 : ea                       nop
118a :                  range_ok
118a : ea                       nop
118b : ea                       nop
118c : ea                       nop
118d : ea                       nop
118e : ea                       nop
118f : c000                     cpy #0
1191 : f003                     beq range_end   
1193 : 4c5b10                   jmp range_loop
1196 :                  range_end               ;range test successful
                                next_test
1196 : ad0002          >            lda test_case   ;previous test
1199 : c901            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
119b : f003            >        beq skip0006
                       >        trap            ;failed not equal (non zero)
119d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11a0 :                 >skip0006
                       >
0002 =                 >test_num = test_num + 1
11a0 : a902            >            lda #test_num   ;*** next tests' number
11a2 : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
11a5 : 8d04ef            sta $ef04
11a8 : 7061727469616c..  db "partial test BNE & CMP, CPX, CPY immediate", 10, 0
11d4 : c001                     cpy #1          ;testing BNE true
11d6 : d003                     bne test_bne
                                trap 
11d8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
11db :                  test_bne
11db : a900                     lda #0 
11dd : c900                     cmp #0          ;test compare immediate 
                                trap_ne
11df : f003            >        beq skip0009
                       >        trap            ;failed not equal (non zero)
11e1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11e4 :                 >skip0009
                        
                                trap_cc
11e4 : b003            >        bcs skip0011
                       >        trap            ;failed carry clear
11e6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11e9 :                 >skip0011
                        
                                trap_mi
11e9 : 1003            >        bpl skip0013
                       >        trap            ;failed minus (bit 7 set)
11eb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11ee :                 >skip0013
                        
11ee : c901                     cmp #1
                                trap_eq 
11f0 : d003            >        bne skip0015
                       >        trap           ;failed equal (zero)
11f2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11f5 :                 >skip0015
                        
                                trap_cs
11f5 : 9003            >        bcc skip0017
                       >        trap            ;failed carry set
11f7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11fa :                 >skip0017
                        
                                trap_pl
11fa : 3003            >        bmi skip0019
                       >        trap            ;failed plus (bit 7 clear)
11fc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11ff :                 >skip0019
                        
11ff : aa                       tax 
1200 : e000                     cpx #0          ;test compare x immediate
                                trap_ne
1202 : f003            >        beq skip0021
                       >        trap            ;failed not equal (non zero)
1204 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1207 :                 >skip0021
                        
                                trap_cc
1207 : b003            >        bcs skip0023
                       >        trap            ;failed carry clear
1209 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
120c :                 >skip0023
                        
                                trap_mi
120c : 1003            >        bpl skip0025
                       >        trap            ;failed minus (bit 7 set)
120e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1211 :                 >skip0025
                        
1211 : e001                     cpx #1
                                trap_eq 
1213 : d003            >        bne skip0027
                       >        trap           ;failed equal (zero)
1215 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1218 :                 >skip0027
                        
                                trap_cs
1218 : 9003            >        bcc skip0029
                       >        trap            ;failed carry set
121a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
121d :                 >skip0029
                        
                                trap_pl
121d : 3003            >        bmi skip0031
                       >        trap            ;failed plus (bit 7 clear)
121f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1222 :                 >skip0031
                        
1222 : a8                       tay 
1223 : c000                     cpy #0          ;test compare y immediate
                                trap_ne
1225 : f003            >        beq skip0033
                       >        trap            ;failed not equal (non zero)
1227 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
122a :                 >skip0033
                        
                                trap_cc
122a : b003            >        bcs skip0035
                       >        trap            ;failed carry clear
122c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
122f :                 >skip0035
                        
                                trap_mi
122f : 1003            >        bpl skip0037
                       >        trap            ;failed minus (bit 7 set)
1231 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1234 :                 >skip0037
                        
1234 : c001                     cpy #1
                                trap_eq 
1236 : d003            >        bne skip0039
                       >        trap           ;failed equal (zero)
1238 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
123b :                 >skip0039
                        
                                trap_cs
123b : 9003            >        bcc skip0041
                       >        trap            ;failed carry set
123d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1240 :                 >skip0041
                        
                                trap_pl
1240 : 3003            >        bmi skip0043
                       >        trap            ;failed plus (bit 7 clear)
1242 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1245 :                 >skip0043
                        
                                next_test
1245 : ad0002          >            lda test_case   ;previous test
1248 : c902            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
124a : f003            >        beq skip0046
                       >        trap            ;failed not equal (non zero)
124c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
124f :                 >skip0046
                       >
0003 =                 >test_num = test_num + 1
124f : a903            >            lda #test_num   ;*** next tests' number
1251 : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
1254 : 8d04ef            sta $ef04
1257 : 74657374696e67..  db "testing stack operations PHA PHP PLA PLP", 10, 0
                                    
1281 : a2ff                     ldx #$ff        ;initialize stack
1283 : 9a                       txs
1284 : a955                     lda #$55
1286 : 48                       pha
1287 : a9aa                     lda #$aa
1289 : 48                       pha
128a : cdfe01                   cmp $1fe        ;on stack ?
                                trap_ne
128d : f003            >        beq skip0048
                       >        trap            ;failed not equal (non zero)
128f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1292 :                 >skip0048
                        
1292 : ba                       tsx
1293 : 8a                       txa             ;overwrite accu
1294 : c9fd                     cmp #$fd        ;sp decremented?
                                trap_ne
1296 : f003            >        beq skip0050
                       >        trap            ;failed not equal (non zero)
1298 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
129b :                 >skip0050
                        
129b : 68                       pla
129c : c9aa                     cmp #$aa        ;successful retreived from stack?
                                trap_ne
129e : f003            >        beq skip0052
                       >        trap            ;failed not equal (non zero)
12a0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12a3 :                 >skip0052
                        
12a3 : 68                       pla
12a4 : c955                     cmp #$55
                                trap_ne
12a6 : f003            >        beq skip0054
                       >        trap            ;failed not equal (non zero)
12a8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12ab :                 >skip0054
                        
12ab : cdff01                   cmp $1ff        ;remains on stack?
                                trap_ne
12ae : f003            >        beq skip0056
                       >        trap            ;failed not equal (non zero)
12b0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12b3 :                 >skip0056
                        
12b3 : ba                       tsx
12b4 : e0ff                     cpx #$ff        ;sp incremented?
                                trap_ne
12b6 : f003            >        beq skip0058
                       >        trap            ;failed not equal (non zero)
12b8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12bb :                 >skip0058
                        
                                next_test
12bb : ad0002          >            lda test_case   ;previous test
12be : c903            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
12c0 : f003            >        beq skip0061
                       >        trap            ;failed not equal (non zero)
12c2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12c5 :                 >skip0061
                       >
0004 =                 >test_num = test_num + 1
12c5 : a904            >            lda #test_num   ;*** next tests' number
12c7 : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
12ca : 8d04ef            sta $ef04
12cd : 74657374696e67..  db "testing branch decisions BPL BMI BVC BVS BCC BCS BNE BEQ", 10, 0
                                set_stat $ff    ;all on
                       >            load_flag $ff    
1307 : a9ff            >            lda #$ff                 ;allow test to change I-flag (no mask)
                       >
1309 : 48              >            pha         ;use stack to load status
130a : 28              >            plp
                        
130b : 101a                     bpl nbr1        ;branches should not be taken
130d : 501b                     bvc nbr2
130f : 901c                     bcc nbr3
1311 : d01d                     bne nbr4
1313 : 3003                     bmi br1         ;branches should be taken
                                trap 
1315 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1318 : 7003             br1     bvs br2
                                trap 
131a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
131d : b003             br2     bcs br3
                                trap 
131f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1322 : f00f             br3     beq br4
                                trap 
1324 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1327 :                  nbr1
                                trap            ;previous bpl taken 
1327 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
132a :                  nbr2
                                trap            ;previous bvc taken
132a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
132d :                  nbr3
                                trap            ;previous bcc taken
132d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1330 :                  nbr4
                                trap            ;previous bne taken
1330 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1333 : 08               br4     php
1334 : ba                       tsx
1335 : e0fe                     cpx #$fe        ;sp after php?
                                trap_ne
1337 : f003            >        beq skip0073
                       >        trap            ;failed not equal (non zero)
1339 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
133c :                 >skip0073
                        
133c : 68                       pla
                                cmp_flag $ff    ;returned all flags on?
133d : c9ff            >            cmp #($ff    |fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
133f : f003            >        beq skip0076
                       >        trap            ;failed not equal (non zero)
1341 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1344 :                 >skip0076
                        
1344 : ba                       tsx
1345 : e0ff                     cpx #$ff        ;sp after php?
                                trap_ne
1347 : f003            >        beq skip0078
                       >        trap            ;failed not equal (non zero)
1349 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
134c :                 >skip0078
                        
                                set_stat 0      ;all off
                       >            load_flag 0      
134c : a900            >            lda #0                   ;allow test to change I-flag (no mask)
                       >
134e : 48              >            pha         ;use stack to load status
134f : 28              >            plp
                        
1350 : 301a                     bmi nbr11       ;branches should not be taken
1352 : 701b                     bvs nbr12
1354 : b01c                     bcs nbr13
1356 : f01d                     beq nbr14
1358 : 1003                     bpl br11        ;branches should be taken
                                trap 
135a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
135d : 5003             br11    bvc br12
                                trap 
135f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1362 : 9003             br12    bcc br13
                                trap 
1364 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1367 : d00f             br13    bne br14
                                trap 
1369 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
136c :                  nbr11
                                trap            ;previous bmi taken 
136c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
136f :                  nbr12
                                trap            ;previous bvs taken 
136f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1372 :                  nbr13
                                trap            ;previous bcs taken 
1372 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1375 :                  nbr14
                                trap            ;previous beq taken 
1375 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1378 : 08               br14    php
1379 : 68                       pla
                                cmp_flag 0      ;flags off except break (pushed by sw) + reserved?
137a : c930            >            cmp #(0      |fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
137c : f003            >        beq skip0091
                       >        trap            ;failed not equal (non zero)
137e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1381 :                 >skip0091
                        
                                ;crosscheck flags
                                set_stat zero
                       >            load_flag zero
1381 : a902            >            lda #zero             ;allow test to change I-flag (no mask)
                       >
1383 : 48              >            pha         ;use stack to load status
1384 : 28              >            plp
                        
1385 : d002                     bne brzs1
1387 : f003                     beq brzs2
1389 :                  brzs1
                                trap            ;branch zero/non zero
1389 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
138c : b002             brzs2   bcs brzs3
138e : 9003                     bcc brzs4
1390 :                  brzs3
                                trap            ;branch carry/no carry
1390 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1393 : 3002             brzs4   bmi brzs5
1395 : 1003                     bpl brzs6
1397 :                  brzs5
                                trap            ;branch minus/plus
1397 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
139a : 7002             brzs6   bvs brzs7
139c : 5003                     bvc brzs8
139e :                  brzs7
                                trap            ;branch overflow/no overflow
139e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
13a1 :                  brzs8
                                set_stat carry
                       >            load_flag carry
13a1 : a901            >            lda #carry             ;allow test to change I-flag (no mask)
                       >
13a3 : 48              >            pha         ;use stack to load status
13a4 : 28              >            plp
                        
13a5 : f002                     beq brcs1
13a7 : d003                     bne brcs2
13a9 :                  brcs1
                                trap            ;branch zero/non zero
13a9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
13ac : 9002             brcs2   bcc brcs3
13ae : b003                     bcs brcs4
13b0 :                  brcs3
                                trap            ;branch carry/no carry
13b0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
13b3 : 3002             brcs4   bmi brcs5
13b5 : 1003                     bpl brcs6
13b7 :                  brcs5
                                trap            ;branch minus/plus
13b7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
13ba : 7002             brcs6   bvs brcs7
13bc : 5003                     bvc brcs8
13be :                  brcs7
                                trap            ;branch overflow/no overflow
13be : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
                        
13c1 :                  brcs8
                                set_stat minus
                       >            load_flag minus
13c1 : a980            >            lda #minus             ;allow test to change I-flag (no mask)
                       >
13c3 : 48              >            pha         ;use stack to load status
13c4 : 28              >            plp
                        
13c5 : f002                     beq brmi1
13c7 : d003                     bne brmi2
13c9 :                  brmi1
                                trap            ;branch zero/non zero
13c9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
13cc : b002             brmi2   bcs brmi3
13ce : 9003                     bcc brmi4
13d0 :                  brmi3
                                trap            ;branch carry/no carry
13d0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
13d3 : 1002             brmi4   bpl brmi5
13d5 : 3003                     bmi brmi6
13d7 :                  brmi5
                                trap            ;branch minus/plus
13d7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
13da : 7002             brmi6   bvs brmi7
13dc : 5003                     bvc brmi8
13de :                  brmi7
                                trap            ;branch overflow/no overflow
13de : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
13e1 :                  brmi8
                                set_stat overfl
                       >            load_flag overfl
13e1 : a940            >            lda #overfl             ;allow test to change I-flag (no mask)
                       >
13e3 : 48              >            pha         ;use stack to load status
13e4 : 28              >            plp
                        
13e5 : f002                     beq brvs1
13e7 : d003                     bne brvs2
13e9 :                  brvs1
                                trap            ;branch zero/non zero
13e9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
13ec : b002             brvs2   bcs brvs3
13ee : 9003                     bcc brvs4
13f0 :                  brvs3
                                trap            ;branch carry/no carry
13f0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
13f3 : 3002             brvs4   bmi brvs5
13f5 : 1003                     bpl brvs6
13f7 :                  brvs5
                                trap            ;branch minus/plus
13f7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
13fa : 5002             brvs6   bvc brvs7
13fc : 7003                     bvs brvs8
13fe :                  brvs7
                                trap            ;branch overflow/no overflow
13fe : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1401 :                  brvs8
                                set_stat $ff-zero
                       >            load_flag $ff-zero
1401 : a9fd            >            lda #$ff-zero             ;allow test to change I-flag (no mask)
                       >
1403 : 48              >            pha         ;use stack to load status
1404 : 28              >            plp
                        
1405 : f002                     beq brzc1
1407 : d003                     bne brzc2
1409 :                  brzc1
                                trap            ;branch zero/non zero
1409 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
140c : 9002             brzc2   bcc brzc3
140e : b003                     bcs brzc4
1410 :                  brzc3
                                trap            ;branch carry/no carry
1410 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1413 : 1002             brzc4   bpl brzc5
1415 : 3003                     bmi brzc6
1417 :                  brzc5
                                trap            ;branch minus/plus
1417 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
141a : 5002             brzc6   bvc brzc7
141c : 7003                     bvs brzc8
141e :                  brzc7
                                trap            ;branch overflow/no overflow
141e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1421 :                  brzc8
                                set_stat $ff-carry
                       >            load_flag $ff-carry
1421 : a9fe            >            lda #$ff-carry             ;allow test to change I-flag (no mask)
                       >
1423 : 48              >            pha         ;use stack to load status
1424 : 28              >            plp
                        
1425 : d002                     bne brcc1
1427 : f003                     beq brcc2
1429 :                  brcc1
                                trap            ;branch zero/non zero
1429 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
142c : b002             brcc2   bcs brcc3
142e : 9003                     bcc brcc4
1430 :                  brcc3
                                trap            ;branch carry/no carry
1430 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1433 : 1002             brcc4   bpl brcc5
1435 : 3003                     bmi brcc6
1437 :                  brcc5
                                trap            ;branch minus/plus
1437 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
143a : 5002             brcc6   bvc brcc7
143c : 7003                     bvs brcc8
143e :                  brcc7
                                trap            ;branch overflow/no overflow
143e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1441 :                  brcc8
                                set_stat $ff-minus
                       >            load_flag $ff-minus
1441 : a97f            >            lda #$ff-minus             ;allow test to change I-flag (no mask)
                       >
1443 : 48              >            pha         ;use stack to load status
1444 : 28              >            plp
                        
1445 : d002                     bne brpl1
1447 : f003                     beq brpl2
1449 :                  brpl1
                                trap            ;branch zero/non zero
1449 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
144c : 9002             brpl2   bcc brpl3
144e : b003                     bcs brpl4
1450 :                  brpl3
                                trap            ;branch carry/no carry
1450 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1453 : 3002             brpl4   bmi brpl5
1455 : 1003                     bpl brpl6
1457 :                  brpl5
                                trap            ;branch minus/plus
1457 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
145a : 5002             brpl6   bvc brpl7
145c : 7003                     bvs brpl8
145e :                  brpl7
                                trap            ;branch overflow/no overflow
145e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1461 :                  brpl8
                                set_stat $ff-overfl
                       >            load_flag $ff-overfl
1461 : a9bf            >            lda #$ff-overfl             ;allow test to change I-flag (no mask)
                       >
1463 : 48              >            pha         ;use stack to load status
1464 : 28              >            plp
                        
1465 : d002                     bne brvc1
1467 : f003                     beq brvc2
1469 :                  brvc1
                                trap            ;branch zero/non zero
1469 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
146c : 9002             brvc2   bcc brvc3
146e : b003                     bcs brvc4
1470 :                  brvc3
                                trap            ;branch carry/no carry
1470 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1473 : 1002             brvc4   bpl brvc5
1475 : 3003                     bmi brvc6
1477 :                  brvc5
                                trap            ;branch minus/plus
1477 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
147a : 7002             brvc6   bvs brvc7
147c : 5003                     bvc brvc8
147e :                  brvc7
                                trap            ;branch overflow/no overflow
147e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1481 :                  brvc8
                                next_test
1481 : ad0002          >            lda test_case   ;previous test
1484 : c904            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1486 : f003            >        beq skip0142
                       >        trap            ;failed not equal (non zero)
1488 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
148b :                 >skip0142
                       >
0005 =                 >test_num = test_num + 1
148b : a905            >            lda #test_num   ;*** next tests' number
148d : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
1490 : 8d04ef            sta $ef04
1493 : 74657374205048..  db "test PHA does not alter flags or accumulator but PLA does", 10, 0
14ce : a255                     ldx #$55        ;x & y protected
14d0 : a0aa                     ldy #$aa
                                set_a 1,$ff     ;push
                       >            load_flag $ff     
14d2 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
14d4 : 48              >            pha         ;use stack to load status
14d5 : a901            >            lda #1     ;precharge accu
14d7 : 28              >            plp
                        
14d8 : 48                       pha
                                tst_a 1,$ff
14d9 : 08              >            php         ;save flags
14da : c901            >            cmp #1     ;test result
                       >            trap_ne
14dc : f003            >        beq skip0147
                       >        trap            ;failed not equal (non zero)
14de : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14e1 :                 >skip0147
                       >
14e1 : 68              >            pla         ;load status
14e2 : 48              >            pha
                       >            cmp_flag $ff
14e3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
14e5 : f003            >        beq skip0150
                       >        trap            ;failed not equal (non zero)
14e7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14ea :                 >skip0150
                       >
14ea : 28              >            plp         ;restore status
                        
                                set_a 0,0
                       >            load_flag 0
14eb : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
14ed : 48              >            pha         ;use stack to load status
14ee : a900            >            lda #0     ;precharge accu
14f0 : 28              >            plp
                        
14f1 : 48                       pha
                                tst_a 0,0
14f2 : 08              >            php         ;save flags
14f3 : c900            >            cmp #0     ;test result
                       >            trap_ne
14f5 : f003            >        beq skip0155
                       >        trap            ;failed not equal (non zero)
14f7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14fa :                 >skip0155
                       >
14fa : 68              >            pla         ;load status
14fb : 48              >            pha
                       >            cmp_flag 0
14fc : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
14fe : f003            >        beq skip0158
                       >        trap            ;failed not equal (non zero)
1500 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1503 :                 >skip0158
                       >
1503 : 28              >            plp         ;restore status
                        
                                set_a $ff,$ff
                       >            load_flag $ff
1504 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1506 : 48              >            pha         ;use stack to load status
1507 : a9ff            >            lda #$ff     ;precharge accu
1509 : 28              >            plp
                        
150a : 48                       pha
                                tst_a $ff,$ff
150b : 08              >            php         ;save flags
150c : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
150e : f003            >        beq skip0163
                       >        trap            ;failed not equal (non zero)
1510 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1513 :                 >skip0163
                       >
1513 : 68              >            pla         ;load status
1514 : 48              >            pha
                       >            cmp_flag $ff
1515 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1517 : f003            >        beq skip0166
                       >        trap            ;failed not equal (non zero)
1519 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
151c :                 >skip0166
                       >
151c : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
151d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
151f : 48              >            pha         ;use stack to load status
1520 : a901            >            lda #1     ;precharge accu
1522 : 28              >            plp
                        
1523 : 48                       pha
                                tst_a 1,0
1524 : 08              >            php         ;save flags
1525 : c901            >            cmp #1     ;test result
                       >            trap_ne
1527 : f003            >        beq skip0171
                       >        trap            ;failed not equal (non zero)
1529 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
152c :                 >skip0171
                       >
152c : 68              >            pla         ;load status
152d : 48              >            pha
                       >            cmp_flag 0
152e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1530 : f003            >        beq skip0174
                       >        trap            ;failed not equal (non zero)
1532 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1535 :                 >skip0174
                       >
1535 : 28              >            plp         ;restore status
                        
                                set_a 0,$ff
                       >            load_flag $ff
1536 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1538 : 48              >            pha         ;use stack to load status
1539 : a900            >            lda #0     ;precharge accu
153b : 28              >            plp
                        
153c : 48                       pha
                                tst_a 0,$ff
153d : 08              >            php         ;save flags
153e : c900            >            cmp #0     ;test result
                       >            trap_ne
1540 : f003            >        beq skip0179
                       >        trap            ;failed not equal (non zero)
1542 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1545 :                 >skip0179
                       >
1545 : 68              >            pla         ;load status
1546 : 48              >            pha
                       >            cmp_flag $ff
1547 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1549 : f003            >        beq skip0182
                       >        trap            ;failed not equal (non zero)
154b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
154e :                 >skip0182
                       >
154e : 28              >            plp         ;restore status
                        
                                set_a $ff,0
                       >            load_flag 0
154f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1551 : 48              >            pha         ;use stack to load status
1552 : a9ff            >            lda #$ff     ;precharge accu
1554 : 28              >            plp
                        
1555 : 48                       pha
                                tst_a $ff,0
1556 : 08              >            php         ;save flags
1557 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
1559 : f003            >        beq skip0187
                       >        trap            ;failed not equal (non zero)
155b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
155e :                 >skip0187
                       >
155e : 68              >            pla         ;load status
155f : 48              >            pha
                       >            cmp_flag 0
1560 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1562 : f003            >        beq skip0190
                       >        trap            ;failed not equal (non zero)
1564 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1567 :                 >skip0190
                       >
1567 : 28              >            plp         ;restore status
                        
                                set_a 0,$ff     ;pull
                       >            load_flag $ff     
1568 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
156a : 48              >            pha         ;use stack to load status
156b : a900            >            lda #0     ;precharge accu
156d : 28              >            plp
                        
156e : 68                       pla
                                tst_a $ff,$ff-zero
156f : 08              >            php         ;save flags
1570 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
1572 : f003            >        beq skip0195
                       >        trap            ;failed not equal (non zero)
1574 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1577 :                 >skip0195
                       >
1577 : 68              >            pla         ;load status
1578 : 48              >            pha
                       >            cmp_flag $ff-zero
1579 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
157b : f003            >        beq skip0198
                       >        trap            ;failed not equal (non zero)
157d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1580 :                 >skip0198
                       >
1580 : 28              >            plp         ;restore status
                        
                                set_a $ff,0
                       >            load_flag 0
1581 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1583 : 48              >            pha         ;use stack to load status
1584 : a9ff            >            lda #$ff     ;precharge accu
1586 : 28              >            plp
                        
1587 : 68                       pla
                                tst_a 0,zero
1588 : 08              >            php         ;save flags
1589 : c900            >            cmp #0     ;test result
                       >            trap_ne
158b : f003            >        beq skip0203
                       >        trap            ;failed not equal (non zero)
158d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1590 :                 >skip0203
                       >
1590 : 68              >            pla         ;load status
1591 : 48              >            pha
                       >            cmp_flag zero
1592 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1594 : f003            >        beq skip0206
                       >        trap            ;failed not equal (non zero)
1596 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1599 :                 >skip0206
                       >
1599 : 28              >            plp         ;restore status
                        
                                set_a $fe,$ff
                       >            load_flag $ff
159a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
159c : 48              >            pha         ;use stack to load status
159d : a9fe            >            lda #$fe     ;precharge accu
159f : 28              >            plp
                        
15a0 : 68                       pla
                                tst_a 1,$ff-zero-minus
15a1 : 08              >            php         ;save flags
15a2 : c901            >            cmp #1     ;test result
                       >            trap_ne
15a4 : f003            >        beq skip0211
                       >        trap            ;failed not equal (non zero)
15a6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15a9 :                 >skip0211
                       >
15a9 : 68              >            pla         ;load status
15aa : 48              >            pha
                       >            cmp_flag $ff-zero-minus
15ab : c97d            >            cmp #($ff-zero-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
15ad : f003            >        beq skip0214
                       >        trap            ;failed not equal (non zero)
15af : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15b2 :                 >skip0214
                       >
15b2 : 28              >            plp         ;restore status
                        
                                set_a 0,0
                       >            load_flag 0
15b3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
15b5 : 48              >            pha         ;use stack to load status
15b6 : a900            >            lda #0     ;precharge accu
15b8 : 28              >            plp
                        
15b9 : 68                       pla
                                tst_a $ff,minus
15ba : 08              >            php         ;save flags
15bb : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
15bd : f003            >        beq skip0219
                       >        trap            ;failed not equal (non zero)
15bf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15c2 :                 >skip0219
                       >
15c2 : 68              >            pla         ;load status
15c3 : 48              >            pha
                       >            cmp_flag minus
15c4 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
15c6 : f003            >        beq skip0222
                       >        trap            ;failed not equal (non zero)
15c8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15cb :                 >skip0222
                       >
15cb : 28              >            plp         ;restore status
                        
                                set_a $ff,$ff
                       >            load_flag $ff
15cc : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
15ce : 48              >            pha         ;use stack to load status
15cf : a9ff            >            lda #$ff     ;precharge accu
15d1 : 28              >            plp
                        
15d2 : 68                       pla
                                tst_a 0,$ff-minus
15d3 : 08              >            php         ;save flags
15d4 : c900            >            cmp #0     ;test result
                       >            trap_ne
15d6 : f003            >        beq skip0227
                       >        trap            ;failed not equal (non zero)
15d8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15db :                 >skip0227
                       >
15db : 68              >            pla         ;load status
15dc : 48              >            pha
                       >            cmp_flag $ff-minus
15dd : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
15df : f003            >        beq skip0230
                       >        trap            ;failed not equal (non zero)
15e1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15e4 :                 >skip0230
                       >
15e4 : 28              >            plp         ;restore status
                        
                                set_a $fe,0
                       >            load_flag 0
15e5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
15e7 : 48              >            pha         ;use stack to load status
15e8 : a9fe            >            lda #$fe     ;precharge accu
15ea : 28              >            plp
                        
15eb : 68                       pla
                                tst_a 1,0
15ec : 08              >            php         ;save flags
15ed : c901            >            cmp #1     ;test result
                       >            trap_ne
15ef : f003            >        beq skip0235
                       >        trap            ;failed not equal (non zero)
15f1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15f4 :                 >skip0235
                       >
15f4 : 68              >            pla         ;load status
15f5 : 48              >            pha
                       >            cmp_flag 0
15f6 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
15f8 : f003            >        beq skip0238
                       >        trap            ;failed not equal (non zero)
15fa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15fd :                 >skip0238
                       >
15fd : 28              >            plp         ;restore status
                        
15fe : e055                     cpx #$55        ;x & y unchanged?
                                trap_ne
1600 : f003            >        beq skip0240
                       >        trap            ;failed not equal (non zero)
1602 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1605 :                 >skip0240
                        
1605 : c0aa                     cpy #$aa
                                trap_ne
1607 : f003            >        beq skip0242
                       >        trap            ;failed not equal (non zero)
1609 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
160c :                 >skip0242
                        
                                next_test
160c : ad0002          >            lda test_case   ;previous test
160f : c905            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1611 : f003            >        beq skip0245
                       >        trap            ;failed not equal (non zero)
1613 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1616 :                 >skip0245
                       >
0006 =                 >test_num = test_num + 1
1616 : a906            >            lda #test_num   ;*** next tests' number
1618 : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                         
161b : 8d04ef            sta $ef04
161e : 7061727469616c..  db "partial pretest EOR #", 10, 0
                                set_a $3c,0
                       >            load_flag 0
1635 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1637 : 48              >            pha         ;use stack to load status
1638 : a93c            >            lda #$3c     ;precharge accu
163a : 28              >            plp
                        
163b : 49c3                     eor #$c3
                                tst_a $ff,fn
163d : 08              >            php         ;save flags
163e : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
1640 : f003            >        beq skip0250
                       >        trap            ;failed not equal (non zero)
1642 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1645 :                 >skip0250
                       >
1645 : 68              >            pla         ;load status
1646 : 48              >            pha
                       >            cmp_flag fn
1647 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1649 : f003            >        beq skip0253
                       >        trap            ;failed not equal (non zero)
164b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
164e :                 >skip0253
                       >
164e : 28              >            plp         ;restore status
                        
                                set_a $c3,0
                       >            load_flag 0
164f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1651 : 48              >            pha         ;use stack to load status
1652 : a9c3            >            lda #$c3     ;precharge accu
1654 : 28              >            plp
                        
1655 : 49c3                     eor #$c3
                                tst_a 0,fz
1657 : 08              >            php         ;save flags
1658 : c900            >            cmp #0     ;test result
                       >            trap_ne
165a : f003            >        beq skip0258
                       >        trap            ;failed not equal (non zero)
165c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
165f :                 >skip0258
                       >
165f : 68              >            pla         ;load status
1660 : 48              >            pha
                       >            cmp_flag fz
1661 : c932            >            cmp #(fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1663 : f003            >        beq skip0261
                       >        trap            ;failed not equal (non zero)
1665 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1668 :                 >skip0261
                       >
1668 : 28              >            plp         ;restore status
                        
                                next_test
1669 : ad0002          >            lda test_case   ;previous test
166c : c906            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
166e : f003            >        beq skip0264
                       >        trap            ;failed not equal (non zero)
1670 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1673 :                 >skip0264
                       >
0007 =                 >test_num = test_num + 1
1673 : a907            >            lda #test_num   ;*** next tests' number
1675 : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
1678 : 8d04ef            sta $ef04
167b : 5043206d6f6469..  db "PC modifying instructions except branches (NOP, JMP, JSR, RTS, BRK, RTI)", 10, 0
16c5 : 8d04ef            sta $ef04
16c8 : 74657374696e67..  db "testing NOP", 10, 0
16d5 : a224                     ldx #$24
16d7 : a042                     ldy #$42
                                set_a $18,0
                       >            load_flag 0
16d9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
16db : 48              >            pha         ;use stack to load status
16dc : a918            >            lda #$18     ;precharge accu
16de : 28              >            plp
                        
16df : ea                       nop
                                tst_a $18,0
16e0 : 08              >            php         ;save flags
16e1 : c918            >            cmp #$18     ;test result
                       >            trap_ne
16e3 : f003            >        beq skip0269
                       >        trap            ;failed not equal (non zero)
16e5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16e8 :                 >skip0269
                       >
16e8 : 68              >            pla         ;load status
16e9 : 48              >            pha
                       >            cmp_flag 0
16ea : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
16ec : f003            >        beq skip0272
                       >        trap            ;failed not equal (non zero)
16ee : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16f1 :                 >skip0272
                       >
16f1 : 28              >            plp         ;restore status
                        
16f2 : e024                     cpx #$24
                                trap_ne
16f4 : f003            >        beq skip0274
                       >        trap            ;failed not equal (non zero)
16f6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16f9 :                 >skip0274
                        
16f9 : c042                     cpy #$42
                                trap_ne
16fb : f003            >        beq skip0276
                       >        trap            ;failed not equal (non zero)
16fd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1700 :                 >skip0276
                        
1700 : a2db                     ldx #$db
1702 : a0bd                     ldy #$bd
                                set_a $e7,$ff
                       >            load_flag $ff
1704 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1706 : 48              >            pha         ;use stack to load status
1707 : a9e7            >            lda #$e7     ;precharge accu
1709 : 28              >            plp
                        
170a : ea                       nop
                                tst_a $e7,$ff
170b : 08              >            php         ;save flags
170c : c9e7            >            cmp #$e7     ;test result
                       >            trap_ne
170e : f003            >        beq skip0281
                       >        trap            ;failed not equal (non zero)
1710 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1713 :                 >skip0281
                       >
1713 : 68              >            pla         ;load status
1714 : 48              >            pha
                       >            cmp_flag $ff
1715 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1717 : f003            >        beq skip0284
                       >        trap            ;failed not equal (non zero)
1719 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
171c :                 >skip0284
                       >
171c : 28              >            plp         ;restore status
                        
171d : e0db                     cpx #$db
                                trap_ne
171f : f003            >        beq skip0286
                       >        trap            ;failed not equal (non zero)
1721 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1724 :                 >skip0286
                        
1724 : c0bd                     cpy #$bd
                                trap_ne
1726 : f003            >        beq skip0288
                       >        trap            ;failed not equal (non zero)
1728 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
172b :                 >skip0288
                        
                                next_test
172b : ad0002          >            lda test_case   ;previous test
172e : c907            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1730 : f003            >        beq skip0291
                       >        trap            ;failed not equal (non zero)
1732 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1735 :                 >skip0291
                       >
0008 =                 >test_num = test_num + 1
1735 : a908            >            lda #test_num   ;*** next tests' number
1737 : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
173a : 8d04ef            sta $ef04
173d : 6a756d70206162..  db "jump absolute", 10, 0
                                set_stat $0
                       >            load_flag $0
174c : a900            >            lda #$0             ;allow test to change I-flag (no mask)
                       >
174e : 48              >            pha         ;use stack to load status
174f : 28              >            plp
                        
1750 : a946                     lda #'F'
1752 : a241                     ldx #'A'
1754 : a052                     ldy #'R'        ;N=0, V=0, Z=0, C=0
1756 : 4c9955                   jmp test_far
1759 : ea                       nop
175a : ea                       nop
                                trap_ne         ;runover protection
175b : f003            >        beq skip0295
                       >        trap            ;failed not equal (non zero)
175d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1760 :                 >skip0295
                        
1760 : e8                       inx
1761 : e8                       inx
1762 :                  far_ret 
                                trap_eq         ;returned flags OK?
1762 : d003            >        bne skip0297
                       >        trap           ;failed equal (zero)
1764 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1767 :                 >skip0297
                        
                                trap_pl
1767 : 3003            >        bmi skip0299
                       >        trap            ;failed plus (bit 7 clear)
1769 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
176c :                 >skip0299
                        
                                trap_cc
176c : b003            >        bcs skip0301
                       >        trap            ;failed carry clear
176e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1771 :                 >skip0301
                        
                                trap_vc
1771 : 7003            >        bvs skip0303
                       >        trap            ;failed overflow clear
1773 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1776 :                 >skip0303
                        
1776 : c9ec                     cmp #('F'^$aa)  ;returned registers OK?
                                trap_ne
1778 : f003            >        beq skip0305
                       >        trap            ;failed not equal (non zero)
177a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
177d :                 >skip0305
                        
177d : e042                     cpx #('A'+1)
                                trap_ne
177f : f003            >        beq skip0307
                       >        trap            ;failed not equal (non zero)
1781 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1784 :                 >skip0307
                        
1784 : c04f                     cpy #('R'-3)
                                trap_ne
1786 : f003            >        beq skip0309
                       >        trap            ;failed not equal (non zero)
1788 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
178b :                 >skip0309
                        
178b : ca                       dex
178c : c8                       iny
178d : c8                       iny
178e : c8                       iny
178f : 49aa                     eor #$aa        ;N=0, V=1, Z=0, C=1
1791 : 4c9d17                   jmp test_near
1794 : ea                       nop
1795 : ea                       nop
                                trap_ne         ;runover protection
1796 : f003            >        beq skip0311
                       >        trap            ;failed not equal (non zero)
1798 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
179b :                 >skip0311
                        
179b : e8                       inx
179c : e8                       inx
179d :                  test_near
                                trap_eq         ;passed flags OK?
179d : d003            >        bne skip0313
                       >        trap           ;failed equal (zero)
179f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17a2 :                 >skip0313
                        
                                trap_mi
17a2 : 1003            >        bpl skip0315
                       >        trap            ;failed minus (bit 7 set)
17a4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17a7 :                 >skip0315
                        
                                trap_cc
17a7 : b003            >        bcs skip0317
                       >        trap            ;failed carry clear
17a9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17ac :                 >skip0317
                        
                                trap_vc
17ac : 7003            >        bvs skip0319
                       >        trap            ;failed overflow clear
17ae : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17b1 :                 >skip0319
                        
17b1 : c946                     cmp #'F'        ;passed registers OK?
                                trap_ne
17b3 : f003            >        beq skip0321
                       >        trap            ;failed not equal (non zero)
17b5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17b8 :                 >skip0321
                        
17b8 : e041                     cpx #'A'
                                trap_ne
17ba : f003            >        beq skip0323
                       >        trap            ;failed not equal (non zero)
17bc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17bf :                 >skip0323
                        
17bf : c052                     cpy #'R'
                                trap_ne
17c1 : f003            >        beq skip0325
                       >        trap            ;failed not equal (non zero)
17c3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17c6 :                 >skip0325
                        
                                next_test
17c6 : ad0002          >            lda test_case   ;previous test
17c9 : c908            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
17cb : f003            >        beq skip0328
                       >        trap            ;failed not equal (non zero)
17cd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17d0 :                 >skip0328
                       >
0009 =                 >test_num = test_num + 1
17d0 : a909            >            lda #test_num   ;*** next tests' number
17d2 : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
17d5 : 8d04ef            sta $ef04
17d8 : 6a756d7020696e..  db "jump indirect", 10, 0
                                set_stat 0
                       >            load_flag 0
17e7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
17e9 : 48              >            pha         ;use stack to load status
17ea : 28              >            plp
                        
17eb : a949                     lda #'I'
17ed : a24e                     ldx #'N'
17ef : a044                     ldy #'D'        ;N=0, V=0, Z=0, C=0
17f1 : 6ce055                   jmp (ptr_tst_ind)
17f4 : ea                       nop
                                trap_ne         ;runover protection
17f5 : f003            >        beq skip0332
                       >        trap            ;failed not equal (non zero)
17f7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17fa :                 >skip0332
                        
17fa : 88                       dey
17fb : 88                       dey
17fc :                  ind_ret 
17fc : 08                       php             ;either SP or Y count will fail, if we do not hit
17fd : 88                       dey
17fe : 88                       dey
17ff : 88                       dey
1800 : 28                       plp
                                trap_eq         ;returned flags OK?
1801 : d003            >        bne skip0334
                       >        trap           ;failed equal (zero)
1803 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1806 :                 >skip0334
                        
                                trap_pl
1806 : 3003            >        bmi skip0336
                       >        trap            ;failed plus (bit 7 clear)
1808 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
180b :                 >skip0336
                        
                                trap_cc
180b : b003            >        bcs skip0338
                       >        trap            ;failed carry clear
180d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1810 :                 >skip0338
                        
                                trap_vc
1810 : 7003            >        bvs skip0340
                       >        trap            ;failed overflow clear
1812 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1815 :                 >skip0340
                        
1815 : c9e3                     cmp #('I'^$aa)  ;returned registers OK?
                                trap_ne
1817 : f003            >        beq skip0342
                       >        trap            ;failed not equal (non zero)
1819 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
181c :                 >skip0342
                        
181c : e04f                     cpx #('N'+1)
                                trap_ne
181e : f003            >        beq skip0344
                       >        trap            ;failed not equal (non zero)
1820 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1823 :                 >skip0344
                        
1823 : c03e                     cpy #('D'-6)
                                trap_ne
1825 : f003            >        beq skip0346
                       >        trap            ;failed not equal (non zero)
1827 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
182a :                 >skip0346
                        
182a : ba                       tsx             ;SP check
182b : e0ff                     cpx #$ff
                                trap_ne
182d : f003            >        beq skip0348
                       >        trap            ;failed not equal (non zero)
182f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1832 :                 >skip0348
                        
                                next_test
1832 : ad0002          >            lda test_case   ;previous test
1835 : c909            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1837 : f003            >        beq skip0351
                       >        trap            ;failed not equal (non zero)
1839 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
183c :                 >skip0351
                       >
000a =                 >test_num = test_num + 1
183c : a90a            >            lda #test_num   ;*** next tests' number
183e : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
1841 : 8d04ef            sta $ef04
1844 : 6a756d70207375..  db "jump subroutine & return from subroutine", 10, 0
                                set_stat 0
                       >            load_flag 0
186e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1870 : 48              >            pha         ;use stack to load status
1871 : 28              >            plp
                        
1872 : a94a                     lda #'J'
1874 : a253                     ldx #'S'
1876 : a052                     ldy #'R'        ;N=0, V=0, Z=0, C=0
1878 : 203456                   jsr test_jsr
187a =                  jsr_ret = *-1           ;last address of jsr = return address
187b : 08                       php             ;either SP or Y count will fail, if we do not hit
187c : 88                       dey
187d : 88                       dey
187e : 88                       dey
187f : 28                       plp
                                trap_eq         ;returned flags OK?
1880 : d003            >        bne skip0355
                       >        trap           ;failed equal (zero)
1882 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1885 :                 >skip0355
                        
                                trap_pl
1885 : 3003            >        bmi skip0357
                       >        trap            ;failed plus (bit 7 clear)
1887 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
188a :                 >skip0357
                        
                                trap_cc
188a : b003            >        bcs skip0359
                       >        trap            ;failed carry clear
188c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
188f :                 >skip0359
                        
                                trap_vc
188f : 7003            >        bvs skip0361
                       >        trap            ;failed overflow clear
1891 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1894 :                 >skip0361
                        
1894 : c9e0                     cmp #('J'^$aa)  ;returned registers OK?
                                trap_ne
1896 : f003            >        beq skip0363
                       >        trap            ;failed not equal (non zero)
1898 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
189b :                 >skip0363
                        
189b : e054                     cpx #('S'+1)
                                trap_ne
189d : f003            >        beq skip0365
                       >        trap            ;failed not equal (non zero)
189f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18a2 :                 >skip0365
                        
18a2 : c04c                     cpy #('R'-6)
                                trap_ne
18a4 : f003            >        beq skip0367
                       >        trap            ;failed not equal (non zero)
18a6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18a9 :                 >skip0367
                        
18a9 : ba                       tsx             ;sp?
18aa : e0ff                     cpx #$ff
                                trap_ne
18ac : f003            >        beq skip0369
                       >        trap            ;failed not equal (non zero)
18ae : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18b1 :                 >skip0369
                        
                                next_test
18b1 : ad0002          >            lda test_case   ;previous test
18b4 : c90a            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
18b6 : f003            >        beq skip0372
                       >        trap            ;failed not equal (non zero)
18b8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18bb :                 >skip0372
                       >
000b =                 >test_num = test_num + 1
18bb : a90b            >            lda #test_num   ;*** next tests' number
18bd : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
18c0 : 8d04ef            sta $ef04
18c3 : 627265616b2026..  db "break & return from interrupt", 10, 0
                            if ROM_vectors = 1
                                set_stat 0
                                lda #'B'
                                ldx #'R'
                                ldy #'K'        ;N=0, V=0, Z=0, C=0
                                brk
                            else
18e2 : a918                     lda #hi brk_ret ;emulated break
18e4 : 48                       pha
18e5 : a9f9                     lda #lo brk_ret
18e7 : 48                       pha
18e8 : a930                     lda #fao        ;set break & unused on stack
18ea : 48                       pha
                                set_stat intdis
                       >            load_flag intdis
18eb : a904            >            lda #intdis             ;allow test to change I-flag (no mask)
                       >
18ed : 48              >            pha         ;use stack to load status
18ee : 28              >            plp
                        
18ef : a942                     lda #'B'
18f1 : a252                     ldx #'R'
18f3 : a04b                     ldy #'K'        ;N=0, V=0, Z=0, C=0
18f5 : 4c9756                   jmp irq_trap
                            endif
18f8 : 88                       dey             ;should not be executed
18f9 :                  brk_ret                 ;address of break return
18f9 : 08                       php             ;either SP or Y count will fail, if we do not hit
18fa : 88                       dey
18fb : 88                       dey
18fc : 88                       dey
18fd : c9e8                     cmp #('B'^$aa)  ;returned registers OK?
                                trap_ne
18ff : f003            >        beq skip0376
                       >        trap            ;failed not equal (non zero)
1901 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1904 :                 >skip0376
                        
1904 : e053                     cpx #('R'+1)
                                trap_ne
1906 : f003            >        beq skip0378
                       >        trap            ;failed not equal (non zero)
1908 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
190b :                 >skip0378
                        
190b : c045                     cpy #('K'-6)
                                trap_ne
190d : f003            >        beq skip0380
                       >        trap            ;failed not equal (non zero)
190f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1912 :                 >skip0380
                        
1912 : 68                       pla             ;returned flags OK (unchanged)?
                                cmp_flag 0
1913 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1915 : f003            >        beq skip0383
                       >        trap            ;failed not equal (non zero)
1917 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
191a :                 >skip0383
                        
191a : ba                       tsx             ;sp?
191b : e0ff                     cpx #$ff
                                trap_ne
191d : f003            >        beq skip0385
                       >        trap            ;failed not equal (non zero)
191f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1922 :                 >skip0385
                        
                                next_test
1922 : ad0002          >            lda test_case   ;previous test
1925 : c90b            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1927 : f003            >        beq skip0388
                       >        trap            ;failed not equal (non zero)
1929 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
192c :                 >skip0388
                       >
000c =                 >test_num = test_num + 1
192c : a90c            >            lda #test_num   ;*** next tests' number
192e : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                         
1931 : 8d04ef            sta $ef04
1934 : 74657374207365..  db "test set and clear flags CLC CLI CLD CLV SEC SEI SED", 10, 0
                                set_stat $ff
                       >            load_flag $ff
196a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
196c : 48              >            pha         ;use stack to load status
196d : 28              >            plp
                        
196e : 18                       clc
                                tst_stat $ff-carry
196f : 08              >            php         ;save status
1970 : 68              >            pla         ;use stack to retrieve status
1971 : 48              >            pha
                       >            cmp_flag $ff-carry
1972 : c9fe            >            cmp #($ff-carry|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1974 : f003            >        beq skip0394
                       >        trap            ;failed not equal (non zero)
1976 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1979 :                 >skip0394
                       >
1979 : 28              >            plp         ;restore status
                        
197a : 38                       sec
                                tst_stat $ff
197b : 08              >            php         ;save status
197c : 68              >            pla         ;use stack to retrieve status
197d : 48              >            pha
                       >            cmp_flag $ff
197e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1980 : f003            >        beq skip0398
                       >        trap            ;failed not equal (non zero)
1982 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1985 :                 >skip0398
                       >
1985 : 28              >            plp         ;restore status
                        
                            if I_flag = 3
1986 : 58                       cli
                                tst_stat $ff-intdis
1987 : 08              >            php         ;save status
1988 : 68              >            pla         ;use stack to retrieve status
1989 : 48              >            pha
                       >            cmp_flag $ff-intdis
198a : c9fb            >            cmp #($ff-intdis|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
198c : f003            >        beq skip0402
                       >        trap            ;failed not equal (non zero)
198e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1991 :                 >skip0402
                       >
1991 : 28              >            plp         ;restore status
                        
1992 : 78                       sei
                                tst_stat $ff
1993 : 08              >            php         ;save status
1994 : 68              >            pla         ;use stack to retrieve status
1995 : 48              >            pha
                       >            cmp_flag $ff
1996 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1998 : f003            >        beq skip0406
                       >        trap            ;failed not equal (non zero)
199a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
199d :                 >skip0406
                       >
199d : 28              >            plp         ;restore status
                        
                            endif
199e : d8                       cld
                                tst_stat $ff-decmode
199f : 08              >            php         ;save status
19a0 : 68              >            pla         ;use stack to retrieve status
19a1 : 48              >            pha
                       >            cmp_flag $ff-decmode
19a2 : c9f7            >            cmp #($ff-decmode|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
19a4 : f003            >        beq skip0410
                       >        trap            ;failed not equal (non zero)
19a6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19a9 :                 >skip0410
                       >
19a9 : 28              >            plp         ;restore status
                        
19aa : f8                       sed
                                tst_stat $ff
19ab : 08              >            php         ;save status
19ac : 68              >            pla         ;use stack to retrieve status
19ad : 48              >            pha
                       >            cmp_flag $ff
19ae : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
19b0 : f003            >        beq skip0414
                       >        trap            ;failed not equal (non zero)
19b2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19b5 :                 >skip0414
                       >
19b5 : 28              >            plp         ;restore status
                        
19b6 : b8                       clv
                                tst_stat $ff-overfl
19b7 : 08              >            php         ;save status
19b8 : 68              >            pla         ;use stack to retrieve status
19b9 : 48              >            pha
                       >            cmp_flag $ff-overfl
19ba : c9bf            >            cmp #($ff-overfl|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
19bc : f003            >        beq skip0418
                       >        trap            ;failed not equal (non zero)
19be : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19c1 :                 >skip0418
                       >
19c1 : 28              >            plp         ;restore status
                        
                                set_stat 0
                       >            load_flag 0
19c2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
19c4 : 48              >            pha         ;use stack to load status
19c5 : 28              >            plp
                        
                                tst_stat 0
19c6 : 08              >            php         ;save status
19c7 : 68              >            pla         ;use stack to retrieve status
19c8 : 48              >            pha
                       >            cmp_flag 0
19c9 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
19cb : f003            >        beq skip0424
                       >        trap            ;failed not equal (non zero)
19cd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19d0 :                 >skip0424
                       >
19d0 : 28              >            plp         ;restore status
                        
19d1 : 38                       sec
                                tst_stat carry
19d2 : 08              >            php         ;save status
19d3 : 68              >            pla         ;use stack to retrieve status
19d4 : 48              >            pha
                       >            cmp_flag carry
19d5 : c931            >            cmp #(carry|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
19d7 : f003            >        beq skip0428
                       >        trap            ;failed not equal (non zero)
19d9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19dc :                 >skip0428
                       >
19dc : 28              >            plp         ;restore status
                        
19dd : 18                       clc
                                tst_stat 0  
19de : 08              >            php         ;save status
19df : 68              >            pla         ;use stack to retrieve status
19e0 : 48              >            pha
                       >            cmp_flag 0  
19e1 : c930            >            cmp #(0  |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
19e3 : f003            >        beq skip0432
                       >        trap            ;failed not equal (non zero)
19e5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19e8 :                 >skip0432
                       >
19e8 : 28              >            plp         ;restore status
                        
                            if I_flag = 3
19e9 : 78                       sei
                                tst_stat intdis
19ea : 08              >            php         ;save status
19eb : 68              >            pla         ;use stack to retrieve status
19ec : 48              >            pha
                       >            cmp_flag intdis
19ed : c934            >            cmp #(intdis|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
19ef : f003            >        beq skip0436
                       >        trap            ;failed not equal (non zero)
19f1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19f4 :                 >skip0436
                       >
19f4 : 28              >            plp         ;restore status
                        
19f5 : 58                       cli
                                tst_stat 0
19f6 : 08              >            php         ;save status
19f7 : 68              >            pla         ;use stack to retrieve status
19f8 : 48              >            pha
                       >            cmp_flag 0
19f9 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
19fb : f003            >        beq skip0440
                       >        trap            ;failed not equal (non zero)
19fd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a00 :                 >skip0440
                       >
1a00 : 28              >            plp         ;restore status
                        
                            endif  
1a01 : f8                       sed
                                tst_stat decmode
1a02 : 08              >            php         ;save status
1a03 : 68              >            pla         ;use stack to retrieve status
1a04 : 48              >            pha
                       >            cmp_flag decmode
1a05 : c938            >            cmp #(decmode|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a07 : f003            >        beq skip0444
                       >        trap            ;failed not equal (non zero)
1a09 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a0c :                 >skip0444
                       >
1a0c : 28              >            plp         ;restore status
                        
1a0d : d8                       cld
                                tst_stat 0  
1a0e : 08              >            php         ;save status
1a0f : 68              >            pla         ;use stack to retrieve status
1a10 : 48              >            pha
                       >            cmp_flag 0  
1a11 : c930            >            cmp #(0  |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a13 : f003            >        beq skip0448
                       >        trap            ;failed not equal (non zero)
1a15 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a18 :                 >skip0448
                       >
1a18 : 28              >            plp         ;restore status
                        
                                set_stat overfl
                       >            load_flag overfl
1a19 : a940            >            lda #overfl             ;allow test to change I-flag (no mask)
                       >
1a1b : 48              >            pha         ;use stack to load status
1a1c : 28              >            plp
                        
                                tst_stat overfl
1a1d : 08              >            php         ;save status
1a1e : 68              >            pla         ;use stack to retrieve status
1a1f : 48              >            pha
                       >            cmp_flag overfl
1a20 : c970            >            cmp #(overfl|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a22 : f003            >        beq skip0454
                       >        trap            ;failed not equal (non zero)
1a24 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a27 :                 >skip0454
                       >
1a27 : 28              >            plp         ;restore status
                        
1a28 : b8                       clv
                                tst_stat 0
1a29 : 08              >            php         ;save status
1a2a : 68              >            pla         ;use stack to retrieve status
1a2b : 48              >            pha
                       >            cmp_flag 0
1a2c : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a2e : f003            >        beq skip0458
                       >        trap            ;failed not equal (non zero)
1a30 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a33 :                 >skip0458
                       >
1a33 : 28              >            plp         ;restore status
                        
                                next_test
1a34 : ad0002          >            lda test_case   ;previous test
1a37 : c90c            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1a39 : f003            >        beq skip0461
                       >        trap            ;failed not equal (non zero)
1a3b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a3e :                 >skip0461
                       >
000d =                 >test_num = test_num + 1
1a3e : a90d            >            lda #test_num   ;*** next tests' number
1a40 : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
1a43 : 8d04ef            sta $ef04
1a46 : 74657374696e67..  db "testing index register increment/decrement and transfer", 10, 0
1a7f : 8d04ef            sta $ef04
1a82 : 494e5820494e59..  db "INX INY DEX DEY TAX TXA TAY TYA ", 10, 0
1aa4 : a2fe                     ldx #$fe
                                set_stat $ff
                       >            load_flag $ff
1aa6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1aa8 : 48              >            pha         ;use stack to load status
1aa9 : 28              >            plp
                        
1aaa : e8                       inx             ;ff
                                tst_x $ff,$ff-zero
1aab : 08              >            php         ;save flags
1aac : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
1aae : f003            >        beq skip0466
                       >        trap            ;failed not equal (non zero)
1ab0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ab3 :                 >skip0466
                       >
1ab3 : 68              >            pla         ;load status
1ab4 : 48              >            pha
                       >            cmp_flag $ff-zero
1ab5 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ab7 : f003            >        beq skip0469
                       >        trap            ;failed not equal (non zero)
1ab9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1abc :                 >skip0469
                       >
1abc : 28              >            plp         ;restore status
                        
1abd : e8                       inx             ;00
                                tst_x 0,$ff-minus
1abe : 08              >            php         ;save flags
1abf : e000            >            cpx #0     ;test result
                       >            trap_ne
1ac1 : f003            >        beq skip0472
                       >        trap            ;failed not equal (non zero)
1ac3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ac6 :                 >skip0472
                       >
1ac6 : 68              >            pla         ;load status
1ac7 : 48              >            pha
                       >            cmp_flag $ff-minus
1ac8 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1aca : f003            >        beq skip0475
                       >        trap            ;failed not equal (non zero)
1acc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1acf :                 >skip0475
                       >
1acf : 28              >            plp         ;restore status
                        
1ad0 : e8                       inx             ;01
                                tst_x 1,$ff-minus-zero
1ad1 : 08              >            php         ;save flags
1ad2 : e001            >            cpx #1     ;test result
                       >            trap_ne
1ad4 : f003            >        beq skip0478
                       >        trap            ;failed not equal (non zero)
1ad6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ad9 :                 >skip0478
                       >
1ad9 : 68              >            pla         ;load status
1ada : 48              >            pha
                       >            cmp_flag $ff-minus-zero
1adb : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1add : f003            >        beq skip0481
                       >        trap            ;failed not equal (non zero)
1adf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ae2 :                 >skip0481
                       >
1ae2 : 28              >            plp         ;restore status
                        
1ae3 : ca                       dex             ;00
                                tst_x 0,$ff-minus
1ae4 : 08              >            php         ;save flags
1ae5 : e000            >            cpx #0     ;test result
                       >            trap_ne
1ae7 : f003            >        beq skip0484
                       >        trap            ;failed not equal (non zero)
1ae9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1aec :                 >skip0484
                       >
1aec : 68              >            pla         ;load status
1aed : 48              >            pha
                       >            cmp_flag $ff-minus
1aee : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1af0 : f003            >        beq skip0487
                       >        trap            ;failed not equal (non zero)
1af2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1af5 :                 >skip0487
                       >
1af5 : 28              >            plp         ;restore status
                        
1af6 : ca                       dex             ;ff
                                tst_x $ff,$ff-zero
1af7 : 08              >            php         ;save flags
1af8 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
1afa : f003            >        beq skip0490
                       >        trap            ;failed not equal (non zero)
1afc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1aff :                 >skip0490
                       >
1aff : 68              >            pla         ;load status
1b00 : 48              >            pha
                       >            cmp_flag $ff-zero
1b01 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b03 : f003            >        beq skip0493
                       >        trap            ;failed not equal (non zero)
1b05 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b08 :                 >skip0493
                       >
1b08 : 28              >            plp         ;restore status
                        
1b09 : ca                       dex             ;fe
                                set_stat 0
                       >            load_flag 0
1b0a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1b0c : 48              >            pha         ;use stack to load status
1b0d : 28              >            plp
                        
1b0e : e8                       inx             ;ff
                                tst_x $ff,minus
1b0f : 08              >            php         ;save flags
1b10 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
1b12 : f003            >        beq skip0498
                       >        trap            ;failed not equal (non zero)
1b14 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b17 :                 >skip0498
                       >
1b17 : 68              >            pla         ;load status
1b18 : 48              >            pha
                       >            cmp_flag minus
1b19 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b1b : f003            >        beq skip0501
                       >        trap            ;failed not equal (non zero)
1b1d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b20 :                 >skip0501
                       >
1b20 : 28              >            plp         ;restore status
                        
1b21 : e8                       inx             ;00
                                tst_x 0,zero
1b22 : 08              >            php         ;save flags
1b23 : e000            >            cpx #0     ;test result
                       >            trap_ne
1b25 : f003            >        beq skip0504
                       >        trap            ;failed not equal (non zero)
1b27 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b2a :                 >skip0504
                       >
1b2a : 68              >            pla         ;load status
1b2b : 48              >            pha
                       >            cmp_flag zero
1b2c : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b2e : f003            >        beq skip0507
                       >        trap            ;failed not equal (non zero)
1b30 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b33 :                 >skip0507
                       >
1b33 : 28              >            plp         ;restore status
                        
1b34 : e8                       inx             ;01
                                tst_x 1,0
1b35 : 08              >            php         ;save flags
1b36 : e001            >            cpx #1     ;test result
                       >            trap_ne
1b38 : f003            >        beq skip0510
                       >        trap            ;failed not equal (non zero)
1b3a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b3d :                 >skip0510
                       >
1b3d : 68              >            pla         ;load status
1b3e : 48              >            pha
                       >            cmp_flag 0
1b3f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b41 : f003            >        beq skip0513
                       >        trap            ;failed not equal (non zero)
1b43 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b46 :                 >skip0513
                       >
1b46 : 28              >            plp         ;restore status
                        
1b47 : ca                       dex             ;00
                                tst_x 0,zero
1b48 : 08              >            php         ;save flags
1b49 : e000            >            cpx #0     ;test result
                       >            trap_ne
1b4b : f003            >        beq skip0516
                       >        trap            ;failed not equal (non zero)
1b4d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b50 :                 >skip0516
                       >
1b50 : 68              >            pla         ;load status
1b51 : 48              >            pha
                       >            cmp_flag zero
1b52 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b54 : f003            >        beq skip0519
                       >        trap            ;failed not equal (non zero)
1b56 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b59 :                 >skip0519
                       >
1b59 : 28              >            plp         ;restore status
                        
1b5a : ca                       dex             ;ff
                                tst_x $ff,minus
1b5b : 08              >            php         ;save flags
1b5c : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
1b5e : f003            >        beq skip0522
                       >        trap            ;failed not equal (non zero)
1b60 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b63 :                 >skip0522
                       >
1b63 : 68              >            pla         ;load status
1b64 : 48              >            pha
                       >            cmp_flag minus
1b65 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b67 : f003            >        beq skip0525
                       >        trap            ;failed not equal (non zero)
1b69 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b6c :                 >skip0525
                       >
1b6c : 28              >            plp         ;restore status
                        
                        
1b6d : a0fe                     ldy #$fe
                                set_stat $ff
                       >            load_flag $ff
1b6f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1b71 : 48              >            pha         ;use stack to load status
1b72 : 28              >            plp
                        
1b73 : c8                       iny             ;ff
                                tst_y $ff,$ff-zero
1b74 : 08              >            php         ;save flags
1b75 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
1b77 : f003            >        beq skip0530
                       >        trap            ;failed not equal (non zero)
1b79 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b7c :                 >skip0530
                       >
1b7c : 68              >            pla         ;load status
1b7d : 48              >            pha
                       >            cmp_flag $ff-zero
1b7e : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b80 : f003            >        beq skip0533
                       >        trap            ;failed not equal (non zero)
1b82 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b85 :                 >skip0533
                       >
1b85 : 28              >            plp         ;restore status
                        
1b86 : c8                       iny             ;00
                                tst_y 0,$ff-minus
1b87 : 08              >            php         ;save flags
1b88 : c000            >            cpy #0     ;test result
                       >            trap_ne
1b8a : f003            >        beq skip0536
                       >        trap            ;failed not equal (non zero)
1b8c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b8f :                 >skip0536
                       >
1b8f : 68              >            pla         ;load status
1b90 : 48              >            pha
                       >            cmp_flag $ff-minus
1b91 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b93 : f003            >        beq skip0539
                       >        trap            ;failed not equal (non zero)
1b95 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b98 :                 >skip0539
                       >
1b98 : 28              >            plp         ;restore status
                        
1b99 : c8                       iny             ;01
                                tst_y 1,$ff-minus-zero
1b9a : 08              >            php         ;save flags
1b9b : c001            >            cpy #1     ;test result
                       >            trap_ne
1b9d : f003            >        beq skip0542
                       >        trap            ;failed not equal (non zero)
1b9f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ba2 :                 >skip0542
                       >
1ba2 : 68              >            pla         ;load status
1ba3 : 48              >            pha
                       >            cmp_flag $ff-minus-zero
1ba4 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ba6 : f003            >        beq skip0545
                       >        trap            ;failed not equal (non zero)
1ba8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bab :                 >skip0545
                       >
1bab : 28              >            plp         ;restore status
                        
1bac : 88                       dey             ;00
                                tst_y 0,$ff-minus
1bad : 08              >            php         ;save flags
1bae : c000            >            cpy #0     ;test result
                       >            trap_ne
1bb0 : f003            >        beq skip0548
                       >        trap            ;failed not equal (non zero)
1bb2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bb5 :                 >skip0548
                       >
1bb5 : 68              >            pla         ;load status
1bb6 : 48              >            pha
                       >            cmp_flag $ff-minus
1bb7 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1bb9 : f003            >        beq skip0551
                       >        trap            ;failed not equal (non zero)
1bbb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bbe :                 >skip0551
                       >
1bbe : 28              >            plp         ;restore status
                        
1bbf : 88                       dey             ;ff
                                tst_y $ff,$ff-zero
1bc0 : 08              >            php         ;save flags
1bc1 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
1bc3 : f003            >        beq skip0554
                       >        trap            ;failed not equal (non zero)
1bc5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bc8 :                 >skip0554
                       >
1bc8 : 68              >            pla         ;load status
1bc9 : 48              >            pha
                       >            cmp_flag $ff-zero
1bca : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1bcc : f003            >        beq skip0557
                       >        trap            ;failed not equal (non zero)
1bce : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bd1 :                 >skip0557
                       >
1bd1 : 28              >            plp         ;restore status
                        
1bd2 : 88                       dey             ;fe
                                set_stat 0
                       >            load_flag 0
1bd3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1bd5 : 48              >            pha         ;use stack to load status
1bd6 : 28              >            plp
                        
1bd7 : c8                       iny             ;ff
                                tst_y $ff,0+minus
1bd8 : 08              >            php         ;save flags
1bd9 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
1bdb : f003            >        beq skip0562
                       >        trap            ;failed not equal (non zero)
1bdd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1be0 :                 >skip0562
                       >
1be0 : 68              >            pla         ;load status
1be1 : 48              >            pha
                       >            cmp_flag 0+minus
1be2 : c9b0            >            cmp #(0+minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1be4 : f003            >        beq skip0565
                       >        trap            ;failed not equal (non zero)
1be6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1be9 :                 >skip0565
                       >
1be9 : 28              >            plp         ;restore status
                        
1bea : c8                       iny             ;00
                                tst_y 0,zero
1beb : 08              >            php         ;save flags
1bec : c000            >            cpy #0     ;test result
                       >            trap_ne
1bee : f003            >        beq skip0568
                       >        trap            ;failed not equal (non zero)
1bf0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bf3 :                 >skip0568
                       >
1bf3 : 68              >            pla         ;load status
1bf4 : 48              >            pha
                       >            cmp_flag zero
1bf5 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1bf7 : f003            >        beq skip0571
                       >        trap            ;failed not equal (non zero)
1bf9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bfc :                 >skip0571
                       >
1bfc : 28              >            plp         ;restore status
                        
1bfd : c8                       iny             ;01
                                tst_y 1,0
1bfe : 08              >            php         ;save flags
1bff : c001            >            cpy #1     ;test result
                       >            trap_ne
1c01 : f003            >        beq skip0574
                       >        trap            ;failed not equal (non zero)
1c03 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c06 :                 >skip0574
                       >
1c06 : 68              >            pla         ;load status
1c07 : 48              >            pha
                       >            cmp_flag 0
1c08 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c0a : f003            >        beq skip0577
                       >        trap            ;failed not equal (non zero)
1c0c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c0f :                 >skip0577
                       >
1c0f : 28              >            plp         ;restore status
                        
1c10 : 88                       dey             ;00
                                tst_y 0,zero
1c11 : 08              >            php         ;save flags
1c12 : c000            >            cpy #0     ;test result
                       >            trap_ne
1c14 : f003            >        beq skip0580
                       >        trap            ;failed not equal (non zero)
1c16 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c19 :                 >skip0580
                       >
1c19 : 68              >            pla         ;load status
1c1a : 48              >            pha
                       >            cmp_flag zero
1c1b : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c1d : f003            >        beq skip0583
                       >        trap            ;failed not equal (non zero)
1c1f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c22 :                 >skip0583
                       >
1c22 : 28              >            plp         ;restore status
                        
1c23 : 88                       dey             ;ff
                                tst_y $ff,minus
1c24 : 08              >            php         ;save flags
1c25 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
1c27 : f003            >        beq skip0586
                       >        trap            ;failed not equal (non zero)
1c29 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c2c :                 >skip0586
                       >
1c2c : 68              >            pla         ;load status
1c2d : 48              >            pha
                       >            cmp_flag minus
1c2e : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c30 : f003            >        beq skip0589
                       >        trap            ;failed not equal (non zero)
1c32 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c35 :                 >skip0589
                       >
1c35 : 28              >            plp         ;restore status
                        
                                        
1c36 : a2ff                     ldx #$ff
                                set_stat $ff
                       >            load_flag $ff
1c38 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1c3a : 48              >            pha         ;use stack to load status
1c3b : 28              >            plp
                        
1c3c : 8a                       txa
                                tst_a $ff,$ff-zero
1c3d : 08              >            php         ;save flags
1c3e : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
1c40 : f003            >        beq skip0594
                       >        trap            ;failed not equal (non zero)
1c42 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c45 :                 >skip0594
                       >
1c45 : 68              >            pla         ;load status
1c46 : 48              >            pha
                       >            cmp_flag $ff-zero
1c47 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c49 : f003            >        beq skip0597
                       >        trap            ;failed not equal (non zero)
1c4b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c4e :                 >skip0597
                       >
1c4e : 28              >            plp         ;restore status
                        
1c4f : 08                       php
1c50 : e8                       inx             ;00
1c51 : 28                       plp
1c52 : 8a                       txa
                                tst_a 0,$ff-minus
1c53 : 08              >            php         ;save flags
1c54 : c900            >            cmp #0     ;test result
                       >            trap_ne
1c56 : f003            >        beq skip0600
                       >        trap            ;failed not equal (non zero)
1c58 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c5b :                 >skip0600
                       >
1c5b : 68              >            pla         ;load status
1c5c : 48              >            pha
                       >            cmp_flag $ff-minus
1c5d : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c5f : f003            >        beq skip0603
                       >        trap            ;failed not equal (non zero)
1c61 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c64 :                 >skip0603
                       >
1c64 : 28              >            plp         ;restore status
                        
1c65 : 08                       php
1c66 : e8                       inx             ;01
1c67 : 28                       plp
1c68 : 8a                       txa
                                tst_a 1,$ff-minus-zero
1c69 : 08              >            php         ;save flags
1c6a : c901            >            cmp #1     ;test result
                       >            trap_ne
1c6c : f003            >        beq skip0606
                       >        trap            ;failed not equal (non zero)
1c6e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c71 :                 >skip0606
                       >
1c71 : 68              >            pla         ;load status
1c72 : 48              >            pha
                       >            cmp_flag $ff-minus-zero
1c73 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c75 : f003            >        beq skip0609
                       >        trap            ;failed not equal (non zero)
1c77 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c7a :                 >skip0609
                       >
1c7a : 28              >            plp         ;restore status
                        
                                set_stat 0
                       >            load_flag 0
1c7b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1c7d : 48              >            pha         ;use stack to load status
1c7e : 28              >            plp
                        
1c7f : 8a                       txa
                                tst_a 1,0
1c80 : 08              >            php         ;save flags
1c81 : c901            >            cmp #1     ;test result
                       >            trap_ne
1c83 : f003            >        beq skip0614
                       >        trap            ;failed not equal (non zero)
1c85 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c88 :                 >skip0614
                       >
1c88 : 68              >            pla         ;load status
1c89 : 48              >            pha
                       >            cmp_flag 0
1c8a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c8c : f003            >        beq skip0617
                       >        trap            ;failed not equal (non zero)
1c8e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c91 :                 >skip0617
                       >
1c91 : 28              >            plp         ;restore status
                        
1c92 : 08                       php
1c93 : ca                       dex             ;00
1c94 : 28                       plp
1c95 : 8a                       txa
                                tst_a 0,zero
1c96 : 08              >            php         ;save flags
1c97 : c900            >            cmp #0     ;test result
                       >            trap_ne
1c99 : f003            >        beq skip0620
                       >        trap            ;failed not equal (non zero)
1c9b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c9e :                 >skip0620
                       >
1c9e : 68              >            pla         ;load status
1c9f : 48              >            pha
                       >            cmp_flag zero
1ca0 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ca2 : f003            >        beq skip0623
                       >        trap            ;failed not equal (non zero)
1ca4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ca7 :                 >skip0623
                       >
1ca7 : 28              >            plp         ;restore status
                        
1ca8 : 08                       php
1ca9 : ca                       dex             ;ff
1caa : 28                       plp
1cab : 8a                       txa
                                tst_a $ff,minus
1cac : 08              >            php         ;save flags
1cad : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
1caf : f003            >        beq skip0626
                       >        trap            ;failed not equal (non zero)
1cb1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1cb4 :                 >skip0626
                       >
1cb4 : 68              >            pla         ;load status
1cb5 : 48              >            pha
                       >            cmp_flag minus
1cb6 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1cb8 : f003            >        beq skip0629
                       >        trap            ;failed not equal (non zero)
1cba : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1cbd :                 >skip0629
                       >
1cbd : 28              >            plp         ;restore status
                        
                                                
1cbe : a0ff                     ldy #$ff
                                set_stat $ff
                       >            load_flag $ff
1cc0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1cc2 : 48              >            pha         ;use stack to load status
1cc3 : 28              >            plp
                        
1cc4 : 98                       tya
                                tst_a $ff,$ff-zero
1cc5 : 08              >            php         ;save flags
1cc6 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
1cc8 : f003            >        beq skip0634
                       >        trap            ;failed not equal (non zero)
1cca : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ccd :                 >skip0634
                       >
1ccd : 68              >            pla         ;load status
1cce : 48              >            pha
                       >            cmp_flag $ff-zero
1ccf : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1cd1 : f003            >        beq skip0637
                       >        trap            ;failed not equal (non zero)
1cd3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1cd6 :                 >skip0637
                       >
1cd6 : 28              >            plp         ;restore status
                        
1cd7 : 08                       php
1cd8 : c8                       iny             ;00
1cd9 : 28                       plp
1cda : 98                       tya
                                tst_a 0,$ff-minus
1cdb : 08              >            php         ;save flags
1cdc : c900            >            cmp #0     ;test result
                       >            trap_ne
1cde : f003            >        beq skip0640
                       >        trap            ;failed not equal (non zero)
1ce0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ce3 :                 >skip0640
                       >
1ce3 : 68              >            pla         ;load status
1ce4 : 48              >            pha
                       >            cmp_flag $ff-minus
1ce5 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ce7 : f003            >        beq skip0643
                       >        trap            ;failed not equal (non zero)
1ce9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1cec :                 >skip0643
                       >
1cec : 28              >            plp         ;restore status
                        
1ced : 08                       php
1cee : c8                       iny             ;01
1cef : 28                       plp
1cf0 : 98                       tya
                                tst_a 1,$ff-minus-zero
1cf1 : 08              >            php         ;save flags
1cf2 : c901            >            cmp #1     ;test result
                       >            trap_ne
1cf4 : f003            >        beq skip0646
                       >        trap            ;failed not equal (non zero)
1cf6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1cf9 :                 >skip0646
                       >
1cf9 : 68              >            pla         ;load status
1cfa : 48              >            pha
                       >            cmp_flag $ff-minus-zero
1cfb : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1cfd : f003            >        beq skip0649
                       >        trap            ;failed not equal (non zero)
1cff : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d02 :                 >skip0649
                       >
1d02 : 28              >            plp         ;restore status
                        
                                set_stat 0
                       >            load_flag 0
1d03 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1d05 : 48              >            pha         ;use stack to load status
1d06 : 28              >            plp
                        
1d07 : 98                       tya
                                tst_a 1,0
1d08 : 08              >            php         ;save flags
1d09 : c901            >            cmp #1     ;test result
                       >            trap_ne
1d0b : f003            >        beq skip0654
                       >        trap            ;failed not equal (non zero)
1d0d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d10 :                 >skip0654
                       >
1d10 : 68              >            pla         ;load status
1d11 : 48              >            pha
                       >            cmp_flag 0
1d12 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1d14 : f003            >        beq skip0657
                       >        trap            ;failed not equal (non zero)
1d16 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d19 :                 >skip0657
                       >
1d19 : 28              >            plp         ;restore status
                        
1d1a : 08                       php
1d1b : 88                       dey             ;00
1d1c : 28                       plp
1d1d : 98                       tya
                                tst_a 0,zero
1d1e : 08              >            php         ;save flags
1d1f : c900            >            cmp #0     ;test result
                       >            trap_ne
1d21 : f003            >        beq skip0660
                       >        trap            ;failed not equal (non zero)
1d23 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d26 :                 >skip0660
                       >
1d26 : 68              >            pla         ;load status
1d27 : 48              >            pha
                       >            cmp_flag zero
1d28 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1d2a : f003            >        beq skip0663
                       >        trap            ;failed not equal (non zero)
1d2c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d2f :                 >skip0663
                       >
1d2f : 28              >            plp         ;restore status
                        
1d30 : 08                       php
1d31 : 88                       dey             ;ff
1d32 : 28                       plp
1d33 : 98                       tya
                                tst_a $ff,minus
1d34 : 08              >            php         ;save flags
1d35 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
1d37 : f003            >        beq skip0666
                       >        trap            ;failed not equal (non zero)
1d39 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d3c :                 >skip0666
                       >
1d3c : 68              >            pla         ;load status
1d3d : 48              >            pha
                       >            cmp_flag minus
1d3e : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1d40 : f003            >        beq skip0669
                       >        trap            ;failed not equal (non zero)
1d42 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d45 :                 >skip0669
                       >
1d45 : 28              >            plp         ;restore status
                        
                        
                                load_flag $ff
1d46 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                        
1d48 : 48                       pha
1d49 : a2ff                     ldx #$ff        ;ff
1d4b : 8a                       txa
1d4c : 28                       plp             
1d4d : a8                       tay
                                tst_y $ff,$ff-zero
1d4e : 08              >            php         ;save flags
1d4f : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
1d51 : f003            >        beq skip0673
                       >        trap            ;failed not equal (non zero)
1d53 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d56 :                 >skip0673
                       >
1d56 : 68              >            pla         ;load status
1d57 : 48              >            pha
                       >            cmp_flag $ff-zero
1d58 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1d5a : f003            >        beq skip0676
                       >        trap            ;failed not equal (non zero)
1d5c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d5f :                 >skip0676
                       >
1d5f : 28              >            plp         ;restore status
                        
1d60 : 08                       php
1d61 : e8                       inx             ;00
1d62 : 8a                       txa
1d63 : 28                       plp
1d64 : a8                       tay
                                tst_y 0,$ff-minus
1d65 : 08              >            php         ;save flags
1d66 : c000            >            cpy #0     ;test result
                       >            trap_ne
1d68 : f003            >        beq skip0679
                       >        trap            ;failed not equal (non zero)
1d6a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d6d :                 >skip0679
                       >
1d6d : 68              >            pla         ;load status
1d6e : 48              >            pha
                       >            cmp_flag $ff-minus
1d6f : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1d71 : f003            >        beq skip0682
                       >        trap            ;failed not equal (non zero)
1d73 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d76 :                 >skip0682
                       >
1d76 : 28              >            plp         ;restore status
                        
1d77 : 08                       php
1d78 : e8                       inx             ;01
1d79 : 8a                       txa
1d7a : 28                       plp
1d7b : a8                       tay
                                tst_y 1,$ff-minus-zero
1d7c : 08              >            php         ;save flags
1d7d : c001            >            cpy #1     ;test result
                       >            trap_ne
1d7f : f003            >        beq skip0685
                       >        trap            ;failed not equal (non zero)
1d81 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d84 :                 >skip0685
                       >
1d84 : 68              >            pla         ;load status
1d85 : 48              >            pha
                       >            cmp_flag $ff-minus-zero
1d86 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1d88 : f003            >        beq skip0688
                       >        trap            ;failed not equal (non zero)
1d8a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d8d :                 >skip0688
                       >
1d8d : 28              >            plp         ;restore status
                        
                                load_flag 0
1d8e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                        
1d90 : 48                       pha
1d91 : a900                     lda #0
1d93 : 8a                       txa
1d94 : 28                       plp
1d95 : a8                       tay
                                tst_y 1,0
1d96 : 08              >            php         ;save flags
1d97 : c001            >            cpy #1     ;test result
                       >            trap_ne
1d99 : f003            >        beq skip0692
                       >        trap            ;failed not equal (non zero)
1d9b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d9e :                 >skip0692
                       >
1d9e : 68              >            pla         ;load status
1d9f : 48              >            pha
                       >            cmp_flag 0
1da0 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1da2 : f003            >        beq skip0695
                       >        trap            ;failed not equal (non zero)
1da4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1da7 :                 >skip0695
                       >
1da7 : 28              >            plp         ;restore status
                        
1da8 : 08                       php
1da9 : ca                       dex             ;00
1daa : 8a                       txa
1dab : 28                       plp
1dac : a8                       tay
                                tst_y 0,zero
1dad : 08              >            php         ;save flags
1dae : c000            >            cpy #0     ;test result
                       >            trap_ne
1db0 : f003            >        beq skip0698
                       >        trap            ;failed not equal (non zero)
1db2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1db5 :                 >skip0698
                       >
1db5 : 68              >            pla         ;load status
1db6 : 48              >            pha
                       >            cmp_flag zero
1db7 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1db9 : f003            >        beq skip0701
                       >        trap            ;failed not equal (non zero)
1dbb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1dbe :                 >skip0701
                       >
1dbe : 28              >            plp         ;restore status
                        
1dbf : 08                       php
1dc0 : ca                       dex             ;ff
1dc1 : 8a                       txa
1dc2 : 28                       plp
1dc3 : a8                       tay
                                tst_y $ff,minus
1dc4 : 08              >            php         ;save flags
1dc5 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
1dc7 : f003            >        beq skip0704
                       >        trap            ;failed not equal (non zero)
1dc9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1dcc :                 >skip0704
                       >
1dcc : 68              >            pla         ;load status
1dcd : 48              >            pha
                       >            cmp_flag minus
1dce : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1dd0 : f003            >        beq skip0707
                       >        trap            ;failed not equal (non zero)
1dd2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1dd5 :                 >skip0707
                       >
1dd5 : 28              >            plp         ;restore status
                        
                        
                        
                                load_flag $ff
1dd6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                        
1dd8 : 48                       pha
1dd9 : a0ff                     ldy #$ff        ;ff
1ddb : 98                       tya
1ddc : 28                       plp
1ddd : aa                       tax
                                tst_x $ff,$ff-zero
1dde : 08              >            php         ;save flags
1ddf : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
1de1 : f003            >        beq skip0711
                       >        trap            ;failed not equal (non zero)
1de3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1de6 :                 >skip0711
                       >
1de6 : 68              >            pla         ;load status
1de7 : 48              >            pha
                       >            cmp_flag $ff-zero
1de8 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1dea : f003            >        beq skip0714
                       >        trap            ;failed not equal (non zero)
1dec : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1def :                 >skip0714
                       >
1def : 28              >            plp         ;restore status
                        
1df0 : 08                       php
1df1 : c8                       iny             ;00
1df2 : 98                       tya
1df3 : 28                       plp
1df4 : aa                       tax
                                tst_x 0,$ff-minus
1df5 : 08              >            php         ;save flags
1df6 : e000            >            cpx #0     ;test result
                       >            trap_ne
1df8 : f003            >        beq skip0717
                       >        trap            ;failed not equal (non zero)
1dfa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1dfd :                 >skip0717
                       >
1dfd : 68              >            pla         ;load status
1dfe : 48              >            pha
                       >            cmp_flag $ff-minus
1dff : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e01 : f003            >        beq skip0720
                       >        trap            ;failed not equal (non zero)
1e03 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e06 :                 >skip0720
                       >
1e06 : 28              >            plp         ;restore status
                        
1e07 : 08                       php
1e08 : c8                       iny             ;01
1e09 : 98                       tya
1e0a : 28                       plp
1e0b : aa                       tax
                                tst_x 1,$ff-minus-zero
1e0c : 08              >            php         ;save flags
1e0d : e001            >            cpx #1     ;test result
                       >            trap_ne
1e0f : f003            >        beq skip0723
                       >        trap            ;failed not equal (non zero)
1e11 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e14 :                 >skip0723
                       >
1e14 : 68              >            pla         ;load status
1e15 : 48              >            pha
                       >            cmp_flag $ff-minus-zero
1e16 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e18 : f003            >        beq skip0726
                       >        trap            ;failed not equal (non zero)
1e1a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e1d :                 >skip0726
                       >
1e1d : 28              >            plp         ;restore status
                        
                                load_flag 0
1e1e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                        
1e20 : 48                       pha
1e21 : a900                     lda #0          ;preset status
1e23 : 98                       tya
1e24 : 28                       plp
1e25 : aa                       tax
                                tst_x 1,0
1e26 : 08              >            php         ;save flags
1e27 : e001            >            cpx #1     ;test result
                       >            trap_ne
1e29 : f003            >        beq skip0730
                       >        trap            ;failed not equal (non zero)
1e2b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e2e :                 >skip0730
                       >
1e2e : 68              >            pla         ;load status
1e2f : 48              >            pha
                       >            cmp_flag 0
1e30 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e32 : f003            >        beq skip0733
                       >        trap            ;failed not equal (non zero)
1e34 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e37 :                 >skip0733
                       >
1e37 : 28              >            plp         ;restore status
                        
1e38 : 08                       php
1e39 : 88                       dey             ;00
1e3a : 98                       tya
1e3b : 28                       plp
1e3c : aa                       tax
                                tst_x 0,zero
1e3d : 08              >            php         ;save flags
1e3e : e000            >            cpx #0     ;test result
                       >            trap_ne
1e40 : f003            >        beq skip0736
                       >        trap            ;failed not equal (non zero)
1e42 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e45 :                 >skip0736
                       >
1e45 : 68              >            pla         ;load status
1e46 : 48              >            pha
                       >            cmp_flag zero
1e47 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e49 : f003            >        beq skip0739
                       >        trap            ;failed not equal (non zero)
1e4b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e4e :                 >skip0739
                       >
1e4e : 28              >            plp         ;restore status
                        
1e4f : 08                       php
1e50 : 88                       dey             ;ff
1e51 : 98                       tya
1e52 : 28                       plp
1e53 : aa                       tax
                                tst_x $ff,minus
1e54 : 08              >            php         ;save flags
1e55 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
1e57 : f003            >        beq skip0742
                       >        trap            ;failed not equal (non zero)
1e59 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e5c :                 >skip0742
                       >
1e5c : 68              >            pla         ;load status
1e5d : 48              >            pha
                       >            cmp_flag minus
1e5e : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e60 : f003            >        beq skip0745
                       >        trap            ;failed not equal (non zero)
1e62 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e65 :                 >skip0745
                       >
1e65 : 28              >            plp         ;restore status
                        
                                next_test
1e66 : ad0002          >            lda test_case   ;previous test
1e69 : c90d            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1e6b : f003            >        beq skip0748
                       >        trap            ;failed not equal (non zero)
1e6d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e70 :                 >skip0748
                       >
000e =                 >test_num = test_num + 1
1e70 : a90e            >            lda #test_num   ;*** next tests' number
1e72 : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                             
1e75 : 8d04ef            sta $ef04
1e78 : 54535820736574..  db "TSX sets NZ - TXS does not", 10, 0
                        ;  This section also tests for proper stack wrap around.
1e94 : a201                     ldx #1          ;01
                                set_stat $ff
                       >            load_flag $ff
1e96 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1e98 : 48              >            pha         ;use stack to load status
1e99 : 28              >            plp
                        
1e9a : 9a                       txs
1e9b : 08                       php
1e9c : ad0101                   lda $101
                                cmp_flag $ff
1e9f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1ea1 : f003            >        beq skip0753
                       >        trap            ;failed not equal (non zero)
1ea3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ea6 :                 >skip0753
                        
                                set_stat 0
                       >            load_flag 0
1ea6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1ea8 : 48              >            pha         ;use stack to load status
1ea9 : 28              >            plp
                        
1eaa : 9a                       txs
1eab : 08                       php
1eac : ad0101                   lda $101
                                cmp_flag 0
1eaf : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1eb1 : f003            >        beq skip0758
                       >        trap            ;failed not equal (non zero)
1eb3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1eb6 :                 >skip0758
                        
1eb6 : ca                       dex             ;00
                                set_stat $ff
                       >            load_flag $ff
1eb7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1eb9 : 48              >            pha         ;use stack to load status
1eba : 28              >            plp
                        
1ebb : 9a                       txs
1ebc : 08                       php
1ebd : ad0001                   lda $100
                                cmp_flag $ff
1ec0 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1ec2 : f003            >        beq skip0763
                       >        trap            ;failed not equal (non zero)
1ec4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ec7 :                 >skip0763
                        
                                set_stat 0
                       >            load_flag 0
1ec7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1ec9 : 48              >            pha         ;use stack to load status
1eca : 28              >            plp
                        
1ecb : 9a                       txs
1ecc : 08                       php
1ecd : ad0001                   lda $100
                                cmp_flag 0
1ed0 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1ed2 : f003            >        beq skip0768
                       >        trap            ;failed not equal (non zero)
1ed4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ed7 :                 >skip0768
                        
1ed7 : ca                       dex             ;ff
                                set_stat $ff
                       >            load_flag $ff
1ed8 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1eda : 48              >            pha         ;use stack to load status
1edb : 28              >            plp
                        
1edc : 9a                       txs
1edd : 08                       php
1ede : adff01                   lda $1ff
                                cmp_flag $ff
1ee1 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1ee3 : f003            >        beq skip0773
                       >        trap            ;failed not equal (non zero)
1ee5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ee8 :                 >skip0773
                        
                                set_stat 0
                       >            load_flag 0
1ee8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1eea : 48              >            pha         ;use stack to load status
1eeb : 28              >            plp
                        
1eec : 9a                       txs
1eed : 08                       php
1eee : adff01                   lda $1ff
                                cmp_flag 0
1ef1 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                        
                                
1ef3 : a201                     ldx #1
1ef5 : 9a                       txs             ;sp=01
                                set_stat $ff
                       >            load_flag $ff
1ef6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1ef8 : 48              >            pha         ;use stack to load status
1ef9 : 28              >            plp
                        
1efa : ba                       tsx             ;clears Z, N
1efb : 08                       php             ;sp=00
1efc : e001                     cpx #1
                                trap_ne
1efe : f003            >        beq skip0780
                       >        trap            ;failed not equal (non zero)
1f00 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f03 :                 >skip0780
                        
1f03 : ad0101                   lda $101
                                cmp_flag $ff-minus-zero
1f06 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1f08 : f003            >        beq skip0783
                       >        trap            ;failed not equal (non zero)
1f0a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f0d :                 >skip0783
                        
                                set_stat $ff
                       >            load_flag $ff
1f0d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1f0f : 48              >            pha         ;use stack to load status
1f10 : 28              >            plp
                        
1f11 : ba                       tsx             ;clears N, sets Z
1f12 : 08                       php             ;sp=ff
1f13 : e000                     cpx #0
                                trap_ne
1f15 : f003            >        beq skip0787
                       >        trap            ;failed not equal (non zero)
1f17 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f1a :                 >skip0787
                        
1f1a : ad0001                   lda $100
                                cmp_flag $ff-minus
1f1d : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1f1f : f003            >        beq skip0790
                       >        trap            ;failed not equal (non zero)
1f21 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f24 :                 >skip0790
                        
                                set_stat $ff
                       >            load_flag $ff
1f24 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1f26 : 48              >            pha         ;use stack to load status
1f27 : 28              >            plp
                        
1f28 : ba                       tsx             ;clears N, sets Z
1f29 : 08                       php             ;sp=fe
1f2a : e0ff                     cpx #$ff
                                trap_ne
1f2c : f003            >        beq skip0794
                       >        trap            ;failed not equal (non zero)
1f2e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f31 :                 >skip0794
                        
1f31 : adff01                   lda $1ff
                                cmp_flag $ff-zero
1f34 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1f36 : f003            >        beq skip0797
                       >        trap            ;failed not equal (non zero)
1f38 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f3b :                 >skip0797
                        
                                
1f3b : a201                     ldx #1
1f3d : 9a                       txs             ;sp=01
                                set_stat 0
                       >            load_flag 0
1f3e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1f40 : 48              >            pha         ;use stack to load status
1f41 : 28              >            plp
                        
1f42 : ba                       tsx             ;clears Z, N
1f43 : 08                       php             ;sp=00
1f44 : e001                     cpx #1
                                trap_ne
1f46 : f003            >        beq skip0801
                       >        trap            ;failed not equal (non zero)
1f48 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f4b :                 >skip0801
                        
1f4b : ad0101                   lda $101
                                cmp_flag 0
1f4e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1f50 : f003            >        beq skip0804
                       >        trap            ;failed not equal (non zero)
1f52 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f55 :                 >skip0804
                        
                                set_stat 0
                       >            load_flag 0
1f55 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1f57 : 48              >            pha         ;use stack to load status
1f58 : 28              >            plp
                        
1f59 : ba                       tsx             ;clears N, sets Z
1f5a : 08                       php             ;sp=ff
1f5b : e000                     cpx #0
                                trap_ne
1f5d : f003            >        beq skip0808
                       >        trap            ;failed not equal (non zero)
1f5f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f62 :                 >skip0808
                        
1f62 : ad0001                   lda $100
                                cmp_flag zero
1f65 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1f67 : f003            >        beq skip0811
                       >        trap            ;failed not equal (non zero)
1f69 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f6c :                 >skip0811
                        
                                set_stat 0
                       >            load_flag 0
1f6c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1f6e : 48              >            pha         ;use stack to load status
1f6f : 28              >            plp
                        
1f70 : ba                       tsx             ;clears N, sets Z
1f71 : 08                       php             ;sp=fe
1f72 : e0ff                     cpx #$ff
                                trap_ne
1f74 : f003            >        beq skip0815
                       >        trap            ;failed not equal (non zero)
1f76 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f79 :                 >skip0815
                        
1f79 : adff01                   lda $1ff
                                cmp_flag minus
1f7c : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                        
                                trap_ne
1f7e : f003            >        beq skip0818
                       >        trap            ;failed not equal (non zero)
1f80 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f83 :                 >skip0818
                        
1f83 : 68                       pla             ;sp=ff
                                next_test
1f84 : ad0002          >            lda test_case   ;previous test
1f87 : c90e            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1f89 : f003            >        beq skip0821
                       >        trap            ;failed not equal (non zero)
1f8b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f8e :                 >skip0821
                       >
000f =                 >test_num = test_num + 1
1f8e : a90f            >            lda #test_num   ;*** next tests' number
1f90 : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
1f93 : 8d04ef            sta $ef04
1f96 : 74657374696e67..  db "testing index register load & store LDY LDX STY STX all addressing modes", 10, 0
1fe0 : 8d04ef            sta $ef04
1fe3 : 4c4458202f2053..  db "LDX / STX - zp,y / abs,y", 10, 0
1ffd : a003                     ldy #3
1fff :                  tldx    
                                set_stat 0
                       >            load_flag 0
1fff : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2001 : 48              >            pha         ;use stack to load status
2002 : 28              >            plp
                        
2003 : b619                     ldx zp1,y
2005 : 08                       php         ;test stores do not alter flags
2006 : 8a                       txa
2007 : 49c3                     eor #$c3
2009 : 28                       plp
200a : 990302                   sta abst,y
200d : 08                       php         ;flags after load/store sequence
200e : 49c3                     eor #$c3
2010 : d90802                   cmp abs1,y  ;test result
                                trap_ne
2013 : f003            >        beq skip0825
                       >        trap            ;failed not equal (non zero)
2015 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2018 :                 >skip0825
                        
2018 : 68                       pla         ;load status
                                eor_flag 0
2019 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
201b : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
201e : f003            >        beq skip0828
                       >        trap            ;failed not equal (non zero)
2020 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2023 :                 >skip0828
                        
2023 : 88                       dey
2024 : 10d9                     bpl tldx                  
                        
2026 : a003                     ldy #3
2028 :                  tldx1   
                                set_stat $ff
                       >            load_flag $ff
2028 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
202a : 48              >            pha         ;use stack to load status
202b : 28              >            plp
                        
202c : b619                     ldx zp1,y
202e : 08                       php         ;test stores do not alter flags
202f : 8a                       txa
2030 : 49c3                     eor #$c3
2032 : 28                       plp
2033 : 990302                   sta abst,y
2036 : 08                       php         ;flags after load/store sequence
2037 : 49c3                     eor #$c3
2039 : d90802                   cmp abs1,y  ;test result
                                trap_ne
203c : f003            >        beq skip0832
                       >        trap            ;failed not equal (non zero)
203e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2041 :                 >skip0832
                        
2041 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2042 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2044 : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
2047 : f003            >        beq skip0835
                       >        trap            ;failed not equal (non zero)
2049 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
204c :                 >skip0835
                        
204c : 88                       dey
204d : 10d9                     bpl tldx1                  
                        
204f : a003                     ldy #3
2051 :                  tldx2   
                                set_stat 0
                       >            load_flag 0
2051 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2053 : 48              >            pha         ;use stack to load status
2054 : 28              >            plp
                        
2055 : be0802                   ldx abs1,y
2058 : 08                       php         ;test stores do not alter flags
2059 : 8a                       txa
205a : 49c3                     eor #$c3
205c : aa                       tax
205d : 28                       plp
205e : 9612                     stx zpt,y
2060 : 08                       php         ;flags after load/store sequence
2061 : 49c3                     eor #$c3
2063 : d91900                   cmp zp1,y   ;test result
                                trap_ne
2066 : f003            >        beq skip0839
                       >        trap            ;failed not equal (non zero)
2068 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
206b :                 >skip0839
                        
206b : 68                       pla         ;load status
                                eor_flag 0
206c : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
206e : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
2071 : f003            >        beq skip0842
                       >        trap            ;failed not equal (non zero)
2073 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2076 :                 >skip0842
                        
2076 : 88                       dey
2077 : 10d8                     bpl tldx2                  
                        
2079 : a003                     ldy #3
207b :                  tldx3   
                                set_stat $ff
                       >            load_flag $ff
207b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
207d : 48              >            pha         ;use stack to load status
207e : 28              >            plp
                        
207f : be0802                   ldx abs1,y
2082 : 08                       php         ;test stores do not alter flags
2083 : 8a                       txa
2084 : 49c3                     eor #$c3
2086 : aa                       tax
2087 : 28                       plp
2088 : 9612                     stx zpt,y
208a : 08                       php         ;flags after load/store sequence
208b : 49c3                     eor #$c3
208d : d91900                   cmp zp1,y   ;test result
                                trap_ne
2090 : f003            >        beq skip0846
                       >        trap            ;failed not equal (non zero)
2092 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2095 :                 >skip0846
                        
2095 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2096 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2098 : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
209b : f003            >        beq skip0849
                       >        trap            ;failed not equal (non zero)
209d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20a0 :                 >skip0849
                        
20a0 : 88                       dey
20a1 : 10d8                     bpl tldx3
                                
20a3 : a003                     ldy #3      ;testing store result
20a5 : a200                     ldx #0
20a7 : b91200           tstx    lda zpt,y
20aa : 49c3                     eor #$c3
20ac : d91900                   cmp zp1,y
                                trap_ne     ;store to zp data
20af : f003            >        beq skip0851
                       >        trap            ;failed not equal (non zero)
20b1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20b4 :                 >skip0851
                        
20b4 : 9612                     stx zpt,y   ;clear                
20b6 : b90302                   lda abst,y
20b9 : 49c3                     eor #$c3
20bb : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
20be : f003            >        beq skip0853
                       >        trap            ;failed not equal (non zero)
20c0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20c3 :                 >skip0853
                        
20c3 : 8a                       txa
20c4 : 990302                   sta abst,y  ;clear                
20c7 : 88                       dey
20c8 : 10dd                     bpl tstx
                                next_test
20ca : ad0002          >            lda test_case   ;previous test
20cd : c90f            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
20cf : f003            >        beq skip0856
                       >        trap            ;failed not equal (non zero)
20d1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20d4 :                 >skip0856
                       >
0010 =                 >test_num = test_num + 1
20d4 : a910            >            lda #test_num   ;*** next tests' number
20d6 : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
20d9 : 8d04ef            sta $ef04
20dc : 696e6465786564..  db "indexed wraparound test (only zp should wrap)", 10, 0
210b : a0fd                     ldy #3+$fa
210d : b61f             tldx4   ldx zp1-$fa&$ff,y   ;wrap on indexed zp
210f : 8a                       txa
2110 : 990901                   sta abst-$fa,y      ;no STX abs,y!
2113 : 88                       dey
2114 : c0fa                     cpy #$fa
2116 : b0f5                     bcs tldx4                  
2118 : a0fd                     ldy #3+$fa
211a : be0e01           tldx5   ldx abs1-$fa,y      ;no wrap on indexed abs
211d : 9618                     stx zpt-$fa&$ff,y
211f : 88                       dey
2120 : c0fa                     cpy #$fa
2122 : b0f6                     bcs tldx5                  
2124 : a003                     ldy #3      ;testing wraparound result
2126 : a200                     ldx #0
2128 : b91200           tstx1   lda zpt,y
212b : d91900                   cmp zp1,y
                                trap_ne     ;store to zp data
212e : f003            >        beq skip0858
                       >        trap            ;failed not equal (non zero)
2130 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2133 :                 >skip0858
                        
2133 : 9612                     stx zpt,y   ;clear                
2135 : b90302                   lda abst,y
2138 : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
213b : f003            >        beq skip0860
                       >        trap            ;failed not equal (non zero)
213d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2140 :                 >skip0860
                        
2140 : 8a                       txa
2141 : 990302                   sta abst,y  ;clear                
2144 : 88                       dey
2145 : 10e1                     bpl tstx1
                                next_test
2147 : ad0002          >            lda test_case   ;previous test
214a : c910            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
214c : f003            >        beq skip0863
                       >        trap            ;failed not equal (non zero)
214e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2151 :                 >skip0863
                       >
0011 =                 >test_num = test_num + 1
2151 : a911            >            lda #test_num   ;*** next tests' number
2153 : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
2156 : 8d04ef            sta $ef04
2159 : 4c4459202f2053..  db "LDY / STY - zp,x / abs,x", 10, 0
2173 : a203                     ldx #3
2175 :                  tldy    
                                set_stat 0
                       >            load_flag 0
2175 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2177 : 48              >            pha         ;use stack to load status
2178 : 28              >            plp
                        
2179 : b419                     ldy zp1,x
217b : 08                       php         ;test stores do not alter flags
217c : 98                       tya
217d : 49c3                     eor #$c3
217f : 28                       plp
2180 : 9d0302                   sta abst,x
2183 : 08                       php         ;flags after load/store sequence
2184 : 49c3                     eor #$c3
2186 : dd0802                   cmp abs1,x  ;test result
                                trap_ne
2189 : f003            >        beq skip0867
                       >        trap            ;failed not equal (non zero)
218b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
218e :                 >skip0867
                        
218e : 68                       pla         ;load status
                                eor_flag 0
218f : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2191 : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
2194 : f003            >        beq skip0870
                       >        trap            ;failed not equal (non zero)
2196 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2199 :                 >skip0870
                        
2199 : ca                       dex
219a : 10d9                     bpl tldy                  
                        
219c : a203                     ldx #3
219e :                  tldy1   
                                set_stat $ff
                       >            load_flag $ff
219e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
21a0 : 48              >            pha         ;use stack to load status
21a1 : 28              >            plp
                        
21a2 : b419                     ldy zp1,x
21a4 : 08                       php         ;test stores do not alter flags
21a5 : 98                       tya
21a6 : 49c3                     eor #$c3
21a8 : 28                       plp
21a9 : 9d0302                   sta abst,x
21ac : 08                       php         ;flags after load/store sequence
21ad : 49c3                     eor #$c3
21af : dd0802                   cmp abs1,x  ;test result
                                trap_ne
21b2 : f003            >        beq skip0874
                       >        trap            ;failed not equal (non zero)
21b4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21b7 :                 >skip0874
                        
21b7 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
21b8 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
21ba : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
21bd : f003            >        beq skip0877
                       >        trap            ;failed not equal (non zero)
21bf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21c2 :                 >skip0877
                        
21c2 : ca                       dex
21c3 : 10d9                     bpl tldy1                  
                        
21c5 : a203                     ldx #3
21c7 :                  tldy2   
                                set_stat 0
                       >            load_flag 0
21c7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
21c9 : 48              >            pha         ;use stack to load status
21ca : 28              >            plp
                        
21cb : bc0802                   ldy abs1,x
21ce : 08                       php         ;test stores do not alter flags
21cf : 98                       tya
21d0 : 49c3                     eor #$c3
21d2 : a8                       tay
21d3 : 28                       plp
21d4 : 9412                     sty zpt,x
21d6 : 08                       php         ;flags after load/store sequence
21d7 : 49c3                     eor #$c3
21d9 : d519                     cmp zp1,x   ;test result
                                trap_ne
21db : f003            >        beq skip0881
                       >        trap            ;failed not equal (non zero)
21dd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21e0 :                 >skip0881
                        
21e0 : 68                       pla         ;load status
                                eor_flag 0
21e1 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
21e3 : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
21e6 : f003            >        beq skip0884
                       >        trap            ;failed not equal (non zero)
21e8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21eb :                 >skip0884
                        
21eb : ca                       dex
21ec : 10d9                     bpl tldy2                  
                        
21ee : a203                     ldx #3
21f0 :                  tldy3
                                set_stat $ff
                       >            load_flag $ff
21f0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
21f2 : 48              >            pha         ;use stack to load status
21f3 : 28              >            plp
                        
21f4 : bc0802                   ldy abs1,x
21f7 : 08                       php         ;test stores do not alter flags
21f8 : 98                       tya
21f9 : 49c3                     eor #$c3
21fb : a8                       tay
21fc : 28                       plp
21fd : 9412                     sty zpt,x
21ff : 08                       php         ;flags after load/store sequence
2200 : 49c3                     eor #$c3
2202 : d519                     cmp zp1,x   ;test result
                                trap_ne
2204 : f003            >        beq skip0888
                       >        trap            ;failed not equal (non zero)
2206 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2209 :                 >skip0888
                        
2209 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
220a : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
220c : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
220f : f003            >        beq skip0891
                       >        trap            ;failed not equal (non zero)
2211 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2214 :                 >skip0891
                        
2214 : ca                       dex
2215 : 10d9                     bpl tldy3
                        
2217 : a203                     ldx #3      ;testing store result
2219 : a000                     ldy #0
221b : b512             tsty    lda zpt,x
221d : 49c3                     eor #$c3
221f : d519                     cmp zp1,x
                                trap_ne     ;store to zp,x data
2221 : f003            >        beq skip0893
                       >        trap            ;failed not equal (non zero)
2223 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2226 :                 >skip0893
                        
2226 : 9412                     sty zpt,x   ;clear                
2228 : bd0302                   lda abst,x
222b : 49c3                     eor #$c3
222d : dd0802                   cmp abs1,x
                                trap_ne     ;store to abs,x data
2230 : f003            >        beq skip0895
                       >        trap            ;failed not equal (non zero)
2232 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2235 :                 >skip0895
                        
2235 : 8a                       txa
2236 : 9d0302                   sta abst,x  ;clear                
2239 : ca                       dex
223a : 10df                     bpl tsty
                                next_test
223c : ad0002          >            lda test_case   ;previous test
223f : c911            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2241 : f003            >        beq skip0898
                       >        trap            ;failed not equal (non zero)
2243 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2246 :                 >skip0898
                       >
0012 =                 >test_num = test_num + 1
2246 : a912            >            lda #test_num   ;*** next tests' number
2248 : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
224b : 8d04ef            sta $ef04
224e : 696e6465786564..  db "indexed wraparound test (only zp should wrap)", 10, 0
227d : a2fd                     ldx #3+$fa
227f : b41f             tldy4   ldy zp1-$fa&$ff,x   ;wrap on indexed zp
2281 : 98                       tya
2282 : 9d0901                   sta abst-$fa,x      ;no STX abs,x!
2285 : ca                       dex
2286 : e0fa                     cpx #$fa
2288 : b0f5                     bcs tldy4                  
228a : a2fd                     ldx #3+$fa
228c : bc0e01           tldy5   ldy abs1-$fa,x      ;no wrap on indexed abs
228f : 9418                     sty zpt-$fa&$ff,x
2291 : ca                       dex
2292 : e0fa                     cpx #$fa
2294 : b0f6                     bcs tldy5                  
2296 : a203                     ldx #3      ;testing wraparound result
2298 : a000                     ldy #0
229a : b512             tsty1   lda zpt,x
229c : d519                     cmp zp1,x
                                trap_ne     ;store to zp,x data
229e : f003            >        beq skip0900
                       >        trap            ;failed not equal (non zero)
22a0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22a3 :                 >skip0900
                        
22a3 : 9412                     sty zpt,x   ;clear                
22a5 : bd0302                   lda abst,x
22a8 : dd0802                   cmp abs1,x
                                trap_ne     ;store to abs,x data
22ab : f003            >        beq skip0902
                       >        trap            ;failed not equal (non zero)
22ad : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22b0 :                 >skip0902
                        
22b0 : 8a                       txa
22b1 : 9d0302                   sta abst,x  ;clear                
22b4 : ca                       dex
22b5 : 10e3                     bpl tsty1
                                next_test
22b7 : ad0002          >            lda test_case   ;previous test
22ba : c912            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
22bc : f003            >        beq skip0905
                       >        trap            ;failed not equal (non zero)
22be : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22c1 :                 >skip0905
                       >
0013 =                 >test_num = test_num + 1
22c1 : a913            >            lda #test_num   ;*** next tests' number
22c3 : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
22c6 : 8d04ef            sta $ef04
22c9 : 4c4458202f2053..  db "LDX / STX - zp / abs / #", 10, 0
                                set_stat 0  
                       >            load_flag 0  
22e3 : a900            >            lda #0               ;allow test to change I-flag (no mask)
                       >
22e5 : 48              >            pha         ;use stack to load status
22e6 : 28              >            plp
                        
22e7 : a619                     ldx zp1
22e9 : 08                       php         ;test stores do not alter flags
22ea : 8a                       txa
22eb : 49c3                     eor #$c3
22ed : aa                       tax
22ee : 28                       plp
22ef : 8e0302                   stx abst
22f2 : 08                       php         ;flags after load/store sequence
22f3 : 49c3                     eor #$c3
22f5 : aa                       tax
22f6 : e0c3                     cpx #$c3    ;test result
                                trap_ne
22f8 : f003            >        beq skip0909
                       >        trap            ;failed not equal (non zero)
22fa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22fd :                 >skip0909
                        
22fd : 68                       pla         ;load status
                                eor_flag 0
22fe : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2300 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
2303 : f003            >        beq skip0912
                       >        trap            ;failed not equal (non zero)
2305 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2308 :                 >skip0912
                        
                                set_stat 0
                       >            load_flag 0
2308 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
230a : 48              >            pha         ;use stack to load status
230b : 28              >            plp
                        
230c : a61a                     ldx zp1+1
230e : 08                       php         ;test stores do not alter flags
230f : 8a                       txa
2310 : 49c3                     eor #$c3
2312 : aa                       tax
2313 : 28                       plp
2314 : 8e0402                   stx abst+1
2317 : 08                       php         ;flags after load/store sequence
2318 : 49c3                     eor #$c3
231a : aa                       tax
231b : e082                     cpx #$82    ;test result
                                trap_ne
231d : f003            >        beq skip0916
                       >        trap            ;failed not equal (non zero)
231f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2322 :                 >skip0916
                        
2322 : 68                       pla         ;load status
                                eor_flag 0
2323 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2325 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
2328 : f003            >        beq skip0919
                       >        trap            ;failed not equal (non zero)
232a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
232d :                 >skip0919
                        
                                set_stat 0
                       >            load_flag 0
232d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
232f : 48              >            pha         ;use stack to load status
2330 : 28              >            plp
                        
2331 : a61b                     ldx zp1+2
2333 : 08                       php         ;test stores do not alter flags
2334 : 8a                       txa
2335 : 49c3                     eor #$c3
2337 : aa                       tax
2338 : 28                       plp
2339 : 8e0502                   stx abst+2
233c : 08                       php         ;flags after load/store sequence
233d : 49c3                     eor #$c3
233f : aa                       tax
2340 : e041                     cpx #$41    ;test result
                                trap_ne
2342 : f003            >        beq skip0923
                       >        trap            ;failed not equal (non zero)
2344 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2347 :                 >skip0923
                        
2347 : 68                       pla         ;load status
                                eor_flag 0
2348 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
234a : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
234d : f003            >        beq skip0926
                       >        trap            ;failed not equal (non zero)
234f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2352 :                 >skip0926
                        
                                set_stat 0
                       >            load_flag 0
2352 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2354 : 48              >            pha         ;use stack to load status
2355 : 28              >            plp
                        
2356 : a61c                     ldx zp1+3
2358 : 08                       php         ;test stores do not alter flags
2359 : 8a                       txa
235a : 49c3                     eor #$c3
235c : aa                       tax
235d : 28                       plp
235e : 8e0602                   stx abst+3
2361 : 08                       php         ;flags after load/store sequence
2362 : 49c3                     eor #$c3
2364 : aa                       tax
2365 : e000                     cpx #0      ;test result
                                trap_ne
2367 : f003            >        beq skip0930
                       >        trap            ;failed not equal (non zero)
2369 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
236c :                 >skip0930
                        
236c : 68                       pla         ;load status
                                eor_flag 0
236d : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
236f : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
2372 : f003            >        beq skip0933
                       >        trap            ;failed not equal (non zero)
2374 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2377 :                 >skip0933
                        
                        
                                set_stat $ff
                       >            load_flag $ff
2377 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2379 : 48              >            pha         ;use stack to load status
237a : 28              >            plp
                        
237b : a619                     ldx zp1  
237d : 08                       php         ;test stores do not alter flags
237e : 8a                       txa
237f : 49c3                     eor #$c3
2381 : aa                       tax
2382 : 28                       plp
2383 : 8e0302                   stx abst  
2386 : 08                       php         ;flags after load/store sequence
2387 : 49c3                     eor #$c3
2389 : aa                       tax
238a : e0c3                     cpx #$c3    ;test result
                                trap_ne     ;
238c : f003            >        beq skip0937
                       >        trap            ;failed not equal (non zero)
238e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2391 :                 >skip0937
                        
2391 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2392 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2394 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
2397 : f003            >        beq skip0940
                       >        trap            ;failed not equal (non zero)
2399 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
239c :                 >skip0940
                        
                                set_stat $ff
                       >            load_flag $ff
239c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
239e : 48              >            pha         ;use stack to load status
239f : 28              >            plp
                        
23a0 : a61a                     ldx zp1+1
23a2 : 08                       php         ;test stores do not alter flags
23a3 : 8a                       txa
23a4 : 49c3                     eor #$c3
23a6 : aa                       tax
23a7 : 28                       plp
23a8 : 8e0402                   stx abst+1
23ab : 08                       php         ;flags after load/store sequence
23ac : 49c3                     eor #$c3
23ae : aa                       tax
23af : e082                     cpx #$82    ;test result
                                trap_ne
23b1 : f003            >        beq skip0944
                       >        trap            ;failed not equal (non zero)
23b3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23b6 :                 >skip0944
                        
23b6 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
23b7 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
23b9 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
23bc : f003            >        beq skip0947
                       >        trap            ;failed not equal (non zero)
23be : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23c1 :                 >skip0947
                        
                                set_stat $ff
                       >            load_flag $ff
23c1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
23c3 : 48              >            pha         ;use stack to load status
23c4 : 28              >            plp
                        
23c5 : a61b                     ldx zp1+2
23c7 : 08                       php         ;test stores do not alter flags
23c8 : 8a                       txa
23c9 : 49c3                     eor #$c3
23cb : aa                       tax
23cc : 28                       plp
23cd : 8e0502                   stx abst+2
23d0 : 08                       php         ;flags after load/store sequence
23d1 : 49c3                     eor #$c3
23d3 : aa                       tax
23d4 : e041                     cpx #$41    ;test result
                                trap_ne     ;
23d6 : f003            >        beq skip0951
                       >        trap            ;failed not equal (non zero)
23d8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23db :                 >skip0951
                        
23db : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
23dc : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
23de : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
23e1 : f003            >        beq skip0954
                       >        trap            ;failed not equal (non zero)
23e3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23e6 :                 >skip0954
                        
                                set_stat $ff
                       >            load_flag $ff
23e6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
23e8 : 48              >            pha         ;use stack to load status
23e9 : 28              >            plp
                        
23ea : a61c                     ldx zp1+3
23ec : 08                       php         ;test stores do not alter flags
23ed : 8a                       txa
23ee : 49c3                     eor #$c3
23f0 : aa                       tax
23f1 : 28                       plp
23f2 : 8e0602                   stx abst+3
23f5 : 08                       php         ;flags after load/store sequence
23f6 : 49c3                     eor #$c3
23f8 : aa                       tax
23f9 : e000                     cpx #0      ;test result
                                trap_ne
23fb : f003            >        beq skip0958
                       >        trap            ;failed not equal (non zero)
23fd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2400 :                 >skip0958
                        
2400 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2401 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2403 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
2406 : f003            >        beq skip0961
                       >        trap            ;failed not equal (non zero)
2408 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
240b :                 >skip0961
                        
                        
                                set_stat 0
                       >            load_flag 0
240b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
240d : 48              >            pha         ;use stack to load status
240e : 28              >            plp
                        
240f : ae0802                   ldx abs1  
2412 : 08                       php         ;test stores do not alter flags
2413 : 8a                       txa
2414 : 49c3                     eor #$c3
2416 : aa                       tax
2417 : 28                       plp
2418 : 8612                     stx zpt  
241a : 08                       php         ;flags after load/store sequence
241b : 49c3                     eor #$c3
241d : c519                     cmp zp1     ;test result
                                trap_ne
241f : f003            >        beq skip0965
                       >        trap            ;failed not equal (non zero)
2421 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2424 :                 >skip0965
                        
2424 : 68                       pla         ;load status
                                eor_flag 0
2425 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2427 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
242a : f003            >        beq skip0968
                       >        trap            ;failed not equal (non zero)
242c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
242f :                 >skip0968
                        
                                set_stat 0
                       >            load_flag 0
242f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2431 : 48              >            pha         ;use stack to load status
2432 : 28              >            plp
                        
2433 : ae0902                   ldx abs1+1
2436 : 08                       php         ;test stores do not alter flags
2437 : 8a                       txa
2438 : 49c3                     eor #$c3
243a : aa                       tax
243b : 28                       plp
243c : 8613                     stx zpt+1
243e : 08                       php         ;flags after load/store sequence
243f : 49c3                     eor #$c3
2441 : c51a                     cmp zp1+1   ;test result
                                trap_ne
2443 : f003            >        beq skip0972
                       >        trap            ;failed not equal (non zero)
2445 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2448 :                 >skip0972
                        
2448 : 68                       pla         ;load status
                                eor_flag 0
2449 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
244b : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
244e : f003            >        beq skip0975
                       >        trap            ;failed not equal (non zero)
2450 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2453 :                 >skip0975
                        
                                set_stat 0
                       >            load_flag 0
2453 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2455 : 48              >            pha         ;use stack to load status
2456 : 28              >            plp
                        
2457 : ae0a02                   ldx abs1+2
245a : 08                       php         ;test stores do not alter flags
245b : 8a                       txa
245c : 49c3                     eor #$c3
245e : aa                       tax
245f : 28                       plp
2460 : 8614                     stx zpt+2
2462 : 08                       php         ;flags after load/store sequence
2463 : 49c3                     eor #$c3
2465 : c51b                     cmp zp1+2   ;test result
                                trap_ne
2467 : f003            >        beq skip0979
                       >        trap            ;failed not equal (non zero)
2469 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
246c :                 >skip0979
                        
246c : 68                       pla         ;load status
                                eor_flag 0
246d : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
246f : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
2472 : f003            >        beq skip0982
                       >        trap            ;failed not equal (non zero)
2474 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2477 :                 >skip0982
                        
                                set_stat 0
                       >            load_flag 0
2477 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2479 : 48              >            pha         ;use stack to load status
247a : 28              >            plp
                        
247b : ae0b02                   ldx abs1+3
247e : 08                       php         ;test stores do not alter flags
247f : 8a                       txa
2480 : 49c3                     eor #$c3
2482 : aa                       tax
2483 : 28                       plp
2484 : 8615                     stx zpt+3
2486 : 08                       php         ;flags after load/store sequence
2487 : 49c3                     eor #$c3
2489 : c51c                     cmp zp1+3   ;test result
                                trap_ne
248b : f003            >        beq skip0986
                       >        trap            ;failed not equal (non zero)
248d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2490 :                 >skip0986
                        
2490 : 68                       pla         ;load status
                                eor_flag 0
2491 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2493 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
2496 : f003            >        beq skip0989
                       >        trap            ;failed not equal (non zero)
2498 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
249b :                 >skip0989
                        
                        
                                set_stat $ff
                       >            load_flag $ff
249b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
249d : 48              >            pha         ;use stack to load status
249e : 28              >            plp
                        
249f : ae0802                   ldx abs1  
24a2 : 08                       php         ;test stores do not alter flags
24a3 : 8a                       txa
24a4 : 49c3                     eor #$c3
24a6 : aa                       tax
24a7 : 28                       plp
24a8 : 8612                     stx zpt  
24aa : 08                       php         ;flags after load/store sequence
24ab : 49c3                     eor #$c3
24ad : aa                       tax
24ae : e419                     cpx zp1     ;test result
                                trap_ne
24b0 : f003            >        beq skip0993
                       >        trap            ;failed not equal (non zero)
24b2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24b5 :                 >skip0993
                        
24b5 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
24b6 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
24b8 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
24bb : f003            >        beq skip0996
                       >        trap            ;failed not equal (non zero)
24bd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24c0 :                 >skip0996
                        
                                set_stat $ff
                       >            load_flag $ff
24c0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
24c2 : 48              >            pha         ;use stack to load status
24c3 : 28              >            plp
                        
24c4 : ae0902                   ldx abs1+1
24c7 : 08                       php         ;test stores do not alter flags
24c8 : 8a                       txa
24c9 : 49c3                     eor #$c3
24cb : aa                       tax
24cc : 28                       plp
24cd : 8613                     stx zpt+1
24cf : 08                       php         ;flags after load/store sequence
24d0 : 49c3                     eor #$c3
24d2 : aa                       tax
24d3 : e41a                     cpx zp1+1   ;test result
                                trap_ne
24d5 : f003            >        beq skip1000
                       >        trap            ;failed not equal (non zero)
24d7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24da :                 >skip1000
                        
24da : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
24db : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
24dd : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
24e0 : f003            >        beq skip1003
                       >        trap            ;failed not equal (non zero)
24e2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24e5 :                 >skip1003
                        
                                set_stat $ff
                       >            load_flag $ff
24e5 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
24e7 : 48              >            pha         ;use stack to load status
24e8 : 28              >            plp
                        
24e9 : ae0a02                   ldx abs1+2
24ec : 08                       php         ;test stores do not alter flags
24ed : 8a                       txa
24ee : 49c3                     eor #$c3
24f0 : aa                       tax
24f1 : 28                       plp
24f2 : 8614                     stx zpt+2
24f4 : 08                       php         ;flags after load/store sequence
24f5 : 49c3                     eor #$c3
24f7 : aa                       tax
24f8 : e41b                     cpx zp1+2   ;test result
                                trap_ne
24fa : f003            >        beq skip1007
                       >        trap            ;failed not equal (non zero)
24fc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24ff :                 >skip1007
                        
24ff : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2500 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2502 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
2505 : f003            >        beq skip1010
                       >        trap            ;failed not equal (non zero)
2507 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
250a :                 >skip1010
                        
                                set_stat $ff
                       >            load_flag $ff
250a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
250c : 48              >            pha         ;use stack to load status
250d : 28              >            plp
                        
250e : ae0b02                   ldx abs1+3
2511 : 08                       php         ;test stores do not alter flags
2512 : 8a                       txa
2513 : 49c3                     eor #$c3
2515 : aa                       tax
2516 : 28                       plp
2517 : 8615                     stx zpt+3
2519 : 08                       php         ;flags after load/store sequence
251a : 49c3                     eor #$c3
251c : aa                       tax
251d : e41c                     cpx zp1+3   ;test result
                                trap_ne
251f : f003            >        beq skip1014
                       >        trap            ;failed not equal (non zero)
2521 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2524 :                 >skip1014
                        
2524 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2525 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2527 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
252a : f003            >        beq skip1017
                       >        trap            ;failed not equal (non zero)
252c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
252f :                 >skip1017
                        
                        
                                set_stat 0  
                       >            load_flag 0  
252f : a900            >            lda #0               ;allow test to change I-flag (no mask)
                       >
2531 : 48              >            pha         ;use stack to load status
2532 : 28              >            plp
                        
2533 : a2c3                     ldx #$c3
2535 : 08                       php
2536 : ec0802                   cpx abs1    ;test result
                                trap_ne
2539 : f003            >        beq skip1021
                       >        trap            ;failed not equal (non zero)
253b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
253e :                 >skip1021
                        
253e : 68                       pla         ;load status
                                eor_flag 0
253f : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2541 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
2544 : f003            >        beq skip1024
                       >        trap            ;failed not equal (non zero)
2546 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2549 :                 >skip1024
                        
                                set_stat 0
                       >            load_flag 0
2549 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
254b : 48              >            pha         ;use stack to load status
254c : 28              >            plp
                        
254d : a282                     ldx #$82
254f : 08                       php
2550 : ec0902                   cpx abs1+1  ;test result
                                trap_ne
2553 : f003            >        beq skip1028
                       >        trap            ;failed not equal (non zero)
2555 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2558 :                 >skip1028
                        
2558 : 68                       pla         ;load status
                                eor_flag 0
2559 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
255b : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
255e : f003            >        beq skip1031
                       >        trap            ;failed not equal (non zero)
2560 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2563 :                 >skip1031
                        
                                set_stat 0
                       >            load_flag 0
2563 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2565 : 48              >            pha         ;use stack to load status
2566 : 28              >            plp
                        
2567 : a241                     ldx #$41
2569 : 08                       php
256a : ec0a02                   cpx abs1+2  ;test result
                                trap_ne
256d : f003            >        beq skip1035
                       >        trap            ;failed not equal (non zero)
256f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2572 :                 >skip1035
                        
2572 : 68                       pla         ;load status
                                eor_flag 0
2573 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2575 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
2578 : f003            >        beq skip1038
                       >        trap            ;failed not equal (non zero)
257a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
257d :                 >skip1038
                        
                                set_stat 0
                       >            load_flag 0
257d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
257f : 48              >            pha         ;use stack to load status
2580 : 28              >            plp
                        
2581 : a200                     ldx #0
2583 : 08                       php
2584 : ec0b02                   cpx abs1+3  ;test result
                                trap_ne
2587 : f003            >        beq skip1042
                       >        trap            ;failed not equal (non zero)
2589 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
258c :                 >skip1042
                        
258c : 68                       pla         ;load status
                                eor_flag 0
258d : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
258f : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
2592 : f003            >        beq skip1045
                       >        trap            ;failed not equal (non zero)
2594 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2597 :                 >skip1045
                        
                        
                                set_stat $ff
                       >            load_flag $ff
2597 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2599 : 48              >            pha         ;use stack to load status
259a : 28              >            plp
                        
259b : a2c3                     ldx #$c3  
259d : 08                       php
259e : ec0802                   cpx abs1    ;test result
                                trap_ne
25a1 : f003            >        beq skip1049
                       >        trap            ;failed not equal (non zero)
25a3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25a6 :                 >skip1049
                        
25a6 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
25a7 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
25a9 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
25ac : f003            >        beq skip1052
                       >        trap            ;failed not equal (non zero)
25ae : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25b1 :                 >skip1052
                        
                                set_stat $ff
                       >            load_flag $ff
25b1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
25b3 : 48              >            pha         ;use stack to load status
25b4 : 28              >            plp
                        
25b5 : a282                     ldx #$82
25b7 : 08                       php
25b8 : ec0902                   cpx abs1+1  ;test result
                                trap_ne
25bb : f003            >        beq skip1056
                       >        trap            ;failed not equal (non zero)
25bd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25c0 :                 >skip1056
                        
25c0 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
25c1 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
25c3 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
25c6 : f003            >        beq skip1059
                       >        trap            ;failed not equal (non zero)
25c8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25cb :                 >skip1059
                        
                                set_stat $ff
                       >            load_flag $ff
25cb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
25cd : 48              >            pha         ;use stack to load status
25ce : 28              >            plp
                        
25cf : a241                     ldx #$41
25d1 : 08                       php
25d2 : ec0a02                   cpx abs1+2  ;test result
                                trap_ne
25d5 : f003            >        beq skip1063
                       >        trap            ;failed not equal (non zero)
25d7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25da :                 >skip1063
                        
25da : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
25db : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
25dd : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
25e0 : f003            >        beq skip1066
                       >        trap            ;failed not equal (non zero)
25e2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25e5 :                 >skip1066
                        
                                set_stat $ff
                       >            load_flag $ff
25e5 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
25e7 : 48              >            pha         ;use stack to load status
25e8 : 28              >            plp
                        
25e9 : a200                     ldx #0
25eb : 08                       php
25ec : ec0b02                   cpx abs1+3  ;test result
                                trap_ne
25ef : f003            >        beq skip1070
                       >        trap            ;failed not equal (non zero)
25f1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25f4 :                 >skip1070
                        
25f4 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
25f5 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
25f7 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
25fa : f003            >        beq skip1073
                       >        trap            ;failed not equal (non zero)
25fc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25ff :                 >skip1073
                        
                        
25ff : a200                     ldx #0
2601 : a512                     lda zpt  
2603 : 49c3                     eor #$c3
2605 : c519                     cmp zp1  
                                trap_ne     ;store to zp data
2607 : f003            >        beq skip1075
                       >        trap            ;failed not equal (non zero)
2609 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
260c :                 >skip1075
                        
260c : 8612                     stx zpt     ;clear                
260e : ad0302                   lda abst  
2611 : 49c3                     eor #$c3
2613 : cd0802                   cmp abs1  
                                trap_ne     ;store to abs data
2616 : f003            >        beq skip1077
                       >        trap            ;failed not equal (non zero)
2618 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
261b :                 >skip1077
                        
261b : 8e0302                   stx abst    ;clear                
261e : a513                     lda zpt+1
2620 : 49c3                     eor #$c3
2622 : c51a                     cmp zp1+1
                                trap_ne     ;store to zp data
2624 : f003            >        beq skip1079
                       >        trap            ;failed not equal (non zero)
2626 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2629 :                 >skip1079
                        
2629 : 8613                     stx zpt+1   ;clear                
262b : ad0402                   lda abst+1
262e : 49c3                     eor #$c3
2630 : cd0902                   cmp abs1+1
                                trap_ne     ;store to abs data
2633 : f003            >        beq skip1081
                       >        trap            ;failed not equal (non zero)
2635 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2638 :                 >skip1081
                        
2638 : 8e0402                   stx abst+1  ;clear                
263b : a514                     lda zpt+2
263d : 49c3                     eor #$c3
263f : c51b                     cmp zp1+2
                                trap_ne     ;store to zp data
2641 : f003            >        beq skip1083
                       >        trap            ;failed not equal (non zero)
2643 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2646 :                 >skip1083
                        
2646 : 8614                     stx zpt+2   ;clear                
2648 : ad0502                   lda abst+2
264b : 49c3                     eor #$c3
264d : cd0a02                   cmp abs1+2
                                trap_ne     ;store to abs data
2650 : f003            >        beq skip1085
                       >        trap            ;failed not equal (non zero)
2652 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2655 :                 >skip1085
                        
2655 : 8e0502                   stx abst+2  ;clear                
2658 : a515                     lda zpt+3
265a : 49c3                     eor #$c3
265c : c51c                     cmp zp1+3
                                trap_ne     ;store to zp data
265e : f003            >        beq skip1087
                       >        trap            ;failed not equal (non zero)
2660 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2663 :                 >skip1087
                        
2663 : 8615                     stx zpt+3   ;clear                
2665 : ad0602                   lda abst+3
2668 : 49c3                     eor #$c3
266a : cd0b02                   cmp abs1+3
                                trap_ne     ;store to abs data
266d : f003            >        beq skip1089
                       >        trap            ;failed not equal (non zero)
266f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2672 :                 >skip1089
                        
2672 : 8e0602                   stx abst+3  ;clear                
                                next_test
2675 : ad0002          >            lda test_case   ;previous test
2678 : c913            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
267a : f003            >        beq skip1092
                       >        trap            ;failed not equal (non zero)
267c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
267f :                 >skip1092
                       >
0014 =                 >test_num = test_num + 1
267f : a914            >            lda #test_num   ;*** next tests' number
2681 : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
2684 : 8d04ef            sta $ef04
2687 : 4c4459202f2053..  db "LDY / STY - zp / abs / #", 10, 0
                                set_stat 0
                       >            load_flag 0
26a1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
26a3 : 48              >            pha         ;use stack to load status
26a4 : 28              >            plp
                        
26a5 : a419                     ldy zp1  
26a7 : 08                       php         ;test stores do not alter flags
26a8 : 98                       tya
26a9 : 49c3                     eor #$c3
26ab : a8                       tay
26ac : 28                       plp
26ad : 8c0302                   sty abst  
26b0 : 08                       php         ;flags after load/store sequence
26b1 : 49c3                     eor #$c3
26b3 : a8                       tay
26b4 : c0c3                     cpy #$c3    ;test result
                                trap_ne
26b6 : f003            >        beq skip1096
                       >        trap            ;failed not equal (non zero)
26b8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26bb :                 >skip1096
                        
26bb : 68                       pla         ;load status
                                eor_flag 0
26bc : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
26be : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
26c1 : f003            >        beq skip1099
                       >        trap            ;failed not equal (non zero)
26c3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26c6 :                 >skip1099
                        
                                set_stat 0
                       >            load_flag 0
26c6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
26c8 : 48              >            pha         ;use stack to load status
26c9 : 28              >            plp
                        
26ca : a41a                     ldy zp1+1
26cc : 08                       php         ;test stores do not alter flags
26cd : 98                       tya
26ce : 49c3                     eor #$c3
26d0 : a8                       tay
26d1 : 28                       plp
26d2 : 8c0402                   sty abst+1
26d5 : 08                       php         ;flags after load/store sequence
26d6 : 49c3                     eor #$c3
26d8 : a8                       tay
26d9 : c082                     cpy #$82    ;test result
                                trap_ne
26db : f003            >        beq skip1103
                       >        trap            ;failed not equal (non zero)
26dd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26e0 :                 >skip1103
                        
26e0 : 68                       pla         ;load status
                                eor_flag 0
26e1 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
26e3 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
26e6 : f003            >        beq skip1106
                       >        trap            ;failed not equal (non zero)
26e8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26eb :                 >skip1106
                        
                                set_stat 0
                       >            load_flag 0
26eb : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
26ed : 48              >            pha         ;use stack to load status
26ee : 28              >            plp
                        
26ef : a41b                     ldy zp1+2
26f1 : 08                       php         ;test stores do not alter flags
26f2 : 98                       tya
26f3 : 49c3                     eor #$c3
26f5 : a8                       tay
26f6 : 28                       plp
26f7 : 8c0502                   sty abst+2
26fa : 08                       php         ;flags after load/store sequence
26fb : 49c3                     eor #$c3
26fd : a8                       tay
26fe : c041                     cpy #$41    ;test result
                                trap_ne
2700 : f003            >        beq skip1110
                       >        trap            ;failed not equal (non zero)
2702 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2705 :                 >skip1110
                        
2705 : 68                       pla         ;load status
                                eor_flag 0
2706 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2708 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
270b : f003            >        beq skip1113
                       >        trap            ;failed not equal (non zero)
270d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2710 :                 >skip1113
                        
                                set_stat 0
                       >            load_flag 0
2710 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2712 : 48              >            pha         ;use stack to load status
2713 : 28              >            plp
                        
2714 : a41c                     ldy zp1+3
2716 : 08                       php         ;test stores do not alter flags
2717 : 98                       tya
2718 : 49c3                     eor #$c3
271a : a8                       tay
271b : 28                       plp
271c : 8c0602                   sty abst+3
271f : 08                       php         ;flags after load/store sequence
2720 : 49c3                     eor #$c3
2722 : a8                       tay
2723 : c000                     cpy #0      ;test result
                                trap_ne
2725 : f003            >        beq skip1117
                       >        trap            ;failed not equal (non zero)
2727 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
272a :                 >skip1117
                        
272a : 68                       pla         ;load status
                                eor_flag 0
272b : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
272d : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
2730 : f003            >        beq skip1120
                       >        trap            ;failed not equal (non zero)
2732 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2735 :                 >skip1120
                        
                        
                                set_stat $ff
                       >            load_flag $ff
2735 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2737 : 48              >            pha         ;use stack to load status
2738 : 28              >            plp
                        
2739 : a419                     ldy zp1  
273b : 08                       php         ;test stores do not alter flags
273c : 98                       tya
273d : 49c3                     eor #$c3
273f : a8                       tay
2740 : 28                       plp
2741 : 8c0302                   sty abst  
2744 : 08                       php         ;flags after load/store sequence
2745 : 49c3                     eor #$c3
2747 : a8                       tay
2748 : c0c3                     cpy #$c3    ;test result
                                trap_ne
274a : f003            >        beq skip1124
                       >        trap            ;failed not equal (non zero)
274c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
274f :                 >skip1124
                        
274f : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2750 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2752 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
2755 : f003            >        beq skip1127
                       >        trap            ;failed not equal (non zero)
2757 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
275a :                 >skip1127
                        
                                set_stat $ff
                       >            load_flag $ff
275a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
275c : 48              >            pha         ;use stack to load status
275d : 28              >            plp
                        
275e : a41a                     ldy zp1+1
2760 : 08                       php         ;test stores do not alter flags
2761 : 98                       tya
2762 : 49c3                     eor #$c3
2764 : a8                       tay
2765 : 28                       plp
2766 : 8c0402                   sty abst+1
2769 : 08                       php         ;flags after load/store sequence
276a : 49c3                     eor #$c3
276c : a8                       tay
276d : c082                     cpy #$82   ;test result
                                trap_ne
276f : f003            >        beq skip1131
                       >        trap            ;failed not equal (non zero)
2771 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2774 :                 >skip1131
                        
2774 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2775 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2777 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
277a : f003            >        beq skip1134
                       >        trap            ;failed not equal (non zero)
277c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
277f :                 >skip1134
                        
                                set_stat $ff
                       >            load_flag $ff
277f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2781 : 48              >            pha         ;use stack to load status
2782 : 28              >            plp
                        
2783 : a41b                     ldy zp1+2
2785 : 08                       php         ;test stores do not alter flags
2786 : 98                       tya
2787 : 49c3                     eor #$c3
2789 : a8                       tay
278a : 28                       plp
278b : 8c0502                   sty abst+2
278e : 08                       php         ;flags after load/store sequence
278f : 49c3                     eor #$c3
2791 : a8                       tay
2792 : c041                     cpy #$41    ;test result
                                trap_ne
2794 : f003            >        beq skip1138
                       >        trap            ;failed not equal (non zero)
2796 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2799 :                 >skip1138
                        
2799 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
279a : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
279c : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
279f : f003            >        beq skip1141
                       >        trap            ;failed not equal (non zero)
27a1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27a4 :                 >skip1141
                        
                                set_stat $ff
                       >            load_flag $ff
27a4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
27a6 : 48              >            pha         ;use stack to load status
27a7 : 28              >            plp
                        
27a8 : a41c                     ldy zp1+3
27aa : 08                       php         ;test stores do not alter flags
27ab : 98                       tya
27ac : 49c3                     eor #$c3
27ae : a8                       tay
27af : 28                       plp
27b0 : 8c0602                   sty abst+3
27b3 : 08                       php         ;flags after load/store sequence
27b4 : 49c3                     eor #$c3
27b6 : a8                       tay
27b7 : c000                     cpy #0      ;test result
                                trap_ne
27b9 : f003            >        beq skip1145
                       >        trap            ;failed not equal (non zero)
27bb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27be :                 >skip1145
                        
27be : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
27bf : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
27c1 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
27c4 : f003            >        beq skip1148
                       >        trap            ;failed not equal (non zero)
27c6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27c9 :                 >skip1148
                        
                                
                                set_stat 0
                       >            load_flag 0
27c9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
27cb : 48              >            pha         ;use stack to load status
27cc : 28              >            plp
                        
27cd : ac0802                   ldy abs1  
27d0 : 08                       php         ;test stores do not alter flags
27d1 : 98                       tya
27d2 : 49c3                     eor #$c3
27d4 : a8                       tay
27d5 : 28                       plp
27d6 : 8412                     sty zpt  
27d8 : 08                       php         ;flags after load/store sequence
27d9 : 49c3                     eor #$c3
27db : a8                       tay
27dc : c419                     cpy zp1     ;test result
                                trap_ne
27de : f003            >        beq skip1152
                       >        trap            ;failed not equal (non zero)
27e0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27e3 :                 >skip1152
                        
27e3 : 68                       pla         ;load status
                                eor_flag 0
27e4 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
27e6 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
27e9 : f003            >        beq skip1155
                       >        trap            ;failed not equal (non zero)
27eb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27ee :                 >skip1155
                        
                                set_stat 0
                       >            load_flag 0
27ee : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
27f0 : 48              >            pha         ;use stack to load status
27f1 : 28              >            plp
                        
27f2 : ac0902                   ldy abs1+1
27f5 : 08                       php         ;test stores do not alter flags
27f6 : 98                       tya
27f7 : 49c3                     eor #$c3
27f9 : a8                       tay
27fa : 28                       plp
27fb : 8413                     sty zpt+1
27fd : 08                       php         ;flags after load/store sequence
27fe : 49c3                     eor #$c3
2800 : a8                       tay
2801 : c41a                     cpy zp1+1   ;test result
                                trap_ne
2803 : f003            >        beq skip1159
                       >        trap            ;failed not equal (non zero)
2805 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2808 :                 >skip1159
                        
2808 : 68                       pla         ;load status
                                eor_flag 0
2809 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
280b : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
280e : f003            >        beq skip1162
                       >        trap            ;failed not equal (non zero)
2810 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2813 :                 >skip1162
                        
                                set_stat 0
                       >            load_flag 0
2813 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2815 : 48              >            pha         ;use stack to load status
2816 : 28              >            plp
                        
2817 : ac0a02                   ldy abs1+2
281a : 08                       php         ;test stores do not alter flags
281b : 98                       tya
281c : 49c3                     eor #$c3
281e : a8                       tay
281f : 28                       plp
2820 : 8414                     sty zpt+2
2822 : 08                       php         ;flags after load/store sequence
2823 : 49c3                     eor #$c3
2825 : a8                       tay
2826 : c41b                     cpy zp1+2   ;test result
                                trap_ne
2828 : f003            >        beq skip1166
                       >        trap            ;failed not equal (non zero)
282a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
282d :                 >skip1166
                        
282d : 68                       pla         ;load status
                                eor_flag 0
282e : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2830 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
2833 : f003            >        beq skip1169
                       >        trap            ;failed not equal (non zero)
2835 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2838 :                 >skip1169
                        
                                set_stat 0
                       >            load_flag 0
2838 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
283a : 48              >            pha         ;use stack to load status
283b : 28              >            plp
                        
283c : ac0b02                   ldy abs1+3
283f : 08                       php         ;test stores do not alter flags
2840 : 98                       tya
2841 : 49c3                     eor #$c3
2843 : a8                       tay
2844 : 28                       plp
2845 : 8415                     sty zpt+3
2847 : 08                       php         ;flags after load/store sequence
2848 : 49c3                     eor #$c3
284a : a8                       tay
284b : c41c                     cpy zp1+3   ;test result
                                trap_ne
284d : f003            >        beq skip1173
                       >        trap            ;failed not equal (non zero)
284f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2852 :                 >skip1173
                        
2852 : 68                       pla         ;load status
                                eor_flag 0
2853 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2855 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
2858 : f003            >        beq skip1176
                       >        trap            ;failed not equal (non zero)
285a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
285d :                 >skip1176
                        
                        
                                set_stat $ff
                       >            load_flag $ff
285d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
285f : 48              >            pha         ;use stack to load status
2860 : 28              >            plp
                        
2861 : ac0802                   ldy abs1  
2864 : 08                       php         ;test stores do not alter flags
2865 : 98                       tya
2866 : 49c3                     eor #$c3
2868 : a8                       tay
2869 : 28                       plp
286a : 8412                     sty zpt  
286c : 08                       php         ;flags after load/store sequence
286d : 49c3                     eor #$c3
286f : a8                       tay
2870 : c519                     cmp zp1     ;test result
                                trap_ne
2872 : f003            >        beq skip1180
                       >        trap            ;failed not equal (non zero)
2874 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2877 :                 >skip1180
                        
2877 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2878 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
287a : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
287d : f003            >        beq skip1183
                       >        trap            ;failed not equal (non zero)
287f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2882 :                 >skip1183
                        
                                set_stat $ff
                       >            load_flag $ff
2882 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2884 : 48              >            pha         ;use stack to load status
2885 : 28              >            plp
                        
2886 : ac0902                   ldy abs1+1
2889 : 08                       php         ;test stores do not alter flags
288a : 98                       tya
288b : 49c3                     eor #$c3
288d : a8                       tay
288e : 28                       plp
288f : 8413                     sty zpt+1
2891 : 08                       php         ;flags after load/store sequence
2892 : 49c3                     eor #$c3
2894 : a8                       tay
2895 : c51a                     cmp zp1+1   ;test result
                                trap_ne
2897 : f003            >        beq skip1187
                       >        trap            ;failed not equal (non zero)
2899 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
289c :                 >skip1187
                        
289c : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
289d : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
289f : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
28a2 : f003            >        beq skip1190
                       >        trap            ;failed not equal (non zero)
28a4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28a7 :                 >skip1190
                        
                                set_stat $ff
                       >            load_flag $ff
28a7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
28a9 : 48              >            pha         ;use stack to load status
28aa : 28              >            plp
                        
28ab : ac0a02                   ldy abs1+2
28ae : 08                       php         ;test stores do not alter flags
28af : 98                       tya
28b0 : 49c3                     eor #$c3
28b2 : a8                       tay
28b3 : 28                       plp
28b4 : 8414                     sty zpt+2
28b6 : 08                       php         ;flags after load/store sequence
28b7 : 49c3                     eor #$c3
28b9 : a8                       tay
28ba : c51b                     cmp zp1+2   ;test result
                                trap_ne
28bc : f003            >        beq skip1194
                       >        trap            ;failed not equal (non zero)
28be : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28c1 :                 >skip1194
                        
28c1 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
28c2 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
28c4 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
28c7 : f003            >        beq skip1197
                       >        trap            ;failed not equal (non zero)
28c9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28cc :                 >skip1197
                        
                                set_stat $ff
                       >            load_flag $ff
28cc : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
28ce : 48              >            pha         ;use stack to load status
28cf : 28              >            plp
                        
28d0 : ac0b02                   ldy abs1+3
28d3 : 08                       php         ;test stores do not alter flags
28d4 : 98                       tya
28d5 : 49c3                     eor #$c3
28d7 : a8                       tay
28d8 : 28                       plp
28d9 : 8415                     sty zpt+3
28db : 08                       php         ;flags after load/store sequence
28dc : 49c3                     eor #$c3
28de : a8                       tay
28df : c51c                     cmp zp1+3   ;test result
                                trap_ne
28e1 : f003            >        beq skip1201
                       >        trap            ;failed not equal (non zero)
28e3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28e6 :                 >skip1201
                        
28e6 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
28e7 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
28e9 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
28ec : f003            >        beq skip1204
                       >        trap            ;failed not equal (non zero)
28ee : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28f1 :                 >skip1204
                        
                        
                        
                                set_stat 0
                       >            load_flag 0
28f1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
28f3 : 48              >            pha         ;use stack to load status
28f4 : 28              >            plp
                        
28f5 : a0c3                     ldy #$c3  
28f7 : 08                       php
28f8 : cc0802                   cpy abs1    ;test result
                                trap_ne
28fb : f003            >        beq skip1208
                       >        trap            ;failed not equal (non zero)
28fd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2900 :                 >skip1208
                        
2900 : 68                       pla         ;load status
                                eor_flag 0
2901 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2903 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
2906 : f003            >        beq skip1211
                       >        trap            ;failed not equal (non zero)
2908 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
290b :                 >skip1211
                        
                                set_stat 0
                       >            load_flag 0
290b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
290d : 48              >            pha         ;use stack to load status
290e : 28              >            plp
                        
290f : a082                     ldy #$82
2911 : 08                       php
2912 : cc0902                   cpy abs1+1  ;test result
                                trap_ne
2915 : f003            >        beq skip1215
                       >        trap            ;failed not equal (non zero)
2917 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
291a :                 >skip1215
                        
291a : 68                       pla         ;load status
                                eor_flag 0
291b : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
291d : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
2920 : f003            >        beq skip1218
                       >        trap            ;failed not equal (non zero)
2922 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2925 :                 >skip1218
                        
                                set_stat 0
                       >            load_flag 0
2925 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2927 : 48              >            pha         ;use stack to load status
2928 : 28              >            plp
                        
2929 : a041                     ldy #$41
292b : 08                       php
292c : cc0a02                   cpy abs1+2  ;test result
                                trap_ne
292f : f003            >        beq skip1222
                       >        trap            ;failed not equal (non zero)
2931 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2934 :                 >skip1222
                        
2934 : 68                       pla         ;load status
                                eor_flag 0
2935 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2937 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
293a : f003            >        beq skip1225
                       >        trap            ;failed not equal (non zero)
293c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
293f :                 >skip1225
                        
                                set_stat 0
                       >            load_flag 0
293f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2941 : 48              >            pha         ;use stack to load status
2942 : 28              >            plp
                        
2943 : a000                     ldy #0
2945 : 08                       php
2946 : cc0b02                   cpy abs1+3  ;test result
                                trap_ne
2949 : f003            >        beq skip1229
                       >        trap            ;failed not equal (non zero)
294b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
294e :                 >skip1229
                        
294e : 68                       pla         ;load status
                                eor_flag 0
294f : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2951 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
2954 : f003            >        beq skip1232
                       >        trap            ;failed not equal (non zero)
2956 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2959 :                 >skip1232
                        
                        
                                set_stat $ff
                       >            load_flag $ff
2959 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
295b : 48              >            pha         ;use stack to load status
295c : 28              >            plp
                        
295d : a0c3                     ldy #$c3  
295f : 08                       php
2960 : cc0802                   cpy abs1    ;test result
                                trap_ne
2963 : f003            >        beq skip1236
                       >        trap            ;failed not equal (non zero)
2965 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2968 :                 >skip1236
                        
2968 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2969 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
296b : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
296e : f003            >        beq skip1239
                       >        trap            ;failed not equal (non zero)
2970 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2973 :                 >skip1239
                        
                                set_stat $ff
                       >            load_flag $ff
2973 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2975 : 48              >            pha         ;use stack to load status
2976 : 28              >            plp
                        
2977 : a082                     ldy #$82
2979 : 08                       php
297a : cc0902                   cpy abs1+1  ;test result
                                trap_ne
297d : f003            >        beq skip1243
                       >        trap            ;failed not equal (non zero)
297f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2982 :                 >skip1243
                        
2982 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2983 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2985 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
2988 : f003            >        beq skip1246
                       >        trap            ;failed not equal (non zero)
298a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
298d :                 >skip1246
                        
                                set_stat $ff
                       >            load_flag $ff
298d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
298f : 48              >            pha         ;use stack to load status
2990 : 28              >            plp
                        
2991 : a041                     ldy #$41
2993 : 08                       php
2994 : cc0a02                   cpy abs1+2   ;test result
                                trap_ne
2997 : f003            >        beq skip1250
                       >        trap            ;failed not equal (non zero)
2999 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
299c :                 >skip1250
                        
299c : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
299d : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
299f : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
29a2 : f003            >        beq skip1253
                       >        trap            ;failed not equal (non zero)
29a4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29a7 :                 >skip1253
                        
                                set_stat $ff
                       >            load_flag $ff
29a7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
29a9 : 48              >            pha         ;use stack to load status
29aa : 28              >            plp
                        
29ab : a000                     ldy #0
29ad : 08                       php
29ae : cc0b02                   cpy abs1+3  ;test result
                                trap_ne
29b1 : f003            >        beq skip1257
                       >        trap            ;failed not equal (non zero)
29b3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29b6 :                 >skip1257
                        
29b6 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
29b7 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
29b9 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
29bc : f003            >        beq skip1260
                       >        trap            ;failed not equal (non zero)
29be : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29c1 :                 >skip1260
                        
                                
29c1 : a000                     ldy #0
29c3 : a512                     lda zpt  
29c5 : 49c3                     eor #$c3
29c7 : c519                     cmp zp1  
                                trap_ne     ;store to zp   data
29c9 : f003            >        beq skip1262
                       >        trap            ;failed not equal (non zero)
29cb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29ce :                 >skip1262
                        
29ce : 8412                     sty zpt     ;clear                
29d0 : ad0302                   lda abst  
29d3 : 49c3                     eor #$c3
29d5 : cd0802                   cmp abs1  
                                trap_ne     ;store to abs   data
29d8 : f003            >        beq skip1264
                       >        trap            ;failed not equal (non zero)
29da : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29dd :                 >skip1264
                        
29dd : 8c0302                   sty abst    ;clear                
29e0 : a513                     lda zpt+1
29e2 : 49c3                     eor #$c3
29e4 : c51a                     cmp zp1+1
                                trap_ne     ;store to zp+1 data
29e6 : f003            >        beq skip1266
                       >        trap            ;failed not equal (non zero)
29e8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29eb :                 >skip1266
                        
29eb : 8413                     sty zpt+1   ;clear                
29ed : ad0402                   lda abst+1
29f0 : 49c3                     eor #$c3
29f2 : cd0902                   cmp abs1+1
                                trap_ne     ;store to abs+1 data
29f5 : f003            >        beq skip1268
                       >        trap            ;failed not equal (non zero)
29f7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29fa :                 >skip1268
                        
29fa : 8c0402                   sty abst+1  ;clear                
29fd : a514                     lda zpt+2
29ff : 49c3                     eor #$c3
2a01 : c51b                     cmp zp1+2
                                trap_ne     ;store to zp+2 data
2a03 : f003            >        beq skip1270
                       >        trap            ;failed not equal (non zero)
2a05 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a08 :                 >skip1270
                        
2a08 : 8414                     sty zpt+2   ;clear                
2a0a : ad0502                   lda abst+2
2a0d : 49c3                     eor #$c3
2a0f : cd0a02                   cmp abs1+2
                                trap_ne     ;store to abs+2 data
2a12 : f003            >        beq skip1272
                       >        trap            ;failed not equal (non zero)
2a14 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a17 :                 >skip1272
                        
2a17 : 8c0502                   sty abst+2  ;clear                
2a1a : a515                     lda zpt+3
2a1c : 49c3                     eor #$c3
2a1e : c51c                     cmp zp1+3
                                trap_ne     ;store to zp+3 data
2a20 : f003            >        beq skip1274
                       >        trap            ;failed not equal (non zero)
2a22 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a25 :                 >skip1274
                        
2a25 : 8415                     sty zpt+3   ;clear                
2a27 : ad0602                   lda abst+3
2a2a : 49c3                     eor #$c3
2a2c : cd0b02                   cmp abs1+3
                                trap_ne     ;store to abs+3 data
2a2f : f003            >        beq skip1276
                       >        trap            ;failed not equal (non zero)
2a31 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a34 :                 >skip1276
                        
2a34 : 8c0602                   sty abst+3  ;clear                
                                next_test
2a37 : ad0002          >            lda test_case   ;previous test
2a3a : c914            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2a3c : f003            >        beq skip1279
                       >        trap            ;failed not equal (non zero)
2a3e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a41 :                 >skip1279
                       >
0015 =                 >test_num = test_num + 1
2a41 : a915            >            lda #test_num   ;*** next tests' number
2a43 : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
2a46 : 8d04ef            sta $ef04
2a49 : 74657374696e67..  db "testing load / store accumulator LDA / STA all addressing modes", 10, 0
2a8a : 8d04ef            sta $ef04
2a8d : 4c4441202f2053..  db "LDA / STA - zp,x / abs,x", 10, 0
2aa7 : a203                     ldx #3
2aa9 :                  tldax    
                                set_stat 0
                       >            load_flag 0
2aa9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2aab : 48              >            pha         ;use stack to load status
2aac : 28              >            plp
                        
2aad : b519                     lda zp1,x
2aaf : 08                       php         ;test stores do not alter flags
2ab0 : 49c3                     eor #$c3
2ab2 : 28                       plp
2ab3 : 9d0302                   sta abst,x
2ab6 : 08                       php         ;flags after load/store sequence
2ab7 : 49c3                     eor #$c3
2ab9 : dd0802                   cmp abs1,x  ;test result
                                trap_ne
2abc : f003            >        beq skip1283
                       >        trap            ;failed not equal (non zero)
2abe : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ac1 :                 >skip1283
                        
2ac1 : 68                       pla         ;load status
                                eor_flag 0
2ac2 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2ac4 : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
2ac7 : f003            >        beq skip1286
                       >        trap            ;failed not equal (non zero)
2ac9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2acc :                 >skip1286
                        
2acc : ca                       dex
2acd : 10da                     bpl tldax                  
                        
2acf : a203                     ldx #3
2ad1 :                  tldax1   
                                set_stat $ff
                       >            load_flag $ff
2ad1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2ad3 : 48              >            pha         ;use stack to load status
2ad4 : 28              >            plp
                        
2ad5 : b519                     lda zp1,x
2ad7 : 08                       php         ;test stores do not alter flags
2ad8 : 49c3                     eor #$c3
2ada : 28                       plp
2adb : 9d0302                   sta abst,x
2ade : 08                       php         ;flags after load/store sequence
2adf : 49c3                     eor #$c3
2ae1 : dd0802                   cmp abs1,x   ;test result
                                trap_ne
2ae4 : f003            >        beq skip1290
                       >        trap            ;failed not equal (non zero)
2ae6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ae9 :                 >skip1290
                        
2ae9 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2aea : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2aec : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
2aef : f003            >        beq skip1293
                       >        trap            ;failed not equal (non zero)
2af1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2af4 :                 >skip1293
                        
2af4 : ca                       dex
2af5 : 10da                     bpl tldax1                  
                        
2af7 : a203                     ldx #3
2af9 :                  tldax2   
                                set_stat 0
                       >            load_flag 0
2af9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2afb : 48              >            pha         ;use stack to load status
2afc : 28              >            plp
                        
2afd : bd0802                   lda abs1,x
2b00 : 08                       php         ;test stores do not alter flags
2b01 : 49c3                     eor #$c3
2b03 : 28                       plp
2b04 : 9512                     sta zpt,x
2b06 : 08                       php         ;flags after load/store sequence
2b07 : 49c3                     eor #$c3
2b09 : d519                     cmp zp1,x   ;test result
                                trap_ne
2b0b : f003            >        beq skip1297
                       >        trap            ;failed not equal (non zero)
2b0d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b10 :                 >skip1297
                        
2b10 : 68                       pla         ;load status
                                eor_flag 0
2b11 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2b13 : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
2b16 : f003            >        beq skip1300
                       >        trap            ;failed not equal (non zero)
2b18 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b1b :                 >skip1300
                        
2b1b : ca                       dex
2b1c : 10db                     bpl tldax2                  
                        
2b1e : a203                     ldx #3
2b20 :                  tldax3
                                set_stat $ff
                       >            load_flag $ff
2b20 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2b22 : 48              >            pha         ;use stack to load status
2b23 : 28              >            plp
                        
2b24 : bd0802                   lda abs1,x
2b27 : 08                       php         ;test stores do not alter flags
2b28 : 49c3                     eor #$c3
2b2a : 28                       plp
2b2b : 9512                     sta zpt,x
2b2d : 08                       php         ;flags after load/store sequence
2b2e : 49c3                     eor #$c3
2b30 : d519                     cmp zp1,x   ;test result
                                trap_ne
2b32 : f003            >        beq skip1304
                       >        trap            ;failed not equal (non zero)
2b34 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b37 :                 >skip1304
                        
2b37 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2b38 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2b3a : dd0d02                   cmp fLDx,x  ;test flags
                                trap_ne
2b3d : f003            >        beq skip1307
                       >        trap            ;failed not equal (non zero)
2b3f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b42 :                 >skip1307
                        
2b42 : ca                       dex
2b43 : 10db                     bpl tldax3
                        
2b45 : a203                     ldx #3      ;testing store result
2b47 : a000                     ldy #0
2b49 : b512             tstax   lda zpt,x
2b4b : 49c3                     eor #$c3
2b4d : d519                     cmp zp1,x
                                trap_ne     ;store to zp,x data
2b4f : f003            >        beq skip1309
                       >        trap            ;failed not equal (non zero)
2b51 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b54 :                 >skip1309
                        
2b54 : 9412                     sty zpt,x   ;clear                
2b56 : bd0302                   lda abst,x
2b59 : 49c3                     eor #$c3
2b5b : dd0802                   cmp abs1,x
                                trap_ne     ;store to abs,x data
2b5e : f003            >        beq skip1311
                       >        trap            ;failed not equal (non zero)
2b60 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b63 :                 >skip1311
                        
2b63 : 8a                       txa
2b64 : 9d0302                   sta abst,x  ;clear                
2b67 : ca                       dex
2b68 : 10df                     bpl tstax
                                next_test
2b6a : ad0002          >            lda test_case   ;previous test
2b6d : c915            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2b6f : f003            >        beq skip1314
                       >        trap            ;failed not equal (non zero)
2b71 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b74 :                 >skip1314
                       >
0016 =                 >test_num = test_num + 1
2b74 : a916            >            lda #test_num   ;*** next tests' number
2b76 : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
2b79 : 8d04ef            sta $ef04
2b7c : 4c4441202f2053..  db "LDA / STA - (zp),y / abs,y / (zp,x)", 10, 0
2ba1 : a003                     ldy #3
2ba3 :                  tlday    
                                set_stat 0
                       >            load_flag 0
2ba3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2ba5 : 48              >            pha         ;use stack to load status
2ba6 : 28              >            plp
                        
2ba7 : b12a                     lda (ind1),y
2ba9 : 08                       php         ;test stores do not alter flags
2baa : 49c3                     eor #$c3
2bac : 28                       plp
2bad : 990302                   sta abst,y
2bb0 : 08                       php         ;flags after load/store sequence
2bb1 : 49c3                     eor #$c3
2bb3 : d90802                   cmp abs1,y  ;test result
                                trap_ne
2bb6 : f003            >        beq skip1318
                       >        trap            ;failed not equal (non zero)
2bb8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2bbb :                 >skip1318
                        
2bbb : 68                       pla         ;load status
                                eor_flag 0
2bbc : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2bbe : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
2bc1 : f003            >        beq skip1321
                       >        trap            ;failed not equal (non zero)
2bc3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2bc6 :                 >skip1321
                        
2bc6 : 88                       dey
2bc7 : 10da                     bpl tlday                  
                        
2bc9 : a003                     ldy #3
2bcb :                  tlday1   
                                set_stat $ff
                       >            load_flag $ff
2bcb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2bcd : 48              >            pha         ;use stack to load status
2bce : 28              >            plp
                        
2bcf : b12a                     lda (ind1),y
2bd1 : 08                       php         ;test stores do not alter flags
2bd2 : 49c3                     eor #$c3
2bd4 : 28                       plp
2bd5 : 990302                   sta abst,y
2bd8 : 08                       php         ;flags after load/store sequence
2bd9 : 49c3                     eor #$c3
2bdb : d90802                   cmp abs1,y  ;test result
                                trap_ne
2bde : f003            >        beq skip1325
                       >        trap            ;failed not equal (non zero)
2be0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2be3 :                 >skip1325
                        
2be3 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2be4 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2be6 : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
2be9 : f003            >        beq skip1328
                       >        trap            ;failed not equal (non zero)
2beb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2bee :                 >skip1328
                        
2bee : 88                       dey
2bef : 10da                     bpl tlday1                  
                        
2bf1 : a003                     ldy #3      ;testing store result
2bf3 : a200                     ldx #0
2bf5 : b90302           tstay   lda abst,y
2bf8 : 49c3                     eor #$c3
2bfa : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
2bfd : f003            >        beq skip1330
                       >        trap            ;failed not equal (non zero)
2bff : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c02 :                 >skip1330
                        
2c02 : 8a                       txa
2c03 : 990302                   sta abst,y  ;clear                
2c06 : 88                       dey
2c07 : 10ec                     bpl tstay
                        
2c09 : a003                     ldy #3
2c0b :                  tlday2   
                                set_stat 0
                       >            load_flag 0
2c0b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2c0d : 48              >            pha         ;use stack to load status
2c0e : 28              >            plp
                        
2c0f : b90802                   lda abs1,y
2c12 : 08                       php         ;test stores do not alter flags
2c13 : 49c3                     eor #$c3
2c15 : 28                       plp
2c16 : 9136                     sta (indt),y
2c18 : 08                       php         ;flags after load/store sequence
2c19 : 49c3                     eor #$c3
2c1b : d12a                     cmp (ind1),y    ;test result
                                trap_ne
2c1d : f003            >        beq skip1334
                       >        trap            ;failed not equal (non zero)
2c1f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c22 :                 >skip1334
                        
2c22 : 68                       pla         ;load status
                                eor_flag 0
2c23 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2c25 : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
2c28 : f003            >        beq skip1337
                       >        trap            ;failed not equal (non zero)
2c2a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c2d :                 >skip1337
                        
2c2d : 88                       dey
2c2e : 10db                     bpl tlday2                  
                        
2c30 : a003                     ldy #3
2c32 :                  tlday3   
                                set_stat $ff
                       >            load_flag $ff
2c32 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2c34 : 48              >            pha         ;use stack to load status
2c35 : 28              >            plp
                        
2c36 : b90802                   lda abs1,y
2c39 : 08                       php         ;test stores do not alter flags
2c3a : 49c3                     eor #$c3
2c3c : 28                       plp
2c3d : 9136                     sta (indt),y
2c3f : 08                       php         ;flags after load/store sequence
2c40 : 49c3                     eor #$c3
2c42 : d12a                     cmp (ind1),y   ;test result
                                trap_ne
2c44 : f003            >        beq skip1341
                       >        trap            ;failed not equal (non zero)
2c46 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c49 :                 >skip1341
                        
2c49 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2c4a : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2c4c : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
2c4f : f003            >        beq skip1344
                       >        trap            ;failed not equal (non zero)
2c51 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c54 :                 >skip1344
                        
2c54 : 88                       dey
2c55 : 10db                     bpl tlday3
                                
2c57 : a003                     ldy #3      ;testing store result
2c59 : a200                     ldx #0
2c5b : b90302           tstay1  lda abst,y
2c5e : 49c3                     eor #$c3
2c60 : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
2c63 : f003            >        beq skip1346
                       >        trap            ;failed not equal (non zero)
2c65 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c68 :                 >skip1346
                        
2c68 : 8a                       txa
2c69 : 990302                   sta abst,y  ;clear                
2c6c : 88                       dey
2c6d : 10ec                     bpl tstay1
                                
2c6f : a206                     ldx #6
2c71 : a003                     ldy #3
2c73 :                  tldax4   
                                set_stat 0
                       >            load_flag 0
2c73 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2c75 : 48              >            pha         ;use stack to load status
2c76 : 28              >            plp
                        
2c77 : a12a                     lda (ind1,x)
2c79 : 08                       php         ;test stores do not alter flags
2c7a : 49c3                     eor #$c3
2c7c : 28                       plp
2c7d : 8136                     sta (indt,x)
2c7f : 08                       php         ;flags after load/store sequence
2c80 : 49c3                     eor #$c3
2c82 : d90802                   cmp abs1,y  ;test result
                                trap_ne
2c85 : f003            >        beq skip1350
                       >        trap            ;failed not equal (non zero)
2c87 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c8a :                 >skip1350
                        
2c8a : 68                       pla         ;load status
                                eor_flag 0
2c8b : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2c8d : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
2c90 : f003            >        beq skip1353
                       >        trap            ;failed not equal (non zero)
2c92 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c95 :                 >skip1353
                        
2c95 : ca                       dex
2c96 : ca                       dex
2c97 : 88                       dey
2c98 : 10d9                     bpl tldax4                  
                        
2c9a : a206                     ldx #6
2c9c : a003                     ldy #3
2c9e :                  tldax5
                                set_stat $ff
                       >            load_flag $ff
2c9e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2ca0 : 48              >            pha         ;use stack to load status
2ca1 : 28              >            plp
                        
2ca2 : a12a                     lda (ind1,x)
2ca4 : 08                       php         ;test stores do not alter flags
2ca5 : 49c3                     eor #$c3
2ca7 : 28                       plp
2ca8 : 8136                     sta (indt,x)
2caa : 08                       php         ;flags after load/store sequence
2cab : 49c3                     eor #$c3
2cad : d90802                   cmp abs1,y  ;test result
                                trap_ne
2cb0 : f003            >        beq skip1357
                       >        trap            ;failed not equal (non zero)
2cb2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2cb5 :                 >skip1357
                        
2cb5 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2cb6 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2cb8 : d90d02                   cmp fLDx,y  ;test flags
                                trap_ne
2cbb : f003            >        beq skip1360
                       >        trap            ;failed not equal (non zero)
2cbd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2cc0 :                 >skip1360
                        
2cc0 : ca                       dex
2cc1 : ca                       dex
2cc2 : 88                       dey
2cc3 : 10d9                     bpl tldax5
                        
2cc5 : a003                     ldy #3      ;testing store result
2cc7 : a200                     ldx #0
2cc9 : b90302           tstay2  lda abst,y
2ccc : 49c3                     eor #$c3
2cce : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
2cd1 : f003            >        beq skip1362
                       >        trap            ;failed not equal (non zero)
2cd3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2cd6 :                 >skip1362
                        
2cd6 : 8a                       txa
2cd7 : 990302                   sta abst,y  ;clear                
2cda : 88                       dey
2cdb : 10ec                     bpl tstay2
                                next_test
2cdd : ad0002          >            lda test_case   ;previous test
2ce0 : c916            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2ce2 : f003            >        beq skip1365
                       >        trap            ;failed not equal (non zero)
2ce4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ce7 :                 >skip1365
                       >
0017 =                 >test_num = test_num + 1
2ce7 : a917            >            lda #test_num   ;*** next tests' number
2ce9 : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
2cec : 8d04ef            sta $ef04
2cef : 696e6465786564..  db "indexed wraparound test (only zp should wrap)", 10, 0
2d1e : a2fd                     ldx #3+$fa
2d20 : b51f             tldax6  lda zp1-$fa&$ff,x   ;wrap on indexed zp
2d22 : 9d0901                   sta abst-$fa,x      ;no STX abs,x!
2d25 : ca                       dex
2d26 : e0fa                     cpx #$fa
2d28 : b0f6                     bcs tldax6                  
2d2a : a2fd                     ldx #3+$fa
2d2c : bd0e01           tldax7  lda abs1-$fa,x      ;no wrap on indexed abs
2d2f : 9518                     sta zpt-$fa&$ff,x
2d31 : ca                       dex
2d32 : e0fa                     cpx #$fa
2d34 : b0f6                     bcs tldax7
                                                  
2d36 : a203                     ldx #3      ;testing wraparound result
2d38 : a000                     ldy #0
2d3a : b512             tstax1  lda zpt,x
2d3c : d519                     cmp zp1,x
                                trap_ne     ;store to zp,x data
2d3e : f003            >        beq skip1367
                       >        trap            ;failed not equal (non zero)
2d40 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d43 :                 >skip1367
                        
2d43 : 9412                     sty zpt,x   ;clear                
2d45 : bd0302                   lda abst,x
2d48 : dd0802                   cmp abs1,x
                                trap_ne     ;store to abs,x data
2d4b : f003            >        beq skip1369
                       >        trap            ;failed not equal (non zero)
2d4d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d50 :                 >skip1369
                        
2d50 : 8a                       txa
2d51 : 9d0302                   sta abst,x  ;clear                
2d54 : ca                       dex
2d55 : 10e3                     bpl tstax1
                        
2d57 : a0fb                     ldy #3+$f8
2d59 : a2fe                     ldx #6+$f8
2d5b : a132             tlday4  lda (ind1-$f8&$ff,x) ;wrap on indexed zp indirect
2d5d : 990b01                   sta abst-$f8,y
2d60 : ca                       dex
2d61 : ca                       dex
2d62 : 88                       dey
2d63 : c0f8                     cpy #$f8
2d65 : b0f4                     bcs tlday4
2d67 : a003                     ldy #3      ;testing wraparound result
2d69 : a200                     ldx #0
2d6b : b90302           tstay4  lda abst,y
2d6e : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
2d71 : f003            >        beq skip1371
                       >        trap            ;failed not equal (non zero)
2d73 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d76 :                 >skip1371
                        
2d76 : 8a                       txa
2d77 : 990302                   sta abst,y  ;clear                
2d7a : 88                       dey
2d7b : 10ee                     bpl tstay4
                                
2d7d : a0fb                     ldy #3+$f8
2d7f : b91001           tlday5  lda abs1-$f8,y  ;no wrap on indexed abs
2d82 : 913e                     sta (inwt),y
2d84 : 88                       dey
2d85 : c0f8                     cpy #$f8
2d87 : b0f6                     bcs tlday5                  
2d89 : a003                     ldy #3      ;testing wraparound result
2d8b : a200                     ldx #0
2d8d : b90302           tstay5  lda abst,y
2d90 : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
2d93 : f003            >        beq skip1373
                       >        trap            ;failed not equal (non zero)
2d95 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d98 :                 >skip1373
                        
2d98 : 8a                       txa
2d99 : 990302                   sta abst,y  ;clear                
2d9c : 88                       dey
2d9d : 10ee                     bpl tstay5
                        
2d9f : a0fb                     ldy #3+$f8
2da1 : a2fe                     ldx #6+$f8
2da3 : b134             tlday6  lda (inw1),y    ;no wrap on zp indirect indexed 
2da5 : 813e                     sta (indt-$f8&$ff,x)
2da7 : ca                       dex
2da8 : ca                       dex
2da9 : 88                       dey
2daa : c0f8                     cpy #$f8
2dac : b0f5                     bcs tlday6
2dae : a003                     ldy #3      ;testing wraparound result
2db0 : a200                     ldx #0
2db2 : b90302           tstay6  lda abst,y
2db5 : d90802                   cmp abs1,y
                                trap_ne     ;store to abs data
2db8 : f003            >        beq skip1375
                       >        trap            ;failed not equal (non zero)
2dba : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2dbd :                 >skip1375
                        
2dbd : 8a                       txa
2dbe : 990302                   sta abst,y  ;clear                
2dc1 : 88                       dey
2dc2 : 10ee                     bpl tstay6
                                next_test
2dc4 : ad0002          >            lda test_case   ;previous test
2dc7 : c917            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2dc9 : f003            >        beq skip1378
                       >        trap            ;failed not equal (non zero)
2dcb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2dce :                 >skip1378
                       >
0018 =                 >test_num = test_num + 1
2dce : a918            >            lda #test_num   ;*** next tests' number
2dd0 : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
2dd3 : 8d04ef            sta $ef04
2dd6 : 4c4441202f2053..  db "LDA / STA - zp / abs / #", 10, 0
                                set_stat 0  
                       >            load_flag 0  
2df0 : a900            >            lda #0               ;allow test to change I-flag (no mask)
                       >
2df2 : 48              >            pha         ;use stack to load status
2df3 : 28              >            plp
                        
2df4 : a519                     lda zp1
2df6 : 08                       php         ;test stores do not alter flags
2df7 : 49c3                     eor #$c3
2df9 : 28                       plp
2dfa : 8d0302                   sta abst
2dfd : 08                       php         ;flags after load/store sequence
2dfe : 49c3                     eor #$c3
2e00 : c9c3                     cmp #$c3    ;test result
                                trap_ne
2e02 : f003            >        beq skip1382
                       >        trap            ;failed not equal (non zero)
2e04 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e07 :                 >skip1382
                        
2e07 : 68                       pla         ;load status
                                eor_flag 0
2e08 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2e0a : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
2e0d : f003            >        beq skip1385
                       >        trap            ;failed not equal (non zero)
2e0f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e12 :                 >skip1385
                        
                                set_stat 0
                       >            load_flag 0
2e12 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2e14 : 48              >            pha         ;use stack to load status
2e15 : 28              >            plp
                        
2e16 : a51a                     lda zp1+1
2e18 : 08                       php         ;test stores do not alter flags
2e19 : 49c3                     eor #$c3
2e1b : 28                       plp
2e1c : 8d0402                   sta abst+1
2e1f : 08                       php         ;flags after load/store sequence
2e20 : 49c3                     eor #$c3
2e22 : c982                     cmp #$82    ;test result
                                trap_ne
2e24 : f003            >        beq skip1389
                       >        trap            ;failed not equal (non zero)
2e26 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e29 :                 >skip1389
                        
2e29 : 68                       pla         ;load status
                                eor_flag 0
2e2a : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2e2c : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
2e2f : f003            >        beq skip1392
                       >        trap            ;failed not equal (non zero)
2e31 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e34 :                 >skip1392
                        
                                set_stat 0
                       >            load_flag 0
2e34 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2e36 : 48              >            pha         ;use stack to load status
2e37 : 28              >            plp
                        
2e38 : a51b                     lda zp1+2
2e3a : 08                       php         ;test stores do not alter flags
2e3b : 49c3                     eor #$c3
2e3d : 28                       plp
2e3e : 8d0502                   sta abst+2
2e41 : 08                       php         ;flags after load/store sequence
2e42 : 49c3                     eor #$c3
2e44 : c941                     cmp #$41    ;test result
                                trap_ne
2e46 : f003            >        beq skip1396
                       >        trap            ;failed not equal (non zero)
2e48 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e4b :                 >skip1396
                        
2e4b : 68                       pla         ;load status
                                eor_flag 0
2e4c : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2e4e : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
2e51 : f003            >        beq skip1399
                       >        trap            ;failed not equal (non zero)
2e53 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e56 :                 >skip1399
                        
                                set_stat 0
                       >            load_flag 0
2e56 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2e58 : 48              >            pha         ;use stack to load status
2e59 : 28              >            plp
                        
2e5a : a51c                     lda zp1+3
2e5c : 08                       php         ;test stores do not alter flags
2e5d : 49c3                     eor #$c3
2e5f : 28                       plp
2e60 : 8d0602                   sta abst+3
2e63 : 08                       php         ;flags after load/store sequence
2e64 : 49c3                     eor #$c3
2e66 : c900                     cmp #0      ;test result
                                trap_ne
2e68 : f003            >        beq skip1403
                       >        trap            ;failed not equal (non zero)
2e6a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e6d :                 >skip1403
                        
2e6d : 68                       pla         ;load status
                                eor_flag 0
2e6e : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2e70 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
2e73 : f003            >        beq skip1406
                       >        trap            ;failed not equal (non zero)
2e75 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e78 :                 >skip1406
                        
                                set_stat $ff
                       >            load_flag $ff
2e78 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2e7a : 48              >            pha         ;use stack to load status
2e7b : 28              >            plp
                        
2e7c : a519                     lda zp1  
2e7e : 08                       php         ;test stores do not alter flags
2e7f : 49c3                     eor #$c3
2e81 : 28                       plp
2e82 : 8d0302                   sta abst  
2e85 : 08                       php         ;flags after load/store sequence
2e86 : 49c3                     eor #$c3
2e88 : c9c3                     cmp #$c3    ;test result
                                trap_ne
2e8a : f003            >        beq skip1410
                       >        trap            ;failed not equal (non zero)
2e8c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e8f :                 >skip1410
                        
2e8f : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2e90 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2e92 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
2e95 : f003            >        beq skip1413
                       >        trap            ;failed not equal (non zero)
2e97 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e9a :                 >skip1413
                        
                                set_stat $ff
                       >            load_flag $ff
2e9a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2e9c : 48              >            pha         ;use stack to load status
2e9d : 28              >            plp
                        
2e9e : a51a                     lda zp1+1
2ea0 : 08                       php         ;test stores do not alter flags
2ea1 : 49c3                     eor #$c3
2ea3 : 28                       plp
2ea4 : 8d0402                   sta abst+1
2ea7 : 08                       php         ;flags after load/store sequence
2ea8 : 49c3                     eor #$c3
2eaa : c982                     cmp #$82    ;test result
                                trap_ne
2eac : f003            >        beq skip1417
                       >        trap            ;failed not equal (non zero)
2eae : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2eb1 :                 >skip1417
                        
2eb1 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2eb2 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2eb4 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
2eb7 : f003            >        beq skip1420
                       >        trap            ;failed not equal (non zero)
2eb9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ebc :                 >skip1420
                        
                                set_stat $ff
                       >            load_flag $ff
2ebc : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2ebe : 48              >            pha         ;use stack to load status
2ebf : 28              >            plp
                        
2ec0 : a51b                     lda zp1+2
2ec2 : 08                       php         ;test stores do not alter flags
2ec3 : 49c3                     eor #$c3
2ec5 : 28                       plp
2ec6 : 8d0502                   sta abst+2
2ec9 : 08                       php         ;flags after load/store sequence
2eca : 49c3                     eor #$c3
2ecc : c941                     cmp #$41    ;test result
                                trap_ne
2ece : f003            >        beq skip1424
                       >        trap            ;failed not equal (non zero)
2ed0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ed3 :                 >skip1424
                        
2ed3 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2ed4 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2ed6 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
2ed9 : f003            >        beq skip1427
                       >        trap            ;failed not equal (non zero)
2edb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ede :                 >skip1427
                        
                                set_stat $ff
                       >            load_flag $ff
2ede : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2ee0 : 48              >            pha         ;use stack to load status
2ee1 : 28              >            plp
                        
2ee2 : a51c                     lda zp1+3
2ee4 : 08                       php         ;test stores do not alter flags
2ee5 : 49c3                     eor #$c3
2ee7 : 28                       plp
2ee8 : 8d0602                   sta abst+3
2eeb : 08                       php         ;flags after load/store sequence
2eec : 49c3                     eor #$c3
2eee : c900                     cmp #0      ;test result
                                trap_ne
2ef0 : f003            >        beq skip1431
                       >        trap            ;failed not equal (non zero)
2ef2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ef5 :                 >skip1431
                        
2ef5 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2ef6 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2ef8 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
2efb : f003            >        beq skip1434
                       >        trap            ;failed not equal (non zero)
2efd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f00 :                 >skip1434
                        
                                set_stat 0
                       >            load_flag 0
2f00 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2f02 : 48              >            pha         ;use stack to load status
2f03 : 28              >            plp
                        
2f04 : ad0802                   lda abs1  
2f07 : 08                       php         ;test stores do not alter flags
2f08 : 49c3                     eor #$c3
2f0a : 28                       plp
2f0b : 8512                     sta zpt  
2f0d : 08                       php         ;flags after load/store sequence
2f0e : 49c3                     eor #$c3
2f10 : c519                     cmp zp1     ;test result
                                trap_ne
2f12 : f003            >        beq skip1438
                       >        trap            ;failed not equal (non zero)
2f14 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f17 :                 >skip1438
                        
2f17 : 68                       pla         ;load status
                                eor_flag 0
2f18 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2f1a : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
2f1d : f003            >        beq skip1441
                       >        trap            ;failed not equal (non zero)
2f1f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f22 :                 >skip1441
                        
                                set_stat 0
                       >            load_flag 0
2f22 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2f24 : 48              >            pha         ;use stack to load status
2f25 : 28              >            plp
                        
2f26 : ad0902                   lda abs1+1
2f29 : 08                       php         ;test stores do not alter flags
2f2a : 49c3                     eor #$c3
2f2c : 28                       plp
2f2d : 8513                     sta zpt+1
2f2f : 08                       php         ;flags after load/store sequence
2f30 : 49c3                     eor #$c3
2f32 : c51a                     cmp zp1+1   ;test result
                                trap_ne
2f34 : f003            >        beq skip1445
                       >        trap            ;failed not equal (non zero)
2f36 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f39 :                 >skip1445
                        
2f39 : 68                       pla         ;load status
                                eor_flag 0
2f3a : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2f3c : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
2f3f : f003            >        beq skip1448
                       >        trap            ;failed not equal (non zero)
2f41 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f44 :                 >skip1448
                        
                                set_stat 0
                       >            load_flag 0
2f44 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2f46 : 48              >            pha         ;use stack to load status
2f47 : 28              >            plp
                        
2f48 : ad0a02                   lda abs1+2
2f4b : 08                       php         ;test stores do not alter flags
2f4c : 49c3                     eor #$c3
2f4e : 28                       plp
2f4f : 8514                     sta zpt+2
2f51 : 08                       php         ;flags after load/store sequence
2f52 : 49c3                     eor #$c3
2f54 : c51b                     cmp zp1+2   ;test result
                                trap_ne
2f56 : f003            >        beq skip1452
                       >        trap            ;failed not equal (non zero)
2f58 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f5b :                 >skip1452
                        
2f5b : 68                       pla         ;load status
                                eor_flag 0
2f5c : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2f5e : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
2f61 : f003            >        beq skip1455
                       >        trap            ;failed not equal (non zero)
2f63 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f66 :                 >skip1455
                        
                                set_stat 0
                       >            load_flag 0
2f66 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2f68 : 48              >            pha         ;use stack to load status
2f69 : 28              >            plp
                        
2f6a : ad0b02                   lda abs1+3
2f6d : 08                       php         ;test stores do not alter flags
2f6e : 49c3                     eor #$c3
2f70 : 28                       plp
2f71 : 8515                     sta zpt+3
2f73 : 08                       php         ;flags after load/store sequence
2f74 : 49c3                     eor #$c3
2f76 : c51c                     cmp zp1+3   ;test result
                                trap_ne
2f78 : f003            >        beq skip1459
                       >        trap            ;failed not equal (non zero)
2f7a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f7d :                 >skip1459
                        
2f7d : 68                       pla         ;load status
                                eor_flag 0
2f7e : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2f80 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
2f83 : f003            >        beq skip1462
                       >        trap            ;failed not equal (non zero)
2f85 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f88 :                 >skip1462
                        
                                set_stat $ff
                       >            load_flag $ff
2f88 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2f8a : 48              >            pha         ;use stack to load status
2f8b : 28              >            plp
                        
2f8c : ad0802                   lda abs1  
2f8f : 08                       php         ;test stores do not alter flags
2f90 : 49c3                     eor #$c3
2f92 : 28                       plp
2f93 : 8512                     sta zpt  
2f95 : 08                       php         ;flags after load/store sequence
2f96 : 49c3                     eor #$c3
2f98 : c519                     cmp zp1     ;test result
                                trap_ne
2f9a : f003            >        beq skip1466
                       >        trap            ;failed not equal (non zero)
2f9c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f9f :                 >skip1466
                        
2f9f : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2fa0 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2fa2 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
2fa5 : f003            >        beq skip1469
                       >        trap            ;failed not equal (non zero)
2fa7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2faa :                 >skip1469
                        
                                set_stat $ff
                       >            load_flag $ff
2faa : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2fac : 48              >            pha         ;use stack to load status
2fad : 28              >            plp
                        
2fae : ad0902                   lda abs1+1
2fb1 : 08                       php         ;test stores do not alter flags
2fb2 : 49c3                     eor #$c3
2fb4 : 28                       plp
2fb5 : 8513                     sta zpt+1
2fb7 : 08                       php         ;flags after load/store sequence
2fb8 : 49c3                     eor #$c3
2fba : c51a                     cmp zp1+1   ;test result
                                trap_ne
2fbc : f003            >        beq skip1473
                       >        trap            ;failed not equal (non zero)
2fbe : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2fc1 :                 >skip1473
                        
2fc1 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2fc2 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2fc4 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
2fc7 : f003            >        beq skip1476
                       >        trap            ;failed not equal (non zero)
2fc9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2fcc :                 >skip1476
                        
                                set_stat $ff
                       >            load_flag $ff
2fcc : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2fce : 48              >            pha         ;use stack to load status
2fcf : 28              >            plp
                        
2fd0 : ad0a02                   lda abs1+2
2fd3 : 08                       php         ;test stores do not alter flags
2fd4 : 49c3                     eor #$c3
2fd6 : 28                       plp
2fd7 : 8514                     sta zpt+2
2fd9 : 08                       php         ;flags after load/store sequence
2fda : 49c3                     eor #$c3
2fdc : c51b                     cmp zp1+2   ;test result
                                trap_ne
2fde : f003            >        beq skip1480
                       >        trap            ;failed not equal (non zero)
2fe0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2fe3 :                 >skip1480
                        
2fe3 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2fe4 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2fe6 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
2fe9 : f003            >        beq skip1483
                       >        trap            ;failed not equal (non zero)
2feb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2fee :                 >skip1483
                        
                                set_stat $ff
                       >            load_flag $ff
2fee : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2ff0 : 48              >            pha         ;use stack to load status
2ff1 : 28              >            plp
                        
2ff2 : ad0b02                   lda abs1+3
2ff5 : 08                       php         ;test stores do not alter flags
2ff6 : 49c3                     eor #$c3
2ff8 : 28                       plp
2ff9 : 8515                     sta zpt+3
2ffb : 08                       php         ;flags after load/store sequence
2ffc : 49c3                     eor #$c3
2ffe : c51c                     cmp zp1+3   ;test result
                                trap_ne
3000 : f003            >        beq skip1487
                       >        trap            ;failed not equal (non zero)
3002 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3005 :                 >skip1487
                        
3005 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
3006 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
3008 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
300b : f003            >        beq skip1490
                       >        trap            ;failed not equal (non zero)
300d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3010 :                 >skip1490
                        
                                set_stat 0  
                       >            load_flag 0  
3010 : a900            >            lda #0               ;allow test to change I-flag (no mask)
                       >
3012 : 48              >            pha         ;use stack to load status
3013 : 28              >            plp
                        
3014 : a9c3                     lda #$c3
3016 : 08                       php
3017 : cd0802                   cmp abs1    ;test result
                                trap_ne
301a : f003            >        beq skip1494
                       >        trap            ;failed not equal (non zero)
301c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
301f :                 >skip1494
                        
301f : 68                       pla         ;load status
                                eor_flag 0
3020 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
3022 : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
3025 : f003            >        beq skip1497
                       >        trap            ;failed not equal (non zero)
3027 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
302a :                 >skip1497
                        
                                set_stat 0
                       >            load_flag 0
302a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
302c : 48              >            pha         ;use stack to load status
302d : 28              >            plp
                        
302e : a982                     lda #$82
3030 : 08                       php
3031 : cd0902                   cmp abs1+1  ;test result
                                trap_ne
3034 : f003            >        beq skip1501
                       >        trap            ;failed not equal (non zero)
3036 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3039 :                 >skip1501
                        
3039 : 68                       pla         ;load status
                                eor_flag 0
303a : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
303c : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
303f : f003            >        beq skip1504
                       >        trap            ;failed not equal (non zero)
3041 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3044 :                 >skip1504
                        
                                set_stat 0
                       >            load_flag 0
3044 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3046 : 48              >            pha         ;use stack to load status
3047 : 28              >            plp
                        
3048 : a941                     lda #$41
304a : 08                       php
304b : cd0a02                   cmp abs1+2  ;test result
                                trap_ne
304e : f003            >        beq skip1508
                       >        trap            ;failed not equal (non zero)
3050 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3053 :                 >skip1508
                        
3053 : 68                       pla         ;load status
                                eor_flag 0
3054 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
3056 : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
3059 : f003            >        beq skip1511
                       >        trap            ;failed not equal (non zero)
305b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
305e :                 >skip1511
                        
                                set_stat 0
                       >            load_flag 0
305e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3060 : 48              >            pha         ;use stack to load status
3061 : 28              >            plp
                        
3062 : a900                     lda #0
3064 : 08                       php
3065 : cd0b02                   cmp abs1+3  ;test result
                                trap_ne
3068 : f003            >        beq skip1515
                       >        trap            ;failed not equal (non zero)
306a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
306d :                 >skip1515
                        
306d : 68                       pla         ;load status
                                eor_flag 0
306e : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
3070 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
3073 : f003            >        beq skip1518
                       >        trap            ;failed not equal (non zero)
3075 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3078 :                 >skip1518
                        
                        
                                set_stat $ff
                       >            load_flag $ff
3078 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
307a : 48              >            pha         ;use stack to load status
307b : 28              >            plp
                        
307c : a9c3                     lda #$c3  
307e : 08                       php
307f : cd0802                   cmp abs1    ;test result
                                trap_ne
3082 : f003            >        beq skip1522
                       >        trap            ;failed not equal (non zero)
3084 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3087 :                 >skip1522
                        
3087 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
3088 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
308a : cd0d02                   cmp fLDx    ;test flags
                                trap_ne
308d : f003            >        beq skip1525
                       >        trap            ;failed not equal (non zero)
308f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3092 :                 >skip1525
                        
                                set_stat $ff
                       >            load_flag $ff
3092 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3094 : 48              >            pha         ;use stack to load status
3095 : 28              >            plp
                        
3096 : a982                     lda #$82
3098 : 08                       php
3099 : cd0902                   cmp abs1+1  ;test result
                                trap_ne
309c : f003            >        beq skip1529
                       >        trap            ;failed not equal (non zero)
309e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30a1 :                 >skip1529
                        
30a1 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
30a2 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
30a4 : cd0e02                   cmp fLDx+1  ;test flags
                                trap_ne
30a7 : f003            >        beq skip1532
                       >        trap            ;failed not equal (non zero)
30a9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30ac :                 >skip1532
                        
                                set_stat $ff
                       >            load_flag $ff
30ac : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
30ae : 48              >            pha         ;use stack to load status
30af : 28              >            plp
                        
30b0 : a941                     lda #$41
30b2 : 08                       php
30b3 : cd0a02                   cmp abs1+2  ;test result
                                trap_ne
30b6 : f003            >        beq skip1536
                       >        trap            ;failed not equal (non zero)
30b8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30bb :                 >skip1536
                        
30bb : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
30bc : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
30be : cd0f02                   cmp fLDx+2  ;test flags
                                trap_ne
30c1 : f003            >        beq skip1539
                       >        trap            ;failed not equal (non zero)
30c3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30c6 :                 >skip1539
                        
                                set_stat $ff
                       >            load_flag $ff
30c6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
30c8 : 48              >            pha         ;use stack to load status
30c9 : 28              >            plp
                        
30ca : a900                     lda #0
30cc : 08                       php
30cd : cd0b02                   cmp abs1+3  ;test result
                                trap_ne
30d0 : f003            >        beq skip1543
                       >        trap            ;failed not equal (non zero)
30d2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30d5 :                 >skip1543
                        
30d5 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
30d6 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
30d8 : cd1002                   cmp fLDx+3  ;test flags
                                trap_ne
30db : f003            >        beq skip1546
                       >        trap            ;failed not equal (non zero)
30dd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30e0 :                 >skip1546
                        
                        
30e0 : a200                     ldx #0
30e2 : a512                     lda zpt  
30e4 : 49c3                     eor #$c3
30e6 : c519                     cmp zp1  
                                trap_ne     ;store to zp data
30e8 : f003            >        beq skip1548
                       >        trap            ;failed not equal (non zero)
30ea : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30ed :                 >skip1548
                        
30ed : 8612                     stx zpt     ;clear                
30ef : ad0302                   lda abst  
30f2 : 49c3                     eor #$c3
30f4 : cd0802                   cmp abs1  
                                trap_ne     ;store to abs data
30f7 : f003            >        beq skip1550
                       >        trap            ;failed not equal (non zero)
30f9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30fc :                 >skip1550
                        
30fc : 8e0302                   stx abst    ;clear                
30ff : a513                     lda zpt+1
3101 : 49c3                     eor #$c3
3103 : c51a                     cmp zp1+1
                                trap_ne     ;store to zp data
3105 : f003            >        beq skip1552
                       >        trap            ;failed not equal (non zero)
3107 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
310a :                 >skip1552
                        
310a : 8613                     stx zpt+1   ;clear                
310c : ad0402                   lda abst+1
310f : 49c3                     eor #$c3
3111 : cd0902                   cmp abs1+1
                                trap_ne     ;store to abs data
3114 : f003            >        beq skip1554
                       >        trap            ;failed not equal (non zero)
3116 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3119 :                 >skip1554
                        
3119 : 8e0402                   stx abst+1  ;clear                
311c : a514                     lda zpt+2
311e : 49c3                     eor #$c3
3120 : c51b                     cmp zp1+2
                                trap_ne     ;store to zp data
3122 : f003            >        beq skip1556
                       >        trap            ;failed not equal (non zero)
3124 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3127 :                 >skip1556
                        
3127 : 8614                     stx zpt+2   ;clear                
3129 : ad0502                   lda abst+2
312c : 49c3                     eor #$c3
312e : cd0a02                   cmp abs1+2
                                trap_ne     ;store to abs data
3131 : f003            >        beq skip1558
                       >        trap            ;failed not equal (non zero)
3133 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3136 :                 >skip1558
                        
3136 : 8e0502                   stx abst+2  ;clear                
3139 : a515                     lda zpt+3
313b : 49c3                     eor #$c3
313d : c51c                     cmp zp1+3
                                trap_ne     ;store to zp data
313f : f003            >        beq skip1560
                       >        trap            ;failed not equal (non zero)
3141 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3144 :                 >skip1560
                        
3144 : 8615                     stx zpt+3   ;clear                
3146 : ad0602                   lda abst+3
3149 : 49c3                     eor #$c3
314b : cd0b02                   cmp abs1+3
                                trap_ne     ;store to abs data
314e : f003            >        beq skip1562
                       >        trap            ;failed not equal (non zero)
3150 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3153 :                 >skip1562
                        
3153 : 8e0602                   stx abst+3  ;clear                
                                next_test
3156 : ad0002          >            lda test_case   ;previous test
3159 : c918            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
315b : f003            >        beq skip1565
                       >        trap            ;failed not equal (non zero)
315d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3160 :                 >skip1565
                       >
0019 =                 >test_num = test_num + 1
3160 : a919            >            lda #test_num   ;*** next tests' number
3162 : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
3165 : 8d04ef            sta $ef04
3168 : 74657374696e67..  db "testing bit test & compares BIT CPX CPY CMP all addressing modes", 10, 0
31aa : 8d04ef            sta $ef04
31ad : 424954202d207a..  db "BIT - zp / abs", 10, 0
                                set_a $ff,0
                       >            load_flag 0
31bd : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
31bf : 48              >            pha         ;use stack to load status
31c0 : a9ff            >            lda #$ff     ;precharge accu
31c2 : 28              >            plp
                        
31c3 : 241c                     bit zp1+3   ;00 - should set Z / clear  NV
                                tst_a $ff,fz 
31c5 : 08              >            php         ;save flags
31c6 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
31c8 : f003            >        beq skip1570
                       >        trap            ;failed not equal (non zero)
31ca : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
31cd :                 >skip1570
                       >
31cd : 68              >            pla         ;load status
31ce : 48              >            pha
                       >            cmp_flag fz 
31cf : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
31d1 : f003            >        beq skip1573
                       >        trap            ;failed not equal (non zero)
31d3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
31d6 :                 >skip1573
                       >
31d6 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
31d7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
31d9 : 48              >            pha         ;use stack to load status
31da : a901            >            lda #1     ;precharge accu
31dc : 28              >            plp
                        
31dd : 241b                     bit zp1+2   ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
31df : 08              >            php         ;save flags
31e0 : c901            >            cmp #1     ;test result
                       >            trap_ne
31e2 : f003            >        beq skip1578
                       >        trap            ;failed not equal (non zero)
31e4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
31e7 :                 >skip1578
                       >
31e7 : 68              >            pla         ;load status
31e8 : 48              >            pha
                       >            cmp_flag fv
31e9 : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
31eb : f003            >        beq skip1581
                       >        trap            ;failed not equal (non zero)
31ed : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
31f0 :                 >skip1581
                       >
31f0 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
31f1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
31f3 : 48              >            pha         ;use stack to load status
31f4 : a901            >            lda #1     ;precharge accu
31f6 : 28              >            plp
                        
31f7 : 241a                     bit zp1+1   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
31f9 : 08              >            php         ;save flags
31fa : c901            >            cmp #1     ;test result
                       >            trap_ne
31fc : f003            >        beq skip1586
                       >        trap            ;failed not equal (non zero)
31fe : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3201 :                 >skip1586
                       >
3201 : 68              >            pla         ;load status
3202 : 48              >            pha
                       >            cmp_flag fnz
3203 : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3205 : f003            >        beq skip1589
                       >        trap            ;failed not equal (non zero)
3207 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
320a :                 >skip1589
                       >
320a : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
320b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
320d : 48              >            pha         ;use stack to load status
320e : a901            >            lda #1     ;precharge accu
3210 : 28              >            plp
                        
3211 : 2419                     bit zp1     ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
3213 : 08              >            php         ;save flags
3214 : c901            >            cmp #1     ;test result
                       >            trap_ne
3216 : f003            >        beq skip1594
                       >        trap            ;failed not equal (non zero)
3218 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
321b :                 >skip1594
                       >
321b : 68              >            pla         ;load status
321c : 48              >            pha
                       >            cmp_flag fnv
321d : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
321f : f003            >        beq skip1597
                       >        trap            ;failed not equal (non zero)
3221 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3224 :                 >skip1597
                       >
3224 : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,$ff
                       >            load_flag $ff
3225 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3227 : 48              >            pha         ;use stack to load status
3228 : a9ff            >            lda #$ff     ;precharge accu
322a : 28              >            plp
                        
322b : 241c                     bit zp1+3   ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv 
322d : 08              >            php         ;save flags
322e : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
3230 : f003            >        beq skip1602
                       >        trap            ;failed not equal (non zero)
3232 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3235 :                 >skip1602
                       >
3235 : 68              >            pla         ;load status
3236 : 48              >            pha
                       >            cmp_flag ~fnv 
3237 : c93f            >            cmp #(~fnv |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3239 : f003            >        beq skip1605
                       >        trap            ;failed not equal (non zero)
323b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
323e :                 >skip1605
                       >
323e : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
323f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3241 : 48              >            pha         ;use stack to load status
3242 : a901            >            lda #1     ;precharge accu
3244 : 28              >            plp
                        
3245 : 241b                     bit zp1+2   ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
3247 : 08              >            php         ;save flags
3248 : c901            >            cmp #1     ;test result
                       >            trap_ne
324a : f003            >        beq skip1610
                       >        trap            ;failed not equal (non zero)
324c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
324f :                 >skip1610
                       >
324f : 68              >            pla         ;load status
3250 : 48              >            pha
                       >            cmp_flag ~fnz
3251 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3253 : f003            >        beq skip1613
                       >        trap            ;failed not equal (non zero)
3255 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3258 :                 >skip1613
                       >
3258 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
3259 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
325b : 48              >            pha         ;use stack to load status
325c : a901            >            lda #1     ;precharge accu
325e : 28              >            plp
                        
325f : 241a                     bit zp1+1   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
3261 : 08              >            php         ;save flags
3262 : c901            >            cmp #1     ;test result
                       >            trap_ne
3264 : f003            >        beq skip1618
                       >        trap            ;failed not equal (non zero)
3266 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3269 :                 >skip1618
                       >
3269 : 68              >            pla         ;load status
326a : 48              >            pha
                       >            cmp_flag ~fv
326b : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
326d : f003            >        beq skip1621
                       >        trap            ;failed not equal (non zero)
326f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3272 :                 >skip1621
                       >
3272 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
3273 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3275 : 48              >            pha         ;use stack to load status
3276 : a901            >            lda #1     ;precharge accu
3278 : 28              >            plp
                        
3279 : 2419                     bit zp1     ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
327b : 08              >            php         ;save flags
327c : c901            >            cmp #1     ;test result
                       >            trap_ne
327e : f003            >        beq skip1626
                       >        trap            ;failed not equal (non zero)
3280 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3283 :                 >skip1626
                       >
3283 : 68              >            pla         ;load status
3284 : 48              >            pha
                       >            cmp_flag ~fz
3285 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3287 : f003            >        beq skip1629
                       >        trap            ;failed not equal (non zero)
3289 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
328c :                 >skip1629
                       >
328c : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,0
                       >            load_flag 0
328d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
328f : 48              >            pha         ;use stack to load status
3290 : a9ff            >            lda #$ff     ;precharge accu
3292 : 28              >            plp
                        
3293 : 2c0b02                   bit abs1+3  ;00 - should set Z / clear  NV
                                tst_a $ff,fz 
3296 : 08              >            php         ;save flags
3297 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
3299 : f003            >        beq skip1634
                       >        trap            ;failed not equal (non zero)
329b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
329e :                 >skip1634
                       >
329e : 68              >            pla         ;load status
329f : 48              >            pha
                       >            cmp_flag fz 
32a0 : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
32a2 : f003            >        beq skip1637
                       >        trap            ;failed not equal (non zero)
32a4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32a7 :                 >skip1637
                       >
32a7 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
32a8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
32aa : 48              >            pha         ;use stack to load status
32ab : a901            >            lda #1     ;precharge accu
32ad : 28              >            plp
                        
32ae : 2c0a02                   bit abs1+2  ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
32b1 : 08              >            php         ;save flags
32b2 : c901            >            cmp #1     ;test result
                       >            trap_ne
32b4 : f003            >        beq skip1642
                       >        trap            ;failed not equal (non zero)
32b6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32b9 :                 >skip1642
                       >
32b9 : 68              >            pla         ;load status
32ba : 48              >            pha
                       >            cmp_flag fv
32bb : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
32bd : f003            >        beq skip1645
                       >        trap            ;failed not equal (non zero)
32bf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32c2 :                 >skip1645
                       >
32c2 : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
32c3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
32c5 : 48              >            pha         ;use stack to load status
32c6 : a901            >            lda #1     ;precharge accu
32c8 : 28              >            plp
                        
32c9 : 2c0902                   bit abs1+1  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
32cc : 08              >            php         ;save flags
32cd : c901            >            cmp #1     ;test result
                       >            trap_ne
32cf : f003            >        beq skip1650
                       >        trap            ;failed not equal (non zero)
32d1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32d4 :                 >skip1650
                       >
32d4 : 68              >            pla         ;load status
32d5 : 48              >            pha
                       >            cmp_flag fnz
32d6 : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
32d8 : f003            >        beq skip1653
                       >        trap            ;failed not equal (non zero)
32da : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32dd :                 >skip1653
                       >
32dd : 28              >            plp         ;restore status
                        
                                set_a 1,0
                       >            load_flag 0
32de : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
32e0 : 48              >            pha         ;use stack to load status
32e1 : a901            >            lda #1     ;precharge accu
32e3 : 28              >            plp
                        
32e4 : 2c0802                   bit abs1    ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
32e7 : 08              >            php         ;save flags
32e8 : c901            >            cmp #1     ;test result
                       >            trap_ne
32ea : f003            >        beq skip1658
                       >        trap            ;failed not equal (non zero)
32ec : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32ef :                 >skip1658
                       >
32ef : 68              >            pla         ;load status
32f0 : 48              >            pha
                       >            cmp_flag fnv
32f1 : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
32f3 : f003            >        beq skip1661
                       >        trap            ;failed not equal (non zero)
32f5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32f8 :                 >skip1661
                       >
32f8 : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,$ff
                       >            load_flag $ff
32f9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
32fb : 48              >            pha         ;use stack to load status
32fc : a9ff            >            lda #$ff     ;precharge accu
32fe : 28              >            plp
                        
32ff : 2c0b02                   bit abs1+3  ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv 
3302 : 08              >            php         ;save flags
3303 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
3305 : f003            >        beq skip1666
                       >        trap            ;failed not equal (non zero)
3307 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
330a :                 >skip1666
                       >
330a : 68              >            pla         ;load status
330b : 48              >            pha
                       >            cmp_flag ~fnv 
330c : c93f            >            cmp #(~fnv |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
330e : f003            >        beq skip1669
                       >        trap            ;failed not equal (non zero)
3310 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3313 :                 >skip1669
                       >
3313 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
3314 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3316 : 48              >            pha         ;use stack to load status
3317 : a901            >            lda #1     ;precharge accu
3319 : 28              >            plp
                        
331a : 2c0a02                   bit abs1+2  ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
331d : 08              >            php         ;save flags
331e : c901            >            cmp #1     ;test result
                       >            trap_ne
3320 : f003            >        beq skip1674
                       >        trap            ;failed not equal (non zero)
3322 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3325 :                 >skip1674
                       >
3325 : 68              >            pla         ;load status
3326 : 48              >            pha
                       >            cmp_flag ~fnz
3327 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3329 : f003            >        beq skip1677
                       >        trap            ;failed not equal (non zero)
332b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
332e :                 >skip1677
                       >
332e : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
332f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3331 : 48              >            pha         ;use stack to load status
3332 : a901            >            lda #1     ;precharge accu
3334 : 28              >            plp
                        
3335 : 2c0902                   bit abs1+1  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
3338 : 08              >            php         ;save flags
3339 : c901            >            cmp #1     ;test result
                       >            trap_ne
333b : f003            >        beq skip1682
                       >        trap            ;failed not equal (non zero)
333d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3340 :                 >skip1682
                       >
3340 : 68              >            pla         ;load status
3341 : 48              >            pha
                       >            cmp_flag ~fv
3342 : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3344 : f003            >        beq skip1685
                       >        trap            ;failed not equal (non zero)
3346 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3349 :                 >skip1685
                       >
3349 : 28              >            plp         ;restore status
                        
                                set_a 1,$ff
                       >            load_flag $ff
334a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
334c : 48              >            pha         ;use stack to load status
334d : a901            >            lda #1     ;precharge accu
334f : 28              >            plp
                        
3350 : 2c0802                   bit abs1    ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
3353 : 08              >            php         ;save flags
3354 : c901            >            cmp #1     ;test result
                       >            trap_ne
3356 : f003            >        beq skip1690
                       >        trap            ;failed not equal (non zero)
3358 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
335b :                 >skip1690
                       >
335b : 68              >            pla         ;load status
335c : 48              >            pha
                       >            cmp_flag ~fz
335d : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
335f : f003            >        beq skip1693
                       >        trap            ;failed not equal (non zero)
3361 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3364 :                 >skip1693
                       >
3364 : 28              >            plp         ;restore status
                        
                                next_test
3365 : ad0002          >            lda test_case   ;previous test
3368 : c919            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
336a : f003            >        beq skip1696
                       >        trap            ;failed not equal (non zero)
336c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
336f :                 >skip1696
                       >
001a =                 >test_num = test_num + 1
336f : a91a            >            lda #test_num   ;*** next tests' number
3371 : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
3374 : 8d04ef            sta $ef04
3377 : 435058202d207a..  db "CPX - zp / abs / #         ", 10, 0
                                set_x $80,0
                       >            load_flag 0
3394 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3396 : 48              >            pha         ;use stack to load status
3397 : a280            >            ldx #$80     ;precharge index x
3399 : 28              >            plp
                        
339a : e41d                     cpx zp7f
                                tst_stat fc
339c : 08              >            php         ;save status
339d : 68              >            pla         ;use stack to retrieve status
339e : 48              >            pha
                       >            cmp_flag fc
339f : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
33a1 : f003            >        beq skip1702
                       >        trap            ;failed not equal (non zero)
33a3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33a6 :                 >skip1702
                       >
33a6 : 28              >            plp         ;restore status
                        
33a7 : ca                       dex
33a8 : e41d                     cpx zp7f
                                tst_stat fzc
33aa : 08              >            php         ;save status
33ab : 68              >            pla         ;use stack to retrieve status
33ac : 48              >            pha
                       >            cmp_flag fzc
33ad : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
33af : f003            >        beq skip1706
                       >        trap            ;failed not equal (non zero)
33b1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33b4 :                 >skip1706
                       >
33b4 : 28              >            plp         ;restore status
                        
33b5 : ca                       dex
33b6 : e41d                     cpx zp7f
                                tst_x $7e,fn
33b8 : 08              >            php         ;save flags
33b9 : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
33bb : f003            >        beq skip1709
                       >        trap            ;failed not equal (non zero)
33bd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33c0 :                 >skip1709
                       >
33c0 : 68              >            pla         ;load status
33c1 : 48              >            pha
                       >            cmp_flag fn
33c2 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
33c4 : f003            >        beq skip1712
                       >        trap            ;failed not equal (non zero)
33c6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33c9 :                 >skip1712
                       >
33c9 : 28              >            plp         ;restore status
                        
                                set_x $80,$ff
                       >            load_flag $ff
33ca : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
33cc : 48              >            pha         ;use stack to load status
33cd : a280            >            ldx #$80     ;precharge index x
33cf : 28              >            plp
                        
33d0 : e41d                     cpx zp7f
                                tst_stat ~fnz
33d2 : 08              >            php         ;save status
33d3 : 68              >            pla         ;use stack to retrieve status
33d4 : 48              >            pha
                       >            cmp_flag ~fnz
33d5 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
33d7 : f003            >        beq skip1718
                       >        trap            ;failed not equal (non zero)
33d9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33dc :                 >skip1718
                       >
33dc : 28              >            plp         ;restore status
                        
33dd : ca                       dex
33de : e41d                     cpx zp7f
                                tst_stat ~fn
33e0 : 08              >            php         ;save status
33e1 : 68              >            pla         ;use stack to retrieve status
33e2 : 48              >            pha
                       >            cmp_flag ~fn
33e3 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
33e5 : f003            >        beq skip1722
                       >        trap            ;failed not equal (non zero)
33e7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33ea :                 >skip1722
                       >
33ea : 28              >            plp         ;restore status
                        
33eb : ca                       dex
33ec : e41d                     cpx zp7f
                                tst_x $7e,~fzc
33ee : 08              >            php         ;save flags
33ef : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
33f1 : f003            >        beq skip1725
                       >        trap            ;failed not equal (non zero)
33f3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33f6 :                 >skip1725
                       >
33f6 : 68              >            pla         ;load status
33f7 : 48              >            pha
                       >            cmp_flag ~fzc
33f8 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
33fa : f003            >        beq skip1728
                       >        trap            ;failed not equal (non zero)
33fc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33ff :                 >skip1728
                       >
33ff : 28              >            plp         ;restore status
                        
                        
                                set_x $80,0
                       >            load_flag 0
3400 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3402 : 48              >            pha         ;use stack to load status
3403 : a280            >            ldx #$80     ;precharge index x
3405 : 28              >            plp
                        
3406 : ec0c02                   cpx abs7f
                                tst_stat fc
3409 : 08              >            php         ;save status
340a : 68              >            pla         ;use stack to retrieve status
340b : 48              >            pha
                       >            cmp_flag fc
340c : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
340e : f003            >        beq skip1734
                       >        trap            ;failed not equal (non zero)
3410 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3413 :                 >skip1734
                       >
3413 : 28              >            plp         ;restore status
                        
3414 : ca                       dex
3415 : ec0c02                   cpx abs7f
                                tst_stat fzc
3418 : 08              >            php         ;save status
3419 : 68              >            pla         ;use stack to retrieve status
341a : 48              >            pha
                       >            cmp_flag fzc
341b : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
341d : f003            >        beq skip1738
                       >        trap            ;failed not equal (non zero)
341f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3422 :                 >skip1738
                       >
3422 : 28              >            plp         ;restore status
                        
3423 : ca                       dex
3424 : ec0c02                   cpx abs7f
                                tst_x $7e,fn
3427 : 08              >            php         ;save flags
3428 : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
342a : f003            >        beq skip1741
                       >        trap            ;failed not equal (non zero)
342c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
342f :                 >skip1741
                       >
342f : 68              >            pla         ;load status
3430 : 48              >            pha
                       >            cmp_flag fn
3431 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3433 : f003            >        beq skip1744
                       >        trap            ;failed not equal (non zero)
3435 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3438 :                 >skip1744
                       >
3438 : 28              >            plp         ;restore status
                        
                                set_x $80,$ff
                       >            load_flag $ff
3439 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
343b : 48              >            pha         ;use stack to load status
343c : a280            >            ldx #$80     ;precharge index x
343e : 28              >            plp
                        
343f : ec0c02                   cpx abs7f
                                tst_stat ~fnz
3442 : 08              >            php         ;save status
3443 : 68              >            pla         ;use stack to retrieve status
3444 : 48              >            pha
                       >            cmp_flag ~fnz
3445 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3447 : f003            >        beq skip1750
                       >        trap            ;failed not equal (non zero)
3449 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
344c :                 >skip1750
                       >
344c : 28              >            plp         ;restore status
                        
344d : ca                       dex
344e : ec0c02                   cpx abs7f
                                tst_stat ~fn
3451 : 08              >            php         ;save status
3452 : 68              >            pla         ;use stack to retrieve status
3453 : 48              >            pha
                       >            cmp_flag ~fn
3454 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3456 : f003            >        beq skip1754
                       >        trap            ;failed not equal (non zero)
3458 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
345b :                 >skip1754
                       >
345b : 28              >            plp         ;restore status
                        
345c : ca                       dex
345d : ec0c02                   cpx abs7f
                                tst_x $7e,~fzc
3460 : 08              >            php         ;save flags
3461 : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
3463 : f003            >        beq skip1757
                       >        trap            ;failed not equal (non zero)
3465 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3468 :                 >skip1757
                       >
3468 : 68              >            pla         ;load status
3469 : 48              >            pha
                       >            cmp_flag ~fzc
346a : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
346c : f003            >        beq skip1760
                       >        trap            ;failed not equal (non zero)
346e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3471 :                 >skip1760
                       >
3471 : 28              >            plp         ;restore status
                        
                        
                                set_x $80,0
                       >            load_flag 0
3472 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3474 : 48              >            pha         ;use stack to load status
3475 : a280            >            ldx #$80     ;precharge index x
3477 : 28              >            plp
                        
3478 : e07f                     cpx #$7f
                                tst_stat fc
347a : 08              >            php         ;save status
347b : 68              >            pla         ;use stack to retrieve status
347c : 48              >            pha
                       >            cmp_flag fc
347d : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
347f : f003            >        beq skip1766
                       >        trap            ;failed not equal (non zero)
3481 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3484 :                 >skip1766
                       >
3484 : 28              >            plp         ;restore status
                        
3485 : ca                       dex
3486 : e07f                     cpx #$7f
                                tst_stat fzc
3488 : 08              >            php         ;save status
3489 : 68              >            pla         ;use stack to retrieve status
348a : 48              >            pha
                       >            cmp_flag fzc
348b : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
348d : f003            >        beq skip1770
                       >        trap            ;failed not equal (non zero)
348f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3492 :                 >skip1770
                       >
3492 : 28              >            plp         ;restore status
                        
3493 : ca                       dex
3494 : e07f                     cpx #$7f
                                tst_x $7e,fn
3496 : 08              >            php         ;save flags
3497 : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
3499 : f003            >        beq skip1773
                       >        trap            ;failed not equal (non zero)
349b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
349e :                 >skip1773
                       >
349e : 68              >            pla         ;load status
349f : 48              >            pha
                       >            cmp_flag fn
34a0 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
34a2 : f003            >        beq skip1776
                       >        trap            ;failed not equal (non zero)
34a4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34a7 :                 >skip1776
                       >
34a7 : 28              >            plp         ;restore status
                        
                                set_x $80,$ff
                       >            load_flag $ff
34a8 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
34aa : 48              >            pha         ;use stack to load status
34ab : a280            >            ldx #$80     ;precharge index x
34ad : 28              >            plp
                        
34ae : e07f                     cpx #$7f
                                tst_stat ~fnz
34b0 : 08              >            php         ;save status
34b1 : 68              >            pla         ;use stack to retrieve status
34b2 : 48              >            pha
                       >            cmp_flag ~fnz
34b3 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
34b5 : f003            >        beq skip1782
                       >        trap            ;failed not equal (non zero)
34b7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34ba :                 >skip1782
                       >
34ba : 28              >            plp         ;restore status
                        
34bb : ca                       dex
34bc : e07f                     cpx #$7f
                                tst_stat ~fn
34be : 08              >            php         ;save status
34bf : 68              >            pla         ;use stack to retrieve status
34c0 : 48              >            pha
                       >            cmp_flag ~fn
34c1 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
34c3 : f003            >        beq skip1786
                       >        trap            ;failed not equal (non zero)
34c5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34c8 :                 >skip1786
                       >
34c8 : 28              >            plp         ;restore status
                        
34c9 : ca                       dex
34ca : e07f                     cpx #$7f
                                tst_x $7e,~fzc
34cc : 08              >            php         ;save flags
34cd : e07e            >            cpx #$7e     ;test result
                       >            trap_ne
34cf : f003            >        beq skip1789
                       >        trap            ;failed not equal (non zero)
34d1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34d4 :                 >skip1789
                       >
34d4 : 68              >            pla         ;load status
34d5 : 48              >            pha
                       >            cmp_flag ~fzc
34d6 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
34d8 : f003            >        beq skip1792
                       >        trap            ;failed not equal (non zero)
34da : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34dd :                 >skip1792
                       >
34dd : 28              >            plp         ;restore status
                        
                                next_test
34de : ad0002          >            lda test_case   ;previous test
34e1 : c91a            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
34e3 : f003            >        beq skip1795
                       >        trap            ;failed not equal (non zero)
34e5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34e8 :                 >skip1795
                       >
001b =                 >test_num = test_num + 1
34e8 : a91b            >            lda #test_num   ;*** next tests' number
34ea : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
34ed : 8d04ef            sta $ef04
34f0 : 435059202d207a..  db "CPY - zp / abs / #         ", 10, 0
                                set_y $80,0
                       >            load_flag 0
350d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
350f : 48              >            pha         ;use stack to load status
3510 : a080            >            ldy #$80     ;precharge index y
3512 : 28              >            plp
                        
3513 : c41d                     cpy zp7f
                                tst_stat fc
3515 : 08              >            php         ;save status
3516 : 68              >            pla         ;use stack to retrieve status
3517 : 48              >            pha
                       >            cmp_flag fc
3518 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
351a : f003            >        beq skip1801
                       >        trap            ;failed not equal (non zero)
351c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
351f :                 >skip1801
                       >
351f : 28              >            plp         ;restore status
                        
3520 : 88                       dey
3521 : c41d                     cpy zp7f
                                tst_stat fzc
3523 : 08              >            php         ;save status
3524 : 68              >            pla         ;use stack to retrieve status
3525 : 48              >            pha
                       >            cmp_flag fzc
3526 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3528 : f003            >        beq skip1805
                       >        trap            ;failed not equal (non zero)
352a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
352d :                 >skip1805
                       >
352d : 28              >            plp         ;restore status
                        
352e : 88                       dey
352f : c41d                     cpy zp7f
                                tst_y $7e,fn
3531 : 08              >            php         ;save flags
3532 : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
3534 : f003            >        beq skip1808
                       >        trap            ;failed not equal (non zero)
3536 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3539 :                 >skip1808
                       >
3539 : 68              >            pla         ;load status
353a : 48              >            pha
                       >            cmp_flag fn
353b : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
353d : f003            >        beq skip1811
                       >        trap            ;failed not equal (non zero)
353f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3542 :                 >skip1811
                       >
3542 : 28              >            plp         ;restore status
                        
                                set_y $80,$ff
                       >            load_flag $ff
3543 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3545 : 48              >            pha         ;use stack to load status
3546 : a080            >            ldy #$80     ;precharge index y
3548 : 28              >            plp
                        
3549 : c41d                     cpy zp7f
                                tst_stat ~fnz
354b : 08              >            php         ;save status
354c : 68              >            pla         ;use stack to retrieve status
354d : 48              >            pha
                       >            cmp_flag ~fnz
354e : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3550 : f003            >        beq skip1817
                       >        trap            ;failed not equal (non zero)
3552 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3555 :                 >skip1817
                       >
3555 : 28              >            plp         ;restore status
                        
3556 : 88                       dey
3557 : c41d                     cpy zp7f
                                tst_stat ~fn
3559 : 08              >            php         ;save status
355a : 68              >            pla         ;use stack to retrieve status
355b : 48              >            pha
                       >            cmp_flag ~fn
355c : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
355e : f003            >        beq skip1821
                       >        trap            ;failed not equal (non zero)
3560 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3563 :                 >skip1821
                       >
3563 : 28              >            plp         ;restore status
                        
3564 : 88                       dey
3565 : c41d                     cpy zp7f
                                tst_y $7e,~fzc
3567 : 08              >            php         ;save flags
3568 : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
356a : f003            >        beq skip1824
                       >        trap            ;failed not equal (non zero)
356c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
356f :                 >skip1824
                       >
356f : 68              >            pla         ;load status
3570 : 48              >            pha
                       >            cmp_flag ~fzc
3571 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3573 : f003            >        beq skip1827
                       >        trap            ;failed not equal (non zero)
3575 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3578 :                 >skip1827
                       >
3578 : 28              >            plp         ;restore status
                        
                        
                                set_y $80,0
                       >            load_flag 0
3579 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
357b : 48              >            pha         ;use stack to load status
357c : a080            >            ldy #$80     ;precharge index y
357e : 28              >            plp
                        
357f : cc0c02                   cpy abs7f
                                tst_stat fc
3582 : 08              >            php         ;save status
3583 : 68              >            pla         ;use stack to retrieve status
3584 : 48              >            pha
                       >            cmp_flag fc
3585 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3587 : f003            >        beq skip1833
                       >        trap            ;failed not equal (non zero)
3589 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
358c :                 >skip1833
                       >
358c : 28              >            plp         ;restore status
                        
358d : 88                       dey
358e : cc0c02                   cpy abs7f
                                tst_stat fzc
3591 : 08              >            php         ;save status
3592 : 68              >            pla         ;use stack to retrieve status
3593 : 48              >            pha
                       >            cmp_flag fzc
3594 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3596 : f003            >        beq skip1837
                       >        trap            ;failed not equal (non zero)
3598 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
359b :                 >skip1837
                       >
359b : 28              >            plp         ;restore status
                        
359c : 88                       dey
359d : cc0c02                   cpy abs7f
                                tst_y $7e,fn
35a0 : 08              >            php         ;save flags
35a1 : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
35a3 : f003            >        beq skip1840
                       >        trap            ;failed not equal (non zero)
35a5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35a8 :                 >skip1840
                       >
35a8 : 68              >            pla         ;load status
35a9 : 48              >            pha
                       >            cmp_flag fn
35aa : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35ac : f003            >        beq skip1843
                       >        trap            ;failed not equal (non zero)
35ae : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35b1 :                 >skip1843
                       >
35b1 : 28              >            plp         ;restore status
                        
                                set_y $80,$ff
                       >            load_flag $ff
35b2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
35b4 : 48              >            pha         ;use stack to load status
35b5 : a080            >            ldy #$80     ;precharge index y
35b7 : 28              >            plp
                        
35b8 : cc0c02                   cpy abs7f
                                tst_stat ~fnz
35bb : 08              >            php         ;save status
35bc : 68              >            pla         ;use stack to retrieve status
35bd : 48              >            pha
                       >            cmp_flag ~fnz
35be : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35c0 : f003            >        beq skip1849
                       >        trap            ;failed not equal (non zero)
35c2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35c5 :                 >skip1849
                       >
35c5 : 28              >            plp         ;restore status
                        
35c6 : 88                       dey
35c7 : cc0c02                   cpy abs7f
                                tst_stat ~fn
35ca : 08              >            php         ;save status
35cb : 68              >            pla         ;use stack to retrieve status
35cc : 48              >            pha
                       >            cmp_flag ~fn
35cd : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35cf : f003            >        beq skip1853
                       >        trap            ;failed not equal (non zero)
35d1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35d4 :                 >skip1853
                       >
35d4 : 28              >            plp         ;restore status
                        
35d5 : 88                       dey
35d6 : cc0c02                   cpy abs7f
                                tst_y $7e,~fzc
35d9 : 08              >            php         ;save flags
35da : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
35dc : f003            >        beq skip1856
                       >        trap            ;failed not equal (non zero)
35de : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35e1 :                 >skip1856
                       >
35e1 : 68              >            pla         ;load status
35e2 : 48              >            pha
                       >            cmp_flag ~fzc
35e3 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35e5 : f003            >        beq skip1859
                       >        trap            ;failed not equal (non zero)
35e7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35ea :                 >skip1859
                       >
35ea : 28              >            plp         ;restore status
                        
                        
                                set_y $80,0
                       >            load_flag 0
35eb : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
35ed : 48              >            pha         ;use stack to load status
35ee : a080            >            ldy #$80     ;precharge index y
35f0 : 28              >            plp
                        
35f1 : c07f                     cpy #$7f
                                tst_stat fc
35f3 : 08              >            php         ;save status
35f4 : 68              >            pla         ;use stack to retrieve status
35f5 : 48              >            pha
                       >            cmp_flag fc
35f6 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35f8 : f003            >        beq skip1865
                       >        trap            ;failed not equal (non zero)
35fa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35fd :                 >skip1865
                       >
35fd : 28              >            plp         ;restore status
                        
35fe : 88                       dey
35ff : c07f                     cpy #$7f
                                tst_stat fzc
3601 : 08              >            php         ;save status
3602 : 68              >            pla         ;use stack to retrieve status
3603 : 48              >            pha
                       >            cmp_flag fzc
3604 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3606 : f003            >        beq skip1869
                       >        trap            ;failed not equal (non zero)
3608 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
360b :                 >skip1869
                       >
360b : 28              >            plp         ;restore status
                        
360c : 88                       dey
360d : c07f                     cpy #$7f
                                tst_y $7e,fn
360f : 08              >            php         ;save flags
3610 : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
3612 : f003            >        beq skip1872
                       >        trap            ;failed not equal (non zero)
3614 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3617 :                 >skip1872
                       >
3617 : 68              >            pla         ;load status
3618 : 48              >            pha
                       >            cmp_flag fn
3619 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
361b : f003            >        beq skip1875
                       >        trap            ;failed not equal (non zero)
361d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3620 :                 >skip1875
                       >
3620 : 28              >            plp         ;restore status
                        
                                set_y $80,$ff
                       >            load_flag $ff
3621 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3623 : 48              >            pha         ;use stack to load status
3624 : a080            >            ldy #$80     ;precharge index y
3626 : 28              >            plp
                        
3627 : c07f                     cpy #$7f
                                tst_stat ~fnz
3629 : 08              >            php         ;save status
362a : 68              >            pla         ;use stack to retrieve status
362b : 48              >            pha
                       >            cmp_flag ~fnz
362c : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
362e : f003            >        beq skip1881
                       >        trap            ;failed not equal (non zero)
3630 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3633 :                 >skip1881
                       >
3633 : 28              >            plp         ;restore status
                        
3634 : 88                       dey
3635 : c07f                     cpy #$7f
                                tst_stat ~fn
3637 : 08              >            php         ;save status
3638 : 68              >            pla         ;use stack to retrieve status
3639 : 48              >            pha
                       >            cmp_flag ~fn
363a : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
363c : f003            >        beq skip1885
                       >        trap            ;failed not equal (non zero)
363e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3641 :                 >skip1885
                       >
3641 : 28              >            plp         ;restore status
                        
3642 : 88                       dey
3643 : c07f                     cpy #$7f
                                tst_y $7e,~fzc
3645 : 08              >            php         ;save flags
3646 : c07e            >            cpy #$7e     ;test result
                       >            trap_ne
3648 : f003            >        beq skip1888
                       >        trap            ;failed not equal (non zero)
364a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
364d :                 >skip1888
                       >
364d : 68              >            pla         ;load status
364e : 48              >            pha
                       >            cmp_flag ~fzc
364f : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3651 : f003            >        beq skip1891
                       >        trap            ;failed not equal (non zero)
3653 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3656 :                 >skip1891
                       >
3656 : 28              >            plp         ;restore status
                        
                                next_test
3657 : ad0002          >            lda test_case   ;previous test
365a : c91b            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
365c : f003            >        beq skip1894
                       >        trap            ;failed not equal (non zero)
365e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3661 :                 >skip1894
                       >
001c =                 >test_num = test_num + 1
3661 : a91c            >            lda #test_num   ;*** next tests' number
3663 : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
3666 : 8d04ef            sta $ef04
3669 : 434d50202d207a..  db "CMP - zp / abs / #         ", 10, 0
                                set_a $80,0
                       >            load_flag 0
3686 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3688 : 48              >            pha         ;use stack to load status
3689 : a980            >            lda #$80     ;precharge accu
368b : 28              >            plp
                        
368c : c51d                     cmp zp7f
                                tst_a $80,fc
368e : 08              >            php         ;save flags
368f : c980            >            cmp #$80     ;test result
                       >            trap_ne
3691 : f003            >        beq skip1899
                       >        trap            ;failed not equal (non zero)
3693 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3696 :                 >skip1899
                       >
3696 : 68              >            pla         ;load status
3697 : 48              >            pha
                       >            cmp_flag fc
3698 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
369a : f003            >        beq skip1902
                       >        trap            ;failed not equal (non zero)
369c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
369f :                 >skip1902
                       >
369f : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
36a0 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
36a2 : 48              >            pha         ;use stack to load status
36a3 : a97f            >            lda #$7f     ;precharge accu
36a5 : 28              >            plp
                        
36a6 : c51d                     cmp zp7f
                                tst_a $7f,fzc
36a8 : 08              >            php         ;save flags
36a9 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
36ab : f003            >        beq skip1907
                       >        trap            ;failed not equal (non zero)
36ad : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36b0 :                 >skip1907
                       >
36b0 : 68              >            pla         ;load status
36b1 : 48              >            pha
                       >            cmp_flag fzc
36b2 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36b4 : f003            >        beq skip1910
                       >        trap            ;failed not equal (non zero)
36b6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36b9 :                 >skip1910
                       >
36b9 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
36ba : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
36bc : 48              >            pha         ;use stack to load status
36bd : a97e            >            lda #$7e     ;precharge accu
36bf : 28              >            plp
                        
36c0 : c51d                     cmp zp7f
                                tst_a $7e,fn
36c2 : 08              >            php         ;save flags
36c3 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
36c5 : f003            >        beq skip1915
                       >        trap            ;failed not equal (non zero)
36c7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36ca :                 >skip1915
                       >
36ca : 68              >            pla         ;load status
36cb : 48              >            pha
                       >            cmp_flag fn
36cc : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36ce : f003            >        beq skip1918
                       >        trap            ;failed not equal (non zero)
36d0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36d3 :                 >skip1918
                       >
36d3 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
36d4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
36d6 : 48              >            pha         ;use stack to load status
36d7 : a980            >            lda #$80     ;precharge accu
36d9 : 28              >            plp
                        
36da : c51d                     cmp zp7f
                                tst_a $80,~fnz
36dc : 08              >            php         ;save flags
36dd : c980            >            cmp #$80     ;test result
                       >            trap_ne
36df : f003            >        beq skip1923
                       >        trap            ;failed not equal (non zero)
36e1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36e4 :                 >skip1923
                       >
36e4 : 68              >            pla         ;load status
36e5 : 48              >            pha
                       >            cmp_flag ~fnz
36e6 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36e8 : f003            >        beq skip1926
                       >        trap            ;failed not equal (non zero)
36ea : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36ed :                 >skip1926
                       >
36ed : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
36ee : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
36f0 : 48              >            pha         ;use stack to load status
36f1 : a97f            >            lda #$7f     ;precharge accu
36f3 : 28              >            plp
                        
36f4 : c51d                     cmp zp7f
                                tst_a $7f,~fn
36f6 : 08              >            php         ;save flags
36f7 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
36f9 : f003            >        beq skip1931
                       >        trap            ;failed not equal (non zero)
36fb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36fe :                 >skip1931
                       >
36fe : 68              >            pla         ;load status
36ff : 48              >            pha
                       >            cmp_flag ~fn
3700 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3702 : f003            >        beq skip1934
                       >        trap            ;failed not equal (non zero)
3704 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3707 :                 >skip1934
                       >
3707 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
3708 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
370a : 48              >            pha         ;use stack to load status
370b : a97e            >            lda #$7e     ;precharge accu
370d : 28              >            plp
                        
370e : c51d                     cmp zp7f
                                tst_a $7e,~fzc
3710 : 08              >            php         ;save flags
3711 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
3713 : f003            >        beq skip1939
                       >        trap            ;failed not equal (non zero)
3715 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3718 :                 >skip1939
                       >
3718 : 68              >            pla         ;load status
3719 : 48              >            pha
                       >            cmp_flag ~fzc
371a : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
371c : f003            >        beq skip1942
                       >        trap            ;failed not equal (non zero)
371e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3721 :                 >skip1942
                       >
3721 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
3722 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3724 : 48              >            pha         ;use stack to load status
3725 : a980            >            lda #$80     ;precharge accu
3727 : 28              >            plp
                        
3728 : cd0c02                   cmp abs7f
                                tst_a $80,fc
372b : 08              >            php         ;save flags
372c : c980            >            cmp #$80     ;test result
                       >            trap_ne
372e : f003            >        beq skip1947
                       >        trap            ;failed not equal (non zero)
3730 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3733 :                 >skip1947
                       >
3733 : 68              >            pla         ;load status
3734 : 48              >            pha
                       >            cmp_flag fc
3735 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3737 : f003            >        beq skip1950
                       >        trap            ;failed not equal (non zero)
3739 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
373c :                 >skip1950
                       >
373c : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
373d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
373f : 48              >            pha         ;use stack to load status
3740 : a97f            >            lda #$7f     ;precharge accu
3742 : 28              >            plp
                        
3743 : cd0c02                   cmp abs7f
                                tst_a $7f,fzc
3746 : 08              >            php         ;save flags
3747 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
3749 : f003            >        beq skip1955
                       >        trap            ;failed not equal (non zero)
374b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
374e :                 >skip1955
                       >
374e : 68              >            pla         ;load status
374f : 48              >            pha
                       >            cmp_flag fzc
3750 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3752 : f003            >        beq skip1958
                       >        trap            ;failed not equal (non zero)
3754 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3757 :                 >skip1958
                       >
3757 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
3758 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
375a : 48              >            pha         ;use stack to load status
375b : a97e            >            lda #$7e     ;precharge accu
375d : 28              >            plp
                        
375e : cd0c02                   cmp abs7f
                                tst_a $7e,fn
3761 : 08              >            php         ;save flags
3762 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
3764 : f003            >        beq skip1963
                       >        trap            ;failed not equal (non zero)
3766 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3769 :                 >skip1963
                       >
3769 : 68              >            pla         ;load status
376a : 48              >            pha
                       >            cmp_flag fn
376b : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
376d : f003            >        beq skip1966
                       >        trap            ;failed not equal (non zero)
376f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3772 :                 >skip1966
                       >
3772 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
3773 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3775 : 48              >            pha         ;use stack to load status
3776 : a980            >            lda #$80     ;precharge accu
3778 : 28              >            plp
                        
3779 : cd0c02                   cmp abs7f
                                tst_a $80,~fnz
377c : 08              >            php         ;save flags
377d : c980            >            cmp #$80     ;test result
                       >            trap_ne
377f : f003            >        beq skip1971
                       >        trap            ;failed not equal (non zero)
3781 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3784 :                 >skip1971
                       >
3784 : 68              >            pla         ;load status
3785 : 48              >            pha
                       >            cmp_flag ~fnz
3786 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3788 : f003            >        beq skip1974
                       >        trap            ;failed not equal (non zero)
378a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
378d :                 >skip1974
                       >
378d : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
378e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3790 : 48              >            pha         ;use stack to load status
3791 : a97f            >            lda #$7f     ;precharge accu
3793 : 28              >            plp
                        
3794 : cd0c02                   cmp abs7f
                                tst_a $7f,~fn
3797 : 08              >            php         ;save flags
3798 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
379a : f003            >        beq skip1979
                       >        trap            ;failed not equal (non zero)
379c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
379f :                 >skip1979
                       >
379f : 68              >            pla         ;load status
37a0 : 48              >            pha
                       >            cmp_flag ~fn
37a1 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
37a3 : f003            >        beq skip1982
                       >        trap            ;failed not equal (non zero)
37a5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37a8 :                 >skip1982
                       >
37a8 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
37a9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
37ab : 48              >            pha         ;use stack to load status
37ac : a97e            >            lda #$7e     ;precharge accu
37ae : 28              >            plp
                        
37af : cd0c02                   cmp abs7f
                                tst_a $7e,~fzc
37b2 : 08              >            php         ;save flags
37b3 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
37b5 : f003            >        beq skip1987
                       >        trap            ;failed not equal (non zero)
37b7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37ba :                 >skip1987
                       >
37ba : 68              >            pla         ;load status
37bb : 48              >            pha
                       >            cmp_flag ~fzc
37bc : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
37be : f003            >        beq skip1990
                       >        trap            ;failed not equal (non zero)
37c0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37c3 :                 >skip1990
                       >
37c3 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
37c4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
37c6 : 48              >            pha         ;use stack to load status
37c7 : a980            >            lda #$80     ;precharge accu
37c9 : 28              >            plp
                        
37ca : c97f                     cmp #$7f
                                tst_a $80,fc
37cc : 08              >            php         ;save flags
37cd : c980            >            cmp #$80     ;test result
                       >            trap_ne
37cf : f003            >        beq skip1995
                       >        trap            ;failed not equal (non zero)
37d1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37d4 :                 >skip1995
                       >
37d4 : 68              >            pla         ;load status
37d5 : 48              >            pha
                       >            cmp_flag fc
37d6 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
37d8 : f003            >        beq skip1998
                       >        trap            ;failed not equal (non zero)
37da : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37dd :                 >skip1998
                       >
37dd : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
37de : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
37e0 : 48              >            pha         ;use stack to load status
37e1 : a97f            >            lda #$7f     ;precharge accu
37e3 : 28              >            plp
                        
37e4 : c97f                     cmp #$7f
                                tst_a $7f,fzc
37e6 : 08              >            php         ;save flags
37e7 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
37e9 : f003            >        beq skip2003
                       >        trap            ;failed not equal (non zero)
37eb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37ee :                 >skip2003
                       >
37ee : 68              >            pla         ;load status
37ef : 48              >            pha
                       >            cmp_flag fzc
37f0 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
37f2 : f003            >        beq skip2006
                       >        trap            ;failed not equal (non zero)
37f4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37f7 :                 >skip2006
                       >
37f7 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
37f8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
37fa : 48              >            pha         ;use stack to load status
37fb : a97e            >            lda #$7e     ;precharge accu
37fd : 28              >            plp
                        
37fe : c97f                     cmp #$7f
                                tst_a $7e,fn
3800 : 08              >            php         ;save flags
3801 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
3803 : f003            >        beq skip2011
                       >        trap            ;failed not equal (non zero)
3805 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3808 :                 >skip2011
                       >
3808 : 68              >            pla         ;load status
3809 : 48              >            pha
                       >            cmp_flag fn
380a : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
380c : f003            >        beq skip2014
                       >        trap            ;failed not equal (non zero)
380e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3811 :                 >skip2014
                       >
3811 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
3812 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3814 : 48              >            pha         ;use stack to load status
3815 : a980            >            lda #$80     ;precharge accu
3817 : 28              >            plp
                        
3818 : c97f                     cmp #$7f
                                tst_a $80,~fnz
381a : 08              >            php         ;save flags
381b : c980            >            cmp #$80     ;test result
                       >            trap_ne
381d : f003            >        beq skip2019
                       >        trap            ;failed not equal (non zero)
381f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3822 :                 >skip2019
                       >
3822 : 68              >            pla         ;load status
3823 : 48              >            pha
                       >            cmp_flag ~fnz
3824 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3826 : f003            >        beq skip2022
                       >        trap            ;failed not equal (non zero)
3828 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
382b :                 >skip2022
                       >
382b : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
382c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
382e : 48              >            pha         ;use stack to load status
382f : a97f            >            lda #$7f     ;precharge accu
3831 : 28              >            plp
                        
3832 : c97f                     cmp #$7f
                                tst_a $7f,~fn
3834 : 08              >            php         ;save flags
3835 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
3837 : f003            >        beq skip2027
                       >        trap            ;failed not equal (non zero)
3839 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
383c :                 >skip2027
                       >
383c : 68              >            pla         ;load status
383d : 48              >            pha
                       >            cmp_flag ~fn
383e : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3840 : f003            >        beq skip2030
                       >        trap            ;failed not equal (non zero)
3842 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3845 :                 >skip2030
                       >
3845 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
3846 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3848 : 48              >            pha         ;use stack to load status
3849 : a97e            >            lda #$7e     ;precharge accu
384b : 28              >            plp
                        
384c : c97f                     cmp #$7f
                                tst_a $7e,~fzc
384e : 08              >            php         ;save flags
384f : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
3851 : f003            >        beq skip2035
                       >        trap            ;failed not equal (non zero)
3853 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3856 :                 >skip2035
                       >
3856 : 68              >            pla         ;load status
3857 : 48              >            pha
                       >            cmp_flag ~fzc
3858 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
385a : f003            >        beq skip2038
                       >        trap            ;failed not equal (non zero)
385c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
385f :                 >skip2038
                       >
385f : 28              >            plp         ;restore status
                        
                        
3860 : a204                     ldx #4          ;with indexing by X
                                set_a $80,0
                       >            load_flag 0
3862 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3864 : 48              >            pha         ;use stack to load status
3865 : a980            >            lda #$80     ;precharge accu
3867 : 28              >            plp
                        
3868 : d519                     cmp zp1,x
                                tst_a $80,fc
386a : 08              >            php         ;save flags
386b : c980            >            cmp #$80     ;test result
                       >            trap_ne
386d : f003            >        beq skip2043
                       >        trap            ;failed not equal (non zero)
386f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3872 :                 >skip2043
                       >
3872 : 68              >            pla         ;load status
3873 : 48              >            pha
                       >            cmp_flag fc
3874 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3876 : f003            >        beq skip2046
                       >        trap            ;failed not equal (non zero)
3878 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
387b :                 >skip2046
                       >
387b : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
387c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
387e : 48              >            pha         ;use stack to load status
387f : a97f            >            lda #$7f     ;precharge accu
3881 : 28              >            plp
                        
3882 : d519                     cmp zp1,x
                                tst_a $7f,fzc
3884 : 08              >            php         ;save flags
3885 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
3887 : f003            >        beq skip2051
                       >        trap            ;failed not equal (non zero)
3889 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
388c :                 >skip2051
                       >
388c : 68              >            pla         ;load status
388d : 48              >            pha
                       >            cmp_flag fzc
388e : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3890 : f003            >        beq skip2054
                       >        trap            ;failed not equal (non zero)
3892 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3895 :                 >skip2054
                       >
3895 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
3896 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3898 : 48              >            pha         ;use stack to load status
3899 : a97e            >            lda #$7e     ;precharge accu
389b : 28              >            plp
                        
389c : d519                     cmp zp1,x
                                tst_a $7e,fn
389e : 08              >            php         ;save flags
389f : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
38a1 : f003            >        beq skip2059
                       >        trap            ;failed not equal (non zero)
38a3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38a6 :                 >skip2059
                       >
38a6 : 68              >            pla         ;load status
38a7 : 48              >            pha
                       >            cmp_flag fn
38a8 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
38aa : f003            >        beq skip2062
                       >        trap            ;failed not equal (non zero)
38ac : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38af :                 >skip2062
                       >
38af : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
38b0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
38b2 : 48              >            pha         ;use stack to load status
38b3 : a980            >            lda #$80     ;precharge accu
38b5 : 28              >            plp
                        
38b6 : d519                     cmp zp1,x
                                tst_a $80,~fnz
38b8 : 08              >            php         ;save flags
38b9 : c980            >            cmp #$80     ;test result
                       >            trap_ne
38bb : f003            >        beq skip2067
                       >        trap            ;failed not equal (non zero)
38bd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38c0 :                 >skip2067
                       >
38c0 : 68              >            pla         ;load status
38c1 : 48              >            pha
                       >            cmp_flag ~fnz
38c2 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
38c4 : f003            >        beq skip2070
                       >        trap            ;failed not equal (non zero)
38c6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38c9 :                 >skip2070
                       >
38c9 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
38ca : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
38cc : 48              >            pha         ;use stack to load status
38cd : a97f            >            lda #$7f     ;precharge accu
38cf : 28              >            plp
                        
38d0 : d519                     cmp zp1,x
                                tst_a $7f,~fn
38d2 : 08              >            php         ;save flags
38d3 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
38d5 : f003            >        beq skip2075
                       >        trap            ;failed not equal (non zero)
38d7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38da :                 >skip2075
                       >
38da : 68              >            pla         ;load status
38db : 48              >            pha
                       >            cmp_flag ~fn
38dc : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
38de : f003            >        beq skip2078
                       >        trap            ;failed not equal (non zero)
38e0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38e3 :                 >skip2078
                       >
38e3 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
38e4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
38e6 : 48              >            pha         ;use stack to load status
38e7 : a97e            >            lda #$7e     ;precharge accu
38e9 : 28              >            plp
                        
38ea : d519                     cmp zp1,x
                                tst_a $7e,~fzc
38ec : 08              >            php         ;save flags
38ed : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
38ef : f003            >        beq skip2083
                       >        trap            ;failed not equal (non zero)
38f1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38f4 :                 >skip2083
                       >
38f4 : 68              >            pla         ;load status
38f5 : 48              >            pha
                       >            cmp_flag ~fzc
38f6 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
38f8 : f003            >        beq skip2086
                       >        trap            ;failed not equal (non zero)
38fa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38fd :                 >skip2086
                       >
38fd : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
38fe : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3900 : 48              >            pha         ;use stack to load status
3901 : a980            >            lda #$80     ;precharge accu
3903 : 28              >            plp
                        
3904 : dd0802                   cmp abs1,x
                                tst_a $80,fc
3907 : 08              >            php         ;save flags
3908 : c980            >            cmp #$80     ;test result
                       >            trap_ne
390a : f003            >        beq skip2091
                       >        trap            ;failed not equal (non zero)
390c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
390f :                 >skip2091
                       >
390f : 68              >            pla         ;load status
3910 : 48              >            pha
                       >            cmp_flag fc
3911 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3913 : f003            >        beq skip2094
                       >        trap            ;failed not equal (non zero)
3915 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3918 :                 >skip2094
                       >
3918 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
3919 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
391b : 48              >            pha         ;use stack to load status
391c : a97f            >            lda #$7f     ;precharge accu
391e : 28              >            plp
                        
391f : dd0802                   cmp abs1,x
                                tst_a $7f,fzc
3922 : 08              >            php         ;save flags
3923 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
3925 : f003            >        beq skip2099
                       >        trap            ;failed not equal (non zero)
3927 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
392a :                 >skip2099
                       >
392a : 68              >            pla         ;load status
392b : 48              >            pha
                       >            cmp_flag fzc
392c : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
392e : f003            >        beq skip2102
                       >        trap            ;failed not equal (non zero)
3930 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3933 :                 >skip2102
                       >
3933 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
3934 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3936 : 48              >            pha         ;use stack to load status
3937 : a97e            >            lda #$7e     ;precharge accu
3939 : 28              >            plp
                        
393a : dd0802                   cmp abs1,x
                                tst_a $7e,fn
393d : 08              >            php         ;save flags
393e : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
3940 : f003            >        beq skip2107
                       >        trap            ;failed not equal (non zero)
3942 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3945 :                 >skip2107
                       >
3945 : 68              >            pla         ;load status
3946 : 48              >            pha
                       >            cmp_flag fn
3947 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3949 : f003            >        beq skip2110
                       >        trap            ;failed not equal (non zero)
394b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
394e :                 >skip2110
                       >
394e : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
394f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3951 : 48              >            pha         ;use stack to load status
3952 : a980            >            lda #$80     ;precharge accu
3954 : 28              >            plp
                        
3955 : dd0802                   cmp abs1,x
                                tst_a $80,~fnz
3958 : 08              >            php         ;save flags
3959 : c980            >            cmp #$80     ;test result
                       >            trap_ne
395b : f003            >        beq skip2115
                       >        trap            ;failed not equal (non zero)
395d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3960 :                 >skip2115
                       >
3960 : 68              >            pla         ;load status
3961 : 48              >            pha
                       >            cmp_flag ~fnz
3962 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3964 : f003            >        beq skip2118
                       >        trap            ;failed not equal (non zero)
3966 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3969 :                 >skip2118
                       >
3969 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
396a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
396c : 48              >            pha         ;use stack to load status
396d : a97f            >            lda #$7f     ;precharge accu
396f : 28              >            plp
                        
3970 : dd0802                   cmp abs1,x
                                tst_a $7f,~fn
3973 : 08              >            php         ;save flags
3974 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
3976 : f003            >        beq skip2123
                       >        trap            ;failed not equal (non zero)
3978 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
397b :                 >skip2123
                       >
397b : 68              >            pla         ;load status
397c : 48              >            pha
                       >            cmp_flag ~fn
397d : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
397f : f003            >        beq skip2126
                       >        trap            ;failed not equal (non zero)
3981 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3984 :                 >skip2126
                       >
3984 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
3985 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3987 : 48              >            pha         ;use stack to load status
3988 : a97e            >            lda #$7e     ;precharge accu
398a : 28              >            plp
                        
398b : dd0802                   cmp abs1,x
                                tst_a $7e,~fzc
398e : 08              >            php         ;save flags
398f : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
3991 : f003            >        beq skip2131
                       >        trap            ;failed not equal (non zero)
3993 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3996 :                 >skip2131
                       >
3996 : 68              >            pla         ;load status
3997 : 48              >            pha
                       >            cmp_flag ~fzc
3998 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
399a : f003            >        beq skip2134
                       >        trap            ;failed not equal (non zero)
399c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
399f :                 >skip2134
                       >
399f : 28              >            plp         ;restore status
                        
                        
39a0 : a004                     ldy #4          ;with indexing by Y
39a2 : a208                     ldx #8          ;with indexed indirect
                                set_a $80,0
                       >            load_flag 0
39a4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
39a6 : 48              >            pha         ;use stack to load status
39a7 : a980            >            lda #$80     ;precharge accu
39a9 : 28              >            plp
                        
39aa : d90802                   cmp abs1,y
                                tst_a $80,fc
39ad : 08              >            php         ;save flags
39ae : c980            >            cmp #$80     ;test result
                       >            trap_ne
39b0 : f003            >        beq skip2139
                       >        trap            ;failed not equal (non zero)
39b2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
39b5 :                 >skip2139
                       >
39b5 : 68              >            pla         ;load status
39b6 : 48              >            pha
                       >            cmp_flag fc
39b7 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
39b9 : f003            >        beq skip2142
                       >        trap            ;failed not equal (non zero)
39bb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
39be :                 >skip2142
                       >
39be : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
39bf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
39c1 : 48              >            pha         ;use stack to load status
39c2 : a97f            >            lda #$7f     ;precharge accu
39c4 : 28              >            plp
                        
39c5 : d90802                   cmp abs1,y
                                tst_a $7f,fzc
39c8 : 08              >            php         ;save flags
39c9 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
39cb : f003            >        beq skip2147
                       >        trap            ;failed not equal (non zero)
39cd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
39d0 :                 >skip2147
                       >
39d0 : 68              >            pla         ;load status
39d1 : 48              >            pha
                       >            cmp_flag fzc
39d2 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
39d4 : f003            >        beq skip2150
                       >        trap            ;failed not equal (non zero)
39d6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
39d9 :                 >skip2150
                       >
39d9 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
39da : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
39dc : 48              >            pha         ;use stack to load status
39dd : a97e            >            lda #$7e     ;precharge accu
39df : 28              >            plp
                        
39e0 : d90802                   cmp abs1,y
                                tst_a $7e,fn
39e3 : 08              >            php         ;save flags
39e4 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
39e6 : f003            >        beq skip2155
                       >        trap            ;failed not equal (non zero)
39e8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
39eb :                 >skip2155
                       >
39eb : 68              >            pla         ;load status
39ec : 48              >            pha
                       >            cmp_flag fn
39ed : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
39ef : f003            >        beq skip2158
                       >        trap            ;failed not equal (non zero)
39f1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
39f4 :                 >skip2158
                       >
39f4 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
39f5 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
39f7 : 48              >            pha         ;use stack to load status
39f8 : a980            >            lda #$80     ;precharge accu
39fa : 28              >            plp
                        
39fb : d90802                   cmp abs1,y
                                tst_a $80,~fnz
39fe : 08              >            php         ;save flags
39ff : c980            >            cmp #$80     ;test result
                       >            trap_ne
3a01 : f003            >        beq skip2163
                       >        trap            ;failed not equal (non zero)
3a03 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a06 :                 >skip2163
                       >
3a06 : 68              >            pla         ;load status
3a07 : 48              >            pha
                       >            cmp_flag ~fnz
3a08 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3a0a : f003            >        beq skip2166
                       >        trap            ;failed not equal (non zero)
3a0c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a0f :                 >skip2166
                       >
3a0f : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
3a10 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3a12 : 48              >            pha         ;use stack to load status
3a13 : a97f            >            lda #$7f     ;precharge accu
3a15 : 28              >            plp
                        
3a16 : d90802                   cmp abs1,y
                                tst_a $7f,~fn
3a19 : 08              >            php         ;save flags
3a1a : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
3a1c : f003            >        beq skip2171
                       >        trap            ;failed not equal (non zero)
3a1e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a21 :                 >skip2171
                       >
3a21 : 68              >            pla         ;load status
3a22 : 48              >            pha
                       >            cmp_flag ~fn
3a23 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3a25 : f003            >        beq skip2174
                       >        trap            ;failed not equal (non zero)
3a27 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a2a :                 >skip2174
                       >
3a2a : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
3a2b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3a2d : 48              >            pha         ;use stack to load status
3a2e : a97e            >            lda #$7e     ;precharge accu
3a30 : 28              >            plp
                        
3a31 : d90802                   cmp abs1,y
                                tst_a $7e,~fzc
3a34 : 08              >            php         ;save flags
3a35 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
3a37 : f003            >        beq skip2179
                       >        trap            ;failed not equal (non zero)
3a39 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a3c :                 >skip2179
                       >
3a3c : 68              >            pla         ;load status
3a3d : 48              >            pha
                       >            cmp_flag ~fzc
3a3e : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3a40 : f003            >        beq skip2182
                       >        trap            ;failed not equal (non zero)
3a42 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a45 :                 >skip2182
                       >
3a45 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
3a46 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3a48 : 48              >            pha         ;use stack to load status
3a49 : a980            >            lda #$80     ;precharge accu
3a4b : 28              >            plp
                        
3a4c : c12a                     cmp (ind1,x)
                                tst_a $80,fc
3a4e : 08              >            php         ;save flags
3a4f : c980            >            cmp #$80     ;test result
                       >            trap_ne
3a51 : f003            >        beq skip2187
                       >        trap            ;failed not equal (non zero)
3a53 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a56 :                 >skip2187
                       >
3a56 : 68              >            pla         ;load status
3a57 : 48              >            pha
                       >            cmp_flag fc
3a58 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3a5a : f003            >        beq skip2190
                       >        trap            ;failed not equal (non zero)
3a5c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a5f :                 >skip2190
                       >
3a5f : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
3a60 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3a62 : 48              >            pha         ;use stack to load status
3a63 : a97f            >            lda #$7f     ;precharge accu
3a65 : 28              >            plp
                        
3a66 : c12a                     cmp (ind1,x)
                                tst_a $7f,fzc
3a68 : 08              >            php         ;save flags
3a69 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
3a6b : f003            >        beq skip2195
                       >        trap            ;failed not equal (non zero)
3a6d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a70 :                 >skip2195
                       >
3a70 : 68              >            pla         ;load status
3a71 : 48              >            pha
                       >            cmp_flag fzc
3a72 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3a74 : f003            >        beq skip2198
                       >        trap            ;failed not equal (non zero)
3a76 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a79 :                 >skip2198
                       >
3a79 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
3a7a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3a7c : 48              >            pha         ;use stack to load status
3a7d : a97e            >            lda #$7e     ;precharge accu
3a7f : 28              >            plp
                        
3a80 : c12a                     cmp (ind1,x)
                                tst_a $7e,fn
3a82 : 08              >            php         ;save flags
3a83 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
3a85 : f003            >        beq skip2203
                       >        trap            ;failed not equal (non zero)
3a87 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a8a :                 >skip2203
                       >
3a8a : 68              >            pla         ;load status
3a8b : 48              >            pha
                       >            cmp_flag fn
3a8c : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3a8e : f003            >        beq skip2206
                       >        trap            ;failed not equal (non zero)
3a90 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a93 :                 >skip2206
                       >
3a93 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
3a94 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3a96 : 48              >            pha         ;use stack to load status
3a97 : a980            >            lda #$80     ;precharge accu
3a99 : 28              >            plp
                        
3a9a : c12a                     cmp (ind1,x)
                                tst_a $80,~fnz
3a9c : 08              >            php         ;save flags
3a9d : c980            >            cmp #$80     ;test result
                       >            trap_ne
3a9f : f003            >        beq skip2211
                       >        trap            ;failed not equal (non zero)
3aa1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3aa4 :                 >skip2211
                       >
3aa4 : 68              >            pla         ;load status
3aa5 : 48              >            pha
                       >            cmp_flag ~fnz
3aa6 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3aa8 : f003            >        beq skip2214
                       >        trap            ;failed not equal (non zero)
3aaa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3aad :                 >skip2214
                       >
3aad : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
3aae : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3ab0 : 48              >            pha         ;use stack to load status
3ab1 : a97f            >            lda #$7f     ;precharge accu
3ab3 : 28              >            plp
                        
3ab4 : c12a                     cmp (ind1,x)
                                tst_a $7f,~fn
3ab6 : 08              >            php         ;save flags
3ab7 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
3ab9 : f003            >        beq skip2219
                       >        trap            ;failed not equal (non zero)
3abb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3abe :                 >skip2219
                       >
3abe : 68              >            pla         ;load status
3abf : 48              >            pha
                       >            cmp_flag ~fn
3ac0 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3ac2 : f003            >        beq skip2222
                       >        trap            ;failed not equal (non zero)
3ac4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ac7 :                 >skip2222
                       >
3ac7 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
3ac8 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3aca : 48              >            pha         ;use stack to load status
3acb : a97e            >            lda #$7e     ;precharge accu
3acd : 28              >            plp
                        
3ace : c12a                     cmp (ind1,x)
                                tst_a $7e,~fzc
3ad0 : 08              >            php         ;save flags
3ad1 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
3ad3 : f003            >        beq skip2227
                       >        trap            ;failed not equal (non zero)
3ad5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ad8 :                 >skip2227
                       >
3ad8 : 68              >            pla         ;load status
3ad9 : 48              >            pha
                       >            cmp_flag ~fzc
3ada : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3adc : f003            >        beq skip2230
                       >        trap            ;failed not equal (non zero)
3ade : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ae1 :                 >skip2230
                       >
3ae1 : 28              >            plp         ;restore status
                        
                        
                                set_a $80,0
                       >            load_flag 0
3ae2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3ae4 : 48              >            pha         ;use stack to load status
3ae5 : a980            >            lda #$80     ;precharge accu
3ae7 : 28              >            plp
                        
3ae8 : d12a                     cmp (ind1),y
                                tst_a $80,fc
3aea : 08              >            php         ;save flags
3aeb : c980            >            cmp #$80     ;test result
                       >            trap_ne
3aed : f003            >        beq skip2235
                       >        trap            ;failed not equal (non zero)
3aef : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3af2 :                 >skip2235
                       >
3af2 : 68              >            pla         ;load status
3af3 : 48              >            pha
                       >            cmp_flag fc
3af4 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3af6 : f003            >        beq skip2238
                       >        trap            ;failed not equal (non zero)
3af8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3afb :                 >skip2238
                       >
3afb : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
3afc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3afe : 48              >            pha         ;use stack to load status
3aff : a97f            >            lda #$7f     ;precharge accu
3b01 : 28              >            plp
                        
3b02 : d12a                     cmp (ind1),y
                                tst_a $7f,fzc
3b04 : 08              >            php         ;save flags
3b05 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
3b07 : f003            >        beq skip2243
                       >        trap            ;failed not equal (non zero)
3b09 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b0c :                 >skip2243
                       >
3b0c : 68              >            pla         ;load status
3b0d : 48              >            pha
                       >            cmp_flag fzc
3b0e : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3b10 : f003            >        beq skip2246
                       >        trap            ;failed not equal (non zero)
3b12 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b15 :                 >skip2246
                       >
3b15 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
3b16 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3b18 : 48              >            pha         ;use stack to load status
3b19 : a97e            >            lda #$7e     ;precharge accu
3b1b : 28              >            plp
                        
3b1c : d12a                     cmp (ind1),y
                                tst_a $7e,fn
3b1e : 08              >            php         ;save flags
3b1f : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
3b21 : f003            >        beq skip2251
                       >        trap            ;failed not equal (non zero)
3b23 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b26 :                 >skip2251
                       >
3b26 : 68              >            pla         ;load status
3b27 : 48              >            pha
                       >            cmp_flag fn
3b28 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3b2a : f003            >        beq skip2254
                       >        trap            ;failed not equal (non zero)
3b2c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b2f :                 >skip2254
                       >
3b2f : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
3b30 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3b32 : 48              >            pha         ;use stack to load status
3b33 : a980            >            lda #$80     ;precharge accu
3b35 : 28              >            plp
                        
3b36 : d12a                     cmp (ind1),y
                                tst_a $80,~fnz
3b38 : 08              >            php         ;save flags
3b39 : c980            >            cmp #$80     ;test result
                       >            trap_ne
3b3b : f003            >        beq skip2259
                       >        trap            ;failed not equal (non zero)
3b3d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b40 :                 >skip2259
                       >
3b40 : 68              >            pla         ;load status
3b41 : 48              >            pha
                       >            cmp_flag ~fnz
3b42 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3b44 : f003            >        beq skip2262
                       >        trap            ;failed not equal (non zero)
3b46 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b49 :                 >skip2262
                       >
3b49 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
3b4a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3b4c : 48              >            pha         ;use stack to load status
3b4d : a97f            >            lda #$7f     ;precharge accu
3b4f : 28              >            plp
                        
3b50 : d12a                     cmp (ind1),y
                                tst_a $7f,~fn
3b52 : 08              >            php         ;save flags
3b53 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
3b55 : f003            >        beq skip2267
                       >        trap            ;failed not equal (non zero)
3b57 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b5a :                 >skip2267
                       >
3b5a : 68              >            pla         ;load status
3b5b : 48              >            pha
                       >            cmp_flag ~fn
3b5c : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3b5e : f003            >        beq skip2270
                       >        trap            ;failed not equal (non zero)
3b60 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b63 :                 >skip2270
                       >
3b63 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
3b64 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3b66 : 48              >            pha         ;use stack to load status
3b67 : a97e            >            lda #$7e     ;precharge accu
3b69 : 28              >            plp
                        
3b6a : d12a                     cmp (ind1),y
                                tst_a $7e,~fzc
3b6c : 08              >            php         ;save flags
3b6d : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
3b6f : f003            >        beq skip2275
                       >        trap            ;failed not equal (non zero)
3b71 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b74 :                 >skip2275
                       >
3b74 : 68              >            pla         ;load status
3b75 : 48              >            pha
                       >            cmp_flag ~fzc
3b76 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3b78 : f003            >        beq skip2278
                       >        trap            ;failed not equal (non zero)
3b7a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b7d :                 >skip2278
                       >
3b7d : 28              >            plp         ;restore status
                        
                                next_test
3b7e : ad0002          >            lda test_case   ;previous test
3b81 : c91c            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3b83 : f003            >        beq skip2281
                       >        trap            ;failed not equal (non zero)
3b85 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b88 :                 >skip2281
                       >
001d =                 >test_num = test_num + 1
3b88 : a91d            >            lda #test_num   ;*** next tests' number
3b8a : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
3b8d : 8d04ef            sta $ef04
3b90 : 74657374696e67..  db "testing shifts - ASL LSR ROL ROR all addressing modes", 10, 0
3bc7 : 8d04ef            sta $ef04
3bca : 73686966747320..  db "shifts - accumulator", 10, 0
3be0 : a203                     ldx #3
3be2 :                  tasl
                                set_ax zp1,0
                       >            load_flag 0
3be2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3be4 : 48              >            pha         ;use stack to load status
3be5 : b519            >            lda zp1,x    ;precharge accu
3be7 : 28              >            plp
                        
3be8 : 0a                       asl a
                                tst_ax rASL,fASL,0
3be9 : 08              >            php         ;save flags
3bea : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
3bed : f003            >        beq skip2286
                       >        trap            ;failed not equal (non zero)
3bef : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3bf2 :                 >skip2286
                       >
3bf2 : 68              >            pla         ;load status
                       >            eor_flag 0
3bf3 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3bf5 : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne     ;
3bf8 : f003            >        beq skip2289
                       >        trap            ;failed not equal (non zero)
3bfa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3bfd :                 >skip2289
                       >
                        
3bfd : ca                       dex
3bfe : 10e2                     bpl tasl
3c00 : a203                     ldx #3
3c02 :                  tasl1
                                set_ax zp1,$ff
                       >            load_flag $ff
3c02 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3c04 : 48              >            pha         ;use stack to load status
3c05 : b519            >            lda zp1,x    ;precharge accu
3c07 : 28              >            plp
                        
3c08 : 0a                       asl a
                                tst_ax rASL,fASL,$ff-fnzc
3c09 : 08              >            php         ;save flags
3c0a : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
3c0d : f003            >        beq skip2294
                       >        trap            ;failed not equal (non zero)
3c0f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c12 :                 >skip2294
                       >
3c12 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3c13 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3c15 : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne     ;
3c18 : f003            >        beq skip2297
                       >        trap            ;failed not equal (non zero)
3c1a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c1d :                 >skip2297
                       >
                        
3c1d : ca                       dex
3c1e : 10e2                     bpl tasl1
                        
3c20 : a203                     ldx #3
3c22 :                  tlsr
                                set_ax zp1,0
                       >            load_flag 0
3c22 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3c24 : 48              >            pha         ;use stack to load status
3c25 : b519            >            lda zp1,x    ;precharge accu
3c27 : 28              >            plp
                        
3c28 : 4a                       lsr a
                                tst_ax rLSR,fLSR,0
3c29 : 08              >            php         ;save flags
3c2a : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
3c2d : f003            >        beq skip2302
                       >        trap            ;failed not equal (non zero)
3c2f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c32 :                 >skip2302
                       >
3c32 : 68              >            pla         ;load status
                       >            eor_flag 0
3c33 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3c35 : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne     ;
3c38 : f003            >        beq skip2305
                       >        trap            ;failed not equal (non zero)
3c3a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c3d :                 >skip2305
                       >
                        
3c3d : ca                       dex
3c3e : 10e2                     bpl tlsr
3c40 : a203                     ldx #3
3c42 :                  tlsr1
                                set_ax zp1,$ff
                       >            load_flag $ff
3c42 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3c44 : 48              >            pha         ;use stack to load status
3c45 : b519            >            lda zp1,x    ;precharge accu
3c47 : 28              >            plp
                        
3c48 : 4a                       lsr a
                                tst_ax rLSR,fLSR,$ff-fnzc
3c49 : 08              >            php         ;save flags
3c4a : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
3c4d : f003            >        beq skip2310
                       >        trap            ;failed not equal (non zero)
3c4f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c52 :                 >skip2310
                       >
3c52 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3c53 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3c55 : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne     ;
3c58 : f003            >        beq skip2313
                       >        trap            ;failed not equal (non zero)
3c5a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c5d :                 >skip2313
                       >
                        
3c5d : ca                       dex
3c5e : 10e2                     bpl tlsr1
                        
3c60 : a203                     ldx #3
3c62 :                  trol
                                set_ax zp1,0
                       >            load_flag 0
3c62 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3c64 : 48              >            pha         ;use stack to load status
3c65 : b519            >            lda zp1,x    ;precharge accu
3c67 : 28              >            plp
                        
3c68 : 2a                       rol a
                                tst_ax rROL,fROL,0
3c69 : 08              >            php         ;save flags
3c6a : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
3c6d : f003            >        beq skip2318
                       >        trap            ;failed not equal (non zero)
3c6f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c72 :                 >skip2318
                       >
3c72 : 68              >            pla         ;load status
                       >            eor_flag 0
3c73 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3c75 : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne     ;
3c78 : f003            >        beq skip2321
                       >        trap            ;failed not equal (non zero)
3c7a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c7d :                 >skip2321
                       >
                        
3c7d : ca                       dex
3c7e : 10e2                     bpl trol
3c80 : a203                     ldx #3
3c82 :                  trol1
                                set_ax zp1,$ff-fc
                       >            load_flag $ff-fc
3c82 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
3c84 : 48              >            pha         ;use stack to load status
3c85 : b519            >            lda zp1,x    ;precharge accu
3c87 : 28              >            plp
                        
3c88 : 2a                       rol a
                                tst_ax rROL,fROL,$ff-fnzc
3c89 : 08              >            php         ;save flags
3c8a : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
3c8d : f003            >        beq skip2326
                       >        trap            ;failed not equal (non zero)
3c8f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c92 :                 >skip2326
                       >
3c92 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3c93 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3c95 : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne     ;
3c98 : f003            >        beq skip2329
                       >        trap            ;failed not equal (non zero)
3c9a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c9d :                 >skip2329
                       >
                        
3c9d : ca                       dex
3c9e : 10e2                     bpl trol1
                        
3ca0 : a203                     ldx #3
3ca2 :                  trolc
                                set_ax zp1,fc
                       >            load_flag fc
3ca2 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
3ca4 : 48              >            pha         ;use stack to load status
3ca5 : b519            >            lda zp1,x    ;precharge accu
3ca7 : 28              >            plp
                        
3ca8 : 2a                       rol a
                                tst_ax rROLc,fROLc,0
3ca9 : 08              >            php         ;save flags
3caa : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
3cad : f003            >        beq skip2334
                       >        trap            ;failed not equal (non zero)
3caf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3cb2 :                 >skip2334
                       >
3cb2 : 68              >            pla         ;load status
                       >            eor_flag 0
3cb3 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3cb5 : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne     ;
3cb8 : f003            >        beq skip2337
                       >        trap            ;failed not equal (non zero)
3cba : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3cbd :                 >skip2337
                       >
                        
3cbd : ca                       dex
3cbe : 10e2                     bpl trolc
3cc0 : a203                     ldx #3
3cc2 :                  trolc1
                                set_ax zp1,$ff
                       >            load_flag $ff
3cc2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3cc4 : 48              >            pha         ;use stack to load status
3cc5 : b519            >            lda zp1,x    ;precharge accu
3cc7 : 28              >            plp
                        
3cc8 : 2a                       rol a
                                tst_ax rROLc,fROLc,$ff-fnzc
3cc9 : 08              >            php         ;save flags
3cca : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
3ccd : f003            >        beq skip2342
                       >        trap            ;failed not equal (non zero)
3ccf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3cd2 :                 >skip2342
                       >
3cd2 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3cd3 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3cd5 : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne     ;
3cd8 : f003            >        beq skip2345
                       >        trap            ;failed not equal (non zero)
3cda : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3cdd :                 >skip2345
                       >
                        
3cdd : ca                       dex
3cde : 10e2                     bpl trolc1
                        
3ce0 : a203                     ldx #3
3ce2 :                  tror
                                set_ax zp1,0
                       >            load_flag 0
3ce2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3ce4 : 48              >            pha         ;use stack to load status
3ce5 : b519            >            lda zp1,x    ;precharge accu
3ce7 : 28              >            plp
                        
3ce8 : 6a                       ror a
                                tst_ax rROR,fROR,0
3ce9 : 08              >            php         ;save flags
3cea : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
3ced : f003            >        beq skip2350
                       >        trap            ;failed not equal (non zero)
3cef : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3cf2 :                 >skip2350
                       >
3cf2 : 68              >            pla         ;load status
                       >            eor_flag 0
3cf3 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3cf5 : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne     ;
3cf8 : f003            >        beq skip2353
                       >        trap            ;failed not equal (non zero)
3cfa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3cfd :                 >skip2353
                       >
                        
3cfd : ca                       dex
3cfe : 10e2                     bpl tror
3d00 : a203                     ldx #3
3d02 :                  tror1
                                set_ax zp1,$ff-fc
                       >            load_flag $ff-fc
3d02 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
3d04 : 48              >            pha         ;use stack to load status
3d05 : b519            >            lda zp1,x    ;precharge accu
3d07 : 28              >            plp
                        
3d08 : 6a                       ror a
                                tst_ax rROR,fROR,$ff-fnzc
3d09 : 08              >            php         ;save flags
3d0a : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
3d0d : f003            >        beq skip2358
                       >        trap            ;failed not equal (non zero)
3d0f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d12 :                 >skip2358
                       >
3d12 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3d13 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3d15 : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne     ;
3d18 : f003            >        beq skip2361
                       >        trap            ;failed not equal (non zero)
3d1a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d1d :                 >skip2361
                       >
                        
3d1d : ca                       dex
3d1e : 10e2                     bpl tror1
                        
3d20 : a203                     ldx #3
3d22 :                  trorc
                                set_ax zp1,fc
                       >            load_flag fc
3d22 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
3d24 : 48              >            pha         ;use stack to load status
3d25 : b519            >            lda zp1,x    ;precharge accu
3d27 : 28              >            plp
                        
3d28 : 6a                       ror a
                                tst_ax rRORc,fRORc,0
3d29 : 08              >            php         ;save flags
3d2a : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
3d2d : f003            >        beq skip2366
                       >        trap            ;failed not equal (non zero)
3d2f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d32 :                 >skip2366
                       >
3d32 : 68              >            pla         ;load status
                       >            eor_flag 0
3d33 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3d35 : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne     ;
3d38 : f003            >        beq skip2369
                       >        trap            ;failed not equal (non zero)
3d3a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d3d :                 >skip2369
                       >
                        
3d3d : ca                       dex
3d3e : 10e2                     bpl trorc
3d40 : a203                     ldx #3
3d42 :                  trorc1
                                set_ax zp1,$ff
                       >            load_flag $ff
3d42 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3d44 : 48              >            pha         ;use stack to load status
3d45 : b519            >            lda zp1,x    ;precharge accu
3d47 : 28              >            plp
                        
3d48 : 6a                       ror a
                                tst_ax rRORc,fRORc,$ff-fnzc
3d49 : 08              >            php         ;save flags
3d4a : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
3d4d : f003            >        beq skip2374
                       >        trap            ;failed not equal (non zero)
3d4f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d52 :                 >skip2374
                       >
3d52 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3d53 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3d55 : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne     ;
3d58 : f003            >        beq skip2377
                       >        trap            ;failed not equal (non zero)
3d5a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d5d :                 >skip2377
                       >
                        
3d5d : ca                       dex
3d5e : 10e2                     bpl trorc1
                                next_test
3d60 : ad0002          >            lda test_case   ;previous test
3d63 : c91d            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3d65 : f003            >        beq skip2380
                       >        trap            ;failed not equal (non zero)
3d67 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d6a :                 >skip2380
                       >
001e =                 >test_num = test_num + 1
3d6a : a91e            >            lda #test_num   ;*** next tests' number
3d6c : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
3d6f : 8d04ef            sta $ef04
3d72 : 73686966747320..  db "shifts - zeropage", 10, 0
3d85 : a203                     ldx #3
3d87 :                  tasl2
                                set_z zp1,0
                       >            load_flag 0
3d87 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3d89 : 48              >            pha         ;use stack to load status
3d8a : b519            >            lda zp1,x    ;load to zeropage
3d8c : 8512            >            sta zpt
3d8e : 28              >            plp
                        
3d8f : 0612                     asl zpt
                                tst_z rASL,fASL,0
3d91 : 08              >            php         ;save flags
3d92 : a512            >            lda zpt
3d94 : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
3d97 : f003            >        beq skip2385
                       >        trap            ;failed not equal (non zero)
3d99 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d9c :                 >skip2385
                       >
3d9c : 68              >            pla         ;load status
                       >            eor_flag 0
3d9d : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3d9f : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
3da2 : f003            >        beq skip2388
                       >        trap            ;failed not equal (non zero)
3da4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3da7 :                 >skip2388
                       >
                        
3da7 : ca                       dex
3da8 : 10dd                     bpl tasl2
3daa : a203                     ldx #3
3dac :                  tasl3
                                set_z zp1,$ff
                       >            load_flag $ff
3dac : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3dae : 48              >            pha         ;use stack to load status
3daf : b519            >            lda zp1,x    ;load to zeropage
3db1 : 8512            >            sta zpt
3db3 : 28              >            plp
                        
3db4 : 0612                     asl zpt
                                tst_z rASL,fASL,$ff-fnzc
3db6 : 08              >            php         ;save flags
3db7 : a512            >            lda zpt
3db9 : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
3dbc : f003            >        beq skip2393
                       >        trap            ;failed not equal (non zero)
3dbe : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3dc1 :                 >skip2393
                       >
3dc1 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3dc2 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3dc4 : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
3dc7 : f003            >        beq skip2396
                       >        trap            ;failed not equal (non zero)
3dc9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3dcc :                 >skip2396
                       >
                        
3dcc : ca                       dex
3dcd : 10dd                     bpl tasl3
                        
3dcf : a203                     ldx #3
3dd1 :                  tlsr2
                                set_z zp1,0
                       >            load_flag 0
3dd1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3dd3 : 48              >            pha         ;use stack to load status
3dd4 : b519            >            lda zp1,x    ;load to zeropage
3dd6 : 8512            >            sta zpt
3dd8 : 28              >            plp
                        
3dd9 : 4612                     lsr zpt
                                tst_z rLSR,fLSR,0
3ddb : 08              >            php         ;save flags
3ddc : a512            >            lda zpt
3dde : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
3de1 : f003            >        beq skip2401
                       >        trap            ;failed not equal (non zero)
3de3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3de6 :                 >skip2401
                       >
3de6 : 68              >            pla         ;load status
                       >            eor_flag 0
3de7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3de9 : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
3dec : f003            >        beq skip2404
                       >        trap            ;failed not equal (non zero)
3dee : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3df1 :                 >skip2404
                       >
                        
3df1 : ca                       dex
3df2 : 10dd                     bpl tlsr2
3df4 : a203                     ldx #3
3df6 :                  tlsr3
                                set_z zp1,$ff
                       >            load_flag $ff
3df6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3df8 : 48              >            pha         ;use stack to load status
3df9 : b519            >            lda zp1,x    ;load to zeropage
3dfb : 8512            >            sta zpt
3dfd : 28              >            plp
                        
3dfe : 4612                     lsr zpt
                                tst_z rLSR,fLSR,$ff-fnzc
3e00 : 08              >            php         ;save flags
3e01 : a512            >            lda zpt
3e03 : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
3e06 : f003            >        beq skip2409
                       >        trap            ;failed not equal (non zero)
3e08 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e0b :                 >skip2409
                       >
3e0b : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3e0c : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3e0e : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
3e11 : f003            >        beq skip2412
                       >        trap            ;failed not equal (non zero)
3e13 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e16 :                 >skip2412
                       >
                        
3e16 : ca                       dex
3e17 : 10dd                     bpl tlsr3
                        
3e19 : a203                     ldx #3
3e1b :                  trol2
                                set_z zp1,0
                       >            load_flag 0
3e1b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3e1d : 48              >            pha         ;use stack to load status
3e1e : b519            >            lda zp1,x    ;load to zeropage
3e20 : 8512            >            sta zpt
3e22 : 28              >            plp
                        
3e23 : 2612                     rol zpt
                                tst_z rROL,fROL,0
3e25 : 08              >            php         ;save flags
3e26 : a512            >            lda zpt
3e28 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
3e2b : f003            >        beq skip2417
                       >        trap            ;failed not equal (non zero)
3e2d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e30 :                 >skip2417
                       >
3e30 : 68              >            pla         ;load status
                       >            eor_flag 0
3e31 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3e33 : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
3e36 : f003            >        beq skip2420
                       >        trap            ;failed not equal (non zero)
3e38 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e3b :                 >skip2420
                       >
                        
3e3b : ca                       dex
3e3c : 10dd                     bpl trol2
3e3e : a203                     ldx #3
3e40 :                  trol3
                                set_z zp1,$ff-fc
                       >            load_flag $ff-fc
3e40 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
3e42 : 48              >            pha         ;use stack to load status
3e43 : b519            >            lda zp1,x    ;load to zeropage
3e45 : 8512            >            sta zpt
3e47 : 28              >            plp
                        
3e48 : 2612                     rol zpt
                                tst_z rROL,fROL,$ff-fnzc
3e4a : 08              >            php         ;save flags
3e4b : a512            >            lda zpt
3e4d : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
3e50 : f003            >        beq skip2425
                       >        trap            ;failed not equal (non zero)
3e52 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e55 :                 >skip2425
                       >
3e55 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3e56 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3e58 : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
3e5b : f003            >        beq skip2428
                       >        trap            ;failed not equal (non zero)
3e5d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e60 :                 >skip2428
                       >
                        
3e60 : ca                       dex
3e61 : 10dd                     bpl trol3
                        
3e63 : a203                     ldx #3
3e65 :                  trolc2
                                set_z zp1,fc
                       >            load_flag fc
3e65 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
3e67 : 48              >            pha         ;use stack to load status
3e68 : b519            >            lda zp1,x    ;load to zeropage
3e6a : 8512            >            sta zpt
3e6c : 28              >            plp
                        
3e6d : 2612                     rol zpt
                                tst_z rROLc,fROLc,0
3e6f : 08              >            php         ;save flags
3e70 : a512            >            lda zpt
3e72 : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
3e75 : f003            >        beq skip2433
                       >        trap            ;failed not equal (non zero)
3e77 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e7a :                 >skip2433
                       >
3e7a : 68              >            pla         ;load status
                       >            eor_flag 0
3e7b : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3e7d : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
3e80 : f003            >        beq skip2436
                       >        trap            ;failed not equal (non zero)
3e82 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e85 :                 >skip2436
                       >
                        
3e85 : ca                       dex
3e86 : 10dd                     bpl trolc2
3e88 : a203                     ldx #3
3e8a :                  trolc3
                                set_z zp1,$ff
                       >            load_flag $ff
3e8a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3e8c : 48              >            pha         ;use stack to load status
3e8d : b519            >            lda zp1,x    ;load to zeropage
3e8f : 8512            >            sta zpt
3e91 : 28              >            plp
                        
3e92 : 2612                     rol zpt
                                tst_z rROLc,fROLc,$ff-fnzc
3e94 : 08              >            php         ;save flags
3e95 : a512            >            lda zpt
3e97 : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
3e9a : f003            >        beq skip2441
                       >        trap            ;failed not equal (non zero)
3e9c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e9f :                 >skip2441
                       >
3e9f : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3ea0 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3ea2 : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
3ea5 : f003            >        beq skip2444
                       >        trap            ;failed not equal (non zero)
3ea7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3eaa :                 >skip2444
                       >
                        
3eaa : ca                       dex
3eab : 10dd                     bpl trolc3
                        
3ead : a203                     ldx #3
3eaf :                  tror2
                                set_z zp1,0
                       >            load_flag 0
3eaf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3eb1 : 48              >            pha         ;use stack to load status
3eb2 : b519            >            lda zp1,x    ;load to zeropage
3eb4 : 8512            >            sta zpt
3eb6 : 28              >            plp
                        
3eb7 : 6612                     ror zpt
                                tst_z rROR,fROR,0
3eb9 : 08              >            php         ;save flags
3eba : a512            >            lda zpt
3ebc : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
3ebf : f003            >        beq skip2449
                       >        trap            ;failed not equal (non zero)
3ec1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ec4 :                 >skip2449
                       >
3ec4 : 68              >            pla         ;load status
                       >            eor_flag 0
3ec5 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3ec7 : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
3eca : f003            >        beq skip2452
                       >        trap            ;failed not equal (non zero)
3ecc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ecf :                 >skip2452
                       >
                        
3ecf : ca                       dex
3ed0 : 10dd                     bpl tror2
3ed2 : a203                     ldx #3
3ed4 :                  tror3
                                set_z zp1,$ff-fc
                       >            load_flag $ff-fc
3ed4 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
3ed6 : 48              >            pha         ;use stack to load status
3ed7 : b519            >            lda zp1,x    ;load to zeropage
3ed9 : 8512            >            sta zpt
3edb : 28              >            plp
                        
3edc : 6612                     ror zpt
                                tst_z rROR,fROR,$ff-fnzc
3ede : 08              >            php         ;save flags
3edf : a512            >            lda zpt
3ee1 : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
3ee4 : f003            >        beq skip2457
                       >        trap            ;failed not equal (non zero)
3ee6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ee9 :                 >skip2457
                       >
3ee9 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3eea : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3eec : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
3eef : f003            >        beq skip2460
                       >        trap            ;failed not equal (non zero)
3ef1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ef4 :                 >skip2460
                       >
                        
3ef4 : ca                       dex
3ef5 : 10dd                     bpl tror3
                        
3ef7 : a203                     ldx #3
3ef9 :                  trorc2
                                set_z zp1,fc
                       >            load_flag fc
3ef9 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
3efb : 48              >            pha         ;use stack to load status
3efc : b519            >            lda zp1,x    ;load to zeropage
3efe : 8512            >            sta zpt
3f00 : 28              >            plp
                        
3f01 : 6612                     ror zpt
                                tst_z rRORc,fRORc,0
3f03 : 08              >            php         ;save flags
3f04 : a512            >            lda zpt
3f06 : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
3f09 : f003            >        beq skip2465
                       >        trap            ;failed not equal (non zero)
3f0b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f0e :                 >skip2465
                       >
3f0e : 68              >            pla         ;load status
                       >            eor_flag 0
3f0f : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3f11 : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
3f14 : f003            >        beq skip2468
                       >        trap            ;failed not equal (non zero)
3f16 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f19 :                 >skip2468
                       >
                        
3f19 : ca                       dex
3f1a : 10dd                     bpl trorc2
3f1c : a203                     ldx #3
3f1e :                  trorc3
                                set_z zp1,$ff
                       >            load_flag $ff
3f1e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3f20 : 48              >            pha         ;use stack to load status
3f21 : b519            >            lda zp1,x    ;load to zeropage
3f23 : 8512            >            sta zpt
3f25 : 28              >            plp
                        
3f26 : 6612                     ror zpt
                                tst_z rRORc,fRORc,$ff-fnzc
3f28 : 08              >            php         ;save flags
3f29 : a512            >            lda zpt
3f2b : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
3f2e : f003            >        beq skip2473
                       >        trap            ;failed not equal (non zero)
3f30 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f33 :                 >skip2473
                       >
3f33 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3f34 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3f36 : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
3f39 : f003            >        beq skip2476
                       >        trap            ;failed not equal (non zero)
3f3b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f3e :                 >skip2476
                       >
                        
3f3e : ca                       dex
3f3f : 10dd                     bpl trorc3
                                next_test
3f41 : ad0002          >            lda test_case   ;previous test
3f44 : c91e            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3f46 : f003            >        beq skip2479
                       >        trap            ;failed not equal (non zero)
3f48 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f4b :                 >skip2479
                       >
001f =                 >test_num = test_num + 1
3f4b : a91f            >            lda #test_num   ;*** next tests' number
3f4d : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
3f50 : 8d04ef            sta $ef04
3f53 : 73686966747320..  db "shifts - absolute", 10, 0
3f66 : a203                     ldx #3
3f68 :                  tasl4
                                set_abs zp1,0
                       >            load_flag 0
3f68 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3f6a : 48              >            pha         ;use stack to load status
3f6b : b519            >            lda zp1,x    ;load to memory
3f6d : 8d0302          >            sta abst
3f70 : 28              >            plp
                        
3f71 : 0e0302                   asl abst
                                tst_abs rASL,fASL,0
3f74 : 08              >            php         ;save flags
3f75 : ad0302          >            lda abst
3f78 : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
3f7b : f003            >        beq skip2484
                       >        trap            ;failed not equal (non zero)
3f7d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f80 :                 >skip2484
                       >
3f80 : 68              >            pla         ;load status
                       >            eor_flag 0
3f81 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3f83 : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
3f86 : f003            >        beq skip2487
                       >        trap            ;failed not equal (non zero)
3f88 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f8b :                 >skip2487
                       >
                        
3f8b : ca                       dex
3f8c : 10da                     bpl tasl4
3f8e : a203                     ldx #3
3f90 :                  tasl5
                                set_abs zp1,$ff
                       >            load_flag $ff
3f90 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3f92 : 48              >            pha         ;use stack to load status
3f93 : b519            >            lda zp1,x    ;load to memory
3f95 : 8d0302          >            sta abst
3f98 : 28              >            plp
                        
3f99 : 0e0302                   asl abst
                                tst_abs rASL,fASL,$ff-fnzc
3f9c : 08              >            php         ;save flags
3f9d : ad0302          >            lda abst
3fa0 : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
3fa3 : f003            >        beq skip2492
                       >        trap            ;failed not equal (non zero)
3fa5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3fa8 :                 >skip2492
                       >
3fa8 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3fa9 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3fab : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
3fae : f003            >        beq skip2495
                       >        trap            ;failed not equal (non zero)
3fb0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3fb3 :                 >skip2495
                       >
                        
3fb3 : ca                       dex
3fb4 : 10da                     bpl tasl5
                        
3fb6 : a203                     ldx #3
3fb8 :                  tlsr4
                                set_abs zp1,0
                       >            load_flag 0
3fb8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3fba : 48              >            pha         ;use stack to load status
3fbb : b519            >            lda zp1,x    ;load to memory
3fbd : 8d0302          >            sta abst
3fc0 : 28              >            plp
                        
3fc1 : 4e0302                   lsr abst
                                tst_abs rLSR,fLSR,0
3fc4 : 08              >            php         ;save flags
3fc5 : ad0302          >            lda abst
3fc8 : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
3fcb : f003            >        beq skip2500
                       >        trap            ;failed not equal (non zero)
3fcd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3fd0 :                 >skip2500
                       >
3fd0 : 68              >            pla         ;load status
                       >            eor_flag 0
3fd1 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3fd3 : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
3fd6 : f003            >        beq skip2503
                       >        trap            ;failed not equal (non zero)
3fd8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3fdb :                 >skip2503
                       >
                        
3fdb : ca                       dex
3fdc : 10da                     bpl tlsr4
3fde : a203                     ldx #3
3fe0 :                  tlsr5
                                set_abs zp1,$ff
                       >            load_flag $ff
3fe0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3fe2 : 48              >            pha         ;use stack to load status
3fe3 : b519            >            lda zp1,x    ;load to memory
3fe5 : 8d0302          >            sta abst
3fe8 : 28              >            plp
                        
3fe9 : 4e0302                   lsr abst
                                tst_abs rLSR,fLSR,$ff-fnzc
3fec : 08              >            php         ;save flags
3fed : ad0302          >            lda abst
3ff0 : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
3ff3 : f003            >        beq skip2508
                       >        trap            ;failed not equal (non zero)
3ff5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ff8 :                 >skip2508
                       >
3ff8 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
3ff9 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
3ffb : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
3ffe : f003            >        beq skip2511
                       >        trap            ;failed not equal (non zero)
4000 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4003 :                 >skip2511
                       >
                        
4003 : ca                       dex
4004 : 10da                     bpl tlsr5
                        
4006 : a203                     ldx #3
4008 :                  trol4
                                set_abs zp1,0
                       >            load_flag 0
4008 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
400a : 48              >            pha         ;use stack to load status
400b : b519            >            lda zp1,x    ;load to memory
400d : 8d0302          >            sta abst
4010 : 28              >            plp
                        
4011 : 2e0302                   rol abst
                                tst_abs rROL,fROL,0
4014 : 08              >            php         ;save flags
4015 : ad0302          >            lda abst
4018 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
401b : f003            >        beq skip2516
                       >        trap            ;failed not equal (non zero)
401d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4020 :                 >skip2516
                       >
4020 : 68              >            pla         ;load status
                       >            eor_flag 0
4021 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4023 : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
4026 : f003            >        beq skip2519
                       >        trap            ;failed not equal (non zero)
4028 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
402b :                 >skip2519
                       >
                        
402b : ca                       dex
402c : 10da                     bpl trol4
402e : a203                     ldx #3
4030 :                  trol5
                                set_abs zp1,$ff-fc
                       >            load_flag $ff-fc
4030 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
4032 : 48              >            pha         ;use stack to load status
4033 : b519            >            lda zp1,x    ;load to memory
4035 : 8d0302          >            sta abst
4038 : 28              >            plp
                        
4039 : 2e0302                   rol abst
                                tst_abs rROL,fROL,$ff-fnzc
403c : 08              >            php         ;save flags
403d : ad0302          >            lda abst
4040 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
4043 : f003            >        beq skip2524
                       >        trap            ;failed not equal (non zero)
4045 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4048 :                 >skip2524
                       >
4048 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
4049 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
404b : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
404e : f003            >        beq skip2527
                       >        trap            ;failed not equal (non zero)
4050 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4053 :                 >skip2527
                       >
                        
4053 : ca                       dex
4054 : 10da                     bpl trol5
                        
4056 : a203                     ldx #3
4058 :                  trolc4
                                set_abs zp1,fc
                       >            load_flag fc
4058 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
405a : 48              >            pha         ;use stack to load status
405b : b519            >            lda zp1,x    ;load to memory
405d : 8d0302          >            sta abst
4060 : 28              >            plp
                        
4061 : 2e0302                   rol abst
                                tst_abs rROLc,fROLc,0
4064 : 08              >            php         ;save flags
4065 : ad0302          >            lda abst
4068 : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
406b : f003            >        beq skip2532
                       >        trap            ;failed not equal (non zero)
406d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4070 :                 >skip2532
                       >
4070 : 68              >            pla         ;load status
                       >            eor_flag 0
4071 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4073 : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
4076 : f003            >        beq skip2535
                       >        trap            ;failed not equal (non zero)
4078 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
407b :                 >skip2535
                       >
                        
407b : ca                       dex
407c : 10da                     bpl trolc4
407e : a203                     ldx #3
4080 :                  trolc5
                                set_abs zp1,$ff
                       >            load_flag $ff
4080 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4082 : 48              >            pha         ;use stack to load status
4083 : b519            >            lda zp1,x    ;load to memory
4085 : 8d0302          >            sta abst
4088 : 28              >            plp
                        
4089 : 2e0302                   rol abst
                                tst_abs rROLc,fROLc,$ff-fnzc
408c : 08              >            php         ;save flags
408d : ad0302          >            lda abst
4090 : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
4093 : f003            >        beq skip2540
                       >        trap            ;failed not equal (non zero)
4095 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4098 :                 >skip2540
                       >
4098 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
4099 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
409b : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
409e : f003            >        beq skip2543
                       >        trap            ;failed not equal (non zero)
40a0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
40a3 :                 >skip2543
                       >
                        
40a3 : ca                       dex
40a4 : 10da                     bpl trolc5
                        
40a6 : a203                     ldx #3
40a8 :                  tror4
                                set_abs zp1,0
                       >            load_flag 0
40a8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
40aa : 48              >            pha         ;use stack to load status
40ab : b519            >            lda zp1,x    ;load to memory
40ad : 8d0302          >            sta abst
40b0 : 28              >            plp
                        
40b1 : 6e0302                   ror abst
                                tst_abs rROR,fROR,0
40b4 : 08              >            php         ;save flags
40b5 : ad0302          >            lda abst
40b8 : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
40bb : f003            >        beq skip2548
                       >        trap            ;failed not equal (non zero)
40bd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
40c0 :                 >skip2548
                       >
40c0 : 68              >            pla         ;load status
                       >            eor_flag 0
40c1 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
40c3 : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
40c6 : f003            >        beq skip2551
                       >        trap            ;failed not equal (non zero)
40c8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
40cb :                 >skip2551
                       >
                        
40cb : ca                       dex
40cc : 10da                     bpl tror4
40ce : a203                     ldx #3
40d0 :                  tror5
                                set_abs zp1,$ff-fc
                       >            load_flag $ff-fc
40d0 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
40d2 : 48              >            pha         ;use stack to load status
40d3 : b519            >            lda zp1,x    ;load to memory
40d5 : 8d0302          >            sta abst
40d8 : 28              >            plp
                        
40d9 : 6e0302                   ror abst
                                tst_abs rROR,fROR,$ff-fnzc
40dc : 08              >            php         ;save flags
40dd : ad0302          >            lda abst
40e0 : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
40e3 : f003            >        beq skip2556
                       >        trap            ;failed not equal (non zero)
40e5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
40e8 :                 >skip2556
                       >
40e8 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
40e9 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
40eb : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
40ee : f003            >        beq skip2559
                       >        trap            ;failed not equal (non zero)
40f0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
40f3 :                 >skip2559
                       >
                        
40f3 : ca                       dex
40f4 : 10da                     bpl tror5
                        
40f6 : a203                     ldx #3
40f8 :                  trorc4
                                set_abs zp1,fc
                       >            load_flag fc
40f8 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
40fa : 48              >            pha         ;use stack to load status
40fb : b519            >            lda zp1,x    ;load to memory
40fd : 8d0302          >            sta abst
4100 : 28              >            plp
                        
4101 : 6e0302                   ror abst
                                tst_abs rRORc,fRORc,0
4104 : 08              >            php         ;save flags
4105 : ad0302          >            lda abst
4108 : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
410b : f003            >        beq skip2564
                       >        trap            ;failed not equal (non zero)
410d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4110 :                 >skip2564
                       >
4110 : 68              >            pla         ;load status
                       >            eor_flag 0
4111 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4113 : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
4116 : f003            >        beq skip2567
                       >        trap            ;failed not equal (non zero)
4118 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
411b :                 >skip2567
                       >
                        
411b : ca                       dex
411c : 10da                     bpl trorc4
411e : a203                     ldx #3
4120 :                  trorc5
                                set_abs zp1,$ff
                       >            load_flag $ff
4120 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4122 : 48              >            pha         ;use stack to load status
4123 : b519            >            lda zp1,x    ;load to memory
4125 : 8d0302          >            sta abst
4128 : 28              >            plp
                        
4129 : 6e0302                   ror abst
                                tst_abs rRORc,fRORc,$ff-fnzc
412c : 08              >            php         ;save flags
412d : ad0302          >            lda abst
4130 : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
4133 : f003            >        beq skip2572
                       >        trap            ;failed not equal (non zero)
4135 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4138 :                 >skip2572
                       >
4138 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
4139 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
413b : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
413e : f003            >        beq skip2575
                       >        trap            ;failed not equal (non zero)
4140 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4143 :                 >skip2575
                       >
                        
4143 : ca                       dex
4144 : 10da                     bpl trorc5
                                next_test
4146 : ad0002          >            lda test_case   ;previous test
4149 : c91f            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
414b : f003            >        beq skip2578
                       >        trap            ;failed not equal (non zero)
414d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4150 :                 >skip2578
                       >
0020 =                 >test_num = test_num + 1
4150 : a920            >            lda #test_num   ;*** next tests' number
4152 : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
4155 : 8d04ef            sta $ef04
4158 : 73686966747320..  db "shifts - zp indexed", 10, 0
416d : a203                     ldx #3
416f :                  tasl6
                                set_zx zp1,0
                       >            load_flag 0
416f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4171 : 48              >            pha         ;use stack to load status
4172 : b519            >            lda zp1,x    ;load to indexed zeropage
4174 : 9512            >            sta zpt,x
4176 : 28              >            plp
                        
4177 : 1612                     asl zpt,x
                                tst_zx rASL,fASL,0
4179 : 08              >            php         ;save flags
417a : b512            >            lda zpt,x
417c : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
417f : f003            >        beq skip2583
                       >        trap            ;failed not equal (non zero)
4181 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4184 :                 >skip2583
                       >
4184 : 68              >            pla         ;load status
                       >            eor_flag 0
4185 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4187 : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
418a : f003            >        beq skip2586
                       >        trap            ;failed not equal (non zero)
418c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
418f :                 >skip2586
                       >
                        
418f : ca                       dex
4190 : 10dd                     bpl tasl6
4192 : a203                     ldx #3
4194 :                  tasl7
                                set_zx zp1,$ff
                       >            load_flag $ff
4194 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4196 : 48              >            pha         ;use stack to load status
4197 : b519            >            lda zp1,x    ;load to indexed zeropage
4199 : 9512            >            sta zpt,x
419b : 28              >            plp
                        
419c : 1612                     asl zpt,x
                                tst_zx rASL,fASL,$ff-fnzc
419e : 08              >            php         ;save flags
419f : b512            >            lda zpt,x
41a1 : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
41a4 : f003            >        beq skip2591
                       >        trap            ;failed not equal (non zero)
41a6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
41a9 :                 >skip2591
                       >
41a9 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
41aa : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
41ac : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
41af : f003            >        beq skip2594
                       >        trap            ;failed not equal (non zero)
41b1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
41b4 :                 >skip2594
                       >
                        
41b4 : ca                       dex
41b5 : 10dd                     bpl tasl7
                        
41b7 : a203                     ldx #3
41b9 :                  tlsr6
                                set_zx zp1,0
                       >            load_flag 0
41b9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
41bb : 48              >            pha         ;use stack to load status
41bc : b519            >            lda zp1,x    ;load to indexed zeropage
41be : 9512            >            sta zpt,x
41c0 : 28              >            plp
                        
41c1 : 5612                     lsr zpt,x
                                tst_zx rLSR,fLSR,0
41c3 : 08              >            php         ;save flags
41c4 : b512            >            lda zpt,x
41c6 : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
41c9 : f003            >        beq skip2599
                       >        trap            ;failed not equal (non zero)
41cb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
41ce :                 >skip2599
                       >
41ce : 68              >            pla         ;load status
                       >            eor_flag 0
41cf : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
41d1 : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
41d4 : f003            >        beq skip2602
                       >        trap            ;failed not equal (non zero)
41d6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
41d9 :                 >skip2602
                       >
                        
41d9 : ca                       dex
41da : 10dd                     bpl tlsr6
41dc : a203                     ldx #3
41de :                  tlsr7
                                set_zx zp1,$ff
                       >            load_flag $ff
41de : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
41e0 : 48              >            pha         ;use stack to load status
41e1 : b519            >            lda zp1,x    ;load to indexed zeropage
41e3 : 9512            >            sta zpt,x
41e5 : 28              >            plp
                        
41e6 : 5612                     lsr zpt,x
                                tst_zx rLSR,fLSR,$ff-fnzc
41e8 : 08              >            php         ;save flags
41e9 : b512            >            lda zpt,x
41eb : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
41ee : f003            >        beq skip2607
                       >        trap            ;failed not equal (non zero)
41f0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
41f3 :                 >skip2607
                       >
41f3 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
41f4 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
41f6 : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
41f9 : f003            >        beq skip2610
                       >        trap            ;failed not equal (non zero)
41fb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
41fe :                 >skip2610
                       >
                        
41fe : ca                       dex
41ff : 10dd                     bpl tlsr7
                        
4201 : a203                     ldx #3
4203 :                  trol6
                                set_zx zp1,0
                       >            load_flag 0
4203 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4205 : 48              >            pha         ;use stack to load status
4206 : b519            >            lda zp1,x    ;load to indexed zeropage
4208 : 9512            >            sta zpt,x
420a : 28              >            plp
                        
420b : 3612                     rol zpt,x
                                tst_zx rROL,fROL,0
420d : 08              >            php         ;save flags
420e : b512            >            lda zpt,x
4210 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
4213 : f003            >        beq skip2615
                       >        trap            ;failed not equal (non zero)
4215 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4218 :                 >skip2615
                       >
4218 : 68              >            pla         ;load status
                       >            eor_flag 0
4219 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
421b : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
421e : f003            >        beq skip2618
                       >        trap            ;failed not equal (non zero)
4220 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4223 :                 >skip2618
                       >
                        
4223 : ca                       dex
4224 : 10dd                     bpl trol6
4226 : a203                     ldx #3
4228 :                  trol7
                                set_zx zp1,$ff-fc
                       >            load_flag $ff-fc
4228 : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
422a : 48              >            pha         ;use stack to load status
422b : b519            >            lda zp1,x    ;load to indexed zeropage
422d : 9512            >            sta zpt,x
422f : 28              >            plp
                        
4230 : 3612                     rol zpt,x
                                tst_zx rROL,fROL,$ff-fnzc
4232 : 08              >            php         ;save flags
4233 : b512            >            lda zpt,x
4235 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
4238 : f003            >        beq skip2623
                       >        trap            ;failed not equal (non zero)
423a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
423d :                 >skip2623
                       >
423d : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
423e : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
4240 : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
4243 : f003            >        beq skip2626
                       >        trap            ;failed not equal (non zero)
4245 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4248 :                 >skip2626
                       >
                        
4248 : ca                       dex
4249 : 10dd                     bpl trol7
                        
424b : a203                     ldx #3
424d :                  trolc6
                                set_zx zp1,fc
                       >            load_flag fc
424d : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
424f : 48              >            pha         ;use stack to load status
4250 : b519            >            lda zp1,x    ;load to indexed zeropage
4252 : 9512            >            sta zpt,x
4254 : 28              >            plp
                        
4255 : 3612                     rol zpt,x
                                tst_zx rROLc,fROLc,0
4257 : 08              >            php         ;save flags
4258 : b512            >            lda zpt,x
425a : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
425d : f003            >        beq skip2631
                       >        trap            ;failed not equal (non zero)
425f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4262 :                 >skip2631
                       >
4262 : 68              >            pla         ;load status
                       >            eor_flag 0
4263 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4265 : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
4268 : f003            >        beq skip2634
                       >        trap            ;failed not equal (non zero)
426a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
426d :                 >skip2634
                       >
                        
426d : ca                       dex
426e : 10dd                     bpl trolc6
4270 : a203                     ldx #3
4272 :                  trolc7
                                set_zx zp1,$ff
                       >            load_flag $ff
4272 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4274 : 48              >            pha         ;use stack to load status
4275 : b519            >            lda zp1,x    ;load to indexed zeropage
4277 : 9512            >            sta zpt,x
4279 : 28              >            plp
                        
427a : 3612                     rol zpt,x
                                tst_zx rROLc,fROLc,$ff-fnzc
427c : 08              >            php         ;save flags
427d : b512            >            lda zpt,x
427f : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
4282 : f003            >        beq skip2639
                       >        trap            ;failed not equal (non zero)
4284 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4287 :                 >skip2639
                       >
4287 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
4288 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
428a : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
428d : f003            >        beq skip2642
                       >        trap            ;failed not equal (non zero)
428f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4292 :                 >skip2642
                       >
                        
4292 : ca                       dex
4293 : 10dd                     bpl trolc7
                        
4295 : a203                     ldx #3
4297 :                  tror6
                                set_zx zp1,0
                       >            load_flag 0
4297 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4299 : 48              >            pha         ;use stack to load status
429a : b519            >            lda zp1,x    ;load to indexed zeropage
429c : 9512            >            sta zpt,x
429e : 28              >            plp
                        
429f : 7612                     ror zpt,x
                                tst_zx rROR,fROR,0
42a1 : 08              >            php         ;save flags
42a2 : b512            >            lda zpt,x
42a4 : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
42a7 : f003            >        beq skip2647
                       >        trap            ;failed not equal (non zero)
42a9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
42ac :                 >skip2647
                       >
42ac : 68              >            pla         ;load status
                       >            eor_flag 0
42ad : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
42af : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
42b2 : f003            >        beq skip2650
                       >        trap            ;failed not equal (non zero)
42b4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
42b7 :                 >skip2650
                       >
                        
42b7 : ca                       dex
42b8 : 10dd                     bpl tror6
42ba : a203                     ldx #3
42bc :                  tror7
                                set_zx zp1,$ff-fc
                       >            load_flag $ff-fc
42bc : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
42be : 48              >            pha         ;use stack to load status
42bf : b519            >            lda zp1,x    ;load to indexed zeropage
42c1 : 9512            >            sta zpt,x
42c3 : 28              >            plp
                        
42c4 : 7612                     ror zpt,x
                                tst_zx rROR,fROR,$ff-fnzc
42c6 : 08              >            php         ;save flags
42c7 : b512            >            lda zpt,x
42c9 : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
42cc : f003            >        beq skip2655
                       >        trap            ;failed not equal (non zero)
42ce : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
42d1 :                 >skip2655
                       >
42d1 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
42d2 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
42d4 : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
42d7 : f003            >        beq skip2658
                       >        trap            ;failed not equal (non zero)
42d9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
42dc :                 >skip2658
                       >
                        
42dc : ca                       dex
42dd : 10dd                     bpl tror7
                        
42df : a203                     ldx #3
42e1 :                  trorc6
                                set_zx zp1,fc
                       >            load_flag fc
42e1 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
42e3 : 48              >            pha         ;use stack to load status
42e4 : b519            >            lda zp1,x    ;load to indexed zeropage
42e6 : 9512            >            sta zpt,x
42e8 : 28              >            plp
                        
42e9 : 7612                     ror zpt,x
                                tst_zx rRORc,fRORc,0
42eb : 08              >            php         ;save flags
42ec : b512            >            lda zpt,x
42ee : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
42f1 : f003            >        beq skip2663
                       >        trap            ;failed not equal (non zero)
42f3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
42f6 :                 >skip2663
                       >
42f6 : 68              >            pla         ;load status
                       >            eor_flag 0
42f7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
42f9 : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
42fc : f003            >        beq skip2666
                       >        trap            ;failed not equal (non zero)
42fe : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4301 :                 >skip2666
                       >
                        
4301 : ca                       dex
4302 : 10dd                     bpl trorc6
4304 : a203                     ldx #3
4306 :                  trorc7
                                set_zx zp1,$ff
                       >            load_flag $ff
4306 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4308 : 48              >            pha         ;use stack to load status
4309 : b519            >            lda zp1,x    ;load to indexed zeropage
430b : 9512            >            sta zpt,x
430d : 28              >            plp
                        
430e : 7612                     ror zpt,x
                                tst_zx rRORc,fRORc,$ff-fnzc
4310 : 08              >            php         ;save flags
4311 : b512            >            lda zpt,x
4313 : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
4316 : f003            >        beq skip2671
                       >        trap            ;failed not equal (non zero)
4318 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
431b :                 >skip2671
                       >
431b : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
431c : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
431e : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
4321 : f003            >        beq skip2674
                       >        trap            ;failed not equal (non zero)
4323 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4326 :                 >skip2674
                       >
                        
4326 : ca                       dex
4327 : 10dd                     bpl trorc7
                                next_test
4329 : ad0002          >            lda test_case   ;previous test
432c : c920            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
432e : f003            >        beq skip2677
                       >        trap            ;failed not equal (non zero)
4330 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4333 :                 >skip2677
                       >
0021 =                 >test_num = test_num + 1
4333 : a921            >            lda #test_num   ;*** next tests' number
4335 : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
4338 : 8d04ef            sta $ef04
433b : 73686966747320..  db "shifts - abs indexed", 10, 0
4351 : a203                     ldx #3
4353 :                  tasl8
                                set_absx zp1,0
                       >            load_flag 0
4353 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4355 : 48              >            pha         ;use stack to load status
4356 : b519            >            lda zp1,x    ;load to indexed memory
4358 : 9d0302          >            sta abst,x
435b : 28              >            plp
                        
435c : 1e0302                   asl abst,x
                                tst_absx rASL,fASL,0
435f : 08              >            php         ;save flags
4360 : bd0302          >            lda abst,x
4363 : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
4366 : f003            >        beq skip2682
                       >        trap            ;failed not equal (non zero)
4368 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
436b :                 >skip2682
                       >
436b : 68              >            pla         ;load status
                       >            eor_flag 0
436c : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
436e : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
4371 : f003            >        beq skip2685
                       >        trap            ;failed not equal (non zero)
4373 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4376 :                 >skip2685
                       >
                        
4376 : ca                       dex
4377 : 10da                     bpl tasl8
4379 : a203                     ldx #3
437b :                  tasl9
                                set_absx zp1,$ff
                       >            load_flag $ff
437b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
437d : 48              >            pha         ;use stack to load status
437e : b519            >            lda zp1,x    ;load to indexed memory
4380 : 9d0302          >            sta abst,x
4383 : 28              >            plp
                        
4384 : 1e0302                   asl abst,x
                                tst_absx rASL,fASL,$ff-fnzc
4387 : 08              >            php         ;save flags
4388 : bd0302          >            lda abst,x
438b : dd1102          >            cmp rASL,x    ;test result
                       >            trap_ne
438e : f003            >        beq skip2690
                       >        trap            ;failed not equal (non zero)
4390 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4393 :                 >skip2690
                       >
4393 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
4394 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
4396 : dd2102          >            cmp fASL,x    ;test flags
                       >            trap_ne
4399 : f003            >        beq skip2693
                       >        trap            ;failed not equal (non zero)
439b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
439e :                 >skip2693
                       >
                        
439e : ca                       dex
439f : 10da                     bpl tasl9
                        
43a1 : a203                     ldx #3
43a3 :                  tlsr8
                                set_absx zp1,0
                       >            load_flag 0
43a3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
43a5 : 48              >            pha         ;use stack to load status
43a6 : b519            >            lda zp1,x    ;load to indexed memory
43a8 : 9d0302          >            sta abst,x
43ab : 28              >            plp
                        
43ac : 5e0302                   lsr abst,x
                                tst_absx rLSR,fLSR,0
43af : 08              >            php         ;save flags
43b0 : bd0302          >            lda abst,x
43b3 : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
43b6 : f003            >        beq skip2698
                       >        trap            ;failed not equal (non zero)
43b8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
43bb :                 >skip2698
                       >
43bb : 68              >            pla         ;load status
                       >            eor_flag 0
43bc : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
43be : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
43c1 : f003            >        beq skip2701
                       >        trap            ;failed not equal (non zero)
43c3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
43c6 :                 >skip2701
                       >
                        
43c6 : ca                       dex
43c7 : 10da                     bpl tlsr8
43c9 : a203                     ldx #3
43cb :                  tlsr9
                                set_absx zp1,$ff
                       >            load_flag $ff
43cb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
43cd : 48              >            pha         ;use stack to load status
43ce : b519            >            lda zp1,x    ;load to indexed memory
43d0 : 9d0302          >            sta abst,x
43d3 : 28              >            plp
                        
43d4 : 5e0302                   lsr abst,x
                                tst_absx rLSR,fLSR,$ff-fnzc
43d7 : 08              >            php         ;save flags
43d8 : bd0302          >            lda abst,x
43db : dd1902          >            cmp rLSR,x    ;test result
                       >            trap_ne
43de : f003            >        beq skip2706
                       >        trap            ;failed not equal (non zero)
43e0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
43e3 :                 >skip2706
                       >
43e3 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
43e4 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
43e6 : dd2902          >            cmp fLSR,x    ;test flags
                       >            trap_ne
43e9 : f003            >        beq skip2709
                       >        trap            ;failed not equal (non zero)
43eb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
43ee :                 >skip2709
                       >
                        
43ee : ca                       dex
43ef : 10da                     bpl tlsr9
                        
43f1 : a203                     ldx #3
43f3 :                  trol8
                                set_absx zp1,0
                       >            load_flag 0
43f3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
43f5 : 48              >            pha         ;use stack to load status
43f6 : b519            >            lda zp1,x    ;load to indexed memory
43f8 : 9d0302          >            sta abst,x
43fb : 28              >            plp
                        
43fc : 3e0302                   rol abst,x
                                tst_absx rROL,fROL,0
43ff : 08              >            php         ;save flags
4400 : bd0302          >            lda abst,x
4403 : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
4406 : f003            >        beq skip2714
                       >        trap            ;failed not equal (non zero)
4408 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
440b :                 >skip2714
                       >
440b : 68              >            pla         ;load status
                       >            eor_flag 0
440c : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
440e : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
4411 : f003            >        beq skip2717
                       >        trap            ;failed not equal (non zero)
4413 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4416 :                 >skip2717
                       >
                        
4416 : ca                       dex
4417 : 10da                     bpl trol8
4419 : a203                     ldx #3
441b :                  trol9
                                set_absx zp1,$ff-fc
                       >            load_flag $ff-fc
441b : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
441d : 48              >            pha         ;use stack to load status
441e : b519            >            lda zp1,x    ;load to indexed memory
4420 : 9d0302          >            sta abst,x
4423 : 28              >            plp
                        
4424 : 3e0302                   rol abst,x
                                tst_absx rROL,fROL,$ff-fnzc
4427 : 08              >            php         ;save flags
4428 : bd0302          >            lda abst,x
442b : dd1102          >            cmp rROL,x    ;test result
                       >            trap_ne
442e : f003            >        beq skip2722
                       >        trap            ;failed not equal (non zero)
4430 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4433 :                 >skip2722
                       >
4433 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
4434 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
4436 : dd2102          >            cmp fROL,x    ;test flags
                       >            trap_ne
4439 : f003            >        beq skip2725
                       >        trap            ;failed not equal (non zero)
443b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
443e :                 >skip2725
                       >
                        
443e : ca                       dex
443f : 10da                     bpl trol9
                        
4441 : a203                     ldx #3
4443 :                  trolc8
                                set_absx zp1,fc
                       >            load_flag fc
4443 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
4445 : 48              >            pha         ;use stack to load status
4446 : b519            >            lda zp1,x    ;load to indexed memory
4448 : 9d0302          >            sta abst,x
444b : 28              >            plp
                        
444c : 3e0302                   rol abst,x
                                tst_absx rROLc,fROLc,0
444f : 08              >            php         ;save flags
4450 : bd0302          >            lda abst,x
4453 : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
4456 : f003            >        beq skip2730
                       >        trap            ;failed not equal (non zero)
4458 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
445b :                 >skip2730
                       >
445b : 68              >            pla         ;load status
                       >            eor_flag 0
445c : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
445e : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
4461 : f003            >        beq skip2733
                       >        trap            ;failed not equal (non zero)
4463 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4466 :                 >skip2733
                       >
                        
4466 : ca                       dex
4467 : 10da                     bpl trolc8
4469 : a203                     ldx #3
446b :                  trolc9
                                set_absx zp1,$ff
                       >            load_flag $ff
446b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
446d : 48              >            pha         ;use stack to load status
446e : b519            >            lda zp1,x    ;load to indexed memory
4470 : 9d0302          >            sta abst,x
4473 : 28              >            plp
                        
4474 : 3e0302                   rol abst,x
                                tst_absx rROLc,fROLc,$ff-fnzc
4477 : 08              >            php         ;save flags
4478 : bd0302          >            lda abst,x
447b : dd1502          >            cmp rROLc,x    ;test result
                       >            trap_ne
447e : f003            >        beq skip2738
                       >        trap            ;failed not equal (non zero)
4480 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4483 :                 >skip2738
                       >
4483 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
4484 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
4486 : dd2502          >            cmp fROLc,x    ;test flags
                       >            trap_ne
4489 : f003            >        beq skip2741
                       >        trap            ;failed not equal (non zero)
448b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
448e :                 >skip2741
                       >
                        
448e : ca                       dex
448f : 10da                     bpl trolc9
                        
4491 : a203                     ldx #3
4493 :                  tror8
                                set_absx zp1,0
                       >            load_flag 0
4493 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4495 : 48              >            pha         ;use stack to load status
4496 : b519            >            lda zp1,x    ;load to indexed memory
4498 : 9d0302          >            sta abst,x
449b : 28              >            plp
                        
449c : 7e0302                   ror abst,x
                                tst_absx rROR,fROR,0
449f : 08              >            php         ;save flags
44a0 : bd0302          >            lda abst,x
44a3 : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
44a6 : f003            >        beq skip2746
                       >        trap            ;failed not equal (non zero)
44a8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
44ab :                 >skip2746
                       >
44ab : 68              >            pla         ;load status
                       >            eor_flag 0
44ac : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
44ae : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
44b1 : f003            >        beq skip2749
                       >        trap            ;failed not equal (non zero)
44b3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
44b6 :                 >skip2749
                       >
                        
44b6 : ca                       dex
44b7 : 10da                     bpl tror8
44b9 : a203                     ldx #3
44bb :                  tror9
                                set_absx zp1,$ff-fc
                       >            load_flag $ff-fc
44bb : a9fe            >            lda #$ff-fc             ;allow test to change I-flag (no mask)
                       >
44bd : 48              >            pha         ;use stack to load status
44be : b519            >            lda zp1,x    ;load to indexed memory
44c0 : 9d0302          >            sta abst,x
44c3 : 28              >            plp
                        
44c4 : 7e0302                   ror abst,x
                                tst_absx rROR,fROR,$ff-fnzc
44c7 : 08              >            php         ;save flags
44c8 : bd0302          >            lda abst,x
44cb : dd1902          >            cmp rROR,x    ;test result
                       >            trap_ne
44ce : f003            >        beq skip2754
                       >        trap            ;failed not equal (non zero)
44d0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
44d3 :                 >skip2754
                       >
44d3 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
44d4 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
44d6 : dd2902          >            cmp fROR,x    ;test flags
                       >            trap_ne
44d9 : f003            >        beq skip2757
                       >        trap            ;failed not equal (non zero)
44db : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
44de :                 >skip2757
                       >
                        
44de : ca                       dex
44df : 10da                     bpl tror9
                        
44e1 : a203                     ldx #3
44e3 :                  trorc8
                                set_absx zp1,fc
                       >            load_flag fc
44e3 : a901            >            lda #fc             ;allow test to change I-flag (no mask)
                       >
44e5 : 48              >            pha         ;use stack to load status
44e6 : b519            >            lda zp1,x    ;load to indexed memory
44e8 : 9d0302          >            sta abst,x
44eb : 28              >            plp
                        
44ec : 7e0302                   ror abst,x
                                tst_absx rRORc,fRORc,0
44ef : 08              >            php         ;save flags
44f0 : bd0302          >            lda abst,x
44f3 : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
44f6 : f003            >        beq skip2762
                       >        trap            ;failed not equal (non zero)
44f8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
44fb :                 >skip2762
                       >
44fb : 68              >            pla         ;load status
                       >            eor_flag 0
44fc : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
44fe : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
4501 : f003            >        beq skip2765
                       >        trap            ;failed not equal (non zero)
4503 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4506 :                 >skip2765
                       >
                        
4506 : ca                       dex
4507 : 10da                     bpl trorc8
4509 : a203                     ldx #3
450b :                  trorc9
                                set_absx zp1,$ff
                       >            load_flag $ff
450b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
450d : 48              >            pha         ;use stack to load status
450e : b519            >            lda zp1,x    ;load to indexed memory
4510 : 9d0302          >            sta abst,x
4513 : 28              >            plp
                        
4514 : 7e0302                   ror abst,x
                                tst_absx rRORc,fRORc,$ff-fnzc
4517 : 08              >            php         ;save flags
4518 : bd0302          >            lda abst,x
451b : dd1d02          >            cmp rRORc,x    ;test result
                       >            trap_ne
451e : f003            >        beq skip2770
                       >        trap            ;failed not equal (non zero)
4520 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4523 :                 >skip2770
                       >
4523 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnzc
4524 : 497c            >            eor #$ff-fnzc|fao         ;invert expected flags + always on bits
                       >
4526 : dd2d02          >            cmp fRORc,x    ;test flags
                       >            trap_ne
4529 : f003            >        beq skip2773
                       >        trap            ;failed not equal (non zero)
452b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
452e :                 >skip2773
                       >
                        
452e : ca                       dex
452f : 10da                     bpl trorc9
                                next_test
4531 : ad0002          >            lda test_case   ;previous test
4534 : c921            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4536 : f003            >        beq skip2776
                       >        trap            ;failed not equal (non zero)
4538 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
453b :                 >skip2776
                       >
0022 =                 >test_num = test_num + 1
453b : a922            >            lda #test_num   ;*** next tests' number
453d : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
4540 : 8d04ef            sta $ef04
4543 : 74657374696e67..  db "testing memory increment/decrement - INC DEC all addressing modes", 10, 0
4586 : 8d04ef            sta $ef04
4589 : 7a65726f706167..  db "zeropage", 10, 0
4593 : a200                     ldx #0
4595 : a97e                     lda #$7e
4597 : 8512                     sta zpt
4599 :                  tinc    
                                set_stat 0
                       >            load_flag 0
4599 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
459b : 48              >            pha         ;use stack to load status
459c : 28              >            plp
                        
459d : e612                     inc zpt
                                tst_z rINC,fINC,0
459f : 08              >            php         ;save flags
45a0 : a512            >            lda zpt
45a2 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
45a5 : f003            >        beq skip2781
                       >        trap            ;failed not equal (non zero)
45a7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
45aa :                 >skip2781
                       >
45aa : 68              >            pla         ;load status
                       >            eor_flag 0
45ab : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
45ad : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
45b0 : f003            >        beq skip2784
                       >        trap            ;failed not equal (non zero)
45b2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
45b5 :                 >skip2784
                       >
                        
45b5 : e8                       inx
45b6 : e002                     cpx #2
45b8 : d004                     bne tinc1
45ba : a9fe                     lda #$fe
45bc : 8512                     sta zpt
45be : e005             tinc1   cpx #5
45c0 : d0d7                     bne tinc
45c2 : ca                       dex
45c3 : e612                     inc zpt
45c5 :                  tdec    
                                set_stat 0
                       >            load_flag 0
45c5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
45c7 : 48              >            pha         ;use stack to load status
45c8 : 28              >            plp
                        
45c9 : c612                     dec zpt
                                tst_z rINC,fINC,0
45cb : 08              >            php         ;save flags
45cc : a512            >            lda zpt
45ce : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
45d1 : f003            >        beq skip2789
                       >        trap            ;failed not equal (non zero)
45d3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
45d6 :                 >skip2789
                       >
45d6 : 68              >            pla         ;load status
                       >            eor_flag 0
45d7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
45d9 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
45dc : f003            >        beq skip2792
                       >        trap            ;failed not equal (non zero)
45de : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
45e1 :                 >skip2792
                       >
                        
45e1 : ca                       dex
45e2 : 300a                     bmi tdec1
45e4 : e001                     cpx #1
45e6 : d0dd                     bne tdec
45e8 : a981                     lda #$81
45ea : 8512                     sta zpt
45ec : d0d7                     bne tdec
45ee :                  tdec1
45ee : a200                     ldx #0
45f0 : a97e                     lda #$7e
45f2 : 8512                     sta zpt
45f4 :                  tinc10    
                                set_stat $ff
                       >            load_flag $ff
45f4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
45f6 : 48              >            pha         ;use stack to load status
45f7 : 28              >            plp
                        
45f8 : e612                     inc zpt
                                tst_z rINC,fINC,$ff-fnz
45fa : 08              >            php         ;save flags
45fb : a512            >            lda zpt
45fd : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
4600 : f003            >        beq skip2797
                       >        trap            ;failed not equal (non zero)
4602 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4605 :                 >skip2797
                       >
4605 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4606 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4608 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
460b : f003            >        beq skip2800
                       >        trap            ;failed not equal (non zero)
460d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4610 :                 >skip2800
                       >
                        
4610 : e8                       inx
4611 : e002                     cpx #2
4613 : d004                     bne tinc11
4615 : a9fe                     lda #$fe
4617 : 8512                     sta zpt
4619 : e005             tinc11  cpx #5
461b : d0d7                     bne tinc10
461d : ca                       dex
461e : e612                     inc zpt
4620 :                  tdec10    
                                set_stat $ff
                       >            load_flag $ff
4620 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4622 : 48              >            pha         ;use stack to load status
4623 : 28              >            plp
                        
4624 : c612                     dec zpt
                                tst_z rINC,fINC,$ff-fnz
4626 : 08              >            php         ;save flags
4627 : a512            >            lda zpt
4629 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
462c : f003            >        beq skip2805
                       >        trap            ;failed not equal (non zero)
462e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4631 :                 >skip2805
                       >
4631 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4632 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4634 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
4637 : f003            >        beq skip2808
                       >        trap            ;failed not equal (non zero)
4639 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
463c :                 >skip2808
                       >
                        
463c : ca                       dex
463d : 300a                     bmi tdec11
463f : e001                     cpx #1
4641 : d0dd                     bne tdec10
4643 : a981                     lda #$81
4645 : 8512                     sta zpt
4647 : d0d7                     bne tdec10
4649 :                  tdec11
                                next_test
4649 : ad0002          >            lda test_case   ;previous test
464c : c922            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
464e : f003            >        beq skip2811
                       >        trap            ;failed not equal (non zero)
4650 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4653 :                 >skip2811
                       >
0023 =                 >test_num = test_num + 1
4653 : a923            >            lda #test_num   ;*** next tests' number
4655 : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
4658 : 8d04ef            sta $ef04
465b : 6162736f6c7574..  db "absolute memory", 10, 0
466c : a200                     ldx #0
466e : a97e                     lda #$7e
4670 : 8d0302                   sta abst
4673 :                  tinc2    
                                set_stat 0
                       >            load_flag 0
4673 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4675 : 48              >            pha         ;use stack to load status
4676 : 28              >            plp
                        
4677 : ee0302                   inc abst
                                tst_abs rINC,fINC,0
467a : 08              >            php         ;save flags
467b : ad0302          >            lda abst
467e : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
4681 : f003            >        beq skip2816
                       >        trap            ;failed not equal (non zero)
4683 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4686 :                 >skip2816
                       >
4686 : 68              >            pla         ;load status
                       >            eor_flag 0
4687 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4689 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
468c : f003            >        beq skip2819
                       >        trap            ;failed not equal (non zero)
468e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4691 :                 >skip2819
                       >
                        
4691 : e8                       inx
4692 : e002                     cpx #2
4694 : d005                     bne tinc3
4696 : a9fe                     lda #$fe
4698 : 8d0302                   sta abst
469b : e005             tinc3   cpx #5
469d : d0d4                     bne tinc2
469f : ca                       dex
46a0 : ee0302                   inc abst
46a3 :                  tdec2    
                                set_stat 0
                       >            load_flag 0
46a3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
46a5 : 48              >            pha         ;use stack to load status
46a6 : 28              >            plp
                        
46a7 : ce0302                   dec abst
                                tst_abs rINC,fINC,0
46aa : 08              >            php         ;save flags
46ab : ad0302          >            lda abst
46ae : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
46b1 : f003            >        beq skip2824
                       >        trap            ;failed not equal (non zero)
46b3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
46b6 :                 >skip2824
                       >
46b6 : 68              >            pla         ;load status
                       >            eor_flag 0
46b7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
46b9 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
46bc : f003            >        beq skip2827
                       >        trap            ;failed not equal (non zero)
46be : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
46c1 :                 >skip2827
                       >
                        
46c1 : ca                       dex
46c2 : 300b                     bmi tdec3
46c4 : e001                     cpx #1
46c6 : d0db                     bne tdec2
46c8 : a981                     lda #$81
46ca : 8d0302                   sta abst
46cd : d0d4                     bne tdec2
46cf :                  tdec3
46cf : a200                     ldx #0
46d1 : a97e                     lda #$7e
46d3 : 8d0302                   sta abst
46d6 :                  tinc12    
                                set_stat $ff
                       >            load_flag $ff
46d6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
46d8 : 48              >            pha         ;use stack to load status
46d9 : 28              >            plp
                        
46da : ee0302                   inc abst
                                tst_abs rINC,fINC,$ff-fnz
46dd : 08              >            php         ;save flags
46de : ad0302          >            lda abst
46e1 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
46e4 : f003            >        beq skip2832
                       >        trap            ;failed not equal (non zero)
46e6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
46e9 :                 >skip2832
                       >
46e9 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
46ea : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
46ec : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
46ef : f003            >        beq skip2835
                       >        trap            ;failed not equal (non zero)
46f1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
46f4 :                 >skip2835
                       >
                        
46f4 : e8                       inx
46f5 : e002                     cpx #2
46f7 : d005                     bne tinc13
46f9 : a9fe                     lda #$fe
46fb : 8d0302                   sta abst
46fe : e005             tinc13   cpx #5
4700 : d0d4                     bne tinc12
4702 : ca                       dex
4703 : ee0302                   inc abst
4706 :                  tdec12    
                                set_stat $ff
                       >            load_flag $ff
4706 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4708 : 48              >            pha         ;use stack to load status
4709 : 28              >            plp
                        
470a : ce0302                   dec abst
                                tst_abs rINC,fINC,$ff-fnz
470d : 08              >            php         ;save flags
470e : ad0302          >            lda abst
4711 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
4714 : f003            >        beq skip2840
                       >        trap            ;failed not equal (non zero)
4716 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4719 :                 >skip2840
                       >
4719 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
471a : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
471c : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
471f : f003            >        beq skip2843
                       >        trap            ;failed not equal (non zero)
4721 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4724 :                 >skip2843
                       >
                        
4724 : ca                       dex
4725 : 300b                     bmi tdec13
4727 : e001                     cpx #1
4729 : d0db                     bne tdec12
472b : a981                     lda #$81
472d : 8d0302                   sta abst
4730 : d0d4                     bne tdec12
4732 :                  tdec13
                                next_test
4732 : ad0002          >            lda test_case   ;previous test
4735 : c923            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4737 : f003            >        beq skip2846
                       >        trap            ;failed not equal (non zero)
4739 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
473c :                 >skip2846
                       >
0024 =                 >test_num = test_num + 1
473c : a924            >            lda #test_num   ;*** next tests' number
473e : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
4741 : 8d04ef            sta $ef04
4744 : 7a65726f706167..  db "zeropage indexed", 10, 0
4756 : a200                     ldx #0
4758 : a97e                     lda #$7e
475a : 9512             tinc4   sta zpt,x
                                set_stat 0
                       >            load_flag 0
475c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
475e : 48              >            pha         ;use stack to load status
475f : 28              >            plp
                        
4760 : f612                     inc zpt,x
                                tst_zx rINC,fINC,0
4762 : 08              >            php         ;save flags
4763 : b512            >            lda zpt,x
4765 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
4768 : f003            >        beq skip2851
                       >        trap            ;failed not equal (non zero)
476a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
476d :                 >skip2851
                       >
476d : 68              >            pla         ;load status
                       >            eor_flag 0
476e : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4770 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
4773 : f003            >        beq skip2854
                       >        trap            ;failed not equal (non zero)
4775 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4778 :                 >skip2854
                       >
                        
4778 : b512                     lda zpt,x
477a : e8                       inx
477b : e002                     cpx #2
477d : d002                     bne tinc5
477f : a9fe                     lda #$fe
4781 : e005             tinc5   cpx #5
4783 : d0d5                     bne tinc4
4785 : ca                       dex
4786 : a902                     lda #2
4788 : 9512             tdec4   sta zpt,x 
                                set_stat 0
                       >            load_flag 0
478a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
478c : 48              >            pha         ;use stack to load status
478d : 28              >            plp
                        
478e : d612                     dec zpt,x
                                tst_zx rINC,fINC,0
4790 : 08              >            php         ;save flags
4791 : b512            >            lda zpt,x
4793 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
4796 : f003            >        beq skip2859
                       >        trap            ;failed not equal (non zero)
4798 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
479b :                 >skip2859
                       >
479b : 68              >            pla         ;load status
                       >            eor_flag 0
479c : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
479e : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
47a1 : f003            >        beq skip2862
                       >        trap            ;failed not equal (non zero)
47a3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
47a6 :                 >skip2862
                       >
                        
47a6 : b512                     lda zpt,x
47a8 : ca                       dex
47a9 : 3008                     bmi tdec5
47ab : e001                     cpx #1
47ad : d0d9                     bne tdec4
47af : a981                     lda #$81
47b1 : d0d5                     bne tdec4
47b3 :                  tdec5
47b3 : a200                     ldx #0
47b5 : a97e                     lda #$7e
47b7 : 9512             tinc14  sta zpt,x
                                set_stat $ff
                       >            load_flag $ff
47b9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
47bb : 48              >            pha         ;use stack to load status
47bc : 28              >            plp
                        
47bd : f612                     inc zpt,x
                                tst_zx rINC,fINC,$ff-fnz
47bf : 08              >            php         ;save flags
47c0 : b512            >            lda zpt,x
47c2 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
47c5 : f003            >        beq skip2867
                       >        trap            ;failed not equal (non zero)
47c7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
47ca :                 >skip2867
                       >
47ca : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
47cb : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
47cd : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
47d0 : f003            >        beq skip2870
                       >        trap            ;failed not equal (non zero)
47d2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
47d5 :                 >skip2870
                       >
                        
47d5 : b512                     lda zpt,x
47d7 : e8                       inx
47d8 : e002                     cpx #2
47da : d002                     bne tinc15
47dc : a9fe                     lda #$fe
47de : e005             tinc15  cpx #5
47e0 : d0d5                     bne tinc14
47e2 : ca                       dex
47e3 : a902                     lda #2
47e5 : 9512             tdec14  sta zpt,x 
                                set_stat $ff
                       >            load_flag $ff
47e7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
47e9 : 48              >            pha         ;use stack to load status
47ea : 28              >            plp
                        
47eb : d612                     dec zpt,x
                                tst_zx rINC,fINC,$ff-fnz
47ed : 08              >            php         ;save flags
47ee : b512            >            lda zpt,x
47f0 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
47f3 : f003            >        beq skip2875
                       >        trap            ;failed not equal (non zero)
47f5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
47f8 :                 >skip2875
                       >
47f8 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
47f9 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
47fb : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
47fe : f003            >        beq skip2878
                       >        trap            ;failed not equal (non zero)
4800 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4803 :                 >skip2878
                       >
                        
4803 : b512                     lda zpt,x
4805 : ca                       dex
4806 : 3008                     bmi tdec15
4808 : e001                     cpx #1
480a : d0d9                     bne tdec14
480c : a981                     lda #$81
480e : d0d5                     bne tdec14
4810 :                  tdec15
                                next_test
4810 : ad0002          >            lda test_case   ;previous test
4813 : c924            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4815 : f003            >        beq skip2881
                       >        trap            ;failed not equal (non zero)
4817 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
481a :                 >skip2881
                       >
0025 =                 >test_num = test_num + 1
481a : a925            >            lda #test_num   ;*** next tests' number
481c : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
481f : 8d04ef            sta $ef04
4822 : 6d656d6f727920..  db "memory indexed", 10, 0
4832 : a200                     ldx #0
4834 : a97e                     lda #$7e
4836 : 9d0302           tinc6   sta abst,x
                                set_stat 0
                       >            load_flag 0
4839 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
483b : 48              >            pha         ;use stack to load status
483c : 28              >            plp
                        
483d : fe0302                   inc abst,x
                                tst_absx rINC,fINC,0
4840 : 08              >            php         ;save flags
4841 : bd0302          >            lda abst,x
4844 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
4847 : f003            >        beq skip2886
                       >        trap            ;failed not equal (non zero)
4849 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
484c :                 >skip2886
                       >
484c : 68              >            pla         ;load status
                       >            eor_flag 0
484d : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
484f : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
4852 : f003            >        beq skip2889
                       >        trap            ;failed not equal (non zero)
4854 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4857 :                 >skip2889
                       >
                        
4857 : bd0302                   lda abst,x
485a : e8                       inx
485b : e002                     cpx #2
485d : d002                     bne tinc7
485f : a9fe                     lda #$fe
4861 : e005             tinc7   cpx #5
4863 : d0d1                     bne tinc6
4865 : ca                       dex
4866 : a902                     lda #2
4868 : 9d0302           tdec6   sta abst,x 
                                set_stat 0
                       >            load_flag 0
486b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
486d : 48              >            pha         ;use stack to load status
486e : 28              >            plp
                        
486f : de0302                   dec abst,x
                                tst_absx rINC,fINC,0
4872 : 08              >            php         ;save flags
4873 : bd0302          >            lda abst,x
4876 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
4879 : f003            >        beq skip2894
                       >        trap            ;failed not equal (non zero)
487b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
487e :                 >skip2894
                       >
487e : 68              >            pla         ;load status
                       >            eor_flag 0
487f : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4881 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
4884 : f003            >        beq skip2897
                       >        trap            ;failed not equal (non zero)
4886 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4889 :                 >skip2897
                       >
                        
4889 : bd0302                   lda abst,x
488c : ca                       dex
488d : 3008                     bmi tdec7
488f : e001                     cpx #1
4891 : d0d5                     bne tdec6
4893 : a981                     lda #$81
4895 : d0d1                     bne tdec6
4897 :                  tdec7
4897 : a200                     ldx #0
4899 : a97e                     lda #$7e
489b : 9d0302           tinc16  sta abst,x
                                set_stat $ff
                       >            load_flag $ff
489e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
48a0 : 48              >            pha         ;use stack to load status
48a1 : 28              >            plp
                        
48a2 : fe0302                   inc abst,x
                                tst_absx rINC,fINC,$ff-fnz
48a5 : 08              >            php         ;save flags
48a6 : bd0302          >            lda abst,x
48a9 : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
48ac : f003            >        beq skip2902
                       >        trap            ;failed not equal (non zero)
48ae : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
48b1 :                 >skip2902
                       >
48b1 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
48b2 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
48b4 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
48b7 : f003            >        beq skip2905
                       >        trap            ;failed not equal (non zero)
48b9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
48bc :                 >skip2905
                       >
                        
48bc : bd0302                   lda abst,x
48bf : e8                       inx
48c0 : e002                     cpx #2
48c2 : d002                     bne tinc17
48c4 : a9fe                     lda #$fe
48c6 : e005             tinc17  cpx #5
48c8 : d0d1                     bne tinc16
48ca : ca                       dex
48cb : a902                     lda #2
48cd : 9d0302           tdec16  sta abst,x 
                                set_stat $ff
                       >            load_flag $ff
48d0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
48d2 : 48              >            pha         ;use stack to load status
48d3 : 28              >            plp
                        
48d4 : de0302                   dec abst,x
                                tst_absx rINC,fINC,$ff-fnz
48d7 : 08              >            php         ;save flags
48d8 : bd0302          >            lda abst,x
48db : dd3102          >            cmp rINC,x    ;test result
                       >            trap_ne
48de : f003            >        beq skip2910
                       >        trap            ;failed not equal (non zero)
48e0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
48e3 :                 >skip2910
                       >
48e3 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
48e4 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
48e6 : dd3602          >            cmp fINC,x    ;test flags
                       >            trap_ne
48e9 : f003            >        beq skip2913
                       >        trap            ;failed not equal (non zero)
48eb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
48ee :                 >skip2913
                       >
                        
48ee : bd0302                   lda abst,x
48f1 : ca                       dex
48f2 : 3008                     bmi tdec17
48f4 : e001                     cpx #1
48f6 : d0d5                     bne tdec16
48f8 : a981                     lda #$81
48fa : d0d1                     bne tdec16
48fc :                  tdec17
                                next_test
48fc : ad0002          >            lda test_case   ;previous test
48ff : c925            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4901 : f003            >        beq skip2916
                       >        trap            ;failed not equal (non zero)
4903 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4906 :                 >skip2916
                       >
0026 =                 >test_num = test_num + 1
4906 : a926            >            lda #test_num   ;*** next tests' number
4908 : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
490b : 8d04ef            sta $ef04
490e : 74657374696e67..  db "testing logical instructions - AND EOR ORA all addressing modes", 10, 0
494f : 8d04ef            sta $ef04
4952 : 414e440a00        db "AND", 10, 0
4957 : a203                     ldx #3      ;immediate - self modifying code
4959 : b522             tand    lda zpAN,x
495b : 8d6649                   sta tandi1
                                set_ax  absANa,0
                       >            load_flag 0
495e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4960 : 48              >            pha         ;use stack to load status
4961 : bd4b02          >            lda absANa,x    ;precharge accu
4964 : 28              >            plp
                        
4966 =                  tandi1  equ *+1     ;target for immediate operand
4965 : 2963                     and #99
                                tst_ax  absrlo,absflo,0
4967 : 08              >            php         ;save flags
4968 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
496b : f003            >        beq skip2921
                       >        trap            ;failed not equal (non zero)
496d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4970 :                 >skip2921
                       >
4970 : 68              >            pla         ;load status
                       >            eor_flag 0
4971 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4973 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4976 : f003            >        beq skip2924
                       >        trap            ;failed not equal (non zero)
4978 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
497b :                 >skip2924
                       >
                        
497b : ca                       dex
497c : 10db                     bpl tand
497e : a203                     ldx #3
4980 : b522             tand1   lda zpAN,x
4982 : 8d8d49                   sta tandi2
                                set_ax  absANa,$ff
                       >            load_flag $ff
4985 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4987 : 48              >            pha         ;use stack to load status
4988 : bd4b02          >            lda absANa,x    ;precharge accu
498b : 28              >            plp
                        
498d =                  tandi2  equ *+1     ;target for immediate operand
498c : 2963                     and #99
                                tst_ax  absrlo,absflo,$ff-fnz
498e : 08              >            php         ;save flags
498f : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4992 : f003            >        beq skip2929
                       >        trap            ;failed not equal (non zero)
4994 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4997 :                 >skip2929
                       >
4997 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4998 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
499a : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
499d : f003            >        beq skip2932
                       >        trap            ;failed not equal (non zero)
499f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
49a2 :                 >skip2932
                       >
                        
49a2 : ca                       dex
49a3 : 10db                     bpl tand1
                        
49a5 : a203                     ldx #3      ;zp
49a7 : b522             tand2    lda zpAN,x
49a9 : 8512                     sta zpt
                                set_ax  absANa,0
                       >            load_flag 0
49ab : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
49ad : 48              >            pha         ;use stack to load status
49ae : bd4b02          >            lda absANa,x    ;precharge accu
49b1 : 28              >            plp
                        
49b2 : 2512                     and zpt
                                tst_ax  absrlo,absflo,0
49b4 : 08              >            php         ;save flags
49b5 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
49b8 : f003            >        beq skip2937
                       >        trap            ;failed not equal (non zero)
49ba : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
49bd :                 >skip2937
                       >
49bd : 68              >            pla         ;load status
                       >            eor_flag 0
49be : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
49c0 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
49c3 : f003            >        beq skip2940
                       >        trap            ;failed not equal (non zero)
49c5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
49c8 :                 >skip2940
                       >
                        
49c8 : ca                       dex
49c9 : 10dc                     bpl tand2
49cb : a203                     ldx #3
49cd : b522             tand3   lda zpAN,x
49cf : 8512                     sta zpt
                                set_ax  absANa,$ff
                       >            load_flag $ff
49d1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
49d3 : 48              >            pha         ;use stack to load status
49d4 : bd4b02          >            lda absANa,x    ;precharge accu
49d7 : 28              >            plp
                        
49d8 : 2512                     and zpt
                                tst_ax  absrlo,absflo,$ff-fnz
49da : 08              >            php         ;save flags
49db : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
49de : f003            >        beq skip2945
                       >        trap            ;failed not equal (non zero)
49e0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
49e3 :                 >skip2945
                       >
49e3 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
49e4 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
49e6 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
49e9 : f003            >        beq skip2948
                       >        trap            ;failed not equal (non zero)
49eb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
49ee :                 >skip2948
                       >
                        
49ee : ca                       dex
49ef : 10dc                     bpl tand3
                        
49f1 : a203                     ldx #3      ;abs
49f3 : b522             tand4   lda zpAN,x
49f5 : 8d0302                   sta abst
                                set_ax  absANa,0
                       >            load_flag 0
49f8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
49fa : 48              >            pha         ;use stack to load status
49fb : bd4b02          >            lda absANa,x    ;precharge accu
49fe : 28              >            plp
                        
49ff : 2d0302                   and abst
                                tst_ax  absrlo,absflo,0
4a02 : 08              >            php         ;save flags
4a03 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4a06 : f003            >        beq skip2953
                       >        trap            ;failed not equal (non zero)
4a08 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4a0b :                 >skip2953
                       >
4a0b : 68              >            pla         ;load status
                       >            eor_flag 0
4a0c : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4a0e : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4a11 : f003            >        beq skip2956
                       >        trap            ;failed not equal (non zero)
4a13 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4a16 :                 >skip2956
                       >
                        
4a16 : ca                       dex
4a17 : 10da                     bpl tand4
4a19 : a203                     ldx #3
4a1b : b522             tand5   lda zpAN,x
4a1d : 8d0302                   sta abst
                                set_ax  absANa,$ff
                       >            load_flag $ff
4a20 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4a22 : 48              >            pha         ;use stack to load status
4a23 : bd4b02          >            lda absANa,x    ;precharge accu
4a26 : 28              >            plp
                        
4a27 : 2d0302                   and abst
                                tst_ax  absrlo,absflo,$ff-fnz
4a2a : 08              >            php         ;save flags
4a2b : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4a2e : f003            >        beq skip2961
                       >        trap            ;failed not equal (non zero)
4a30 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4a33 :                 >skip2961
                       >
4a33 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4a34 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4a36 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4a39 : f003            >        beq skip2964
                       >        trap            ;failed not equal (non zero)
4a3b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4a3e :                 >skip2964
                       >
                        
4a3e : ca                       dex
4a3f : 1002                     bpl tand6
                        
4a41 : a203                     ldx #3      ;zp,x
4a43 :                  tand6
                                set_ax  absANa,0
                       >            load_flag 0
4a43 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4a45 : 48              >            pha         ;use stack to load status
4a46 : bd4b02          >            lda absANa,x    ;precharge accu
4a49 : 28              >            plp
                        
4a4a : 3522                     and zpAN,x
                                tst_ax  absrlo,absflo,0
4a4c : 08              >            php         ;save flags
4a4d : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4a50 : f003            >        beq skip2969
                       >        trap            ;failed not equal (non zero)
4a52 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4a55 :                 >skip2969
                       >
4a55 : 68              >            pla         ;load status
                       >            eor_flag 0
4a56 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4a58 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4a5b : f003            >        beq skip2972
                       >        trap            ;failed not equal (non zero)
4a5d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4a60 :                 >skip2972
                       >
                        
4a60 : ca                       dex
4a61 : 10e0                     bpl tand6
4a63 : a203                     ldx #3
4a65 :                  tand7
                                set_ax  absANa,$ff
                       >            load_flag $ff
4a65 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4a67 : 48              >            pha         ;use stack to load status
4a68 : bd4b02          >            lda absANa,x    ;precharge accu
4a6b : 28              >            plp
                        
4a6c : 3522                     and zpAN,x
                                tst_ax  absrlo,absflo,$ff-fnz
4a6e : 08              >            php         ;save flags
4a6f : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4a72 : f003            >        beq skip2977
                       >        trap            ;failed not equal (non zero)
4a74 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4a77 :                 >skip2977
                       >
4a77 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4a78 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4a7a : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4a7d : f003            >        beq skip2980
                       >        trap            ;failed not equal (non zero)
4a7f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4a82 :                 >skip2980
                       >
                        
4a82 : ca                       dex
4a83 : 10e0                     bpl tand7
                        
4a85 : a203                     ldx #3      ;abs,x
4a87 :                  tand8
                                set_ax  absANa,0
                       >            load_flag 0
4a87 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4a89 : 48              >            pha         ;use stack to load status
4a8a : bd4b02          >            lda absANa,x    ;precharge accu
4a8d : 28              >            plp
                        
4a8e : 3d3f02                   and absAN,x
                                tst_ax  absrlo,absflo,0
4a91 : 08              >            php         ;save flags
4a92 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4a95 : f003            >        beq skip2985
                       >        trap            ;failed not equal (non zero)
4a97 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4a9a :                 >skip2985
                       >
4a9a : 68              >            pla         ;load status
                       >            eor_flag 0
4a9b : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4a9d : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4aa0 : f003            >        beq skip2988
                       >        trap            ;failed not equal (non zero)
4aa2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4aa5 :                 >skip2988
                       >
                        
4aa5 : ca                       dex
4aa6 : 10df                     bpl tand8
4aa8 : a203                     ldx #3
4aaa :                  tand9
                                set_ax  absANa,$ff
                       >            load_flag $ff
4aaa : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4aac : 48              >            pha         ;use stack to load status
4aad : bd4b02          >            lda absANa,x    ;precharge accu
4ab0 : 28              >            plp
                        
4ab1 : 3d3f02                   and absAN,x
                                tst_ax  absrlo,absflo,$ff-fnz
4ab4 : 08              >            php         ;save flags
4ab5 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4ab8 : f003            >        beq skip2993
                       >        trap            ;failed not equal (non zero)
4aba : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4abd :                 >skip2993
                       >
4abd : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4abe : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4ac0 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4ac3 : f003            >        beq skip2996
                       >        trap            ;failed not equal (non zero)
4ac5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4ac8 :                 >skip2996
                       >
                        
4ac8 : ca                       dex
4ac9 : 10df                     bpl tand9
                        
4acb : a003                     ldy #3      ;abs,y
4acd :                  tand10
                                set_ay  absANa,0
                       >            load_flag 0
4acd : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4acf : 48              >            pha         ;use stack to load status
4ad0 : b94b02          >            lda absANa,y    ;precharge accu
4ad3 : 28              >            plp
                        
4ad4 : 393f02                   and absAN,y
                                tst_ay  absrlo,absflo,0
4ad7 : 08              >            php         ;save flags
4ad8 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4adb : f003            >        beq skip3001
                       >        trap            ;failed not equal (non zero)
4add : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4ae0 :                 >skip3001
                       >
4ae0 : 68              >            pla         ;load status
                       >            eor_flag 0
4ae1 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4ae3 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
4ae6 : f003            >        beq skip3004
                       >        trap            ;failed not equal (non zero)
4ae8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4aeb :                 >skip3004
                       >
                        
4aeb : 88                       dey
4aec : 10df                     bpl tand10
4aee : a003                     ldy #3
4af0 :                  tand11
                                set_ay  absANa,$ff
                       >            load_flag $ff
4af0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4af2 : 48              >            pha         ;use stack to load status
4af3 : b94b02          >            lda absANa,y    ;precharge accu
4af6 : 28              >            plp
                        
4af7 : 393f02                   and absAN,y
                                tst_ay  absrlo,absflo,$ff-fnz
4afa : 08              >            php         ;save flags
4afb : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4afe : f003            >        beq skip3009
                       >        trap            ;failed not equal (non zero)
4b00 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4b03 :                 >skip3009
                       >
4b03 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4b04 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4b06 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
4b09 : f003            >        beq skip3012
                       >        trap            ;failed not equal (non zero)
4b0b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4b0e :                 >skip3012
                       >
                        
4b0e : 88                       dey
4b0f : 10df                     bpl tand11
                        
4b11 : a206                     ldx #6      ;(zp,x)
4b13 : a003                     ldy #3
4b15 :                  tand12
                                set_ay  absANa,0
                       >            load_flag 0
4b15 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4b17 : 48              >            pha         ;use stack to load status
4b18 : b94b02          >            lda absANa,y    ;precharge accu
4b1b : 28              >            plp
                        
4b1c : 2140                     and (indAN,x)
                                tst_ay  absrlo,absflo,0
4b1e : 08              >            php         ;save flags
4b1f : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4b22 : f003            >        beq skip3017
                       >        trap            ;failed not equal (non zero)
4b24 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4b27 :                 >skip3017
                       >
4b27 : 68              >            pla         ;load status
                       >            eor_flag 0
4b28 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4b2a : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
4b2d : f003            >        beq skip3020
                       >        trap            ;failed not equal (non zero)
4b2f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4b32 :                 >skip3020
                       >
                        
4b32 : ca                       dex
4b33 : ca                       dex
4b34 : 88                       dey
4b35 : 10de                     bpl tand12
4b37 : a206                     ldx #6
4b39 : a003                     ldy #3
4b3b :                  tand13
                                set_ay  absANa,$ff
                       >            load_flag $ff
4b3b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4b3d : 48              >            pha         ;use stack to load status
4b3e : b94b02          >            lda absANa,y    ;precharge accu
4b41 : 28              >            plp
                        
4b42 : 2140                     and (indAN,x)
                                tst_ay  absrlo,absflo,$ff-fnz
4b44 : 08              >            php         ;save flags
4b45 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4b48 : f003            >        beq skip3025
                       >        trap            ;failed not equal (non zero)
4b4a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4b4d :                 >skip3025
                       >
4b4d : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4b4e : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4b50 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
4b53 : f003            >        beq skip3028
                       >        trap            ;failed not equal (non zero)
4b55 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4b58 :                 >skip3028
                       >
                        
4b58 : ca                       dex
4b59 : ca                       dex
4b5a : 88                       dey
4b5b : 10de                     bpl tand13
                        
4b5d : a003                     ldy #3      ;(zp),y
4b5f :                  tand14
                                set_ay  absANa,0
                       >            load_flag 0
4b5f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4b61 : 48              >            pha         ;use stack to load status
4b62 : b94b02          >            lda absANa,y    ;precharge accu
4b65 : 28              >            plp
                        
4b66 : 3140                     and (indAN),y
                                tst_ay  absrlo,absflo,0
4b68 : 08              >            php         ;save flags
4b69 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4b6c : f003            >        beq skip3033
                       >        trap            ;failed not equal (non zero)
4b6e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4b71 :                 >skip3033
                       >
4b71 : 68              >            pla         ;load status
                       >            eor_flag 0
4b72 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4b74 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
4b77 : f003            >        beq skip3036
                       >        trap            ;failed not equal (non zero)
4b79 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4b7c :                 >skip3036
                       >
                        
4b7c : 88                       dey
4b7d : 10e0                     bpl tand14
4b7f : a003                     ldy #3
4b81 :                  tand15
                                set_ay  absANa,$ff
                       >            load_flag $ff
4b81 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4b83 : 48              >            pha         ;use stack to load status
4b84 : b94b02          >            lda absANa,y    ;precharge accu
4b87 : 28              >            plp
                        
4b88 : 3140                     and (indAN),y
                                tst_ay  absrlo,absflo,$ff-fnz
4b8a : 08              >            php         ;save flags
4b8b : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4b8e : f003            >        beq skip3041
                       >        trap            ;failed not equal (non zero)
4b90 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4b93 :                 >skip3041
                       >
4b93 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4b94 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4b96 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
4b99 : f003            >        beq skip3044
                       >        trap            ;failed not equal (non zero)
4b9b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4b9e :                 >skip3044
                       >
                        
4b9e : 88                       dey
4b9f : 10e0                     bpl tand15
                                next_test
4ba1 : ad0002          >            lda test_case   ;previous test
4ba4 : c926            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4ba6 : f003            >        beq skip3047
                       >        trap            ;failed not equal (non zero)
4ba8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4bab :                 >skip3047
                       >
0027 =                 >test_num = test_num + 1
4bab : a927            >            lda #test_num   ;*** next tests' number
4bad : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
4bb0 : 8d04ef            sta $ef04
4bb3 : 454f520a00        db "EOR", 10, 0
4bb8 : a203                     ldx #3      ;immediate - self modifying code
4bba : b526             teor    lda zpEO,x
4bbc : 8dc74b                   sta teori1
                                set_ax  absEOa,0
                       >            load_flag 0
4bbf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4bc1 : 48              >            pha         ;use stack to load status
4bc2 : bd4f02          >            lda absEOa,x    ;precharge accu
4bc5 : 28              >            plp
                        
4bc7 =                  teori1  equ *+1     ;target for immediate operand
4bc6 : 4963                     eor #99
                                tst_ax  absrlo,absflo,0
4bc8 : 08              >            php         ;save flags
4bc9 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4bcc : f003            >        beq skip3052
                       >        trap            ;failed not equal (non zero)
4bce : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4bd1 :                 >skip3052
                       >
4bd1 : 68              >            pla         ;load status
                       >            eor_flag 0
4bd2 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4bd4 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4bd7 : f003            >        beq skip3055
                       >        trap            ;failed not equal (non zero)
4bd9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4bdc :                 >skip3055
                       >
                        
4bdc : ca                       dex
4bdd : 10db                     bpl teor
4bdf : a203                     ldx #3
4be1 : b526             teor1   lda zpEO,x
4be3 : 8dee4b                   sta teori2
                                set_ax  absEOa,$ff
                       >            load_flag $ff
4be6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4be8 : 48              >            pha         ;use stack to load status
4be9 : bd4f02          >            lda absEOa,x    ;precharge accu
4bec : 28              >            plp
                        
4bee =                  teori2  equ *+1     ;target for immediate operand
4bed : 4963                     eor #99
                                tst_ax  absrlo,absflo,$ff-fnz
4bef : 08              >            php         ;save flags
4bf0 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4bf3 : f003            >        beq skip3060
                       >        trap            ;failed not equal (non zero)
4bf5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4bf8 :                 >skip3060
                       >
4bf8 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4bf9 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4bfb : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4bfe : f003            >        beq skip3063
                       >        trap            ;failed not equal (non zero)
4c00 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4c03 :                 >skip3063
                       >
                        
4c03 : ca                       dex
4c04 : 10db                     bpl teor1
                        
4c06 : a203                     ldx #3      ;zp
4c08 : b526             teor2    lda zpEO,x
4c0a : 8512                     sta zpt
                                set_ax  absEOa,0
                       >            load_flag 0
4c0c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4c0e : 48              >            pha         ;use stack to load status
4c0f : bd4f02          >            lda absEOa,x    ;precharge accu
4c12 : 28              >            plp
                        
4c13 : 4512                     eor zpt
                                tst_ax  absrlo,absflo,0
4c15 : 08              >            php         ;save flags
4c16 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4c19 : f003            >        beq skip3068
                       >        trap            ;failed not equal (non zero)
4c1b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4c1e :                 >skip3068
                       >
4c1e : 68              >            pla         ;load status
                       >            eor_flag 0
4c1f : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4c21 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4c24 : f003            >        beq skip3071
                       >        trap            ;failed not equal (non zero)
4c26 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4c29 :                 >skip3071
                       >
                        
4c29 : ca                       dex
4c2a : 10dc                     bpl teor2
4c2c : a203                     ldx #3
4c2e : b526             teor3   lda zpEO,x
4c30 : 8512                     sta zpt
                                set_ax  absEOa,$ff
                       >            load_flag $ff
4c32 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4c34 : 48              >            pha         ;use stack to load status
4c35 : bd4f02          >            lda absEOa,x    ;precharge accu
4c38 : 28              >            plp
                        
4c39 : 4512                     eor zpt
                                tst_ax  absrlo,absflo,$ff-fnz
4c3b : 08              >            php         ;save flags
4c3c : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4c3f : f003            >        beq skip3076
                       >        trap            ;failed not equal (non zero)
4c41 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4c44 :                 >skip3076
                       >
4c44 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4c45 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4c47 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4c4a : f003            >        beq skip3079
                       >        trap            ;failed not equal (non zero)
4c4c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4c4f :                 >skip3079
                       >
                        
4c4f : ca                       dex
4c50 : 10dc                     bpl teor3
                        
4c52 : a203                     ldx #3      ;abs
4c54 : b526             teor4   lda zpEO,x
4c56 : 8d0302                   sta abst
                                set_ax  absEOa,0
                       >            load_flag 0
4c59 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4c5b : 48              >            pha         ;use stack to load status
4c5c : bd4f02          >            lda absEOa,x    ;precharge accu
4c5f : 28              >            plp
                        
4c60 : 4d0302                   eor abst
                                tst_ax  absrlo,absflo,0
4c63 : 08              >            php         ;save flags
4c64 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4c67 : f003            >        beq skip3084
                       >        trap            ;failed not equal (non zero)
4c69 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4c6c :                 >skip3084
                       >
4c6c : 68              >            pla         ;load status
                       >            eor_flag 0
4c6d : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4c6f : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4c72 : f003            >        beq skip3087
                       >        trap            ;failed not equal (non zero)
4c74 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4c77 :                 >skip3087
                       >
                        
4c77 : ca                       dex
4c78 : 10da                     bpl teor4
4c7a : a203                     ldx #3
4c7c : b526             teor5   lda zpEO,x
4c7e : 8d0302                   sta abst
                                set_ax  absEOa,$ff
                       >            load_flag $ff
4c81 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4c83 : 48              >            pha         ;use stack to load status
4c84 : bd4f02          >            lda absEOa,x    ;precharge accu
4c87 : 28              >            plp
                        
4c88 : 4d0302                   eor abst
                                tst_ax  absrlo,absflo,$ff-fnz
4c8b : 08              >            php         ;save flags
4c8c : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4c8f : f003            >        beq skip3092
                       >        trap            ;failed not equal (non zero)
4c91 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4c94 :                 >skip3092
                       >
4c94 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4c95 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4c97 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4c9a : f003            >        beq skip3095
                       >        trap            ;failed not equal (non zero)
4c9c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4c9f :                 >skip3095
                       >
                        
4c9f : ca                       dex
4ca0 : 1002                     bpl teor6
                        
4ca2 : a203                     ldx #3      ;zp,x
4ca4 :                  teor6
                                set_ax  absEOa,0
                       >            load_flag 0
4ca4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4ca6 : 48              >            pha         ;use stack to load status
4ca7 : bd4f02          >            lda absEOa,x    ;precharge accu
4caa : 28              >            plp
                        
4cab : 5526                     eor zpEO,x
                                tst_ax  absrlo,absflo,0
4cad : 08              >            php         ;save flags
4cae : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4cb1 : f003            >        beq skip3100
                       >        trap            ;failed not equal (non zero)
4cb3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4cb6 :                 >skip3100
                       >
4cb6 : 68              >            pla         ;load status
                       >            eor_flag 0
4cb7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4cb9 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4cbc : f003            >        beq skip3103
                       >        trap            ;failed not equal (non zero)
4cbe : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4cc1 :                 >skip3103
                       >
                        
4cc1 : ca                       dex
4cc2 : 10e0                     bpl teor6
4cc4 : a203                     ldx #3
4cc6 :                  teor7
                                set_ax  absEOa,$ff
                       >            load_flag $ff
4cc6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4cc8 : 48              >            pha         ;use stack to load status
4cc9 : bd4f02          >            lda absEOa,x    ;precharge accu
4ccc : 28              >            plp
                        
4ccd : 5526                     eor zpEO,x
                                tst_ax  absrlo,absflo,$ff-fnz
4ccf : 08              >            php         ;save flags
4cd0 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4cd3 : f003            >        beq skip3108
                       >        trap            ;failed not equal (non zero)
4cd5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4cd8 :                 >skip3108
                       >
4cd8 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4cd9 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4cdb : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4cde : f003            >        beq skip3111
                       >        trap            ;failed not equal (non zero)
4ce0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4ce3 :                 >skip3111
                       >
                        
4ce3 : ca                       dex
4ce4 : 10e0                     bpl teor7
                        
4ce6 : a203                     ldx #3      ;abs,x
4ce8 :                  teor8
                                set_ax  absEOa,0
                       >            load_flag 0
4ce8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4cea : 48              >            pha         ;use stack to load status
4ceb : bd4f02          >            lda absEOa,x    ;precharge accu
4cee : 28              >            plp
                        
4cef : 5d4302                   eor absEO,x
                                tst_ax  absrlo,absflo,0
4cf2 : 08              >            php         ;save flags
4cf3 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4cf6 : f003            >        beq skip3116
                       >        trap            ;failed not equal (non zero)
4cf8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4cfb :                 >skip3116
                       >
4cfb : 68              >            pla         ;load status
                       >            eor_flag 0
4cfc : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4cfe : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4d01 : f003            >        beq skip3119
                       >        trap            ;failed not equal (non zero)
4d03 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4d06 :                 >skip3119
                       >
                        
4d06 : ca                       dex
4d07 : 10df                     bpl teor8
4d09 : a203                     ldx #3
4d0b :                  teor9
                                set_ax  absEOa,$ff
                       >            load_flag $ff
4d0b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4d0d : 48              >            pha         ;use stack to load status
4d0e : bd4f02          >            lda absEOa,x    ;precharge accu
4d11 : 28              >            plp
                        
4d12 : 5d4302                   eor absEO,x
                                tst_ax  absrlo,absflo,$ff-fnz
4d15 : 08              >            php         ;save flags
4d16 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4d19 : f003            >        beq skip3124
                       >        trap            ;failed not equal (non zero)
4d1b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4d1e :                 >skip3124
                       >
4d1e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4d1f : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4d21 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4d24 : f003            >        beq skip3127
                       >        trap            ;failed not equal (non zero)
4d26 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4d29 :                 >skip3127
                       >
                        
4d29 : ca                       dex
4d2a : 10df                     bpl teor9
                        
4d2c : a003                     ldy #3      ;abs,y
4d2e :                  teor10
                                set_ay  absEOa,0
                       >            load_flag 0
4d2e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4d30 : 48              >            pha         ;use stack to load status
4d31 : b94f02          >            lda absEOa,y    ;precharge accu
4d34 : 28              >            plp
                        
4d35 : 594302                   eor absEO,y
                                tst_ay  absrlo,absflo,0
4d38 : 08              >            php         ;save flags
4d39 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4d3c : f003            >        beq skip3132
                       >        trap            ;failed not equal (non zero)
4d3e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4d41 :                 >skip3132
                       >
4d41 : 68              >            pla         ;load status
                       >            eor_flag 0
4d42 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4d44 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
4d47 : f003            >        beq skip3135
                       >        trap            ;failed not equal (non zero)
4d49 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4d4c :                 >skip3135
                       >
                        
4d4c : 88                       dey
4d4d : 10df                     bpl teor10
4d4f : a003                     ldy #3
4d51 :                  teor11
                                set_ay  absEOa,$ff
                       >            load_flag $ff
4d51 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4d53 : 48              >            pha         ;use stack to load status
4d54 : b94f02          >            lda absEOa,y    ;precharge accu
4d57 : 28              >            plp
                        
4d58 : 594302                   eor absEO,y
                                tst_ay  absrlo,absflo,$ff-fnz
4d5b : 08              >            php         ;save flags
4d5c : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4d5f : f003            >        beq skip3140
                       >        trap            ;failed not equal (non zero)
4d61 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4d64 :                 >skip3140
                       >
4d64 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4d65 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4d67 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
4d6a : f003            >        beq skip3143
                       >        trap            ;failed not equal (non zero)
4d6c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4d6f :                 >skip3143
                       >
                        
4d6f : 88                       dey
4d70 : 10df                     bpl teor11
                        
4d72 : a206                     ldx #6      ;(zp,x)
4d74 : a003                     ldy #3
4d76 :                  teor12
                                set_ay  absEOa,0
                       >            load_flag 0
4d76 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4d78 : 48              >            pha         ;use stack to load status
4d79 : b94f02          >            lda absEOa,y    ;precharge accu
4d7c : 28              >            plp
                        
4d7d : 4148                     eor (indEO,x)
                                tst_ay  absrlo,absflo,0
4d7f : 08              >            php         ;save flags
4d80 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4d83 : f003            >        beq skip3148
                       >        trap            ;failed not equal (non zero)
4d85 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4d88 :                 >skip3148
                       >
4d88 : 68              >            pla         ;load status
                       >            eor_flag 0
4d89 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4d8b : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
4d8e : f003            >        beq skip3151
                       >        trap            ;failed not equal (non zero)
4d90 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4d93 :                 >skip3151
                       >
                        
4d93 : ca                       dex
4d94 : ca                       dex
4d95 : 88                       dey
4d96 : 10de                     bpl teor12
4d98 : a206                     ldx #6
4d9a : a003                     ldy #3
4d9c :                  teor13
                                set_ay  absEOa,$ff
                       >            load_flag $ff
4d9c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4d9e : 48              >            pha         ;use stack to load status
4d9f : b94f02          >            lda absEOa,y    ;precharge accu
4da2 : 28              >            plp
                        
4da3 : 4148                     eor (indEO,x)
                                tst_ay  absrlo,absflo,$ff-fnz
4da5 : 08              >            php         ;save flags
4da6 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4da9 : f003            >        beq skip3156
                       >        trap            ;failed not equal (non zero)
4dab : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4dae :                 >skip3156
                       >
4dae : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4daf : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4db1 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
4db4 : f003            >        beq skip3159
                       >        trap            ;failed not equal (non zero)
4db6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4db9 :                 >skip3159
                       >
                        
4db9 : ca                       dex
4dba : ca                       dex
4dbb : 88                       dey
4dbc : 10de                     bpl teor13
                        
4dbe : a003                     ldy #3      ;(zp),y
4dc0 :                  teor14
                                set_ay  absEOa,0
                       >            load_flag 0
4dc0 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4dc2 : 48              >            pha         ;use stack to load status
4dc3 : b94f02          >            lda absEOa,y    ;precharge accu
4dc6 : 28              >            plp
                        
4dc7 : 5148                     eor (indEO),y
                                tst_ay  absrlo,absflo,0
4dc9 : 08              >            php         ;save flags
4dca : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4dcd : f003            >        beq skip3164
                       >        trap            ;failed not equal (non zero)
4dcf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4dd2 :                 >skip3164
                       >
4dd2 : 68              >            pla         ;load status
                       >            eor_flag 0
4dd3 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4dd5 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
4dd8 : f003            >        beq skip3167
                       >        trap            ;failed not equal (non zero)
4dda : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4ddd :                 >skip3167
                       >
                        
4ddd : 88                       dey
4dde : 10e0                     bpl teor14
4de0 : a003                     ldy #3
4de2 :                  teor15
                                set_ay  absEOa,$ff
                       >            load_flag $ff
4de2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4de4 : 48              >            pha         ;use stack to load status
4de5 : b94f02          >            lda absEOa,y    ;precharge accu
4de8 : 28              >            plp
                        
4de9 : 5148                     eor (indEO),y
                                tst_ay  absrlo,absflo,$ff-fnz
4deb : 08              >            php         ;save flags
4dec : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4def : f003            >        beq skip3172
                       >        trap            ;failed not equal (non zero)
4df1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4df4 :                 >skip3172
                       >
4df4 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4df5 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4df7 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
4dfa : f003            >        beq skip3175
                       >        trap            ;failed not equal (non zero)
4dfc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4dff :                 >skip3175
                       >
                        
4dff : 88                       dey
4e00 : 10e0                     bpl teor15
                                next_test
4e02 : ad0002          >            lda test_case   ;previous test
4e05 : c927            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4e07 : f003            >        beq skip3178
                       >        trap            ;failed not equal (non zero)
4e09 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4e0c :                 >skip3178
                       >
0028 =                 >test_num = test_num + 1
4e0c : a928            >            lda #test_num   ;*** next tests' number
4e0e : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
4e11 : 8d04ef            sta $ef04
4e14 : 4f520a00          db "OR", 10, 0
4e18 : a203                     ldx #3      ;immediate - self modifying code
4e1a : b51e             tora    lda zpOR,x
4e1c : 8d274e                   sta torai1
                                set_ax  absORa,0
                       >            load_flag 0
4e1f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4e21 : 48              >            pha         ;use stack to load status
4e22 : bd4702          >            lda absORa,x    ;precharge accu
4e25 : 28              >            plp
                        
4e27 =                  torai1  equ *+1     ;target for immediate operand
4e26 : 0963                     ora #99
                                tst_ax  absrlo,absflo,0
4e28 : 08              >            php         ;save flags
4e29 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4e2c : f003            >        beq skip3183
                       >        trap            ;failed not equal (non zero)
4e2e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4e31 :                 >skip3183
                       >
4e31 : 68              >            pla         ;load status
                       >            eor_flag 0
4e32 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4e34 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4e37 : f003            >        beq skip3186
                       >        trap            ;failed not equal (non zero)
4e39 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4e3c :                 >skip3186
                       >
                        
4e3c : ca                       dex
4e3d : 10db                     bpl tora
4e3f : a203                     ldx #3
4e41 : b51e             tora1   lda zpOR,x
4e43 : 8d4e4e                   sta torai2
                                set_ax  absORa,$ff
                       >            load_flag $ff
4e46 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4e48 : 48              >            pha         ;use stack to load status
4e49 : bd4702          >            lda absORa,x    ;precharge accu
4e4c : 28              >            plp
                        
4e4e =                  torai2  equ *+1     ;target for immediate operand
4e4d : 0963                     ora #99
                                tst_ax  absrlo,absflo,$ff-fnz
4e4f : 08              >            php         ;save flags
4e50 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4e53 : f003            >        beq skip3191
                       >        trap            ;failed not equal (non zero)
4e55 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4e58 :                 >skip3191
                       >
4e58 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4e59 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4e5b : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4e5e : f003            >        beq skip3194
                       >        trap            ;failed not equal (non zero)
4e60 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4e63 :                 >skip3194
                       >
                        
4e63 : ca                       dex
4e64 : 10db                     bpl tora1
                        
4e66 : a203                     ldx #3      ;zp
4e68 : b51e             tora2   lda zpOR,x
4e6a : 8512                     sta zpt
                                set_ax  absORa,0
                       >            load_flag 0
4e6c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4e6e : 48              >            pha         ;use stack to load status
4e6f : bd4702          >            lda absORa,x    ;precharge accu
4e72 : 28              >            plp
                        
4e73 : 0512                     ora zpt
                                tst_ax  absrlo,absflo,0
4e75 : 08              >            php         ;save flags
4e76 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4e79 : f003            >        beq skip3199
                       >        trap            ;failed not equal (non zero)
4e7b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4e7e :                 >skip3199
                       >
4e7e : 68              >            pla         ;load status
                       >            eor_flag 0
4e7f : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4e81 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4e84 : f003            >        beq skip3202
                       >        trap            ;failed not equal (non zero)
4e86 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4e89 :                 >skip3202
                       >
                        
4e89 : ca                       dex
4e8a : 10dc                     bpl tora2
4e8c : a203                     ldx #3
4e8e : b51e             tora3   lda zpOR,x
4e90 : 8512                     sta zpt
                                set_ax  absORa,$ff
                       >            load_flag $ff
4e92 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4e94 : 48              >            pha         ;use stack to load status
4e95 : bd4702          >            lda absORa,x    ;precharge accu
4e98 : 28              >            plp
                        
4e99 : 0512                     ora zpt
                                tst_ax  absrlo,absflo,$ff-fnz
4e9b : 08              >            php         ;save flags
4e9c : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4e9f : f003            >        beq skip3207
                       >        trap            ;failed not equal (non zero)
4ea1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4ea4 :                 >skip3207
                       >
4ea4 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4ea5 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4ea7 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4eaa : f003            >        beq skip3210
                       >        trap            ;failed not equal (non zero)
4eac : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4eaf :                 >skip3210
                       >
                        
4eaf : ca                       dex
4eb0 : 10dc                     bpl tora3
                        
4eb2 : a203                     ldx #3      ;abs
4eb4 : b51e             tora4   lda zpOR,x
4eb6 : 8d0302                   sta abst
                                set_ax  absORa,0
                       >            load_flag 0
4eb9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4ebb : 48              >            pha         ;use stack to load status
4ebc : bd4702          >            lda absORa,x    ;precharge accu
4ebf : 28              >            plp
                        
4ec0 : 0d0302                   ora abst
                                tst_ax  absrlo,absflo,0
4ec3 : 08              >            php         ;save flags
4ec4 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4ec7 : f003            >        beq skip3215
                       >        trap            ;failed not equal (non zero)
4ec9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4ecc :                 >skip3215
                       >
4ecc : 68              >            pla         ;load status
                       >            eor_flag 0
4ecd : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4ecf : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4ed2 : f003            >        beq skip3218
                       >        trap            ;failed not equal (non zero)
4ed4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4ed7 :                 >skip3218
                       >
                        
4ed7 : ca                       dex
4ed8 : 10da                     bpl tora4
4eda : a203                     ldx #3
4edc : b51e             tora5   lda zpOR,x
4ede : 8d0302                   sta abst
                                set_ax  absORa,$ff
                       >            load_flag $ff
4ee1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4ee3 : 48              >            pha         ;use stack to load status
4ee4 : bd4702          >            lda absORa,x    ;precharge accu
4ee7 : 28              >            plp
                        
4ee8 : 0d0302                   ora abst
                                tst_ax  absrlo,absflo,$ff-fnz
4eeb : 08              >            php         ;save flags
4eec : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4eef : f003            >        beq skip3223
                       >        trap            ;failed not equal (non zero)
4ef1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4ef4 :                 >skip3223
                       >
4ef4 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4ef5 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4ef7 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4efa : f003            >        beq skip3226
                       >        trap            ;failed not equal (non zero)
4efc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4eff :                 >skip3226
                       >
                        
4eff : ca                       dex
4f00 : 1002                     bpl tora6
                        
4f02 : a203                     ldx #3      ;zp,x
4f04 :                  tora6
                                set_ax  absORa,0
                       >            load_flag 0
4f04 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4f06 : 48              >            pha         ;use stack to load status
4f07 : bd4702          >            lda absORa,x    ;precharge accu
4f0a : 28              >            plp
                        
4f0b : 151e                     ora zpOR,x
                                tst_ax  absrlo,absflo,0
4f0d : 08              >            php         ;save flags
4f0e : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4f11 : f003            >        beq skip3231
                       >        trap            ;failed not equal (non zero)
4f13 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4f16 :                 >skip3231
                       >
4f16 : 68              >            pla         ;load status
                       >            eor_flag 0
4f17 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4f19 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4f1c : f003            >        beq skip3234
                       >        trap            ;failed not equal (non zero)
4f1e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4f21 :                 >skip3234
                       >
                        
4f21 : ca                       dex
4f22 : 10e0                     bpl tora6
4f24 : a203                     ldx #3
4f26 :                  tora7
                                set_ax  absORa,$ff
                       >            load_flag $ff
4f26 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4f28 : 48              >            pha         ;use stack to load status
4f29 : bd4702          >            lda absORa,x    ;precharge accu
4f2c : 28              >            plp
                        
4f2d : 151e                     ora zpOR,x
                                tst_ax  absrlo,absflo,$ff-fnz
4f2f : 08              >            php         ;save flags
4f30 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4f33 : f003            >        beq skip3239
                       >        trap            ;failed not equal (non zero)
4f35 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4f38 :                 >skip3239
                       >
4f38 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4f39 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4f3b : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4f3e : f003            >        beq skip3242
                       >        trap            ;failed not equal (non zero)
4f40 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4f43 :                 >skip3242
                       >
                        
4f43 : ca                       dex
4f44 : 10e0                     bpl tora7
                        
4f46 : a203                     ldx #3      ;abs,x
4f48 :                  tora8
                                set_ax  absORa,0
                       >            load_flag 0
4f48 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4f4a : 48              >            pha         ;use stack to load status
4f4b : bd4702          >            lda absORa,x    ;precharge accu
4f4e : 28              >            plp
                        
4f4f : 1d3b02                   ora absOR,x
                                tst_ax  absrlo,absflo,0
4f52 : 08              >            php         ;save flags
4f53 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4f56 : f003            >        beq skip3247
                       >        trap            ;failed not equal (non zero)
4f58 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4f5b :                 >skip3247
                       >
4f5b : 68              >            pla         ;load status
                       >            eor_flag 0
4f5c : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4f5e : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4f61 : f003            >        beq skip3250
                       >        trap            ;failed not equal (non zero)
4f63 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4f66 :                 >skip3250
                       >
                        
4f66 : ca                       dex
4f67 : 10df                     bpl tora8
4f69 : a203                     ldx #3
4f6b :                  tora9
                                set_ax  absORa,$ff
                       >            load_flag $ff
4f6b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4f6d : 48              >            pha         ;use stack to load status
4f6e : bd4702          >            lda absORa,x    ;precharge accu
4f71 : 28              >            plp
                        
4f72 : 1d3b02                   ora absOR,x
                                tst_ax  absrlo,absflo,$ff-fnz
4f75 : 08              >            php         ;save flags
4f76 : dd5302          >            cmp absrlo,x    ;test result
                       >            trap_ne
4f79 : f003            >        beq skip3255
                       >        trap            ;failed not equal (non zero)
4f7b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4f7e :                 >skip3255
                       >
4f7e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4f7f : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4f81 : dd5702          >            cmp absflo,x    ;test flags
                       >            trap_ne     ;
4f84 : f003            >        beq skip3258
                       >        trap            ;failed not equal (non zero)
4f86 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4f89 :                 >skip3258
                       >
                        
4f89 : ca                       dex
4f8a : 10df                     bpl tora9
                        
4f8c : a003                     ldy #3      ;abs,y
4f8e :                  tora10
                                set_ay  absORa,0
                       >            load_flag 0
4f8e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4f90 : 48              >            pha         ;use stack to load status
4f91 : b94702          >            lda absORa,y    ;precharge accu
4f94 : 28              >            plp
                        
4f95 : 193b02                   ora absOR,y
                                tst_ay  absrlo,absflo,0
4f98 : 08              >            php         ;save flags
4f99 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4f9c : f003            >        beq skip3263
                       >        trap            ;failed not equal (non zero)
4f9e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4fa1 :                 >skip3263
                       >
4fa1 : 68              >            pla         ;load status
                       >            eor_flag 0
4fa2 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4fa4 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
4fa7 : f003            >        beq skip3266
                       >        trap            ;failed not equal (non zero)
4fa9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4fac :                 >skip3266
                       >
                        
4fac : 88                       dey
4fad : 10df                     bpl tora10
4faf : a003                     ldy #3
4fb1 :                  tora11
                                set_ay  absORa,$ff
                       >            load_flag $ff
4fb1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4fb3 : 48              >            pha         ;use stack to load status
4fb4 : b94702          >            lda absORa,y    ;precharge accu
4fb7 : 28              >            plp
                        
4fb8 : 193b02                   ora absOR,y
                                tst_ay  absrlo,absflo,$ff-fnz
4fbb : 08              >            php         ;save flags
4fbc : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4fbf : f003            >        beq skip3271
                       >        trap            ;failed not equal (non zero)
4fc1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4fc4 :                 >skip3271
                       >
4fc4 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4fc5 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4fc7 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
4fca : f003            >        beq skip3274
                       >        trap            ;failed not equal (non zero)
4fcc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4fcf :                 >skip3274
                       >
                        
4fcf : 88                       dey
4fd0 : 10df                     bpl tora11
                        
4fd2 : a206                     ldx #6      ;(zp,x)
4fd4 : a003                     ldy #3
4fd6 :                  tora12
                                set_ay  absORa,0
                       >            load_flag 0
4fd6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
4fd8 : 48              >            pha         ;use stack to load status
4fd9 : b94702          >            lda absORa,y    ;precharge accu
4fdc : 28              >            plp
                        
4fdd : 0150                     ora (indOR,x)
                                tst_ay  absrlo,absflo,0
4fdf : 08              >            php         ;save flags
4fe0 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4fe3 : f003            >        beq skip3279
                       >        trap            ;failed not equal (non zero)
4fe5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4fe8 :                 >skip3279
                       >
4fe8 : 68              >            pla         ;load status
                       >            eor_flag 0
4fe9 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4feb : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
4fee : f003            >        beq skip3282
                       >        trap            ;failed not equal (non zero)
4ff0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4ff3 :                 >skip3282
                       >
                        
4ff3 : ca                       dex
4ff4 : ca                       dex
4ff5 : 88                       dey
4ff6 : 10de                     bpl tora12
4ff8 : a206                     ldx #6
4ffa : a003                     ldy #3
4ffc :                  tora13
                                set_ay  absORa,$ff
                       >            load_flag $ff
4ffc : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4ffe : 48              >            pha         ;use stack to load status
4fff : b94702          >            lda absORa,y    ;precharge accu
5002 : 28              >            plp
                        
5003 : 0150                     ora (indOR,x)
                                tst_ay  absrlo,absflo,$ff-fnz
5005 : 08              >            php         ;save flags
5006 : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
5009 : f003            >        beq skip3287
                       >        trap            ;failed not equal (non zero)
500b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
500e :                 >skip3287
                       >
500e : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
500f : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
5011 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
5014 : f003            >        beq skip3290
                       >        trap            ;failed not equal (non zero)
5016 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5019 :                 >skip3290
                       >
                        
5019 : ca                       dex
501a : ca                       dex
501b : 88                       dey
501c : 10de                     bpl tora13
                        
501e : a003                     ldy #3      ;(zp),y
5020 :                  tora14
                                set_ay  absORa,0
                       >            load_flag 0
5020 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
5022 : 48              >            pha         ;use stack to load status
5023 : b94702          >            lda absORa,y    ;precharge accu
5026 : 28              >            plp
                        
5027 : 1150                     ora (indOR),y
                                tst_ay  absrlo,absflo,0
5029 : 08              >            php         ;save flags
502a : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
502d : f003            >        beq skip3295
                       >        trap            ;failed not equal (non zero)
502f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5032 :                 >skip3295
                       >
5032 : 68              >            pla         ;load status
                       >            eor_flag 0
5033 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
5035 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
5038 : f003            >        beq skip3298
                       >        trap            ;failed not equal (non zero)
503a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
503d :                 >skip3298
                       >
                        
503d : 88                       dey
503e : 10e0                     bpl tora14
5040 : a003                     ldy #3
5042 :                  tora15
                                set_ay  absORa,$ff
                       >            load_flag $ff
5042 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5044 : 48              >            pha         ;use stack to load status
5045 : b94702          >            lda absORa,y    ;precharge accu
5048 : 28              >            plp
                        
5049 : 1150                     ora (indOR),y
                                tst_ay  absrlo,absflo,$ff-fnz
504b : 08              >            php         ;save flags
504c : d95302          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
504f : f003            >        beq skip3303
                       >        trap            ;failed not equal (non zero)
5051 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5054 :                 >skip3303
                       >
5054 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
5055 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
5057 : d95702          >            cmp absflo,y    ;test flags
                       >            trap_ne
505a : f003            >        beq skip3306
                       >        trap            ;failed not equal (non zero)
505c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
505f :                 >skip3306
                       >
                        
505f : 88                       dey
5060 : 10e0                     bpl tora15
                            if I_flag = 3
5062 : 58                       cli
                            endif                
                                next_test
5063 : ad0002          >            lda test_case   ;previous test
5066 : c928            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
5068 : f003            >        beq skip3309
                       >        trap            ;failed not equal (non zero)
506a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
506d :                 >skip3309
                       >
0029 =                 >test_num = test_num + 1
506d : a929            >            lda #test_num   ;*** next tests' number
506f : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
5072 : 8d04ef            sta $ef04
5075 : 66756c6c206269..  db "full binary add/subtract test", 10, 0
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
5094 : d8                       cld
5095 : a214                     ldx #ad2        ;for indexed test
5097 : a0ff                     ldy #$ff        ;max range
5099 : a900                     lda #0          ;start with adding zeroes & no carry
509b : 8512                     sta adfc        ;carry in - for diag
509d : 8513                     sta ad1         ;operand 1 - accumulator
509f : 8514                     sta ad2         ;operand 2 - memory or immediate
50a1 : 8d0302                   sta ada2        ;non zp
50a4 : 8515                     sta adrl        ;expected result bits 0-7
50a6 : 8516                     sta adrh        ;expected result bit 8 (carry out)
50a8 : a9ff                     lda #$ff        ;complemented operand 2 for subtract
50aa : 8518                     sta sb2
50ac : 8d0402                   sta sba2        ;non zp
50af : a902                     lda #2          ;expected Z-flag
50b1 : 8517                     sta adrf
50b3 : 18               tadd    clc             ;test with carry clear
50b4 : 20ee53                   jsr chkadd
50b7 : e612                     inc adfc        ;now with carry
50b9 : e615                     inc adrl        ;result +1
50bb : 08                       php             ;save N & Z from low result
50bc : 08                       php
50bd : 68                       pla             ;accu holds expected flags
50be : 2982                     and #$82        ;mask N & Z
50c0 : 28                       plp
50c1 : d002                     bne tadd1
50c3 : e616                     inc adrh        ;result bit 8 - carry
50c5 : 0516             tadd1   ora adrh        ;merge C to expected flags
50c7 : 8517                     sta adrf        ;save expected flags except overflow
50c9 : 38                       sec             ;test with carry set
50ca : 20ee53                   jsr chkadd
50cd : c612                     dec adfc        ;same for operand +1 but no carry
50cf : e613                     inc ad1
50d1 : d0e0                     bne tadd        ;iterate op1
50d3 : a900                     lda #0          ;preset result to op2 when op1 = 0
50d5 : 8516                     sta adrh
50d7 : ee0302                   inc ada2
50da : e614                     inc ad2
50dc : 08                       php             ;save NZ as operand 2 becomes the new result
50dd : 68                       pla
50de : 2982                     and #$82        ;mask N00000Z0
50e0 : 8517                     sta adrf        ;no need to check carry as we are adding to 0
50e2 : c618                     dec sb2         ;complement subtract operand 2
50e4 : ce0402                   dec sba2
50e7 : a514                     lda ad2         
50e9 : 8515                     sta adrl
50eb : d0c6                     bne tadd        ;iterate op2
                                next_test
50ed : ad0002          >            lda test_case   ;previous test
50f0 : c929            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
50f2 : f003            >        beq skip3312
                       >        trap            ;failed not equal (non zero)
50f4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
50f7 :                 >skip3312
                       >
002a =                 >test_num = test_num + 1
50f7 : a92a            >            lda #test_num   ;*** next tests' number
50f9 : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
50fc : 8d04ef            sta $ef04
50ff : 646563696d616c..  db "decimal add/subtract test", 10, 0
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, N V Z flags are ignored
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
511a : f8                       sed 
511b : a214                     ldx #ad2        ;for indexed test
511d : a0ff                     ldy #$ff        ;max range
511f : a999                     lda #$99        ;start with adding 99 to 99 with carry
5121 : 8513                     sta ad1         ;operand 1 - accumulator
5123 : 8514                     sta ad2         ;operand 2 - memory or immediate
5125 : 8d0302                   sta ada2        ;non zp
5128 : 8515                     sta adrl        ;expected result bits 0-7
512a : a901                     lda #1          ;set carry in & out
512c : 8512                     sta adfc        ;carry in - for diag
512e : 8516                     sta adrh        ;expected result bit 8 (carry out)
5130 : a900                     lda #0          ;complemented operand 2 for subtract
5132 : 8518                     sta sb2
5134 : 8d0402                   sta sba2        ;non zp
5137 : 38               tdad    sec             ;test with carry set
5138 : 205d52                   jsr chkdad
513b : c612                     dec adfc        ;now with carry clear
513d : a515                     lda adrl        ;decimal adjust result
513f : d008                     bne tdad1       ;skip clear carry & preset result 99 (9A-1)
5141 : c616                     dec adrh
5143 : a999                     lda #$99
5145 : 8515                     sta adrl
5147 : d012                     bne tdad3
5149 : 290f             tdad1   and #$f         ;lower nibble mask
514b : d00c                     bne tdad2       ;no decimal adjust needed
514d : c615                     dec adrl        ;decimal adjust (?0-6)
514f : c615                     dec adrl
5151 : c615                     dec adrl
5153 : c615                     dec adrl
5155 : c615                     dec adrl
5157 : c615                     dec adrl
5159 : c615             tdad2   dec adrl        ;result -1
515b : 18               tdad3   clc             ;test with carry clear
515c : 205d52                   jsr chkdad
515f : e612                     inc adfc        ;same for operand -1 but with carry
5161 : a513                     lda ad1         ;decimal adjust operand 1
5163 : f015                     beq tdad5       ;iterate operand 2
5165 : 290f                     and #$f         ;lower nibble mask
5167 : d00c                     bne tdad4       ;skip decimal adjust
5169 : c613                     dec ad1         ;decimal adjust (?0-6)
516b : c613                     dec ad1
516d : c613                     dec ad1
516f : c613                     dec ad1
5171 : c613                     dec ad1
5173 : c613                     dec ad1
5175 : c613             tdad4   dec ad1         ;operand 1 -1
5177 : 4c3751                   jmp tdad        ;iterate op1
                        
517a : a999             tdad5   lda #$99        ;precharge op1 max
517c : 8513                     sta ad1
517e : a514                     lda ad2         ;decimal adjust operand 2
5180 : f030                     beq tdad7       ;end of iteration
5182 : 290f                     and #$f         ;lower nibble mask
5184 : d018                     bne tdad6       ;skip decimal adjust
5186 : c614                     dec ad2         ;decimal adjust (?0-6)
5188 : c614                     dec ad2
518a : c614                     dec ad2
518c : c614                     dec ad2
518e : c614                     dec ad2
5190 : c614                     dec ad2
5192 : e618                     inc sb2         ;complemented decimal adjust for subtract (?9+6)
5194 : e618                     inc sb2
5196 : e618                     inc sb2
5198 : e618                     inc sb2
519a : e618                     inc sb2
519c : e618                     inc sb2
519e : c614             tdad6   dec ad2         ;operand 2 -1
51a0 : e618                     inc sb2         ;complemented operand for subtract
51a2 : a518                     lda sb2
51a4 : 8d0402                   sta sba2        ;copy as non zp operand
51a7 : a514                     lda ad2
51a9 : 8d0302                   sta ada2        ;copy as non zp operand
51ac : 8515                     sta adrl        ;new result since op1+carry=00+carry +op2=op2
51ae : e616                     inc adrh        ;result carry
51b0 : d085                     bne tdad        ;iterate op2
51b2 :                  tdad7
                                next_test
51b2 : ad0002          >            lda test_case   ;previous test
51b5 : c92a            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
51b7 : f003            >        beq skip3315
                       >        trap            ;failed not equal (non zero)
51b9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
51bc :                 >skip3315
                       >
002b =                 >test_num = test_num + 1
51bc : a92b            >            lda #test_num   ;*** next tests' number
51be : 8d0002          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
51c1 : 8d04ef            sta $ef04
51c4 : 646563696d616c..  db "decimal/binary switch test", 10, 0
                        ; tests CLD, SED, PLP, RTI to properly switch between decimal & binary opcode
                        ;   tables
51e0 : 18                       clc
51e1 : d8                       cld
51e2 : 08                       php
51e3 : a955                     lda #$55
51e5 : 6955                     adc #$55
51e7 : c9aa                     cmp #$aa
                                trap_ne         ;expected binary result after cld
51e9 : f003            >        beq skip3317
                       >        trap            ;failed not equal (non zero)
51eb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
51ee :                 >skip3317
                        
51ee : 18                       clc
51ef : f8                       sed
51f0 : 08                       php
51f1 : a955                     lda #$55
51f3 : 6955                     adc #$55
51f5 : c910                     cmp #$10
                                trap_ne         ;expected decimal result after sed
51f7 : f003            >        beq skip3319
                       >        trap            ;failed not equal (non zero)
51f9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
51fc :                 >skip3319
                        
51fc : d8                       cld
51fd : 28                       plp
51fe : a955                     lda #$55
5200 : 6955                     adc #$55
5202 : c910                     cmp #$10
                                trap_ne         ;expected decimal result after plp D=1
5204 : f003            >        beq skip3321
                       >        trap            ;failed not equal (non zero)
5206 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5209 :                 >skip3321
                        
5209 : 28                       plp
520a : a955                     lda #$55
520c : 6955                     adc #$55
520e : c9aa                     cmp #$aa
                                trap_ne         ;expected binary result after plp D=0
5210 : f003            >        beq skip3323
                       >        trap            ;failed not equal (non zero)
5212 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5215 :                 >skip3323
                        
5215 : 18                       clc
5216 : a952                     lda #hi bin_rti_ret ;emulated interrupt for rti
5218 : 48                       pha
5219 : a933                     lda #lo bin_rti_ret
521b : 48                       pha
521c : 08                       php
521d : f8                       sed
521e : a952                     lda #hi dec_rti_ret ;emulated interrupt for rti
5220 : 48                       pha
5221 : a927                     lda #lo dec_rti_ret
5223 : 48                       pha
5224 : 08                       php
5225 : d8                       cld
5226 : 40                       rti
5227 :                  dec_rti_ret
5227 : a955                     lda #$55
5229 : 6955                     adc #$55
522b : c910                     cmp #$10
                                trap_ne         ;expected decimal result after rti D=1
522d : f003            >        beq skip3325
                       >        trap            ;failed not equal (non zero)
522f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5232 :                 >skip3325
                        
5232 : 40                       rti
5233 :                  bin_rti_ret        
5233 : a955                     lda #$55
5235 : 6955                     adc #$55
5237 : c9aa                     cmp #$aa
                                trap_ne         ;expected binary result after rti D=0
5239 : f003            >        beq skip3327
                       >        trap            ;failed not equal (non zero)
523b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
523e :                 >skip3327
                        
                        
523e : ad0002                   lda test_case
5241 : c92b                     cmp #test_num
                                trap_ne         ;previous test is out of sequence
5243 : f003            >        beq skip3329
                       >        trap            ;failed not equal (non zero)
5245 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5248 :                 >skip3329
                        
5248 : a9f0                     lda #$f0        ;mark opcode testing complete
524a : 8d0002                   sta test_case
                                
                        ; final RAM integrity test
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                                check_ram
                       >            ;RAM check disabled - RAM size not set
                        
                        ; *** DEBUG INFO ***
                        ; to debug checksum errors uncomment check_ram in the next_test macro to 
                        ; narrow down the responsible opcode.
                        ; may give false errors when monitor, OS or other background activity is
                        ; allowed during previous tests.
                        
                        
                        ; S U C C E S S ************************************************       
                        ; -------------       
                                success         ;if you get here everything went well
524d : 8d04ef          > sta $ef04
5250 : 73756363657373..> db "success", 10, 0
5259 : db              >        db $db
                       >        ;jsr report_success
                        
                        ; -------------       
                        ; S U C C E S S ************************************************ 
525a : 4c0010                   jmp start       ;run again      
                        
                        ; core subroutine of the decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, N V Z flags are ignored
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
525d :                  chkdad
                        ; decimal ADC / SBC zp
525d : 08                       php             ;save carry for subtract
525e : a513                     lda ad1
5260 : 6514                     adc ad2         ;perform add
5262 : 08                       php          
5263 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
5265 : f003            >        beq skip3333
                       >        trap            ;failed not equal (non zero)
5267 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
526a :                 >skip3333
                        
526a : 68                       pla             ;check flags
526b : 2901                     and #1          ;mask carry
526d : c516                     cmp adrh
                                trap_ne         ;bad carry
526f : f003            >        beq skip3335
                       >        trap            ;failed not equal (non zero)
5271 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5274 :                 >skip3335
                        
5274 : 28                       plp
5275 : 08                       php             ;save carry for next add
5276 : a513                     lda ad1
5278 : e518                     sbc sb2         ;perform subtract
527a : 08                       php          
527b : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
527d : f003            >        beq skip3337
                       >        trap            ;failed not equal (non zero)
527f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5282 :                 >skip3337
                        
5282 : 68                       pla             ;check flags
5283 : 2901                     and #1          ;mask carry
5285 : c516                     cmp adrh
                                trap_ne         ;bad flags
5287 : f003            >        beq skip3339
                       >        trap            ;failed not equal (non zero)
5289 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
528c :                 >skip3339
                        
528c : 28                       plp
                        ; decimal ADC / SBC abs
528d : 08                       php             ;save carry for subtract
528e : a513                     lda ad1
5290 : 6d0302                   adc ada2        ;perform add
5293 : 08                       php          
5294 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
5296 : f003            >        beq skip3341
                       >        trap            ;failed not equal (non zero)
5298 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
529b :                 >skip3341
                        
529b : 68                       pla             ;check flags
529c : 2901                     and #1          ;mask carry
529e : c516                     cmp adrh
                                trap_ne         ;bad carry
52a0 : f003            >        beq skip3343
                       >        trap            ;failed not equal (non zero)
52a2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
52a5 :                 >skip3343
                        
52a5 : 28                       plp
52a6 : 08                       php             ;save carry for next add
52a7 : a513                     lda ad1
52a9 : ed0402                   sbc sba2        ;perform subtract
52ac : 08                       php          
52ad : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
52af : f003            >        beq skip3345
                       >        trap            ;failed not equal (non zero)
52b1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
52b4 :                 >skip3345
                        
52b4 : 68                       pla             ;check flags
52b5 : 2901                     and #1          ;mask carry
52b7 : c516                     cmp adrh
                                trap_ne         ;bad carry
52b9 : f003            >        beq skip3347
                       >        trap            ;failed not equal (non zero)
52bb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
52be :                 >skip3347
                        
52be : 28                       plp
                        ; decimal ADC / SBC #
52bf : 08                       php             ;save carry for subtract
52c0 : a514                     lda ad2
52c2 : 8dc852                   sta chkdadi     ;self modify immediate
52c5 : a513                     lda ad1
52c8 =                  chkdadi = * + 1         ;operand of the immediate ADC
52c7 : 6900                     adc #0          ;perform add
52c9 : 08                       php          
52ca : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
52cc : f003            >        beq skip3349
                       >        trap            ;failed not equal (non zero)
52ce : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
52d1 :                 >skip3349
                        
52d1 : 68                       pla             ;check flags
52d2 : 2901                     and #1          ;mask carry
52d4 : c516                     cmp adrh
                                trap_ne         ;bad carry
52d6 : f003            >        beq skip3351
                       >        trap            ;failed not equal (non zero)
52d8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
52db :                 >skip3351
                        
52db : 28                       plp
52dc : 08                       php             ;save carry for next add
52dd : a518                     lda sb2
52df : 8de552                   sta chkdsbi     ;self modify immediate
52e2 : a513                     lda ad1
52e5 =                  chkdsbi = * + 1         ;operand of the immediate SBC
52e4 : e900                     sbc #0          ;perform subtract
52e6 : 08                       php          
52e7 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
52e9 : f003            >        beq skip3353
                       >        trap            ;failed not equal (non zero)
52eb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
52ee :                 >skip3353
                        
52ee : 68                       pla             ;check flags
52ef : 2901                     and #1          ;mask carry
52f1 : c516                     cmp adrh
                                trap_ne         ;bad carry
52f3 : f003            >        beq skip3355
                       >        trap            ;failed not equal (non zero)
52f5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
52f8 :                 >skip3355
                        
52f8 : 28                       plp
                        ; decimal ADC / SBC zp,x
52f9 : 08                       php             ;save carry for subtract
52fa : a513                     lda ad1
52fc : 7500                     adc 0,x         ;perform add
52fe : 08                       php          
52ff : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
5301 : f003            >        beq skip3357
                       >        trap            ;failed not equal (non zero)
5303 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5306 :                 >skip3357
                        
5306 : 68                       pla             ;check flags
5307 : 2901                     and #1          ;mask carry
5309 : c516                     cmp adrh
                                trap_ne         ;bad carry
530b : f003            >        beq skip3359
                       >        trap            ;failed not equal (non zero)
530d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5310 :                 >skip3359
                        
5310 : 28                       plp
5311 : 08                       php             ;save carry for next add
5312 : a513                     lda ad1
5314 : f504                     sbc sb2-ad2,x   ;perform subtract
5316 : 08                       php          
5317 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
5319 : f003            >        beq skip3361
                       >        trap            ;failed not equal (non zero)
531b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
531e :                 >skip3361
                        
531e : 68                       pla             ;check flags
531f : 2901                     and #1          ;mask carry
5321 : c516                     cmp adrh
                                trap_ne         ;bad carry
5323 : f003            >        beq skip3363
                       >        trap            ;failed not equal (non zero)
5325 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5328 :                 >skip3363
                        
5328 : 28                       plp
                        ; decimal ADC / SBC abs,x
5329 : 08                       php             ;save carry for subtract
532a : a513                     lda ad1
532c : 7def01                   adc ada2-ad2,x  ;perform add
532f : 08                       php          
5330 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
5332 : f003            >        beq skip3365
                       >        trap            ;failed not equal (non zero)
5334 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5337 :                 >skip3365
                        
5337 : 68                       pla             ;check flags
5338 : 2901                     and #1          ;mask carry
533a : c516                     cmp adrh
                                trap_ne         ;bad carry
533c : f003            >        beq skip3367
                       >        trap            ;failed not equal (non zero)
533e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5341 :                 >skip3367
                        
5341 : 28                       plp
5342 : 08                       php             ;save carry for next add
5343 : a513                     lda ad1
5345 : fdf001                   sbc sba2-ad2,x  ;perform subtract
5348 : 08                       php          
5349 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
534b : f003            >        beq skip3369
                       >        trap            ;failed not equal (non zero)
534d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5350 :                 >skip3369
                        
5350 : 68                       pla             ;check flags
5351 : 2901                     and #1          ;mask carry
5353 : c516                     cmp adrh
                                trap_ne         ;bad carry
5355 : f003            >        beq skip3371
                       >        trap            ;failed not equal (non zero)
5357 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
535a :                 >skip3371
                        
535a : 28                       plp
                        ; decimal ADC / SBC abs,y
535b : 08                       php             ;save carry for subtract
535c : a513                     lda ad1
535e : 790401                   adc ada2-$ff,y  ;perform add
5361 : 08                       php          
5362 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
5364 : f003            >        beq skip3373
                       >        trap            ;failed not equal (non zero)
5366 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5369 :                 >skip3373
                        
5369 : 68                       pla             ;check flags
536a : 2901                     and #1          ;mask carry
536c : c516                     cmp adrh
                                trap_ne         ;bad carry
536e : f003            >        beq skip3375
                       >        trap            ;failed not equal (non zero)
5370 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5373 :                 >skip3375
                        
5373 : 28                       plp
5374 : 08                       php             ;save carry for next add
5375 : a513                     lda ad1
5377 : f90501                   sbc sba2-$ff,y  ;perform subtract
537a : 08                       php          
537b : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
537d : f003            >        beq skip3377
                       >        trap            ;failed not equal (non zero)
537f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5382 :                 >skip3377
                        
5382 : 68                       pla             ;check flags
5383 : 2901                     and #1          ;mask carry
5385 : c516                     cmp adrh
                                trap_ne         ;bad carry
5387 : f003            >        beq skip3379
                       >        trap            ;failed not equal (non zero)
5389 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
538c :                 >skip3379
                        
538c : 28                       plp
                        ; decimal ADC / SBC (zp,x)
538d : 08                       php             ;save carry for subtract
538e : a513                     lda ad1
5390 : 6144                     adc (lo adi2-ad2,x) ;perform add
5392 : 08                       php          
5393 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
5395 : f003            >        beq skip3381
                       >        trap            ;failed not equal (non zero)
5397 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
539a :                 >skip3381
                        
539a : 68                       pla             ;check flags
539b : 2901                     and #1          ;mask carry
539d : c516                     cmp adrh
                                trap_ne         ;bad carry
539f : f003            >        beq skip3383
                       >        trap            ;failed not equal (non zero)
53a1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
53a4 :                 >skip3383
                        
53a4 : 28                       plp
53a5 : 08                       php             ;save carry for next add
53a6 : a513                     lda ad1
53a8 : e146                     sbc (lo sbi2-ad2,x) ;perform subtract
53aa : 08                       php          
53ab : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
53ad : f003            >        beq skip3385
                       >        trap            ;failed not equal (non zero)
53af : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
53b2 :                 >skip3385
                        
53b2 : 68                       pla             ;check flags
53b3 : 2901                     and #1          ;mask carry
53b5 : c516                     cmp adrh
                                trap_ne         ;bad carry
53b7 : f003            >        beq skip3387
                       >        trap            ;failed not equal (non zero)
53b9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
53bc :                 >skip3387
                        
53bc : 28                       plp
                        ; decimal ADC / SBC (abs),y
53bd : 08                       php             ;save carry for subtract
53be : a513                     lda ad1
53c0 : 715c                     adc (adiy2),y   ;perform add
53c2 : 08                       php          
53c3 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
53c5 : f003            >        beq skip3389
                       >        trap            ;failed not equal (non zero)
53c7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
53ca :                 >skip3389
                        
53ca : 68                       pla             ;check flags
53cb : 2901                     and #1          ;mask carry
53cd : c516                     cmp adrh
                                trap_ne         ;bad carry
53cf : f003            >        beq skip3391
                       >        trap            ;failed not equal (non zero)
53d1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
53d4 :                 >skip3391
                        
53d4 : 28                       plp
53d5 : 08                       php             ;save carry for next add
53d6 : a513                     lda ad1
53d8 : f15e                     sbc (sbiy2),y   ;perform subtract
53da : 08                       php          
53db : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
53dd : f003            >        beq skip3393
                       >        trap            ;failed not equal (non zero)
53df : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
53e2 :                 >skip3393
                        
53e2 : 68                       pla             ;check flags
53e3 : 2901                     and #1          ;mask carry
53e5 : c516                     cmp adrh
                                trap_ne         ;bad carry
53e7 : f003            >        beq skip3395
                       >        trap            ;failed not equal (non zero)
53e9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
53ec :                 >skip3395
                        
53ec : 28                       plp
53ed : 60                       rts
                        
                        ; core subroutine of the full binary add/subtract test
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
53ee : a517             chkadd  lda adrf        ;add V-flag if overflow
53f0 : 2983                     and #$83        ;keep N-----ZC / clear V
53f2 : 48                       pha
53f3 : a513                     lda ad1         ;test sign unequal between operands
53f5 : 4514                     eor ad2
53f7 : 300a                     bmi ckad1       ;no overflow possible - operands have different sign
53f9 : a513                     lda ad1         ;test sign equal between operands and result
53fb : 4515                     eor adrl
53fd : 1004                     bpl ckad1       ;no overflow occured - operand and result have same sign
53ff : 68                       pla
5400 : 0940                     ora #$40        ;set V
5402 : 48                       pha
5403 : 68               ckad1   pla
5404 : 8517                     sta adrf        ;save expected flags
                        ; binary ADC / SBC zp
5406 : 08                       php             ;save carry for subtract
5407 : a513                     lda ad1
5409 : 6514                     adc ad2         ;perform add
540b : 08                       php          
540c : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
540e : f003            >        beq skip3397
                       >        trap            ;failed not equal (non zero)
5410 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5413 :                 >skip3397
                        
5413 : 68                       pla             ;check flags
5414 : 29c3                     and #$c3        ;mask NV----ZC
5416 : c517                     cmp adrf
                                trap_ne         ;bad flags
5418 : f003            >        beq skip3399
                       >        trap            ;failed not equal (non zero)
541a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
541d :                 >skip3399
                        
541d : 28                       plp
541e : 08                       php             ;save carry for next add
541f : a513                     lda ad1
5421 : e518                     sbc sb2         ;perform subtract
5423 : 08                       php          
5424 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
5426 : f003            >        beq skip3401
                       >        trap            ;failed not equal (non zero)
5428 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
542b :                 >skip3401
                        
542b : 68                       pla             ;check flags
542c : 29c3                     and #$c3        ;mask NV----ZC
542e : c517                     cmp adrf
                                trap_ne         ;bad flags
5430 : f003            >        beq skip3403
                       >        trap            ;failed not equal (non zero)
5432 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5435 :                 >skip3403
                        
5435 : 28                       plp
                        ; binary ADC / SBC abs
5436 : 08                       php             ;save carry for subtract
5437 : a513                     lda ad1
5439 : 6d0302                   adc ada2        ;perform add
543c : 08                       php          
543d : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
543f : f003            >        beq skip3405
                       >        trap            ;failed not equal (non zero)
5441 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5444 :                 >skip3405
                        
5444 : 68                       pla             ;check flags
5445 : 29c3                     and #$c3        ;mask NV----ZC
5447 : c517                     cmp adrf
                                trap_ne         ;bad flags
5449 : f003            >        beq skip3407
                       >        trap            ;failed not equal (non zero)
544b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
544e :                 >skip3407
                        
544e : 28                       plp
544f : 08                       php             ;save carry for next add
5450 : a513                     lda ad1
5452 : ed0402                   sbc sba2        ;perform subtract
5455 : 08                       php          
5456 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
5458 : f003            >        beq skip3409
                       >        trap            ;failed not equal (non zero)
545a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
545d :                 >skip3409
                        
545d : 68                       pla             ;check flags
545e : 29c3                     and #$c3        ;mask NV----ZC
5460 : c517                     cmp adrf
                                trap_ne         ;bad flags
5462 : f003            >        beq skip3411
                       >        trap            ;failed not equal (non zero)
5464 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5467 :                 >skip3411
                        
5467 : 28                       plp
                        ; binary ADC / SBC #
5468 : 08                       php             ;save carry for subtract
5469 : a514                     lda ad2
546b : 8d7154                   sta chkadi      ;self modify immediate
546e : a513                     lda ad1
5471 =                  chkadi  = * + 1         ;operand of the immediate ADC
5470 : 6900                     adc #0          ;perform add
5472 : 08                       php          
5473 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
5475 : f003            >        beq skip3413
                       >        trap            ;failed not equal (non zero)
5477 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
547a :                 >skip3413
                        
547a : 68                       pla             ;check flags
547b : 29c3                     and #$c3        ;mask NV----ZC
547d : c517                     cmp adrf
                                trap_ne         ;bad flags
547f : f003            >        beq skip3415
                       >        trap            ;failed not equal (non zero)
5481 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5484 :                 >skip3415
                        
5484 : 28                       plp
5485 : 08                       php             ;save carry for next add
5486 : a518                     lda sb2
5488 : 8d8e54                   sta chksbi      ;self modify immediate
548b : a513                     lda ad1
548e =                  chksbi  = * + 1         ;operand of the immediate SBC
548d : e900                     sbc #0          ;perform subtract
548f : 08                       php          
5490 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
5492 : f003            >        beq skip3417
                       >        trap            ;failed not equal (non zero)
5494 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5497 :                 >skip3417
                        
5497 : 68                       pla             ;check flags
5498 : 29c3                     and #$c3        ;mask NV----ZC
549a : c517                     cmp adrf
                                trap_ne         ;bad flags
549c : f003            >        beq skip3419
                       >        trap            ;failed not equal (non zero)
549e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
54a1 :                 >skip3419
                        
54a1 : 28                       plp
                        ; binary ADC / SBC zp,x
54a2 : 08                       php             ;save carry for subtract
54a3 : a513                     lda ad1
54a5 : 7500                     adc 0,x         ;perform add
54a7 : 08                       php          
54a8 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
54aa : f003            >        beq skip3421
                       >        trap            ;failed not equal (non zero)
54ac : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
54af :                 >skip3421
                        
54af : 68                       pla             ;check flags
54b0 : 29c3                     and #$c3        ;mask NV----ZC
54b2 : c517                     cmp adrf
                                trap_ne         ;bad flags
54b4 : f003            >        beq skip3423
                       >        trap            ;failed not equal (non zero)
54b6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
54b9 :                 >skip3423
                        
54b9 : 28                       plp
54ba : 08                       php             ;save carry for next add
54bb : a513                     lda ad1
54bd : f504                     sbc sb2-ad2,x   ;perform subtract
54bf : 08                       php          
54c0 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
54c2 : f003            >        beq skip3425
                       >        trap            ;failed not equal (non zero)
54c4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
54c7 :                 >skip3425
                        
54c7 : 68                       pla             ;check flags
54c8 : 29c3                     and #$c3        ;mask NV----ZC
54ca : c517                     cmp adrf
                                trap_ne         ;bad flags
54cc : f003            >        beq skip3427
                       >        trap            ;failed not equal (non zero)
54ce : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
54d1 :                 >skip3427
                        
54d1 : 28                       plp
                        ; binary ADC / SBC abs,x
54d2 : 08                       php             ;save carry for subtract
54d3 : a513                     lda ad1
54d5 : 7def01                   adc ada2-ad2,x  ;perform add
54d8 : 08                       php          
54d9 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
54db : f003            >        beq skip3429
                       >        trap            ;failed not equal (non zero)
54dd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
54e0 :                 >skip3429
                        
54e0 : 68                       pla             ;check flags
54e1 : 29c3                     and #$c3        ;mask NV----ZC
54e3 : c517                     cmp adrf
                                trap_ne         ;bad flags
54e5 : f003            >        beq skip3431
                       >        trap            ;failed not equal (non zero)
54e7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
54ea :                 >skip3431
                        
54ea : 28                       plp
54eb : 08                       php             ;save carry for next add
54ec : a513                     lda ad1
54ee : fdf001                   sbc sba2-ad2,x  ;perform subtract
54f1 : 08                       php          
54f2 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
54f4 : f003            >        beq skip3433
                       >        trap            ;failed not equal (non zero)
54f6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
54f9 :                 >skip3433
                        
54f9 : 68                       pla             ;check flags
54fa : 29c3                     and #$c3        ;mask NV----ZC
54fc : c517                     cmp adrf
                                trap_ne         ;bad flags
54fe : f003            >        beq skip3435
                       >        trap            ;failed not equal (non zero)
5500 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5503 :                 >skip3435
                        
5503 : 28                       plp
                        ; binary ADC / SBC abs,y
5504 : 08                       php             ;save carry for subtract
5505 : a513                     lda ad1
5507 : 790401                   adc ada2-$ff,y  ;perform add
550a : 08                       php          
550b : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
550d : f003            >        beq skip3437
                       >        trap            ;failed not equal (non zero)
550f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5512 :                 >skip3437
                        
5512 : 68                       pla             ;check flags
5513 : 29c3                     and #$c3        ;mask NV----ZC
5515 : c517                     cmp adrf
                                trap_ne         ;bad flags
5517 : f003            >        beq skip3439
                       >        trap            ;failed not equal (non zero)
5519 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
551c :                 >skip3439
                        
551c : 28                       plp
551d : 08                       php             ;save carry for next add
551e : a513                     lda ad1
5520 : f90501                   sbc sba2-$ff,y  ;perform subtract
5523 : 08                       php          
5524 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
5526 : f003            >        beq skip3441
                       >        trap            ;failed not equal (non zero)
5528 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
552b :                 >skip3441
                        
552b : 68                       pla             ;check flags
552c : 29c3                     and #$c3        ;mask NV----ZC
552e : c517                     cmp adrf
                                trap_ne         ;bad flags
5530 : f003            >        beq skip3443
                       >        trap            ;failed not equal (non zero)
5532 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5535 :                 >skip3443
                        
5535 : 28                       plp
                        ; binary ADC / SBC (zp,x)
5536 : 08                       php             ;save carry for subtract
5537 : a513                     lda ad1
5539 : 6144                     adc (lo adi2-ad2,x) ;perform add
553b : 08                       php          
553c : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
553e : f003            >        beq skip3445
                       >        trap            ;failed not equal (non zero)
5540 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5543 :                 >skip3445
                        
5543 : 68                       pla             ;check flags
5544 : 29c3                     and #$c3        ;mask NV----ZC
5546 : c517                     cmp adrf
                                trap_ne         ;bad flags
5548 : f003            >        beq skip3447
                       >        trap            ;failed not equal (non zero)
554a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
554d :                 >skip3447
                        
554d : 28                       plp
554e : 08                       php             ;save carry for next add
554f : a513                     lda ad1
5551 : e146                     sbc (lo sbi2-ad2,x) ;perform subtract
5553 : 08                       php          
5554 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
5556 : f003            >        beq skip3449
                       >        trap            ;failed not equal (non zero)
5558 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
555b :                 >skip3449
                        
555b : 68                       pla             ;check flags
555c : 29c3                     and #$c3        ;mask NV----ZC
555e : c517                     cmp adrf
                                trap_ne         ;bad flags
5560 : f003            >        beq skip3451
                       >        trap            ;failed not equal (non zero)
5562 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5565 :                 >skip3451
                        
5565 : 28                       plp
                        ; binary ADC / SBC (abs),y
5566 : 08                       php             ;save carry for subtract
5567 : a513                     lda ad1
5569 : 715c                     adc (adiy2),y   ;perform add
556b : 08                       php          
556c : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
556e : f003            >        beq skip3453
                       >        trap            ;failed not equal (non zero)
5570 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5573 :                 >skip3453
                        
5573 : 68                       pla             ;check flags
5574 : 29c3                     and #$c3        ;mask NV----ZC
5576 : c517                     cmp adrf
                                trap_ne         ;bad flags
5578 : f003            >        beq skip3455
                       >        trap            ;failed not equal (non zero)
557a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
557d :                 >skip3455
                        
557d : 28                       plp
557e : 08                       php             ;save carry for next add
557f : a513                     lda ad1
5581 : f15e                     sbc (sbiy2),y   ;perform subtract
5583 : 08                       php          
5584 : c515                     cmp adrl        ;check result
                                trap_ne         ;bad result
5586 : f003            >        beq skip3457
                       >        trap            ;failed not equal (non zero)
5588 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
558b :                 >skip3457
                        
558b : 68                       pla             ;check flags
558c : 29c3                     and #$c3        ;mask NV----ZC
558e : c517                     cmp adrf
                                trap_ne         ;bad flags
5590 : f003            >        beq skip3459
                       >        trap            ;failed not equal (non zero)
5592 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5595 :                 >skip3459
                        
5595 : 28                       plp
5596 : 60                       rts
                        
                        ; target for the jump absolute test
5597 : 88                       dey
5598 : 88                       dey
5599 :                  test_far
5599 : 08                       php             ;either SP or Y count will fail, if we do not hit
559a : 88                       dey
559b : 88                       dey
559c : 88                       dey
559d : 28                       plp
                                trap_cs         ;flags loaded?
559e : 9003            >        bcc skip3461
                       >        trap            ;failed carry set
55a0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
55a3 :                 >skip3461
                        
                                trap_vs
55a3 : 5003            >        bvc skip3463
                       >        trap            ;failed overflow set
55a5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
55a8 :                 >skip3463
                        
                                trap_mi
55a8 : 1003            >        bpl skip3465
                       >        trap            ;failed minus (bit 7 set)
55aa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
55ad :                 >skip3465
                        
                                trap_eq 
55ad : d003            >        bne skip3467
                       >        trap           ;failed equal (zero)
55af : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
55b2 :                 >skip3467
                        
55b2 : c946                     cmp #'F'        ;registers loaded?
                                trap_ne
55b4 : f003            >        beq skip3469
                       >        trap            ;failed not equal (non zero)
55b6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
55b9 :                 >skip3469
                        
55b9 : e041                     cpx #'A'
                                trap_ne        
55bb : f003            >        beq skip3471
                       >        trap            ;failed not equal (non zero)
55bd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
55c0 :                 >skip3471
                        
55c0 : c04f                     cpy #('R'-3)
                                trap_ne
55c2 : f003            >        beq skip3473
                       >        trap            ;failed not equal (non zero)
55c4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
55c7 :                 >skip3473
                        
55c7 : 48                       pha             ;save a,x
55c8 : 8a                       txa
55c9 : 48                       pha
55ca : ba                       tsx
55cb : e0fd                     cpx #$fd        ;check SP
                                trap_ne
55cd : f003            >        beq skip3475
                       >        trap            ;failed not equal (non zero)
55cf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
55d2 :                 >skip3475
                        
55d2 : 68                       pla             ;restore x
55d3 : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
55d4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
55d6 : 48              >            pha         ;use stack to load status
55d7 : 28              >            plp
                        
55d8 : 68                       pla             ;restore a
55d9 : e8                       inx             ;return registers with modifications
55da : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
55dc : 4c6217                   jmp far_ret
                                
                        ; target for the jump indirect test
55df : 00                       align
55e0 : e955             ptr_tst_ind dw test_ind
55e2 : fc17             ptr_ind_ret dw ind_ret
                                trap            ;runover protection
55e4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
55e7 : 88                       dey
55e8 : 88                       dey
55e9 :                  test_ind
55e9 : 08                       php             ;either SP or Y count will fail, if we do not hit
55ea : 88                       dey
55eb : 88                       dey
55ec : 88                       dey
55ed : 28                       plp
                                trap_cs         ;flags loaded?
55ee : 9003            >        bcc skip3480
                       >        trap            ;failed carry set
55f0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
55f3 :                 >skip3480
                        
                                trap_vs
55f3 : 5003            >        bvc skip3482
                       >        trap            ;failed overflow set
55f5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
55f8 :                 >skip3482
                        
                                trap_mi
55f8 : 1003            >        bpl skip3484
                       >        trap            ;failed minus (bit 7 set)
55fa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
55fd :                 >skip3484
                        
                                trap_eq 
55fd : d003            >        bne skip3486
                       >        trap           ;failed equal (zero)
55ff : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5602 :                 >skip3486
                        
5602 : c949                     cmp #'I'        ;registers loaded?
                                trap_ne
5604 : f003            >        beq skip3488
                       >        trap            ;failed not equal (non zero)
5606 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5609 :                 >skip3488
                        
5609 : e04e                     cpx #'N'
                                trap_ne        
560b : f003            >        beq skip3490
                       >        trap            ;failed not equal (non zero)
560d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5610 :                 >skip3490
                        
5610 : c041                     cpy #('D'-3)
                                trap_ne
5612 : f003            >        beq skip3492
                       >        trap            ;failed not equal (non zero)
5614 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5617 :                 >skip3492
                        
5617 : 48                       pha             ;save a,x
5618 : 8a                       txa
5619 : 48                       pha
561a : ba                       tsx
561b : e0fd                     cpx #$fd        ;check SP
                                trap_ne
561d : f003            >        beq skip3494
                       >        trap            ;failed not equal (non zero)
561f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5622 :                 >skip3494
                        
5622 : 68                       pla             ;restore x
5623 : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
5624 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5626 : 48              >            pha         ;use stack to load status
5627 : 28              >            plp
                        
5628 : 68                       pla             ;restore a
5629 : e8                       inx             ;return registers with modifications
562a : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
562c : 6ce255                   jmp (ptr_ind_ret)
                                trap            ;runover protection
562f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
                        
                        ; target for the jump subroutine test
5632 : 88                       dey
5633 : 88                       dey
5634 :                  test_jsr
5634 : 08                       php             ;either SP or Y count will fail, if we do not hit
5635 : 88                       dey
5636 : 88                       dey
5637 : 88                       dey
5638 : 28                       plp
                                trap_cs         ;flags loaded?
5639 : 9003            >        bcc skip3499
                       >        trap            ;failed carry set
563b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
563e :                 >skip3499
                        
                                trap_vs
563e : 5003            >        bvc skip3501
                       >        trap            ;failed overflow set
5640 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5643 :                 >skip3501
                        
                                trap_mi
5643 : 1003            >        bpl skip3503
                       >        trap            ;failed minus (bit 7 set)
5645 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5648 :                 >skip3503
                        
                                trap_eq 
5648 : d003            >        bne skip3505
                       >        trap           ;failed equal (zero)
564a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
564d :                 >skip3505
                        
564d : c94a                     cmp #'J'        ;registers loaded?
                                trap_ne
564f : f003            >        beq skip3507
                       >        trap            ;failed not equal (non zero)
5651 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5654 :                 >skip3507
                        
5654 : e053                     cpx #'S'
                                trap_ne        
5656 : f003            >        beq skip3509
                       >        trap            ;failed not equal (non zero)
5658 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
565b :                 >skip3509
                        
565b : c04f                     cpy #('R'-3)
                                trap_ne
565d : f003            >        beq skip3511
                       >        trap            ;failed not equal (non zero)
565f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5662 :                 >skip3511
                        
5662 : 48                       pha             ;save a,x
5663 : 8a                       txa
5664 : 48                       pha       
5665 : ba                       tsx             ;sp -4? (return addr,a,x)
5666 : e0fb                     cpx #$fb
                                trap_ne
5668 : f003            >        beq skip3513
                       >        trap            ;failed not equal (non zero)
566a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
566d :                 >skip3513
                        
566d : adff01                   lda $1ff        ;propper return on stack
5670 : c918                     cmp #hi(jsr_ret)
                                trap_ne
5672 : f003            >        beq skip3515
                       >        trap            ;failed not equal (non zero)
5674 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5677 :                 >skip3515
                        
5677 : adfe01                   lda $1fe
567a : c97a                     cmp #lo(jsr_ret)
                                trap_ne
567c : f003            >        beq skip3517
                       >        trap            ;failed not equal (non zero)
567e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
5681 :                 >skip3517
                        
                                set_stat $ff
                       >            load_flag $ff
5681 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
5683 : 48              >            pha         ;use stack to load status
5684 : 28              >            plp
                        
5685 : 68                       pla             ;pull x,a
5686 : aa                       tax
5687 : 68                       pla
5688 : e8                       inx             ;return registers with modifications
5689 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
568b : 60                       rts
                                trap            ;runover protection
568c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
                                
                        ;trap in case of unexpected IRQ, NMI, BRK, RESET - BRK test target
568f :                  nmi_trap
                                trap            ;check stack for conditions at NMI
568f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
5692 :                  res_trap
                                trap            ;unexpected RESET
5692 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
                                
5695 : 88                       dey
5696 : 88                       dey
5697 :                  irq_trap                ;BRK test or unextpected BRK or IRQ
5697 : 08                       php             ;either SP or Y count will fail, if we do not hit
5698 : 88                       dey
5699 : 88                       dey
569a : 88                       dey
                                ;next 4 traps could be caused by unexpected BRK or IRQ
                                ;check stack for BREAK and originating location
                                ;possible jump/branch into weeds (uninitialized space)
569b : c942                     cmp #'B'        ;registers loaded?
                                trap_ne
569d : f003            >        beq skip3524
                       >        trap            ;failed not equal (non zero)
569f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
56a2 :                 >skip3524
                        
56a2 : e052                     cpx #'R'
                                trap_ne        
56a4 : f003            >        beq skip3526
                       >        trap            ;failed not equal (non zero)
56a6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
56a9 :                 >skip3526
                        
56a9 : c048                     cpy #('K'-3)
                                trap_ne
56ab : f003            >        beq skip3528
                       >        trap            ;failed not equal (non zero)
56ad : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
56b0 :                 >skip3528
                        
56b0 : 8510                     sta irq_a       ;save registers during break test
56b2 : 8611                     stx irq_x
56b4 : ba                       tsx             ;test break on stack
56b5 : bd0201                   lda $102,x
                                cmp_flag 0      ;break test should have B=1
56b8 : c930            >            cmp #(0      |fao)&m8    ;expected flags + always on bits
                        
                                trap_ne         ; - no break flag on stack
56ba : f003            >        beq skip3531
                       >        trap            ;failed not equal (non zero)
56bc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
56bf :                 >skip3531
                        
56bf : 68                       pla
56c0 : c934                     cmp #fai        ;should have added interrupt disable
                                trap_ne
56c2 : f003            >        beq skip3533
                       >        trap            ;failed not equal (non zero)
56c4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
56c7 :                 >skip3533
                        
56c7 : ba                       tsx
56c8 : e0fc                     cpx #$fc        ;sp -3? (return addr, flags)
                                trap_ne
56ca : f003            >        beq skip3535
                       >        trap            ;failed not equal (non zero)
56cc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
56cf :                 >skip3535
                        
56cf : adff01                   lda $1ff        ;propper return on stack
56d2 : c918                     cmp #hi(brk_ret)
                                trap_ne
56d4 : f003            >        beq skip3537
                       >        trap            ;failed not equal (non zero)
56d6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
56d9 :                 >skip3537
                        
56d9 : adfe01                   lda $1fe
56dc : c9f9                     cmp #lo(brk_ret)
                                trap_ne
56de : f003            >        beq skip3539
                       >        trap            ;failed not equal (non zero)
56e0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
56e3 :                 >skip3539
                        
                                set_stat $ff
                       >            load_flag $ff
56e3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
56e5 : 48              >            pha         ;use stack to load status
56e6 : 28              >            plp
                        
56e7 : a611                     ldx irq_x
56e9 : e8                       inx             ;return registers with modifications
56ea : a510                     lda irq_a
56ec : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1 but original flags should be restored
56ee : 40                       rti
                                trap            ;runover protection
56ef : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
                                
                            if report = 1
                                include "report.i65"
                        ;**** report 6502 funtional test errors to standard I/O ****
                        ;
                        ;this include file is part of the 6502 functional tests
                        ;it is used when you configure report = 1 in the tests
                        ;
                        ;to adopt the standard output vectors of your test environment
                        ;you must modify the rchar and rget subroutines in this include
                        ;
                        ;I/O hardware may have to be initialized in report_init
                        
                        ;print message macro - \1 = message location
                        rprt    macro
                                ldx #0
                                lda \1
                        loop\?
                                jsr rchar
                                inx
                                lda \1,x
                                bne loop\?
                                endm
                        
                        ;initialize I/O as required (example: configure & enable ACIA)
56f2 :                  report_init
                                ;nothing to initialize
                                rprt rmsg_start
56f2 : a200            >        ldx #0
56f4 : adc857          >        lda rmsg_start
56f7 :                 >loop3544
56f7 : 20c457          >        jsr rchar
56fa : e8              >        inx
56fb : bdc857          >        lda rmsg_start,x
56fe : d0f7            >        bne loop3544
                        
5700 : 60                       rts
                                
                        ;show stack (with saved registers), zeropage and absolute memory workspace
                        ;after an error was trapped in the test program
5701 :                  report_error
                        ;save registers
5701 : 08                       php
5702 : 48                       pha
5703 : 8a                       txa
5704 : 48                       pha
5705 : 98                       tya
5706 : 48                       pha
5707 : d8                       cld
                        ;show stack with index to registers at error
                                rprt rmsg_stack
5708 : a200            >        ldx #0
570a : addc57          >        lda rmsg_stack
570d :                 >loop3545
570d : 20c457          >        jsr rchar
5710 : e8              >        inx
5711 : bddc57          >        lda rmsg_stack,x
5714 : d0f7            >        bne loop3545
                        
5716 : ba                       tsx
5717 : e8                       inx
5718 : a901                     lda #1      ;address high
571a : 20b057                   jsr rhex
571d : 8a                       txa         ;address low
571e : 20b057                   jsr rhex
5721 : 20ac57           rstack  jsr rspace
5724 : bd0001                   lda $100,x  ;stack data
5727 : 20b057                   jsr rhex
572a : e8                       inx
572b : d0f4                     bne rstack
572d : 20a357                   jsr rcrlf   ;new line
                        ;show zero page workspace
5730 : a900                     lda #0
5732 : 20b057                   jsr rhex
5735 : a912                     lda #zpt
5737 : aa                       tax
5738 : 20b057                   jsr rhex
573b : 20ac57           rzp     jsr rspace
573e : b500                     lda 0,x
5740 : 20b057                   jsr rhex
5743 : e8                       inx
5744 : e019                     cpx #zp_bss
5746 : d0f3                     bne rzp
5748 : 20a357                   jsr rcrlf
                        ;show absolute workspace
574b : a902                     lda #hi(data_segment)
574d : 20b057                   jsr rhex
5750 : a900                     lda #lo(data_segment)
5752 : 20b057                   jsr rhex
5755 : a200                     ldx #0
5757 : 20ac57           rabs    jsr rspace
575a : bd0002                   lda data_segment,x
575d : 20b057                   jsr rhex
5760 : e8                       inx
5761 : e008                     cpx #(data_bss-data_segment)
5763 : d0f2                     bne rabs
                        ;ask to continue
                                rprt rmsg_cont
5765 : a200            >        ldx #0
5767 : adf857          >        lda rmsg_cont
576a :                 >loop3546
576a : 20c457          >        jsr rchar
576d : e8              >        inx
576e : bdf857          >        lda rmsg_cont,x
5771 : d0f7            >        bne loop3546
                        
5773 : 209757           rerr1   jsr rget
5776 : c943                     cmp #'C'
5778 : d0f9                     bne rerr1        
                        ;restore registers
577a : 68                       pla
577b : a8                       tay
577c : 68                       pla
577d : aa                       tax
577e : 68                       pla 
577f : 28                       plp
5780 : 60                       rts   
                        
                        ;show test has ended, ask to repeat
5781 :                  report_success
                            if rep_int = 1
                                rprt rmsg_priority
                                lda data_segment    ;show interrupt sequence
                                jsr rhex
                                jsr rspace
                                lda data_segment+1
                                jsr rhex
                                jsr rspace
                                lda data_segment+2
                                jsr rhex
                            endif
                                rprt rmsg_success
5781 : a200            >        ldx #0
5783 : ad1058          >        lda rmsg_success
5786 :                 >loop3547
5786 : 20c457          >        jsr rchar
5789 : e8              >        inx
578a : bd1058          >        lda rmsg_success,x
578d : d0f7            >        bne loop3547
                        
578f : 209757           rsuc1   jsr rget
5792 : c952                     cmp #'R'
5794 : d0f9                     bne rsuc1        
5796 : 60                       rts
                        
                        ;input subroutine
                        ;get a character from standard input 
                        ;adjust according to the needs in your test environment
5797 :                  rget                ;get character in A
                        ;rget1
                        ;        lda $bff1   ;wait RDRF
                        ;        and #8
                        ;        beq rget1
                        ;not a real ACIA - so RDRF is not checked
5797 : adf0bf                   lda $bff0   ;read acia rx reg
                        ;the load can be replaced by a call to a kernal routine
                        ;        jsr $ffcf   ;example: CHRIN for a C64
579a : c961                     cmp #'a'    ;lower case
579c : 9002                     bcc rget1
579e : 295f                     and #$5f    ;convert to upper case
57a0 : a943             rget1   lda #'C'
57a2 : 60               		rts
                        
                        ;output subroutines
57a3 : a90a             rcrlf   lda #10
57a5 : 20c457                   jsr rchar
57a8 : a90d                     lda #13
57aa : d018                     bne rchar
                        
57ac : a920             rspace  lda #' '
57ae : d014                     bne rchar
                                
57b0 : 48               rhex    pha         ;report hex byte in A
57b1 : 4a                       lsr a       ;high nibble first
57b2 : 4a                       lsr a
57b3 : 4a                       lsr a
57b4 : 4a                       lsr a
57b5 : 20bb57                   jsr rnib
57b8 : 68                       pla         ;now low nibble
57b9 : 290f                     and #$f
                        
57bb : 18               rnib    clc         ;report nibble in A
57bc : 6930                     adc #'0'    ;make printable 0-9
57be : c93a                     cmp #'9'+1
57c0 : 9002                     bcc rchar
57c2 : 6906                     adc #6      ;make printable A-F
                        
                        ;send a character to standard output 
                        ;adjust according to the needs in your test environment
                        ;register X needs to be preserved!
57c4 :                  rchar               ;report character in A
                        ;        pha         ;wait TDRF
                        ;rchar1  lda $bff1
                        ;        and #$10
                        ;        beq rchar1
                        ;        pla
                        ;not a real ACIA - so TDRF is not checked
57c4 : 8d00ef                   sta $ef00   ;write acia tx reg
                        ;the store can be replaced by a call to a kernal routine
                        ;        jsr $ffd2   ;example: CHROUT for a C64
57c7 : 60                       rts
                        
57c8 :                  rmsg_start
57c8 : 0a0d5374617274..         db  10,13,"Started testing",10,13,0
57dc :                  rmsg_stack
57dc : 0a0d7265677320..         db  10,13,"regs Y  X  A  PS PCLPCH",10,13,0
57f8 :                  rmsg_cont
57f8 : 0a0d7072657373..         db  10,13,"press C to continue",10,13,0
5810 :                  rmsg_success
5810 : 0a0d416c6c2074..         db  10,13,"All tests completed, press R to repeat",10,13,0
                            if rep_int = 1
                        rmsg_priority
                                db  10,13,"interrupt sequence (NMI IRQ BRK) ",0
                            endif
                           
                            endif
                                
                        ;copy of data to initialize BSS segment
                            if load_data_direct != 1
583b :                  zp_init
583b : c3824100         zp1_    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
583f : 7f               zp7f_   db  $7f             ;test pattern for compare  
                        ;logical zeropage operands
5840 : 001f7180         zpOR_   db  0,$1f,$71,$80   ;test pattern for OR
5844 : 0fff7f80         zpAN_   db  $0f,$ff,$7f,$80 ;test pattern for AND
5848 : ff0f8f8f         zpEO_   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
584c : 0802             ind1_   dw  abs1            ;indirect pointer to pattern in absolute memory
584e : 0902                     dw  abs1+1
5850 : 0a02                     dw  abs1+2
5852 : 0b02                     dw  abs1+3
5854 : 0c02                     dw  abs7f
5856 : 1001             inw1_   dw  abs1-$f8        ;indirect pointer for wrap-test pattern
5858 : 0302             indt_   dw  abst            ;indirect pointer to store area in absolute memory
585a : 0402                     dw  abst+1
585c : 0502                     dw  abst+2
585e : 0602                     dw  abst+3
5860 : 0b01             inwt_   dw  abst-$f8        ;indirect pointer for wrap-test store
5862 : 3f02             indAN_  dw  absAN           ;indirect pointer to AND pattern in absolute memory
5864 : 4002                     dw  absAN+1
5866 : 4102                     dw  absAN+2
5868 : 4202                     dw  absAN+3
586a : 4302             indEO_  dw  absEO           ;indirect pointer to EOR pattern in absolute memory
586c : 4402                     dw  absEO+1
586e : 4502                     dw  absEO+2
5870 : 4602                     dw  absEO+3
5872 : 3b02             indOR_  dw  absOR           ;indirect pointer to OR pattern in absolute memory
5874 : 3c02                     dw  absOR+1
5876 : 3d02                     dw  absOR+2
5878 : 3e02                     dw  absOR+3
                        ;add/subtract indirect pointers
587a : 0302             adi2_   dw  ada2            ;indirect pointer to operand 2 in absolute memory
587c : 0402             sbi2_   dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
587e : 0401             adiy2_  dw  ada2-$ff        ;with offset for indirect indexed
5880 : 0501             sbiy2_  dw  sba2-$ff
5882 :                  zp_end
                            if (zp_end - zp_init) != (zp_bss_end - zp_bss)   
                                ;force assembler error if size is different   
                                ERROR ERROR ERROR   ;mismatch between bss and zeropage data
                            endif 
5882 :                  data_init
5882 : c3824100         abs1_   db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
5886 : 7f               abs7f_  db  $7f             ;test pattern for compare
                        ;loads
5887 : 80800002         fLDx_   db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
588b :                  rASL_                       ;expected result ASL & ROL -carry  
588b : 86048200         rROL_   db  $86,$04,$82,0   ; "
588f : 87058301         rROLc_  db  $87,$05,$83,1   ;expected result ROL +carry
5893 :                  rLSR_                       ;expected result LSR & ROR -carry
5893 : 61412000         rROR_   db  $61,$41,$20,0   ; "
5897 : e1c1a080         rRORc_  db  $e1,$c1,$a0,$80 ;expected result ROR +carry
589b :                  fASL_                       ;expected flags for shifts
589b : 81018002         fROL_   db  fnc,fc,fn,fz    ;no carry in
589f : 81018000         fROLc_  db  fnc,fc,fn,0     ;carry in
58a3 :                  fLSR_
58a3 : 01000102         fROR_   db  fc,0,fc,fz      ;no carry in
58a7 : 81808180         fRORc_  db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
58ab : 7f80ff0001       rINC_   db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
58b0 : 0080800200       fINC_   db  0,fn,fn,fz,0    ;expected flags for INC/DEC
                        ;logical memory operand
58b5 : 001f7180         absOR_  db  0,$1f,$71,$80   ;test pattern for OR
58b9 : 0fff7f80         absAN_  db  $0f,$ff,$7f,$80 ;test pattern for AND
58bd : ff0f8f8f         absEO_  db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
58c1 : 00f11f00         absORa_ db  0,$f1,$1f,0     ;test pattern for OR
58c5 : f0ffffff         absANa_ db  $f0,$ff,$ff,$ff ;test pattern for AND
58c9 : fff0f00f         absEOa_ db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
58cd : 00ff7f80         absrlo_ db  0,$ff,$7f,$80
58d1 : 02800080         absflo_ db  fz,fn,0,fn
58d5 :                  data_end
                            if (data_end - data_init) != (data_bss_end - data_bss)
                                ;force assembler error if size is different   
                                ERROR ERROR ERROR   ;mismatch between bss and data
                            endif 
                        
58d5 :                  vec_init
58d5 : 8f56                     dw  nmi_trap
58d7 : 9256                     dw  res_trap
58d9 : 9756                     dw  irq_trap
fffa =                  vec_bss equ $fffa
                            endif                   ;end of RAM init data
                            
                            if (load_data_direct = 1) & (ROM_vectors = 1)  
                                org $fffa       ;vectors
                                dw  nmi_trap
                                dw  res_trap
                                dw  irq_trap
                            endif
                        
fffa =                          end start
                                    
No errors in pass 2.
Wrote binary from address $1000 through $58da.
Total size 18651 bytes.
Program start address is at $1000 (4096).
