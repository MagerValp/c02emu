AS65 Assembler for R6502 [1.42].  Copyright 1994-2007, Frank A. Kingswood                                                Page    1
------------------------------------------------ 65C02_extended_opcodes_test.a65c ------------------------------------------------

2927 lines read, no errors in pass 1.
                        ;
                        ; 6 5 C 0 2   E X T E N D E D   O P C O D E S   T E S T
                        ;
                        ; Copyright (C) 2013  Klaus Dormann
                        ;
                        ; This program is free software: you can redistribute it and/or modify
                        ; it under the terms of the GNU General Public License as published by
                        ; the Free Software Foundation, either version 3 of the License, or
                        ; (at your option) any later version.
                        ;
                        ; This program is distributed in the hope that it will be useful,
                        ; but WITHOUT ANY WARRANTY; without even the implied warranty of
                        ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        ; GNU General Public License for more details.
                        ;
                        ; You should have received a copy of the GNU General Public License
                        ; along with this program.  If not, see <http://www.gnu.org/licenses/>.
                        
                        
                        ; This program is designed to test all additional 65C02 opcodes, addressing
                        ; modes and functionality not available in the NMOS version of the 6502.
                        ; The 6502_functional_test is a prerequisite to this test.
                        ; NMI, IRQ, BRK, STP & WAI are covered in the 6502_interrupt_test.
                        ; 
                        ; version 16-aug-2013
                        ; contact info at http://2m5.de or email K@2m5.de
                        ;
                        ; assembled with AS65 from http://www.kingswood-consulting.co.uk/assemblers/
                        ; command line switches: -l -m -s2 -w -x -h0
                        ;                         |  |  |   |  |  no page headers in listing
                        ;                         |  |  |   |  65C02 extensions
                        ;                         |  |  |   wide listing (133 char/col)
                        ;                         |  |  write intel hex file instead of binary
                        ;                         |  expand macros in listing
                        ;                         generate pass2 listing
                        ;
                        ; No IO - should be run from a monitor with access to registers.
                        ; To run load intel hex image with a load command, than alter PC to 400 hex
                        ; (code_segment) and enter a go command.
                        ; Loop on program counter determines error or successful completion of test.
                        ; Check listing for relevant traps (jump/branch *).
                        ; Please note that in early tests some instructions will have to be used before
                        ; they are actually tested!
                        ;
                        ; RESET, NMI or IRQ should not occur and will be trapped if vectors are enabled.
                        ; Tests documented behavior of the original 65C02 only!
                        ; Decimal ops will only be tested with valid BCD operands and the V flag will
                        ; be ignored as it is absolutely useless in decimal mode.
                        ;
                        ; Debugging hints:
                        ;     Most of the code is written sequentially. if you hit a trap, check the
                        ;   immediately preceeding code for the instruction to be tested. Results are
                        ;   tested first, flags are checked second by pushing them onto the stack and
                        ;   pulling them to the accumulator after the result was checked. The "real"
                        ;   flags are no longer valid for the tested instruction at this time!
                        ;     If the tested instruction was indexed, the relevant index (X or Y) must
                        ;   also be checked. Opposed to the flags, X and Y registers are still valid.
                        ;
                        ; versions:
                        ;   19-jul-2013  1st version distributed for testing
                        ;   23-jul-2013  fixed BRA out of range due to larger trap macros
                        ;                added RAM integrity check
                        ;   16-aug-2013  added error report to standard output option
                        
                        
                        ; C O N F I G U R A T I O N
                        
                        ;ROM_vectors writable (0=no, 1=yes)
                        ;if ROM vectors can not be used interrupts will not be trapped
                        ;as a consequence BRK can not be tested but will be emulated to test RTI
0000 =                  ROM_vectors = 0
                        
                        ;load_data_direct (0=move from code segment, 1=load directly)
                        ;loading directly is preferred but may not be supported by your platform
                        ;0 produces only consecutive object code, 1 is not suitable for a binary image
0000 =                  load_data_direct = 0
                        
                        ;I_flag behavior (0=force enabled, 1=force disabled, 2=prohibit change, 3=allow
                        ;change) 2 requires extra code and is not recommended.
0003 =                  I_flag = 3
                        
                        ;configure memory - try to stay away from memory used by the system
                        ;zero_page memory start address, $4e (78) consecutive Bytes required
                        ;                                add 2 if I_flag = 2
0010 =                  zero_page = $10
                        
                        ;data_segment memory start address, $5D (93) consecutive Bytes required
                        ; + 12 Bytes at data_segment + $f9 (JMP indirect page cross test)
0200 =                  data_segment = $200
                            if (data_segment & $ff) != 0
                                ERROR ERROR ERROR low byte of data_segment MUST be $00 !!
                            endif  
                        
                        ;code_segment memory start address, 10kB of consecutive space required
                        ;                                   add 1 kB if I_flag = 2
                        ;parts of the code are self modifying and must reside in RAM
1000 =                  code_segment = $1000  
                        
                        ;added WDC only opcodes WAI & STP (0=test as NOPs, >0=no test)
0000 =                  wdc_op = 0
                        
                        ;added Rockwell & WDC opcodes BBR, BBS, RMB & SMB
                        ;(0=test as NOPs, 1=full test, >1=no test) 
0001 =                  rkwl_wdc_op = 1
                        
                        ;report errors through I/O channel (0=use standard self trap loops, 1=include
                        ;report.i65 as I/O channel, add 3 kB)
0001 =                  report = 1
                        
                        ;RAM integrity test option. Checks for undesired RAM writes.
                        ;set lowest non RAM or RAM mirror address page (-1=disable, 0=64k, $40=16k)
                        ;leave disabled if a monitor, OS or background interrupt is allowed to alter RAM
ffff =                  ram_top = -1
                        
                                noopt       ;do not take shortcuts
                                
                        ;macros for error & success traps to allow user modification
                        ;example:
                        ;trap    macro
                        ;        jsr my_error_handler
                        ;        endm
                        ;trap_eq macro
                        ;        bne skip\?
                        ;        trap           ;failed equal (zero)
                        ;skip\?
                        ;        endm
                        ;
                        ; my_error_handler should pop the calling address from the stack and report it.
                        ; putting larger portions of code (more than 3 bytes) inside the trap macro
                        ; may lead to branch range problems for some tests.
                            if report = 0
                        trap    macro
                                jmp *           ;failed anyway
                                endm
                        trap_eq macro
                                beq *           ;failed equal (zero)
                                endm
                        trap_ne macro
                                bne *           ;failed not equal (non zero)
                                endm
                        trap_cs macro
                                bcs *           ;failed carry set
                                endm
                        trap_cc macro
                                bcc *           ;failed carry clear
                                endm
                        trap_mi macro
                                bmi *           ;failed minus (bit 7 set)
                                endm
                        trap_pl macro
                                bpl *           ;failed plus (bit 7 clear)
                                endm
                        trap_vs macro
                                bvs *           ;failed overflow set
                                endm
                        trap_vc macro
                                bvc *           ;failed overflow clear
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                                jmp *           ;test passed, no errors
                                endm
                            endif
                            if report = 1
                        trap    macro
                                sta $ef02
                                ;jsr report_error
                                endm
                        trap_eq macro
                                bne skip\?
                                trap           ;failed equal (zero)
                        skip\?
                                endm
                        trap_ne macro
                                beq skip\?
                                trap            ;failed not equal (non zero)
                        skip\?
                                endm
                        trap_cs macro
                                bcc skip\?
                                trap            ;failed carry set
                        skip\?
                                endm
                        trap_cc macro
                                bcs skip\?
                                trap            ;failed carry clear
                        skip\?
                                endm
                        trap_mi macro
                                bpl skip\?
                                trap            ;failed minus (bit 7 set)
                        skip\?
                                endm
                        trap_pl macro
                                bmi skip\?
                                trap            ;failed plus (bit 7 clear)
                        skip\?
                                endm
                        trap_vs macro
                                bvc skip\?
                                trap            ;failed overflow set
                        skip\?
                                endm
                        trap_vc macro
                                bvs skip\?
                                trap            ;failed overflow clear
                        skip\?
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                                db $db
                                ;jsr report_success
                                endm
                            endif
                        
                        
0001 =                  carry   equ %00000001   ;flag bits in status
0002 =                  zero    equ %00000010
0004 =                  intdis  equ %00000100
0008 =                  decmode equ %00001000
0010 =                  break   equ %00010000
0020 =                  reserv  equ %00100000
0040 =                  overfl  equ %01000000
0080 =                  minus   equ %10000000
                        
0001 =                  fc      equ carry
0002 =                  fz      equ zero
0003 =                  fzc     equ carry+zero
0040 =                  fv      equ overfl
0042 =                  fvz     equ overfl+zero
0080 =                  fn      equ minus
0081 =                  fnc     equ minus+carry
0082 =                  fnz     equ minus+zero
0083 =                  fnzc    equ minus+zero+carry
00c0 =                  fnv     equ minus+overfl
                        
0030 =                  fao     equ break+reserv    ;bits always on after PHP, BRK
0034 =                  fai     equ fao+intdis      ;+ forced interrupt disable
00ff =                  m8      equ $ff             ;8 bit mask
00fb =                  m8i     equ $ff&~intdis     ;8 bit mask - interrupt disable
                        
                        ;macros to allow masking of status bits.
                        ;masking of interrupt enable/disable on load and compare
                        ;masking of always on bits after PHP or BRK (unused & break) on compare
                                if I_flag = 0
                        load_flag   macro
                                    lda #\1&m8i         ;force enable interrupts (mask I)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8i   ;I_flag is always enabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 1
                        load_flag   macro
                                    lda #\1|intdis      ;force disable interrupts
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fai)&m8    ;I_flag is always disabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1|fai)       ;invert expected flags + always on bits + I
                                    endm
                                endif
                                if I_flag = 2
                        load_flag   macro
                                    lda #\1
                                    ora flag_I_on       ;restore I-flag
                                    and flag_I_off
                                    endm
                        cmp_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    cmp #(\1|fao)&m8i   ;expected flags + always on bits, mask I
                                    endm
                        eor_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 3
                        load_flag   macro
                                    lda #\1             ;allow test to change I-flag (no mask)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8    ;expected flags + always on bits
                                    endm
                        eor_flag    macro
                                    eor #\1|fao         ;invert expected flags + always on bits
                                    endm
                                endif
                        
                        ;macros to set (register|memory|zeropage) & status
                        set_stat    macro       ;setting flags in the processor status register
                                    load_flag \1
                                    pha         ;use stack to load status
                                    plp
                                    endm
                        
                        set_a       macro       ;precharging accu & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda #\1     ;precharge accu
                                    plp
                                    endm
                        
                        set_x       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldx #\1     ;precharge index x
                                    plp
                                    endm
                        
                        set_y       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldy #\1     ;precharge index y
                                    plp
                                    endm
                        
                        set_ax      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;precharge accu
                                    plp
                                    endm
                        
                        set_ay      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,y    ;precharge accu
                                    plp
                                    endm
                        
                        set_z       macro       ;precharging indexed zp & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to zeropage
                                    sta zpt
                                    plp
                                    endm
                        
                        set_zx      macro       ;precharging zp,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed zeropage
                                    sta zpt,x
                                    plp
                                    endm
                        
                        set_abs     macro       ;precharging indexed memory & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to memory
                                    sta abst
                                    plp
                                    endm
                        
                        set_absx    macro       ;precharging abs,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed memory
                                    sta abst,x
                                    plp
                                    endm
                        
                        ;macros to test (register|memory|zeropage) & status & (mask)
                        tst_stat    macro       ;testing flags in the processor status register
                                    php         ;save status
                                    php         ;use stack to retrieve status
                                    pla
                                    cmp_flag \1
                                    trap_ne
                                    plp         ;restore status
                                    endm
                                    
                        tst_a       macro       ;testing result in accu & flags
                                    php         ;save flags
                                    php
                                    cmp #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_as      macro       ;testing result in accu & flags, save accu
                                    pha
                                    php         ;save flags
                                    php
                                    cmp #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    pla
                                    endm
                        
                        tst_x       macro       ;testing result in x index & flags
                                    php         ;save flags
                                    php
                                    cpx #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_y       macro       ;testing result in y index & flags
                                    php         ;save flags
                                    php
                                    cpy #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_ax      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne     ;
                                    endm
                        
                        tst_ay      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,y    ;test result
                                    trap_ne     ;
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,y    ;test flags
                                    trap_ne
                                    endm
                                
                        tst_z       macro       ;indexed testing result in zp & flags
                                    php         ;save flags
                                    lda zpt
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_zx      macro       ;testing result in zp,x & flags
                                    php         ;save flags
                                    lda zpt,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_abs     macro       ;indexed testing result in memory & flags
                                    php         ;save flags
                                    lda abst
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_absx    macro       ;testing result in abs,x & flags
                                    php         ;save flags
                                    lda abst,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                                    
                        ; RAM integrity test
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                        ;   uses zpt word as indirect pointer, zpt+2 word as checksum
                                if ram_top > -1
                        check_ram   macro 
                                    cld
                                    lda #0
                                    sta zpt         ;set low byte of indirect pointer
                                    sta zpt+3       ;checksum high byte
                                    ldx #11         ;reset modifiable RAM
                        ccs1\?      sta jxi_tab,x   ;JMP indirect page cross area
                                    dex
                                    bpl ccs1\?
                                    sta chkdadi     ;self modifying code
                                    sta chkdsbi
                                    clc
                                    ldx #zp_bss-zero_page ;zeropage - write test area
                        ccs3\?      adc zero_page,x
                                    bcc ccs2\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs2\?      inx
                                    bne ccs3\?
                                    ldx #hi(data_segment) ;set high byte of indirect pointer
                                    stx zpt+1
                                    ldy #lo(data_bss) ;data after write test area
                        ccs5\?      adc (zpt),y
                                    bcc ccs4\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs4\?      iny
                                    bne ccs5\?
                                    inx             ;advance RAM high address
                                    stx zpt+1
                                    cpx #ram_top
                                    bne ccs5\?
                                    sta zpt+2       ;checksum low is
                                    cmp ram_chksm   ;checksum low expected
                                    trap_ne         ;checksum mismatch
                                    lda zpt+3       ;checksum high is
                                    cmp ram_chksm+1 ;checksum high expected
                                    trap_ne         ;checksum mismatch
                                    endm            
                                else
                        check_ram   macro
                                    ;RAM check disabled - RAM size not set
                                    endm
                                endif
                                    
                        next_test   macro           ;make sure, tests don't jump the fence
                                    lda test_case   ;previous test
                                    cmp #test_num
                                    trap_ne         ;test is out of sequence
                        test_num = test_num + 1
                                    lda #test_num   ;*** next tests' number
                                    sta test_case
                                    sta $ef03
                                    ;check_ram       ;uncomment to find altered RAM after each test
                                    endm
                        
                            if load_data_direct = 1
                                data
                            else
                                bss                 ;uninitialized segment, copy of data at end of code!
                            endif
0010 =                          org zero_page
                            if I_flag = 2
                        ;masking for I bit in status
                        flag_I_on   ds  1           ;or mask to load flags   
                        flag_I_off  ds  1           ;and mask to load flags
                            endif
0010 =                  zpt                         ;5 bytes store/modify test area
                        ;add/subtract operand generation and result/flag prediction
0010 =                  adfc    ds  1               ;carry flag before op
0011 =                  ad1     ds  1               ;operand 1 - accumulator
0012 =                  ad2     ds  1               ;operand 2 - memory / immediate
0013 =                  adrl    ds  1               ;expected result bits 0-7
0014 =                  adrh    ds  1               ;expected result bit 8 (carry)
0015 =                  adrf    ds  1               ;expected flags NV0000ZC (-V in decimal mode)
0016 =                  sb2     ds  1               ;operand 2 complemented for subtract
0017 =                  zp_bss
0017 =                  zp1     db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
001b =                  zp7f    db  $7f             ;test pattern for compare  
                        ;logical zeropage operands
001c =                  zpOR    db  0,$1f,$71,$80   ;test pattern for OR
0020 =                  zpAN    db  $0f,$ff,$7f,$80 ;test pattern for AND
0024 =                  zpEO    db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
0028 =                  ind1    dw  abs1            ;indirect pointer to pattern in absolute memory
002a =                          dw  abs1+1
002c =                          dw  abs1+2
002e =                          dw  abs1+3
0030 =                          dw  abs7f
0032 =                  inw1    dw  abs1-$f8        ;indirect pointer for wrap-test pattern
0034 =                  indt    dw  abst            ;indirect pointer to store area in absolute memory
0036 =                          dw  abst+1
0038 =                          dw  abst+2
003a =                          dw  abst+3
003c =                  inwt    dw  abst-$f8        ;indirect pointer for wrap-test store
003e =                  indAN   dw  absAN           ;indirect pointer to AND pattern in absolute memory
0040 =                          dw  absAN+1
0042 =                          dw  absAN+2
0044 =                          dw  absAN+3
0046 =                  indEO   dw  absEO           ;indirect pointer to EOR pattern in absolute memory
0048 =                          dw  absEO+1
004a =                          dw  absEO+2
004c =                          dw  absEO+3
004e =                  indOR   dw  absOR           ;indirect pointer to OR pattern in absolute memory
0050 =                          dw  absOR+1
0052 =                          dw  absOR+2
0054 =                          dw  absOR+3
                        ;add/subtract indirect pointers
0056 =                  adi2    dw  ada2            ;indirect pointer to operand 2 in absolute memory
0058 =                  sbi2    dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
005a =                  adiy2   dw  ada2-$ff        ;with offset for indirect indexed
005c =                  sbiy2   dw  sba2-$ff
005e =                  zp_bss_end
                            
0200 =                          org data_segment
0200 =                  pg_x    ds  2               ;high JMP indirect address for page cross bug
0202 =                  test_case   ds  1           ;current test number
0203 =                  ram_chksm   ds  2           ;checksum for RAM integrity test
                        ;add/subtract operand copy - abs tests write area
0205 =                  abst                        ;5 bytes store/modify test area
0205 =                  ada2    ds  1               ;operand 2
0206 =                  sba2    ds  1               ;operand 2 complemented for subtract
0207 =                          ds  3               ;fill remaining bytes
020a =                  data_bss
020a =                  abs1    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
020e =                  abs7f   db  $7f             ;test pattern for compare
                        ;loads
020f =                  fLDx    db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
0213 =                  rASL                        ;expected result ASL & ROL -carry  
0213 =                  rROL    db  $86,$04,$82,0   ; "
0217 =                  rROLc   db  $87,$05,$83,1   ;expected result ROL +carry
021b =                  rLSR                        ;expected result LSR & ROR -carry
021b =                  rROR    db  $61,$41,$20,0   ; "
021f =                  rRORc   db  $e1,$c1,$a0,$80 ;expected result ROR +carry
0223 =                  fASL                        ;expected flags for shifts
0223 =                  fROL    db  fnc,fc,fn,fz    ;no carry in
0227 =                  fROLc   db  fnc,fc,fn,0     ;carry in
022b =                  fLSR
022b =                  fROR    db  fc,0,fc,fz      ;no carry in
022f =                  fRORc   db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
0233 =                  rINC    db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
0238 =                  fINC    db  0,fn,fn,fz,0    ;expected flags for INC/DEC
                        ;logical memory operand
023d =                  absOR   db  0,$1f,$71,$80   ;test pattern for OR
0241 =                  absAN   db  $0f,$ff,$7f,$80 ;test pattern for AND
0245 =                  absEO   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
0249 =                  absORa  db  0,$f1,$1f,0     ;test pattern for OR
024d =                  absANa  db  $f0,$ff,$ff,$ff ;test pattern for AND
0251 =                  absEOa  db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
0255 =                  absrlo  db  0,$ff,$7f,$80
0259 =                  absflo  db  fz,fn,0,fn
025d =                  data_bss_end
                        ;define area for page crossing JMP (abs) & JMP (abs,x) test
02f9 =                  jxi_tab equ data_segment + $100 - 7     ;JMP (jxi_tab,x) x=6
02fd =                  ji_tab  equ data_segment + $100 - 3     ;JMP (ji_tab+2)
0300 =                  jxp_tab equ data_segment + $100         ;JMP (jxp_tab-255) x=255
                        
                        
                                code
1000 =                          org code_segment
1000 : d8               start   cld
1001 : a2ff                     ldx #$ff
1003 : 9a                       txs
1004 : a900                     lda #0          ;*** test 0 = initialize
1006 : 8d0202                   sta test_case
0000 =                  test_num = 0
                        
                        ;stop interrupts before initializing BSS
                            if I_flag = 1
                                sei
                            endif
                            
                        ;initialize I/O for report channel
                            if report = 1
1009 : 20c33d                   jsr report_init
                            endif
                            
                        ;initialize BSS segment
                            if load_data_direct != 1
100c : a246                     ldx #zp_end-zp_init-1
100e : bd0c3f           ld_zp   lda zp_init,x
1011 : 9517                     sta zp_bss,x
1013 : ca                       dex
1014 : 10f8                     bpl ld_zp
1016 : a252                     ldx #data_end-data_init-1
1018 : bd533f           ld_data lda data_init,x
101b : 9d0a02                   sta data_bss,x
101e : ca                       dex
101f : 10f7                     bpl ld_data
                              if ROM_vectors = 1
                                ldx #5
                        ld_vect lda vec_init,x
                                sta vec_bss,x
                                dex
                                bpl ld_vect
                              endif
                            endif
                        
                        ;retain status of interrupt flag
                            if I_flag = 2
                                php
                                pla
                                and #4          ;isolate flag
                                sta flag_I_on   ;or mask
                                eor #lo(~4)     ;reverse
                                sta flag_I_off  ;and mask
                            endif
                                
                        ;generate checksum for RAM integrity test
                            if ram_top > -1
                                lda #0 
                                sta zpt         ;set low byte of indirect pointer
                                sta ram_chksm+1 ;checksum high byte
                                ldx #11         ;reset modifiable RAM
                        gcs1    sta jxi_tab,x   ;JMP indirect page cross area
                                dex
                                bpl gcs1
                                sta chkdadi     ;self modifying code
                                sta chkdsbi
                                clc
                                ldx #zp_bss-zero_page ;zeropage - write test area
                        gcs3    adc zero_page,x
                                bcc gcs2
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs2    inx
                                bne gcs3
                                ldx #hi(data_segment) ;set high byte of indirect pointer
                                stx zpt+1
                                ldy #lo(data_bss) ;data after write test area
                        gcs5    adc (zpt),y
                                bcc gcs4
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs4    iny
                                bne gcs5
                                inx             ;advance RAM high address
                                stx zpt+1
                                cpx #ram_top
                                bne gcs5
                                sta ram_chksm   ;checksum complete
                            endif
                                next_test            
1021 : ad0202          >            lda test_case   ;previous test
1024 : c900            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1026 : f003            >        beq skip0002
                       >        trap            ;failed not equal (non zero)
1028 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
102b :                 >skip0002
                       >
0001 =                 >test_num = test_num + 1
102b : a901            >            lda #test_num   ;*** next tests' number
102d : 8d0202          >            sta test_case
1030 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ;testing stack operations PHX PHY PLX PLY
1033 : a999                     lda #$99        ;protect a
1035 : a2ff                     ldx #$ff        ;initialize stack
1037 : 9a                       txs
1038 : a255                     ldx #$55
103a : da                       phx
103b : a2aa                     ldx #$aa
103d : da                       phx
103e : ecfe01                   cpx $1fe        ;on stack ?
                                trap_ne
1041 : f003            >        beq skip0004
                       >        trap            ;failed not equal (non zero)
1043 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1046 :                 >skip0004
                        
1046 : ba                       tsx
1047 : e0fd                     cpx #$fd        ;sp decremented?
                                trap_ne
1049 : f003            >        beq skip0006
                       >        trap            ;failed not equal (non zero)
104b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
104e :                 >skip0006
                        
104e : 7a                       ply
104f : c0aa                     cpy #$aa        ;successful retreived from stack?
                                trap_ne
1051 : f003            >        beq skip0008
                       >        trap            ;failed not equal (non zero)
1053 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1056 :                 >skip0008
                        
1056 : 7a                       ply
1057 : c055                     cpy #$55
                                trap_ne
1059 : f003            >        beq skip0010
                       >        trap            ;failed not equal (non zero)
105b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
105e :                 >skip0010
                        
105e : ccff01                   cpy $1ff        ;remains on stack?
                                trap_ne
1061 : f003            >        beq skip0012
                       >        trap            ;failed not equal (non zero)
1063 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1066 :                 >skip0012
                        
1066 : ba                       tsx
1067 : e0ff                     cpx #$ff        ;sp incremented?
                                trap_ne
1069 : f003            >        beq skip0014
                       >        trap            ;failed not equal (non zero)
106b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
106e :                 >skip0014
                        
                                
106e : a0a5                     ldy #$a5
1070 : 5a                       phy
1071 : a05a                     ldy #$5a
1073 : 5a                       phy
1074 : ccfe01                   cpy $1fe        ;on stack ?
                                trap_ne
1077 : f003            >        beq skip0016
                       >        trap            ;failed not equal (non zero)
1079 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
107c :                 >skip0016
                        
107c : ba                       tsx
107d : e0fd                     cpx #$fd        ;sp decremented?
                                trap_ne
107f : f003            >        beq skip0018
                       >        trap            ;failed not equal (non zero)
1081 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1084 :                 >skip0018
                        
1084 : fa                       plx
1085 : e05a                     cpx #$5a        ;successful retreived from stack?
                                trap_ne
1087 : f003            >        beq skip0020
                       >        trap            ;failed not equal (non zero)
1089 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
108c :                 >skip0020
                        
108c : fa                       plx
108d : e0a5                     cpx #$a5
                                trap_ne
108f : f003            >        beq skip0022
                       >        trap            ;failed not equal (non zero)
1091 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1094 :                 >skip0022
                        
1094 : ecff01                   cpx $1ff        ;remains on stack?
                                trap_ne
1097 : f003            >        beq skip0024
                       >        trap            ;failed not equal (non zero)
1099 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
109c :                 >skip0024
                        
109c : ba                       tsx
109d : e0ff                     cpx #$ff        ;sp incremented?
                                trap_ne
109f : f003            >        beq skip0026
                       >        trap            ;failed not equal (non zero)
10a1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
10a4 :                 >skip0026
                        
10a4 : c999                     cmp #$99        ;unchanged?
                                trap_ne
10a6 : f003            >        beq skip0028
                       >        trap            ;failed not equal (non zero)
10a8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
10ab :                 >skip0028
                        
                                next_test            
10ab : ad0202          >            lda test_case   ;previous test
10ae : c901            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
10b0 : f003            >        beq skip0031
                       >        trap            ;failed not equal (non zero)
10b2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
10b5 :                 >skip0031
                       >
0002 =                 >test_num = test_num + 1
10b5 : a902            >            lda #test_num   ;*** next tests' number
10b7 : 8d0202          >            sta test_case
10ba : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                        ; test PHX does not alter flags or X but PLX does
10bd : a0aa                     ldy #$aa        ;protect y
                                set_x 1,$ff     ;push
                       >            load_flag $ff     
10bf : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
10c1 : 48              >            pha         ;use stack to load status
10c2 : a201            >            ldx #1     ;precharge index x
10c4 : 28              >            plp
                        
10c5 : da                       phx
                                tst_x 1,$ff
10c6 : 08              >            php         ;save flags
10c7 : 08              >            php
10c8 : e001            >            cpx #1     ;test result
                       >            trap_ne
10ca : f003            >        beq skip0036
                       >        trap            ;failed not equal (non zero)
10cc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
10cf :                 >skip0036
                       >
10cf : 68              >            pla         ;load status
                       >            cmp_flag $ff
10d0 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
10d2 : f003            >        beq skip0039
                       >        trap            ;failed not equal (non zero)
10d4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
10d7 :                 >skip0039
                       >
10d7 : 28              >            plp         ;restore status
                        
                                set_x 0,0
                       >            load_flag 0
10d8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
10da : 48              >            pha         ;use stack to load status
10db : a200            >            ldx #0     ;precharge index x
10dd : 28              >            plp
                        
10de : da                       phx
                                tst_x 0,0
10df : 08              >            php         ;save flags
10e0 : 08              >            php
10e1 : e000            >            cpx #0     ;test result
                       >            trap_ne
10e3 : f003            >        beq skip0044
                       >        trap            ;failed not equal (non zero)
10e5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
10e8 :                 >skip0044
                       >
10e8 : 68              >            pla         ;load status
                       >            cmp_flag 0
10e9 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
10eb : f003            >        beq skip0047
                       >        trap            ;failed not equal (non zero)
10ed : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
10f0 :                 >skip0047
                       >
10f0 : 28              >            plp         ;restore status
                        
                                set_x $ff,$ff
                       >            load_flag $ff
10f1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
10f3 : 48              >            pha         ;use stack to load status
10f4 : a2ff            >            ldx #$ff     ;precharge index x
10f6 : 28              >            plp
                        
10f7 : da                       phx
                                tst_x $ff,$ff
10f8 : 08              >            php         ;save flags
10f9 : 08              >            php
10fa : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
10fc : f003            >        beq skip0052
                       >        trap            ;failed not equal (non zero)
10fe : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1101 :                 >skip0052
                       >
1101 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1102 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1104 : f003            >        beq skip0055
                       >        trap            ;failed not equal (non zero)
1106 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1109 :                 >skip0055
                       >
1109 : 28              >            plp         ;restore status
                        
                                set_x 1,0
                       >            load_flag 0
110a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
110c : 48              >            pha         ;use stack to load status
110d : a201            >            ldx #1     ;precharge index x
110f : 28              >            plp
                        
1110 : da                       phx
                                tst_x 1,0
1111 : 08              >            php         ;save flags
1112 : 08              >            php
1113 : e001            >            cpx #1     ;test result
                       >            trap_ne
1115 : f003            >        beq skip0060
                       >        trap            ;failed not equal (non zero)
1117 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
111a :                 >skip0060
                       >
111a : 68              >            pla         ;load status
                       >            cmp_flag 0
111b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
111d : f003            >        beq skip0063
                       >        trap            ;failed not equal (non zero)
111f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1122 :                 >skip0063
                       >
1122 : 28              >            plp         ;restore status
                        
                                set_x 0,$ff
                       >            load_flag $ff
1123 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1125 : 48              >            pha         ;use stack to load status
1126 : a200            >            ldx #0     ;precharge index x
1128 : 28              >            plp
                        
1129 : da                       phx
                                tst_x 0,$ff
112a : 08              >            php         ;save flags
112b : 08              >            php
112c : e000            >            cpx #0     ;test result
                       >            trap_ne
112e : f003            >        beq skip0068
                       >        trap            ;failed not equal (non zero)
1130 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1133 :                 >skip0068
                       >
1133 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1134 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1136 : f003            >        beq skip0071
                       >        trap            ;failed not equal (non zero)
1138 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
113b :                 >skip0071
                       >
113b : 28              >            plp         ;restore status
                        
                                set_x $ff,0
                       >            load_flag 0
113c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
113e : 48              >            pha         ;use stack to load status
113f : a2ff            >            ldx #$ff     ;precharge index x
1141 : 28              >            plp
                        
1142 : da                       phx
                                tst_x $ff,0
1143 : 08              >            php         ;save flags
1144 : 08              >            php
1145 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
1147 : f003            >        beq skip0076
                       >        trap            ;failed not equal (non zero)
1149 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
114c :                 >skip0076
                       >
114c : 68              >            pla         ;load status
                       >            cmp_flag 0
114d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
114f : f003            >        beq skip0079
                       >        trap            ;failed not equal (non zero)
1151 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1154 :                 >skip0079
                       >
1154 : 28              >            plp         ;restore status
                        
                                set_x 0,$ff     ;pull
                       >            load_flag $ff     
1155 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
1157 : 48              >            pha         ;use stack to load status
1158 : a200            >            ldx #0     ;precharge index x
115a : 28              >            plp
                        
115b : fa                       plx
                                tst_x $ff,$ff-zero
115c : 08              >            php         ;save flags
115d : 08              >            php
115e : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
1160 : f003            >        beq skip0084
                       >        trap            ;failed not equal (non zero)
1162 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1165 :                 >skip0084
                       >
1165 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
1166 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1168 : f003            >        beq skip0087
                       >        trap            ;failed not equal (non zero)
116a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
116d :                 >skip0087
                       >
116d : 28              >            plp         ;restore status
                        
                                set_x $ff,0
                       >            load_flag 0
116e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1170 : 48              >            pha         ;use stack to load status
1171 : a2ff            >            ldx #$ff     ;precharge index x
1173 : 28              >            plp
                        
1174 : fa                       plx
                                tst_x 0,zero
1175 : 08              >            php         ;save flags
1176 : 08              >            php
1177 : e000            >            cpx #0     ;test result
                       >            trap_ne
1179 : f003            >        beq skip0092
                       >        trap            ;failed not equal (non zero)
117b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
117e :                 >skip0092
                       >
117e : 68              >            pla         ;load status
                       >            cmp_flag zero
117f : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1181 : f003            >        beq skip0095
                       >        trap            ;failed not equal (non zero)
1183 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1186 :                 >skip0095
                       >
1186 : 28              >            plp         ;restore status
                        
                                set_x $fe,$ff
                       >            load_flag $ff
1187 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1189 : 48              >            pha         ;use stack to load status
118a : a2fe            >            ldx #$fe     ;precharge index x
118c : 28              >            plp
                        
118d : fa                       plx
                                tst_x 1,$ff-zero-minus
118e : 08              >            php         ;save flags
118f : 08              >            php
1190 : e001            >            cpx #1     ;test result
                       >            trap_ne
1192 : f003            >        beq skip0100
                       >        trap            ;failed not equal (non zero)
1194 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1197 :                 >skip0100
                       >
1197 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero-minus
1198 : c97d            >            cmp #($ff-zero-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
119a : f003            >        beq skip0103
                       >        trap            ;failed not equal (non zero)
119c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
119f :                 >skip0103
                       >
119f : 28              >            plp         ;restore status
                        
                                set_x 0,0
                       >            load_flag 0
11a0 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
11a2 : 48              >            pha         ;use stack to load status
11a3 : a200            >            ldx #0     ;precharge index x
11a5 : 28              >            plp
                        
11a6 : fa                       plx
                                tst_x $ff,minus
11a7 : 08              >            php         ;save flags
11a8 : 08              >            php
11a9 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
11ab : f003            >        beq skip0108
                       >        trap            ;failed not equal (non zero)
11ad : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11b0 :                 >skip0108
                       >
11b0 : 68              >            pla         ;load status
                       >            cmp_flag minus
11b1 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
11b3 : f003            >        beq skip0111
                       >        trap            ;failed not equal (non zero)
11b5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11b8 :                 >skip0111
                       >
11b8 : 28              >            plp         ;restore status
                        
                                set_x $ff,$ff
                       >            load_flag $ff
11b9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
11bb : 48              >            pha         ;use stack to load status
11bc : a2ff            >            ldx #$ff     ;precharge index x
11be : 28              >            plp
                        
11bf : fa                       plx
                                tst_x 0,$ff-minus
11c0 : 08              >            php         ;save flags
11c1 : 08              >            php
11c2 : e000            >            cpx #0     ;test result
                       >            trap_ne
11c4 : f003            >        beq skip0116
                       >        trap            ;failed not equal (non zero)
11c6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11c9 :                 >skip0116
                       >
11c9 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
11ca : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
11cc : f003            >        beq skip0119
                       >        trap            ;failed not equal (non zero)
11ce : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11d1 :                 >skip0119
                       >
11d1 : 28              >            plp         ;restore status
                        
                                set_x $fe,0
                       >            load_flag 0
11d2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
11d4 : 48              >            pha         ;use stack to load status
11d5 : a2fe            >            ldx #$fe     ;precharge index x
11d7 : 28              >            plp
                        
11d8 : fa                       plx
                                tst_x 1,0
11d9 : 08              >            php         ;save flags
11da : 08              >            php
11db : e001            >            cpx #1     ;test result
                       >            trap_ne
11dd : f003            >        beq skip0124
                       >        trap            ;failed not equal (non zero)
11df : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11e2 :                 >skip0124
                       >
11e2 : 68              >            pla         ;load status
                       >            cmp_flag 0
11e3 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
11e5 : f003            >        beq skip0127
                       >        trap            ;failed not equal (non zero)
11e7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11ea :                 >skip0127
                       >
11ea : 28              >            plp         ;restore status
                        
11eb : c0aa                     cpy #$aa        ;Y unchanged
                                trap_ne
11ed : f003            >        beq skip0129
                       >        trap            ;failed not equal (non zero)
11ef : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11f2 :                 >skip0129
                        
                                next_test            
11f2 : ad0202          >            lda test_case   ;previous test
11f5 : c902            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
11f7 : f003            >        beq skip0132
                       >        trap            ;failed not equal (non zero)
11f9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11fc :                 >skip0132
                       >
0003 =                 >test_num = test_num + 1
11fc : a903            >            lda #test_num   ;*** next tests' number
11fe : 8d0202          >            sta test_case
1201 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                         
                        ; test PHY does not alter flags or Y but PLY does
1204 : a255                     ldx #$55        ;x & a protected
                                set_y 1,$ff     ;push
                       >            load_flag $ff     
1206 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
1208 : 48              >            pha         ;use stack to load status
1209 : a001            >            ldy #1     ;precharge index y
120b : 28              >            plp
                        
120c : 5a                       phy
                                tst_y 1,$ff
120d : 08              >            php         ;save flags
120e : 08              >            php
120f : c001            >            cpy #1     ;test result
                       >            trap_ne
1211 : f003            >        beq skip0137
                       >        trap            ;failed not equal (non zero)
1213 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1216 :                 >skip0137
                       >
1216 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1217 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1219 : f003            >        beq skip0140
                       >        trap            ;failed not equal (non zero)
121b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
121e :                 >skip0140
                       >
121e : 28              >            plp         ;restore status
                        
                                set_y 0,0
                       >            load_flag 0
121f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1221 : 48              >            pha         ;use stack to load status
1222 : a000            >            ldy #0     ;precharge index y
1224 : 28              >            plp
                        
1225 : 5a                       phy
                                tst_y 0,0
1226 : 08              >            php         ;save flags
1227 : 08              >            php
1228 : c000            >            cpy #0     ;test result
                       >            trap_ne
122a : f003            >        beq skip0145
                       >        trap            ;failed not equal (non zero)
122c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
122f :                 >skip0145
                       >
122f : 68              >            pla         ;load status
                       >            cmp_flag 0
1230 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1232 : f003            >        beq skip0148
                       >        trap            ;failed not equal (non zero)
1234 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1237 :                 >skip0148
                       >
1237 : 28              >            plp         ;restore status
                        
                                set_y $ff,$ff
                       >            load_flag $ff
1238 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
123a : 48              >            pha         ;use stack to load status
123b : a0ff            >            ldy #$ff     ;precharge index y
123d : 28              >            plp
                        
123e : 5a                       phy
                                tst_y $ff,$ff
123f : 08              >            php         ;save flags
1240 : 08              >            php
1241 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
1243 : f003            >        beq skip0153
                       >        trap            ;failed not equal (non zero)
1245 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1248 :                 >skip0153
                       >
1248 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1249 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
124b : f003            >        beq skip0156
                       >        trap            ;failed not equal (non zero)
124d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1250 :                 >skip0156
                       >
1250 : 28              >            plp         ;restore status
                        
                                set_y 1,0
                       >            load_flag 0
1251 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1253 : 48              >            pha         ;use stack to load status
1254 : a001            >            ldy #1     ;precharge index y
1256 : 28              >            plp
                        
1257 : 5a                       phy
                                tst_y 1,0
1258 : 08              >            php         ;save flags
1259 : 08              >            php
125a : c001            >            cpy #1     ;test result
                       >            trap_ne
125c : f003            >        beq skip0161
                       >        trap            ;failed not equal (non zero)
125e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1261 :                 >skip0161
                       >
1261 : 68              >            pla         ;load status
                       >            cmp_flag 0
1262 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1264 : f003            >        beq skip0164
                       >        trap            ;failed not equal (non zero)
1266 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1269 :                 >skip0164
                       >
1269 : 28              >            plp         ;restore status
                        
                                set_y 0,$ff
                       >            load_flag $ff
126a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
126c : 48              >            pha         ;use stack to load status
126d : a000            >            ldy #0     ;precharge index y
126f : 28              >            plp
                        
1270 : 5a                       phy
                                tst_y 0,$ff
1271 : 08              >            php         ;save flags
1272 : 08              >            php
1273 : c000            >            cpy #0     ;test result
                       >            trap_ne
1275 : f003            >        beq skip0169
                       >        trap            ;failed not equal (non zero)
1277 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
127a :                 >skip0169
                       >
127a : 68              >            pla         ;load status
                       >            cmp_flag $ff
127b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
127d : f003            >        beq skip0172
                       >        trap            ;failed not equal (non zero)
127f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1282 :                 >skip0172
                       >
1282 : 28              >            plp         ;restore status
                        
                                set_y $ff,0
                       >            load_flag 0
1283 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1285 : 48              >            pha         ;use stack to load status
1286 : a0ff            >            ldy #$ff     ;precharge index y
1288 : 28              >            plp
                        
1289 : 5a                       phy
                                tst_y $ff,0
128a : 08              >            php         ;save flags
128b : 08              >            php
128c : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
128e : f003            >        beq skip0177
                       >        trap            ;failed not equal (non zero)
1290 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1293 :                 >skip0177
                       >
1293 : 68              >            pla         ;load status
                       >            cmp_flag 0
1294 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1296 : f003            >        beq skip0180
                       >        trap            ;failed not equal (non zero)
1298 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
129b :                 >skip0180
                       >
129b : 28              >            plp         ;restore status
                        
                                set_y 0,$ff     ;pull
                       >            load_flag $ff     
129c : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
129e : 48              >            pha         ;use stack to load status
129f : a000            >            ldy #0     ;precharge index y
12a1 : 28              >            plp
                        
12a2 : 7a                       ply
                                tst_y $ff,$ff-zero
12a3 : 08              >            php         ;save flags
12a4 : 08              >            php
12a5 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
12a7 : f003            >        beq skip0185
                       >        trap            ;failed not equal (non zero)
12a9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12ac :                 >skip0185
                       >
12ac : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
12ad : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
12af : f003            >        beq skip0188
                       >        trap            ;failed not equal (non zero)
12b1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12b4 :                 >skip0188
                       >
12b4 : 28              >            plp         ;restore status
                        
                                set_y $ff,0
                       >            load_flag 0
12b5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
12b7 : 48              >            pha         ;use stack to load status
12b8 : a0ff            >            ldy #$ff     ;precharge index y
12ba : 28              >            plp
                        
12bb : 7a                       ply
                                tst_y 0,zero
12bc : 08              >            php         ;save flags
12bd : 08              >            php
12be : c000            >            cpy #0     ;test result
                       >            trap_ne
12c0 : f003            >        beq skip0193
                       >        trap            ;failed not equal (non zero)
12c2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12c5 :                 >skip0193
                       >
12c5 : 68              >            pla         ;load status
                       >            cmp_flag zero
12c6 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
12c8 : f003            >        beq skip0196
                       >        trap            ;failed not equal (non zero)
12ca : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12cd :                 >skip0196
                       >
12cd : 28              >            plp         ;restore status
                        
                                set_y $fe,$ff
                       >            load_flag $ff
12ce : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
12d0 : 48              >            pha         ;use stack to load status
12d1 : a0fe            >            ldy #$fe     ;precharge index y
12d3 : 28              >            plp
                        
12d4 : 7a                       ply
                                tst_y 1,$ff-zero-minus
12d5 : 08              >            php         ;save flags
12d6 : 08              >            php
12d7 : c001            >            cpy #1     ;test result
                       >            trap_ne
12d9 : f003            >        beq skip0201
                       >        trap            ;failed not equal (non zero)
12db : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12de :                 >skip0201
                       >
12de : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero-minus
12df : c97d            >            cmp #($ff-zero-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
12e1 : f003            >        beq skip0204
                       >        trap            ;failed not equal (non zero)
12e3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12e6 :                 >skip0204
                       >
12e6 : 28              >            plp         ;restore status
                        
                                set_y 0,0
                       >            load_flag 0
12e7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
12e9 : 48              >            pha         ;use stack to load status
12ea : a000            >            ldy #0     ;precharge index y
12ec : 28              >            plp
                        
12ed : 7a                       ply
                                tst_y $ff,minus
12ee : 08              >            php         ;save flags
12ef : 08              >            php
12f0 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
12f2 : f003            >        beq skip0209
                       >        trap            ;failed not equal (non zero)
12f4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12f7 :                 >skip0209
                       >
12f7 : 68              >            pla         ;load status
                       >            cmp_flag minus
12f8 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
12fa : f003            >        beq skip0212
                       >        trap            ;failed not equal (non zero)
12fc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12ff :                 >skip0212
                       >
12ff : 28              >            plp         ;restore status
                        
                                set_y $ff,$ff
                       >            load_flag $ff
1300 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1302 : 48              >            pha         ;use stack to load status
1303 : a0ff            >            ldy #$ff     ;precharge index y
1305 : 28              >            plp
                        
1306 : 7a                       ply
                                tst_y 0,$ff-minus
1307 : 08              >            php         ;save flags
1308 : 08              >            php
1309 : c000            >            cpy #0     ;test result
                       >            trap_ne
130b : f003            >        beq skip0217
                       >        trap            ;failed not equal (non zero)
130d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1310 :                 >skip0217
                       >
1310 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
1311 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1313 : f003            >        beq skip0220
                       >        trap            ;failed not equal (non zero)
1315 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1318 :                 >skip0220
                       >
1318 : 28              >            plp         ;restore status
                        
                                set_y $fe,0
                       >            load_flag 0
1319 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
131b : 48              >            pha         ;use stack to load status
131c : a0fe            >            ldy #$fe     ;precharge index y
131e : 28              >            plp
                        
131f : 7a                       ply
                                tst_y 1,0
1320 : 08              >            php         ;save flags
1321 : 08              >            php
1322 : c001            >            cpy #1     ;test result
                       >            trap_ne
1324 : f003            >        beq skip0225
                       >        trap            ;failed not equal (non zero)
1326 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1329 :                 >skip0225
                       >
1329 : 68              >            pla         ;load status
                       >            cmp_flag 0
132a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
132c : f003            >        beq skip0228
                       >        trap            ;failed not equal (non zero)
132e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1331 :                 >skip0228
                       >
1331 : 28              >            plp         ;restore status
                        
1332 : e055                     cpx #$55        ;x unchanged?
                                trap_ne
1334 : f003            >        beq skip0230
                       >        trap            ;failed not equal (non zero)
1336 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1339 :                 >skip0230
                        
                                next_test            
1339 : ad0202          >            lda test_case   ;previous test
133c : c903            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
133e : f003            >        beq skip0233
                       >        trap            ;failed not equal (non zero)
1340 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1343 :                 >skip0233
                       >
0004 =                 >test_num = test_num + 1
1343 : a904            >            lda #test_num   ;*** next tests' number
1345 : 8d0202          >            sta test_case
1348 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                         
                        ; PC modifying instructions (BRA, BBR, BBS, 1, 2, 3 byte NOPs, JMP(abs,x))
                        ; testing unconditional branch BRA
                        
134b : a281                     ldx #$81        ;protect unused registers
134d : a07e                     ldy #$7e
                                set_a 0,$ff
                       >            load_flag $ff
134f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1351 : 48              >            pha         ;use stack to load status
1352 : a900            >            lda #0     ;precharge accu
1354 : 28              >            plp
                        
1355 : 8003                     bra br1         ;branch should always be taken
                                trap 
1357 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
135a :                  br1
                                tst_a 0,$ff
135a : 08              >            php         ;save flags
135b : 08              >            php
135c : c900            >            cmp #0     ;test result
                       >            trap_ne
135e : f003            >        beq skip0239
                       >        trap            ;failed not equal (non zero)
1360 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1363 :                 >skip0239
                       >
1363 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1364 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1366 : f003            >        beq skip0242
                       >        trap            ;failed not equal (non zero)
1368 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
136b :                 >skip0242
                       >
136b : 28              >            plp         ;restore status
                        
                                set_a $ff,0
                       >            load_flag 0
136c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
136e : 48              >            pha         ;use stack to load status
136f : a9ff            >            lda #$ff     ;precharge accu
1371 : 28              >            plp
                        
1372 : 8003                     bra br2         ;branch should always be taken
                                trap 
1374 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1377 :                  br2
                                tst_a $ff,0
1377 : 08              >            php         ;save flags
1378 : 08              >            php
1379 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
137b : f003            >        beq skip0248
                       >        trap            ;failed not equal (non zero)
137d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1380 :                 >skip0248
                       >
1380 : 68              >            pla         ;load status
                       >            cmp_flag 0
1381 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1383 : f003            >        beq skip0251
                       >        trap            ;failed not equal (non zero)
1385 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1388 :                 >skip0251
                       >
1388 : 28              >            plp         ;restore status
                        
1389 : e081                     cpx #$81
                                trap_ne
138b : f003            >        beq skip0253
                       >        trap            ;failed not equal (non zero)
138d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1390 :                 >skip0253
                        
1390 : c07e                     cpy #$7e
                                trap_ne
1392 : f003            >        beq skip0255
                       >        trap            ;failed not equal (non zero)
1394 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1397 :                 >skip0255
                        
                                next_test            
1397 : ad0202          >            lda test_case   ;previous test
139a : c904            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
139c : f003            >        beq skip0258
                       >        trap            ;failed not equal (non zero)
139e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
13a1 :                 >skip0258
                       >
0005 =                 >test_num = test_num + 1
13a1 : a905            >            lda #test_num   ;*** next tests' number
13a3 : 8d0202          >            sta test_case
13a6 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
13a9 : a000                     ldy #0          ;branch range test  
13ab : 8076                     bra bra0
                                
13ad : c001             bra1    cpy #1
                                trap_ne         ;long range backward
13af : f003            >        beq skip0260
                       >        trap            ;failed not equal (non zero)
13b1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
13b4 :                 >skip0260
                        
13b4 : c8                       iny        
13b5 : 8062                     bra bra2
                                        
13b7 : c003             bra3    cpy #3
                                trap_ne         ;long range backward
13b9 : f003            >        beq skip0262
                       >        trap            ;failed not equal (non zero)
13bb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
13be :                 >skip0262
                        
13be : c8                       iny        
13bf : 804e                     bra bra4
                                        
13c1 : c005             bra5    cpy #5
                                trap_ne         ;long range backward
13c3 : f003            >        beq skip0264
                       >        trap            ;failed not equal (non zero)
13c5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
13c8 :                 >skip0264
                        
13c8 : c8                       iny        
13c9 : a000                     ldy #0
13cb : 8004                     bra brf0
                                
13cd : c8                       iny
13ce : c8                       iny
13cf : c8                       iny
13d0 : c8                       iny        
13d1 : 8003             brf0    bra brf1
                        
13d3 : c8                       iny
13d4 : c8                       iny
13d5 : c8                       iny
13d6 : c8               brf1    iny        
13d7 : 8002                     bra brf2
                                
13d9 : c8                       iny
13da : c8                       iny
13db : c8               brf2    iny
13dc : c8                       iny        
13dd : 8001                     bra brf3
                                
13df : c8                       iny
13e0 : c8               brf3    iny
13e1 : c8                       iny
13e2 : c8                       iny        
13e3 : 8000                     bra brf4
                                
13e5 : c8               brf4    iny
13e6 : c8                       iny
13e7 : c8                       iny
13e8 : c8                       iny
13e9 : c00a                     cpy #10
                                trap_ne     ;short range forward
13eb : f003            >        beq skip0266
                       >        trap            ;failed not equal (non zero)
13ed : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
13f0 :                 >skip0266
                        
13f0 : 8012                     bra brb0
                        
13f2 : 88               brb4    dey
13f3 : 88                       dey
13f4 : 88                       dey
13f5 : 88                       dey
13f6 : 800e                     bra brb5        
                        
13f8 : 88               brb3    dey
13f9 : 88                       dey
13fa : 88                       dey
13fb : 80f5                     bra brb4        
                        
13fd : 88               brb2    dey
13fe : 88                       dey
13ff : 80f7                     bra brb3        
                        
1401 : 88               brb1    dey
1402 : 80f9                     bra brb2        
                        
1404 : 80fb             brb0    bra brb1        
                        
1406 : c000             brb5    cpy #0
                                trap_ne     ;short range backward
1408 : f003            >        beq skip0268
                       >        trap            ;failed not equal (non zero)
140a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
140d :                 >skip0268
                        
140d : 801e                     bra bra6
                        
140f : c004             bra4    cpy #4
                                trap_ne     ;long range forward
1411 : f003            >        beq skip0270
                       >        trap            ;failed not equal (non zero)
1413 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1416 :                 >skip0270
                        
1416 : c8                       iny        
1417 : 80a8                     bra bra5
                                        
1419 : c002             bra2    cpy #2
                                trap_ne     ;long range forward
141b : f003            >        beq skip0272
                       >        trap            ;failed not equal (non zero)
141d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1420 :                 >skip0272
                        
1420 : c8                       iny        
1421 : 8094                     bra bra3
                                        
1423 : c000             bra0    cpy #0
                                trap_ne     ;long range forward
1425 : f003            >        beq skip0274
                       >        trap            ;failed not equal (non zero)
1427 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
142a :                 >skip0274
                        
142a : c8                       iny        
142b : 8080                     bra bra1
                                        
142d :                  bra6
                                next_test
142d : ad0202          >            lda test_case   ;previous test
1430 : c905            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1432 : f003            >        beq skip0277
                       >        trap            ;failed not equal (non zero)
1434 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1437 :                 >skip0277
                       >
0006 =                 >test_num = test_num + 1
1437 : a906            >            lda #test_num   ;*** next tests' number
1439 : 8d0202          >            sta test_case
143c : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                            if rkwl_wdc_op = 1
                        ; testing BBR & BBS
                        
                        bbt     macro           ;\1 = bitnum
                                lda #(1<<\1)    ;testing 1 bit on
                                sta zpt
                                set_a $33,0     ;with flags off
                                bbr \1,zpt,fail1\?
                                bbs \1,zpt,ok1\?
                                trap            ;bbs branch not taken
                        fail1\?
                                trap            ;bbr branch taken
                        ok1\?   
                                tst_a $33,0
                                set_a $cc,$ff   ;with flags on
                                bbr \1,zpt,fail2\?
                                bbs \1,zpt,ok2\?
                                trap            ;bbs branch not taken
                        fail2\? 
                                trap            ;bbr branch taken
                        ok2\?   
                                tst_a $cc,$ff
                                lda zpt
                                cmp #(1<<\1)
                                trap_ne         ;zp altered
                                lda #$ff-(1<<\1) ;testing 1 bit off
                                sta zpt
                                set_a $33,0     ;with flags off
                                bbs \1,zpt,fail3\?
                                bbr \1,zpt,ok3\?
                                trap            ;bbr branch not taken
                        fail3\? 
                                trap            ;bbs branch taken
                        ok3\?   
                                tst_a $33,0
                                set_a $cc,$ff   ;with flags on
                                bbs \1,zpt,fail4\?
                                bbr \1,zpt,ok4\?
                                trap            ;bbr branch not taken
                        fail4\? 
                                trap            ;bbs branch taken
                        ok4\?   
                                tst_a $cc,$ff
                                lda zpt
                                cmp #$ff-(1<<\1)
                                trap_ne         ;zp altered
                                endm
                        
143f : a211                     ldx #$11        ;test bbr/bbs integrity
1441 : a022                     ldy #$22
                                bbt 0
1443 : a901            >        lda #(1<<0)    ;testing 1 bit on
1445 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1447 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1449 : 48              >            pha         ;use stack to load status
144a : a933            >            lda #$33     ;precharge accu
144c : 28              >            plp
                       >
144d : 0f1006          >        bbr 0,zpt,fail10279
1450 : 8f1006          >        bbs 0,zpt,ok10279
                       >        trap            ;bbs branch not taken
1453 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1456 :                 >fail10279
                       >        trap            ;bbr branch taken
1456 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1459 :                 >ok10279   
                       >        tst_a $33,0
1459 : 08              >            php         ;save flags
145a : 08              >            php
145b : c933            >            cmp #$33     ;test result
                       >            trap_ne
145d : f003            >        beq skip0285
                       >        trap            ;failed not equal (non zero)
145f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1462 :                 >skip0285
                       >
1462 : 68              >            pla         ;load status
                       >            cmp_flag 0
1463 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1465 : f003            >        beq skip0288
                       >        trap            ;failed not equal (non zero)
1467 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
146a :                 >skip0288
                       >
146a : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
146b : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
146d : 48              >            pha         ;use stack to load status
146e : a9cc            >            lda #$cc     ;precharge accu
1470 : 28              >            plp
                       >
1471 : 0f1006          >        bbr 0,zpt,fail20279
1474 : 8f1006          >        bbs 0,zpt,ok20279
                       >        trap            ;bbs branch not taken
1477 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
147a :                 >fail20279 
                       >        trap            ;bbr branch taken
147a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
147d :                 >ok20279   
                       >        tst_a $cc,$ff
147d : 08              >            php         ;save flags
147e : 08              >            php
147f : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1481 : f003            >        beq skip0295
                       >        trap            ;failed not equal (non zero)
1483 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1486 :                 >skip0295
                       >
1486 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1487 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1489 : f003            >        beq skip0298
                       >        trap            ;failed not equal (non zero)
148b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
148e :                 >skip0298
                       >
148e : 28              >            plp         ;restore status
                       >
148f : a510            >        lda zpt
1491 : c901            >        cmp #(1<<0)
                       >        trap_ne         ;zp altered
1493 : f003            >        beq skip0300
                       >        trap            ;failed not equal (non zero)
1495 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1498 :                 >skip0300
                       >
1498 : a9fe            >        lda #$ff-(1<<0) ;testing 1 bit off
149a : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
149c : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
149e : 48              >            pha         ;use stack to load status
149f : a933            >            lda #$33     ;precharge accu
14a1 : 28              >            plp
                       >
14a2 : 8f1006          >        bbs 0,zpt,fail30279
14a5 : 0f1006          >        bbr 0,zpt,ok30279
                       >        trap            ;bbr branch not taken
14a8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14ab :                 >fail30279 
                       >        trap            ;bbs branch taken
14ab : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14ae :                 >ok30279   
                       >        tst_a $33,0
14ae : 08              >            php         ;save flags
14af : 08              >            php
14b0 : c933            >            cmp #$33     ;test result
                       >            trap_ne
14b2 : f003            >        beq skip0307
                       >        trap            ;failed not equal (non zero)
14b4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14b7 :                 >skip0307
                       >
14b7 : 68              >            pla         ;load status
                       >            cmp_flag 0
14b8 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
14ba : f003            >        beq skip0310
                       >        trap            ;failed not equal (non zero)
14bc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14bf :                 >skip0310
                       >
14bf : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
14c0 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
14c2 : 48              >            pha         ;use stack to load status
14c3 : a9cc            >            lda #$cc     ;precharge accu
14c5 : 28              >            plp
                       >
14c6 : 8f1006          >        bbs 0,zpt,fail40279
14c9 : 0f1006          >        bbr 0,zpt,ok40279
                       >        trap            ;bbr branch not taken
14cc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14cf :                 >fail40279 
                       >        trap            ;bbs branch taken
14cf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14d2 :                 >ok40279   
                       >        tst_a $cc,$ff
14d2 : 08              >            php         ;save flags
14d3 : 08              >            php
14d4 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
14d6 : f003            >        beq skip0317
                       >        trap            ;failed not equal (non zero)
14d8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14db :                 >skip0317
                       >
14db : 68              >            pla         ;load status
                       >            cmp_flag $ff
14dc : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
14de : f003            >        beq skip0320
                       >        trap            ;failed not equal (non zero)
14e0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14e3 :                 >skip0320
                       >
14e3 : 28              >            plp         ;restore status
                       >
14e4 : a510            >        lda zpt
14e6 : c9fe            >        cmp #$ff-(1<<0)
                       >        trap_ne         ;zp altered
14e8 : f003            >        beq skip0322
                       >        trap            ;failed not equal (non zero)
14ea : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14ed :                 >skip0322
                       >
                        
                                bbt 1
14ed : a902            >        lda #(1<<1)    ;testing 1 bit on
14ef : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
14f1 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
14f3 : 48              >            pha         ;use stack to load status
14f4 : a933            >            lda #$33     ;precharge accu
14f6 : 28              >            plp
                       >
14f7 : 1f1006          >        bbr 1,zpt,fail10324
14fa : 9f1006          >        bbs 1,zpt,ok10324
                       >        trap            ;bbs branch not taken
14fd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1500 :                 >fail10324
                       >        trap            ;bbr branch taken
1500 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1503 :                 >ok10324   
                       >        tst_a $33,0
1503 : 08              >            php         ;save flags
1504 : 08              >            php
1505 : c933            >            cmp #$33     ;test result
                       >            trap_ne
1507 : f003            >        beq skip0330
                       >        trap            ;failed not equal (non zero)
1509 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
150c :                 >skip0330
                       >
150c : 68              >            pla         ;load status
                       >            cmp_flag 0
150d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
150f : f003            >        beq skip0333
                       >        trap            ;failed not equal (non zero)
1511 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1514 :                 >skip0333
                       >
1514 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1515 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1517 : 48              >            pha         ;use stack to load status
1518 : a9cc            >            lda #$cc     ;precharge accu
151a : 28              >            plp
                       >
151b : 1f1006          >        bbr 1,zpt,fail20324
151e : 9f1006          >        bbs 1,zpt,ok20324
                       >        trap            ;bbs branch not taken
1521 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1524 :                 >fail20324 
                       >        trap            ;bbr branch taken
1524 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1527 :                 >ok20324   
                       >        tst_a $cc,$ff
1527 : 08              >            php         ;save flags
1528 : 08              >            php
1529 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
152b : f003            >        beq skip0340
                       >        trap            ;failed not equal (non zero)
152d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1530 :                 >skip0340
                       >
1530 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1531 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1533 : f003            >        beq skip0343
                       >        trap            ;failed not equal (non zero)
1535 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1538 :                 >skip0343
                       >
1538 : 28              >            plp         ;restore status
                       >
1539 : a510            >        lda zpt
153b : c902            >        cmp #(1<<1)
                       >        trap_ne         ;zp altered
153d : f003            >        beq skip0345
                       >        trap            ;failed not equal (non zero)
153f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1542 :                 >skip0345
                       >
1542 : a9fd            >        lda #$ff-(1<<1) ;testing 1 bit off
1544 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1546 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1548 : 48              >            pha         ;use stack to load status
1549 : a933            >            lda #$33     ;precharge accu
154b : 28              >            plp
                       >
154c : 9f1006          >        bbs 1,zpt,fail30324
154f : 1f1006          >        bbr 1,zpt,ok30324
                       >        trap            ;bbr branch not taken
1552 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1555 :                 >fail30324 
                       >        trap            ;bbs branch taken
1555 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1558 :                 >ok30324   
                       >        tst_a $33,0
1558 : 08              >            php         ;save flags
1559 : 08              >            php
155a : c933            >            cmp #$33     ;test result
                       >            trap_ne
155c : f003            >        beq skip0352
                       >        trap            ;failed not equal (non zero)
155e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1561 :                 >skip0352
                       >
1561 : 68              >            pla         ;load status
                       >            cmp_flag 0
1562 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1564 : f003            >        beq skip0355
                       >        trap            ;failed not equal (non zero)
1566 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1569 :                 >skip0355
                       >
1569 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
156a : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
156c : 48              >            pha         ;use stack to load status
156d : a9cc            >            lda #$cc     ;precharge accu
156f : 28              >            plp
                       >
1570 : 9f1006          >        bbs 1,zpt,fail40324
1573 : 1f1006          >        bbr 1,zpt,ok40324
                       >        trap            ;bbr branch not taken
1576 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1579 :                 >fail40324 
                       >        trap            ;bbs branch taken
1579 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
157c :                 >ok40324   
                       >        tst_a $cc,$ff
157c : 08              >            php         ;save flags
157d : 08              >            php
157e : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1580 : f003            >        beq skip0362
                       >        trap            ;failed not equal (non zero)
1582 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1585 :                 >skip0362
                       >
1585 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1586 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1588 : f003            >        beq skip0365
                       >        trap            ;failed not equal (non zero)
158a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
158d :                 >skip0365
                       >
158d : 28              >            plp         ;restore status
                       >
158e : a510            >        lda zpt
1590 : c9fd            >        cmp #$ff-(1<<1)
                       >        trap_ne         ;zp altered
1592 : f003            >        beq skip0367
                       >        trap            ;failed not equal (non zero)
1594 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1597 :                 >skip0367
                       >
                        
                                bbt 2
1597 : a904            >        lda #(1<<2)    ;testing 1 bit on
1599 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
159b : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
159d : 48              >            pha         ;use stack to load status
159e : a933            >            lda #$33     ;precharge accu
15a0 : 28              >            plp
                       >
15a1 : 2f1006          >        bbr 2,zpt,fail10369
15a4 : af1006          >        bbs 2,zpt,ok10369
                       >        trap            ;bbs branch not taken
15a7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15aa :                 >fail10369
                       >        trap            ;bbr branch taken
15aa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15ad :                 >ok10369   
                       >        tst_a $33,0
15ad : 08              >            php         ;save flags
15ae : 08              >            php
15af : c933            >            cmp #$33     ;test result
                       >            trap_ne
15b1 : f003            >        beq skip0375
                       >        trap            ;failed not equal (non zero)
15b3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15b6 :                 >skip0375
                       >
15b6 : 68              >            pla         ;load status
                       >            cmp_flag 0
15b7 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
15b9 : f003            >        beq skip0378
                       >        trap            ;failed not equal (non zero)
15bb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15be :                 >skip0378
                       >
15be : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
15bf : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
15c1 : 48              >            pha         ;use stack to load status
15c2 : a9cc            >            lda #$cc     ;precharge accu
15c4 : 28              >            plp
                       >
15c5 : 2f1006          >        bbr 2,zpt,fail20369
15c8 : af1006          >        bbs 2,zpt,ok20369
                       >        trap            ;bbs branch not taken
15cb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15ce :                 >fail20369 
                       >        trap            ;bbr branch taken
15ce : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15d1 :                 >ok20369   
                       >        tst_a $cc,$ff
15d1 : 08              >            php         ;save flags
15d2 : 08              >            php
15d3 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
15d5 : f003            >        beq skip0385
                       >        trap            ;failed not equal (non zero)
15d7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15da :                 >skip0385
                       >
15da : 68              >            pla         ;load status
                       >            cmp_flag $ff
15db : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
15dd : f003            >        beq skip0388
                       >        trap            ;failed not equal (non zero)
15df : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15e2 :                 >skip0388
                       >
15e2 : 28              >            plp         ;restore status
                       >
15e3 : a510            >        lda zpt
15e5 : c904            >        cmp #(1<<2)
                       >        trap_ne         ;zp altered
15e7 : f003            >        beq skip0390
                       >        trap            ;failed not equal (non zero)
15e9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15ec :                 >skip0390
                       >
15ec : a9fb            >        lda #$ff-(1<<2) ;testing 1 bit off
15ee : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
15f0 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
15f2 : 48              >            pha         ;use stack to load status
15f3 : a933            >            lda #$33     ;precharge accu
15f5 : 28              >            plp
                       >
15f6 : af1006          >        bbs 2,zpt,fail30369
15f9 : 2f1006          >        bbr 2,zpt,ok30369
                       >        trap            ;bbr branch not taken
15fc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15ff :                 >fail30369 
                       >        trap            ;bbs branch taken
15ff : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1602 :                 >ok30369   
                       >        tst_a $33,0
1602 : 08              >            php         ;save flags
1603 : 08              >            php
1604 : c933            >            cmp #$33     ;test result
                       >            trap_ne
1606 : f003            >        beq skip0397
                       >        trap            ;failed not equal (non zero)
1608 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
160b :                 >skip0397
                       >
160b : 68              >            pla         ;load status
                       >            cmp_flag 0
160c : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
160e : f003            >        beq skip0400
                       >        trap            ;failed not equal (non zero)
1610 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1613 :                 >skip0400
                       >
1613 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1614 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1616 : 48              >            pha         ;use stack to load status
1617 : a9cc            >            lda #$cc     ;precharge accu
1619 : 28              >            plp
                       >
161a : af1006          >        bbs 2,zpt,fail40369
161d : 2f1006          >        bbr 2,zpt,ok40369
                       >        trap            ;bbr branch not taken
1620 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1623 :                 >fail40369 
                       >        trap            ;bbs branch taken
1623 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1626 :                 >ok40369   
                       >        tst_a $cc,$ff
1626 : 08              >            php         ;save flags
1627 : 08              >            php
1628 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
162a : f003            >        beq skip0407
                       >        trap            ;failed not equal (non zero)
162c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
162f :                 >skip0407
                       >
162f : 68              >            pla         ;load status
                       >            cmp_flag $ff
1630 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1632 : f003            >        beq skip0410
                       >        trap            ;failed not equal (non zero)
1634 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1637 :                 >skip0410
                       >
1637 : 28              >            plp         ;restore status
                       >
1638 : a510            >        lda zpt
163a : c9fb            >        cmp #$ff-(1<<2)
                       >        trap_ne         ;zp altered
163c : f003            >        beq skip0412
                       >        trap            ;failed not equal (non zero)
163e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1641 :                 >skip0412
                       >
                        
                                bbt 3
1641 : a908            >        lda #(1<<3)    ;testing 1 bit on
1643 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1645 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1647 : 48              >            pha         ;use stack to load status
1648 : a933            >            lda #$33     ;precharge accu
164a : 28              >            plp
                       >
164b : 3f1006          >        bbr 3,zpt,fail10414
164e : bf1006          >        bbs 3,zpt,ok10414
                       >        trap            ;bbs branch not taken
1651 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1654 :                 >fail10414
                       >        trap            ;bbr branch taken
1654 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1657 :                 >ok10414   
                       >        tst_a $33,0
1657 : 08              >            php         ;save flags
1658 : 08              >            php
1659 : c933            >            cmp #$33     ;test result
                       >            trap_ne
165b : f003            >        beq skip0420
                       >        trap            ;failed not equal (non zero)
165d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1660 :                 >skip0420
                       >
1660 : 68              >            pla         ;load status
                       >            cmp_flag 0
1661 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1663 : f003            >        beq skip0423
                       >        trap            ;failed not equal (non zero)
1665 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1668 :                 >skip0423
                       >
1668 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1669 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
166b : 48              >            pha         ;use stack to load status
166c : a9cc            >            lda #$cc     ;precharge accu
166e : 28              >            plp
                       >
166f : 3f1006          >        bbr 3,zpt,fail20414
1672 : bf1006          >        bbs 3,zpt,ok20414
                       >        trap            ;bbs branch not taken
1675 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1678 :                 >fail20414 
                       >        trap            ;bbr branch taken
1678 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
167b :                 >ok20414   
                       >        tst_a $cc,$ff
167b : 08              >            php         ;save flags
167c : 08              >            php
167d : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
167f : f003            >        beq skip0430
                       >        trap            ;failed not equal (non zero)
1681 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1684 :                 >skip0430
                       >
1684 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1685 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1687 : f003            >        beq skip0433
                       >        trap            ;failed not equal (non zero)
1689 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
168c :                 >skip0433
                       >
168c : 28              >            plp         ;restore status
                       >
168d : a510            >        lda zpt
168f : c908            >        cmp #(1<<3)
                       >        trap_ne         ;zp altered
1691 : f003            >        beq skip0435
                       >        trap            ;failed not equal (non zero)
1693 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1696 :                 >skip0435
                       >
1696 : a9f7            >        lda #$ff-(1<<3) ;testing 1 bit off
1698 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
169a : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
169c : 48              >            pha         ;use stack to load status
169d : a933            >            lda #$33     ;precharge accu
169f : 28              >            plp
                       >
16a0 : bf1006          >        bbs 3,zpt,fail30414
16a3 : 3f1006          >        bbr 3,zpt,ok30414
                       >        trap            ;bbr branch not taken
16a6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16a9 :                 >fail30414 
                       >        trap            ;bbs branch taken
16a9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16ac :                 >ok30414   
                       >        tst_a $33,0
16ac : 08              >            php         ;save flags
16ad : 08              >            php
16ae : c933            >            cmp #$33     ;test result
                       >            trap_ne
16b0 : f003            >        beq skip0442
                       >        trap            ;failed not equal (non zero)
16b2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16b5 :                 >skip0442
                       >
16b5 : 68              >            pla         ;load status
                       >            cmp_flag 0
16b6 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
16b8 : f003            >        beq skip0445
                       >        trap            ;failed not equal (non zero)
16ba : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16bd :                 >skip0445
                       >
16bd : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
16be : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
16c0 : 48              >            pha         ;use stack to load status
16c1 : a9cc            >            lda #$cc     ;precharge accu
16c3 : 28              >            plp
                       >
16c4 : bf1006          >        bbs 3,zpt,fail40414
16c7 : 3f1006          >        bbr 3,zpt,ok40414
                       >        trap            ;bbr branch not taken
16ca : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16cd :                 >fail40414 
                       >        trap            ;bbs branch taken
16cd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16d0 :                 >ok40414   
                       >        tst_a $cc,$ff
16d0 : 08              >            php         ;save flags
16d1 : 08              >            php
16d2 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
16d4 : f003            >        beq skip0452
                       >        trap            ;failed not equal (non zero)
16d6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16d9 :                 >skip0452
                       >
16d9 : 68              >            pla         ;load status
                       >            cmp_flag $ff
16da : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
16dc : f003            >        beq skip0455
                       >        trap            ;failed not equal (non zero)
16de : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16e1 :                 >skip0455
                       >
16e1 : 28              >            plp         ;restore status
                       >
16e2 : a510            >        lda zpt
16e4 : c9f7            >        cmp #$ff-(1<<3)
                       >        trap_ne         ;zp altered
16e6 : f003            >        beq skip0457
                       >        trap            ;failed not equal (non zero)
16e8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16eb :                 >skip0457
                       >
                        
                                bbt 4
16eb : a910            >        lda #(1<<4)    ;testing 1 bit on
16ed : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
16ef : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
16f1 : 48              >            pha         ;use stack to load status
16f2 : a933            >            lda #$33     ;precharge accu
16f4 : 28              >            plp
                       >
16f5 : 4f1006          >        bbr 4,zpt,fail10459
16f8 : cf1006          >        bbs 4,zpt,ok10459
                       >        trap            ;bbs branch not taken
16fb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16fe :                 >fail10459
                       >        trap            ;bbr branch taken
16fe : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1701 :                 >ok10459   
                       >        tst_a $33,0
1701 : 08              >            php         ;save flags
1702 : 08              >            php
1703 : c933            >            cmp #$33     ;test result
                       >            trap_ne
1705 : f003            >        beq skip0465
                       >        trap            ;failed not equal (non zero)
1707 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
170a :                 >skip0465
                       >
170a : 68              >            pla         ;load status
                       >            cmp_flag 0
170b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
170d : f003            >        beq skip0468
                       >        trap            ;failed not equal (non zero)
170f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1712 :                 >skip0468
                       >
1712 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1713 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1715 : 48              >            pha         ;use stack to load status
1716 : a9cc            >            lda #$cc     ;precharge accu
1718 : 28              >            plp
                       >
1719 : 4f1006          >        bbr 4,zpt,fail20459
171c : cf1006          >        bbs 4,zpt,ok20459
                       >        trap            ;bbs branch not taken
171f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1722 :                 >fail20459 
                       >        trap            ;bbr branch taken
1722 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1725 :                 >ok20459   
                       >        tst_a $cc,$ff
1725 : 08              >            php         ;save flags
1726 : 08              >            php
1727 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1729 : f003            >        beq skip0475
                       >        trap            ;failed not equal (non zero)
172b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
172e :                 >skip0475
                       >
172e : 68              >            pla         ;load status
                       >            cmp_flag $ff
172f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1731 : f003            >        beq skip0478
                       >        trap            ;failed not equal (non zero)
1733 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1736 :                 >skip0478
                       >
1736 : 28              >            plp         ;restore status
                       >
1737 : a510            >        lda zpt
1739 : c910            >        cmp #(1<<4)
                       >        trap_ne         ;zp altered
173b : f003            >        beq skip0480
                       >        trap            ;failed not equal (non zero)
173d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1740 :                 >skip0480
                       >
1740 : a9ef            >        lda #$ff-(1<<4) ;testing 1 bit off
1742 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1744 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1746 : 48              >            pha         ;use stack to load status
1747 : a933            >            lda #$33     ;precharge accu
1749 : 28              >            plp
                       >
174a : cf1006          >        bbs 4,zpt,fail30459
174d : 4f1006          >        bbr 4,zpt,ok30459
                       >        trap            ;bbr branch not taken
1750 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1753 :                 >fail30459 
                       >        trap            ;bbs branch taken
1753 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1756 :                 >ok30459   
                       >        tst_a $33,0
1756 : 08              >            php         ;save flags
1757 : 08              >            php
1758 : c933            >            cmp #$33     ;test result
                       >            trap_ne
175a : f003            >        beq skip0487
                       >        trap            ;failed not equal (non zero)
175c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
175f :                 >skip0487
                       >
175f : 68              >            pla         ;load status
                       >            cmp_flag 0
1760 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1762 : f003            >        beq skip0490
                       >        trap            ;failed not equal (non zero)
1764 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1767 :                 >skip0490
                       >
1767 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1768 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
176a : 48              >            pha         ;use stack to load status
176b : a9cc            >            lda #$cc     ;precharge accu
176d : 28              >            plp
                       >
176e : cf1006          >        bbs 4,zpt,fail40459
1771 : 4f1006          >        bbr 4,zpt,ok40459
                       >        trap            ;bbr branch not taken
1774 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1777 :                 >fail40459 
                       >        trap            ;bbs branch taken
1777 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
177a :                 >ok40459   
                       >        tst_a $cc,$ff
177a : 08              >            php         ;save flags
177b : 08              >            php
177c : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
177e : f003            >        beq skip0497
                       >        trap            ;failed not equal (non zero)
1780 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1783 :                 >skip0497
                       >
1783 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1784 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1786 : f003            >        beq skip0500
                       >        trap            ;failed not equal (non zero)
1788 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
178b :                 >skip0500
                       >
178b : 28              >            plp         ;restore status
                       >
178c : a510            >        lda zpt
178e : c9ef            >        cmp #$ff-(1<<4)
                       >        trap_ne         ;zp altered
1790 : f003            >        beq skip0502
                       >        trap            ;failed not equal (non zero)
1792 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1795 :                 >skip0502
                       >
                        
                                bbt 5
1795 : a920            >        lda #(1<<5)    ;testing 1 bit on
1797 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1799 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
179b : 48              >            pha         ;use stack to load status
179c : a933            >            lda #$33     ;precharge accu
179e : 28              >            plp
                       >
179f : 5f1006          >        bbr 5,zpt,fail10504
17a2 : df1006          >        bbs 5,zpt,ok10504
                       >        trap            ;bbs branch not taken
17a5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17a8 :                 >fail10504
                       >        trap            ;bbr branch taken
17a8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17ab :                 >ok10504   
                       >        tst_a $33,0
17ab : 08              >            php         ;save flags
17ac : 08              >            php
17ad : c933            >            cmp #$33     ;test result
                       >            trap_ne
17af : f003            >        beq skip0510
                       >        trap            ;failed not equal (non zero)
17b1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17b4 :                 >skip0510
                       >
17b4 : 68              >            pla         ;load status
                       >            cmp_flag 0
17b5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
17b7 : f003            >        beq skip0513
                       >        trap            ;failed not equal (non zero)
17b9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17bc :                 >skip0513
                       >
17bc : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
17bd : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
17bf : 48              >            pha         ;use stack to load status
17c0 : a9cc            >            lda #$cc     ;precharge accu
17c2 : 28              >            plp
                       >
17c3 : 5f1006          >        bbr 5,zpt,fail20504
17c6 : df1006          >        bbs 5,zpt,ok20504
                       >        trap            ;bbs branch not taken
17c9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17cc :                 >fail20504 
                       >        trap            ;bbr branch taken
17cc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17cf :                 >ok20504   
                       >        tst_a $cc,$ff
17cf : 08              >            php         ;save flags
17d0 : 08              >            php
17d1 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
17d3 : f003            >        beq skip0520
                       >        trap            ;failed not equal (non zero)
17d5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17d8 :                 >skip0520
                       >
17d8 : 68              >            pla         ;load status
                       >            cmp_flag $ff
17d9 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
17db : f003            >        beq skip0523
                       >        trap            ;failed not equal (non zero)
17dd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17e0 :                 >skip0523
                       >
17e0 : 28              >            plp         ;restore status
                       >
17e1 : a510            >        lda zpt
17e3 : c920            >        cmp #(1<<5)
                       >        trap_ne         ;zp altered
17e5 : f003            >        beq skip0525
                       >        trap            ;failed not equal (non zero)
17e7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17ea :                 >skip0525
                       >
17ea : a9df            >        lda #$ff-(1<<5) ;testing 1 bit off
17ec : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
17ee : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
17f0 : 48              >            pha         ;use stack to load status
17f1 : a933            >            lda #$33     ;precharge accu
17f3 : 28              >            plp
                       >
17f4 : df1006          >        bbs 5,zpt,fail30504
17f7 : 5f1006          >        bbr 5,zpt,ok30504
                       >        trap            ;bbr branch not taken
17fa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17fd :                 >fail30504 
                       >        trap            ;bbs branch taken
17fd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1800 :                 >ok30504   
                       >        tst_a $33,0
1800 : 08              >            php         ;save flags
1801 : 08              >            php
1802 : c933            >            cmp #$33     ;test result
                       >            trap_ne
1804 : f003            >        beq skip0532
                       >        trap            ;failed not equal (non zero)
1806 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1809 :                 >skip0532
                       >
1809 : 68              >            pla         ;load status
                       >            cmp_flag 0
180a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
180c : f003            >        beq skip0535
                       >        trap            ;failed not equal (non zero)
180e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1811 :                 >skip0535
                       >
1811 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1812 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1814 : 48              >            pha         ;use stack to load status
1815 : a9cc            >            lda #$cc     ;precharge accu
1817 : 28              >            plp
                       >
1818 : df1006          >        bbs 5,zpt,fail40504
181b : 5f1006          >        bbr 5,zpt,ok40504
                       >        trap            ;bbr branch not taken
181e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1821 :                 >fail40504 
                       >        trap            ;bbs branch taken
1821 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1824 :                 >ok40504   
                       >        tst_a $cc,$ff
1824 : 08              >            php         ;save flags
1825 : 08              >            php
1826 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1828 : f003            >        beq skip0542
                       >        trap            ;failed not equal (non zero)
182a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
182d :                 >skip0542
                       >
182d : 68              >            pla         ;load status
                       >            cmp_flag $ff
182e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1830 : f003            >        beq skip0545
                       >        trap            ;failed not equal (non zero)
1832 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1835 :                 >skip0545
                       >
1835 : 28              >            plp         ;restore status
                       >
1836 : a510            >        lda zpt
1838 : c9df            >        cmp #$ff-(1<<5)
                       >        trap_ne         ;zp altered
183a : f003            >        beq skip0547
                       >        trap            ;failed not equal (non zero)
183c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
183f :                 >skip0547
                       >
                        
                                bbt 6
183f : a940            >        lda #(1<<6)    ;testing 1 bit on
1841 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1843 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1845 : 48              >            pha         ;use stack to load status
1846 : a933            >            lda #$33     ;precharge accu
1848 : 28              >            plp
                       >
1849 : 6f1006          >        bbr 6,zpt,fail10549
184c : ef1006          >        bbs 6,zpt,ok10549
                       >        trap            ;bbs branch not taken
184f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1852 :                 >fail10549
                       >        trap            ;bbr branch taken
1852 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1855 :                 >ok10549   
                       >        tst_a $33,0
1855 : 08              >            php         ;save flags
1856 : 08              >            php
1857 : c933            >            cmp #$33     ;test result
                       >            trap_ne
1859 : f003            >        beq skip0555
                       >        trap            ;failed not equal (non zero)
185b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
185e :                 >skip0555
                       >
185e : 68              >            pla         ;load status
                       >            cmp_flag 0
185f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1861 : f003            >        beq skip0558
                       >        trap            ;failed not equal (non zero)
1863 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1866 :                 >skip0558
                       >
1866 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1867 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1869 : 48              >            pha         ;use stack to load status
186a : a9cc            >            lda #$cc     ;precharge accu
186c : 28              >            plp
                       >
186d : 6f1006          >        bbr 6,zpt,fail20549
1870 : ef1006          >        bbs 6,zpt,ok20549
                       >        trap            ;bbs branch not taken
1873 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1876 :                 >fail20549 
                       >        trap            ;bbr branch taken
1876 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1879 :                 >ok20549   
                       >        tst_a $cc,$ff
1879 : 08              >            php         ;save flags
187a : 08              >            php
187b : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
187d : f003            >        beq skip0565
                       >        trap            ;failed not equal (non zero)
187f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1882 :                 >skip0565
                       >
1882 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1883 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1885 : f003            >        beq skip0568
                       >        trap            ;failed not equal (non zero)
1887 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
188a :                 >skip0568
                       >
188a : 28              >            plp         ;restore status
                       >
188b : a510            >        lda zpt
188d : c940            >        cmp #(1<<6)
                       >        trap_ne         ;zp altered
188f : f003            >        beq skip0570
                       >        trap            ;failed not equal (non zero)
1891 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1894 :                 >skip0570
                       >
1894 : a9bf            >        lda #$ff-(1<<6) ;testing 1 bit off
1896 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1898 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
189a : 48              >            pha         ;use stack to load status
189b : a933            >            lda #$33     ;precharge accu
189d : 28              >            plp
                       >
189e : ef1006          >        bbs 6,zpt,fail30549
18a1 : 6f1006          >        bbr 6,zpt,ok30549
                       >        trap            ;bbr branch not taken
18a4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18a7 :                 >fail30549 
                       >        trap            ;bbs branch taken
18a7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18aa :                 >ok30549   
                       >        tst_a $33,0
18aa : 08              >            php         ;save flags
18ab : 08              >            php
18ac : c933            >            cmp #$33     ;test result
                       >            trap_ne
18ae : f003            >        beq skip0577
                       >        trap            ;failed not equal (non zero)
18b0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18b3 :                 >skip0577
                       >
18b3 : 68              >            pla         ;load status
                       >            cmp_flag 0
18b4 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
18b6 : f003            >        beq skip0580
                       >        trap            ;failed not equal (non zero)
18b8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18bb :                 >skip0580
                       >
18bb : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
18bc : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
18be : 48              >            pha         ;use stack to load status
18bf : a9cc            >            lda #$cc     ;precharge accu
18c1 : 28              >            plp
                       >
18c2 : ef1006          >        bbs 6,zpt,fail40549
18c5 : 6f1006          >        bbr 6,zpt,ok40549
                       >        trap            ;bbr branch not taken
18c8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18cb :                 >fail40549 
                       >        trap            ;bbs branch taken
18cb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18ce :                 >ok40549   
                       >        tst_a $cc,$ff
18ce : 08              >            php         ;save flags
18cf : 08              >            php
18d0 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
18d2 : f003            >        beq skip0587
                       >        trap            ;failed not equal (non zero)
18d4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18d7 :                 >skip0587
                       >
18d7 : 68              >            pla         ;load status
                       >            cmp_flag $ff
18d8 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
18da : f003            >        beq skip0590
                       >        trap            ;failed not equal (non zero)
18dc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18df :                 >skip0590
                       >
18df : 28              >            plp         ;restore status
                       >
18e0 : a510            >        lda zpt
18e2 : c9bf            >        cmp #$ff-(1<<6)
                       >        trap_ne         ;zp altered
18e4 : f003            >        beq skip0592
                       >        trap            ;failed not equal (non zero)
18e6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18e9 :                 >skip0592
                       >
                        
                                bbt 7
18e9 : a980            >        lda #(1<<7)    ;testing 1 bit on
18eb : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
18ed : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
18ef : 48              >            pha         ;use stack to load status
18f0 : a933            >            lda #$33     ;precharge accu
18f2 : 28              >            plp
                       >
18f3 : 7f1006          >        bbr 7,zpt,fail10594
18f6 : ff1006          >        bbs 7,zpt,ok10594
                       >        trap            ;bbs branch not taken
18f9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18fc :                 >fail10594
                       >        trap            ;bbr branch taken
18fc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18ff :                 >ok10594   
                       >        tst_a $33,0
18ff : 08              >            php         ;save flags
1900 : 08              >            php
1901 : c933            >            cmp #$33     ;test result
                       >            trap_ne
1903 : f003            >        beq skip0600
                       >        trap            ;failed not equal (non zero)
1905 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1908 :                 >skip0600
                       >
1908 : 68              >            pla         ;load status
                       >            cmp_flag 0
1909 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
190b : f003            >        beq skip0603
                       >        trap            ;failed not equal (non zero)
190d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1910 :                 >skip0603
                       >
1910 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1911 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1913 : 48              >            pha         ;use stack to load status
1914 : a9cc            >            lda #$cc     ;precharge accu
1916 : 28              >            plp
                       >
1917 : 7f1006          >        bbr 7,zpt,fail20594
191a : ff1006          >        bbs 7,zpt,ok20594
                       >        trap            ;bbs branch not taken
191d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1920 :                 >fail20594 
                       >        trap            ;bbr branch taken
1920 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1923 :                 >ok20594   
                       >        tst_a $cc,$ff
1923 : 08              >            php         ;save flags
1924 : 08              >            php
1925 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1927 : f003            >        beq skip0610
                       >        trap            ;failed not equal (non zero)
1929 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
192c :                 >skip0610
                       >
192c : 68              >            pla         ;load status
                       >            cmp_flag $ff
192d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
192f : f003            >        beq skip0613
                       >        trap            ;failed not equal (non zero)
1931 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1934 :                 >skip0613
                       >
1934 : 28              >            plp         ;restore status
                       >
1935 : a510            >        lda zpt
1937 : c980            >        cmp #(1<<7)
                       >        trap_ne         ;zp altered
1939 : f003            >        beq skip0615
                       >        trap            ;failed not equal (non zero)
193b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
193e :                 >skip0615
                       >
193e : a97f            >        lda #$ff-(1<<7) ;testing 1 bit off
1940 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1942 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1944 : 48              >            pha         ;use stack to load status
1945 : a933            >            lda #$33     ;precharge accu
1947 : 28              >            plp
                       >
1948 : ff1006          >        bbs 7,zpt,fail30594
194b : 7f1006          >        bbr 7,zpt,ok30594
                       >        trap            ;bbr branch not taken
194e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1951 :                 >fail30594 
                       >        trap            ;bbs branch taken
1951 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1954 :                 >ok30594   
                       >        tst_a $33,0
1954 : 08              >            php         ;save flags
1955 : 08              >            php
1956 : c933            >            cmp #$33     ;test result
                       >            trap_ne
1958 : f003            >        beq skip0622
                       >        trap            ;failed not equal (non zero)
195a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
195d :                 >skip0622
                       >
195d : 68              >            pla         ;load status
                       >            cmp_flag 0
195e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1960 : f003            >        beq skip0625
                       >        trap            ;failed not equal (non zero)
1962 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1965 :                 >skip0625
                       >
1965 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1966 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1968 : 48              >            pha         ;use stack to load status
1969 : a9cc            >            lda #$cc     ;precharge accu
196b : 28              >            plp
                       >
196c : ff1006          >        bbs 7,zpt,fail40594
196f : 7f1006          >        bbr 7,zpt,ok40594
                       >        trap            ;bbr branch not taken
1972 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1975 :                 >fail40594 
                       >        trap            ;bbs branch taken
1975 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1978 :                 >ok40594   
                       >        tst_a $cc,$ff
1978 : 08              >            php         ;save flags
1979 : 08              >            php
197a : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
197c : f003            >        beq skip0632
                       >        trap            ;failed not equal (non zero)
197e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1981 :                 >skip0632
                       >
1981 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1982 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1984 : f003            >        beq skip0635
                       >        trap            ;failed not equal (non zero)
1986 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1989 :                 >skip0635
                       >
1989 : 28              >            plp         ;restore status
                       >
198a : a510            >        lda zpt
198c : c97f            >        cmp #$ff-(1<<7)
                       >        trap_ne         ;zp altered
198e : f003            >        beq skip0637
                       >        trap            ;failed not equal (non zero)
1990 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1993 :                 >skip0637
                       >
                        
1993 : e011                     cpx #$11
                                trap_ne         ;x overwritten
1995 : f003            >        beq skip0639
                       >        trap            ;failed not equal (non zero)
1997 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
199a :                 >skip0639
                        
199a : c022                     cpy #$22
                                trap_ne         ;y overwritten
199c : f003            >        beq skip0641
                       >        trap            ;failed not equal (non zero)
199e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19a1 :                 >skip0641
                        
                                next_test 
19a1 : ad0202          >            lda test_case   ;previous test
19a4 : c906            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
19a6 : f003            >        beq skip0644
                       >        trap            ;failed not equal (non zero)
19a8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19ab :                 >skip0644
                       >
0007 =                 >test_num = test_num + 1
19ab : a907            >            lda #test_num   ;*** next tests' number
19ad : 8d0202          >            sta test_case
19b0 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        bbrc    macro           ;\1 = bitnum
                                bbr \1,zpt,skip\?
                                eor #(1<<\1)       
                        skip\?
                                endm
                        bbsc    macro           ;\1 = bitnum
                                bbs \1,zpt,skip\?
                                eor #(1<<\1)       
                        skip\?
                                endm
                        
19b3 : a900                     lda #0          ;combined bit test
19b5 : 8510                     sta zpt
19b7 : a900             bbcl    lda #0
                                bbrc 0
19b9 : 0f1002          >        bbr 0,zpt,skip0646
19bc : 4901            >        eor #(1<<0)       
19be :                 >skip0646
                        
                                bbrc 1
19be : 1f1002          >        bbr 1,zpt,skip0647
19c1 : 4902            >        eor #(1<<1)       
19c3 :                 >skip0647
                        
                                bbrc 2
19c3 : 2f1002          >        bbr 2,zpt,skip0648
19c6 : 4904            >        eor #(1<<2)       
19c8 :                 >skip0648
                        
                                bbrc 3
19c8 : 3f1002          >        bbr 3,zpt,skip0649
19cb : 4908            >        eor #(1<<3)       
19cd :                 >skip0649
                        
                                bbrc 4
19cd : 4f1002          >        bbr 4,zpt,skip0650
19d0 : 4910            >        eor #(1<<4)       
19d2 :                 >skip0650
                        
                                bbrc 5
19d2 : 5f1002          >        bbr 5,zpt,skip0651
19d5 : 4920            >        eor #(1<<5)       
19d7 :                 >skip0651
                        
                                bbrc 6
19d7 : 6f1002          >        bbr 6,zpt,skip0652
19da : 4940            >        eor #(1<<6)       
19dc :                 >skip0652
                        
                                bbrc 7
19dc : 7f1002          >        bbr 7,zpt,skip0653
19df : 4980            >        eor #(1<<7)       
19e1 :                 >skip0653
                        
19e1 : 4510                     eor zpt
                                trap_ne         ;failed bbr bitnum in accu       
19e3 : f003            >        beq skip0654
                       >        trap            ;failed not equal (non zero)
19e5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19e8 :                 >skip0654
                        
19e8 : a9ff                     lda #$ff
                                bbsc 0
19ea : 8f1002          >        bbs 0,zpt,skip0656
19ed : 4901            >        eor #(1<<0)       
19ef :                 >skip0656
                        
                                bbsc 1
19ef : 9f1002          >        bbs 1,zpt,skip0657
19f2 : 4902            >        eor #(1<<1)       
19f4 :                 >skip0657
                        
                                bbsc 2
19f4 : af1002          >        bbs 2,zpt,skip0658
19f7 : 4904            >        eor #(1<<2)       
19f9 :                 >skip0658
                        
                                bbsc 3
19f9 : bf1002          >        bbs 3,zpt,skip0659
19fc : 4908            >        eor #(1<<3)       
19fe :                 >skip0659
                        
                                bbsc 4
19fe : cf1002          >        bbs 4,zpt,skip0660
1a01 : 4910            >        eor #(1<<4)       
1a03 :                 >skip0660
                        
                                bbsc 5
1a03 : df1002          >        bbs 5,zpt,skip0661
1a06 : 4920            >        eor #(1<<5)       
1a08 :                 >skip0661
                        
                                bbsc 6
1a08 : ef1002          >        bbs 6,zpt,skip0662
1a0b : 4940            >        eor #(1<<6)       
1a0d :                 >skip0662
                        
                                bbsc 7
1a0d : ff1002          >        bbs 7,zpt,skip0663
1a10 : 4980            >        eor #(1<<7)       
1a12 :                 >skip0663
                        
1a12 : 4510                     eor zpt
                                trap_ne         ;failed bbs bitnum in accu       
1a14 : f003            >        beq skip0664
                       >        trap            ;failed not equal (non zero)
1a16 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a19 :                 >skip0664
                        
1a19 : e610                     inc zpt
1a1b : d09a                     bne bbcl
                                next_test            
1a1d : ad0202          >            lda test_case   ;previous test
1a20 : c907            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1a22 : f003            >        beq skip0667
                       >        trap            ;failed not equal (non zero)
1a24 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a27 :                 >skip0667
                       >
0008 =                 >test_num = test_num + 1
1a27 : a908            >            lda #test_num   ;*** next tests' number
1a29 : 8d0202          >            sta test_case
1a2c : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                            endif
                            
                        ; testing NOP
                        
                        nop_test    macro       ;\1 = opcode, \2 = # of bytes
                                    ldy #$42
                                    ldx #4-\2
                                    db  \1          ;test nop length
                                if \2 = 1
                                    dex
                                    dex
                                endif
                                if \2 = 2
                                    iny
                                    dex
                                endif
                                if \2 = 3
                                    iny
                                    iny
                                endif
                                    dex
                                    trap_ne         ;wrong number of bytes
                                    set_a $ff-\1,0
                                    db  \1          ;test nop integrity - flags off
                                    nop
                                    nop
                                    tst_a $ff-\1,0
                                    set_a $aa-\1,$ff
                                    db  \1          ;test nop integrity - flags on
                                    nop
                                    nop
                                    tst_a $aa-\1,$ff
                                    cpy #$42
                                    trap_ne         ;y changed
                                    cpx #0
                                    trap_ne         ;x changed
                                    endm
                                    
                                nop_test $02,2
1a2f : a042            >            ldy #$42
1a31 : a202            >            ldx #4-2
1a33 : 02              >            db  $02          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1a34 : c8              >            iny
1a35 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1a36 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1a37 : f003            >        beq skip0670
                       >        trap            ;failed not equal (non zero)
1a39 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a3c :                 >skip0670
                       >
                       >            set_a $ff-$02,0
                       >            load_flag 0
1a3c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1a3e : 48              >            pha         ;use stack to load status
1a3f : a9fd            >            lda #$ff-$02     ;precharge accu
1a41 : 28              >            plp
                       >
1a42 : 02              >            db  $02          ;test nop integrity - flags off
1a43 : ea              >            nop
1a44 : ea              >            nop
                       >            tst_a $ff-$02,0
1a45 : 08              >            php         ;save flags
1a46 : 08              >            php
1a47 : c9fd            >            cmp #$ff-$02     ;test result
                       >            trap_ne
1a49 : f003            >        beq skip0675
                       >        trap            ;failed not equal (non zero)
1a4b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a4e :                 >skip0675
                       >
1a4e : 68              >            pla         ;load status
                       >            cmp_flag 0
1a4f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a51 : f003            >        beq skip0678
                       >        trap            ;failed not equal (non zero)
1a53 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a56 :                 >skip0678
                       >
1a56 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$02,$ff
                       >            load_flag $ff
1a57 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1a59 : 48              >            pha         ;use stack to load status
1a5a : a9a8            >            lda #$aa-$02     ;precharge accu
1a5c : 28              >            plp
                       >
1a5d : 02              >            db  $02          ;test nop integrity - flags on
1a5e : ea              >            nop
1a5f : ea              >            nop
                       >            tst_a $aa-$02,$ff
1a60 : 08              >            php         ;save flags
1a61 : 08              >            php
1a62 : c9a8            >            cmp #$aa-$02     ;test result
                       >            trap_ne
1a64 : f003            >        beq skip0683
                       >        trap            ;failed not equal (non zero)
1a66 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a69 :                 >skip0683
                       >
1a69 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1a6a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a6c : f003            >        beq skip0686
                       >        trap            ;failed not equal (non zero)
1a6e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a71 :                 >skip0686
                       >
1a71 : 28              >            plp         ;restore status
                       >
1a72 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1a74 : f003            >        beq skip0688
                       >        trap            ;failed not equal (non zero)
1a76 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a79 :                 >skip0688
                       >
1a79 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1a7b : f003            >        beq skip0690
                       >        trap            ;failed not equal (non zero)
1a7d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a80 :                 >skip0690
                       >
                        
                                nop_test $22,2
1a80 : a042            >            ldy #$42
1a82 : a202            >            ldx #4-2
1a84 : 22              >            db  $22          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1a85 : c8              >            iny
1a86 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1a87 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1a88 : f003            >        beq skip0693
                       >        trap            ;failed not equal (non zero)
1a8a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a8d :                 >skip0693
                       >
                       >            set_a $ff-$22,0
                       >            load_flag 0
1a8d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1a8f : 48              >            pha         ;use stack to load status
1a90 : a9dd            >            lda #$ff-$22     ;precharge accu
1a92 : 28              >            plp
                       >
1a93 : 22              >            db  $22          ;test nop integrity - flags off
1a94 : ea              >            nop
1a95 : ea              >            nop
                       >            tst_a $ff-$22,0
1a96 : 08              >            php         ;save flags
1a97 : 08              >            php
1a98 : c9dd            >            cmp #$ff-$22     ;test result
                       >            trap_ne
1a9a : f003            >        beq skip0698
                       >        trap            ;failed not equal (non zero)
1a9c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a9f :                 >skip0698
                       >
1a9f : 68              >            pla         ;load status
                       >            cmp_flag 0
1aa0 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1aa2 : f003            >        beq skip0701
                       >        trap            ;failed not equal (non zero)
1aa4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1aa7 :                 >skip0701
                       >
1aa7 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$22,$ff
                       >            load_flag $ff
1aa8 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1aaa : 48              >            pha         ;use stack to load status
1aab : a988            >            lda #$aa-$22     ;precharge accu
1aad : 28              >            plp
                       >
1aae : 22              >            db  $22          ;test nop integrity - flags on
1aaf : ea              >            nop
1ab0 : ea              >            nop
                       >            tst_a $aa-$22,$ff
1ab1 : 08              >            php         ;save flags
1ab2 : 08              >            php
1ab3 : c988            >            cmp #$aa-$22     ;test result
                       >            trap_ne
1ab5 : f003            >        beq skip0706
                       >        trap            ;failed not equal (non zero)
1ab7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1aba :                 >skip0706
                       >
1aba : 68              >            pla         ;load status
                       >            cmp_flag $ff
1abb : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1abd : f003            >        beq skip0709
                       >        trap            ;failed not equal (non zero)
1abf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ac2 :                 >skip0709
                       >
1ac2 : 28              >            plp         ;restore status
                       >
1ac3 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1ac5 : f003            >        beq skip0711
                       >        trap            ;failed not equal (non zero)
1ac7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1aca :                 >skip0711
                       >
1aca : e000            >            cpx #0
                       >            trap_ne         ;x changed
1acc : f003            >        beq skip0713
                       >        trap            ;failed not equal (non zero)
1ace : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ad1 :                 >skip0713
                       >
                        
                                nop_test $42,2
1ad1 : a042            >            ldy #$42
1ad3 : a202            >            ldx #4-2
1ad5 : 42              >            db  $42          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1ad6 : c8              >            iny
1ad7 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1ad8 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1ad9 : f003            >        beq skip0716
                       >        trap            ;failed not equal (non zero)
1adb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ade :                 >skip0716
                       >
                       >            set_a $ff-$42,0
                       >            load_flag 0
1ade : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1ae0 : 48              >            pha         ;use stack to load status
1ae1 : a9bd            >            lda #$ff-$42     ;precharge accu
1ae3 : 28              >            plp
                       >
1ae4 : 42              >            db  $42          ;test nop integrity - flags off
1ae5 : ea              >            nop
1ae6 : ea              >            nop
                       >            tst_a $ff-$42,0
1ae7 : 08              >            php         ;save flags
1ae8 : 08              >            php
1ae9 : c9bd            >            cmp #$ff-$42     ;test result
                       >            trap_ne
1aeb : f003            >        beq skip0721
                       >        trap            ;failed not equal (non zero)
1aed : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1af0 :                 >skip0721
                       >
1af0 : 68              >            pla         ;load status
                       >            cmp_flag 0
1af1 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1af3 : f003            >        beq skip0724
                       >        trap            ;failed not equal (non zero)
1af5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1af8 :                 >skip0724
                       >
1af8 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$42,$ff
                       >            load_flag $ff
1af9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1afb : 48              >            pha         ;use stack to load status
1afc : a968            >            lda #$aa-$42     ;precharge accu
1afe : 28              >            plp
                       >
1aff : 42              >            db  $42          ;test nop integrity - flags on
1b00 : ea              >            nop
1b01 : ea              >            nop
                       >            tst_a $aa-$42,$ff
1b02 : 08              >            php         ;save flags
1b03 : 08              >            php
1b04 : c968            >            cmp #$aa-$42     ;test result
                       >            trap_ne
1b06 : f003            >        beq skip0729
                       >        trap            ;failed not equal (non zero)
1b08 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b0b :                 >skip0729
                       >
1b0b : 68              >            pla         ;load status
                       >            cmp_flag $ff
1b0c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b0e : f003            >        beq skip0732
                       >        trap            ;failed not equal (non zero)
1b10 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b13 :                 >skip0732
                       >
1b13 : 28              >            plp         ;restore status
                       >
1b14 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1b16 : f003            >        beq skip0734
                       >        trap            ;failed not equal (non zero)
1b18 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b1b :                 >skip0734
                       >
1b1b : e000            >            cpx #0
                       >            trap_ne         ;x changed
1b1d : f003            >        beq skip0736
                       >        trap            ;failed not equal (non zero)
1b1f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b22 :                 >skip0736
                       >
                        
                                nop_test $62,2
1b22 : a042            >            ldy #$42
1b24 : a202            >            ldx #4-2
1b26 : 62              >            db  $62          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1b27 : c8              >            iny
1b28 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1b29 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1b2a : f003            >        beq skip0739
                       >        trap            ;failed not equal (non zero)
1b2c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b2f :                 >skip0739
                       >
                       >            set_a $ff-$62,0
                       >            load_flag 0
1b2f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1b31 : 48              >            pha         ;use stack to load status
1b32 : a99d            >            lda #$ff-$62     ;precharge accu
1b34 : 28              >            plp
                       >
1b35 : 62              >            db  $62          ;test nop integrity - flags off
1b36 : ea              >            nop
1b37 : ea              >            nop
                       >            tst_a $ff-$62,0
1b38 : 08              >            php         ;save flags
1b39 : 08              >            php
1b3a : c99d            >            cmp #$ff-$62     ;test result
                       >            trap_ne
1b3c : f003            >        beq skip0744
                       >        trap            ;failed not equal (non zero)
1b3e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b41 :                 >skip0744
                       >
1b41 : 68              >            pla         ;load status
                       >            cmp_flag 0
1b42 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b44 : f003            >        beq skip0747
                       >        trap            ;failed not equal (non zero)
1b46 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b49 :                 >skip0747
                       >
1b49 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$62,$ff
                       >            load_flag $ff
1b4a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1b4c : 48              >            pha         ;use stack to load status
1b4d : a948            >            lda #$aa-$62     ;precharge accu
1b4f : 28              >            plp
                       >
1b50 : 62              >            db  $62          ;test nop integrity - flags on
1b51 : ea              >            nop
1b52 : ea              >            nop
                       >            tst_a $aa-$62,$ff
1b53 : 08              >            php         ;save flags
1b54 : 08              >            php
1b55 : c948            >            cmp #$aa-$62     ;test result
                       >            trap_ne
1b57 : f003            >        beq skip0752
                       >        trap            ;failed not equal (non zero)
1b59 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b5c :                 >skip0752
                       >
1b5c : 68              >            pla         ;load status
                       >            cmp_flag $ff
1b5d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b5f : f003            >        beq skip0755
                       >        trap            ;failed not equal (non zero)
1b61 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b64 :                 >skip0755
                       >
1b64 : 28              >            plp         ;restore status
                       >
1b65 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1b67 : f003            >        beq skip0757
                       >        trap            ;failed not equal (non zero)
1b69 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b6c :                 >skip0757
                       >
1b6c : e000            >            cpx #0
                       >            trap_ne         ;x changed
1b6e : f003            >        beq skip0759
                       >        trap            ;failed not equal (non zero)
1b70 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b73 :                 >skip0759
                       >
                        
                                nop_test $82,2
1b73 : a042            >            ldy #$42
1b75 : a202            >            ldx #4-2
1b77 : 82              >            db  $82          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1b78 : c8              >            iny
1b79 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1b7a : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1b7b : f003            >        beq skip0762
                       >        trap            ;failed not equal (non zero)
1b7d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b80 :                 >skip0762
                       >
                       >            set_a $ff-$82,0
                       >            load_flag 0
1b80 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1b82 : 48              >            pha         ;use stack to load status
1b83 : a97d            >            lda #$ff-$82     ;precharge accu
1b85 : 28              >            plp
                       >
1b86 : 82              >            db  $82          ;test nop integrity - flags off
1b87 : ea              >            nop
1b88 : ea              >            nop
                       >            tst_a $ff-$82,0
1b89 : 08              >            php         ;save flags
1b8a : 08              >            php
1b8b : c97d            >            cmp #$ff-$82     ;test result
                       >            trap_ne
1b8d : f003            >        beq skip0767
                       >        trap            ;failed not equal (non zero)
1b8f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b92 :                 >skip0767
                       >
1b92 : 68              >            pla         ;load status
                       >            cmp_flag 0
1b93 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b95 : f003            >        beq skip0770
                       >        trap            ;failed not equal (non zero)
1b97 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b9a :                 >skip0770
                       >
1b9a : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$82,$ff
                       >            load_flag $ff
1b9b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1b9d : 48              >            pha         ;use stack to load status
1b9e : a928            >            lda #$aa-$82     ;precharge accu
1ba0 : 28              >            plp
                       >
1ba1 : 82              >            db  $82          ;test nop integrity - flags on
1ba2 : ea              >            nop
1ba3 : ea              >            nop
                       >            tst_a $aa-$82,$ff
1ba4 : 08              >            php         ;save flags
1ba5 : 08              >            php
1ba6 : c928            >            cmp #$aa-$82     ;test result
                       >            trap_ne
1ba8 : f003            >        beq skip0775
                       >        trap            ;failed not equal (non zero)
1baa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bad :                 >skip0775
                       >
1bad : 68              >            pla         ;load status
                       >            cmp_flag $ff
1bae : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1bb0 : f003            >        beq skip0778
                       >        trap            ;failed not equal (non zero)
1bb2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bb5 :                 >skip0778
                       >
1bb5 : 28              >            plp         ;restore status
                       >
1bb6 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1bb8 : f003            >        beq skip0780
                       >        trap            ;failed not equal (non zero)
1bba : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bbd :                 >skip0780
                       >
1bbd : e000            >            cpx #0
                       >            trap_ne         ;x changed
1bbf : f003            >        beq skip0782
                       >        trap            ;failed not equal (non zero)
1bc1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bc4 :                 >skip0782
                       >
                        
                                nop_test $c2,2
1bc4 : a042            >            ldy #$42
1bc6 : a202            >            ldx #4-2
1bc8 : c2              >            db  $c2          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1bc9 : c8              >            iny
1bca : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1bcb : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1bcc : f003            >        beq skip0785
                       >        trap            ;failed not equal (non zero)
1bce : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bd1 :                 >skip0785
                       >
                       >            set_a $ff-$c2,0
                       >            load_flag 0
1bd1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1bd3 : 48              >            pha         ;use stack to load status
1bd4 : a93d            >            lda #$ff-$c2     ;precharge accu
1bd6 : 28              >            plp
                       >
1bd7 : c2              >            db  $c2          ;test nop integrity - flags off
1bd8 : ea              >            nop
1bd9 : ea              >            nop
                       >            tst_a $ff-$c2,0
1bda : 08              >            php         ;save flags
1bdb : 08              >            php
1bdc : c93d            >            cmp #$ff-$c2     ;test result
                       >            trap_ne
1bde : f003            >        beq skip0790
                       >        trap            ;failed not equal (non zero)
1be0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1be3 :                 >skip0790
                       >
1be3 : 68              >            pla         ;load status
                       >            cmp_flag 0
1be4 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1be6 : f003            >        beq skip0793
                       >        trap            ;failed not equal (non zero)
1be8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1beb :                 >skip0793
                       >
1beb : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$c2,$ff
                       >            load_flag $ff
1bec : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1bee : 48              >            pha         ;use stack to load status
1bef : a9e8            >            lda #$aa-$c2     ;precharge accu
1bf1 : 28              >            plp
                       >
1bf2 : c2              >            db  $c2          ;test nop integrity - flags on
1bf3 : ea              >            nop
1bf4 : ea              >            nop
                       >            tst_a $aa-$c2,$ff
1bf5 : 08              >            php         ;save flags
1bf6 : 08              >            php
1bf7 : c9e8            >            cmp #$aa-$c2     ;test result
                       >            trap_ne
1bf9 : f003            >        beq skip0798
                       >        trap            ;failed not equal (non zero)
1bfb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bfe :                 >skip0798
                       >
1bfe : 68              >            pla         ;load status
                       >            cmp_flag $ff
1bff : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c01 : f003            >        beq skip0801
                       >        trap            ;failed not equal (non zero)
1c03 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c06 :                 >skip0801
                       >
1c06 : 28              >            plp         ;restore status
                       >
1c07 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1c09 : f003            >        beq skip0803
                       >        trap            ;failed not equal (non zero)
1c0b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c0e :                 >skip0803
                       >
1c0e : e000            >            cpx #0
                       >            trap_ne         ;x changed
1c10 : f003            >        beq skip0805
                       >        trap            ;failed not equal (non zero)
1c12 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c15 :                 >skip0805
                       >
                        
                                nop_test $e2,2
1c15 : a042            >            ldy #$42
1c17 : a202            >            ldx #4-2
1c19 : e2              >            db  $e2          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1c1a : c8              >            iny
1c1b : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1c1c : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1c1d : f003            >        beq skip0808
                       >        trap            ;failed not equal (non zero)
1c1f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c22 :                 >skip0808
                       >
                       >            set_a $ff-$e2,0
                       >            load_flag 0
1c22 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1c24 : 48              >            pha         ;use stack to load status
1c25 : a91d            >            lda #$ff-$e2     ;precharge accu
1c27 : 28              >            plp
                       >
1c28 : e2              >            db  $e2          ;test nop integrity - flags off
1c29 : ea              >            nop
1c2a : ea              >            nop
                       >            tst_a $ff-$e2,0
1c2b : 08              >            php         ;save flags
1c2c : 08              >            php
1c2d : c91d            >            cmp #$ff-$e2     ;test result
                       >            trap_ne
1c2f : f003            >        beq skip0813
                       >        trap            ;failed not equal (non zero)
1c31 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c34 :                 >skip0813
                       >
1c34 : 68              >            pla         ;load status
                       >            cmp_flag 0
1c35 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c37 : f003            >        beq skip0816
                       >        trap            ;failed not equal (non zero)
1c39 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c3c :                 >skip0816
                       >
1c3c : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$e2,$ff
                       >            load_flag $ff
1c3d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1c3f : 48              >            pha         ;use stack to load status
1c40 : a9c8            >            lda #$aa-$e2     ;precharge accu
1c42 : 28              >            plp
                       >
1c43 : e2              >            db  $e2          ;test nop integrity - flags on
1c44 : ea              >            nop
1c45 : ea              >            nop
                       >            tst_a $aa-$e2,$ff
1c46 : 08              >            php         ;save flags
1c47 : 08              >            php
1c48 : c9c8            >            cmp #$aa-$e2     ;test result
                       >            trap_ne
1c4a : f003            >        beq skip0821
                       >        trap            ;failed not equal (non zero)
1c4c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c4f :                 >skip0821
                       >
1c4f : 68              >            pla         ;load status
                       >            cmp_flag $ff
1c50 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c52 : f003            >        beq skip0824
                       >        trap            ;failed not equal (non zero)
1c54 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c57 :                 >skip0824
                       >
1c57 : 28              >            plp         ;restore status
                       >
1c58 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1c5a : f003            >        beq skip0826
                       >        trap            ;failed not equal (non zero)
1c5c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c5f :                 >skip0826
                       >
1c5f : e000            >            cpx #0
                       >            trap_ne         ;x changed
1c61 : f003            >        beq skip0828
                       >        trap            ;failed not equal (non zero)
1c63 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c66 :                 >skip0828
                       >
                        
                                nop_test $44,2
1c66 : a042            >            ldy #$42
1c68 : a202            >            ldx #4-2
1c6a : 44              >            db  $44          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1c6b : c8              >            iny
1c6c : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1c6d : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1c6e : f003            >        beq skip0831
                       >        trap            ;failed not equal (non zero)
1c70 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c73 :                 >skip0831
                       >
                       >            set_a $ff-$44,0
                       >            load_flag 0
1c73 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1c75 : 48              >            pha         ;use stack to load status
1c76 : a9bb            >            lda #$ff-$44     ;precharge accu
1c78 : 28              >            plp
                       >
1c79 : 44              >            db  $44          ;test nop integrity - flags off
1c7a : ea              >            nop
1c7b : ea              >            nop
                       >            tst_a $ff-$44,0
1c7c : 08              >            php         ;save flags
1c7d : 08              >            php
1c7e : c9bb            >            cmp #$ff-$44     ;test result
                       >            trap_ne
1c80 : f003            >        beq skip0836
                       >        trap            ;failed not equal (non zero)
1c82 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c85 :                 >skip0836
                       >
1c85 : 68              >            pla         ;load status
                       >            cmp_flag 0
1c86 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c88 : f003            >        beq skip0839
                       >        trap            ;failed not equal (non zero)
1c8a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c8d :                 >skip0839
                       >
1c8d : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$44,$ff
                       >            load_flag $ff
1c8e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1c90 : 48              >            pha         ;use stack to load status
1c91 : a966            >            lda #$aa-$44     ;precharge accu
1c93 : 28              >            plp
                       >
1c94 : 44              >            db  $44          ;test nop integrity - flags on
1c95 : ea              >            nop
1c96 : ea              >            nop
                       >            tst_a $aa-$44,$ff
1c97 : 08              >            php         ;save flags
1c98 : 08              >            php
1c99 : c966            >            cmp #$aa-$44     ;test result
                       >            trap_ne
1c9b : f003            >        beq skip0844
                       >        trap            ;failed not equal (non zero)
1c9d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ca0 :                 >skip0844
                       >
1ca0 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1ca1 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ca3 : f003            >        beq skip0847
                       >        trap            ;failed not equal (non zero)
1ca5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ca8 :                 >skip0847
                       >
1ca8 : 28              >            plp         ;restore status
                       >
1ca9 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1cab : f003            >        beq skip0849
                       >        trap            ;failed not equal (non zero)
1cad : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1cb0 :                 >skip0849
                       >
1cb0 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1cb2 : f003            >        beq skip0851
                       >        trap            ;failed not equal (non zero)
1cb4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1cb7 :                 >skip0851
                       >
                        
                                nop_test $54,2
1cb7 : a042            >            ldy #$42
1cb9 : a202            >            ldx #4-2
1cbb : 54              >            db  $54          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1cbc : c8              >            iny
1cbd : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1cbe : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1cbf : f003            >        beq skip0854
                       >        trap            ;failed not equal (non zero)
1cc1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1cc4 :                 >skip0854
                       >
                       >            set_a $ff-$54,0
                       >            load_flag 0
1cc4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1cc6 : 48              >            pha         ;use stack to load status
1cc7 : a9ab            >            lda #$ff-$54     ;precharge accu
1cc9 : 28              >            plp
                       >
1cca : 54              >            db  $54          ;test nop integrity - flags off
1ccb : ea              >            nop
1ccc : ea              >            nop
                       >            tst_a $ff-$54,0
1ccd : 08              >            php         ;save flags
1cce : 08              >            php
1ccf : c9ab            >            cmp #$ff-$54     ;test result
                       >            trap_ne
1cd1 : f003            >        beq skip0859
                       >        trap            ;failed not equal (non zero)
1cd3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1cd6 :                 >skip0859
                       >
1cd6 : 68              >            pla         ;load status
                       >            cmp_flag 0
1cd7 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1cd9 : f003            >        beq skip0862
                       >        trap            ;failed not equal (non zero)
1cdb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1cde :                 >skip0862
                       >
1cde : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$54,$ff
                       >            load_flag $ff
1cdf : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1ce1 : 48              >            pha         ;use stack to load status
1ce2 : a956            >            lda #$aa-$54     ;precharge accu
1ce4 : 28              >            plp
                       >
1ce5 : 54              >            db  $54          ;test nop integrity - flags on
1ce6 : ea              >            nop
1ce7 : ea              >            nop
                       >            tst_a $aa-$54,$ff
1ce8 : 08              >            php         ;save flags
1ce9 : 08              >            php
1cea : c956            >            cmp #$aa-$54     ;test result
                       >            trap_ne
1cec : f003            >        beq skip0867
                       >        trap            ;failed not equal (non zero)
1cee : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1cf1 :                 >skip0867
                       >
1cf1 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1cf2 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1cf4 : f003            >        beq skip0870
                       >        trap            ;failed not equal (non zero)
1cf6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1cf9 :                 >skip0870
                       >
1cf9 : 28              >            plp         ;restore status
                       >
1cfa : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1cfc : f003            >        beq skip0872
                       >        trap            ;failed not equal (non zero)
1cfe : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d01 :                 >skip0872
                       >
1d01 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1d03 : f003            >        beq skip0874
                       >        trap            ;failed not equal (non zero)
1d05 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d08 :                 >skip0874
                       >
                        
                                nop_test $d4,2
1d08 : a042            >            ldy #$42
1d0a : a202            >            ldx #4-2
1d0c : d4              >            db  $d4          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1d0d : c8              >            iny
1d0e : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1d0f : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1d10 : f003            >        beq skip0877
                       >        trap            ;failed not equal (non zero)
1d12 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d15 :                 >skip0877
                       >
                       >            set_a $ff-$d4,0
                       >            load_flag 0
1d15 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1d17 : 48              >            pha         ;use stack to load status
1d18 : a92b            >            lda #$ff-$d4     ;precharge accu
1d1a : 28              >            plp
                       >
1d1b : d4              >            db  $d4          ;test nop integrity - flags off
1d1c : ea              >            nop
1d1d : ea              >            nop
                       >            tst_a $ff-$d4,0
1d1e : 08              >            php         ;save flags
1d1f : 08              >            php
1d20 : c92b            >            cmp #$ff-$d4     ;test result
                       >            trap_ne
1d22 : f003            >        beq skip0882
                       >        trap            ;failed not equal (non zero)
1d24 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d27 :                 >skip0882
                       >
1d27 : 68              >            pla         ;load status
                       >            cmp_flag 0
1d28 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1d2a : f003            >        beq skip0885
                       >        trap            ;failed not equal (non zero)
1d2c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d2f :                 >skip0885
                       >
1d2f : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$d4,$ff
                       >            load_flag $ff
1d30 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1d32 : 48              >            pha         ;use stack to load status
1d33 : a9d6            >            lda #$aa-$d4     ;precharge accu
1d35 : 28              >            plp
                       >
1d36 : d4              >            db  $d4          ;test nop integrity - flags on
1d37 : ea              >            nop
1d38 : ea              >            nop
                       >            tst_a $aa-$d4,$ff
1d39 : 08              >            php         ;save flags
1d3a : 08              >            php
1d3b : c9d6            >            cmp #$aa-$d4     ;test result
                       >            trap_ne
1d3d : f003            >        beq skip0890
                       >        trap            ;failed not equal (non zero)
1d3f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d42 :                 >skip0890
                       >
1d42 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1d43 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1d45 : f003            >        beq skip0893
                       >        trap            ;failed not equal (non zero)
1d47 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d4a :                 >skip0893
                       >
1d4a : 28              >            plp         ;restore status
                       >
1d4b : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1d4d : f003            >        beq skip0895
                       >        trap            ;failed not equal (non zero)
1d4f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d52 :                 >skip0895
                       >
1d52 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1d54 : f003            >        beq skip0897
                       >        trap            ;failed not equal (non zero)
1d56 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d59 :                 >skip0897
                       >
                        
                                nop_test $f4,2
1d59 : a042            >            ldy #$42
1d5b : a202            >            ldx #4-2
1d5d : f4              >            db  $f4          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1d5e : c8              >            iny
1d5f : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1d60 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1d61 : f003            >        beq skip0900
                       >        trap            ;failed not equal (non zero)
1d63 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d66 :                 >skip0900
                       >
                       >            set_a $ff-$f4,0
                       >            load_flag 0
1d66 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1d68 : 48              >            pha         ;use stack to load status
1d69 : a90b            >            lda #$ff-$f4     ;precharge accu
1d6b : 28              >            plp
                       >
1d6c : f4              >            db  $f4          ;test nop integrity - flags off
1d6d : ea              >            nop
1d6e : ea              >            nop
                       >            tst_a $ff-$f4,0
1d6f : 08              >            php         ;save flags
1d70 : 08              >            php
1d71 : c90b            >            cmp #$ff-$f4     ;test result
                       >            trap_ne
1d73 : f003            >        beq skip0905
                       >        trap            ;failed not equal (non zero)
1d75 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d78 :                 >skip0905
                       >
1d78 : 68              >            pla         ;load status
                       >            cmp_flag 0
1d79 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1d7b : f003            >        beq skip0908
                       >        trap            ;failed not equal (non zero)
1d7d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d80 :                 >skip0908
                       >
1d80 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$f4,$ff
                       >            load_flag $ff
1d81 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1d83 : 48              >            pha         ;use stack to load status
1d84 : a9b6            >            lda #$aa-$f4     ;precharge accu
1d86 : 28              >            plp
                       >
1d87 : f4              >            db  $f4          ;test nop integrity - flags on
1d88 : ea              >            nop
1d89 : ea              >            nop
                       >            tst_a $aa-$f4,$ff
1d8a : 08              >            php         ;save flags
1d8b : 08              >            php
1d8c : c9b6            >            cmp #$aa-$f4     ;test result
                       >            trap_ne
1d8e : f003            >        beq skip0913
                       >        trap            ;failed not equal (non zero)
1d90 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d93 :                 >skip0913
                       >
1d93 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1d94 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1d96 : f003            >        beq skip0916
                       >        trap            ;failed not equal (non zero)
1d98 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d9b :                 >skip0916
                       >
1d9b : 28              >            plp         ;restore status
                       >
1d9c : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1d9e : f003            >        beq skip0918
                       >        trap            ;failed not equal (non zero)
1da0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1da3 :                 >skip0918
                       >
1da3 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1da5 : f003            >        beq skip0920
                       >        trap            ;failed not equal (non zero)
1da7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1daa :                 >skip0920
                       >
                        
                                nop_test $5c,3
1daa : a042            >            ldy #$42
1dac : a201            >            ldx #4-3
1dae : 5c              >            db  $5c          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
1daf : c8              >            iny
1db0 : c8              >            iny
                       >        endif
1db1 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1db2 : f003            >        beq skip0923
                       >        trap            ;failed not equal (non zero)
1db4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1db7 :                 >skip0923
                       >
                       >            set_a $ff-$5c,0
                       >            load_flag 0
1db7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1db9 : 48              >            pha         ;use stack to load status
1dba : a9a3            >            lda #$ff-$5c     ;precharge accu
1dbc : 28              >            plp
                       >
1dbd : 5c              >            db  $5c          ;test nop integrity - flags off
1dbe : ea              >            nop
1dbf : ea              >            nop
                       >            tst_a $ff-$5c,0
1dc0 : 08              >            php         ;save flags
1dc1 : 08              >            php
1dc2 : c9a3            >            cmp #$ff-$5c     ;test result
                       >            trap_ne
1dc4 : f003            >        beq skip0928
                       >        trap            ;failed not equal (non zero)
1dc6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1dc9 :                 >skip0928
                       >
1dc9 : 68              >            pla         ;load status
                       >            cmp_flag 0
1dca : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1dcc : f003            >        beq skip0931
                       >        trap            ;failed not equal (non zero)
1dce : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1dd1 :                 >skip0931
                       >
1dd1 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$5c,$ff
                       >            load_flag $ff
1dd2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1dd4 : 48              >            pha         ;use stack to load status
1dd5 : a94e            >            lda #$aa-$5c     ;precharge accu
1dd7 : 28              >            plp
                       >
1dd8 : 5c              >            db  $5c          ;test nop integrity - flags on
1dd9 : ea              >            nop
1dda : ea              >            nop
                       >            tst_a $aa-$5c,$ff
1ddb : 08              >            php         ;save flags
1ddc : 08              >            php
1ddd : c94e            >            cmp #$aa-$5c     ;test result
                       >            trap_ne
1ddf : f003            >        beq skip0936
                       >        trap            ;failed not equal (non zero)
1de1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1de4 :                 >skip0936
                       >
1de4 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1de5 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1de7 : f003            >        beq skip0939
                       >        trap            ;failed not equal (non zero)
1de9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1dec :                 >skip0939
                       >
1dec : 28              >            plp         ;restore status
                       >
1ded : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1def : f003            >        beq skip0941
                       >        trap            ;failed not equal (non zero)
1df1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1df4 :                 >skip0941
                       >
1df4 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1df6 : f003            >        beq skip0943
                       >        trap            ;failed not equal (non zero)
1df8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1dfb :                 >skip0943
                       >
                        
                                nop_test $dc,3
1dfb : a042            >            ldy #$42
1dfd : a201            >            ldx #4-3
1dff : dc              >            db  $dc          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
1e00 : c8              >            iny
1e01 : c8              >            iny
                       >        endif
1e02 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1e03 : f003            >        beq skip0946
                       >        trap            ;failed not equal (non zero)
1e05 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e08 :                 >skip0946
                       >
                       >            set_a $ff-$dc,0
                       >            load_flag 0
1e08 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1e0a : 48              >            pha         ;use stack to load status
1e0b : a923            >            lda #$ff-$dc     ;precharge accu
1e0d : 28              >            plp
                       >
1e0e : dc              >            db  $dc          ;test nop integrity - flags off
1e0f : ea              >            nop
1e10 : ea              >            nop
                       >            tst_a $ff-$dc,0
1e11 : 08              >            php         ;save flags
1e12 : 08              >            php
1e13 : c923            >            cmp #$ff-$dc     ;test result
                       >            trap_ne
1e15 : f003            >        beq skip0951
                       >        trap            ;failed not equal (non zero)
1e17 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e1a :                 >skip0951
                       >
1e1a : 68              >            pla         ;load status
                       >            cmp_flag 0
1e1b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e1d : f003            >        beq skip0954
                       >        trap            ;failed not equal (non zero)
1e1f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e22 :                 >skip0954
                       >
1e22 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$dc,$ff
                       >            load_flag $ff
1e23 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1e25 : 48              >            pha         ;use stack to load status
1e26 : a9ce            >            lda #$aa-$dc     ;precharge accu
1e28 : 28              >            plp
                       >
1e29 : dc              >            db  $dc          ;test nop integrity - flags on
1e2a : ea              >            nop
1e2b : ea              >            nop
                       >            tst_a $aa-$dc,$ff
1e2c : 08              >            php         ;save flags
1e2d : 08              >            php
1e2e : c9ce            >            cmp #$aa-$dc     ;test result
                       >            trap_ne
1e30 : f003            >        beq skip0959
                       >        trap            ;failed not equal (non zero)
1e32 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e35 :                 >skip0959
                       >
1e35 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1e36 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e38 : f003            >        beq skip0962
                       >        trap            ;failed not equal (non zero)
1e3a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e3d :                 >skip0962
                       >
1e3d : 28              >            plp         ;restore status
                       >
1e3e : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1e40 : f003            >        beq skip0964
                       >        trap            ;failed not equal (non zero)
1e42 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e45 :                 >skip0964
                       >
1e45 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1e47 : f003            >        beq skip0966
                       >        trap            ;failed not equal (non zero)
1e49 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e4c :                 >skip0966
                       >
                        
                                nop_test $fc,3
1e4c : a042            >            ldy #$42
1e4e : a201            >            ldx #4-3
1e50 : fc              >            db  $fc          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
1e51 : c8              >            iny
1e52 : c8              >            iny
                       >        endif
1e53 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1e54 : f003            >        beq skip0969
                       >        trap            ;failed not equal (non zero)
1e56 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e59 :                 >skip0969
                       >
                       >            set_a $ff-$fc,0
                       >            load_flag 0
1e59 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1e5b : 48              >            pha         ;use stack to load status
1e5c : a903            >            lda #$ff-$fc     ;precharge accu
1e5e : 28              >            plp
                       >
1e5f : fc              >            db  $fc          ;test nop integrity - flags off
1e60 : ea              >            nop
1e61 : ea              >            nop
                       >            tst_a $ff-$fc,0
1e62 : 08              >            php         ;save flags
1e63 : 08              >            php
1e64 : c903            >            cmp #$ff-$fc     ;test result
                       >            trap_ne
1e66 : f003            >        beq skip0974
                       >        trap            ;failed not equal (non zero)
1e68 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e6b :                 >skip0974
                       >
1e6b : 68              >            pla         ;load status
                       >            cmp_flag 0
1e6c : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e6e : f003            >        beq skip0977
                       >        trap            ;failed not equal (non zero)
1e70 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e73 :                 >skip0977
                       >
1e73 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$fc,$ff
                       >            load_flag $ff
1e74 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1e76 : 48              >            pha         ;use stack to load status
1e77 : a9ae            >            lda #$aa-$fc     ;precharge accu
1e79 : 28              >            plp
                       >
1e7a : fc              >            db  $fc          ;test nop integrity - flags on
1e7b : ea              >            nop
1e7c : ea              >            nop
                       >            tst_a $aa-$fc,$ff
1e7d : 08              >            php         ;save flags
1e7e : 08              >            php
1e7f : c9ae            >            cmp #$aa-$fc     ;test result
                       >            trap_ne
1e81 : f003            >        beq skip0982
                       >        trap            ;failed not equal (non zero)
1e83 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e86 :                 >skip0982
                       >
1e86 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1e87 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e89 : f003            >        beq skip0985
                       >        trap            ;failed not equal (non zero)
1e8b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e8e :                 >skip0985
                       >
1e8e : 28              >            plp         ;restore status
                       >
1e8f : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1e91 : f003            >        beq skip0987
                       >        trap            ;failed not equal (non zero)
1e93 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e96 :                 >skip0987
                       >
1e96 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1e98 : f003            >        beq skip0989
                       >        trap            ;failed not equal (non zero)
1e9a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e9d :                 >skip0989
                       >
                        
                                nop_test $03,1
1e9d : a042            >            ldy #$42
1e9f : a203            >            ldx #4-1
1ea1 : 03              >            db  $03          ;test nop length
                       >        if 1 = 1
1ea2 : ca              >            dex
1ea3 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1ea4 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1ea5 : f003            >        beq skip0992
                       >        trap            ;failed not equal (non zero)
1ea7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1eaa :                 >skip0992
                       >
                       >            set_a $ff-$03,0
                       >            load_flag 0
1eaa : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1eac : 48              >            pha         ;use stack to load status
1ead : a9fc            >            lda #$ff-$03     ;precharge accu
1eaf : 28              >            plp
                       >
1eb0 : 03              >            db  $03          ;test nop integrity - flags off
1eb1 : ea              >            nop
1eb2 : ea              >            nop
                       >            tst_a $ff-$03,0
1eb3 : 08              >            php         ;save flags
1eb4 : 08              >            php
1eb5 : c9fc            >            cmp #$ff-$03     ;test result
                       >            trap_ne
1eb7 : f003            >        beq skip0997
                       >        trap            ;failed not equal (non zero)
1eb9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ebc :                 >skip0997
                       >
1ebc : 68              >            pla         ;load status
                       >            cmp_flag 0
1ebd : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ebf : f003            >        beq skip1000
                       >        trap            ;failed not equal (non zero)
1ec1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ec4 :                 >skip1000
                       >
1ec4 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$03,$ff
                       >            load_flag $ff
1ec5 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1ec7 : 48              >            pha         ;use stack to load status
1ec8 : a9a7            >            lda #$aa-$03     ;precharge accu
1eca : 28              >            plp
                       >
1ecb : 03              >            db  $03          ;test nop integrity - flags on
1ecc : ea              >            nop
1ecd : ea              >            nop
                       >            tst_a $aa-$03,$ff
1ece : 08              >            php         ;save flags
1ecf : 08              >            php
1ed0 : c9a7            >            cmp #$aa-$03     ;test result
                       >            trap_ne
1ed2 : f003            >        beq skip1005
                       >        trap            ;failed not equal (non zero)
1ed4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ed7 :                 >skip1005
                       >
1ed7 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1ed8 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1eda : f003            >        beq skip1008
                       >        trap            ;failed not equal (non zero)
1edc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1edf :                 >skip1008
                       >
1edf : 28              >            plp         ;restore status
                       >
1ee0 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1ee2 : f003            >        beq skip1010
                       >        trap            ;failed not equal (non zero)
1ee4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ee7 :                 >skip1010
                       >
1ee7 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1ee9 : f003            >        beq skip1012
                       >        trap            ;failed not equal (non zero)
1eeb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1eee :                 >skip1012
                       >
                        
                                nop_test $13,1
1eee : a042            >            ldy #$42
1ef0 : a203            >            ldx #4-1
1ef2 : 13              >            db  $13          ;test nop length
                       >        if 1 = 1
1ef3 : ca              >            dex
1ef4 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1ef5 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1ef6 : f003            >        beq skip1015
                       >        trap            ;failed not equal (non zero)
1ef8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1efb :                 >skip1015
                       >
                       >            set_a $ff-$13,0
                       >            load_flag 0
1efb : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1efd : 48              >            pha         ;use stack to load status
1efe : a9ec            >            lda #$ff-$13     ;precharge accu
1f00 : 28              >            plp
                       >
1f01 : 13              >            db  $13          ;test nop integrity - flags off
1f02 : ea              >            nop
1f03 : ea              >            nop
                       >            tst_a $ff-$13,0
1f04 : 08              >            php         ;save flags
1f05 : 08              >            php
1f06 : c9ec            >            cmp #$ff-$13     ;test result
                       >            trap_ne
1f08 : f003            >        beq skip1020
                       >        trap            ;failed not equal (non zero)
1f0a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f0d :                 >skip1020
                       >
1f0d : 68              >            pla         ;load status
                       >            cmp_flag 0
1f0e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1f10 : f003            >        beq skip1023
                       >        trap            ;failed not equal (non zero)
1f12 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f15 :                 >skip1023
                       >
1f15 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$13,$ff
                       >            load_flag $ff
1f16 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1f18 : 48              >            pha         ;use stack to load status
1f19 : a997            >            lda #$aa-$13     ;precharge accu
1f1b : 28              >            plp
                       >
1f1c : 13              >            db  $13          ;test nop integrity - flags on
1f1d : ea              >            nop
1f1e : ea              >            nop
                       >            tst_a $aa-$13,$ff
1f1f : 08              >            php         ;save flags
1f20 : 08              >            php
1f21 : c997            >            cmp #$aa-$13     ;test result
                       >            trap_ne
1f23 : f003            >        beq skip1028
                       >        trap            ;failed not equal (non zero)
1f25 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f28 :                 >skip1028
                       >
1f28 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1f29 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1f2b : f003            >        beq skip1031
                       >        trap            ;failed not equal (non zero)
1f2d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f30 :                 >skip1031
                       >
1f30 : 28              >            plp         ;restore status
                       >
1f31 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1f33 : f003            >        beq skip1033
                       >        trap            ;failed not equal (non zero)
1f35 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f38 :                 >skip1033
                       >
1f38 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1f3a : f003            >        beq skip1035
                       >        trap            ;failed not equal (non zero)
1f3c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f3f :                 >skip1035
                       >
                        
                                nop_test $23,1
1f3f : a042            >            ldy #$42
1f41 : a203            >            ldx #4-1
1f43 : 23              >            db  $23          ;test nop length
                       >        if 1 = 1
1f44 : ca              >            dex
1f45 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1f46 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1f47 : f003            >        beq skip1038
                       >        trap            ;failed not equal (non zero)
1f49 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f4c :                 >skip1038
                       >
                       >            set_a $ff-$23,0
                       >            load_flag 0
1f4c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1f4e : 48              >            pha         ;use stack to load status
1f4f : a9dc            >            lda #$ff-$23     ;precharge accu
1f51 : 28              >            plp
                       >
1f52 : 23              >            db  $23          ;test nop integrity - flags off
1f53 : ea              >            nop
1f54 : ea              >            nop
                       >            tst_a $ff-$23,0
1f55 : 08              >            php         ;save flags
1f56 : 08              >            php
1f57 : c9dc            >            cmp #$ff-$23     ;test result
                       >            trap_ne
1f59 : f003            >        beq skip1043
                       >        trap            ;failed not equal (non zero)
1f5b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f5e :                 >skip1043
                       >
1f5e : 68              >            pla         ;load status
                       >            cmp_flag 0
1f5f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1f61 : f003            >        beq skip1046
                       >        trap            ;failed not equal (non zero)
1f63 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f66 :                 >skip1046
                       >
1f66 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$23,$ff
                       >            load_flag $ff
1f67 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1f69 : 48              >            pha         ;use stack to load status
1f6a : a987            >            lda #$aa-$23     ;precharge accu
1f6c : 28              >            plp
                       >
1f6d : 23              >            db  $23          ;test nop integrity - flags on
1f6e : ea              >            nop
1f6f : ea              >            nop
                       >            tst_a $aa-$23,$ff
1f70 : 08              >            php         ;save flags
1f71 : 08              >            php
1f72 : c987            >            cmp #$aa-$23     ;test result
                       >            trap_ne
1f74 : f003            >        beq skip1051
                       >        trap            ;failed not equal (non zero)
1f76 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f79 :                 >skip1051
                       >
1f79 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1f7a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1f7c : f003            >        beq skip1054
                       >        trap            ;failed not equal (non zero)
1f7e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f81 :                 >skip1054
                       >
1f81 : 28              >            plp         ;restore status
                       >
1f82 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1f84 : f003            >        beq skip1056
                       >        trap            ;failed not equal (non zero)
1f86 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f89 :                 >skip1056
                       >
1f89 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1f8b : f003            >        beq skip1058
                       >        trap            ;failed not equal (non zero)
1f8d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f90 :                 >skip1058
                       >
                        
                                nop_test $33,1
1f90 : a042            >            ldy #$42
1f92 : a203            >            ldx #4-1
1f94 : 33              >            db  $33          ;test nop length
                       >        if 1 = 1
1f95 : ca              >            dex
1f96 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1f97 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1f98 : f003            >        beq skip1061
                       >        trap            ;failed not equal (non zero)
1f9a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f9d :                 >skip1061
                       >
                       >            set_a $ff-$33,0
                       >            load_flag 0
1f9d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1f9f : 48              >            pha         ;use stack to load status
1fa0 : a9cc            >            lda #$ff-$33     ;precharge accu
1fa2 : 28              >            plp
                       >
1fa3 : 33              >            db  $33          ;test nop integrity - flags off
1fa4 : ea              >            nop
1fa5 : ea              >            nop
                       >            tst_a $ff-$33,0
1fa6 : 08              >            php         ;save flags
1fa7 : 08              >            php
1fa8 : c9cc            >            cmp #$ff-$33     ;test result
                       >            trap_ne
1faa : f003            >        beq skip1066
                       >        trap            ;failed not equal (non zero)
1fac : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1faf :                 >skip1066
                       >
1faf : 68              >            pla         ;load status
                       >            cmp_flag 0
1fb0 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1fb2 : f003            >        beq skip1069
                       >        trap            ;failed not equal (non zero)
1fb4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1fb7 :                 >skip1069
                       >
1fb7 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$33,$ff
                       >            load_flag $ff
1fb8 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1fba : 48              >            pha         ;use stack to load status
1fbb : a977            >            lda #$aa-$33     ;precharge accu
1fbd : 28              >            plp
                       >
1fbe : 33              >            db  $33          ;test nop integrity - flags on
1fbf : ea              >            nop
1fc0 : ea              >            nop
                       >            tst_a $aa-$33,$ff
1fc1 : 08              >            php         ;save flags
1fc2 : 08              >            php
1fc3 : c977            >            cmp #$aa-$33     ;test result
                       >            trap_ne
1fc5 : f003            >        beq skip1074
                       >        trap            ;failed not equal (non zero)
1fc7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1fca :                 >skip1074
                       >
1fca : 68              >            pla         ;load status
                       >            cmp_flag $ff
1fcb : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1fcd : f003            >        beq skip1077
                       >        trap            ;failed not equal (non zero)
1fcf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1fd2 :                 >skip1077
                       >
1fd2 : 28              >            plp         ;restore status
                       >
1fd3 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1fd5 : f003            >        beq skip1079
                       >        trap            ;failed not equal (non zero)
1fd7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1fda :                 >skip1079
                       >
1fda : e000            >            cpx #0
                       >            trap_ne         ;x changed
1fdc : f003            >        beq skip1081
                       >        trap            ;failed not equal (non zero)
1fde : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1fe1 :                 >skip1081
                       >
                        
                                nop_test $43,1
1fe1 : a042            >            ldy #$42
1fe3 : a203            >            ldx #4-1
1fe5 : 43              >            db  $43          ;test nop length
                       >        if 1 = 1
1fe6 : ca              >            dex
1fe7 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1fe8 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1fe9 : f003            >        beq skip1084
                       >        trap            ;failed not equal (non zero)
1feb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1fee :                 >skip1084
                       >
                       >            set_a $ff-$43,0
                       >            load_flag 0
1fee : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1ff0 : 48              >            pha         ;use stack to load status
1ff1 : a9bc            >            lda #$ff-$43     ;precharge accu
1ff3 : 28              >            plp
                       >
1ff4 : 43              >            db  $43          ;test nop integrity - flags off
1ff5 : ea              >            nop
1ff6 : ea              >            nop
                       >            tst_a $ff-$43,0
1ff7 : 08              >            php         ;save flags
1ff8 : 08              >            php
1ff9 : c9bc            >            cmp #$ff-$43     ;test result
                       >            trap_ne
1ffb : f003            >        beq skip1089
                       >        trap            ;failed not equal (non zero)
1ffd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2000 :                 >skip1089
                       >
2000 : 68              >            pla         ;load status
                       >            cmp_flag 0
2001 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2003 : f003            >        beq skip1092
                       >        trap            ;failed not equal (non zero)
2005 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2008 :                 >skip1092
                       >
2008 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$43,$ff
                       >            load_flag $ff
2009 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
200b : 48              >            pha         ;use stack to load status
200c : a967            >            lda #$aa-$43     ;precharge accu
200e : 28              >            plp
                       >
200f : 43              >            db  $43          ;test nop integrity - flags on
2010 : ea              >            nop
2011 : ea              >            nop
                       >            tst_a $aa-$43,$ff
2012 : 08              >            php         ;save flags
2013 : 08              >            php
2014 : c967            >            cmp #$aa-$43     ;test result
                       >            trap_ne
2016 : f003            >        beq skip1097
                       >        trap            ;failed not equal (non zero)
2018 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
201b :                 >skip1097
                       >
201b : 68              >            pla         ;load status
                       >            cmp_flag $ff
201c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
201e : f003            >        beq skip1100
                       >        trap            ;failed not equal (non zero)
2020 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2023 :                 >skip1100
                       >
2023 : 28              >            plp         ;restore status
                       >
2024 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2026 : f003            >        beq skip1102
                       >        trap            ;failed not equal (non zero)
2028 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
202b :                 >skip1102
                       >
202b : e000            >            cpx #0
                       >            trap_ne         ;x changed
202d : f003            >        beq skip1104
                       >        trap            ;failed not equal (non zero)
202f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2032 :                 >skip1104
                       >
                        
                                nop_test $53,1
2032 : a042            >            ldy #$42
2034 : a203            >            ldx #4-1
2036 : 53              >            db  $53          ;test nop length
                       >        if 1 = 1
2037 : ca              >            dex
2038 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2039 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
203a : f003            >        beq skip1107
                       >        trap            ;failed not equal (non zero)
203c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
203f :                 >skip1107
                       >
                       >            set_a $ff-$53,0
                       >            load_flag 0
203f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2041 : 48              >            pha         ;use stack to load status
2042 : a9ac            >            lda #$ff-$53     ;precharge accu
2044 : 28              >            plp
                       >
2045 : 53              >            db  $53          ;test nop integrity - flags off
2046 : ea              >            nop
2047 : ea              >            nop
                       >            tst_a $ff-$53,0
2048 : 08              >            php         ;save flags
2049 : 08              >            php
204a : c9ac            >            cmp #$ff-$53     ;test result
                       >            trap_ne
204c : f003            >        beq skip1112
                       >        trap            ;failed not equal (non zero)
204e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2051 :                 >skip1112
                       >
2051 : 68              >            pla         ;load status
                       >            cmp_flag 0
2052 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2054 : f003            >        beq skip1115
                       >        trap            ;failed not equal (non zero)
2056 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2059 :                 >skip1115
                       >
2059 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$53,$ff
                       >            load_flag $ff
205a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
205c : 48              >            pha         ;use stack to load status
205d : a957            >            lda #$aa-$53     ;precharge accu
205f : 28              >            plp
                       >
2060 : 53              >            db  $53          ;test nop integrity - flags on
2061 : ea              >            nop
2062 : ea              >            nop
                       >            tst_a $aa-$53,$ff
2063 : 08              >            php         ;save flags
2064 : 08              >            php
2065 : c957            >            cmp #$aa-$53     ;test result
                       >            trap_ne
2067 : f003            >        beq skip1120
                       >        trap            ;failed not equal (non zero)
2069 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
206c :                 >skip1120
                       >
206c : 68              >            pla         ;load status
                       >            cmp_flag $ff
206d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
206f : f003            >        beq skip1123
                       >        trap            ;failed not equal (non zero)
2071 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2074 :                 >skip1123
                       >
2074 : 28              >            plp         ;restore status
                       >
2075 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2077 : f003            >        beq skip1125
                       >        trap            ;failed not equal (non zero)
2079 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
207c :                 >skip1125
                       >
207c : e000            >            cpx #0
                       >            trap_ne         ;x changed
207e : f003            >        beq skip1127
                       >        trap            ;failed not equal (non zero)
2080 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2083 :                 >skip1127
                       >
                        
                                nop_test $63,1
2083 : a042            >            ldy #$42
2085 : a203            >            ldx #4-1
2087 : 63              >            db  $63          ;test nop length
                       >        if 1 = 1
2088 : ca              >            dex
2089 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
208a : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
208b : f003            >        beq skip1130
                       >        trap            ;failed not equal (non zero)
208d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2090 :                 >skip1130
                       >
                       >            set_a $ff-$63,0
                       >            load_flag 0
2090 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2092 : 48              >            pha         ;use stack to load status
2093 : a99c            >            lda #$ff-$63     ;precharge accu
2095 : 28              >            plp
                       >
2096 : 63              >            db  $63          ;test nop integrity - flags off
2097 : ea              >            nop
2098 : ea              >            nop
                       >            tst_a $ff-$63,0
2099 : 08              >            php         ;save flags
209a : 08              >            php
209b : c99c            >            cmp #$ff-$63     ;test result
                       >            trap_ne
209d : f003            >        beq skip1135
                       >        trap            ;failed not equal (non zero)
209f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20a2 :                 >skip1135
                       >
20a2 : 68              >            pla         ;load status
                       >            cmp_flag 0
20a3 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
20a5 : f003            >        beq skip1138
                       >        trap            ;failed not equal (non zero)
20a7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20aa :                 >skip1138
                       >
20aa : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$63,$ff
                       >            load_flag $ff
20ab : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
20ad : 48              >            pha         ;use stack to load status
20ae : a947            >            lda #$aa-$63     ;precharge accu
20b0 : 28              >            plp
                       >
20b1 : 63              >            db  $63          ;test nop integrity - flags on
20b2 : ea              >            nop
20b3 : ea              >            nop
                       >            tst_a $aa-$63,$ff
20b4 : 08              >            php         ;save flags
20b5 : 08              >            php
20b6 : c947            >            cmp #$aa-$63     ;test result
                       >            trap_ne
20b8 : f003            >        beq skip1143
                       >        trap            ;failed not equal (non zero)
20ba : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20bd :                 >skip1143
                       >
20bd : 68              >            pla         ;load status
                       >            cmp_flag $ff
20be : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
20c0 : f003            >        beq skip1146
                       >        trap            ;failed not equal (non zero)
20c2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20c5 :                 >skip1146
                       >
20c5 : 28              >            plp         ;restore status
                       >
20c6 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
20c8 : f003            >        beq skip1148
                       >        trap            ;failed not equal (non zero)
20ca : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20cd :                 >skip1148
                       >
20cd : e000            >            cpx #0
                       >            trap_ne         ;x changed
20cf : f003            >        beq skip1150
                       >        trap            ;failed not equal (non zero)
20d1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20d4 :                 >skip1150
                       >
                        
                                nop_test $73,1
20d4 : a042            >            ldy #$42
20d6 : a203            >            ldx #4-1
20d8 : 73              >            db  $73          ;test nop length
                       >        if 1 = 1
20d9 : ca              >            dex
20da : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
20db : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
20dc : f003            >        beq skip1153
                       >        trap            ;failed not equal (non zero)
20de : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20e1 :                 >skip1153
                       >
                       >            set_a $ff-$73,0
                       >            load_flag 0
20e1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
20e3 : 48              >            pha         ;use stack to load status
20e4 : a98c            >            lda #$ff-$73     ;precharge accu
20e6 : 28              >            plp
                       >
20e7 : 73              >            db  $73          ;test nop integrity - flags off
20e8 : ea              >            nop
20e9 : ea              >            nop
                       >            tst_a $ff-$73,0
20ea : 08              >            php         ;save flags
20eb : 08              >            php
20ec : c98c            >            cmp #$ff-$73     ;test result
                       >            trap_ne
20ee : f003            >        beq skip1158
                       >        trap            ;failed not equal (non zero)
20f0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20f3 :                 >skip1158
                       >
20f3 : 68              >            pla         ;load status
                       >            cmp_flag 0
20f4 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
20f6 : f003            >        beq skip1161
                       >        trap            ;failed not equal (non zero)
20f8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20fb :                 >skip1161
                       >
20fb : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$73,$ff
                       >            load_flag $ff
20fc : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
20fe : 48              >            pha         ;use stack to load status
20ff : a937            >            lda #$aa-$73     ;precharge accu
2101 : 28              >            plp
                       >
2102 : 73              >            db  $73          ;test nop integrity - flags on
2103 : ea              >            nop
2104 : ea              >            nop
                       >            tst_a $aa-$73,$ff
2105 : 08              >            php         ;save flags
2106 : 08              >            php
2107 : c937            >            cmp #$aa-$73     ;test result
                       >            trap_ne
2109 : f003            >        beq skip1166
                       >        trap            ;failed not equal (non zero)
210b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
210e :                 >skip1166
                       >
210e : 68              >            pla         ;load status
                       >            cmp_flag $ff
210f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2111 : f003            >        beq skip1169
                       >        trap            ;failed not equal (non zero)
2113 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2116 :                 >skip1169
                       >
2116 : 28              >            plp         ;restore status
                       >
2117 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2119 : f003            >        beq skip1171
                       >        trap            ;failed not equal (non zero)
211b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
211e :                 >skip1171
                       >
211e : e000            >            cpx #0
                       >            trap_ne         ;x changed
2120 : f003            >        beq skip1173
                       >        trap            ;failed not equal (non zero)
2122 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2125 :                 >skip1173
                       >
                        
                                nop_test $83,1
2125 : a042            >            ldy #$42
2127 : a203            >            ldx #4-1
2129 : 83              >            db  $83          ;test nop length
                       >        if 1 = 1
212a : ca              >            dex
212b : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
212c : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
212d : f003            >        beq skip1176
                       >        trap            ;failed not equal (non zero)
212f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2132 :                 >skip1176
                       >
                       >            set_a $ff-$83,0
                       >            load_flag 0
2132 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2134 : 48              >            pha         ;use stack to load status
2135 : a97c            >            lda #$ff-$83     ;precharge accu
2137 : 28              >            plp
                       >
2138 : 83              >            db  $83          ;test nop integrity - flags off
2139 : ea              >            nop
213a : ea              >            nop
                       >            tst_a $ff-$83,0
213b : 08              >            php         ;save flags
213c : 08              >            php
213d : c97c            >            cmp #$ff-$83     ;test result
                       >            trap_ne
213f : f003            >        beq skip1181
                       >        trap            ;failed not equal (non zero)
2141 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2144 :                 >skip1181
                       >
2144 : 68              >            pla         ;load status
                       >            cmp_flag 0
2145 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2147 : f003            >        beq skip1184
                       >        trap            ;failed not equal (non zero)
2149 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
214c :                 >skip1184
                       >
214c : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$83,$ff
                       >            load_flag $ff
214d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
214f : 48              >            pha         ;use stack to load status
2150 : a927            >            lda #$aa-$83     ;precharge accu
2152 : 28              >            plp
                       >
2153 : 83              >            db  $83          ;test nop integrity - flags on
2154 : ea              >            nop
2155 : ea              >            nop
                       >            tst_a $aa-$83,$ff
2156 : 08              >            php         ;save flags
2157 : 08              >            php
2158 : c927            >            cmp #$aa-$83     ;test result
                       >            trap_ne
215a : f003            >        beq skip1189
                       >        trap            ;failed not equal (non zero)
215c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
215f :                 >skip1189
                       >
215f : 68              >            pla         ;load status
                       >            cmp_flag $ff
2160 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2162 : f003            >        beq skip1192
                       >        trap            ;failed not equal (non zero)
2164 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2167 :                 >skip1192
                       >
2167 : 28              >            plp         ;restore status
                       >
2168 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
216a : f003            >        beq skip1194
                       >        trap            ;failed not equal (non zero)
216c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
216f :                 >skip1194
                       >
216f : e000            >            cpx #0
                       >            trap_ne         ;x changed
2171 : f003            >        beq skip1196
                       >        trap            ;failed not equal (non zero)
2173 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2176 :                 >skip1196
                       >
                        
                                nop_test $93,1
2176 : a042            >            ldy #$42
2178 : a203            >            ldx #4-1
217a : 93              >            db  $93          ;test nop length
                       >        if 1 = 1
217b : ca              >            dex
217c : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
217d : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
217e : f003            >        beq skip1199
                       >        trap            ;failed not equal (non zero)
2180 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2183 :                 >skip1199
                       >
                       >            set_a $ff-$93,0
                       >            load_flag 0
2183 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2185 : 48              >            pha         ;use stack to load status
2186 : a96c            >            lda #$ff-$93     ;precharge accu
2188 : 28              >            plp
                       >
2189 : 93              >            db  $93          ;test nop integrity - flags off
218a : ea              >            nop
218b : ea              >            nop
                       >            tst_a $ff-$93,0
218c : 08              >            php         ;save flags
218d : 08              >            php
218e : c96c            >            cmp #$ff-$93     ;test result
                       >            trap_ne
2190 : f003            >        beq skip1204
                       >        trap            ;failed not equal (non zero)
2192 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2195 :                 >skip1204
                       >
2195 : 68              >            pla         ;load status
                       >            cmp_flag 0
2196 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2198 : f003            >        beq skip1207
                       >        trap            ;failed not equal (non zero)
219a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
219d :                 >skip1207
                       >
219d : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$93,$ff
                       >            load_flag $ff
219e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
21a0 : 48              >            pha         ;use stack to load status
21a1 : a917            >            lda #$aa-$93     ;precharge accu
21a3 : 28              >            plp
                       >
21a4 : 93              >            db  $93          ;test nop integrity - flags on
21a5 : ea              >            nop
21a6 : ea              >            nop
                       >            tst_a $aa-$93,$ff
21a7 : 08              >            php         ;save flags
21a8 : 08              >            php
21a9 : c917            >            cmp #$aa-$93     ;test result
                       >            trap_ne
21ab : f003            >        beq skip1212
                       >        trap            ;failed not equal (non zero)
21ad : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21b0 :                 >skip1212
                       >
21b0 : 68              >            pla         ;load status
                       >            cmp_flag $ff
21b1 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
21b3 : f003            >        beq skip1215
                       >        trap            ;failed not equal (non zero)
21b5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21b8 :                 >skip1215
                       >
21b8 : 28              >            plp         ;restore status
                       >
21b9 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
21bb : f003            >        beq skip1217
                       >        trap            ;failed not equal (non zero)
21bd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21c0 :                 >skip1217
                       >
21c0 : e000            >            cpx #0
                       >            trap_ne         ;x changed
21c2 : f003            >        beq skip1219
                       >        trap            ;failed not equal (non zero)
21c4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21c7 :                 >skip1219
                       >
                        
                                nop_test $a3,1
21c7 : a042            >            ldy #$42
21c9 : a203            >            ldx #4-1
21cb : a3              >            db  $a3          ;test nop length
                       >        if 1 = 1
21cc : ca              >            dex
21cd : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
21ce : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
21cf : f003            >        beq skip1222
                       >        trap            ;failed not equal (non zero)
21d1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21d4 :                 >skip1222
                       >
                       >            set_a $ff-$a3,0
                       >            load_flag 0
21d4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
21d6 : 48              >            pha         ;use stack to load status
21d7 : a95c            >            lda #$ff-$a3     ;precharge accu
21d9 : 28              >            plp
                       >
21da : a3              >            db  $a3          ;test nop integrity - flags off
21db : ea              >            nop
21dc : ea              >            nop
                       >            tst_a $ff-$a3,0
21dd : 08              >            php         ;save flags
21de : 08              >            php
21df : c95c            >            cmp #$ff-$a3     ;test result
                       >            trap_ne
21e1 : f003            >        beq skip1227
                       >        trap            ;failed not equal (non zero)
21e3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21e6 :                 >skip1227
                       >
21e6 : 68              >            pla         ;load status
                       >            cmp_flag 0
21e7 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
21e9 : f003            >        beq skip1230
                       >        trap            ;failed not equal (non zero)
21eb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21ee :                 >skip1230
                       >
21ee : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$a3,$ff
                       >            load_flag $ff
21ef : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
21f1 : 48              >            pha         ;use stack to load status
21f2 : a907            >            lda #$aa-$a3     ;precharge accu
21f4 : 28              >            plp
                       >
21f5 : a3              >            db  $a3          ;test nop integrity - flags on
21f6 : ea              >            nop
21f7 : ea              >            nop
                       >            tst_a $aa-$a3,$ff
21f8 : 08              >            php         ;save flags
21f9 : 08              >            php
21fa : c907            >            cmp #$aa-$a3     ;test result
                       >            trap_ne
21fc : f003            >        beq skip1235
                       >        trap            ;failed not equal (non zero)
21fe : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2201 :                 >skip1235
                       >
2201 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2202 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2204 : f003            >        beq skip1238
                       >        trap            ;failed not equal (non zero)
2206 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2209 :                 >skip1238
                       >
2209 : 28              >            plp         ;restore status
                       >
220a : c042            >            cpy #$42
                       >            trap_ne         ;y changed
220c : f003            >        beq skip1240
                       >        trap            ;failed not equal (non zero)
220e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2211 :                 >skip1240
                       >
2211 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2213 : f003            >        beq skip1242
                       >        trap            ;failed not equal (non zero)
2215 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2218 :                 >skip1242
                       >
                        
                                nop_test $b3,1
2218 : a042            >            ldy #$42
221a : a203            >            ldx #4-1
221c : b3              >            db  $b3          ;test nop length
                       >        if 1 = 1
221d : ca              >            dex
221e : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
221f : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2220 : f003            >        beq skip1245
                       >        trap            ;failed not equal (non zero)
2222 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2225 :                 >skip1245
                       >
                       >            set_a $ff-$b3,0
                       >            load_flag 0
2225 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2227 : 48              >            pha         ;use stack to load status
2228 : a94c            >            lda #$ff-$b3     ;precharge accu
222a : 28              >            plp
                       >
222b : b3              >            db  $b3          ;test nop integrity - flags off
222c : ea              >            nop
222d : ea              >            nop
                       >            tst_a $ff-$b3,0
222e : 08              >            php         ;save flags
222f : 08              >            php
2230 : c94c            >            cmp #$ff-$b3     ;test result
                       >            trap_ne
2232 : f003            >        beq skip1250
                       >        trap            ;failed not equal (non zero)
2234 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2237 :                 >skip1250
                       >
2237 : 68              >            pla         ;load status
                       >            cmp_flag 0
2238 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
223a : f003            >        beq skip1253
                       >        trap            ;failed not equal (non zero)
223c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
223f :                 >skip1253
                       >
223f : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$b3,$ff
                       >            load_flag $ff
2240 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2242 : 48              >            pha         ;use stack to load status
2243 : a9f7            >            lda #$aa-$b3     ;precharge accu
2245 : 28              >            plp
                       >
2246 : b3              >            db  $b3          ;test nop integrity - flags on
2247 : ea              >            nop
2248 : ea              >            nop
                       >            tst_a $aa-$b3,$ff
2249 : 08              >            php         ;save flags
224a : 08              >            php
224b : c9f7            >            cmp #$aa-$b3     ;test result
                       >            trap_ne
224d : f003            >        beq skip1258
                       >        trap            ;failed not equal (non zero)
224f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2252 :                 >skip1258
                       >
2252 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2253 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2255 : f003            >        beq skip1261
                       >        trap            ;failed not equal (non zero)
2257 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
225a :                 >skip1261
                       >
225a : 28              >            plp         ;restore status
                       >
225b : c042            >            cpy #$42
                       >            trap_ne         ;y changed
225d : f003            >        beq skip1263
                       >        trap            ;failed not equal (non zero)
225f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2262 :                 >skip1263
                       >
2262 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2264 : f003            >        beq skip1265
                       >        trap            ;failed not equal (non zero)
2266 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2269 :                 >skip1265
                       >
                        
                                nop_test $c3,1
2269 : a042            >            ldy #$42
226b : a203            >            ldx #4-1
226d : c3              >            db  $c3          ;test nop length
                       >        if 1 = 1
226e : ca              >            dex
226f : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2270 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2271 : f003            >        beq skip1268
                       >        trap            ;failed not equal (non zero)
2273 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2276 :                 >skip1268
                       >
                       >            set_a $ff-$c3,0
                       >            load_flag 0
2276 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2278 : 48              >            pha         ;use stack to load status
2279 : a93c            >            lda #$ff-$c3     ;precharge accu
227b : 28              >            plp
                       >
227c : c3              >            db  $c3          ;test nop integrity - flags off
227d : ea              >            nop
227e : ea              >            nop
                       >            tst_a $ff-$c3,0
227f : 08              >            php         ;save flags
2280 : 08              >            php
2281 : c93c            >            cmp #$ff-$c3     ;test result
                       >            trap_ne
2283 : f003            >        beq skip1273
                       >        trap            ;failed not equal (non zero)
2285 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2288 :                 >skip1273
                       >
2288 : 68              >            pla         ;load status
                       >            cmp_flag 0
2289 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
228b : f003            >        beq skip1276
                       >        trap            ;failed not equal (non zero)
228d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2290 :                 >skip1276
                       >
2290 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$c3,$ff
                       >            load_flag $ff
2291 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2293 : 48              >            pha         ;use stack to load status
2294 : a9e7            >            lda #$aa-$c3     ;precharge accu
2296 : 28              >            plp
                       >
2297 : c3              >            db  $c3          ;test nop integrity - flags on
2298 : ea              >            nop
2299 : ea              >            nop
                       >            tst_a $aa-$c3,$ff
229a : 08              >            php         ;save flags
229b : 08              >            php
229c : c9e7            >            cmp #$aa-$c3     ;test result
                       >            trap_ne
229e : f003            >        beq skip1281
                       >        trap            ;failed not equal (non zero)
22a0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22a3 :                 >skip1281
                       >
22a3 : 68              >            pla         ;load status
                       >            cmp_flag $ff
22a4 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
22a6 : f003            >        beq skip1284
                       >        trap            ;failed not equal (non zero)
22a8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22ab :                 >skip1284
                       >
22ab : 28              >            plp         ;restore status
                       >
22ac : c042            >            cpy #$42
                       >            trap_ne         ;y changed
22ae : f003            >        beq skip1286
                       >        trap            ;failed not equal (non zero)
22b0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22b3 :                 >skip1286
                       >
22b3 : e000            >            cpx #0
                       >            trap_ne         ;x changed
22b5 : f003            >        beq skip1288
                       >        trap            ;failed not equal (non zero)
22b7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22ba :                 >skip1288
                       >
                        
                                nop_test $d3,1
22ba : a042            >            ldy #$42
22bc : a203            >            ldx #4-1
22be : d3              >            db  $d3          ;test nop length
                       >        if 1 = 1
22bf : ca              >            dex
22c0 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
22c1 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
22c2 : f003            >        beq skip1291
                       >        trap            ;failed not equal (non zero)
22c4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22c7 :                 >skip1291
                       >
                       >            set_a $ff-$d3,0
                       >            load_flag 0
22c7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
22c9 : 48              >            pha         ;use stack to load status
22ca : a92c            >            lda #$ff-$d3     ;precharge accu
22cc : 28              >            plp
                       >
22cd : d3              >            db  $d3          ;test nop integrity - flags off
22ce : ea              >            nop
22cf : ea              >            nop
                       >            tst_a $ff-$d3,0
22d0 : 08              >            php         ;save flags
22d1 : 08              >            php
22d2 : c92c            >            cmp #$ff-$d3     ;test result
                       >            trap_ne
22d4 : f003            >        beq skip1296
                       >        trap            ;failed not equal (non zero)
22d6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22d9 :                 >skip1296
                       >
22d9 : 68              >            pla         ;load status
                       >            cmp_flag 0
22da : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
22dc : f003            >        beq skip1299
                       >        trap            ;failed not equal (non zero)
22de : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22e1 :                 >skip1299
                       >
22e1 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$d3,$ff
                       >            load_flag $ff
22e2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
22e4 : 48              >            pha         ;use stack to load status
22e5 : a9d7            >            lda #$aa-$d3     ;precharge accu
22e7 : 28              >            plp
                       >
22e8 : d3              >            db  $d3          ;test nop integrity - flags on
22e9 : ea              >            nop
22ea : ea              >            nop
                       >            tst_a $aa-$d3,$ff
22eb : 08              >            php         ;save flags
22ec : 08              >            php
22ed : c9d7            >            cmp #$aa-$d3     ;test result
                       >            trap_ne
22ef : f003            >        beq skip1304
                       >        trap            ;failed not equal (non zero)
22f1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22f4 :                 >skip1304
                       >
22f4 : 68              >            pla         ;load status
                       >            cmp_flag $ff
22f5 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
22f7 : f003            >        beq skip1307
                       >        trap            ;failed not equal (non zero)
22f9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22fc :                 >skip1307
                       >
22fc : 28              >            plp         ;restore status
                       >
22fd : c042            >            cpy #$42
                       >            trap_ne         ;y changed
22ff : f003            >        beq skip1309
                       >        trap            ;failed not equal (non zero)
2301 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2304 :                 >skip1309
                       >
2304 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2306 : f003            >        beq skip1311
                       >        trap            ;failed not equal (non zero)
2308 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
230b :                 >skip1311
                       >
                        
                                nop_test $e3,1
230b : a042            >            ldy #$42
230d : a203            >            ldx #4-1
230f : e3              >            db  $e3          ;test nop length
                       >        if 1 = 1
2310 : ca              >            dex
2311 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2312 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2313 : f003            >        beq skip1314
                       >        trap            ;failed not equal (non zero)
2315 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2318 :                 >skip1314
                       >
                       >            set_a $ff-$e3,0
                       >            load_flag 0
2318 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
231a : 48              >            pha         ;use stack to load status
231b : a91c            >            lda #$ff-$e3     ;precharge accu
231d : 28              >            plp
                       >
231e : e3              >            db  $e3          ;test nop integrity - flags off
231f : ea              >            nop
2320 : ea              >            nop
                       >            tst_a $ff-$e3,0
2321 : 08              >            php         ;save flags
2322 : 08              >            php
2323 : c91c            >            cmp #$ff-$e3     ;test result
                       >            trap_ne
2325 : f003            >        beq skip1319
                       >        trap            ;failed not equal (non zero)
2327 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
232a :                 >skip1319
                       >
232a : 68              >            pla         ;load status
                       >            cmp_flag 0
232b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
232d : f003            >        beq skip1322
                       >        trap            ;failed not equal (non zero)
232f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2332 :                 >skip1322
                       >
2332 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$e3,$ff
                       >            load_flag $ff
2333 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2335 : 48              >            pha         ;use stack to load status
2336 : a9c7            >            lda #$aa-$e3     ;precharge accu
2338 : 28              >            plp
                       >
2339 : e3              >            db  $e3          ;test nop integrity - flags on
233a : ea              >            nop
233b : ea              >            nop
                       >            tst_a $aa-$e3,$ff
233c : 08              >            php         ;save flags
233d : 08              >            php
233e : c9c7            >            cmp #$aa-$e3     ;test result
                       >            trap_ne
2340 : f003            >        beq skip1327
                       >        trap            ;failed not equal (non zero)
2342 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2345 :                 >skip1327
                       >
2345 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2346 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2348 : f003            >        beq skip1330
                       >        trap            ;failed not equal (non zero)
234a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
234d :                 >skip1330
                       >
234d : 28              >            plp         ;restore status
                       >
234e : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2350 : f003            >        beq skip1332
                       >        trap            ;failed not equal (non zero)
2352 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2355 :                 >skip1332
                       >
2355 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2357 : f003            >        beq skip1334
                       >        trap            ;failed not equal (non zero)
2359 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
235c :                 >skip1334
                       >
                        
                                nop_test $f3,1
235c : a042            >            ldy #$42
235e : a203            >            ldx #4-1
2360 : f3              >            db  $f3          ;test nop length
                       >        if 1 = 1
2361 : ca              >            dex
2362 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2363 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2364 : f003            >        beq skip1337
                       >        trap            ;failed not equal (non zero)
2366 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2369 :                 >skip1337
                       >
                       >            set_a $ff-$f3,0
                       >            load_flag 0
2369 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
236b : 48              >            pha         ;use stack to load status
236c : a90c            >            lda #$ff-$f3     ;precharge accu
236e : 28              >            plp
                       >
236f : f3              >            db  $f3          ;test nop integrity - flags off
2370 : ea              >            nop
2371 : ea              >            nop
                       >            tst_a $ff-$f3,0
2372 : 08              >            php         ;save flags
2373 : 08              >            php
2374 : c90c            >            cmp #$ff-$f3     ;test result
                       >            trap_ne
2376 : f003            >        beq skip1342
                       >        trap            ;failed not equal (non zero)
2378 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
237b :                 >skip1342
                       >
237b : 68              >            pla         ;load status
                       >            cmp_flag 0
237c : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
237e : f003            >        beq skip1345
                       >        trap            ;failed not equal (non zero)
2380 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2383 :                 >skip1345
                       >
2383 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$f3,$ff
                       >            load_flag $ff
2384 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2386 : 48              >            pha         ;use stack to load status
2387 : a9b7            >            lda #$aa-$f3     ;precharge accu
2389 : 28              >            plp
                       >
238a : f3              >            db  $f3          ;test nop integrity - flags on
238b : ea              >            nop
238c : ea              >            nop
                       >            tst_a $aa-$f3,$ff
238d : 08              >            php         ;save flags
238e : 08              >            php
238f : c9b7            >            cmp #$aa-$f3     ;test result
                       >            trap_ne
2391 : f003            >        beq skip1350
                       >        trap            ;failed not equal (non zero)
2393 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2396 :                 >skip1350
                       >
2396 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2397 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2399 : f003            >        beq skip1353
                       >        trap            ;failed not equal (non zero)
239b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
239e :                 >skip1353
                       >
239e : 28              >            plp         ;restore status
                       >
239f : c042            >            cpy #$42
                       >            trap_ne         ;y changed
23a1 : f003            >        beq skip1355
                       >        trap            ;failed not equal (non zero)
23a3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23a6 :                 >skip1355
                       >
23a6 : e000            >            cpx #0
                       >            trap_ne         ;x changed
23a8 : f003            >        beq skip1357
                       >        trap            ;failed not equal (non zero)
23aa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23ad :                 >skip1357
                       >
                        
                                nop_test $0b,1
23ad : a042            >            ldy #$42
23af : a203            >            ldx #4-1
23b1 : 0b              >            db  $0b          ;test nop length
                       >        if 1 = 1
23b2 : ca              >            dex
23b3 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
23b4 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
23b5 : f003            >        beq skip1360
                       >        trap            ;failed not equal (non zero)
23b7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23ba :                 >skip1360
                       >
                       >            set_a $ff-$0b,0
                       >            load_flag 0
23ba : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
23bc : 48              >            pha         ;use stack to load status
23bd : a9f4            >            lda #$ff-$0b     ;precharge accu
23bf : 28              >            plp
                       >
23c0 : 0b              >            db  $0b          ;test nop integrity - flags off
23c1 : ea              >            nop
23c2 : ea              >            nop
                       >            tst_a $ff-$0b,0
23c3 : 08              >            php         ;save flags
23c4 : 08              >            php
23c5 : c9f4            >            cmp #$ff-$0b     ;test result
                       >            trap_ne
23c7 : f003            >        beq skip1365
                       >        trap            ;failed not equal (non zero)
23c9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23cc :                 >skip1365
                       >
23cc : 68              >            pla         ;load status
                       >            cmp_flag 0
23cd : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
23cf : f003            >        beq skip1368
                       >        trap            ;failed not equal (non zero)
23d1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23d4 :                 >skip1368
                       >
23d4 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$0b,$ff
                       >            load_flag $ff
23d5 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
23d7 : 48              >            pha         ;use stack to load status
23d8 : a99f            >            lda #$aa-$0b     ;precharge accu
23da : 28              >            plp
                       >
23db : 0b              >            db  $0b          ;test nop integrity - flags on
23dc : ea              >            nop
23dd : ea              >            nop
                       >            tst_a $aa-$0b,$ff
23de : 08              >            php         ;save flags
23df : 08              >            php
23e0 : c99f            >            cmp #$aa-$0b     ;test result
                       >            trap_ne
23e2 : f003            >        beq skip1373
                       >        trap            ;failed not equal (non zero)
23e4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23e7 :                 >skip1373
                       >
23e7 : 68              >            pla         ;load status
                       >            cmp_flag $ff
23e8 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
23ea : f003            >        beq skip1376
                       >        trap            ;failed not equal (non zero)
23ec : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23ef :                 >skip1376
                       >
23ef : 28              >            plp         ;restore status
                       >
23f0 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
23f2 : f003            >        beq skip1378
                       >        trap            ;failed not equal (non zero)
23f4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23f7 :                 >skip1378
                       >
23f7 : e000            >            cpx #0
                       >            trap_ne         ;x changed
23f9 : f003            >        beq skip1380
                       >        trap            ;failed not equal (non zero)
23fb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23fe :                 >skip1380
                       >
                        
                                nop_test $1b,1
23fe : a042            >            ldy #$42
2400 : a203            >            ldx #4-1
2402 : 1b              >            db  $1b          ;test nop length
                       >        if 1 = 1
2403 : ca              >            dex
2404 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2405 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2406 : f003            >        beq skip1383
                       >        trap            ;failed not equal (non zero)
2408 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
240b :                 >skip1383
                       >
                       >            set_a $ff-$1b,0
                       >            load_flag 0
240b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
240d : 48              >            pha         ;use stack to load status
240e : a9e4            >            lda #$ff-$1b     ;precharge accu
2410 : 28              >            plp
                       >
2411 : 1b              >            db  $1b          ;test nop integrity - flags off
2412 : ea              >            nop
2413 : ea              >            nop
                       >            tst_a $ff-$1b,0
2414 : 08              >            php         ;save flags
2415 : 08              >            php
2416 : c9e4            >            cmp #$ff-$1b     ;test result
                       >            trap_ne
2418 : f003            >        beq skip1388
                       >        trap            ;failed not equal (non zero)
241a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
241d :                 >skip1388
                       >
241d : 68              >            pla         ;load status
                       >            cmp_flag 0
241e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2420 : f003            >        beq skip1391
                       >        trap            ;failed not equal (non zero)
2422 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2425 :                 >skip1391
                       >
2425 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$1b,$ff
                       >            load_flag $ff
2426 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2428 : 48              >            pha         ;use stack to load status
2429 : a98f            >            lda #$aa-$1b     ;precharge accu
242b : 28              >            plp
                       >
242c : 1b              >            db  $1b          ;test nop integrity - flags on
242d : ea              >            nop
242e : ea              >            nop
                       >            tst_a $aa-$1b,$ff
242f : 08              >            php         ;save flags
2430 : 08              >            php
2431 : c98f            >            cmp #$aa-$1b     ;test result
                       >            trap_ne
2433 : f003            >        beq skip1396
                       >        trap            ;failed not equal (non zero)
2435 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2438 :                 >skip1396
                       >
2438 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2439 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
243b : f003            >        beq skip1399
                       >        trap            ;failed not equal (non zero)
243d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2440 :                 >skip1399
                       >
2440 : 28              >            plp         ;restore status
                       >
2441 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2443 : f003            >        beq skip1401
                       >        trap            ;failed not equal (non zero)
2445 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2448 :                 >skip1401
                       >
2448 : e000            >            cpx #0
                       >            trap_ne         ;x changed
244a : f003            >        beq skip1403
                       >        trap            ;failed not equal (non zero)
244c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
244f :                 >skip1403
                       >
                        
                                nop_test $2b,1
244f : a042            >            ldy #$42
2451 : a203            >            ldx #4-1
2453 : 2b              >            db  $2b          ;test nop length
                       >        if 1 = 1
2454 : ca              >            dex
2455 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2456 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2457 : f003            >        beq skip1406
                       >        trap            ;failed not equal (non zero)
2459 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
245c :                 >skip1406
                       >
                       >            set_a $ff-$2b,0
                       >            load_flag 0
245c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
245e : 48              >            pha         ;use stack to load status
245f : a9d4            >            lda #$ff-$2b     ;precharge accu
2461 : 28              >            plp
                       >
2462 : 2b              >            db  $2b          ;test nop integrity - flags off
2463 : ea              >            nop
2464 : ea              >            nop
                       >            tst_a $ff-$2b,0
2465 : 08              >            php         ;save flags
2466 : 08              >            php
2467 : c9d4            >            cmp #$ff-$2b     ;test result
                       >            trap_ne
2469 : f003            >        beq skip1411
                       >        trap            ;failed not equal (non zero)
246b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
246e :                 >skip1411
                       >
246e : 68              >            pla         ;load status
                       >            cmp_flag 0
246f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2471 : f003            >        beq skip1414
                       >        trap            ;failed not equal (non zero)
2473 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2476 :                 >skip1414
                       >
2476 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$2b,$ff
                       >            load_flag $ff
2477 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2479 : 48              >            pha         ;use stack to load status
247a : a97f            >            lda #$aa-$2b     ;precharge accu
247c : 28              >            plp
                       >
247d : 2b              >            db  $2b          ;test nop integrity - flags on
247e : ea              >            nop
247f : ea              >            nop
                       >            tst_a $aa-$2b,$ff
2480 : 08              >            php         ;save flags
2481 : 08              >            php
2482 : c97f            >            cmp #$aa-$2b     ;test result
                       >            trap_ne
2484 : f003            >        beq skip1419
                       >        trap            ;failed not equal (non zero)
2486 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2489 :                 >skip1419
                       >
2489 : 68              >            pla         ;load status
                       >            cmp_flag $ff
248a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
248c : f003            >        beq skip1422
                       >        trap            ;failed not equal (non zero)
248e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2491 :                 >skip1422
                       >
2491 : 28              >            plp         ;restore status
                       >
2492 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2494 : f003            >        beq skip1424
                       >        trap            ;failed not equal (non zero)
2496 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2499 :                 >skip1424
                       >
2499 : e000            >            cpx #0
                       >            trap_ne         ;x changed
249b : f003            >        beq skip1426
                       >        trap            ;failed not equal (non zero)
249d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24a0 :                 >skip1426
                       >
                        
                                nop_test $3b,1
24a0 : a042            >            ldy #$42
24a2 : a203            >            ldx #4-1
24a4 : 3b              >            db  $3b          ;test nop length
                       >        if 1 = 1
24a5 : ca              >            dex
24a6 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
24a7 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
24a8 : f003            >        beq skip1429
                       >        trap            ;failed not equal (non zero)
24aa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24ad :                 >skip1429
                       >
                       >            set_a $ff-$3b,0
                       >            load_flag 0
24ad : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
24af : 48              >            pha         ;use stack to load status
24b0 : a9c4            >            lda #$ff-$3b     ;precharge accu
24b2 : 28              >            plp
                       >
24b3 : 3b              >            db  $3b          ;test nop integrity - flags off
24b4 : ea              >            nop
24b5 : ea              >            nop
                       >            tst_a $ff-$3b,0
24b6 : 08              >            php         ;save flags
24b7 : 08              >            php
24b8 : c9c4            >            cmp #$ff-$3b     ;test result
                       >            trap_ne
24ba : f003            >        beq skip1434
                       >        trap            ;failed not equal (non zero)
24bc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24bf :                 >skip1434
                       >
24bf : 68              >            pla         ;load status
                       >            cmp_flag 0
24c0 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
24c2 : f003            >        beq skip1437
                       >        trap            ;failed not equal (non zero)
24c4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24c7 :                 >skip1437
                       >
24c7 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$3b,$ff
                       >            load_flag $ff
24c8 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
24ca : 48              >            pha         ;use stack to load status
24cb : a96f            >            lda #$aa-$3b     ;precharge accu
24cd : 28              >            plp
                       >
24ce : 3b              >            db  $3b          ;test nop integrity - flags on
24cf : ea              >            nop
24d0 : ea              >            nop
                       >            tst_a $aa-$3b,$ff
24d1 : 08              >            php         ;save flags
24d2 : 08              >            php
24d3 : c96f            >            cmp #$aa-$3b     ;test result
                       >            trap_ne
24d5 : f003            >        beq skip1442
                       >        trap            ;failed not equal (non zero)
24d7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24da :                 >skip1442
                       >
24da : 68              >            pla         ;load status
                       >            cmp_flag $ff
24db : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
24dd : f003            >        beq skip1445
                       >        trap            ;failed not equal (non zero)
24df : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24e2 :                 >skip1445
                       >
24e2 : 28              >            plp         ;restore status
                       >
24e3 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
24e5 : f003            >        beq skip1447
                       >        trap            ;failed not equal (non zero)
24e7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24ea :                 >skip1447
                       >
24ea : e000            >            cpx #0
                       >            trap_ne         ;x changed
24ec : f003            >        beq skip1449
                       >        trap            ;failed not equal (non zero)
24ee : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24f1 :                 >skip1449
                       >
                        
                                nop_test $4b,1
24f1 : a042            >            ldy #$42
24f3 : a203            >            ldx #4-1
24f5 : 4b              >            db  $4b          ;test nop length
                       >        if 1 = 1
24f6 : ca              >            dex
24f7 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
24f8 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
24f9 : f003            >        beq skip1452
                       >        trap            ;failed not equal (non zero)
24fb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24fe :                 >skip1452
                       >
                       >            set_a $ff-$4b,0
                       >            load_flag 0
24fe : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2500 : 48              >            pha         ;use stack to load status
2501 : a9b4            >            lda #$ff-$4b     ;precharge accu
2503 : 28              >            plp
                       >
2504 : 4b              >            db  $4b          ;test nop integrity - flags off
2505 : ea              >            nop
2506 : ea              >            nop
                       >            tst_a $ff-$4b,0
2507 : 08              >            php         ;save flags
2508 : 08              >            php
2509 : c9b4            >            cmp #$ff-$4b     ;test result
                       >            trap_ne
250b : f003            >        beq skip1457
                       >        trap            ;failed not equal (non zero)
250d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2510 :                 >skip1457
                       >
2510 : 68              >            pla         ;load status
                       >            cmp_flag 0
2511 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2513 : f003            >        beq skip1460
                       >        trap            ;failed not equal (non zero)
2515 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2518 :                 >skip1460
                       >
2518 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$4b,$ff
                       >            load_flag $ff
2519 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
251b : 48              >            pha         ;use stack to load status
251c : a95f            >            lda #$aa-$4b     ;precharge accu
251e : 28              >            plp
                       >
251f : 4b              >            db  $4b          ;test nop integrity - flags on
2520 : ea              >            nop
2521 : ea              >            nop
                       >            tst_a $aa-$4b,$ff
2522 : 08              >            php         ;save flags
2523 : 08              >            php
2524 : c95f            >            cmp #$aa-$4b     ;test result
                       >            trap_ne
2526 : f003            >        beq skip1465
                       >        trap            ;failed not equal (non zero)
2528 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
252b :                 >skip1465
                       >
252b : 68              >            pla         ;load status
                       >            cmp_flag $ff
252c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
252e : f003            >        beq skip1468
                       >        trap            ;failed not equal (non zero)
2530 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2533 :                 >skip1468
                       >
2533 : 28              >            plp         ;restore status
                       >
2534 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2536 : f003            >        beq skip1470
                       >        trap            ;failed not equal (non zero)
2538 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
253b :                 >skip1470
                       >
253b : e000            >            cpx #0
                       >            trap_ne         ;x changed
253d : f003            >        beq skip1472
                       >        trap            ;failed not equal (non zero)
253f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2542 :                 >skip1472
                       >
                        
                                nop_test $5b,1
2542 : a042            >            ldy #$42
2544 : a203            >            ldx #4-1
2546 : 5b              >            db  $5b          ;test nop length
                       >        if 1 = 1
2547 : ca              >            dex
2548 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2549 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
254a : f003            >        beq skip1475
                       >        trap            ;failed not equal (non zero)
254c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
254f :                 >skip1475
                       >
                       >            set_a $ff-$5b,0
                       >            load_flag 0
254f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2551 : 48              >            pha         ;use stack to load status
2552 : a9a4            >            lda #$ff-$5b     ;precharge accu
2554 : 28              >            plp
                       >
2555 : 5b              >            db  $5b          ;test nop integrity - flags off
2556 : ea              >            nop
2557 : ea              >            nop
                       >            tst_a $ff-$5b,0
2558 : 08              >            php         ;save flags
2559 : 08              >            php
255a : c9a4            >            cmp #$ff-$5b     ;test result
                       >            trap_ne
255c : f003            >        beq skip1480
                       >        trap            ;failed not equal (non zero)
255e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2561 :                 >skip1480
                       >
2561 : 68              >            pla         ;load status
                       >            cmp_flag 0
2562 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2564 : f003            >        beq skip1483
                       >        trap            ;failed not equal (non zero)
2566 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2569 :                 >skip1483
                       >
2569 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$5b,$ff
                       >            load_flag $ff
256a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
256c : 48              >            pha         ;use stack to load status
256d : a94f            >            lda #$aa-$5b     ;precharge accu
256f : 28              >            plp
                       >
2570 : 5b              >            db  $5b          ;test nop integrity - flags on
2571 : ea              >            nop
2572 : ea              >            nop
                       >            tst_a $aa-$5b,$ff
2573 : 08              >            php         ;save flags
2574 : 08              >            php
2575 : c94f            >            cmp #$aa-$5b     ;test result
                       >            trap_ne
2577 : f003            >        beq skip1488
                       >        trap            ;failed not equal (non zero)
2579 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
257c :                 >skip1488
                       >
257c : 68              >            pla         ;load status
                       >            cmp_flag $ff
257d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
257f : f003            >        beq skip1491
                       >        trap            ;failed not equal (non zero)
2581 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2584 :                 >skip1491
                       >
2584 : 28              >            plp         ;restore status
                       >
2585 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2587 : f003            >        beq skip1493
                       >        trap            ;failed not equal (non zero)
2589 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
258c :                 >skip1493
                       >
258c : e000            >            cpx #0
                       >            trap_ne         ;x changed
258e : f003            >        beq skip1495
                       >        trap            ;failed not equal (non zero)
2590 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2593 :                 >skip1495
                       >
                        
                                nop_test $6b,1
2593 : a042            >            ldy #$42
2595 : a203            >            ldx #4-1
2597 : 6b              >            db  $6b          ;test nop length
                       >        if 1 = 1
2598 : ca              >            dex
2599 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
259a : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
259b : f003            >        beq skip1498
                       >        trap            ;failed not equal (non zero)
259d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25a0 :                 >skip1498
                       >
                       >            set_a $ff-$6b,0
                       >            load_flag 0
25a0 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
25a2 : 48              >            pha         ;use stack to load status
25a3 : a994            >            lda #$ff-$6b     ;precharge accu
25a5 : 28              >            plp
                       >
25a6 : 6b              >            db  $6b          ;test nop integrity - flags off
25a7 : ea              >            nop
25a8 : ea              >            nop
                       >            tst_a $ff-$6b,0
25a9 : 08              >            php         ;save flags
25aa : 08              >            php
25ab : c994            >            cmp #$ff-$6b     ;test result
                       >            trap_ne
25ad : f003            >        beq skip1503
                       >        trap            ;failed not equal (non zero)
25af : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25b2 :                 >skip1503
                       >
25b2 : 68              >            pla         ;load status
                       >            cmp_flag 0
25b3 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
25b5 : f003            >        beq skip1506
                       >        trap            ;failed not equal (non zero)
25b7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25ba :                 >skip1506
                       >
25ba : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$6b,$ff
                       >            load_flag $ff
25bb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
25bd : 48              >            pha         ;use stack to load status
25be : a93f            >            lda #$aa-$6b     ;precharge accu
25c0 : 28              >            plp
                       >
25c1 : 6b              >            db  $6b          ;test nop integrity - flags on
25c2 : ea              >            nop
25c3 : ea              >            nop
                       >            tst_a $aa-$6b,$ff
25c4 : 08              >            php         ;save flags
25c5 : 08              >            php
25c6 : c93f            >            cmp #$aa-$6b     ;test result
                       >            trap_ne
25c8 : f003            >        beq skip1511
                       >        trap            ;failed not equal (non zero)
25ca : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25cd :                 >skip1511
                       >
25cd : 68              >            pla         ;load status
                       >            cmp_flag $ff
25ce : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
25d0 : f003            >        beq skip1514
                       >        trap            ;failed not equal (non zero)
25d2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25d5 :                 >skip1514
                       >
25d5 : 28              >            plp         ;restore status
                       >
25d6 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
25d8 : f003            >        beq skip1516
                       >        trap            ;failed not equal (non zero)
25da : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25dd :                 >skip1516
                       >
25dd : e000            >            cpx #0
                       >            trap_ne         ;x changed
25df : f003            >        beq skip1518
                       >        trap            ;failed not equal (non zero)
25e1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25e4 :                 >skip1518
                       >
                        
                                nop_test $7b,1
25e4 : a042            >            ldy #$42
25e6 : a203            >            ldx #4-1
25e8 : 7b              >            db  $7b          ;test nop length
                       >        if 1 = 1
25e9 : ca              >            dex
25ea : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
25eb : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
25ec : f003            >        beq skip1521
                       >        trap            ;failed not equal (non zero)
25ee : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25f1 :                 >skip1521
                       >
                       >            set_a $ff-$7b,0
                       >            load_flag 0
25f1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
25f3 : 48              >            pha         ;use stack to load status
25f4 : a984            >            lda #$ff-$7b     ;precharge accu
25f6 : 28              >            plp
                       >
25f7 : 7b              >            db  $7b          ;test nop integrity - flags off
25f8 : ea              >            nop
25f9 : ea              >            nop
                       >            tst_a $ff-$7b,0
25fa : 08              >            php         ;save flags
25fb : 08              >            php
25fc : c984            >            cmp #$ff-$7b     ;test result
                       >            trap_ne
25fe : f003            >        beq skip1526
                       >        trap            ;failed not equal (non zero)
2600 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2603 :                 >skip1526
                       >
2603 : 68              >            pla         ;load status
                       >            cmp_flag 0
2604 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2606 : f003            >        beq skip1529
                       >        trap            ;failed not equal (non zero)
2608 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
260b :                 >skip1529
                       >
260b : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$7b,$ff
                       >            load_flag $ff
260c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
260e : 48              >            pha         ;use stack to load status
260f : a92f            >            lda #$aa-$7b     ;precharge accu
2611 : 28              >            plp
                       >
2612 : 7b              >            db  $7b          ;test nop integrity - flags on
2613 : ea              >            nop
2614 : ea              >            nop
                       >            tst_a $aa-$7b,$ff
2615 : 08              >            php         ;save flags
2616 : 08              >            php
2617 : c92f            >            cmp #$aa-$7b     ;test result
                       >            trap_ne
2619 : f003            >        beq skip1534
                       >        trap            ;failed not equal (non zero)
261b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
261e :                 >skip1534
                       >
261e : 68              >            pla         ;load status
                       >            cmp_flag $ff
261f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2621 : f003            >        beq skip1537
                       >        trap            ;failed not equal (non zero)
2623 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2626 :                 >skip1537
                       >
2626 : 28              >            plp         ;restore status
                       >
2627 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2629 : f003            >        beq skip1539
                       >        trap            ;failed not equal (non zero)
262b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
262e :                 >skip1539
                       >
262e : e000            >            cpx #0
                       >            trap_ne         ;x changed
2630 : f003            >        beq skip1541
                       >        trap            ;failed not equal (non zero)
2632 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2635 :                 >skip1541
                       >
                        
                                nop_test $8b,1
2635 : a042            >            ldy #$42
2637 : a203            >            ldx #4-1
2639 : 8b              >            db  $8b          ;test nop length
                       >        if 1 = 1
263a : ca              >            dex
263b : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
263c : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
263d : f003            >        beq skip1544
                       >        trap            ;failed not equal (non zero)
263f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2642 :                 >skip1544
                       >
                       >            set_a $ff-$8b,0
                       >            load_flag 0
2642 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2644 : 48              >            pha         ;use stack to load status
2645 : a974            >            lda #$ff-$8b     ;precharge accu
2647 : 28              >            plp
                       >
2648 : 8b              >            db  $8b          ;test nop integrity - flags off
2649 : ea              >            nop
264a : ea              >            nop
                       >            tst_a $ff-$8b,0
264b : 08              >            php         ;save flags
264c : 08              >            php
264d : c974            >            cmp #$ff-$8b     ;test result
                       >            trap_ne
264f : f003            >        beq skip1549
                       >        trap            ;failed not equal (non zero)
2651 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2654 :                 >skip1549
                       >
2654 : 68              >            pla         ;load status
                       >            cmp_flag 0
2655 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2657 : f003            >        beq skip1552
                       >        trap            ;failed not equal (non zero)
2659 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
265c :                 >skip1552
                       >
265c : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$8b,$ff
                       >            load_flag $ff
265d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
265f : 48              >            pha         ;use stack to load status
2660 : a91f            >            lda #$aa-$8b     ;precharge accu
2662 : 28              >            plp
                       >
2663 : 8b              >            db  $8b          ;test nop integrity - flags on
2664 : ea              >            nop
2665 : ea              >            nop
                       >            tst_a $aa-$8b,$ff
2666 : 08              >            php         ;save flags
2667 : 08              >            php
2668 : c91f            >            cmp #$aa-$8b     ;test result
                       >            trap_ne
266a : f003            >        beq skip1557
                       >        trap            ;failed not equal (non zero)
266c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
266f :                 >skip1557
                       >
266f : 68              >            pla         ;load status
                       >            cmp_flag $ff
2670 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2672 : f003            >        beq skip1560
                       >        trap            ;failed not equal (non zero)
2674 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2677 :                 >skip1560
                       >
2677 : 28              >            plp         ;restore status
                       >
2678 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
267a : f003            >        beq skip1562
                       >        trap            ;failed not equal (non zero)
267c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
267f :                 >skip1562
                       >
267f : e000            >            cpx #0
                       >            trap_ne         ;x changed
2681 : f003            >        beq skip1564
                       >        trap            ;failed not equal (non zero)
2683 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2686 :                 >skip1564
                       >
                        
                                nop_test $9b,1
2686 : a042            >            ldy #$42
2688 : a203            >            ldx #4-1
268a : 9b              >            db  $9b          ;test nop length
                       >        if 1 = 1
268b : ca              >            dex
268c : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
268d : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
268e : f003            >        beq skip1567
                       >        trap            ;failed not equal (non zero)
2690 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2693 :                 >skip1567
                       >
                       >            set_a $ff-$9b,0
                       >            load_flag 0
2693 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2695 : 48              >            pha         ;use stack to load status
2696 : a964            >            lda #$ff-$9b     ;precharge accu
2698 : 28              >            plp
                       >
2699 : 9b              >            db  $9b          ;test nop integrity - flags off
269a : ea              >            nop
269b : ea              >            nop
                       >            tst_a $ff-$9b,0
269c : 08              >            php         ;save flags
269d : 08              >            php
269e : c964            >            cmp #$ff-$9b     ;test result
                       >            trap_ne
26a0 : f003            >        beq skip1572
                       >        trap            ;failed not equal (non zero)
26a2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26a5 :                 >skip1572
                       >
26a5 : 68              >            pla         ;load status
                       >            cmp_flag 0
26a6 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
26a8 : f003            >        beq skip1575
                       >        trap            ;failed not equal (non zero)
26aa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26ad :                 >skip1575
                       >
26ad : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$9b,$ff
                       >            load_flag $ff
26ae : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
26b0 : 48              >            pha         ;use stack to load status
26b1 : a90f            >            lda #$aa-$9b     ;precharge accu
26b3 : 28              >            plp
                       >
26b4 : 9b              >            db  $9b          ;test nop integrity - flags on
26b5 : ea              >            nop
26b6 : ea              >            nop
                       >            tst_a $aa-$9b,$ff
26b7 : 08              >            php         ;save flags
26b8 : 08              >            php
26b9 : c90f            >            cmp #$aa-$9b     ;test result
                       >            trap_ne
26bb : f003            >        beq skip1580
                       >        trap            ;failed not equal (non zero)
26bd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26c0 :                 >skip1580
                       >
26c0 : 68              >            pla         ;load status
                       >            cmp_flag $ff
26c1 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
26c3 : f003            >        beq skip1583
                       >        trap            ;failed not equal (non zero)
26c5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26c8 :                 >skip1583
                       >
26c8 : 28              >            plp         ;restore status
                       >
26c9 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
26cb : f003            >        beq skip1585
                       >        trap            ;failed not equal (non zero)
26cd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26d0 :                 >skip1585
                       >
26d0 : e000            >            cpx #0
                       >            trap_ne         ;x changed
26d2 : f003            >        beq skip1587
                       >        trap            ;failed not equal (non zero)
26d4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26d7 :                 >skip1587
                       >
                        
                                nop_test $ab,1
26d7 : a042            >            ldy #$42
26d9 : a203            >            ldx #4-1
26db : ab              >            db  $ab          ;test nop length
                       >        if 1 = 1
26dc : ca              >            dex
26dd : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
26de : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
26df : f003            >        beq skip1590
                       >        trap            ;failed not equal (non zero)
26e1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26e4 :                 >skip1590
                       >
                       >            set_a $ff-$ab,0
                       >            load_flag 0
26e4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
26e6 : 48              >            pha         ;use stack to load status
26e7 : a954            >            lda #$ff-$ab     ;precharge accu
26e9 : 28              >            plp
                       >
26ea : ab              >            db  $ab          ;test nop integrity - flags off
26eb : ea              >            nop
26ec : ea              >            nop
                       >            tst_a $ff-$ab,0
26ed : 08              >            php         ;save flags
26ee : 08              >            php
26ef : c954            >            cmp #$ff-$ab     ;test result
                       >            trap_ne
26f1 : f003            >        beq skip1595
                       >        trap            ;failed not equal (non zero)
26f3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26f6 :                 >skip1595
                       >
26f6 : 68              >            pla         ;load status
                       >            cmp_flag 0
26f7 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
26f9 : f003            >        beq skip1598
                       >        trap            ;failed not equal (non zero)
26fb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26fe :                 >skip1598
                       >
26fe : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$ab,$ff
                       >            load_flag $ff
26ff : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2701 : 48              >            pha         ;use stack to load status
2702 : a9ff            >            lda #$aa-$ab     ;precharge accu
2704 : 28              >            plp
                       >
2705 : ab              >            db  $ab          ;test nop integrity - flags on
2706 : ea              >            nop
2707 : ea              >            nop
                       >            tst_a $aa-$ab,$ff
2708 : 08              >            php         ;save flags
2709 : 08              >            php
270a : c9ff            >            cmp #$aa-$ab     ;test result
                       >            trap_ne
270c : f003            >        beq skip1603
                       >        trap            ;failed not equal (non zero)
270e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2711 :                 >skip1603
                       >
2711 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2712 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2714 : f003            >        beq skip1606
                       >        trap            ;failed not equal (non zero)
2716 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2719 :                 >skip1606
                       >
2719 : 28              >            plp         ;restore status
                       >
271a : c042            >            cpy #$42
                       >            trap_ne         ;y changed
271c : f003            >        beq skip1608
                       >        trap            ;failed not equal (non zero)
271e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2721 :                 >skip1608
                       >
2721 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2723 : f003            >        beq skip1610
                       >        trap            ;failed not equal (non zero)
2725 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2728 :                 >skip1610
                       >
                        
                                nop_test $bb,1
2728 : a042            >            ldy #$42
272a : a203            >            ldx #4-1
272c : bb              >            db  $bb          ;test nop length
                       >        if 1 = 1
272d : ca              >            dex
272e : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
272f : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2730 : f003            >        beq skip1613
                       >        trap            ;failed not equal (non zero)
2732 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2735 :                 >skip1613
                       >
                       >            set_a $ff-$bb,0
                       >            load_flag 0
2735 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2737 : 48              >            pha         ;use stack to load status
2738 : a944            >            lda #$ff-$bb     ;precharge accu
273a : 28              >            plp
                       >
273b : bb              >            db  $bb          ;test nop integrity - flags off
273c : ea              >            nop
273d : ea              >            nop
                       >            tst_a $ff-$bb,0
273e : 08              >            php         ;save flags
273f : 08              >            php
2740 : c944            >            cmp #$ff-$bb     ;test result
                       >            trap_ne
2742 : f003            >        beq skip1618
                       >        trap            ;failed not equal (non zero)
2744 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2747 :                 >skip1618
                       >
2747 : 68              >            pla         ;load status
                       >            cmp_flag 0
2748 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
274a : f003            >        beq skip1621
                       >        trap            ;failed not equal (non zero)
274c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
274f :                 >skip1621
                       >
274f : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$bb,$ff
                       >            load_flag $ff
2750 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2752 : 48              >            pha         ;use stack to load status
2753 : a9ef            >            lda #$aa-$bb     ;precharge accu
2755 : 28              >            plp
                       >
2756 : bb              >            db  $bb          ;test nop integrity - flags on
2757 : ea              >            nop
2758 : ea              >            nop
                       >            tst_a $aa-$bb,$ff
2759 : 08              >            php         ;save flags
275a : 08              >            php
275b : c9ef            >            cmp #$aa-$bb     ;test result
                       >            trap_ne
275d : f003            >        beq skip1626
                       >        trap            ;failed not equal (non zero)
275f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2762 :                 >skip1626
                       >
2762 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2763 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2765 : f003            >        beq skip1629
                       >        trap            ;failed not equal (non zero)
2767 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
276a :                 >skip1629
                       >
276a : 28              >            plp         ;restore status
                       >
276b : c042            >            cpy #$42
                       >            trap_ne         ;y changed
276d : f003            >        beq skip1631
                       >        trap            ;failed not equal (non zero)
276f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2772 :                 >skip1631
                       >
2772 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2774 : f003            >        beq skip1633
                       >        trap            ;failed not equal (non zero)
2776 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2779 :                 >skip1633
                       >
                        
                                nop_test $eb,1
2779 : a042            >            ldy #$42
277b : a203            >            ldx #4-1
277d : eb              >            db  $eb          ;test nop length
                       >        if 1 = 1
277e : ca              >            dex
277f : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2780 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2781 : f003            >        beq skip1636
                       >        trap            ;failed not equal (non zero)
2783 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2786 :                 >skip1636
                       >
                       >            set_a $ff-$eb,0
                       >            load_flag 0
2786 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2788 : 48              >            pha         ;use stack to load status
2789 : a914            >            lda #$ff-$eb     ;precharge accu
278b : 28              >            plp
                       >
278c : eb              >            db  $eb          ;test nop integrity - flags off
278d : ea              >            nop
278e : ea              >            nop
                       >            tst_a $ff-$eb,0
278f : 08              >            php         ;save flags
2790 : 08              >            php
2791 : c914            >            cmp #$ff-$eb     ;test result
                       >            trap_ne
2793 : f003            >        beq skip1641
                       >        trap            ;failed not equal (non zero)
2795 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2798 :                 >skip1641
                       >
2798 : 68              >            pla         ;load status
                       >            cmp_flag 0
2799 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
279b : f003            >        beq skip1644
                       >        trap            ;failed not equal (non zero)
279d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27a0 :                 >skip1644
                       >
27a0 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$eb,$ff
                       >            load_flag $ff
27a1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
27a3 : 48              >            pha         ;use stack to load status
27a4 : a9bf            >            lda #$aa-$eb     ;precharge accu
27a6 : 28              >            plp
                       >
27a7 : eb              >            db  $eb          ;test nop integrity - flags on
27a8 : ea              >            nop
27a9 : ea              >            nop
                       >            tst_a $aa-$eb,$ff
27aa : 08              >            php         ;save flags
27ab : 08              >            php
27ac : c9bf            >            cmp #$aa-$eb     ;test result
                       >            trap_ne
27ae : f003            >        beq skip1649
                       >        trap            ;failed not equal (non zero)
27b0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27b3 :                 >skip1649
                       >
27b3 : 68              >            pla         ;load status
                       >            cmp_flag $ff
27b4 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
27b6 : f003            >        beq skip1652
                       >        trap            ;failed not equal (non zero)
27b8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27bb :                 >skip1652
                       >
27bb : 28              >            plp         ;restore status
                       >
27bc : c042            >            cpy #$42
                       >            trap_ne         ;y changed
27be : f003            >        beq skip1654
                       >        trap            ;failed not equal (non zero)
27c0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27c3 :                 >skip1654
                       >
27c3 : e000            >            cpx #0
                       >            trap_ne         ;x changed
27c5 : f003            >        beq skip1656
                       >        trap            ;failed not equal (non zero)
27c7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27ca :                 >skip1656
                       >
                        
                                nop_test $fb,1
27ca : a042            >            ldy #$42
27cc : a203            >            ldx #4-1
27ce : fb              >            db  $fb          ;test nop length
                       >        if 1 = 1
27cf : ca              >            dex
27d0 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
27d1 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
27d2 : f003            >        beq skip1659
                       >        trap            ;failed not equal (non zero)
27d4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27d7 :                 >skip1659
                       >
                       >            set_a $ff-$fb,0
                       >            load_flag 0
27d7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
27d9 : 48              >            pha         ;use stack to load status
27da : a904            >            lda #$ff-$fb     ;precharge accu
27dc : 28              >            plp
                       >
27dd : fb              >            db  $fb          ;test nop integrity - flags off
27de : ea              >            nop
27df : ea              >            nop
                       >            tst_a $ff-$fb,0
27e0 : 08              >            php         ;save flags
27e1 : 08              >            php
27e2 : c904            >            cmp #$ff-$fb     ;test result
                       >            trap_ne
27e4 : f003            >        beq skip1664
                       >        trap            ;failed not equal (non zero)
27e6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27e9 :                 >skip1664
                       >
27e9 : 68              >            pla         ;load status
                       >            cmp_flag 0
27ea : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
27ec : f003            >        beq skip1667
                       >        trap            ;failed not equal (non zero)
27ee : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27f1 :                 >skip1667
                       >
27f1 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$fb,$ff
                       >            load_flag $ff
27f2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
27f4 : 48              >            pha         ;use stack to load status
27f5 : a9af            >            lda #$aa-$fb     ;precharge accu
27f7 : 28              >            plp
                       >
27f8 : fb              >            db  $fb          ;test nop integrity - flags on
27f9 : ea              >            nop
27fa : ea              >            nop
                       >            tst_a $aa-$fb,$ff
27fb : 08              >            php         ;save flags
27fc : 08              >            php
27fd : c9af            >            cmp #$aa-$fb     ;test result
                       >            trap_ne
27ff : f003            >        beq skip1672
                       >        trap            ;failed not equal (non zero)
2801 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2804 :                 >skip1672
                       >
2804 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2805 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2807 : f003            >        beq skip1675
                       >        trap            ;failed not equal (non zero)
2809 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
280c :                 >skip1675
                       >
280c : 28              >            plp         ;restore status
                       >
280d : c042            >            cpy #$42
                       >            trap_ne         ;y changed
280f : f003            >        beq skip1677
                       >        trap            ;failed not equal (non zero)
2811 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2814 :                 >skip1677
                       >
2814 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2816 : f003            >        beq skip1679
                       >        trap            ;failed not equal (non zero)
2818 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
281b :                 >skip1679
                       >
                        
                            if rkwl_wdc_op = 0      ;NOPs not available on Rockwell & WDC 65C02
                                nop_test $07,1
                                nop_test $17,1
                                nop_test $27,1
                                nop_test $37,1
                                nop_test $47,1
                                nop_test $57,1
                                nop_test $67,1
                                nop_test $77,1
                                nop_test $87,1
                                nop_test $97,1
                                nop_test $a7,1
                                nop_test $b7,1
                                nop_test $c7,1
                                nop_test $d7,1
                                nop_test $e7,1
                                nop_test $f7,1
                                nop_test $0f,1
                                nop_test $1f,1
                                nop_test $2f,1
                                nop_test $3f,1
                                nop_test $4f,1
                                nop_test $5f,1
                                nop_test $6f,1
                                nop_test $7f,1
                                nop_test $8f,1
                                nop_test $9f,1
                                nop_test $af,1
                                nop_test $bf,1
                                nop_test $cf,1
                                nop_test $df,1
                                nop_test $ef,1
                                nop_test $ff,1
                            endif
                            if  wdc_op = 0          ;NOPs not available on WDC 65C02 (WAI, STP)
                                nop_test $cb,1
281b : a042            >            ldy #$42
281d : a203            >            ldx #4-1
281f : cb              >            db  $cb          ;test nop length
                       >        if 1 = 1
2820 : ca              >            dex
2821 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2822 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2823 : f003            >        beq skip1682
                       >        trap            ;failed not equal (non zero)
2825 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2828 :                 >skip1682
                       >
                       >            set_a $ff-$cb,0
                       >            load_flag 0
2828 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
282a : 48              >            pha         ;use stack to load status
282b : a934            >            lda #$ff-$cb     ;precharge accu
282d : 28              >            plp
                       >
282e : cb              >            db  $cb          ;test nop integrity - flags off
282f : ea              >            nop
2830 : ea              >            nop
                       >            tst_a $ff-$cb,0
2831 : 08              >            php         ;save flags
2832 : 08              >            php
2833 : c934            >            cmp #$ff-$cb     ;test result
                       >            trap_ne
2835 : f003            >        beq skip1687
                       >        trap            ;failed not equal (non zero)
2837 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
283a :                 >skip1687
                       >
283a : 68              >            pla         ;load status
                       >            cmp_flag 0
283b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
283d : f003            >        beq skip1690
                       >        trap            ;failed not equal (non zero)
283f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2842 :                 >skip1690
                       >
2842 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$cb,$ff
                       >            load_flag $ff
2843 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2845 : 48              >            pha         ;use stack to load status
2846 : a9df            >            lda #$aa-$cb     ;precharge accu
2848 : 28              >            plp
                       >
2849 : cb              >            db  $cb          ;test nop integrity - flags on
284a : ea              >            nop
284b : ea              >            nop
                       >            tst_a $aa-$cb,$ff
284c : 08              >            php         ;save flags
284d : 08              >            php
284e : c9df            >            cmp #$aa-$cb     ;test result
                       >            trap_ne
2850 : f003            >        beq skip1695
                       >        trap            ;failed not equal (non zero)
2852 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2855 :                 >skip1695
                       >
2855 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2856 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2858 : f003            >        beq skip1698
                       >        trap            ;failed not equal (non zero)
285a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
285d :                 >skip1698
                       >
285d : 28              >            plp         ;restore status
                       >
285e : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2860 : f003            >        beq skip1700
                       >        trap            ;failed not equal (non zero)
2862 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2865 :                 >skip1700
                       >
2865 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2867 : f003            >        beq skip1702
                       >        trap            ;failed not equal (non zero)
2869 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
286c :                 >skip1702
                       >
                        
                                nop_test $db,1
286c : a042            >            ldy #$42
286e : a203            >            ldx #4-1
2870 : db              >            db  $db          ;test nop length
                       >        if 1 = 1
2871 : ca              >            dex
2872 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2873 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2874 : f003            >        beq skip1705
                       >        trap            ;failed not equal (non zero)
2876 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2879 :                 >skip1705
                       >
                       >            set_a $ff-$db,0
                       >            load_flag 0
2879 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
287b : 48              >            pha         ;use stack to load status
287c : a924            >            lda #$ff-$db     ;precharge accu
287e : 28              >            plp
                       >
287f : db              >            db  $db          ;test nop integrity - flags off
2880 : ea              >            nop
2881 : ea              >            nop
                       >            tst_a $ff-$db,0
2882 : 08              >            php         ;save flags
2883 : 08              >            php
2884 : c924            >            cmp #$ff-$db     ;test result
                       >            trap_ne
2886 : f003            >        beq skip1710
                       >        trap            ;failed not equal (non zero)
2888 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
288b :                 >skip1710
                       >
288b : 68              >            pla         ;load status
                       >            cmp_flag 0
288c : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
288e : f003            >        beq skip1713
                       >        trap            ;failed not equal (non zero)
2890 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2893 :                 >skip1713
                       >
2893 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$db,$ff
                       >            load_flag $ff
2894 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2896 : 48              >            pha         ;use stack to load status
2897 : a9cf            >            lda #$aa-$db     ;precharge accu
2899 : 28              >            plp
                       >
289a : db              >            db  $db          ;test nop integrity - flags on
289b : ea              >            nop
289c : ea              >            nop
                       >            tst_a $aa-$db,$ff
289d : 08              >            php         ;save flags
289e : 08              >            php
289f : c9cf            >            cmp #$aa-$db     ;test result
                       >            trap_ne
28a1 : f003            >        beq skip1718
                       >        trap            ;failed not equal (non zero)
28a3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28a6 :                 >skip1718
                       >
28a6 : 68              >            pla         ;load status
                       >            cmp_flag $ff
28a7 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
28a9 : f003            >        beq skip1721
                       >        trap            ;failed not equal (non zero)
28ab : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28ae :                 >skip1721
                       >
28ae : 28              >            plp         ;restore status
                       >
28af : c042            >            cpy #$42
                       >            trap_ne         ;y changed
28b1 : f003            >        beq skip1723
                       >        trap            ;failed not equal (non zero)
28b3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28b6 :                 >skip1723
                       >
28b6 : e000            >            cpx #0
                       >            trap_ne         ;x changed
28b8 : f003            >        beq skip1725
                       >        trap            ;failed not equal (non zero)
28ba : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28bd :                 >skip1725
                       >
                        
                            endif
                                next_test
28bd : ad0202          >            lda test_case   ;previous test
28c0 : c908            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
28c2 : f003            >        beq skip1728
                       >        trap            ;failed not equal (non zero)
28c4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28c7 :                 >skip1728
                       >
0009 =                 >test_num = test_num + 1
28c7 : a909            >            lda #test_num   ;*** next tests' number
28c9 : 8d0202          >            sta test_case
28cc : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                    
                        ; jump indirect (test page cross bug is fixed)
28cf : a203                     ldx #3          ;prepare table
28d1 : bdfa3c           ji1     lda ji_adr,x
28d4 : 9dfd02                   sta ji_tab,x
28d7 : ca                       dex
28d8 : 10f7                     bpl ji1
28da : a93f                     lda #hi(ji_px) ;high address if page cross bug
28dc : 8d0002                   sta pg_x
                                set_stat 0
                       >            load_flag 0
28df : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
28e1 : 48              >            pha         ;use stack to load status
28e2 : 28              >            plp
                        
28e3 : a949                     lda #'I'
28e5 : a24e                     ldx #'N'
28e7 : a044                     ldy #'D'        ;N=0, V=0, Z=0, C=0
28e9 : 6cfd02                   jmp (ji_tab)
28ec : ea                       nop
                                trap_ne         ;runover protection
28ed : f003            >        beq skip1732
                       >        trap            ;failed not equal (non zero)
28ef : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28f2 :                 >skip1732
                        
                        
28f2 : 88                       dey
28f3 : 88                       dey
28f4 : 08               ji_ret  php             ;either SP or Y count will fail, if we do not hit
28f5 : 88                       dey
28f6 : 88                       dey
28f7 : 88                       dey
28f8 : 28                       plp
                                trap_eq         ;returned flags OK?
28f9 : d003            >        bne skip1734
                       >        trap           ;failed equal (zero)
28fb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28fe :                 >skip1734
                        
                                trap_pl
28fe : 3003            >        bmi skip1736
                       >        trap            ;failed plus (bit 7 clear)
2900 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2903 :                 >skip1736
                        
                                trap_cc
2903 : b003            >        bcs skip1738
                       >        trap            ;failed carry clear
2905 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2908 :                 >skip1738
                        
                                trap_vc
2908 : 7003            >        bvs skip1740
                       >        trap            ;failed overflow clear
290a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
290d :                 >skip1740
                        
290d : c9e3                     cmp #('I'^$aa)  ;returned registers OK?
                                trap_ne
290f : f003            >        beq skip1742
                       >        trap            ;failed not equal (non zero)
2911 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2914 :                 >skip1742
                        
2914 : e04f                     cpx #('N'+1)
                                trap_ne
2916 : f003            >        beq skip1744
                       >        trap            ;failed not equal (non zero)
2918 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
291b :                 >skip1744
                        
291b : c03e                     cpy #('D'-6)
                                trap_ne
291d : f003            >        beq skip1746
                       >        trap            ;failed not equal (non zero)
291f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2922 :                 >skip1746
                        
2922 : ba                       tsx             ;SP check
2923 : e0ff                     cpx #$ff
                                trap_ne
2925 : f003            >        beq skip1748
                       >        trap            ;failed not equal (non zero)
2927 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
292a :                 >skip1748
                        
                                next_test
292a : ad0202          >            lda test_case   ;previous test
292d : c909            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
292f : f003            >        beq skip1751
                       >        trap            ;failed not equal (non zero)
2931 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2934 :                 >skip1751
                       >
000a =                 >test_num = test_num + 1
2934 : a90a            >            lda #test_num   ;*** next tests' number
2936 : 8d0202          >            sta test_case
2939 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; jump indexed indirect
293c : a20b                     ldx #11         ;prepare table
293e : bd4b3d           jxi1    lda jxi_adr,x
2941 : 9df902                   sta jxi_tab,x
2944 : ca                       dex
2945 : 10f7                     bpl jxi1
2947 : a940                     lda #hi(jxi_px) ;high address if page cross bug
2949 : 8d0002                   sta pg_x
                                set_stat 0
                       >            load_flag 0
294c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
294e : 48              >            pha         ;use stack to load status
294f : 28              >            plp
                        
2950 : a958                     lda #'X'
2952 : a204                     ldx #4
2954 : a049                     ldy #'I'        ;N=0, V=0, Z=0, C=0
2956 : 7cf902                   jmp (jxi_tab,x)
2959 : ea                       nop
                                trap_ne         ;runover protection
295a : f003            >        beq skip1755
                       >        trap            ;failed not equal (non zero)
295c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
295f :                 >skip1755
                        
                        
295f : 88                       dey
2960 : 88                       dey
2961 : 08               jxi_ret php             ;either SP or Y count will fail, if we do not hit
2962 : 88                       dey
2963 : 88                       dey
2964 : 88                       dey
2965 : 28                       plp
                                trap_eq         ;returned flags OK?
2966 : d003            >        bne skip1757
                       >        trap           ;failed equal (zero)
2968 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
296b :                 >skip1757
                        
                                trap_pl
296b : 3003            >        bmi skip1759
                       >        trap            ;failed plus (bit 7 clear)
296d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2970 :                 >skip1759
                        
                                trap_cc
2970 : b003            >        bcs skip1761
                       >        trap            ;failed carry clear
2972 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2975 :                 >skip1761
                        
                                trap_vc
2975 : 7003            >        bvs skip1763
                       >        trap            ;failed overflow clear
2977 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
297a :                 >skip1763
                        
297a : c9f2                     cmp #('X'^$aa)  ;returned registers OK?
                                trap_ne
297c : f003            >        beq skip1765
                       >        trap            ;failed not equal (non zero)
297e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2981 :                 >skip1765
                        
2981 : e006                     cpx #6
                                trap_ne
2983 : f003            >        beq skip1767
                       >        trap            ;failed not equal (non zero)
2985 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2988 :                 >skip1767
                        
2988 : c043                     cpy #('I'-6)
                                trap_ne
298a : f003            >        beq skip1769
                       >        trap            ;failed not equal (non zero)
298c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
298f :                 >skip1769
                        
298f : ba                       tsx             ;SP check
2990 : e0ff                     cpx #$ff
                                trap_ne
2992 : f003            >        beq skip1771
                       >        trap            ;failed not equal (non zero)
2994 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2997 :                 >skip1771
                        
                        
2997 : a9b3                     lda #lo(jxp_ok) ;test with index causing a page cross
2999 : 8d0003                   sta jxp_tab
299c : a929                     lda #hi(jxp_ok)
299e : 8d0103                   sta jxp_tab+1
29a1 : a9b0                     lda #lo(jxp_px)
29a3 : 8d0002                   sta pg_x
29a6 : a929                     lda #hi(jxp_px)
29a8 : 8d0102                   sta pg_x+1
29ab : a2ff                     ldx #$ff
29ad : 7c0102                   jmp (jxp_tab-$ff,x)
                                
29b0 :                  jxp_px  
                                trap            ;page cross by index to wrong page
29b0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
                        
29b3 :                  jxp_ok
                                next_test
29b3 : ad0202          >            lda test_case   ;previous test
29b6 : c90a            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
29b8 : f003            >        beq skip1775
                       >        trap            ;failed not equal (non zero)
29ba : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29bd :                 >skip1775
                       >
000b =                 >test_num = test_num + 1
29bd : a90b            >            lda #test_num   ;*** next tests' number
29bf : 8d0202          >            sta test_case
29c2 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                            if ROM_vectors = 1
                        ; test BRK clears decimal mode
                                sed
                                brk
                                nop
                        brk_ret
                                next_test
                            endif
                         
                        ; testing accumulator increment/decrement INC A & DEC A
29c5 : a2ac                     ldx #$ac    ;protect x & y
29c7 : a0dc                     ldy #$dc
                                set_a $fe,$ff
                       >            load_flag $ff
29c9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
29cb : 48              >            pha         ;use stack to load status
29cc : a9fe            >            lda #$fe     ;precharge accu
29ce : 28              >            plp
                        
29cf : 1a                       inc a           ;ff
                                tst_as $ff,$ff-zero
29d0 : 48              >            pha
29d1 : 08              >            php         ;save flags
29d2 : 08              >            php
29d3 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
29d5 : f003            >        beq skip1780
                       >        trap            ;failed not equal (non zero)
29d7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29da :                 >skip1780
                       >
29da : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
29db : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
29dd : f003            >        beq skip1783
                       >        trap            ;failed not equal (non zero)
29df : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29e2 :                 >skip1783
                       >
29e2 : 28              >            plp         ;restore status
29e3 : 68              >            pla
                        
29e4 : 1a                       inc a           ;00
                                tst_as 0,$ff-minus
29e5 : 48              >            pha
29e6 : 08              >            php         ;save flags
29e7 : 08              >            php
29e8 : c900            >            cmp #0     ;test result
                       >            trap_ne
29ea : f003            >        beq skip1786
                       >        trap            ;failed not equal (non zero)
29ec : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29ef :                 >skip1786
                       >
29ef : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
29f0 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
29f2 : f003            >        beq skip1789
                       >        trap            ;failed not equal (non zero)
29f4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29f7 :                 >skip1789
                       >
29f7 : 28              >            plp         ;restore status
29f8 : 68              >            pla
                        
29f9 : 1a                       inc a           ;01
                                tst_as 1,$ff-minus-zero
29fa : 48              >            pha
29fb : 08              >            php         ;save flags
29fc : 08              >            php
29fd : c901            >            cmp #1     ;test result
                       >            trap_ne
29ff : f003            >        beq skip1792
                       >        trap            ;failed not equal (non zero)
2a01 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a04 :                 >skip1792
                       >
2a04 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus-zero
2a05 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2a07 : f003            >        beq skip1795
                       >        trap            ;failed not equal (non zero)
2a09 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a0c :                 >skip1795
                       >
2a0c : 28              >            plp         ;restore status
2a0d : 68              >            pla
                        
2a0e : 3a                       dec a           ;00
                                tst_as 0,$ff-minus
2a0f : 48              >            pha
2a10 : 08              >            php         ;save flags
2a11 : 08              >            php
2a12 : c900            >            cmp #0     ;test result
                       >            trap_ne
2a14 : f003            >        beq skip1798
                       >        trap            ;failed not equal (non zero)
2a16 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a19 :                 >skip1798
                       >
2a19 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
2a1a : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2a1c : f003            >        beq skip1801
                       >        trap            ;failed not equal (non zero)
2a1e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a21 :                 >skip1801
                       >
2a21 : 28              >            plp         ;restore status
2a22 : 68              >            pla
                        
2a23 : 3a                       dec a           ;ff
                                tst_as $ff,$ff-zero
2a24 : 48              >            pha
2a25 : 08              >            php         ;save flags
2a26 : 08              >            php
2a27 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
2a29 : f003            >        beq skip1804
                       >        trap            ;failed not equal (non zero)
2a2b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a2e :                 >skip1804
                       >
2a2e : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
2a2f : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2a31 : f003            >        beq skip1807
                       >        trap            ;failed not equal (non zero)
2a33 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a36 :                 >skip1807
                       >
2a36 : 28              >            plp         ;restore status
2a37 : 68              >            pla
                        
2a38 : 3a                       dec a           ;fe
                                set_a $fe,0
                       >            load_flag 0
2a39 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2a3b : 48              >            pha         ;use stack to load status
2a3c : a9fe            >            lda #$fe     ;precharge accu
2a3e : 28              >            plp
                        
2a3f : 1a                       inc a           ;ff
                                tst_as $ff,minus
2a40 : 48              >            pha
2a41 : 08              >            php         ;save flags
2a42 : 08              >            php
2a43 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
2a45 : f003            >        beq skip1812
                       >        trap            ;failed not equal (non zero)
2a47 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a4a :                 >skip1812
                       >
2a4a : 68              >            pla         ;load status
                       >            cmp_flag minus
2a4b : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2a4d : f003            >        beq skip1815
                       >        trap            ;failed not equal (non zero)
2a4f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a52 :                 >skip1815
                       >
2a52 : 28              >            plp         ;restore status
2a53 : 68              >            pla
                        
2a54 : 1a                       inc a           ;00
                                tst_as 0,zero
2a55 : 48              >            pha
2a56 : 08              >            php         ;save flags
2a57 : 08              >            php
2a58 : c900            >            cmp #0     ;test result
                       >            trap_ne
2a5a : f003            >        beq skip1818
                       >        trap            ;failed not equal (non zero)
2a5c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a5f :                 >skip1818
                       >
2a5f : 68              >            pla         ;load status
                       >            cmp_flag zero
2a60 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2a62 : f003            >        beq skip1821
                       >        trap            ;failed not equal (non zero)
2a64 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a67 :                 >skip1821
                       >
2a67 : 28              >            plp         ;restore status
2a68 : 68              >            pla
                        
2a69 : 1a                       inc a           ;01
                                tst_as 1,0
2a6a : 48              >            pha
2a6b : 08              >            php         ;save flags
2a6c : 08              >            php
2a6d : c901            >            cmp #1     ;test result
                       >            trap_ne
2a6f : f003            >        beq skip1824
                       >        trap            ;failed not equal (non zero)
2a71 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a74 :                 >skip1824
                       >
2a74 : 68              >            pla         ;load status
                       >            cmp_flag 0
2a75 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2a77 : f003            >        beq skip1827
                       >        trap            ;failed not equal (non zero)
2a79 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a7c :                 >skip1827
                       >
2a7c : 28              >            plp         ;restore status
2a7d : 68              >            pla
                        
2a7e : 3a                       dec a           ;00
                                tst_as 0,zero
2a7f : 48              >            pha
2a80 : 08              >            php         ;save flags
2a81 : 08              >            php
2a82 : c900            >            cmp #0     ;test result
                       >            trap_ne
2a84 : f003            >        beq skip1830
                       >        trap            ;failed not equal (non zero)
2a86 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a89 :                 >skip1830
                       >
2a89 : 68              >            pla         ;load status
                       >            cmp_flag zero
2a8a : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2a8c : f003            >        beq skip1833
                       >        trap            ;failed not equal (non zero)
2a8e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a91 :                 >skip1833
                       >
2a91 : 28              >            plp         ;restore status
2a92 : 68              >            pla
                        
2a93 : 3a                       dec a           ;ff
                                tst_as $ff,minus
2a94 : 48              >            pha
2a95 : 08              >            php         ;save flags
2a96 : 08              >            php
2a97 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
2a99 : f003            >        beq skip1836
                       >        trap            ;failed not equal (non zero)
2a9b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a9e :                 >skip1836
                       >
2a9e : 68              >            pla         ;load status
                       >            cmp_flag minus
2a9f : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2aa1 : f003            >        beq skip1839
                       >        trap            ;failed not equal (non zero)
2aa3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2aa6 :                 >skip1839
                       >
2aa6 : 28              >            plp         ;restore status
2aa7 : 68              >            pla
                        
2aa8 : e0ac                     cpx #$ac
                                trap_ne     ;x altered during test
2aaa : f003            >        beq skip1841
                       >        trap            ;failed not equal (non zero)
2aac : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2aaf :                 >skip1841
                        
2aaf : c0dc                     cpy #$dc
                                trap_ne     ;y altered during test
2ab1 : f003            >        beq skip1843
                       >        trap            ;failed not equal (non zero)
2ab3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ab6 :                 >skip1843
                        
2ab6 : ba                       tsx
2ab7 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
2ab9 : f003            >        beq skip1845
                       >        trap            ;failed not equal (non zero)
2abb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2abe :                 >skip1845
                        
                                next_test
2abe : ad0202          >            lda test_case   ;previous test
2ac1 : c90b            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2ac3 : f003            >        beq skip1848
                       >        trap            ;failed not equal (non zero)
2ac5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ac8 :                 >skip1848
                       >
000c =                 >test_num = test_num + 1
2ac8 : a90c            >            lda #test_num   ;*** next tests' number
2aca : 8d0202          >            sta test_case
2acd : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing load / store accumulator LDA / STA (zp)
2ad0 : a299                     ldx #$99    ;protect x & y
2ad2 : a066                     ldy #$66
                                set_stat 0  
                       >            load_flag 0  
2ad4 : a900            >            lda #0               ;allow test to change I-flag (no mask)
                       >
2ad6 : 48              >            pha         ;use stack to load status
2ad7 : 28              >            plp
                        
2ad8 : b228                     lda (ind1)
2ada : 08                       php         ;test stores do not alter flags
2adb : 49c3                     eor #$c3
2add : 28                       plp
2ade : 9234                     sta (indt)
2ae0 : 08                       php         ;flags after load/store sequence
2ae1 : 49c3                     eor #$c3
2ae3 : c9c3                     cmp #$c3    ;test result
                                trap_ne
2ae5 : f003            >        beq skip1852
                       >        trap            ;failed not equal (non zero)
2ae7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2aea :                 >skip1852
                        
2aea : 68                       pla         ;load status
                                eor_flag 0
2aeb : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2aed : cd0f02                   cmp fLDx    ;test flags
                                trap_ne
2af0 : f003            >        beq skip1855
                       >        trap            ;failed not equal (non zero)
2af2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2af5 :                 >skip1855
                        
                                set_stat 0
                       >            load_flag 0
2af5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2af7 : 48              >            pha         ;use stack to load status
2af8 : 28              >            plp
                        
2af9 : b22a                     lda (ind1+2)
2afb : 08                       php         ;test stores do not alter flags
2afc : 49c3                     eor #$c3
2afe : 28                       plp
2aff : 9236                     sta (indt+2)
2b01 : 08                       php         ;flags after load/store sequence
2b02 : 49c3                     eor #$c3
2b04 : c982                     cmp #$82    ;test result
                                trap_ne
2b06 : f003            >        beq skip1859
                       >        trap            ;failed not equal (non zero)
2b08 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b0b :                 >skip1859
                        
2b0b : 68                       pla         ;load status
                                eor_flag 0
2b0c : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2b0e : cd1002                   cmp fLDx+1  ;test flags
                                trap_ne
2b11 : f003            >        beq skip1862
                       >        trap            ;failed not equal (non zero)
2b13 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b16 :                 >skip1862
                        
                                set_stat 0
                       >            load_flag 0
2b16 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2b18 : 48              >            pha         ;use stack to load status
2b19 : 28              >            plp
                        
2b1a : b22c                     lda (ind1+4)
2b1c : 08                       php         ;test stores do not alter flags
2b1d : 49c3                     eor #$c3
2b1f : 28                       plp
2b20 : 9238                     sta (indt+4)
2b22 : 08                       php         ;flags after load/store sequence
2b23 : 49c3                     eor #$c3
2b25 : c941                     cmp #$41    ;test result
                                trap_ne
2b27 : f003            >        beq skip1866
                       >        trap            ;failed not equal (non zero)
2b29 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b2c :                 >skip1866
                        
2b2c : 68                       pla         ;load status
                                eor_flag 0
2b2d : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2b2f : cd1102                   cmp fLDx+2  ;test flags
                                trap_ne
2b32 : f003            >        beq skip1869
                       >        trap            ;failed not equal (non zero)
2b34 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b37 :                 >skip1869
                        
                                set_stat 0
                       >            load_flag 0
2b37 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2b39 : 48              >            pha         ;use stack to load status
2b3a : 28              >            plp
                        
2b3b : b22e                     lda (ind1+6)
2b3d : 08                       php         ;test stores do not alter flags
2b3e : 49c3                     eor #$c3
2b40 : 28                       plp
2b41 : 923a                     sta (indt+6)
2b43 : 08                       php         ;flags after load/store sequence
2b44 : 49c3                     eor #$c3
2b46 : c900                     cmp #0      ;test result
                                trap_ne
2b48 : f003            >        beq skip1873
                       >        trap            ;failed not equal (non zero)
2b4a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b4d :                 >skip1873
                        
2b4d : 68                       pla         ;load status
                                eor_flag 0
2b4e : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2b50 : cd1202                   cmp fLDx+3  ;test flags
                                trap_ne
2b53 : f003            >        beq skip1876
                       >        trap            ;failed not equal (non zero)
2b55 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b58 :                 >skip1876
                        
2b58 : e099                     cpx #$99
                                trap_ne     ;x altered during test
2b5a : f003            >        beq skip1878
                       >        trap            ;failed not equal (non zero)
2b5c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b5f :                 >skip1878
                        
2b5f : c066                     cpy #$66
                                trap_ne     ;y altered during test
2b61 : f003            >        beq skip1880
                       >        trap            ;failed not equal (non zero)
2b63 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b66 :                 >skip1880
                        
                        
2b66 : a003                     ldy #3      ;testing store result
2b68 : a200                     ldx #0
2b6a : b90502           tstai1  lda abst,y
2b6d : 49c3                     eor #$c3
2b6f : d90a02                   cmp abs1,y
                                trap_ne     ;store to indirect data
2b72 : f003            >        beq skip1882
                       >        trap            ;failed not equal (non zero)
2b74 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b77 :                 >skip1882
                        
2b77 : 8a                       txa
2b78 : 990502                   sta abst,y  ;clear                
2b7b : 88                       dey
2b7c : 10ec                     bpl tstai1
                        
2b7e : a299                     ldx #$99    ;protect x & y
2b80 : a066                     ldy #$66
                                set_stat $ff  
                       >            load_flag $ff  
2b82 : a9ff            >            lda #$ff               ;allow test to change I-flag (no mask)
                       >
2b84 : 48              >            pha         ;use stack to load status
2b85 : 28              >            plp
                        
2b86 : b228                     lda (ind1)
2b88 : 08                       php         ;test stores do not alter flags
2b89 : 49c3                     eor #$c3
2b8b : 28                       plp
2b8c : 9234                     sta (indt)
2b8e : 08                       php         ;flags after load/store sequence
2b8f : 49c3                     eor #$c3
2b91 : c9c3                     cmp #$c3    ;test result
                                trap_ne
2b93 : f003            >        beq skip1886
                       >        trap            ;failed not equal (non zero)
2b95 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b98 :                 >skip1886
                        
2b98 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2b99 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2b9b : cd0f02                   cmp fLDx    ;test flags
                                trap_ne
2b9e : f003            >        beq skip1889
                       >        trap            ;failed not equal (non zero)
2ba0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ba3 :                 >skip1889
                        
                                set_stat $ff
                       >            load_flag $ff
2ba3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2ba5 : 48              >            pha         ;use stack to load status
2ba6 : 28              >            plp
                        
2ba7 : b22a                     lda (ind1+2)
2ba9 : 08                       php         ;test stores do not alter flags
2baa : 49c3                     eor #$c3
2bac : 28                       plp
2bad : 9236                     sta (indt+2)
2baf : 08                       php         ;flags after load/store sequence
2bb0 : 49c3                     eor #$c3
2bb2 : c982                     cmp #$82    ;test result
                                trap_ne
2bb4 : f003            >        beq skip1893
                       >        trap            ;failed not equal (non zero)
2bb6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2bb9 :                 >skip1893
                        
2bb9 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2bba : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2bbc : cd1002                   cmp fLDx+1  ;test flags
                                trap_ne
2bbf : f003            >        beq skip1896
                       >        trap            ;failed not equal (non zero)
2bc1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2bc4 :                 >skip1896
                        
                                set_stat $ff
                       >            load_flag $ff
2bc4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2bc6 : 48              >            pha         ;use stack to load status
2bc7 : 28              >            plp
                        
2bc8 : b22c                     lda (ind1+4)
2bca : 08                       php         ;test stores do not alter flags
2bcb : 49c3                     eor #$c3
2bcd : 28                       plp
2bce : 9238                     sta (indt+4)
2bd0 : 08                       php         ;flags after load/store sequence
2bd1 : 49c3                     eor #$c3
2bd3 : c941                     cmp #$41    ;test result
                                trap_ne
2bd5 : f003            >        beq skip1900
                       >        trap            ;failed not equal (non zero)
2bd7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2bda :                 >skip1900
                        
2bda : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2bdb : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2bdd : cd1102                   cmp fLDx+2  ;test flags
                                trap_ne
2be0 : f003            >        beq skip1903
                       >        trap            ;failed not equal (non zero)
2be2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2be5 :                 >skip1903
                        
                                set_stat $ff
                       >            load_flag $ff
2be5 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2be7 : 48              >            pha         ;use stack to load status
2be8 : 28              >            plp
                        
2be9 : b22e                     lda (ind1+6)
2beb : 08                       php         ;test stores do not alter flags
2bec : 49c3                     eor #$c3
2bee : 28                       plp
2bef : 923a                     sta (indt+6)
2bf1 : 08                       php         ;flags after load/store sequence
2bf2 : 49c3                     eor #$c3
2bf4 : c900                     cmp #0      ;test result
                                trap_ne
2bf6 : f003            >        beq skip1907
                       >        trap            ;failed not equal (non zero)
2bf8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2bfb :                 >skip1907
                        
2bfb : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2bfc : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2bfe : cd1202                   cmp fLDx+3  ;test flags
                                trap_ne
2c01 : f003            >        beq skip1910
                       >        trap            ;failed not equal (non zero)
2c03 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c06 :                 >skip1910
                        
2c06 : e099                     cpx #$99
                                trap_ne     ;x altered during test
2c08 : f003            >        beq skip1912
                       >        trap            ;failed not equal (non zero)
2c0a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c0d :                 >skip1912
                        
2c0d : c066                     cpy #$66
                                trap_ne     ;y altered during test
2c0f : f003            >        beq skip1914
                       >        trap            ;failed not equal (non zero)
2c11 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c14 :                 >skip1914
                        
                        
2c14 : a003                     ldy #3      ;testing store result
2c16 : a200                     ldx #0
2c18 : b90502           tstai2  lda abst,y
2c1b : 49c3                     eor #$c3
2c1d : d90a02                   cmp abs1,y
                                trap_ne     ;store to indirect data
2c20 : f003            >        beq skip1916
                       >        trap            ;failed not equal (non zero)
2c22 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c25 :                 >skip1916
                        
2c25 : 8a                       txa
2c26 : 990502                   sta abst,y  ;clear                
2c29 : 88                       dey
2c2a : 10ec                     bpl tstai2
2c2c : ba                       tsx
2c2d : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
2c2f : f003            >        beq skip1918
                       >        trap            ;failed not equal (non zero)
2c31 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c34 :                 >skip1918
                        
                                next_test
2c34 : ad0202          >            lda test_case   ;previous test
2c37 : c90c            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2c39 : f003            >        beq skip1921
                       >        trap            ;failed not equal (non zero)
2c3b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c3e :                 >skip1921
                       >
000d =                 >test_num = test_num + 1
2c3e : a90d            >            lda #test_num   ;*** next tests' number
2c40 : 8d0202          >            sta test_case
2c43 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing STZ - zp / abs / zp,x / abs,x
2c46 : a07b                     ldy #123    ;protect y
2c48 : a204                     ldx #4      ;precharge test area
2c4a : a907                     lda #7
2c4c : 9510             tstz1   sta zpt,x
2c4e : 0a                       asl a
2c4f : ca                       dex
2c50 : 10fa                     bpl tstz1
2c52 : a204                     ldx #4
                                set_a $55,$ff
                       >            load_flag $ff
2c54 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2c56 : 48              >            pha         ;use stack to load status
2c57 : a955            >            lda #$55     ;precharge accu
2c59 : 28              >            plp
                        
2c5a : 6410                     stz zpt     
2c5c : 6411                     stz zpt+1
2c5e : 6412                     stz zpt+2
2c60 : 6413                     stz zpt+3
2c62 : 6414                     stz zpt+4
                                tst_a $55,$ff
2c64 : 08              >            php         ;save flags
2c65 : 08              >            php
2c66 : c955            >            cmp #$55     ;test result
                       >            trap_ne
2c68 : f003            >        beq skip1926
                       >        trap            ;failed not equal (non zero)
2c6a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c6d :                 >skip1926
                       >
2c6d : 68              >            pla         ;load status
                       >            cmp_flag $ff
2c6e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2c70 : f003            >        beq skip1929
                       >        trap            ;failed not equal (non zero)
2c72 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c75 :                 >skip1929
                       >
2c75 : 28              >            plp         ;restore status
                        
2c76 : b510             tstz2   lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
2c78 : f003            >        beq skip1931
                       >        trap            ;failed not equal (non zero)
2c7a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c7d :                 >skip1931
                        
2c7d : ca                       dex
2c7e : 10f6                     bpl tstz2
2c80 : a204                     ldx #4      ;precharge test area
2c82 : a907                     lda #7
2c84 : 9510             tstz3   sta zpt,x
2c86 : 0a                       asl a
2c87 : ca                       dex
2c88 : 10fa                     bpl tstz3
2c8a : a204                     ldx #4
                                set_a $aa,0
                       >            load_flag 0
2c8c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2c8e : 48              >            pha         ;use stack to load status
2c8f : a9aa            >            lda #$aa     ;precharge accu
2c91 : 28              >            plp
                        
2c92 : 6410                     stz zpt     
2c94 : 6411                     stz zpt+1
2c96 : 6412                     stz zpt+2
2c98 : 6413                     stz zpt+3
2c9a : 6414                     stz zpt+4
                                tst_a $aa,0
2c9c : 08              >            php         ;save flags
2c9d : 08              >            php
2c9e : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
2ca0 : f003            >        beq skip1936
                       >        trap            ;failed not equal (non zero)
2ca2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ca5 :                 >skip1936
                       >
2ca5 : 68              >            pla         ;load status
                       >            cmp_flag 0
2ca6 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2ca8 : f003            >        beq skip1939
                       >        trap            ;failed not equal (non zero)
2caa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2cad :                 >skip1939
                       >
2cad : 28              >            plp         ;restore status
                        
2cae : b510             tstz4   lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
2cb0 : f003            >        beq skip1941
                       >        trap            ;failed not equal (non zero)
2cb2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2cb5 :                 >skip1941
                        
2cb5 : ca                       dex
2cb6 : 10f6                     bpl tstz4
                                
2cb8 : a204                     ldx #4      ;precharge test area
2cba : a907                     lda #7
2cbc : 9d0502           tstz5   sta abst,x
2cbf : 0a                       asl a
2cc0 : ca                       dex
2cc1 : 10f9                     bpl tstz5
2cc3 : a204                     ldx #4
                                set_a $55,$ff
                       >            load_flag $ff
2cc5 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2cc7 : 48              >            pha         ;use stack to load status
2cc8 : a955            >            lda #$55     ;precharge accu
2cca : 28              >            plp
                        
2ccb : 9c0502                   stz abst     
2cce : 9c0602                   stz abst+1
2cd1 : 9c0702                   stz abst+2
2cd4 : 9c0802                   stz abst+3
2cd7 : 9c0902                   stz abst+4
                                tst_a $55,$ff
2cda : 08              >            php         ;save flags
2cdb : 08              >            php
2cdc : c955            >            cmp #$55     ;test result
                       >            trap_ne
2cde : f003            >        beq skip1946
                       >        trap            ;failed not equal (non zero)
2ce0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ce3 :                 >skip1946
                       >
2ce3 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2ce4 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2ce6 : f003            >        beq skip1949
                       >        trap            ;failed not equal (non zero)
2ce8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ceb :                 >skip1949
                       >
2ceb : 28              >            plp         ;restore status
                        
2cec : bd0502           tstz6   lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ abs
2cef : f003            >        beq skip1951
                       >        trap            ;failed not equal (non zero)
2cf1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2cf4 :                 >skip1951
                        
2cf4 : ca                       dex
2cf5 : 10f5                     bpl tstz6
2cf7 : a204                     ldx #4      ;precharge test area
2cf9 : a907                     lda #7
2cfb : 9d0502           tstz7   sta abst,x
2cfe : 0a                       asl a
2cff : ca                       dex
2d00 : 10f9                     bpl tstz7
2d02 : a204                     ldx #4
                                set_a $aa,0
                       >            load_flag 0
2d04 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2d06 : 48              >            pha         ;use stack to load status
2d07 : a9aa            >            lda #$aa     ;precharge accu
2d09 : 28              >            plp
                        
2d0a : 9c0502                   stz abst     
2d0d : 9c0602                   stz abst+1
2d10 : 9c0702                   stz abst+2
2d13 : 9c0802                   stz abst+3
2d16 : 9c0902                   stz abst+4
                                tst_a $aa,0
2d19 : 08              >            php         ;save flags
2d1a : 08              >            php
2d1b : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
2d1d : f003            >        beq skip1956
                       >        trap            ;failed not equal (non zero)
2d1f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d22 :                 >skip1956
                       >
2d22 : 68              >            pla         ;load status
                       >            cmp_flag 0
2d23 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2d25 : f003            >        beq skip1959
                       >        trap            ;failed not equal (non zero)
2d27 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d2a :                 >skip1959
                       >
2d2a : 28              >            plp         ;restore status
                        
2d2b : bd0502           tstz8   lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ abs
2d2e : f003            >        beq skip1961
                       >        trap            ;failed not equal (non zero)
2d30 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d33 :                 >skip1961
                        
2d33 : ca                       dex
2d34 : 10f5                     bpl tstz8
                                
2d36 : a204                     ldx #4      ;precharge test area
2d38 : a907                     lda #7
2d3a : 9510             tstz11  sta zpt,x
2d3c : 0a                       asl a
2d3d : ca                       dex
2d3e : 10fa                     bpl tstz11
2d40 : a204                     ldx #4
2d42 :                  tstz15
                                set_a $55,$ff
                       >            load_flag $ff
2d42 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2d44 : 48              >            pha         ;use stack to load status
2d45 : a955            >            lda #$55     ;precharge accu
2d47 : 28              >            plp
                        
2d48 : 7410                     stz zpt,x     
                                tst_a $55,$ff
2d4a : 08              >            php         ;save flags
2d4b : 08              >            php
2d4c : c955            >            cmp #$55     ;test result
                       >            trap_ne
2d4e : f003            >        beq skip1966
                       >        trap            ;failed not equal (non zero)
2d50 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d53 :                 >skip1966
                       >
2d53 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2d54 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2d56 : f003            >        beq skip1969
                       >        trap            ;failed not equal (non zero)
2d58 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d5b :                 >skip1969
                       >
2d5b : 28              >            plp         ;restore status
                        
2d5c : ca                       dex
2d5d : 10e3                     bpl tstz15
2d5f : a204                     ldx #4
2d61 : b510             tstz12  lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
2d63 : f003            >        beq skip1971
                       >        trap            ;failed not equal (non zero)
2d65 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d68 :                 >skip1971
                        
2d68 : ca                       dex
2d69 : 10f6                     bpl tstz12
2d6b : a204                     ldx #4      ;precharge test area
2d6d : a907                     lda #7
2d6f : 9510             tstz13  sta zpt,x
2d71 : 0a                       asl a
2d72 : ca                       dex
2d73 : 10fa                     bpl tstz13
2d75 : a204                     ldx #4
2d77 :                  tstz16
                                set_a $aa,0
                       >            load_flag 0
2d77 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2d79 : 48              >            pha         ;use stack to load status
2d7a : a9aa            >            lda #$aa     ;precharge accu
2d7c : 28              >            plp
                        
2d7d : 7410                     stz zpt,x
                                tst_a $aa,0
2d7f : 08              >            php         ;save flags
2d80 : 08              >            php
2d81 : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
2d83 : f003            >        beq skip1976
                       >        trap            ;failed not equal (non zero)
2d85 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d88 :                 >skip1976
                       >
2d88 : 68              >            pla         ;load status
                       >            cmp_flag 0
2d89 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2d8b : f003            >        beq skip1979
                       >        trap            ;failed not equal (non zero)
2d8d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d90 :                 >skip1979
                       >
2d90 : 28              >            plp         ;restore status
                        
2d91 : ca                       dex
2d92 : 10e3                     bpl tstz16
2d94 : a204                     ldx #4
2d96 : b510             tstz14  lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
2d98 : f003            >        beq skip1981
                       >        trap            ;failed not equal (non zero)
2d9a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d9d :                 >skip1981
                        
2d9d : ca                       dex
2d9e : 10f6                     bpl tstz14
                                
2da0 : a204                     ldx #4      ;precharge test area
2da2 : a907                     lda #7
2da4 : 9d0502           tstz21  sta abst,x
2da7 : 0a                       asl a
2da8 : ca                       dex
2da9 : 10f9                     bpl tstz21
2dab : a204                     ldx #4
2dad :                  tstz25
                                set_a $55,$ff
                       >            load_flag $ff
2dad : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2daf : 48              >            pha         ;use stack to load status
2db0 : a955            >            lda #$55     ;precharge accu
2db2 : 28              >            plp
                        
2db3 : 9e0502                   stz abst,x     
                                tst_a $55,$ff
2db6 : 08              >            php         ;save flags
2db7 : 08              >            php
2db8 : c955            >            cmp #$55     ;test result
                       >            trap_ne
2dba : f003            >        beq skip1986
                       >        trap            ;failed not equal (non zero)
2dbc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2dbf :                 >skip1986
                       >
2dbf : 68              >            pla         ;load status
                       >            cmp_flag $ff
2dc0 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2dc2 : f003            >        beq skip1989
                       >        trap            ;failed not equal (non zero)
2dc4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2dc7 :                 >skip1989
                       >
2dc7 : 28              >            plp         ;restore status
                        
2dc8 : ca                       dex
2dc9 : 10e2                     bpl tstz25
2dcb : a204                     ldx #4
2dcd : bd0502           tstz22  lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
2dd0 : f003            >        beq skip1991
                       >        trap            ;failed not equal (non zero)
2dd2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2dd5 :                 >skip1991
                        
2dd5 : ca                       dex
2dd6 : 10f5                     bpl tstz22
2dd8 : a204                     ldx #4      ;precharge test area
2dda : a907                     lda #7
2ddc : 9d0502           tstz23  sta abst,x
2ddf : 0a                       asl a
2de0 : ca                       dex
2de1 : 10f9                     bpl tstz23
2de3 : a204                     ldx #4
2de5 :                  tstz26
                                set_a $aa,0
                       >            load_flag 0
2de5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2de7 : 48              >            pha         ;use stack to load status
2de8 : a9aa            >            lda #$aa     ;precharge accu
2dea : 28              >            plp
                        
2deb : 9e0502                   stz abst,x
                                tst_a $aa,0
2dee : 08              >            php         ;save flags
2def : 08              >            php
2df0 : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
2df2 : f003            >        beq skip1996
                       >        trap            ;failed not equal (non zero)
2df4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2df7 :                 >skip1996
                       >
2df7 : 68              >            pla         ;load status
                       >            cmp_flag 0
2df8 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2dfa : f003            >        beq skip1999
                       >        trap            ;failed not equal (non zero)
2dfc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2dff :                 >skip1999
                       >
2dff : 28              >            plp         ;restore status
                        
2e00 : ca                       dex
2e01 : 10e2                     bpl tstz26
2e03 : a204                     ldx #4
2e05 : bd0502           tstz24  lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
2e08 : f003            >        beq skip2001
                       >        trap            ;failed not equal (non zero)
2e0a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e0d :                 >skip2001
                        
2e0d : ca                       dex
2e0e : 10f5                     bpl tstz24
                                
2e10 : c07b                     cpy #123
                                trap_ne     ;y altered during test 
2e12 : f003            >        beq skip2003
                       >        trap            ;failed not equal (non zero)
2e14 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e17 :                 >skip2003
                        
2e17 : ba                       tsx
2e18 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
2e1a : f003            >        beq skip2005
                       >        trap            ;failed not equal (non zero)
2e1c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e1f :                 >skip2005
                        
                                next_test
2e1f : ad0202          >            lda test_case   ;previous test
2e22 : c90d            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2e24 : f003            >        beq skip2008
                       >        trap            ;failed not equal (non zero)
2e26 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e29 :                 >skip2008
                       >
000e =                 >test_num = test_num + 1
2e29 : a90e            >            lda #test_num   ;*** next tests' number
2e2b : 8d0202          >            sta test_case
2e2e : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing BIT - zp,x / abs,x / #
2e31 : a042                     ldy #$42
2e33 : a203                     ldx #3
                                set_a $ff,0
                       >            load_flag 0
2e35 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2e37 : 48              >            pha         ;use stack to load status
2e38 : a9ff            >            lda #$ff     ;precharge accu
2e3a : 28              >            plp
                        
2e3b : 3417                     bit zp1,x   ;00 - should set Z / clear  NV
                                tst_a $ff,fz 
2e3d : 08              >            php         ;save flags
2e3e : 08              >            php
2e3f : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
2e41 : f003            >        beq skip2013
                       >        trap            ;failed not equal (non zero)
2e43 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e46 :                 >skip2013
                       >
2e46 : 68              >            pla         ;load status
                       >            cmp_flag fz 
2e47 : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2e49 : f003            >        beq skip2016
                       >        trap            ;failed not equal (non zero)
2e4b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e4e :                 >skip2016
                       >
2e4e : 28              >            plp         ;restore status
                        
2e4f : ca                       dex
                                set_a 1,0
                       >            load_flag 0
2e50 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2e52 : 48              >            pha         ;use stack to load status
2e53 : a901            >            lda #1     ;precharge accu
2e55 : 28              >            plp
                        
2e56 : 3417                     bit zp1,x   ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
2e58 : 08              >            php         ;save flags
2e59 : 08              >            php
2e5a : c901            >            cmp #1     ;test result
                       >            trap_ne
2e5c : f003            >        beq skip2021
                       >        trap            ;failed not equal (non zero)
2e5e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e61 :                 >skip2021
                       >
2e61 : 68              >            pla         ;load status
                       >            cmp_flag fv
2e62 : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2e64 : f003            >        beq skip2024
                       >        trap            ;failed not equal (non zero)
2e66 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e69 :                 >skip2024
                       >
2e69 : 28              >            plp         ;restore status
                        
2e6a : ca                       dex
                                set_a 1,0
                       >            load_flag 0
2e6b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2e6d : 48              >            pha         ;use stack to load status
2e6e : a901            >            lda #1     ;precharge accu
2e70 : 28              >            plp
                        
2e71 : 3417                     bit zp1,x   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
2e73 : 08              >            php         ;save flags
2e74 : 08              >            php
2e75 : c901            >            cmp #1     ;test result
                       >            trap_ne
2e77 : f003            >        beq skip2029
                       >        trap            ;failed not equal (non zero)
2e79 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e7c :                 >skip2029
                       >
2e7c : 68              >            pla         ;load status
                       >            cmp_flag fnz
2e7d : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2e7f : f003            >        beq skip2032
                       >        trap            ;failed not equal (non zero)
2e81 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e84 :                 >skip2032
                       >
2e84 : 28              >            plp         ;restore status
                        
2e85 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
2e86 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2e88 : 48              >            pha         ;use stack to load status
2e89 : a901            >            lda #1     ;precharge accu
2e8b : 28              >            plp
                        
2e8c : 3417                     bit zp1,x   ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
2e8e : 08              >            php         ;save flags
2e8f : 08              >            php
2e90 : c901            >            cmp #1     ;test result
                       >            trap_ne
2e92 : f003            >        beq skip2037
                       >        trap            ;failed not equal (non zero)
2e94 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e97 :                 >skip2037
                       >
2e97 : 68              >            pla         ;load status
                       >            cmp_flag fnv
2e98 : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2e9a : f003            >        beq skip2040
                       >        trap            ;failed not equal (non zero)
2e9c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e9f :                 >skip2040
                       >
2e9f : 28              >            plp         ;restore status
                        
                                
                                set_a 1,$ff
                       >            load_flag $ff
2ea0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2ea2 : 48              >            pha         ;use stack to load status
2ea3 : a901            >            lda #1     ;precharge accu
2ea5 : 28              >            plp
                        
2ea6 : 3417                     bit zp1,x   ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
2ea8 : 08              >            php         ;save flags
2ea9 : 08              >            php
2eaa : c901            >            cmp #1     ;test result
                       >            trap_ne
2eac : f003            >        beq skip2045
                       >        trap            ;failed not equal (non zero)
2eae : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2eb1 :                 >skip2045
                       >
2eb1 : 68              >            pla         ;load status
                       >            cmp_flag ~fz
2eb2 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2eb4 : f003            >        beq skip2048
                       >        trap            ;failed not equal (non zero)
2eb6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2eb9 :                 >skip2048
                       >
2eb9 : 28              >            plp         ;restore status
                        
2eba : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
2ebb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2ebd : 48              >            pha         ;use stack to load status
2ebe : a901            >            lda #1     ;precharge accu
2ec0 : 28              >            plp
                        
2ec1 : 3417                     bit zp1,x   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
2ec3 : 08              >            php         ;save flags
2ec4 : 08              >            php
2ec5 : c901            >            cmp #1     ;test result
                       >            trap_ne
2ec7 : f003            >        beq skip2053
                       >        trap            ;failed not equal (non zero)
2ec9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ecc :                 >skip2053
                       >
2ecc : 68              >            pla         ;load status
                       >            cmp_flag ~fv
2ecd : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2ecf : f003            >        beq skip2056
                       >        trap            ;failed not equal (non zero)
2ed1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ed4 :                 >skip2056
                       >
2ed4 : 28              >            plp         ;restore status
                        
2ed5 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
2ed6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2ed8 : 48              >            pha         ;use stack to load status
2ed9 : a901            >            lda #1     ;precharge accu
2edb : 28              >            plp
                        
2edc : 3417                     bit zp1,x   ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
2ede : 08              >            php         ;save flags
2edf : 08              >            php
2ee0 : c901            >            cmp #1     ;test result
                       >            trap_ne
2ee2 : f003            >        beq skip2061
                       >        trap            ;failed not equal (non zero)
2ee4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ee7 :                 >skip2061
                       >
2ee7 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
2ee8 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2eea : f003            >        beq skip2064
                       >        trap            ;failed not equal (non zero)
2eec : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2eef :                 >skip2064
                       >
2eef : 28              >            plp         ;restore status
                        
2ef0 : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
2ef1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2ef3 : 48              >            pha         ;use stack to load status
2ef4 : a9ff            >            lda #$ff     ;precharge accu
2ef6 : 28              >            plp
                        
2ef7 : 3417                     bit zp1,x   ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv 
2ef9 : 08              >            php         ;save flags
2efa : 08              >            php
2efb : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
2efd : f003            >        beq skip2069
                       >        trap            ;failed not equal (non zero)
2eff : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f02 :                 >skip2069
                       >
2f02 : 68              >            pla         ;load status
                       >            cmp_flag ~fnv 
2f03 : c93f            >            cmp #(~fnv |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f05 : f003            >        beq skip2072
                       >        trap            ;failed not equal (non zero)
2f07 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f0a :                 >skip2072
                       >
2f0a : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,0
                       >            load_flag 0
2f0b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2f0d : 48              >            pha         ;use stack to load status
2f0e : a9ff            >            lda #$ff     ;precharge accu
2f10 : 28              >            plp
                        
2f11 : 3c0a02                   bit abs1,x  ;00 - should set Z / clear  NV
                                tst_a $ff,fz 
2f14 : 08              >            php         ;save flags
2f15 : 08              >            php
2f16 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
2f18 : f003            >        beq skip2077
                       >        trap            ;failed not equal (non zero)
2f1a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f1d :                 >skip2077
                       >
2f1d : 68              >            pla         ;load status
                       >            cmp_flag fz 
2f1e : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f20 : f003            >        beq skip2080
                       >        trap            ;failed not equal (non zero)
2f22 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f25 :                 >skip2080
                       >
2f25 : 28              >            plp         ;restore status
                        
2f26 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
2f27 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2f29 : 48              >            pha         ;use stack to load status
2f2a : a901            >            lda #1     ;precharge accu
2f2c : 28              >            plp
                        
2f2d : 3c0a02                   bit abs1,x  ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
2f30 : 08              >            php         ;save flags
2f31 : 08              >            php
2f32 : c901            >            cmp #1     ;test result
                       >            trap_ne
2f34 : f003            >        beq skip2085
                       >        trap            ;failed not equal (non zero)
2f36 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f39 :                 >skip2085
                       >
2f39 : 68              >            pla         ;load status
                       >            cmp_flag fv
2f3a : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f3c : f003            >        beq skip2088
                       >        trap            ;failed not equal (non zero)
2f3e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f41 :                 >skip2088
                       >
2f41 : 28              >            plp         ;restore status
                        
2f42 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
2f43 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2f45 : 48              >            pha         ;use stack to load status
2f46 : a901            >            lda #1     ;precharge accu
2f48 : 28              >            plp
                        
2f49 : 3c0a02                   bit abs1,x  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
2f4c : 08              >            php         ;save flags
2f4d : 08              >            php
2f4e : c901            >            cmp #1     ;test result
                       >            trap_ne
2f50 : f003            >        beq skip2093
                       >        trap            ;failed not equal (non zero)
2f52 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f55 :                 >skip2093
                       >
2f55 : 68              >            pla         ;load status
                       >            cmp_flag fnz
2f56 : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f58 : f003            >        beq skip2096
                       >        trap            ;failed not equal (non zero)
2f5a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f5d :                 >skip2096
                       >
2f5d : 28              >            plp         ;restore status
                        
2f5e : ca                       dex
                                set_a 1,0
                       >            load_flag 0
2f5f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2f61 : 48              >            pha         ;use stack to load status
2f62 : a901            >            lda #1     ;precharge accu
2f64 : 28              >            plp
                        
2f65 : 3c0a02                   bit abs1,x  ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
2f68 : 08              >            php         ;save flags
2f69 : 08              >            php
2f6a : c901            >            cmp #1     ;test result
                       >            trap_ne
2f6c : f003            >        beq skip2101
                       >        trap            ;failed not equal (non zero)
2f6e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f71 :                 >skip2101
                       >
2f71 : 68              >            pla         ;load status
                       >            cmp_flag fnv
2f72 : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f74 : f003            >        beq skip2104
                       >        trap            ;failed not equal (non zero)
2f76 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f79 :                 >skip2104
                       >
2f79 : 28              >            plp         ;restore status
                        
                                
                                set_a 1,$ff
                       >            load_flag $ff
2f7a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2f7c : 48              >            pha         ;use stack to load status
2f7d : a901            >            lda #1     ;precharge accu
2f7f : 28              >            plp
                        
2f80 : 3c0a02                   bit abs1,x  ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
2f83 : 08              >            php         ;save flags
2f84 : 08              >            php
2f85 : c901            >            cmp #1     ;test result
                       >            trap_ne
2f87 : f003            >        beq skip2109
                       >        trap            ;failed not equal (non zero)
2f89 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f8c :                 >skip2109
                       >
2f8c : 68              >            pla         ;load status
                       >            cmp_flag ~fz
2f8d : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f8f : f003            >        beq skip2112
                       >        trap            ;failed not equal (non zero)
2f91 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f94 :                 >skip2112
                       >
2f94 : 28              >            plp         ;restore status
                        
2f95 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
2f96 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2f98 : 48              >            pha         ;use stack to load status
2f99 : a901            >            lda #1     ;precharge accu
2f9b : 28              >            plp
                        
2f9c : 3c0a02                   bit abs1,x  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
2f9f : 08              >            php         ;save flags
2fa0 : 08              >            php
2fa1 : c901            >            cmp #1     ;test result
                       >            trap_ne
2fa3 : f003            >        beq skip2117
                       >        trap            ;failed not equal (non zero)
2fa5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2fa8 :                 >skip2117
                       >
2fa8 : 68              >            pla         ;load status
                       >            cmp_flag ~fv
2fa9 : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2fab : f003            >        beq skip2120
                       >        trap            ;failed not equal (non zero)
2fad : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2fb0 :                 >skip2120
                       >
2fb0 : 28              >            plp         ;restore status
                        
2fb1 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
2fb2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2fb4 : 48              >            pha         ;use stack to load status
2fb5 : a901            >            lda #1     ;precharge accu
2fb7 : 28              >            plp
                        
2fb8 : 3c0a02                   bit abs1,x  ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
2fbb : 08              >            php         ;save flags
2fbc : 08              >            php
2fbd : c901            >            cmp #1     ;test result
                       >            trap_ne
2fbf : f003            >        beq skip2125
                       >        trap            ;failed not equal (non zero)
2fc1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2fc4 :                 >skip2125
                       >
2fc4 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
2fc5 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2fc7 : f003            >        beq skip2128
                       >        trap            ;failed not equal (non zero)
2fc9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2fcc :                 >skip2128
                       >
2fcc : 28              >            plp         ;restore status
                        
2fcd : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
2fce : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2fd0 : 48              >            pha         ;use stack to load status
2fd1 : a9ff            >            lda #$ff     ;precharge accu
2fd3 : 28              >            plp
                        
2fd4 : 3c0a02                   bit abs1,x  ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv 
2fd7 : 08              >            php         ;save flags
2fd8 : 08              >            php
2fd9 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
2fdb : f003            >        beq skip2133
                       >        trap            ;failed not equal (non zero)
2fdd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2fe0 :                 >skip2133
                       >
2fe0 : 68              >            pla         ;load status
                       >            cmp_flag ~fnv 
2fe1 : c93f            >            cmp #(~fnv |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2fe3 : f003            >        beq skip2136
                       >        trap            ;failed not equal (non zero)
2fe5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2fe8 :                 >skip2136
                       >
2fe8 : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,0
                       >            load_flag 0
2fe9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2feb : 48              >            pha         ;use stack to load status
2fec : a9ff            >            lda #$ff     ;precharge accu
2fee : 28              >            plp
                        
2fef : 8900                     bit #$00    ;00 - should set Z
                                tst_a $ff,fz 
2ff1 : 08              >            php         ;save flags
2ff2 : 08              >            php
2ff3 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
2ff5 : f003            >        beq skip2141
                       >        trap            ;failed not equal (non zero)
2ff7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ffa :                 >skip2141
                       >
2ffa : 68              >            pla         ;load status
                       >            cmp_flag fz 
2ffb : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2ffd : f003            >        beq skip2144
                       >        trap            ;failed not equal (non zero)
2fff : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3002 :                 >skip2144
                       >
3002 : 28              >            plp         ;restore status
                        
3003 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
3004 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3006 : 48              >            pha         ;use stack to load status
3007 : a901            >            lda #1     ;precharge accu
3009 : 28              >            plp
                        
300a : 8941                     bit #$41    ;41 - should clear Z
                                tst_a 1,0
300c : 08              >            php         ;save flags
300d : 08              >            php
300e : c901            >            cmp #1     ;test result
                       >            trap_ne
3010 : f003            >        beq skip2149
                       >        trap            ;failed not equal (non zero)
3012 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3015 :                 >skip2149
                       >
3015 : 68              >            pla         ;load status
                       >            cmp_flag 0
3016 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3018 : f003            >        beq skip2152
                       >        trap            ;failed not equal (non zero)
301a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
301d :                 >skip2152
                       >
301d : 28              >            plp         ;restore status
                        
                        ; *** DEBUG INFO ***
                        ; if it fails the previous test and your BIT # has set the V flag
                        ; see http://forum.6502.org/viewtopic.php?f=2&t=2241&p=27243#p27239
                        ; why it shouldn't alter N or V flags on a BIT #
301e : ca                       dex
                                set_a 1,0
                       >            load_flag 0
301f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3021 : 48              >            pha         ;use stack to load status
3022 : a901            >            lda #1     ;precharge accu
3024 : 28              >            plp
                        
3025 : 8982                     bit #$82    ;82 - should set Z
                                tst_a 1,fz
3027 : 08              >            php         ;save flags
3028 : 08              >            php
3029 : c901            >            cmp #1     ;test result
                       >            trap_ne
302b : f003            >        beq skip2157
                       >        trap            ;failed not equal (non zero)
302d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3030 :                 >skip2157
                       >
3030 : 68              >            pla         ;load status
                       >            cmp_flag fz
3031 : c932            >            cmp #(fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3033 : f003            >        beq skip2160
                       >        trap            ;failed not equal (non zero)
3035 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3038 :                 >skip2160
                       >
3038 : 28              >            plp         ;restore status
                        
3039 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
303a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
303c : 48              >            pha         ;use stack to load status
303d : a901            >            lda #1     ;precharge accu
303f : 28              >            plp
                        
3040 : 89c3                     bit #$c3    ;c3 - should clear Z
                                tst_a 1,0
3042 : 08              >            php         ;save flags
3043 : 08              >            php
3044 : c901            >            cmp #1     ;test result
                       >            trap_ne
3046 : f003            >        beq skip2165
                       >        trap            ;failed not equal (non zero)
3048 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
304b :                 >skip2165
                       >
304b : 68              >            pla         ;load status
                       >            cmp_flag 0
304c : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
304e : f003            >        beq skip2168
                       >        trap            ;failed not equal (non zero)
3050 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3053 :                 >skip2168
                       >
3053 : 28              >            plp         ;restore status
                        
                                
                                set_a 1,$ff
                       >            load_flag $ff
3054 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3056 : 48              >            pha         ;use stack to load status
3057 : a901            >            lda #1     ;precharge accu
3059 : 28              >            plp
                        
305a : 89c3                     bit #$c3    ;c3 - clear Z
                                tst_a 1,~fz
305c : 08              >            php         ;save flags
305d : 08              >            php
305e : c901            >            cmp #1     ;test result
                       >            trap_ne
3060 : f003            >        beq skip2173
                       >        trap            ;failed not equal (non zero)
3062 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3065 :                 >skip2173
                       >
3065 : 68              >            pla         ;load status
                       >            cmp_flag ~fz
3066 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3068 : f003            >        beq skip2176
                       >        trap            ;failed not equal (non zero)
306a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
306d :                 >skip2176
                       >
306d : 28              >            plp         ;restore status
                        
306e : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
306f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3071 : 48              >            pha         ;use stack to load status
3072 : a901            >            lda #1     ;precharge accu
3074 : 28              >            plp
                        
3075 : 8982                     bit #$82    ;82 - should set Z
                                tst_a 1,$ff
3077 : 08              >            php         ;save flags
3078 : 08              >            php
3079 : c901            >            cmp #1     ;test result
                       >            trap_ne
307b : f003            >        beq skip2181
                       >        trap            ;failed not equal (non zero)
307d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3080 :                 >skip2181
                       >
3080 : 68              >            pla         ;load status
                       >            cmp_flag $ff
3081 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3083 : f003            >        beq skip2184
                       >        trap            ;failed not equal (non zero)
3085 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3088 :                 >skip2184
                       >
3088 : 28              >            plp         ;restore status
                        
3089 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
308a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
308c : 48              >            pha         ;use stack to load status
308d : a901            >            lda #1     ;precharge accu
308f : 28              >            plp
                        
3090 : 8941                     bit #$41    ;41 - should clear Z
                                tst_a 1,~fz
3092 : 08              >            php         ;save flags
3093 : 08              >            php
3094 : c901            >            cmp #1     ;test result
                       >            trap_ne
3096 : f003            >        beq skip2189
                       >        trap            ;failed not equal (non zero)
3098 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
309b :                 >skip2189
                       >
309b : 68              >            pla         ;load status
                       >            cmp_flag ~fz
309c : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
309e : f003            >        beq skip2192
                       >        trap            ;failed not equal (non zero)
30a0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30a3 :                 >skip2192
                       >
30a3 : 28              >            plp         ;restore status
                        
30a4 : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
30a5 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
30a7 : 48              >            pha         ;use stack to load status
30a8 : a9ff            >            lda #$ff     ;precharge accu
30aa : 28              >            plp
                        
30ab : 8900                     bit #$00   ;00 - should set Z
                                tst_a $ff,$ff
30ad : 08              >            php         ;save flags
30ae : 08              >            php
30af : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
30b1 : f003            >        beq skip2197
                       >        trap            ;failed not equal (non zero)
30b3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30b6 :                 >skip2197
                       >
30b6 : 68              >            pla         ;load status
                       >            cmp_flag $ff
30b7 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
30b9 : f003            >        beq skip2200
                       >        trap            ;failed not equal (non zero)
30bb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30be :                 >skip2200
                       >
30be : 28              >            plp         ;restore status
                        
                                
30bf : e003                     cpx #3
                                trap_ne     ;x altered during test
30c1 : f003            >        beq skip2202
                       >        trap            ;failed not equal (non zero)
30c3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30c6 :                 >skip2202
                        
30c6 : c042                     cpy #$42
                                trap_ne     ;y altered during test 
30c8 : f003            >        beq skip2204
                       >        trap            ;failed not equal (non zero)
30ca : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30cd :                 >skip2204
                        
30cd : ba                       tsx
30ce : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
30d0 : f003            >        beq skip2206
                       >        trap            ;failed not equal (non zero)
30d2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30d5 :                 >skip2206
                        
                                next_test
30d5 : ad0202          >            lda test_case   ;previous test
30d8 : c90e            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
30da : f003            >        beq skip2209
                       >        trap            ;failed not equal (non zero)
30dc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30df :                 >skip2209
                       >
000f =                 >test_num = test_num + 1
30df : a90f            >            lda #test_num   ;*** next tests' number
30e1 : 8d0202          >            sta test_case
30e4 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing TRB, TSB - zp / abs
                        
                        trbt    macro       ;\1 = memory, \2 = flags   
                                sty \1
                                load_flag \2
                                pha
                                lda zpt+1
                                plp
                                trb \1
                                php
                                cmp zpt+1
                                trap_ne     ;accu was changed
                                pla
                                pha
                                ora #fz     ;mask Z
                                cmp_flag \2|fz
                                trap_ne     ;flags changed except Z
                                pla
                                and #fz
                                cmp zpt+2
                                trap_ne     ;Z flag invalid
                                lda zpt+3
                                cmp zpt
                                trap_ne     ;altered bits in memory wrong       
                                endm
                        
                        tsbt    macro       ;\1 = memory, \2 = flags   
                                sty \1
                                load_flag \2
                                pha
                                lda zpt+1
                                plp
                                tsb \1
                                php
                                cmp zpt+1
                                trap_ne     ;accu was changed
                                pla
                                pha
                                ora #fz     ;mask Z
                                cmp_flag \2|fz
                                trap_ne     ;flags changed except Z
                                pla
                                and #fz
                                cmp zpt+2
                                trap_ne     ;Z flag invalid
                                lda zpt+4
                                cmp zpt
                                trap_ne     ;altered bits in memory wrong        
                                endm
                        
30e7 : a2c0                     ldx #$c0
30e9 : a000                     ldy #0      ;op1 - memory save
                                ;   zpt     ;op1 - memory modifiable
30eb : 6411                     stz zpt+1   ;op2 - accu
                                ;   zpt+2   ;and flags
                                ;   zpt+3   ;memory after reset
                                ;   zpt+4   ;memory after set
                                
30ed : 98               tbt1    tya
30ee : 2511                     and zpt+1   ;set Z by anding the 2 operands
30f0 : 08                       php
30f1 : 68                       pla
30f2 : 2902                     and #fz     ;mask Z
30f4 : 8512                     sta zpt+2
30f6 : 98                       tya         ;reset op1 bits by op2
30f7 : 49ff                     eor #$ff
30f9 : 0511                     ora zpt+1
30fb : 49ff                     eor #$ff
30fd : 8513                     sta zpt+3
30ff : 98                       tya         ;set op1 bits by op2
3100 : 0511                     ora zpt+1
3102 : 8514                     sta zpt+4
                        
                                trbt zpt,$ff
3104 : 8410            >        sty zpt
                       >        load_flag $ff
3106 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3108 : 48              >        pha
3109 : a511            >        lda zpt+1
310b : 28              >        plp
310c : 1410            >        trb zpt
310e : 08              >        php
310f : c511            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
3111 : f003            >        beq skip2213
                       >        trap            ;failed not equal (non zero)
3113 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3116 :                 >skip2213
                       >
3116 : 68              >        pla
3117 : 48              >        pha
3118 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
311a : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
311c : f003            >        beq skip2216
                       >        trap            ;failed not equal (non zero)
311e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3121 :                 >skip2216
                       >
3121 : 68              >        pla
3122 : 2902            >        and #fz
3124 : c512            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
3126 : f003            >        beq skip2218
                       >        trap            ;failed not equal (non zero)
3128 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
312b :                 >skip2218
                       >
312b : a513            >        lda zpt+3
312d : c510            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
312f : f003            >        beq skip2220
                       >        trap            ;failed not equal (non zero)
3131 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3134 :                 >skip2220
                       >
                        
                                trbt abst,$ff
3134 : 8c0502          >        sty abst
                       >        load_flag $ff
3137 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3139 : 48              >        pha
313a : a511            >        lda zpt+1
313c : 28              >        plp
313d : 1c0502          >        trb abst
3140 : 08              >        php
3141 : c511            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
3143 : f003            >        beq skip2224
                       >        trap            ;failed not equal (non zero)
3145 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3148 :                 >skip2224
                       >
3148 : 68              >        pla
3149 : 48              >        pha
314a : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
314c : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
314e : f003            >        beq skip2227
                       >        trap            ;failed not equal (non zero)
3150 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3153 :                 >skip2227
                       >
3153 : 68              >        pla
3154 : 2902            >        and #fz
3156 : c512            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
3158 : f003            >        beq skip2229
                       >        trap            ;failed not equal (non zero)
315a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
315d :                 >skip2229
                       >
315d : a513            >        lda zpt+3
315f : c510            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
3161 : f003            >        beq skip2231
                       >        trap            ;failed not equal (non zero)
3163 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3166 :                 >skip2231
                       >
                        
                                trbt zpt,0
3166 : 8410            >        sty zpt
                       >        load_flag 0
3168 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
316a : 48              >        pha
316b : a511            >        lda zpt+1
316d : 28              >        plp
316e : 1410            >        trb zpt
3170 : 08              >        php
3171 : c511            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
3173 : f003            >        beq skip2235
                       >        trap            ;failed not equal (non zero)
3175 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3178 :                 >skip2235
                       >
3178 : 68              >        pla
3179 : 48              >        pha
317a : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
317c : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
317e : f003            >        beq skip2238
                       >        trap            ;failed not equal (non zero)
3180 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3183 :                 >skip2238
                       >
3183 : 68              >        pla
3184 : 2902            >        and #fz
3186 : c512            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
3188 : f003            >        beq skip2240
                       >        trap            ;failed not equal (non zero)
318a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
318d :                 >skip2240
                       >
318d : a513            >        lda zpt+3
318f : c510            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
3191 : f003            >        beq skip2242
                       >        trap            ;failed not equal (non zero)
3193 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3196 :                 >skip2242
                       >
                        
                                trbt abst,0
3196 : 8c0502          >        sty abst
                       >        load_flag 0
3199 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
319b : 48              >        pha
319c : a511            >        lda zpt+1
319e : 28              >        plp
319f : 1c0502          >        trb abst
31a2 : 08              >        php
31a3 : c511            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
31a5 : f003            >        beq skip2246
                       >        trap            ;failed not equal (non zero)
31a7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
31aa :                 >skip2246
                       >
31aa : 68              >        pla
31ab : 48              >        pha
31ac : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
31ae : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
31b0 : f003            >        beq skip2249
                       >        trap            ;failed not equal (non zero)
31b2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
31b5 :                 >skip2249
                       >
31b5 : 68              >        pla
31b6 : 2902            >        and #fz
31b8 : c512            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
31ba : f003            >        beq skip2251
                       >        trap            ;failed not equal (non zero)
31bc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
31bf :                 >skip2251
                       >
31bf : a513            >        lda zpt+3
31c1 : c510            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
31c3 : f003            >        beq skip2253
                       >        trap            ;failed not equal (non zero)
31c5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
31c8 :                 >skip2253
                       >
                        
                                tsbt zpt,$ff
31c8 : 8410            >        sty zpt
                       >        load_flag $ff
31ca : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
31cc : 48              >        pha
31cd : a511            >        lda zpt+1
31cf : 28              >        plp
31d0 : 0410            >        tsb zpt
31d2 : 08              >        php
31d3 : c511            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
31d5 : f003            >        beq skip2257
                       >        trap            ;failed not equal (non zero)
31d7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
31da :                 >skip2257
                       >
31da : 68              >        pla
31db : 48              >        pha
31dc : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
31de : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
31e0 : f003            >        beq skip2260
                       >        trap            ;failed not equal (non zero)
31e2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
31e5 :                 >skip2260
                       >
31e5 : 68              >        pla
31e6 : 2902            >        and #fz
31e8 : c512            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
31ea : f003            >        beq skip2262
                       >        trap            ;failed not equal (non zero)
31ec : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
31ef :                 >skip2262
                       >
31ef : a514            >        lda zpt+4
31f1 : c510            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
31f3 : f003            >        beq skip2264
                       >        trap            ;failed not equal (non zero)
31f5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
31f8 :                 >skip2264
                       >
                        
                                tsbt abst,$ff
31f8 : 8c0502          >        sty abst
                       >        load_flag $ff
31fb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
31fd : 48              >        pha
31fe : a511            >        lda zpt+1
3200 : 28              >        plp
3201 : 0c0502          >        tsb abst
3204 : 08              >        php
3205 : c511            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
3207 : f003            >        beq skip2268
                       >        trap            ;failed not equal (non zero)
3209 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
320c :                 >skip2268
                       >
320c : 68              >        pla
320d : 48              >        pha
320e : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
3210 : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
3212 : f003            >        beq skip2271
                       >        trap            ;failed not equal (non zero)
3214 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3217 :                 >skip2271
                       >
3217 : 68              >        pla
3218 : 2902            >        and #fz
321a : c512            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
321c : f003            >        beq skip2273
                       >        trap            ;failed not equal (non zero)
321e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3221 :                 >skip2273
                       >
3221 : a514            >        lda zpt+4
3223 : c510            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
3225 : f003            >        beq skip2275
                       >        trap            ;failed not equal (non zero)
3227 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
322a :                 >skip2275
                       >
                        
                                tsbt zpt,0
322a : 8410            >        sty zpt
                       >        load_flag 0
322c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
322e : 48              >        pha
322f : a511            >        lda zpt+1
3231 : 28              >        plp
3232 : 0410            >        tsb zpt
3234 : 08              >        php
3235 : c511            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
3237 : f003            >        beq skip2279
                       >        trap            ;failed not equal (non zero)
3239 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
323c :                 >skip2279
                       >
323c : 68              >        pla
323d : 48              >        pha
323e : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
3240 : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
3242 : f003            >        beq skip2282
                       >        trap            ;failed not equal (non zero)
3244 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3247 :                 >skip2282
                       >
3247 : 68              >        pla
3248 : 2902            >        and #fz
324a : c512            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
324c : f003            >        beq skip2284
                       >        trap            ;failed not equal (non zero)
324e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3251 :                 >skip2284
                       >
3251 : a514            >        lda zpt+4
3253 : c510            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
3255 : f003            >        beq skip2286
                       >        trap            ;failed not equal (non zero)
3257 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
325a :                 >skip2286
                       >
                        
                                tsbt abst,0
325a : 8c0502          >        sty abst
                       >        load_flag 0
325d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
325f : 48              >        pha
3260 : a511            >        lda zpt+1
3262 : 28              >        plp
3263 : 0c0502          >        tsb abst
3266 : 08              >        php
3267 : c511            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
3269 : f003            >        beq skip2290
                       >        trap            ;failed not equal (non zero)
326b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
326e :                 >skip2290
                       >
326e : 68              >        pla
326f : 48              >        pha
3270 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
3272 : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
3274 : f003            >        beq skip2293
                       >        trap            ;failed not equal (non zero)
3276 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3279 :                 >skip2293
                       >
3279 : 68              >        pla
327a : 2902            >        and #fz
327c : c512            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
327e : f003            >        beq skip2295
                       >        trap            ;failed not equal (non zero)
3280 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3283 :                 >skip2295
                       >
3283 : a514            >        lda zpt+4
3285 : c510            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
3287 : f003            >        beq skip2297
                       >        trap            ;failed not equal (non zero)
3289 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
328c :                 >skip2297
                       >
                        
                                
328c : c8                       iny         ;iterate op1
328d : d004                     bne tbt3
328f : e611                     inc zpt+1   ;iterate op2
3291 : f003                     beq tbt2
3293 : 4ced30           tbt3    jmp tbt1        
3296 :                  tbt2
3296 : e0c0                     cpx #$c0
                                trap_ne     ;x altered during test
3298 : f003            >        beq skip2299
                       >        trap            ;failed not equal (non zero)
329a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
329d :                 >skip2299
                        
329d : ba                       tsx
329e : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
32a0 : f003            >        beq skip2301
                       >        trap            ;failed not equal (non zero)
32a2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32a5 :                 >skip2301
                        
                                next_test    
32a5 : ad0202          >            lda test_case   ;previous test
32a8 : c90f            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
32aa : f003            >        beq skip2304
                       >        trap            ;failed not equal (non zero)
32ac : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32af :                 >skip2304
                       >
0010 =                 >test_num = test_num + 1
32af : a910            >            lda #test_num   ;*** next tests' number
32b1 : 8d0202          >            sta test_case
32b4 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                            if rkwl_wdc_op
                        ; testing RMB, SMB - zp
                        rmbt    macro       ;\1 = bitnum
                                lda #$ff
                                sta zpt
                                set_a $a5,0
                                rmb \1,zpt
                                tst_a $a5,0
                                lda zpt
                                cmp #$ff-(1<<\1)
                                trap_ne     ;wrong bits set or cleared
                                lda #1<<\1
                                sta zpt
                                set_a $5a,$ff
                                rmb \1,zpt
                                tst_a $5a,$ff
                                lda zpt
                                trap_ne     ;wrong bits set or cleared
                                endm
                        smbt    macro       ;\1 = bitnum
                                lda #$ff-(1<<\1)
                                sta zpt
                                set_a $a5,0
                                smb \1,zpt
                                tst_a $a5,0
                                lda zpt
                                cmp #$ff
                                trap_ne     ;wrong bits set or cleared
                                lda #0
                                sta zpt
                                set_a $5a,$ff
                                smb \1,zpt
                                tst_a $5a,$ff
                                lda zpt
                                cmp #1<<\1
                                trap_ne     ;wrong bits set or cleared
                                endm
                        
32b7 : a2ba                     ldx #$ba    ;protect x & y
32b9 : a0d0                     ldy #$d0
                                rmbt 0
32bb : a9ff            >        lda #$ff
32bd : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
32bf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
32c1 : 48              >            pha         ;use stack to load status
32c2 : a9a5            >            lda #$a5     ;precharge accu
32c4 : 28              >            plp
                       >
32c5 : 0710            >        rmb 0,zpt
                       >        tst_a $a5,0
32c7 : 08              >            php         ;save flags
32c8 : 08              >            php
32c9 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
32cb : f003            >        beq skip2310
                       >        trap            ;failed not equal (non zero)
32cd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32d0 :                 >skip2310
                       >
32d0 : 68              >            pla         ;load status
                       >            cmp_flag 0
32d1 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
32d3 : f003            >        beq skip2313
                       >        trap            ;failed not equal (non zero)
32d5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32d8 :                 >skip2313
                       >
32d8 : 28              >            plp         ;restore status
                       >
32d9 : a510            >        lda zpt
32db : c9fe            >        cmp #$ff-(1<<0)
                       >        trap_ne     ;wrong bits set or cleared
32dd : f003            >        beq skip2315
                       >        trap            ;failed not equal (non zero)
32df : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32e2 :                 >skip2315
                       >
32e2 : a901            >        lda #1<<0
32e4 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
32e6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
32e8 : 48              >            pha         ;use stack to load status
32e9 : a95a            >            lda #$5a     ;precharge accu
32eb : 28              >            plp
                       >
32ec : 0710            >        rmb 0,zpt
                       >        tst_a $5a,$ff
32ee : 08              >            php         ;save flags
32ef : 08              >            php
32f0 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
32f2 : f003            >        beq skip2320
                       >        trap            ;failed not equal (non zero)
32f4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32f7 :                 >skip2320
                       >
32f7 : 68              >            pla         ;load status
                       >            cmp_flag $ff
32f8 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
32fa : f003            >        beq skip2323
                       >        trap            ;failed not equal (non zero)
32fc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32ff :                 >skip2323
                       >
32ff : 28              >            plp         ;restore status
                       >
3300 : a510            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
3302 : f003            >        beq skip2325
                       >        trap            ;failed not equal (non zero)
3304 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3307 :                 >skip2325
                       >
                        
                                rmbt 1
3307 : a9ff            >        lda #$ff
3309 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
330b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
330d : 48              >            pha         ;use stack to load status
330e : a9a5            >            lda #$a5     ;precharge accu
3310 : 28              >            plp
                       >
3311 : 1710            >        rmb 1,zpt
                       >        tst_a $a5,0
3313 : 08              >            php         ;save flags
3314 : 08              >            php
3315 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3317 : f003            >        beq skip2331
                       >        trap            ;failed not equal (non zero)
3319 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
331c :                 >skip2331
                       >
331c : 68              >            pla         ;load status
                       >            cmp_flag 0
331d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
331f : f003            >        beq skip2334
                       >        trap            ;failed not equal (non zero)
3321 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3324 :                 >skip2334
                       >
3324 : 28              >            plp         ;restore status
                       >
3325 : a510            >        lda zpt
3327 : c9fd            >        cmp #$ff-(1<<1)
                       >        trap_ne     ;wrong bits set or cleared
3329 : f003            >        beq skip2336
                       >        trap            ;failed not equal (non zero)
332b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
332e :                 >skip2336
                       >
332e : a902            >        lda #1<<1
3330 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3332 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3334 : 48              >            pha         ;use stack to load status
3335 : a95a            >            lda #$5a     ;precharge accu
3337 : 28              >            plp
                       >
3338 : 1710            >        rmb 1,zpt
                       >        tst_a $5a,$ff
333a : 08              >            php         ;save flags
333b : 08              >            php
333c : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
333e : f003            >        beq skip2341
                       >        trap            ;failed not equal (non zero)
3340 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3343 :                 >skip2341
                       >
3343 : 68              >            pla         ;load status
                       >            cmp_flag $ff
3344 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3346 : f003            >        beq skip2344
                       >        trap            ;failed not equal (non zero)
3348 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
334b :                 >skip2344
                       >
334b : 28              >            plp         ;restore status
                       >
334c : a510            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
334e : f003            >        beq skip2346
                       >        trap            ;failed not equal (non zero)
3350 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3353 :                 >skip2346
                       >
                        
                                rmbt 2
3353 : a9ff            >        lda #$ff
3355 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3357 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3359 : 48              >            pha         ;use stack to load status
335a : a9a5            >            lda #$a5     ;precharge accu
335c : 28              >            plp
                       >
335d : 2710            >        rmb 2,zpt
                       >        tst_a $a5,0
335f : 08              >            php         ;save flags
3360 : 08              >            php
3361 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3363 : f003            >        beq skip2352
                       >        trap            ;failed not equal (non zero)
3365 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3368 :                 >skip2352
                       >
3368 : 68              >            pla         ;load status
                       >            cmp_flag 0
3369 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
336b : f003            >        beq skip2355
                       >        trap            ;failed not equal (non zero)
336d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3370 :                 >skip2355
                       >
3370 : 28              >            plp         ;restore status
                       >
3371 : a510            >        lda zpt
3373 : c9fb            >        cmp #$ff-(1<<2)
                       >        trap_ne     ;wrong bits set or cleared
3375 : f003            >        beq skip2357
                       >        trap            ;failed not equal (non zero)
3377 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
337a :                 >skip2357
                       >
337a : a904            >        lda #1<<2
337c : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
337e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3380 : 48              >            pha         ;use stack to load status
3381 : a95a            >            lda #$5a     ;precharge accu
3383 : 28              >            plp
                       >
3384 : 2710            >        rmb 2,zpt
                       >        tst_a $5a,$ff
3386 : 08              >            php         ;save flags
3387 : 08              >            php
3388 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
338a : f003            >        beq skip2362
                       >        trap            ;failed not equal (non zero)
338c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
338f :                 >skip2362
                       >
338f : 68              >            pla         ;load status
                       >            cmp_flag $ff
3390 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3392 : f003            >        beq skip2365
                       >        trap            ;failed not equal (non zero)
3394 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3397 :                 >skip2365
                       >
3397 : 28              >            plp         ;restore status
                       >
3398 : a510            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
339a : f003            >        beq skip2367
                       >        trap            ;failed not equal (non zero)
339c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
339f :                 >skip2367
                       >
                        
                                rmbt 3
339f : a9ff            >        lda #$ff
33a1 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
33a3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
33a5 : 48              >            pha         ;use stack to load status
33a6 : a9a5            >            lda #$a5     ;precharge accu
33a8 : 28              >            plp
                       >
33a9 : 3710            >        rmb 3,zpt
                       >        tst_a $a5,0
33ab : 08              >            php         ;save flags
33ac : 08              >            php
33ad : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
33af : f003            >        beq skip2373
                       >        trap            ;failed not equal (non zero)
33b1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33b4 :                 >skip2373
                       >
33b4 : 68              >            pla         ;load status
                       >            cmp_flag 0
33b5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
33b7 : f003            >        beq skip2376
                       >        trap            ;failed not equal (non zero)
33b9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33bc :                 >skip2376
                       >
33bc : 28              >            plp         ;restore status
                       >
33bd : a510            >        lda zpt
33bf : c9f7            >        cmp #$ff-(1<<3)
                       >        trap_ne     ;wrong bits set or cleared
33c1 : f003            >        beq skip2378
                       >        trap            ;failed not equal (non zero)
33c3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33c6 :                 >skip2378
                       >
33c6 : a908            >        lda #1<<3
33c8 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
33ca : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
33cc : 48              >            pha         ;use stack to load status
33cd : a95a            >            lda #$5a     ;precharge accu
33cf : 28              >            plp
                       >
33d0 : 3710            >        rmb 3,zpt
                       >        tst_a $5a,$ff
33d2 : 08              >            php         ;save flags
33d3 : 08              >            php
33d4 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
33d6 : f003            >        beq skip2383
                       >        trap            ;failed not equal (non zero)
33d8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33db :                 >skip2383
                       >
33db : 68              >            pla         ;load status
                       >            cmp_flag $ff
33dc : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
33de : f003            >        beq skip2386
                       >        trap            ;failed not equal (non zero)
33e0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33e3 :                 >skip2386
                       >
33e3 : 28              >            plp         ;restore status
                       >
33e4 : a510            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
33e6 : f003            >        beq skip2388
                       >        trap            ;failed not equal (non zero)
33e8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33eb :                 >skip2388
                       >
                        
                                rmbt 4
33eb : a9ff            >        lda #$ff
33ed : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
33ef : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
33f1 : 48              >            pha         ;use stack to load status
33f2 : a9a5            >            lda #$a5     ;precharge accu
33f4 : 28              >            plp
                       >
33f5 : 4710            >        rmb 4,zpt
                       >        tst_a $a5,0
33f7 : 08              >            php         ;save flags
33f8 : 08              >            php
33f9 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
33fb : f003            >        beq skip2394
                       >        trap            ;failed not equal (non zero)
33fd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3400 :                 >skip2394
                       >
3400 : 68              >            pla         ;load status
                       >            cmp_flag 0
3401 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3403 : f003            >        beq skip2397
                       >        trap            ;failed not equal (non zero)
3405 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3408 :                 >skip2397
                       >
3408 : 28              >            plp         ;restore status
                       >
3409 : a510            >        lda zpt
340b : c9ef            >        cmp #$ff-(1<<4)
                       >        trap_ne     ;wrong bits set or cleared
340d : f003            >        beq skip2399
                       >        trap            ;failed not equal (non zero)
340f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3412 :                 >skip2399
                       >
3412 : a910            >        lda #1<<4
3414 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3416 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3418 : 48              >            pha         ;use stack to load status
3419 : a95a            >            lda #$5a     ;precharge accu
341b : 28              >            plp
                       >
341c : 4710            >        rmb 4,zpt
                       >        tst_a $5a,$ff
341e : 08              >            php         ;save flags
341f : 08              >            php
3420 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3422 : f003            >        beq skip2404
                       >        trap            ;failed not equal (non zero)
3424 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3427 :                 >skip2404
                       >
3427 : 68              >            pla         ;load status
                       >            cmp_flag $ff
3428 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
342a : f003            >        beq skip2407
                       >        trap            ;failed not equal (non zero)
342c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
342f :                 >skip2407
                       >
342f : 28              >            plp         ;restore status
                       >
3430 : a510            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
3432 : f003            >        beq skip2409
                       >        trap            ;failed not equal (non zero)
3434 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3437 :                 >skip2409
                       >
                        
                                rmbt 5
3437 : a9ff            >        lda #$ff
3439 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
343b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
343d : 48              >            pha         ;use stack to load status
343e : a9a5            >            lda #$a5     ;precharge accu
3440 : 28              >            plp
                       >
3441 : 5710            >        rmb 5,zpt
                       >        tst_a $a5,0
3443 : 08              >            php         ;save flags
3444 : 08              >            php
3445 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3447 : f003            >        beq skip2415
                       >        trap            ;failed not equal (non zero)
3449 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
344c :                 >skip2415
                       >
344c : 68              >            pla         ;load status
                       >            cmp_flag 0
344d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
344f : f003            >        beq skip2418
                       >        trap            ;failed not equal (non zero)
3451 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3454 :                 >skip2418
                       >
3454 : 28              >            plp         ;restore status
                       >
3455 : a510            >        lda zpt
3457 : c9df            >        cmp #$ff-(1<<5)
                       >        trap_ne     ;wrong bits set or cleared
3459 : f003            >        beq skip2420
                       >        trap            ;failed not equal (non zero)
345b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
345e :                 >skip2420
                       >
345e : a920            >        lda #1<<5
3460 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3462 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3464 : 48              >            pha         ;use stack to load status
3465 : a95a            >            lda #$5a     ;precharge accu
3467 : 28              >            plp
                       >
3468 : 5710            >        rmb 5,zpt
                       >        tst_a $5a,$ff
346a : 08              >            php         ;save flags
346b : 08              >            php
346c : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
346e : f003            >        beq skip2425
                       >        trap            ;failed not equal (non zero)
3470 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3473 :                 >skip2425
                       >
3473 : 68              >            pla         ;load status
                       >            cmp_flag $ff
3474 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3476 : f003            >        beq skip2428
                       >        trap            ;failed not equal (non zero)
3478 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
347b :                 >skip2428
                       >
347b : 28              >            plp         ;restore status
                       >
347c : a510            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
347e : f003            >        beq skip2430
                       >        trap            ;failed not equal (non zero)
3480 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3483 :                 >skip2430
                       >
                        
                                rmbt 6
3483 : a9ff            >        lda #$ff
3485 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3487 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3489 : 48              >            pha         ;use stack to load status
348a : a9a5            >            lda #$a5     ;precharge accu
348c : 28              >            plp
                       >
348d : 6710            >        rmb 6,zpt
                       >        tst_a $a5,0
348f : 08              >            php         ;save flags
3490 : 08              >            php
3491 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3493 : f003            >        beq skip2436
                       >        trap            ;failed not equal (non zero)
3495 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3498 :                 >skip2436
                       >
3498 : 68              >            pla         ;load status
                       >            cmp_flag 0
3499 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
349b : f003            >        beq skip2439
                       >        trap            ;failed not equal (non zero)
349d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34a0 :                 >skip2439
                       >
34a0 : 28              >            plp         ;restore status
                       >
34a1 : a510            >        lda zpt
34a3 : c9bf            >        cmp #$ff-(1<<6)
                       >        trap_ne     ;wrong bits set or cleared
34a5 : f003            >        beq skip2441
                       >        trap            ;failed not equal (non zero)
34a7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34aa :                 >skip2441
                       >
34aa : a940            >        lda #1<<6
34ac : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
34ae : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
34b0 : 48              >            pha         ;use stack to load status
34b1 : a95a            >            lda #$5a     ;precharge accu
34b3 : 28              >            plp
                       >
34b4 : 6710            >        rmb 6,zpt
                       >        tst_a $5a,$ff
34b6 : 08              >            php         ;save flags
34b7 : 08              >            php
34b8 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
34ba : f003            >        beq skip2446
                       >        trap            ;failed not equal (non zero)
34bc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34bf :                 >skip2446
                       >
34bf : 68              >            pla         ;load status
                       >            cmp_flag $ff
34c0 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
34c2 : f003            >        beq skip2449
                       >        trap            ;failed not equal (non zero)
34c4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34c7 :                 >skip2449
                       >
34c7 : 28              >            plp         ;restore status
                       >
34c8 : a510            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
34ca : f003            >        beq skip2451
                       >        trap            ;failed not equal (non zero)
34cc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34cf :                 >skip2451
                       >
                        
                                rmbt 7
34cf : a9ff            >        lda #$ff
34d1 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
34d3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
34d5 : 48              >            pha         ;use stack to load status
34d6 : a9a5            >            lda #$a5     ;precharge accu
34d8 : 28              >            plp
                       >
34d9 : 7710            >        rmb 7,zpt
                       >        tst_a $a5,0
34db : 08              >            php         ;save flags
34dc : 08              >            php
34dd : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
34df : f003            >        beq skip2457
                       >        trap            ;failed not equal (non zero)
34e1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34e4 :                 >skip2457
                       >
34e4 : 68              >            pla         ;load status
                       >            cmp_flag 0
34e5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
34e7 : f003            >        beq skip2460
                       >        trap            ;failed not equal (non zero)
34e9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34ec :                 >skip2460
                       >
34ec : 28              >            plp         ;restore status
                       >
34ed : a510            >        lda zpt
34ef : c97f            >        cmp #$ff-(1<<7)
                       >        trap_ne     ;wrong bits set or cleared
34f1 : f003            >        beq skip2462
                       >        trap            ;failed not equal (non zero)
34f3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34f6 :                 >skip2462
                       >
34f6 : a980            >        lda #1<<7
34f8 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
34fa : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
34fc : 48              >            pha         ;use stack to load status
34fd : a95a            >            lda #$5a     ;precharge accu
34ff : 28              >            plp
                       >
3500 : 7710            >        rmb 7,zpt
                       >        tst_a $5a,$ff
3502 : 08              >            php         ;save flags
3503 : 08              >            php
3504 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3506 : f003            >        beq skip2467
                       >        trap            ;failed not equal (non zero)
3508 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
350b :                 >skip2467
                       >
350b : 68              >            pla         ;load status
                       >            cmp_flag $ff
350c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
350e : f003            >        beq skip2470
                       >        trap            ;failed not equal (non zero)
3510 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3513 :                 >skip2470
                       >
3513 : 28              >            plp         ;restore status
                       >
3514 : a510            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
3516 : f003            >        beq skip2472
                       >        trap            ;failed not equal (non zero)
3518 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
351b :                 >skip2472
                       >
                        
                                smbt 0
351b : a9fe            >        lda #$ff-(1<<0)
351d : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
351f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3521 : 48              >            pha         ;use stack to load status
3522 : a9a5            >            lda #$a5     ;precharge accu
3524 : 28              >            plp
                       >
3525 : 8710            >        smb 0,zpt
                       >        tst_a $a5,0
3527 : 08              >            php         ;save flags
3528 : 08              >            php
3529 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
352b : f003            >        beq skip2478
                       >        trap            ;failed not equal (non zero)
352d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3530 :                 >skip2478
                       >
3530 : 68              >            pla         ;load status
                       >            cmp_flag 0
3531 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3533 : f003            >        beq skip2481
                       >        trap            ;failed not equal (non zero)
3535 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3538 :                 >skip2481
                       >
3538 : 28              >            plp         ;restore status
                       >
3539 : a510            >        lda zpt
353b : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
353d : f003            >        beq skip2483
                       >        trap            ;failed not equal (non zero)
353f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3542 :                 >skip2483
                       >
3542 : a900            >        lda #0
3544 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3546 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3548 : 48              >            pha         ;use stack to load status
3549 : a95a            >            lda #$5a     ;precharge accu
354b : 28              >            plp
                       >
354c : 8710            >        smb 0,zpt
                       >        tst_a $5a,$ff
354e : 08              >            php         ;save flags
354f : 08              >            php
3550 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3552 : f003            >        beq skip2488
                       >        trap            ;failed not equal (non zero)
3554 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3557 :                 >skip2488
                       >
3557 : 68              >            pla         ;load status
                       >            cmp_flag $ff
3558 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
355a : f003            >        beq skip2491
                       >        trap            ;failed not equal (non zero)
355c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
355f :                 >skip2491
                       >
355f : 28              >            plp         ;restore status
                       >
3560 : a510            >        lda zpt
3562 : c901            >        cmp #1<<0
                       >        trap_ne     ;wrong bits set or cleared
3564 : f003            >        beq skip2493
                       >        trap            ;failed not equal (non zero)
3566 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3569 :                 >skip2493
                       >
                        
                                smbt 1
3569 : a9fd            >        lda #$ff-(1<<1)
356b : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
356d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
356f : 48              >            pha         ;use stack to load status
3570 : a9a5            >            lda #$a5     ;precharge accu
3572 : 28              >            plp
                       >
3573 : 9710            >        smb 1,zpt
                       >        tst_a $a5,0
3575 : 08              >            php         ;save flags
3576 : 08              >            php
3577 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3579 : f003            >        beq skip2499
                       >        trap            ;failed not equal (non zero)
357b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
357e :                 >skip2499
                       >
357e : 68              >            pla         ;load status
                       >            cmp_flag 0
357f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3581 : f003            >        beq skip2502
                       >        trap            ;failed not equal (non zero)
3583 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3586 :                 >skip2502
                       >
3586 : 28              >            plp         ;restore status
                       >
3587 : a510            >        lda zpt
3589 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
358b : f003            >        beq skip2504
                       >        trap            ;failed not equal (non zero)
358d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3590 :                 >skip2504
                       >
3590 : a900            >        lda #0
3592 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3594 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3596 : 48              >            pha         ;use stack to load status
3597 : a95a            >            lda #$5a     ;precharge accu
3599 : 28              >            plp
                       >
359a : 9710            >        smb 1,zpt
                       >        tst_a $5a,$ff
359c : 08              >            php         ;save flags
359d : 08              >            php
359e : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
35a0 : f003            >        beq skip2509
                       >        trap            ;failed not equal (non zero)
35a2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35a5 :                 >skip2509
                       >
35a5 : 68              >            pla         ;load status
                       >            cmp_flag $ff
35a6 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35a8 : f003            >        beq skip2512
                       >        trap            ;failed not equal (non zero)
35aa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35ad :                 >skip2512
                       >
35ad : 28              >            plp         ;restore status
                       >
35ae : a510            >        lda zpt
35b0 : c902            >        cmp #1<<1
                       >        trap_ne     ;wrong bits set or cleared
35b2 : f003            >        beq skip2514
                       >        trap            ;failed not equal (non zero)
35b4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35b7 :                 >skip2514
                       >
                        
                                smbt 2
35b7 : a9fb            >        lda #$ff-(1<<2)
35b9 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
35bb : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
35bd : 48              >            pha         ;use stack to load status
35be : a9a5            >            lda #$a5     ;precharge accu
35c0 : 28              >            plp
                       >
35c1 : a710            >        smb 2,zpt
                       >        tst_a $a5,0
35c3 : 08              >            php         ;save flags
35c4 : 08              >            php
35c5 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
35c7 : f003            >        beq skip2520
                       >        trap            ;failed not equal (non zero)
35c9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35cc :                 >skip2520
                       >
35cc : 68              >            pla         ;load status
                       >            cmp_flag 0
35cd : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35cf : f003            >        beq skip2523
                       >        trap            ;failed not equal (non zero)
35d1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35d4 :                 >skip2523
                       >
35d4 : 28              >            plp         ;restore status
                       >
35d5 : a510            >        lda zpt
35d7 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
35d9 : f003            >        beq skip2525
                       >        trap            ;failed not equal (non zero)
35db : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35de :                 >skip2525
                       >
35de : a900            >        lda #0
35e0 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
35e2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
35e4 : 48              >            pha         ;use stack to load status
35e5 : a95a            >            lda #$5a     ;precharge accu
35e7 : 28              >            plp
                       >
35e8 : a710            >        smb 2,zpt
                       >        tst_a $5a,$ff
35ea : 08              >            php         ;save flags
35eb : 08              >            php
35ec : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
35ee : f003            >        beq skip2530
                       >        trap            ;failed not equal (non zero)
35f0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35f3 :                 >skip2530
                       >
35f3 : 68              >            pla         ;load status
                       >            cmp_flag $ff
35f4 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35f6 : f003            >        beq skip2533
                       >        trap            ;failed not equal (non zero)
35f8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35fb :                 >skip2533
                       >
35fb : 28              >            plp         ;restore status
                       >
35fc : a510            >        lda zpt
35fe : c904            >        cmp #1<<2
                       >        trap_ne     ;wrong bits set or cleared
3600 : f003            >        beq skip2535
                       >        trap            ;failed not equal (non zero)
3602 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3605 :                 >skip2535
                       >
                        
                                smbt 3
3605 : a9f7            >        lda #$ff-(1<<3)
3607 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3609 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
360b : 48              >            pha         ;use stack to load status
360c : a9a5            >            lda #$a5     ;precharge accu
360e : 28              >            plp
                       >
360f : b710            >        smb 3,zpt
                       >        tst_a $a5,0
3611 : 08              >            php         ;save flags
3612 : 08              >            php
3613 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3615 : f003            >        beq skip2541
                       >        trap            ;failed not equal (non zero)
3617 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
361a :                 >skip2541
                       >
361a : 68              >            pla         ;load status
                       >            cmp_flag 0
361b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
361d : f003            >        beq skip2544
                       >        trap            ;failed not equal (non zero)
361f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3622 :                 >skip2544
                       >
3622 : 28              >            plp         ;restore status
                       >
3623 : a510            >        lda zpt
3625 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
3627 : f003            >        beq skip2546
                       >        trap            ;failed not equal (non zero)
3629 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
362c :                 >skip2546
                       >
362c : a900            >        lda #0
362e : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3630 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3632 : 48              >            pha         ;use stack to load status
3633 : a95a            >            lda #$5a     ;precharge accu
3635 : 28              >            plp
                       >
3636 : b710            >        smb 3,zpt
                       >        tst_a $5a,$ff
3638 : 08              >            php         ;save flags
3639 : 08              >            php
363a : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
363c : f003            >        beq skip2551
                       >        trap            ;failed not equal (non zero)
363e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3641 :                 >skip2551
                       >
3641 : 68              >            pla         ;load status
                       >            cmp_flag $ff
3642 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3644 : f003            >        beq skip2554
                       >        trap            ;failed not equal (non zero)
3646 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3649 :                 >skip2554
                       >
3649 : 28              >            plp         ;restore status
                       >
364a : a510            >        lda zpt
364c : c908            >        cmp #1<<3
                       >        trap_ne     ;wrong bits set or cleared
364e : f003            >        beq skip2556
                       >        trap            ;failed not equal (non zero)
3650 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3653 :                 >skip2556
                       >
                        
                                smbt 4
3653 : a9ef            >        lda #$ff-(1<<4)
3655 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3657 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3659 : 48              >            pha         ;use stack to load status
365a : a9a5            >            lda #$a5     ;precharge accu
365c : 28              >            plp
                       >
365d : c710            >        smb 4,zpt
                       >        tst_a $a5,0
365f : 08              >            php         ;save flags
3660 : 08              >            php
3661 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3663 : f003            >        beq skip2562
                       >        trap            ;failed not equal (non zero)
3665 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3668 :                 >skip2562
                       >
3668 : 68              >            pla         ;load status
                       >            cmp_flag 0
3669 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
366b : f003            >        beq skip2565
                       >        trap            ;failed not equal (non zero)
366d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3670 :                 >skip2565
                       >
3670 : 28              >            plp         ;restore status
                       >
3671 : a510            >        lda zpt
3673 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
3675 : f003            >        beq skip2567
                       >        trap            ;failed not equal (non zero)
3677 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
367a :                 >skip2567
                       >
367a : a900            >        lda #0
367c : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
367e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3680 : 48              >            pha         ;use stack to load status
3681 : a95a            >            lda #$5a     ;precharge accu
3683 : 28              >            plp
                       >
3684 : c710            >        smb 4,zpt
                       >        tst_a $5a,$ff
3686 : 08              >            php         ;save flags
3687 : 08              >            php
3688 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
368a : f003            >        beq skip2572
                       >        trap            ;failed not equal (non zero)
368c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
368f :                 >skip2572
                       >
368f : 68              >            pla         ;load status
                       >            cmp_flag $ff
3690 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3692 : f003            >        beq skip2575
                       >        trap            ;failed not equal (non zero)
3694 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3697 :                 >skip2575
                       >
3697 : 28              >            plp         ;restore status
                       >
3698 : a510            >        lda zpt
369a : c910            >        cmp #1<<4
                       >        trap_ne     ;wrong bits set or cleared
369c : f003            >        beq skip2577
                       >        trap            ;failed not equal (non zero)
369e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36a1 :                 >skip2577
                       >
                        
                                smbt 5
36a1 : a9df            >        lda #$ff-(1<<5)
36a3 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
36a5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
36a7 : 48              >            pha         ;use stack to load status
36a8 : a9a5            >            lda #$a5     ;precharge accu
36aa : 28              >            plp
                       >
36ab : d710            >        smb 5,zpt
                       >        tst_a $a5,0
36ad : 08              >            php         ;save flags
36ae : 08              >            php
36af : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
36b1 : f003            >        beq skip2583
                       >        trap            ;failed not equal (non zero)
36b3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36b6 :                 >skip2583
                       >
36b6 : 68              >            pla         ;load status
                       >            cmp_flag 0
36b7 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36b9 : f003            >        beq skip2586
                       >        trap            ;failed not equal (non zero)
36bb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36be :                 >skip2586
                       >
36be : 28              >            plp         ;restore status
                       >
36bf : a510            >        lda zpt
36c1 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
36c3 : f003            >        beq skip2588
                       >        trap            ;failed not equal (non zero)
36c5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36c8 :                 >skip2588
                       >
36c8 : a900            >        lda #0
36ca : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
36cc : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
36ce : 48              >            pha         ;use stack to load status
36cf : a95a            >            lda #$5a     ;precharge accu
36d1 : 28              >            plp
                       >
36d2 : d710            >        smb 5,zpt
                       >        tst_a $5a,$ff
36d4 : 08              >            php         ;save flags
36d5 : 08              >            php
36d6 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
36d8 : f003            >        beq skip2593
                       >        trap            ;failed not equal (non zero)
36da : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36dd :                 >skip2593
                       >
36dd : 68              >            pla         ;load status
                       >            cmp_flag $ff
36de : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36e0 : f003            >        beq skip2596
                       >        trap            ;failed not equal (non zero)
36e2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36e5 :                 >skip2596
                       >
36e5 : 28              >            plp         ;restore status
                       >
36e6 : a510            >        lda zpt
36e8 : c920            >        cmp #1<<5
                       >        trap_ne     ;wrong bits set or cleared
36ea : f003            >        beq skip2598
                       >        trap            ;failed not equal (non zero)
36ec : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36ef :                 >skip2598
                       >
                        
                                smbt 6
36ef : a9bf            >        lda #$ff-(1<<6)
36f1 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
36f3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
36f5 : 48              >            pha         ;use stack to load status
36f6 : a9a5            >            lda #$a5     ;precharge accu
36f8 : 28              >            plp
                       >
36f9 : e710            >        smb 6,zpt
                       >        tst_a $a5,0
36fb : 08              >            php         ;save flags
36fc : 08              >            php
36fd : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
36ff : f003            >        beq skip2604
                       >        trap            ;failed not equal (non zero)
3701 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3704 :                 >skip2604
                       >
3704 : 68              >            pla         ;load status
                       >            cmp_flag 0
3705 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3707 : f003            >        beq skip2607
                       >        trap            ;failed not equal (non zero)
3709 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
370c :                 >skip2607
                       >
370c : 28              >            plp         ;restore status
                       >
370d : a510            >        lda zpt
370f : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
3711 : f003            >        beq skip2609
                       >        trap            ;failed not equal (non zero)
3713 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3716 :                 >skip2609
                       >
3716 : a900            >        lda #0
3718 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
371a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
371c : 48              >            pha         ;use stack to load status
371d : a95a            >            lda #$5a     ;precharge accu
371f : 28              >            plp
                       >
3720 : e710            >        smb 6,zpt
                       >        tst_a $5a,$ff
3722 : 08              >            php         ;save flags
3723 : 08              >            php
3724 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3726 : f003            >        beq skip2614
                       >        trap            ;failed not equal (non zero)
3728 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
372b :                 >skip2614
                       >
372b : 68              >            pla         ;load status
                       >            cmp_flag $ff
372c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
372e : f003            >        beq skip2617
                       >        trap            ;failed not equal (non zero)
3730 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3733 :                 >skip2617
                       >
3733 : 28              >            plp         ;restore status
                       >
3734 : a510            >        lda zpt
3736 : c940            >        cmp #1<<6
                       >        trap_ne     ;wrong bits set or cleared
3738 : f003            >        beq skip2619
                       >        trap            ;failed not equal (non zero)
373a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
373d :                 >skip2619
                       >
                        
                                smbt 7
373d : a97f            >        lda #$ff-(1<<7)
373f : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3741 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3743 : 48              >            pha         ;use stack to load status
3744 : a9a5            >            lda #$a5     ;precharge accu
3746 : 28              >            plp
                       >
3747 : f710            >        smb 7,zpt
                       >        tst_a $a5,0
3749 : 08              >            php         ;save flags
374a : 08              >            php
374b : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
374d : f003            >        beq skip2625
                       >        trap            ;failed not equal (non zero)
374f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3752 :                 >skip2625
                       >
3752 : 68              >            pla         ;load status
                       >            cmp_flag 0
3753 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3755 : f003            >        beq skip2628
                       >        trap            ;failed not equal (non zero)
3757 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
375a :                 >skip2628
                       >
375a : 28              >            plp         ;restore status
                       >
375b : a510            >        lda zpt
375d : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
375f : f003            >        beq skip2630
                       >        trap            ;failed not equal (non zero)
3761 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3764 :                 >skip2630
                       >
3764 : a900            >        lda #0
3766 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3768 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
376a : 48              >            pha         ;use stack to load status
376b : a95a            >            lda #$5a     ;precharge accu
376d : 28              >            plp
                       >
376e : f710            >        smb 7,zpt
                       >        tst_a $5a,$ff
3770 : 08              >            php         ;save flags
3771 : 08              >            php
3772 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3774 : f003            >        beq skip2635
                       >        trap            ;failed not equal (non zero)
3776 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3779 :                 >skip2635
                       >
3779 : 68              >            pla         ;load status
                       >            cmp_flag $ff
377a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
377c : f003            >        beq skip2638
                       >        trap            ;failed not equal (non zero)
377e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3781 :                 >skip2638
                       >
3781 : 28              >            plp         ;restore status
                       >
3782 : a510            >        lda zpt
3784 : c980            >        cmp #1<<7
                       >        trap_ne     ;wrong bits set or cleared
3786 : f003            >        beq skip2640
                       >        trap            ;failed not equal (non zero)
3788 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
378b :                 >skip2640
                       >
                        
378b : e0ba                     cpx #$ba
                                trap_ne     ;x altered during test
378d : f003            >        beq skip2642
                       >        trap            ;failed not equal (non zero)
378f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3792 :                 >skip2642
                        
3792 : c0d0                     cpy #$d0
                                trap_ne     ;y altered during test
3794 : f003            >        beq skip2644
                       >        trap            ;failed not equal (non zero)
3796 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3799 :                 >skip2644
                        
3799 : ba                       tsx
379a : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
379c : f003            >        beq skip2646
                       >        trap            ;failed not equal (non zero)
379e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37a1 :                 >skip2646
                        
                                next_test
37a1 : ad0202          >            lda test_case   ;previous test
37a4 : c910            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
37a6 : f003            >        beq skip2649
                       >        trap            ;failed not equal (non zero)
37a8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37ab :                 >skip2649
                       >
0011 =                 >test_num = test_num + 1
37ab : a911            >            lda #test_num   ;*** next tests' number
37ad : 8d0202          >            sta test_case
37b0 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                            endif        
                                 
                        ; testing CMP - (zp)         
37b3 : a2de                     ldx #$de    ;protect x & y
37b5 : a0ad                     ldy #$ad
                                set_a $80,0
                       >            load_flag 0
37b7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
37b9 : 48              >            pha         ;use stack to load status
37ba : a980            >            lda #$80     ;precharge accu
37bc : 28              >            plp
                        
37bd : d230                     cmp (ind1+8)
                                tst_a $80,fc
37bf : 08              >            php         ;save flags
37c0 : 08              >            php
37c1 : c980            >            cmp #$80     ;test result
                       >            trap_ne
37c3 : f003            >        beq skip2654
                       >        trap            ;failed not equal (non zero)
37c5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37c8 :                 >skip2654
                       >
37c8 : 68              >            pla         ;load status
                       >            cmp_flag fc
37c9 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
37cb : f003            >        beq skip2657
                       >        trap            ;failed not equal (non zero)
37cd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37d0 :                 >skip2657
                       >
37d0 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
37d1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
37d3 : 48              >            pha         ;use stack to load status
37d4 : a97f            >            lda #$7f     ;precharge accu
37d6 : 28              >            plp
                        
37d7 : d230                     cmp (ind1+8)
                                tst_a $7f,fzc
37d9 : 08              >            php         ;save flags
37da : 08              >            php
37db : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
37dd : f003            >        beq skip2662
                       >        trap            ;failed not equal (non zero)
37df : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37e2 :                 >skip2662
                       >
37e2 : 68              >            pla         ;load status
                       >            cmp_flag fzc
37e3 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
37e5 : f003            >        beq skip2665
                       >        trap            ;failed not equal (non zero)
37e7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37ea :                 >skip2665
                       >
37ea : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
37eb : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
37ed : 48              >            pha         ;use stack to load status
37ee : a97e            >            lda #$7e     ;precharge accu
37f0 : 28              >            plp
                        
37f1 : d230                     cmp (ind1+8)
                                tst_a $7e,fn
37f3 : 08              >            php         ;save flags
37f4 : 08              >            php
37f5 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
37f7 : f003            >        beq skip2670
                       >        trap            ;failed not equal (non zero)
37f9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37fc :                 >skip2670
                       >
37fc : 68              >            pla         ;load status
                       >            cmp_flag fn
37fd : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
37ff : f003            >        beq skip2673
                       >        trap            ;failed not equal (non zero)
3801 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3804 :                 >skip2673
                       >
3804 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
3805 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3807 : 48              >            pha         ;use stack to load status
3808 : a980            >            lda #$80     ;precharge accu
380a : 28              >            plp
                        
380b : d230                     cmp (ind1+8)
                                tst_a $80,~fnz
380d : 08              >            php         ;save flags
380e : 08              >            php
380f : c980            >            cmp #$80     ;test result
                       >            trap_ne
3811 : f003            >        beq skip2678
                       >        trap            ;failed not equal (non zero)
3813 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3816 :                 >skip2678
                       >
3816 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
3817 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3819 : f003            >        beq skip2681
                       >        trap            ;failed not equal (non zero)
381b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
381e :                 >skip2681
                       >
381e : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
381f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3821 : 48              >            pha         ;use stack to load status
3822 : a97f            >            lda #$7f     ;precharge accu
3824 : 28              >            plp
                        
3825 : d230                     cmp (ind1+8)
                                tst_a $7f,~fn
3827 : 08              >            php         ;save flags
3828 : 08              >            php
3829 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
382b : f003            >        beq skip2686
                       >        trap            ;failed not equal (non zero)
382d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3830 :                 >skip2686
                       >
3830 : 68              >            pla         ;load status
                       >            cmp_flag ~fn
3831 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3833 : f003            >        beq skip2689
                       >        trap            ;failed not equal (non zero)
3835 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3838 :                 >skip2689
                       >
3838 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
3839 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
383b : 48              >            pha         ;use stack to load status
383c : a97e            >            lda #$7e     ;precharge accu
383e : 28              >            plp
                        
383f : d230                     cmp (ind1+8)
                                tst_a $7e,~fzc
3841 : 08              >            php         ;save flags
3842 : 08              >            php
3843 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
3845 : f003            >        beq skip2694
                       >        trap            ;failed not equal (non zero)
3847 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
384a :                 >skip2694
                       >
384a : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
384b : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
384d : f003            >        beq skip2697
                       >        trap            ;failed not equal (non zero)
384f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3852 :                 >skip2697
                       >
3852 : 28              >            plp         ;restore status
                        
3853 : e0de                     cpx #$de
                                trap_ne     ;x altered during test
3855 : f003            >        beq skip2699
                       >        trap            ;failed not equal (non zero)
3857 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
385a :                 >skip2699
                        
385a : c0ad                     cpy #$ad
                                trap_ne     ;y altered during test 
385c : f003            >        beq skip2701
                       >        trap            ;failed not equal (non zero)
385e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3861 :                 >skip2701
                        
3861 : ba                       tsx
3862 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
3864 : f003            >        beq skip2703
                       >        trap            ;failed not equal (non zero)
3866 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3869 :                 >skip2703
                        
                                next_test
3869 : ad0202          >            lda test_case   ;previous test
386c : c911            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
386e : f003            >        beq skip2706
                       >        trap            ;failed not equal (non zero)
3870 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3873 :                 >skip2706
                       >
0012 =                 >test_num = test_num + 1
3873 : a912            >            lda #test_num   ;*** next tests' number
3875 : 8d0202          >            sta test_case
3878 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing logical instructions - AND EOR ORA (zp)
387b : a242                     ldx #$42    ;protect x & y
                        
387d : a000                     ldy #0      ;AND
387f : a53e                     lda indAN   ;set indirect address
3881 : 8510                     sta zpt
3883 : a53f                     lda indAN+1
3885 : 8511                     sta zpt+1
3887 :                  tand1
                                set_ay  absANa,0
                       >            load_flag 0
3887 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3889 : 48              >            pha         ;use stack to load status
388a : b94d02          >            lda absANa,y    ;precharge accu
388d : 28              >            plp
                        
388e : 3210                     and (zpt)
                                tst_ay  absrlo,absflo,0
3890 : 08              >            php         ;save flags
3891 : d95502          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3894 : f003            >        beq skip2711
                       >        trap            ;failed not equal (non zero)
3896 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3899 :                 >skip2711
                       >
3899 : 68              >            pla         ;load status
                       >            eor_flag 0
389a : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
389c : d95902          >            cmp absflo,y    ;test flags
                       >            trap_ne
389f : f003            >        beq skip2714
                       >        trap            ;failed not equal (non zero)
38a1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38a4 :                 >skip2714
                       >
                        
38a4 : e610                     inc zpt
38a6 : c8                       iny
38a7 : c004                     cpy #4
38a9 : d0dc                     bne tand1
38ab : 88                       dey
38ac : c610                     dec zpt
38ae :                  tand2
                                set_ay  absANa,$ff
                       >            load_flag $ff
38ae : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
38b0 : 48              >            pha         ;use stack to load status
38b1 : b94d02          >            lda absANa,y    ;precharge accu
38b4 : 28              >            plp
                        
38b5 : 3210                     and (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
38b7 : 08              >            php         ;save flags
38b8 : d95502          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
38bb : f003            >        beq skip2719
                       >        trap            ;failed not equal (non zero)
38bd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38c0 :                 >skip2719
                       >
38c0 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
38c1 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
38c3 : d95902          >            cmp absflo,y    ;test flags
                       >            trap_ne
38c6 : f003            >        beq skip2722
                       >        trap            ;failed not equal (non zero)
38c8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38cb :                 >skip2722
                       >
                        
38cb : c610                     dec zpt
38cd : 88                       dey
38ce : 10de                     bpl tand2
                        
38d0 : a000                     ldy #0      ;EOR
38d2 : a546                     lda indEO   ;set indirect address
38d4 : 8510                     sta zpt
38d6 : a547                     lda indEO+1
38d8 : 8511                     sta zpt+1
38da :                  teor1
                                set_ay  absEOa,0
                       >            load_flag 0
38da : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
38dc : 48              >            pha         ;use stack to load status
38dd : b95102          >            lda absEOa,y    ;precharge accu
38e0 : 28              >            plp
                        
38e1 : 5210                     eor (zpt)
                                tst_ay  absrlo,absflo,0
38e3 : 08              >            php         ;save flags
38e4 : d95502          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
38e7 : f003            >        beq skip2727
                       >        trap            ;failed not equal (non zero)
38e9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38ec :                 >skip2727
                       >
38ec : 68              >            pla         ;load status
                       >            eor_flag 0
38ed : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
38ef : d95902          >            cmp absflo,y    ;test flags
                       >            trap_ne
38f2 : f003            >        beq skip2730
                       >        trap            ;failed not equal (non zero)
38f4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38f7 :                 >skip2730
                       >
                        
38f7 : e610                     inc zpt
38f9 : c8                       iny
38fa : c004                     cpy #4
38fc : d0dc                     bne teor1
38fe : 88                       dey
38ff : c610                     dec zpt
3901 :                  teor2
                                set_ay  absEOa,$ff
                       >            load_flag $ff
3901 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3903 : 48              >            pha         ;use stack to load status
3904 : b95102          >            lda absEOa,y    ;precharge accu
3907 : 28              >            plp
                        
3908 : 5210                     eor (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
390a : 08              >            php         ;save flags
390b : d95502          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
390e : f003            >        beq skip2735
                       >        trap            ;failed not equal (non zero)
3910 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3913 :                 >skip2735
                       >
3913 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3914 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3916 : d95902          >            cmp absflo,y    ;test flags
                       >            trap_ne
3919 : f003            >        beq skip2738
                       >        trap            ;failed not equal (non zero)
391b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
391e :                 >skip2738
                       >
                        
391e : c610                     dec zpt
3920 : 88                       dey
3921 : 10de                     bpl teor2
                        
3923 : a000                     ldy #0      ;ORA
3925 : a54e                     lda indOR   ;set indirect address
3927 : 8510                     sta zpt
3929 : a54f                     lda indOR+1
392b : 8511                     sta zpt+1
392d :                  tora1
                                set_ay  absORa,0
                       >            load_flag 0
392d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
392f : 48              >            pha         ;use stack to load status
3930 : b94902          >            lda absORa,y    ;precharge accu
3933 : 28              >            plp
                        
3934 : 1210                     ora (zpt)
                                tst_ay  absrlo,absflo,0
3936 : 08              >            php         ;save flags
3937 : d95502          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
393a : f003            >        beq skip2743
                       >        trap            ;failed not equal (non zero)
393c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
393f :                 >skip2743
                       >
393f : 68              >            pla         ;load status
                       >            eor_flag 0
3940 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3942 : d95902          >            cmp absflo,y    ;test flags
                       >            trap_ne
3945 : f003            >        beq skip2746
                       >        trap            ;failed not equal (non zero)
3947 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
394a :                 >skip2746
                       >
                        
394a : e610                     inc zpt
394c : c8                       iny
394d : c004                     cpy #4
394f : d0dc                     bne tora1
3951 : 88                       dey
3952 : c610                     dec zpt
3954 :                  tora2
                                set_ay  absORa,$ff
                       >            load_flag $ff
3954 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3956 : 48              >            pha         ;use stack to load status
3957 : b94902          >            lda absORa,y    ;precharge accu
395a : 28              >            plp
                        
395b : 1210                     ora (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
395d : 08              >            php         ;save flags
395e : d95502          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3961 : f003            >        beq skip2751
                       >        trap            ;failed not equal (non zero)
3963 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3966 :                 >skip2751
                       >
3966 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3967 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3969 : d95902          >            cmp absflo,y    ;test flags
                       >            trap_ne
396c : f003            >        beq skip2754
                       >        trap            ;failed not equal (non zero)
396e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3971 :                 >skip2754
                       >
                        
3971 : c610                     dec zpt
3973 : 88                       dey
3974 : 10de                     bpl tora2
                        
3976 : e042                     cpx #$42
                                trap_ne     ;x altered during test
3978 : f003            >        beq skip2756
                       >        trap            ;failed not equal (non zero)
397a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
397d :                 >skip2756
                        
397d : ba                       tsx
397e : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
3980 : f003            >        beq skip2758
                       >        trap            ;failed not equal (non zero)
3982 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3985 :                 >skip2758
                        
                                next_test
3985 : ad0202          >            lda test_case   ;previous test
3988 : c912            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
398a : f003            >        beq skip2761
                       >        trap            ;failed not equal (non zero)
398c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
398f :                 >skip2761
                       >
0013 =                 >test_num = test_num + 1
398f : a913            >            lda #test_num   ;*** next tests' number
3991 : 8d0202          >            sta test_case
3994 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                            if I_flag = 3
3997 : 58                       cli
                            endif                
                        
                        ; full binary add/subtract test - (zp) only
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
3998 : d8                       cld
3999 : a212                     ldx #ad2        ;for indexed test
399b : a0ff                     ldy #$ff        ;max range
399d : a900                     lda #0          ;start with adding zeroes & no carry
399f : 8510                     sta adfc        ;carry in - for diag
39a1 : 8511                     sta ad1         ;operand 1 - accumulator
39a3 : 8512                     sta ad2         ;operand 2 - memory or immediate
39a5 : 8d0502                   sta ada2        ;non zp
39a8 : 8513                     sta adrl        ;expected result bits 0-7
39aa : 8514                     sta adrh        ;expected result bit 8 (carry out)
39ac : a9ff                     lda #$ff        ;complemented operand 2 for subtract
39ae : 8516                     sta sb2
39b0 : 8d0602                   sta sba2        ;non zp
39b3 : a902                     lda #2          ;expected Z-flag
39b5 : 8515                     sta adrf
39b7 : 18               tadd    clc             ;test with carry clear
39b8 : 20b13c                   jsr chkadd
39bb : e610                     inc adfc        ;now with carry
39bd : e613                     inc adrl        ;result +1
39bf : 08                       php             ;save N & Z from low result
39c0 : 08                       php
39c1 : 68                       pla             ;accu holds expected flags
39c2 : 2982                     and #$82        ;mask N & Z
39c4 : 28                       plp
39c5 : d002                     bne tadd1
39c7 : e614                     inc adrh        ;result bit 8 - carry
39c9 : 0514             tadd1   ora adrh        ;merge C to expected flags
39cb : 8515                     sta adrf        ;save expected flags except overflow
39cd : 38                       sec             ;test with carry set
39ce : 20b13c                   jsr chkadd
39d1 : c610                     dec adfc        ;same for operand +1 but no carry
39d3 : e611                     inc ad1
39d5 : d0e0                     bne tadd        ;iterate op1
39d7 : a900                     lda #0          ;preset result to op2 when op1 = 0
39d9 : 8514                     sta adrh
39db : ee0502                   inc ada2
39de : e612                     inc ad2
39e0 : 08                       php             ;save NZ as operand 2 becomes the new result
39e1 : 68                       pla
39e2 : 2982                     and #$82        ;mask N00000Z0
39e4 : 8515                     sta adrf        ;no need to check carry as we are adding to 0
39e6 : c616                     dec sb2         ;complement subtract operand 2
39e8 : ce0602                   dec sba2
39eb : a512                     lda ad2         
39ed : 8513                     sta adrl
39ef : d0c6                     bne tadd        ;iterate op2
                        
39f1 : e012                     cpx #ad2
                                trap_ne         ;x altered during test
39f3 : f003            >        beq skip2763
                       >        trap            ;failed not equal (non zero)
39f5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
39f8 :                 >skip2763
                        
39f8 : c0ff                     cpy #$ff
                                trap_ne         ;y altered during test 
39fa : f003            >        beq skip2765
                       >        trap            ;failed not equal (non zero)
39fc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
39ff :                 >skip2765
                        
39ff : ba                       tsx
3a00 : e0ff                     cpx #$ff
                                trap_ne         ;sp push/pop mismatch
3a02 : f003            >        beq skip2767
                       >        trap            ;failed not equal (non zero)
3a04 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a07 :                 >skip2767
                        
                                next_test
3a07 : ad0202          >            lda test_case   ;previous test
3a0a : c913            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3a0c : f003            >        beq skip2770
                       >        trap            ;failed not equal (non zero)
3a0e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a11 :                 >skip2770
                       >
0014 =                 >test_num = test_num + 1
3a11 : a914            >            lda #test_num   ;*** next tests' number
3a13 : 8d0202          >            sta test_case
3a16 : 8d03ef          >            sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, the V flag is ignored
                        ;   although V is declared as beeing valid on the 65C02 it has absolutely
                        ;   no use in BCD math. No sign = no overflow!
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
3a19 : f8                       sed 
3a1a : a212                     ldx #ad2        ;for indexed test
3a1c : a0ff                     ldy #$ff        ;max range
3a1e : a999                     lda #$99        ;start with adding 99 to 99 with carry
3a20 : 8511                     sta ad1         ;operand 1 - accumulator
3a22 : 8512                     sta ad2         ;operand 2 - memory or immediate
3a24 : 8d0502                   sta ada2        ;non zp
3a27 : 8513                     sta adrl        ;expected result bits 0-7
3a29 : a901                     lda #1          ;set carry in & out
3a2b : 8510                     sta adfc        ;carry in - for diag
3a2d : 8514                     sta adrh        ;expected result bit 8 (carry out)
3a2f : a981                     lda #$81        ;set N & C (99 + 99 + C = 99 + C)
3a31 : 8515                     sta adrf
3a33 : a900                     lda #0          ;complemented operand 2 for subtract
3a35 : 8516                     sta sb2
3a37 : 8d0602                   sta sba2        ;non zp
3a3a : 38               tdad    sec             ;test with carry set
3a3b : 20f03a                   jsr chkdad
3a3e : c610                     dec adfc        ;now with carry clear
3a40 : a513                     lda adrl        ;decimal adjust result
3a42 : d008                     bne tdad1       ;skip clear carry & preset result 99 (9A-1)
3a44 : c614                     dec adrh
3a46 : a999                     lda #$99
3a48 : 8513                     sta adrl
3a4a : d012                     bne tdad3
3a4c : 290f             tdad1   and #$f         ;lower nibble mask
3a4e : d00c                     bne tdad2       ;no decimal adjust needed
3a50 : c613                     dec adrl        ;decimal adjust (?0-6)
3a52 : c613                     dec adrl
3a54 : c613                     dec adrl
3a56 : c613                     dec adrl
3a58 : c613                     dec adrl
3a5a : c613                     dec adrl
3a5c : c613             tdad2   dec adrl        ;result -1
3a5e : 08               tdad3   php             ;save valid flags
3a5f : 68                       pla
3a60 : 2982                     and #$82        ;N-----Z-
3a62 : 0514                     ora adrh        ;N-----ZC
3a64 : 8515                     sta adrf
3a66 : 18                       clc             ;test with carry clear
3a67 : 20f03a                   jsr chkdad
3a6a : e610                     inc adfc        ;same for operand -1 but with carry
3a6c : a511                     lda ad1         ;decimal adjust operand 1
3a6e : f015                     beq tdad5       ;iterate operand 2
3a70 : 290f                     and #$f         ;lower nibble mask
3a72 : d00c                     bne tdad4       ;skip decimal adjust
3a74 : c611                     dec ad1         ;decimal adjust (?0-6)
3a76 : c611                     dec ad1
3a78 : c611                     dec ad1
3a7a : c611                     dec ad1
3a7c : c611                     dec ad1
3a7e : c611                     dec ad1
3a80 : c611             tdad4   dec ad1         ;operand 1 -1
3a82 : 4c3a3a                   jmp tdad        ;iterate op1
                        
3a85 : a999             tdad5   lda #$99        ;precharge op1 max
3a87 : 8511                     sta ad1
3a89 : a512                     lda ad2         ;decimal adjust operand 2
3a8b : f039                     beq tdad7       ;end of iteration
3a8d : 290f                     and #$f         ;lower nibble mask
3a8f : d018                     bne tdad6       ;skip decimal adjust
3a91 : c612                     dec ad2         ;decimal adjust (?0-6)
3a93 : c612                     dec ad2
3a95 : c612                     dec ad2
3a97 : c612                     dec ad2
3a99 : c612                     dec ad2
3a9b : c612                     dec ad2
3a9d : e616                     inc sb2         ;complemented decimal adjust for subtract (?9+6)
3a9f : e616                     inc sb2
3aa1 : e616                     inc sb2
3aa3 : e616                     inc sb2
3aa5 : e616                     inc sb2
3aa7 : e616                     inc sb2
3aa9 : c612             tdad6   dec ad2         ;operand 2 -1
3aab : e616                     inc sb2         ;complemented operand for subtract
3aad : a516                     lda sb2
3aaf : 8d0602                   sta sba2        ;copy as non zp operand
3ab2 : a512                     lda ad2
3ab4 : 8d0502                   sta ada2        ;copy as non zp operand
3ab7 : 8513                     sta adrl        ;new result since op1+carry=00+carry +op2=op2
3ab9 : 08                       php             ;save flags
3aba : 68                       pla
3abb : 2982                     and #$82        ;N-----Z-
3abd : 0901                     ora #1          ;N-----ZC
3abf : 8515                     sta adrf
3ac1 : e614                     inc adrh        ;result carry
3ac3 : 4c3a3a                   jmp tdad        ;iterate op2
                        
3ac6 : e012             tdad7   cpx #ad2
                                trap_ne         ;x altered during test
3ac8 : f003            >        beq skip2772
                       >        trap            ;failed not equal (non zero)
3aca : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3acd :                 >skip2772
                        
3acd : c0ff                     cpy #$ff
                                trap_ne         ;y altered during test 
3acf : f003            >        beq skip2774
                       >        trap            ;failed not equal (non zero)
3ad1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ad4 :                 >skip2774
                        
3ad4 : ba                       tsx
3ad5 : e0ff                     cpx #$ff
                                trap_ne         ;sp push/pop mismatch
3ad7 : f003            >        beq skip2776
                       >        trap            ;failed not equal (non zero)
3ad9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3adc :                 >skip2776
                        
3adc : d8                       cld
                        
3add : ad0202                   lda test_case
3ae0 : c914                     cmp #test_num
                                trap_ne         ;previous test is out of sequence
3ae2 : f003            >        beq skip2778
                       >        trap            ;failed not equal (non zero)
3ae4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ae7 :                 >skip2778
                        
3ae7 : a9f0                     lda #$f0        ;mark opcode testing complete
3ae9 : 8d0202                   sta test_case
                        
                        ; final RAM integrity test
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                                check_ram
                       >            ;RAM check disabled - RAM size not set
                        
                        ; *** DEBUG INFO ***
                        ; to debug checksum errors uncomment check_ram in the next_test macro to 
                        ; narrow down the responsible opcode.
                        ; may give false errors when monitor, OS or other background activity is
                        ; allowed during previous tests.
                        
                        
                        ; S U C C E S S ************************************************       
                        ; -------------       
                                success         ;if you get here everything went well
3aec : db              >        db $db
                       >        ;jsr report_success
                        
                        ; -------------       
                        ; S U C C E S S ************************************************       
3aed : 4c0010                   jmp start       ;run again      
                        
                        ; core subroutine of the decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, V flag is ignored
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
3af0 :                  chkdad
                        ; decimal ADC / SBC zp
3af0 : 08                       php             ;save carry for subtract
3af1 : a511                     lda ad1
3af3 : 6512                     adc ad2         ;perform add
3af5 : 08                       php          
3af6 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3af8 : f003            >        beq skip2782
                       >        trap            ;failed not equal (non zero)
3afa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3afd :                 >skip2782
                        
3afd : 68                       pla             ;check flags
3afe : 2983                     and #$83        ;mask N-----ZC
3b00 : c515                     cmp adrf
                                trap_ne         ;bad flags
3b02 : f003            >        beq skip2784
                       >        trap            ;failed not equal (non zero)
3b04 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b07 :                 >skip2784
                        
3b07 : 28                       plp
3b08 : 08                       php             ;save carry for next add
3b09 : a511                     lda ad1
3b0b : e516                     sbc sb2         ;perform subtract
3b0d : 08                       php          
3b0e : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3b10 : f003            >        beq skip2786
                       >        trap            ;failed not equal (non zero)
3b12 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b15 :                 >skip2786
                        
3b15 : 68                       pla             ;check flags
3b16 : 2983                     and #$83        ;mask N-----ZC
3b18 : c515                     cmp adrf
                                trap_ne         ;bad flags
3b1a : f003            >        beq skip2788
                       >        trap            ;failed not equal (non zero)
3b1c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b1f :                 >skip2788
                        
3b1f : 28                       plp
                        ; decimal ADC / SBC abs
3b20 : 08                       php             ;save carry for subtract
3b21 : a511                     lda ad1
3b23 : 6d0502                   adc ada2        ;perform add
3b26 : 08                       php          
3b27 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3b29 : f003            >        beq skip2790
                       >        trap            ;failed not equal (non zero)
3b2b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b2e :                 >skip2790
                        
3b2e : 68                       pla             ;check flags
3b2f : 2983                     and #$83        ;mask N-----ZC
3b31 : c515                     cmp adrf
                                trap_ne         ;bad flags
3b33 : f003            >        beq skip2792
                       >        trap            ;failed not equal (non zero)
3b35 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b38 :                 >skip2792
                        
3b38 : 28                       plp
3b39 : 08                       php             ;save carry for next add
3b3a : a511                     lda ad1
3b3c : ed0602                   sbc sba2        ;perform subtract
3b3f : 08                       php          
3b40 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3b42 : f003            >        beq skip2794
                       >        trap            ;failed not equal (non zero)
3b44 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b47 :                 >skip2794
                        
3b47 : 68                       pla             ;check flags
3b48 : 2983                     and #$83        ;mask N-----ZC
3b4a : c515                     cmp adrf
                                trap_ne         ;bad flags
3b4c : f003            >        beq skip2796
                       >        trap            ;failed not equal (non zero)
3b4e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b51 :                 >skip2796
                        
3b51 : 28                       plp
                        ; decimal ADC / SBC #
3b52 : 08                       php             ;save carry for subtract
3b53 : a512                     lda ad2
3b55 : 8d5b3b                   sta chkdadi     ;self modify immediate
3b58 : a511                     lda ad1
3b5b =                  chkdadi = * + 1         ;operand of the immediate ADC
3b5a : 6900                     adc #0          ;perform add
3b5c : 08                       php          
3b5d : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3b5f : f003            >        beq skip2798
                       >        trap            ;failed not equal (non zero)
3b61 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b64 :                 >skip2798
                        
3b64 : 68                       pla             ;check flags
3b65 : 2983                     and #$83        ;mask N-----ZC
3b67 : c515                     cmp adrf
                                trap_ne         ;bad flags
3b69 : f003            >        beq skip2800
                       >        trap            ;failed not equal (non zero)
3b6b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b6e :                 >skip2800
                        
3b6e : 28                       plp
3b6f : 08                       php             ;save carry for next add
3b70 : a516                     lda sb2
3b72 : 8d783b                   sta chkdsbi     ;self modify immediate
3b75 : a511                     lda ad1
3b78 =                  chkdsbi = * + 1         ;operand of the immediate SBC
3b77 : e900                     sbc #0          ;perform subtract
3b79 : 08                       php          
3b7a : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3b7c : f003            >        beq skip2802
                       >        trap            ;failed not equal (non zero)
3b7e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b81 :                 >skip2802
                        
3b81 : 68                       pla             ;check flags
3b82 : 2983                     and #$83        ;mask N-----ZC
3b84 : c515                     cmp adrf
                                trap_ne         ;bad flags
3b86 : f003            >        beq skip2804
                       >        trap            ;failed not equal (non zero)
3b88 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b8b :                 >skip2804
                        
3b8b : 28                       plp
                        ; decimal ADC / SBC zp,x
3b8c : 08                       php             ;save carry for subtract
3b8d : a511                     lda ad1
3b8f : 7500                     adc 0,x         ;perform add
3b91 : 08                       php          
3b92 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3b94 : f003            >        beq skip2806
                       >        trap            ;failed not equal (non zero)
3b96 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b99 :                 >skip2806
                        
3b99 : 68                       pla             ;check flags
3b9a : 2983                     and #$83        ;mask N-----ZC
3b9c : c515                     cmp adrf
                                trap_ne         ;bad flags
3b9e : f003            >        beq skip2808
                       >        trap            ;failed not equal (non zero)
3ba0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ba3 :                 >skip2808
                        
3ba3 : 28                       plp
3ba4 : 08                       php             ;save carry for next add
3ba5 : a511                     lda ad1
3ba7 : f504                     sbc sb2-ad2,x   ;perform subtract
3ba9 : 08                       php          
3baa : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3bac : f003            >        beq skip2810
                       >        trap            ;failed not equal (non zero)
3bae : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3bb1 :                 >skip2810
                        
3bb1 : 68                       pla             ;check flags
3bb2 : 2983                     and #$83        ;mask N-----ZC
3bb4 : c515                     cmp adrf
                                trap_ne         ;bad flags
3bb6 : f003            >        beq skip2812
                       >        trap            ;failed not equal (non zero)
3bb8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3bbb :                 >skip2812
                        
3bbb : 28                       plp
                        ; decimal ADC / SBC abs,x
3bbc : 08                       php             ;save carry for subtract
3bbd : a511                     lda ad1
3bbf : 7df301                   adc ada2-ad2,x  ;perform add
3bc2 : 08                       php          
3bc3 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3bc5 : f003            >        beq skip2814
                       >        trap            ;failed not equal (non zero)
3bc7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3bca :                 >skip2814
                        
3bca : 68                       pla             ;check flags
3bcb : 2983                     and #$83        ;mask N-----ZC
3bcd : c515                     cmp adrf
                                trap_ne         ;bad flags
3bcf : f003            >        beq skip2816
                       >        trap            ;failed not equal (non zero)
3bd1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3bd4 :                 >skip2816
                        
3bd4 : 28                       plp
3bd5 : 08                       php             ;save carry for next add
3bd6 : a511                     lda ad1
3bd8 : fdf401                   sbc sba2-ad2,x  ;perform subtract
3bdb : 08                       php          
3bdc : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3bde : f003            >        beq skip2818
                       >        trap            ;failed not equal (non zero)
3be0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3be3 :                 >skip2818
                        
3be3 : 68                       pla             ;check flags
3be4 : 2983                     and #$83        ;mask N-----ZC
3be6 : c515                     cmp adrf
                                trap_ne         ;bad flags
3be8 : f003            >        beq skip2820
                       >        trap            ;failed not equal (non zero)
3bea : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3bed :                 >skip2820
                        
3bed : 28                       plp
                        ; decimal ADC / SBC abs,y
3bee : 08                       php             ;save carry for subtract
3bef : a511                     lda ad1
3bf1 : 790601                   adc ada2-$ff,y  ;perform add
3bf4 : 08                       php          
3bf5 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3bf7 : f003            >        beq skip2822
                       >        trap            ;failed not equal (non zero)
3bf9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3bfc :                 >skip2822
                        
3bfc : 68                       pla             ;check flags
3bfd : 2983                     and #$83        ;mask N-----ZC
3bff : c515                     cmp adrf
                                trap_ne         ;bad flags
3c01 : f003            >        beq skip2824
                       >        trap            ;failed not equal (non zero)
3c03 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c06 :                 >skip2824
                        
3c06 : 28                       plp
3c07 : 08                       php             ;save carry for next add
3c08 : a511                     lda ad1
3c0a : f90701                   sbc sba2-$ff,y  ;perform subtract
3c0d : 08                       php          
3c0e : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3c10 : f003            >        beq skip2826
                       >        trap            ;failed not equal (non zero)
3c12 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c15 :                 >skip2826
                        
3c15 : 68                       pla             ;check flags
3c16 : 2983                     and #$83        ;mask N-----ZC
3c18 : c515                     cmp adrf
                                trap_ne         ;bad flags
3c1a : f003            >        beq skip2828
                       >        trap            ;failed not equal (non zero)
3c1c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c1f :                 >skip2828
                        
3c1f : 28                       plp
                        ; decimal ADC / SBC (zp,x)
3c20 : 08                       php             ;save carry for subtract
3c21 : a511                     lda ad1
3c23 : 6144                     adc (lo adi2-ad2,x) ;perform add
3c25 : 08                       php          
3c26 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3c28 : f003            >        beq skip2830
                       >        trap            ;failed not equal (non zero)
3c2a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c2d :                 >skip2830
                        
3c2d : 68                       pla             ;check flags
3c2e : 2983                     and #$83        ;mask N-----ZC
3c30 : c515                     cmp adrf
                                trap_ne         ;bad flags
3c32 : f003            >        beq skip2832
                       >        trap            ;failed not equal (non zero)
3c34 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c37 :                 >skip2832
                        
3c37 : 28                       plp
3c38 : 08                       php             ;save carry for next add
3c39 : a511                     lda ad1
3c3b : e146                     sbc (lo sbi2-ad2,x) ;perform subtract
3c3d : 08                       php          
3c3e : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3c40 : f003            >        beq skip2834
                       >        trap            ;failed not equal (non zero)
3c42 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c45 :                 >skip2834
                        
3c45 : 68                       pla             ;check flags
3c46 : 2983                     and #$83        ;mask N-----ZC
3c48 : c515                     cmp adrf
                                trap_ne         ;bad flags
3c4a : f003            >        beq skip2836
                       >        trap            ;failed not equal (non zero)
3c4c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c4f :                 >skip2836
                        
3c4f : 28                       plp
                        ; decimal ADC / SBC (abs),y
3c50 : 08                       php             ;save carry for subtract
3c51 : a511                     lda ad1
3c53 : 715a                     adc (adiy2),y   ;perform add
3c55 : 08                       php          
3c56 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3c58 : f003            >        beq skip2838
                       >        trap            ;failed not equal (non zero)
3c5a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c5d :                 >skip2838
                        
3c5d : 68                       pla             ;check flags
3c5e : 2983                     and #$83        ;mask N-----ZC
3c60 : c515                     cmp adrf
                                trap_ne         ;bad flags
3c62 : f003            >        beq skip2840
                       >        trap            ;failed not equal (non zero)
3c64 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c67 :                 >skip2840
                        
3c67 : 28                       plp
3c68 : 08                       php             ;save carry for next add
3c69 : a511                     lda ad1
3c6b : f15c                     sbc (sbiy2),y   ;perform subtract
3c6d : 08                       php          
3c6e : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3c70 : f003            >        beq skip2842
                       >        trap            ;failed not equal (non zero)
3c72 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c75 :                 >skip2842
                        
3c75 : 68                       pla             ;check flags
3c76 : 2983                     and #$83        ;mask N-----ZC
3c78 : c515                     cmp adrf
                                trap_ne         ;bad flags
3c7a : f003            >        beq skip2844
                       >        trap            ;failed not equal (non zero)
3c7c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c7f :                 >skip2844
                        
3c7f : 28                       plp
                        ; decimal ADC / SBC (zp)
3c80 : 08                       php             ;save carry for subtract
3c81 : a511                     lda ad1
3c83 : 7256                     adc (adi2)      ;perform add
3c85 : 08                       php          
3c86 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3c88 : f003            >        beq skip2846
                       >        trap            ;failed not equal (non zero)
3c8a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c8d :                 >skip2846
                        
3c8d : 68                       pla             ;check flags
3c8e : 2983                     and #$83        ;mask N-----ZC
3c90 : c515                     cmp adrf
                                trap_ne         ;bad flags
3c92 : f003            >        beq skip2848
                       >        trap            ;failed not equal (non zero)
3c94 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c97 :                 >skip2848
                        
3c97 : 28                       plp
3c98 : 08                       php             ;save carry for next add
3c99 : a511                     lda ad1
3c9b : f258                     sbc (sbi2)      ;perform subtract
3c9d : 08                       php          
3c9e : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3ca0 : f003            >        beq skip2850
                       >        trap            ;failed not equal (non zero)
3ca2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ca5 :                 >skip2850
                        
3ca5 : 68                       pla             ;check flags
3ca6 : 2983                     and #$83        ;mask N-----ZC
3ca8 : c515                     cmp adrf
                                trap_ne         ;bad flags
3caa : f003            >        beq skip2852
                       >        trap            ;failed not equal (non zero)
3cac : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3caf :                 >skip2852
                        
3caf : 28                       plp
3cb0 : 60                       rts
                        
                        ; core subroutine of the full binary add/subtract test
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
3cb1 : a515             chkadd  lda adrf        ;add V-flag if overflow
3cb3 : 2983                     and #$83        ;keep N-----ZC / clear V
3cb5 : 48                       pha
3cb6 : a511                     lda ad1         ;test sign unequal between operands
3cb8 : 4512                     eor ad2
3cba : 300a                     bmi ckad1       ;no overflow possible - operands have different sign
3cbc : a511                     lda ad1         ;test sign equal between operands and result
3cbe : 4513                     eor adrl
3cc0 : 1004                     bpl ckad1       ;no overflow occured - operand and result have same sign
3cc2 : 68                       pla
3cc3 : 0940                     ora #$40        ;set V
3cc5 : 48                       pha
3cc6 : 68               ckad1   pla
3cc7 : 8515                     sta adrf        ;save expected flags
                        ; binary ADC / SBC (zp)
3cc9 : 08                       php             ;save carry for subtract
3cca : a511                     lda ad1
3ccc : 7256                     adc (adi2)      ;perform add
3cce : 08                       php          
3ccf : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3cd1 : f003            >        beq skip2854
                       >        trap            ;failed not equal (non zero)
3cd3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3cd6 :                 >skip2854
                        
3cd6 : 68                       pla             ;check flags
3cd7 : 29c3                     and #$c3        ;mask NV----ZC
3cd9 : c515                     cmp adrf
                                trap_ne         ;bad flags
3cdb : f003            >        beq skip2856
                       >        trap            ;failed not equal (non zero)
3cdd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ce0 :                 >skip2856
                        
3ce0 : 28                       plp
3ce1 : 08                       php             ;save carry for next add
3ce2 : a511                     lda ad1
3ce4 : f258                     sbc (sbi2)      ;perform subtract
3ce6 : 08                       php          
3ce7 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3ce9 : f003            >        beq skip2858
                       >        trap            ;failed not equal (non zero)
3ceb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3cee :                 >skip2858
                        
3cee : 68                       pla             ;check flags
3cef : 29c3                     and #$c3        ;mask NV----ZC
3cf1 : c515                     cmp adrf
                                trap_ne         ;bad flags
3cf3 : f003            >        beq skip2860
                       >        trap            ;failed not equal (non zero)
3cf5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3cf8 :                 >skip2860
                        
3cf8 : 28                       plp
3cf9 : 60                       rts
                                
                        ; target for the jump indirect test
3cfa : 003d             ji_adr  dw test_ji
3cfc : f428                     dw ji_ret
                        
3cfe : 88                       dey
3cff : 88                       dey
3d00 :                  test_ji
3d00 : 08                       php             ;either SP or Y count will fail, if we do not hit
3d01 : 88                       dey
3d02 : 88                       dey
3d03 : 88                       dey
3d04 : 28                       plp
                                trap_cs         ;flags loaded?
3d05 : 9003            >        bcc skip2862
                       >        trap            ;failed carry set
3d07 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d0a :                 >skip2862
                        
                                trap_vs
3d0a : 5003            >        bvc skip2864
                       >        trap            ;failed overflow set
3d0c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d0f :                 >skip2864
                        
                                trap_mi
3d0f : 1003            >        bpl skip2866
                       >        trap            ;failed minus (bit 7 set)
3d11 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d14 :                 >skip2866
                        
                                trap_eq 
3d14 : d003            >        bne skip2868
                       >        trap           ;failed equal (zero)
3d16 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d19 :                 >skip2868
                        
3d19 : c949                     cmp #'I'        ;registers loaded?
                                trap_ne
3d1b : f003            >        beq skip2870
                       >        trap            ;failed not equal (non zero)
3d1d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d20 :                 >skip2870
                        
3d20 : e04e                     cpx #'N'
                                trap_ne        
3d22 : f003            >        beq skip2872
                       >        trap            ;failed not equal (non zero)
3d24 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d27 :                 >skip2872
                        
3d27 : c041                     cpy #('D'-3)
                                trap_ne
3d29 : f003            >        beq skip2874
                       >        trap            ;failed not equal (non zero)
3d2b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d2e :                 >skip2874
                        
3d2e : 48                       pha             ;save a,x
3d2f : 8a                       txa
3d30 : 48                       pha
3d31 : ba                       tsx
3d32 : e0fd                     cpx #$fd        ;check SP
                                trap_ne
3d34 : f003            >        beq skip2876
                       >        trap            ;failed not equal (non zero)
3d36 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d39 :                 >skip2876
                        
3d39 : 68                       pla             ;restore x
3d3a : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
3d3b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3d3d : 48              >            pha         ;use stack to load status
3d3e : 28              >            plp
                        
3d3f : 68                       pla             ;restore a
3d40 : e8                       inx             ;return registers with modifications
3d41 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
3d43 : 6cff02                   jmp (ji_tab+2)
3d46 : ea                       nop
3d47 : ea                       nop
                                trap            ;runover protection
3d48 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
                        
                        ; target for the jump indirect test
3d4b : a73d             jxi_adr dw  trap_ind
3d4d : a73d                     dw  trap_ind
3d4f : 593d                     dw  test_jxi    ;+4
3d51 : 6129                     dw  jxi_ret     ;+6
3d53 : a73d                     dw  trap_ind
3d55 : a73d                     dw  trap_ind
                        
3d57 : 88                       dey
3d58 : 88                       dey
3d59 :                  test_jxi
3d59 : 08                       php             ;either SP or Y count will fail, if we do not hit
3d5a : 88                       dey
3d5b : 88                       dey
3d5c : 88                       dey
3d5d : 28                       plp
                                trap_cs         ;flags loaded?
3d5e : 9003            >        bcc skip2881
                       >        trap            ;failed carry set
3d60 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d63 :                 >skip2881
                        
                                trap_vs
3d63 : 5003            >        bvc skip2883
                       >        trap            ;failed overflow set
3d65 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d68 :                 >skip2883
                        
                                trap_mi
3d68 : 1003            >        bpl skip2885
                       >        trap            ;failed minus (bit 7 set)
3d6a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d6d :                 >skip2885
                        
                                trap_eq 
3d6d : d003            >        bne skip2887
                       >        trap           ;failed equal (zero)
3d6f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d72 :                 >skip2887
                        
3d72 : c958                     cmp #'X'        ;registers loaded?
                                trap_ne
3d74 : f003            >        beq skip2889
                       >        trap            ;failed not equal (non zero)
3d76 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d79 :                 >skip2889
                        
3d79 : e004                     cpx #4
                                trap_ne        
3d7b : f003            >        beq skip2891
                       >        trap            ;failed not equal (non zero)
3d7d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d80 :                 >skip2891
                        
3d80 : c046                     cpy #('I'-3)
                                trap_ne
3d82 : f003            >        beq skip2893
                       >        trap            ;failed not equal (non zero)
3d84 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d87 :                 >skip2893
                        
3d87 : 48                       pha             ;save a,x
3d88 : 8a                       txa
3d89 : 48                       pha
3d8a : ba                       tsx
3d8b : e0fd                     cpx #$fd        ;check SP
                                trap_ne
3d8d : f003            >        beq skip2895
                       >        trap            ;failed not equal (non zero)
3d8f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d92 :                 >skip2895
                        
3d92 : 68                       pla             ;restore x
3d93 : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
3d94 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3d96 : 48              >            pha         ;use stack to load status
3d97 : 28              >            plp
                        
3d98 : 68                       pla             ;restore a
3d99 : e8                       inx             ;return registers with modifications
3d9a : e8                       inx
3d9b : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
3d9d : 7cf902                   jmp (jxi_tab,x)
3da0 : ea                       nop
3da1 : ea                       nop
                                trap            ;runover protection
3da2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
                        
                        ; JMP (abs,x) with bad x
3da5 : ea                       nop
3da6 : ea                       nop
3da7 :                  trap_ind
3da7 : ea                       nop
3da8 : ea                       nop
                                trap            ;near miss indexed indirect jump
3da9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
                        
                        ;trap in case of unexpected IRQ, NMI, BRK, RESET
3dac :                  nmi_trap
                                trap            ;check stack for conditions at NMI
3dac : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
3daf :                  res_trap
                                trap            ;unexpected RESET
3daf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
3db2 :                  irq_trap
3db2 : 08                       php             ;save decimal flag
3db3 : ba                       tsx             ;test break on stack
3db4 : bd0201                   lda $102,x
3db7 : 2910                     and #break
                                trap_eq         ;check stack for conditions at IRQ
3db9 : d003            >        bne skip2903
                       >        trap           ;failed equal (zero)
3dbb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3dbe :                 >skip2903
                        
                            if ROM_vectors = 1
                                pla             ;test decimal mode cleared
                                and #decmode
                                trap_ne         ;decimal mode not cleared after BRK
                                plp             ;pop saved flags
                                pla             ;return address low
                                cmp #lo(brk_ret)
                                trap_ne         ;unexpected BRK
                                pla             ;return address high
                                cmp #hi(brk_ret)
                                trap_ne         ;unexpected BRK
                                jmp brk_ret
                            else
                                trap_ne         ;check stack for conditions at BRK
3dbe : f003            >        beq skip2905
                       >        trap            ;failed not equal (non zero)
3dc0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3dc3 :                 >skip2905
                        
                            endif
                                
                            if report = 1
                                include "report.i65"
                        ;**** report 6502 funtional test errors to standard I/O ****
                        ;
                        ;this include file is part of the 6502 functional tests
                        ;it is used when you configure report = 1 in the tests
                        ;
                        ;to adopt the standard output vectors of your test environment
                        ;you must modify the rchar and rget subroutines in this include
                        ;
                        ;I/O hardware may have to be initialized in report_init
                        
                        ;print message macro - \1 = message location
                        rprt    macro
                                ldx #0
                                lda \1
                        loop\?
                                jsr rchar
                                inx
                                lda \1,x
                                bne loop\?
                                endm
                        
                        ;initialize I/O as required (example: configure & enable ACIA)
3dc3 :                  report_init
                                ;nothing to initialize
                                rprt rmsg_start
3dc3 : a200            >        ldx #0
3dc5 : ad993e          >        lda rmsg_start
3dc8 :                 >loop2907
3dc8 : 20953e          >        jsr rchar
3dcb : e8              >        inx
3dcc : bd993e          >        lda rmsg_start,x
3dcf : d0f7            >        bne loop2907
                        
3dd1 : 60                       rts
                                
                        ;show stack (with saved registers), zeropage and absolute memory workspace
                        ;after an error was trapped in the test program
3dd2 :                  report_error
                        ;save registers
3dd2 : 08                       php
3dd3 : 48                       pha
3dd4 : 8a                       txa
3dd5 : 48                       pha
3dd6 : 98                       tya
3dd7 : 48                       pha
3dd8 : d8                       cld
                        ;show stack with index to registers at error
                                rprt rmsg_stack
3dd9 : a200            >        ldx #0
3ddb : adad3e          >        lda rmsg_stack
3dde :                 >loop2908
3dde : 20953e          >        jsr rchar
3de1 : e8              >        inx
3de2 : bdad3e          >        lda rmsg_stack,x
3de5 : d0f7            >        bne loop2908
                        
3de7 : ba                       tsx
3de8 : e8                       inx
3de9 : a901                     lda #1      ;address high
3deb : 20813e                   jsr rhex
3dee : 8a                       txa         ;address low
3def : 20813e                   jsr rhex
3df2 : 207d3e           rstack  jsr rspace
3df5 : bd0001                   lda $100,x  ;stack data
3df8 : 20813e                   jsr rhex
3dfb : e8                       inx
3dfc : d0f4                     bne rstack
3dfe : 20743e                   jsr rcrlf   ;new line
                        ;show zero page workspace
3e01 : a900                     lda #0
3e03 : 20813e                   jsr rhex
3e06 : a910                     lda #zpt
3e08 : aa                       tax
3e09 : 20813e                   jsr rhex
3e0c : 207d3e           rzp     jsr rspace
3e0f : b500                     lda 0,x
3e11 : 20813e                   jsr rhex
3e14 : e8                       inx
3e15 : e017                     cpx #zp_bss
3e17 : d0f3                     bne rzp
3e19 : 20743e                   jsr rcrlf
                        ;show absolute workspace
3e1c : a902                     lda #hi(data_segment)
3e1e : 20813e                   jsr rhex
3e21 : a900                     lda #lo(data_segment)
3e23 : 20813e                   jsr rhex
3e26 : a200                     ldx #0
3e28 : 207d3e           rabs    jsr rspace
3e2b : bd0002                   lda data_segment,x
3e2e : 20813e                   jsr rhex
3e31 : e8                       inx
3e32 : e00a                     cpx #(data_bss-data_segment)
3e34 : d0f2                     bne rabs
                        ;ask to continue
                                rprt rmsg_cont
3e36 : a200            >        ldx #0
3e38 : adc93e          >        lda rmsg_cont
3e3b :                 >loop2909
3e3b : 20953e          >        jsr rchar
3e3e : e8              >        inx
3e3f : bdc93e          >        lda rmsg_cont,x
3e42 : d0f7            >        bne loop2909
                        
3e44 : 20683e           rerr1   jsr rget
3e47 : c943                     cmp #'C'
3e49 : d0f9                     bne rerr1        
                        ;restore registers
3e4b : 68                       pla
3e4c : a8                       tay
3e4d : 68                       pla
3e4e : aa                       tax
3e4f : 68                       pla 
3e50 : 28                       plp
3e51 : 60                       rts   
                        
                        ;show test has ended, ask to repeat
3e52 :                  report_success
                            if rep_int = 1
                                rprt rmsg_priority
                                lda data_segment    ;show interrupt sequence
                                jsr rhex
                                jsr rspace
                                lda data_segment+1
                                jsr rhex
                                jsr rspace
                                lda data_segment+2
                                jsr rhex
                            endif
                                rprt rmsg_success
3e52 : a200            >        ldx #0
3e54 : ade13e          >        lda rmsg_success
3e57 :                 >loop2910
3e57 : 20953e          >        jsr rchar
3e5a : e8              >        inx
3e5b : bde13e          >        lda rmsg_success,x
3e5e : d0f7            >        bne loop2910
                        
3e60 : 20683e           rsuc1   jsr rget
3e63 : c952                     cmp #'R'
3e65 : d0f9                     bne rsuc1        
3e67 : 60                       rts
                        
                        ;input subroutine
                        ;get a character from standard input 
                        ;adjust according to the needs in your test environment
3e68 :                  rget                ;get character in A
                        ;rget1
                        ;        lda $bff1   ;wait RDRF
                        ;        and #8
                        ;        beq rget1
                        ;not a real ACIA - so RDRF is not checked
3e68 : adf0bf                   lda $bff0   ;read acia rx reg
                        ;the load can be replaced by a call to a kernal routine
                        ;        jsr $ffcf   ;example: CHRIN for a C64
3e6b : c961                     cmp #'a'    ;lower case
3e6d : 9002                     bcc rget1
3e6f : 295f                     and #$5f    ;convert to upper case
3e71 : a943             rget1   lda #'C'
3e73 : 60               		rts
                        
                        ;output subroutines
3e74 : a90a             rcrlf   lda #10
3e76 : 20953e                   jsr rchar
3e79 : a90d                     lda #13
3e7b : d018                     bne rchar
                        
3e7d : a920             rspace  lda #' '
3e7f : d014                     bne rchar
                                
3e81 : 48               rhex    pha         ;report hex byte in A
3e82 : 4a                       lsr a       ;high nibble first
3e83 : 4a                       lsr a
3e84 : 4a                       lsr a
3e85 : 4a                       lsr a
3e86 : 208c3e                   jsr rnib
3e89 : 68                       pla         ;now low nibble
3e8a : 290f                     and #$f
                        
3e8c : 18               rnib    clc         ;report nibble in A
3e8d : 6930                     adc #'0'    ;make printable 0-9
3e8f : c93a                     cmp #'9'+1
3e91 : 9002                     bcc rchar
3e93 : 6906                     adc #6      ;make printable A-F
                        
                        ;send a character to standard output 
                        ;adjust according to the needs in your test environment
                        ;register X needs to be preserved!
3e95 :                  rchar               ;report character in A
                        ;        pha         ;wait TDRF
                        ;rchar1  lda $bff1
                        ;        and #$10
                        ;        beq rchar1
                        ;        pla
                        ;not a real ACIA - so TDRF is not checked
3e95 : 8d00ef                   sta $ef00   ;write acia tx reg
                        ;the store can be replaced by a call to a kernal routine
                        ;        jsr $ffd2   ;example: CHROUT for a C64
3e98 : 60                       rts
                        
3e99 :                  rmsg_start
3e99 : 0a0d5374617274..         db  10,13,"Started testing",10,13,0
3ead :                  rmsg_stack
3ead : 0a0d7265677320..         db  10,13,"regs Y  X  A  PS PCLPCH",10,13,0
3ec9 :                  rmsg_cont
3ec9 : 0a0d7072657373..         db  10,13,"press C to continue",10,13,0
3ee1 :                  rmsg_success
3ee1 : 0a0d416c6c2074..         db  10,13,"All tests completed, press R to repeat",10,13,0
                            if rep_int = 1
                        rmsg_priority
                                db  10,13,"interrupt sequence (NMI IRQ BRK) ",0
                            endif
                           
                            endif
                                    
                        ;copy of data to initialize BSS segment
                            if load_data_direct != 1
3f0c :                  zp_init
3f0c : c3824100         zp1_    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
3f10 : 7f               zp7f_   db  $7f             ;test pattern for compare  
                        ;logical zeropage operands
3f11 : 001f7180         zpOR_   db  0,$1f,$71,$80   ;test pattern for OR
3f15 : 0fff7f80         zpAN_   db  $0f,$ff,$7f,$80 ;test pattern for AND
3f19 : ff0f8f8f         zpEO_   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
3f1d : 0a02             ind1_   dw  abs1            ;indirect pointer to pattern in absolute memory
3f1f : 0b02                     dw  abs1+1
3f21 : 0c02                     dw  abs1+2
3f23 : 0d02                     dw  abs1+3
3f25 : 0e02                     dw  abs7f
3f27 : 1201             inw1_   dw  abs1-$f8        ;indirect pointer for wrap-test pattern
3f29 : 0502             indt_   dw  abst            ;indirect pointer to store area in absolute memory
3f2b : 0602                     dw  abst+1
3f2d : 0702                     dw  abst+2
3f2f : 0802                     dw  abst+3
3f31 : 0d01             inwt_   dw  abst-$f8        ;indirect pointer for wrap-test store
3f33 : 4102             indAN_  dw  absAN           ;indirect pointer to AND pattern in absolute memory
3f35 : 4202                     dw  absAN+1
3f37 : 4302                     dw  absAN+2
3f39 : 4402                     dw  absAN+3
3f3b : 4502             indEO_  dw  absEO           ;indirect pointer to EOR pattern in absolute memory
3f3d : 4602                     dw  absEO+1
3f3f : 4702                     dw  absEO+2
3f41 : 4802                     dw  absEO+3
3f43 : 3d02             indOR_  dw  absOR           ;indirect pointer to OR pattern in absolute memory
3f45 : 3e02                     dw  absOR+1
3f47 : 3f02                     dw  absOR+2
3f49 : 4002                     dw  absOR+3
                        ;add/subtract indirect pointers
3f4b : 0502             adi2_   dw  ada2            ;indirect pointer to operand 2 in absolute memory
3f4d : 0602             sbi2_   dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
3f4f : 0601             adiy2_  dw  ada2-$ff        ;with offset for indirect indexed
3f51 : 0701             sbiy2_  dw  sba2-$ff
3f53 :                  zp_end
                            if (zp_end - zp_init) != (zp_bss_end - zp_bss)   
                                ;force assembler error if size is different   
                                ERROR ERROR ERROR   ;mismatch between bss and zeropage data
                            endif 
3f53 :                  data_init
3f53 : c3824100         abs1_   db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
3f57 : 7f               abs7f_  db  $7f             ;test pattern for compare
                        ;loads
3f58 : 80800002         fLDx_   db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
3f5c :                  rASL_                       ;expected result ASL & ROL -carry  
3f5c : 86048200         rROL_   db  $86,$04,$82,0   ; "
3f60 : 87058301         rROLc_  db  $87,$05,$83,1   ;expected result ROL +carry
3f64 :                  rLSR_                       ;expected result LSR & ROR -carry
3f64 : 61412000         rROR_   db  $61,$41,$20,0   ; "
3f68 : e1c1a080         rRORc_  db  $e1,$c1,$a0,$80 ;expected result ROR +carry
3f6c :                  fASL_                       ;expected flags for shifts
3f6c : 81018002         fROL_   db  fnc,fc,fn,fz    ;no carry in
3f70 : 81018000         fROLc_  db  fnc,fc,fn,0     ;carry in
3f74 :                  fLSR_
3f74 : 01000102         fROR_   db  fc,0,fc,fz      ;no carry in
3f78 : 81808180         fRORc_  db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
3f7c : 7f80ff0001       rINC_   db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
3f81 : 0080800200       fINC_   db  0,fn,fn,fz,0    ;expected flags for INC/DEC
                        ;logical memory operand
3f86 : 001f7180         absOR_  db  0,$1f,$71,$80   ;test pattern for OR
3f8a : 0fff7f80         absAN_  db  $0f,$ff,$7f,$80 ;test pattern for AND
3f8e : ff0f8f8f         absEO_  db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
3f92 : 00f11f00         absORa_ db  0,$f1,$1f,0     ;test pattern for OR
3f96 : f0ffffff         absANa_ db  $f0,$ff,$ff,$ff ;test pattern for AND
3f9a : fff0f00f         absEOa_ db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
3f9e : 00ff7f80         absrlo_ db  0,$ff,$7f,$80
3fa2 : 02800080         absflo_ db  fz,fn,0,fn
3fa6 :                  data_end
                            if (data_end - data_init) != (data_bss_end - data_bss)
                                ;force assembler error if size is different   
                                ERROR ERROR ERROR   ;mismatch between bss and data
                            endif 
                        
3fa6 :                  vec_init
3fa6 : ac3d                     dw  nmi_trap
3fa8 : af3d                     dw  res_trap
3faa : b23d                     dw  irq_trap
fffa =                  vec_bss equ $fffa
                            endif                   ;end of RAM init data
                            
                        ; code at end of image due to the need to add blank space as required
                            if ($ff & (ji_ret - * - 2)) < ($ff & (jxi_ret - * - 2))
                        ; JMP (abs) when $xxff and $xx00 are from same page
3fac : 00000000000000..         ds  lo(ji_ret - * - 2)
3ff2 : ea                       nop
3ff3 : ea                       nop
3ff4 : ea               ji_px   nop             ;low address byte matched with ji_ret 
3ff5 : ea                       nop
                                trap            ;jmp indirect page cross bug
3ff6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
                        
                        ; JMP (abs,x) when $xxff and $xx00 are from same page
3ff9 : 00000000000000..         ds  lo(jxi_ret - * - 2)
405f : ea                       nop
4060 : ea                       nop
4061 : ea               jxi_px  nop             ;low address byte matched with jxi_ret 
4062 : ea                       nop
                                trap            ;jmp indexed indirect page cross bug
4063 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
                            else
                        ; JMP (abs,x) when $xxff and $xx00 are from same page
                                ds  lo(jxi_ret - * - 2)
                                nop
                                nop
                        jxi_px  nop             ;low address byte matched with jxi_ret 
                                nop
                                trap            ;jmp indexed indirect page cross bug
                        
                        ; JMP (abs) when $xxff and $xx00 are from same page
                                ds  lo(ji_ret - * - 2)
                                nop
                                nop
                        ji_px   nop             ;low address byte matched with ji_ret 
                                nop
                                trap            ;jmp indirect page cross bug
                            endif
                            
                            if (load_data_direct = 1) & (ROM_vectors = 1)  
                                org $fffa       ;vectors
                                dw  nmi_trap
                                dw  res_trap
                                dw  irq_trap
                            endif
                        
4061 =                          end start
                                    
No errors in pass 2.
Wrote binary from address $1000 through $4065.
Total size 12390 bytes.
Program start address is at $1000 (4096).
