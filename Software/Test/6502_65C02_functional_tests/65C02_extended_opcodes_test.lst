AS65 Assembler for R6502 [1.42].  Copyright 1994-2007, Frank A. Kingswood                                                Page    1
------------------------------------------------ 65C02_extended_opcodes_test.a65c ------------------------------------------------

2954 lines read, no errors in pass 1.
                        ;
                        ; 6 5 C 0 2   E X T E N D E D   O P C O D E S   T E S T
                        ;
                        ; Copyright (C) 2013  Klaus Dormann
                        ;
                        ; This program is free software: you can redistribute it and/or modify
                        ; it under the terms of the GNU General Public License as published by
                        ; the Free Software Foundation, either version 3 of the License, or
                        ; (at your option) any later version.
                        ;
                        ; This program is distributed in the hope that it will be useful,
                        ; but WITHOUT ANY WARRANTY; without even the implied warranty of
                        ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        ; GNU General Public License for more details.
                        ;
                        ; You should have received a copy of the GNU General Public License
                        ; along with this program.  If not, see <http://www.gnu.org/licenses/>.
                        
                        
                        ; This program is designed to test all additional 65C02 opcodes, addressing
                        ; modes and functionality not available in the NMOS version of the 6502.
                        ; The 6502_functional_test is a prerequisite to this test.
                        ; NMI, IRQ, BRK, STP & WAI are covered in the 6502_interrupt_test.
                        ; 
                        ; version 16-aug-2013
                        ; contact info at http://2m5.de or email K@2m5.de
                        ;
                        ; assembled with AS65 from http://www.kingswood-consulting.co.uk/assemblers/
                        ; command line switches: -l -m -s2 -w -x -h0
                        ;                         |  |  |   |  |  no page headers in listing
                        ;                         |  |  |   |  65C02 extensions
                        ;                         |  |  |   wide listing (133 char/col)
                        ;                         |  |  write intel hex file instead of binary
                        ;                         |  expand macros in listing
                        ;                         generate pass2 listing
                        ;
                        ; No IO - should be run from a monitor with access to registers.
                        ; To run load intel hex image with a load command, than alter PC to 400 hex
                        ; (code_segment) and enter a go command.
                        ; Loop on program counter determines error or successful completion of test.
                        ; Check listing for relevant traps (jump/branch *).
                        ; Please note that in early tests some instructions will have to be used before
                        ; they are actually tested!
                        ;
                        ; RESET, NMI or IRQ should not occur and will be trapped if vectors are enabled.
                        ; Tests documented behavior of the original 65C02 only!
                        ; Decimal ops will only be tested with valid BCD operands and the V flag will
                        ; be ignored as it is absolutely useless in decimal mode.
                        ;
                        ; Debugging hints:
                        ;     Most of the code is written sequentially. if you hit a trap, check the
                        ;   immediately preceeding code for the instruction to be tested. Results are
                        ;   tested first, flags are checked second by pushing them onto the stack and
                        ;   pulling them to the accumulator after the result was checked. The "real"
                        ;   flags are no longer valid for the tested instruction at this time!
                        ;     If the tested instruction was indexed, the relevant index (X or Y) must
                        ;   also be checked. Opposed to the flags, X and Y registers are still valid.
                        ;
                        ; versions:
                        ;   19-jul-2013  1st version distributed for testing
                        ;   23-jul-2013  fixed BRA out of range due to larger trap macros
                        ;                added RAM integrity check
                        ;   16-aug-2013  added error report to standard output option
                        
                        
                        ; C O N F I G U R A T I O N
                        
                        ;ROM_vectors writable (0=no, 1=yes)
                        ;if ROM vectors can not be used interrupts will not be trapped
                        ;as a consequence BRK can not be tested but will be emulated to test RTI
0001 =                  ROM_vectors = 1
                        
                        ;load_data_direct (0=move from code segment, 1=load directly)
                        ;loading directly is preferred but may not be supported by your platform
                        ;0 produces only consecutive object code, 1 is not suitable for a binary image
0000 =                  load_data_direct = 0
                        
                        ;I_flag behavior (0=force enabled, 1=force disabled, 2=prohibit change, 3=allow
                        ;change) 2 requires extra code and is not recommended.
0003 =                  I_flag = 3
                        
                        ;configure memory - try to stay away from memory used by the system
                        ;zero_page memory start address, $4e (78) consecutive Bytes required
                        ;                                add 2 if I_flag = 2
0010 =                  zero_page = $10
                        
                        ;data_segment memory start address, $5D (93) consecutive Bytes required
                        ; + 12 Bytes at data_segment + $f9 (JMP indirect page cross test)
0200 =                  data_segment = $200
                            if (data_segment & $ff) != 0
                                ERROR ERROR ERROR low byte of data_segment MUST be $00 !!
                            endif  
                        
                        ;code_segment memory start address, 10kB of consecutive space required
                        ;                                   add 1 kB if I_flag = 2
                        ;parts of the code are self modifying and must reside in RAM
1000 =                  code_segment = $1000  
                        
                        ;added WDC only opcodes WAI & STP (0=test as NOPs, >0=no test)
0001 =                  wdc_op = 1
                        
                        ;added Rockwell & WDC opcodes BBR, BBS, RMB & SMB
                        ;(0=test as NOPs, 1=full test, >1=no test) 
0001 =                  rkwl_wdc_op = 1
                        
                        ;report errors through I/O channel (0=use standard self trap loops, 1=include
                        ;report.i65 as I/O channel, add 3 kB)
0001 =                  report = 1
                        
                        ;RAM integrity test option. Checks for undesired RAM writes.
                        ;set lowest non RAM or RAM mirror address page (-1=disable, 0=64k, $40=16k)
                        ;leave disabled if a monitor, OS or background interrupt is allowed to alter RAM
00e0 =                  ram_top = $e0
                        
                                noopt       ;do not take shortcuts
                                
                        ;macros for error & success traps to allow user modification
                        ;example:
                        ;trap    macro
                        ;        jsr my_error_handler
                        ;        endm
                        ;trap_eq macro
                        ;        bne skip\?
                        ;        trap           ;failed equal (zero)
                        ;skip\?
                        ;        endm
                        ;
                        ; my_error_handler should pop the calling address from the stack and report it.
                        ; putting larger portions of code (more than 3 bytes) inside the trap macro
                        ; may lead to branch range problems for some tests.
                            if report = 0
                        trap    macro
                                jmp *           ;failed anyway
                                endm
                        trap_eq macro
                                beq *           ;failed equal (zero)
                                endm
                        trap_ne macro
                                bne *           ;failed not equal (non zero)
                                endm
                        trap_cs macro
                                bcs *           ;failed carry set
                                endm
                        trap_cc macro
                                bcc *           ;failed carry clear
                                endm
                        trap_mi macro
                                bmi *           ;failed minus (bit 7 set)
                                endm
                        trap_pl macro
                                bpl *           ;failed plus (bit 7 clear)
                                endm
                        trap_vs macro
                                bvs *           ;failed overflow set
                                endm
                        trap_vc macro
                                bvc *           ;failed overflow clear
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                         sta $ef04
                         db "success", 10, 0
                                jmp *           ;test passed, no errors
                                endm
                            endif
                            if report = 1
                        trap    macro
                                sta $ef02
                                ;jsr report_error
                                endm
                        trap_eq macro
                                bne skip\?
                                trap           ;failed equal (zero)
                        skip\?
                                endm
                        trap_ne macro
                                beq skip\?
                                trap            ;failed not equal (non zero)
                        skip\?
                                endm
                        trap_cs macro
                                bcc skip\?
                                trap            ;failed carry set
                        skip\?
                                endm
                        trap_cc macro
                                bcs skip\?
                                trap            ;failed carry clear
                        skip\?
                                endm
                        trap_mi macro
                                bpl skip\?
                                trap            ;failed minus (bit 7 set)
                        skip\?
                                endm
                        trap_pl macro
                                bmi skip\?
                                trap            ;failed plus (bit 7 clear)
                        skip\?
                                endm
                        trap_vs macro
                                bvc skip\?
                                trap            ;failed overflow set
                        skip\?
                                endm
                        trap_vc macro
                                bvs skip\?
                                trap            ;failed overflow clear
                        skip\?
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                         sta $ef04
                         db "success", 10, 0
                                db $db
                                ;jsr report_success
                                endm
                            endif
                        
                        
0001 =                  carry   equ %00000001   ;flag bits in status
0002 =                  zero    equ %00000010
0004 =                  intdis  equ %00000100
0008 =                  decmode equ %00001000
0010 =                  break   equ %00010000
0020 =                  reserv  equ %00100000
0040 =                  overfl  equ %01000000
0080 =                  minus   equ %10000000
                        
0001 =                  fc      equ carry
0002 =                  fz      equ zero
0003 =                  fzc     equ carry+zero
0040 =                  fv      equ overfl
0042 =                  fvz     equ overfl+zero
0080 =                  fn      equ minus
0081 =                  fnc     equ minus+carry
0082 =                  fnz     equ minus+zero
0083 =                  fnzc    equ minus+zero+carry
00c0 =                  fnv     equ minus+overfl
                        
0030 =                  fao     equ break+reserv    ;bits always on after PHP, BRK
0034 =                  fai     equ fao+intdis      ;+ forced interrupt disable
00ff =                  m8      equ $ff             ;8 bit mask
00fb =                  m8i     equ $ff&~intdis     ;8 bit mask - interrupt disable
                        
                        ;macros to allow masking of status bits.
                        ;masking of interrupt enable/disable on load and compare
                        ;masking of always on bits after PHP or BRK (unused & break) on compare
                                if I_flag = 0
                        load_flag   macro
                                    lda #\1&m8i         ;force enable interrupts (mask I)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8i   ;I_flag is always enabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 1
                        load_flag   macro
                                    lda #\1|intdis      ;force disable interrupts
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fai)&m8    ;I_flag is always disabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1|fai)       ;invert expected flags + always on bits + I
                                    endm
                                endif
                                if I_flag = 2
                        load_flag   macro
                                    lda #\1
                                    ora flag_I_on       ;restore I-flag
                                    and flag_I_off
                                    endm
                        cmp_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    cmp #(\1|fao)&m8i   ;expected flags + always on bits, mask I
                                    endm
                        eor_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 3
                        load_flag   macro
                                    lda #\1             ;allow test to change I-flag (no mask)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8    ;expected flags + always on bits
                                    endm
                        eor_flag    macro
                                    eor #\1|fao         ;invert expected flags + always on bits
                                    endm
                                endif
                        
                        ;macros to set (register|memory|zeropage) & status
                        set_stat    macro       ;setting flags in the processor status register
                                    load_flag \1
                                    pha         ;use stack to load status
                                    plp
                                    endm
                        
                        set_a       macro       ;precharging accu & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda #\1     ;precharge accu
                                    plp
                                    endm
                        
                        set_x       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldx #\1     ;precharge index x
                                    plp
                                    endm
                        
                        set_y       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldy #\1     ;precharge index y
                                    plp
                                    endm
                        
                        set_ax      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;precharge accu
                                    plp
                                    endm
                        
                        set_ay      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,y    ;precharge accu
                                    plp
                                    endm
                        
                        set_z       macro       ;precharging indexed zp & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to zeropage
                                    sta zpt
                                    plp
                                    endm
                        
                        set_zx      macro       ;precharging zp,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed zeropage
                                    sta zpt,x
                                    plp
                                    endm
                        
                        set_abs     macro       ;precharging indexed memory & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to memory
                                    sta abst
                                    plp
                                    endm
                        
                        set_absx    macro       ;precharging abs,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed memory
                                    sta abst,x
                                    plp
                                    endm
                        
                        ;macros to test (register|memory|zeropage) & status & (mask)
                        tst_stat    macro       ;testing flags in the processor status register
                                    php         ;save status
                                    php         ;use stack to retrieve status
                                    pla
                                    cmp_flag \1
                                    trap_ne
                                    plp         ;restore status
                                    endm
                                    
                        tst_a       macro       ;testing result in accu & flags
                                    php         ;save flags
                                    php
                                    cmp #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_as      macro       ;testing result in accu & flags, save accu
                                    pha
                                    php         ;save flags
                                    php
                                    cmp #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    pla
                                    endm
                        
                        tst_x       macro       ;testing result in x index & flags
                                    php         ;save flags
                                    php
                                    cpx #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_y       macro       ;testing result in y index & flags
                                    php         ;save flags
                                    php
                                    cpy #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_ax      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne     ;
                                    endm
                        
                        tst_ay      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,y    ;test result
                                    trap_ne     ;
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,y    ;test flags
                                    trap_ne
                                    endm
                                
                        tst_z       macro       ;indexed testing result in zp & flags
                                    php         ;save flags
                                    lda zpt
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_zx      macro       ;testing result in zp,x & flags
                                    php         ;save flags
                                    lda zpt,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_abs     macro       ;indexed testing result in memory & flags
                                    php         ;save flags
                                    lda abst
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_absx    macro       ;testing result in abs,x & flags
                                    php         ;save flags
                                    lda abst,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                                    
                        ; RAM integrity test
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                        ;   uses zpt word as indirect pointer, zpt+2 word as checksum
                                if ram_top > -1
                        check_ram   macro 
                                    cld
                                    lda #0
                                    sta zpt         ;set low byte of indirect pointer
                                    sta zpt+3       ;checksum high byte
                                    ldx #11         ;reset modifiable RAM
                        ccs1\?      sta jxi_tab,x   ;JMP indirect page cross area
                                    dex
                                    bpl ccs1\?
                                    sta chkdadi     ;self modifying code
                                    sta chkdsbi
                                    clc
                                    ldx #zp_bss-zero_page ;zeropage - write test area
                        ccs3\?      adc zero_page,x
                                    bcc ccs2\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs2\?      inx
                                    bne ccs3\?
                                    ldx #hi(data_segment) ;set high byte of indirect pointer
                                    stx zpt+1
                                    ldy #lo(data_bss) ;data after write test area
                        ccs5\?      adc (zpt),y
                                    bcc ccs4\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs4\?      iny
                                    bne ccs5\?
                                    inx             ;advance RAM high address
                                    stx zpt+1
                                    cpx #ram_top
                                    bne ccs5\?
                                    sta zpt+2       ;checksum low is
                                    cmp ram_chksm   ;checksum low expected
                                    trap_ne         ;checksum mismatch
                                    lda zpt+3       ;checksum high is
                                    cmp ram_chksm+1 ;checksum high expected
                                    trap_ne         ;checksum mismatch
                                    endm            
                                else
                        check_ram   macro
                                    ;RAM check disabled - RAM size not set
                                    endm
                                endif
                                    
                        next_test   macro           ;make sure, tests don't jump the fence
                                    lda test_case   ;previous test
                                    cmp #test_num
                                    trap_ne         ;test is out of sequence
                        test_num = test_num + 1
                                    lda #test_num   ;*** next tests' number
                                    sta test_case
                                    ;sta $ef03
                                    check_ram       ;uncomment to find altered RAM after each test
                                    endm
                        
                            if load_data_direct = 1
                                data
                            else
                                bss                 ;uninitialized segment, copy of data at end of code!
                            endif
0010 =                          org zero_page
                            if I_flag = 2
                        ;masking for I bit in status
                        flag_I_on   ds  1           ;or mask to load flags   
                        flag_I_off  ds  1           ;and mask to load flags
                            endif
0010 =                  zpt                         ;5 bytes store/modify test area
                        ;add/subtract operand generation and result/flag prediction
0010 =                  adfc    ds  1               ;carry flag before op
0011 =                  ad1     ds  1               ;operand 1 - accumulator
0012 =                  ad2     ds  1               ;operand 2 - memory / immediate
0013 =                  adrl    ds  1               ;expected result bits 0-7
0014 =                  adrh    ds  1               ;expected result bit 8 (carry)
0015 =                  adrf    ds  1               ;expected flags NV0000ZC (-V in decimal mode)
0016 =                  sb2     ds  1               ;operand 2 complemented for subtract
0017 =                  zp_bss
0017 =                  zp1     db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
001b =                  zp7f    db  $7f             ;test pattern for compare  
                        ;logical zeropage operands
001c =                  zpOR    db  0,$1f,$71,$80   ;test pattern for OR
0020 =                  zpAN    db  $0f,$ff,$7f,$80 ;test pattern for AND
0024 =                  zpEO    db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
0028 =                  ind1    dw  abs1            ;indirect pointer to pattern in absolute memory
002a =                          dw  abs1+1
002c =                          dw  abs1+2
002e =                          dw  abs1+3
0030 =                          dw  abs7f
0032 =                  inw1    dw  abs1-$f8        ;indirect pointer for wrap-test pattern
0034 =                  indt    dw  abst            ;indirect pointer to store area in absolute memory
0036 =                          dw  abst+1
0038 =                          dw  abst+2
003a =                          dw  abst+3
003c =                  inwt    dw  abst-$f8        ;indirect pointer for wrap-test store
003e =                  indAN   dw  absAN           ;indirect pointer to AND pattern in absolute memory
0040 =                          dw  absAN+1
0042 =                          dw  absAN+2
0044 =                          dw  absAN+3
0046 =                  indEO   dw  absEO           ;indirect pointer to EOR pattern in absolute memory
0048 =                          dw  absEO+1
004a =                          dw  absEO+2
004c =                          dw  absEO+3
004e =                  indOR   dw  absOR           ;indirect pointer to OR pattern in absolute memory
0050 =                          dw  absOR+1
0052 =                          dw  absOR+2
0054 =                          dw  absOR+3
                        ;add/subtract indirect pointers
0056 =                  adi2    dw  ada2            ;indirect pointer to operand 2 in absolute memory
0058 =                  sbi2    dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
005a =                  adiy2   dw  ada2-$ff        ;with offset for indirect indexed
005c =                  sbiy2   dw  sba2-$ff
005e =                  zp_bss_end
                            
0200 =                          org data_segment
0200 =                  pg_x    ds  2               ;high JMP indirect address for page cross bug
0202 =                  test_case   ds  1           ;current test number
0203 =                  ram_chksm   ds  2           ;checksum for RAM integrity test
                        ;add/subtract operand copy - abs tests write area
0205 =                  abst                        ;5 bytes store/modify test area
0205 =                  ada2    ds  1               ;operand 2
0206 =                  sba2    ds  1               ;operand 2 complemented for subtract
0207 =                          ds  3               ;fill remaining bytes
020a =                  data_bss
020a =                  abs1    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
020e =                  abs7f   db  $7f             ;test pattern for compare
                        ;loads
020f =                  fLDx    db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
0213 =                  rASL                        ;expected result ASL & ROL -carry  
0213 =                  rROL    db  $86,$04,$82,0   ; "
0217 =                  rROLc   db  $87,$05,$83,1   ;expected result ROL +carry
021b =                  rLSR                        ;expected result LSR & ROR -carry
021b =                  rROR    db  $61,$41,$20,0   ; "
021f =                  rRORc   db  $e1,$c1,$a0,$80 ;expected result ROR +carry
0223 =                  fASL                        ;expected flags for shifts
0223 =                  fROL    db  fnc,fc,fn,fz    ;no carry in
0227 =                  fROLc   db  fnc,fc,fn,0     ;carry in
022b =                  fLSR
022b =                  fROR    db  fc,0,fc,fz      ;no carry in
022f =                  fRORc   db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
0233 =                  rINC    db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
0238 =                  fINC    db  0,fn,fn,fz,0    ;expected flags for INC/DEC
                        ;logical memory operand
023d =                  absOR   db  0,$1f,$71,$80   ;test pattern for OR
0241 =                  absAN   db  $0f,$ff,$7f,$80 ;test pattern for AND
0245 =                  absEO   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
0249 =                  absORa  db  0,$f1,$1f,0     ;test pattern for OR
024d =                  absANa  db  $f0,$ff,$ff,$ff ;test pattern for AND
0251 =                  absEOa  db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
0255 =                  absrlo  db  0,$ff,$7f,$80
0259 =                  absflo  db  fz,fn,0,fn
025d =                  data_bss_end
                        ;define area for page crossing JMP (abs) & JMP (abs,x) test
02f9 =                  jxi_tab equ data_segment + $100 - 7     ;JMP (jxi_tab,x) x=6
02fd =                  ji_tab  equ data_segment + $100 - 3     ;JMP (ji_tab+2)
0300 =                  jxp_tab equ data_segment + $100         ;JMP (jxp_tab-255) x=255
                        
                        
                                code
1000 =                          org code_segment
1000 : a90f              lda #$0f
1002 : 850f              sta $0f
1004 : d8               start   cld
1005 : a2ff                     ldx #$ff
1007 : 9a                       txs
1008 : a900                     lda #0          ;*** test 0 = initialize
100a : 8d0202                   sta test_case
0000 =                  test_num = 0
                        
                        ;stop interrupts before initializing BSS
                            if I_flag = 1
                                sei
                            endif
                            
                        ;initialize I/O for report channel
                            if report = 1
100d : 205047                   jsr report_init
                            endif
                            
                        ;initialize BSS segment
                            if load_data_direct != 1
1010 : a246                     ldx #zp_end-zp_init-1
1012 : bd9948           ld_zp   lda zp_init,x
1015 : 9517                     sta zp_bss,x
1017 : ca                       dex
1018 : 10f8                     bpl ld_zp
101a : a252                     ldx #data_end-data_init-1
101c : bde048           ld_data lda data_init,x
101f : 9d0a02                   sta data_bss,x
1022 : ca                       dex
1023 : 10f7                     bpl ld_data
                              if ROM_vectors = 1
1025 : a205                     ldx #5
1027 : bd3349           ld_vect lda vec_init,x
102a : 9dfaff                   sta vec_bss,x
102d : ca                       dex
102e : 10f7                     bpl ld_vect
                              endif
                            endif
                        
                        ;retain status of interrupt flag
                            if I_flag = 2
                                php
                                pla
                                and #4          ;isolate flag
                                sta flag_I_on   ;or mask
                                eor #lo(~4)     ;reverse
                                sta flag_I_off  ;and mask
                            endif
                                
                        ;generate checksum for RAM integrity test
                            if ram_top > -1
1030 : a900                     lda #0 
1032 : 8510                     sta zpt         ;set low byte of indirect pointer
1034 : 8d0402                   sta ram_chksm+1 ;checksum high byte
1037 : a20b                     ldx #11         ;reset modifiable RAM
1039 : 9df902           gcs1    sta jxi_tab,x   ;JMP indirect page cross area
103c : ca                       dex
103d : 10fa                     bpl gcs1
103f : 8dd144                   sta chkdadi     ;self modifying code
1042 : 8dee44                   sta chkdsbi
1045 : 18                       clc
1046 : a207                     ldx #zp_bss-zero_page ;zeropage - write test area
1048 : 7510             gcs3    adc zero_page,x
104a : 9004                     bcc gcs2
104c : ee0402                   inc ram_chksm+1 ;carry to high byte
104f : 18                       clc
1050 : e8               gcs2    inx
1051 : d0f5                     bne gcs3
1053 : a202                     ldx #hi(data_segment) ;set high byte of indirect pointer
1055 : 8611                     stx zpt+1
1057 : a00a                     ldy #lo(data_bss) ;data after write test area
1059 : 7110             gcs5    adc (zpt),y
105b : 9004                     bcc gcs4
105d : ee0402                   inc ram_chksm+1 ;carry to high byte
1060 : 18                       clc
1061 : c8               gcs4    iny
1062 : d0f5                     bne gcs5
1064 : e8                       inx             ;advance RAM high address
1065 : 8611                     stx zpt+1
1067 : e0e0                     cpx #ram_top
1069 : d0ee                     bne gcs5
106b : 8d0302                   sta ram_chksm   ;checksum complete
                            endif
                                next_test            
106e : ad0202          >            lda test_case   ;previous test
1071 : c900            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1073 : f003            >        beq skip0002
                       >        trap            ;failed not equal (non zero)
1075 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1078 :                 >skip0002
                       >
0001 =                 >test_num = test_num + 1
1078 : a901            >            lda #test_num   ;*** next tests' number
107a : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            check_ram       ;uncomment to find altered RAM after each test
107d : d8              >            cld
107e : a900            >            lda #0
1080 : 8510            >            sta zpt         ;set low byte of indirect pointer
1082 : 8513            >            sta zpt+3       ;checksum high byte
1084 : a20b            >            ldx #11         ;reset modifiable RAM
1086 : 9df902          >ccs10004      sta jxi_tab,x   ;JMP indirect page cross area
1089 : ca              >            dex
108a : 10fa            >            bpl ccs10004
108c : 8dd144          >            sta chkdadi     ;self modifying code
108f : 8dee44          >            sta chkdsbi
1092 : 18              >            clc
1093 : a207            >            ldx #zp_bss-zero_page ;zeropage - write test area
1095 : 7510            >ccs30004      adc zero_page,x
1097 : 9003            >            bcc ccs20004
1099 : e613            >            inc zpt+3       ;carry to high byte
109b : 18              >            clc
109c : e8              >ccs20004      inx
109d : d0f6            >            bne ccs30004
109f : a202            >            ldx #hi(data_segment) ;set high byte of indirect pointer
10a1 : 8611            >            stx zpt+1
10a3 : a00a            >            ldy #lo(data_bss) ;data after write test area
10a5 : 7110            >ccs50004      adc (zpt),y
10a7 : 9003            >            bcc ccs40004
10a9 : e613            >            inc zpt+3       ;carry to high byte
10ab : 18              >            clc
10ac : c8              >ccs40004      iny
10ad : d0f6            >            bne ccs50004
10af : e8              >            inx             ;advance RAM high address
10b0 : 8611            >            stx zpt+1
10b2 : e0e0            >            cpx #ram_top
10b4 : d0ef            >            bne ccs50004
10b6 : 8512            >            sta zpt+2       ;checksum low is
10b8 : cd0302          >            cmp ram_chksm   ;checksum low expected
                       >            trap_ne         ;checksum mismatch
10bb : f003            >        beq skip0005
                       >        trap            ;failed not equal (non zero)
10bd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
10c0 :                 >skip0005
                       >
10c0 : a513            >            lda zpt+3       ;checksum high is
10c2 : cd0402          >            cmp ram_chksm+1 ;checksum high expected
                       >            trap_ne         ;checksum mismatch
10c5 : f003            >        beq skip0007
                       >        trap            ;failed not equal (non zero)
10c7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
10ca :                 >skip0007
                       >
                       >
                        
                        
10ca : 8d04ef            sta $ef04
10cd : 74657374696e67..  db "testing stack operations PHX PHY PLX PLY\n", 0
10f7 : a999                     lda #$99        ;protect a
10f9 : a2ff                     ldx #$ff        ;initialize stack
10fb : 9a                       txs
10fc : a255                     ldx #$55
10fe : da                       phx
10ff : a2aa                     ldx #$aa
1101 : da                       phx
1102 : ecfe01                   cpx $1fe        ;on stack ?
                                trap_ne
1105 : f003            >        beq skip0009
                       >        trap            ;failed not equal (non zero)
1107 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
110a :                 >skip0009
                        
110a : ba                       tsx
110b : e0fd                     cpx #$fd        ;sp decremented?
                                trap_ne
110d : f003            >        beq skip0011
                       >        trap            ;failed not equal (non zero)
110f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1112 :                 >skip0011
                        
1112 : 7a                       ply
1113 : c0aa                     cpy #$aa        ;successful retreived from stack?
                                trap_ne
1115 : f003            >        beq skip0013
                       >        trap            ;failed not equal (non zero)
1117 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
111a :                 >skip0013
                        
111a : 7a                       ply
111b : c055                     cpy #$55
                                trap_ne
111d : f003            >        beq skip0015
                       >        trap            ;failed not equal (non zero)
111f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1122 :                 >skip0015
                        
1122 : ccff01                   cpy $1ff        ;remains on stack?
                                trap_ne
1125 : f003            >        beq skip0017
                       >        trap            ;failed not equal (non zero)
1127 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
112a :                 >skip0017
                        
112a : ba                       tsx
112b : e0ff                     cpx #$ff        ;sp incremented?
                                trap_ne
112d : f003            >        beq skip0019
                       >        trap            ;failed not equal (non zero)
112f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1132 :                 >skip0019
                        
                                
1132 : a0a5                     ldy #$a5
1134 : 5a                       phy
1135 : a05a                     ldy #$5a
1137 : 5a                       phy
1138 : ccfe01                   cpy $1fe        ;on stack ?
                                trap_ne
113b : f003            >        beq skip0021
                       >        trap            ;failed not equal (non zero)
113d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1140 :                 >skip0021
                        
1140 : ba                       tsx
1141 : e0fd                     cpx #$fd        ;sp decremented?
                                trap_ne
1143 : f003            >        beq skip0023
                       >        trap            ;failed not equal (non zero)
1145 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1148 :                 >skip0023
                        
1148 : fa                       plx
1149 : e05a                     cpx #$5a        ;successful retreived from stack?
                                trap_ne
114b : f003            >        beq skip0025
                       >        trap            ;failed not equal (non zero)
114d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1150 :                 >skip0025
                        
1150 : fa                       plx
1151 : e0a5                     cpx #$a5
                                trap_ne
1153 : f003            >        beq skip0027
                       >        trap            ;failed not equal (non zero)
1155 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1158 :                 >skip0027
                        
1158 : ecff01                   cpx $1ff        ;remains on stack?
                                trap_ne
115b : f003            >        beq skip0029
                       >        trap            ;failed not equal (non zero)
115d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1160 :                 >skip0029
                        
1160 : ba                       tsx
1161 : e0ff                     cpx #$ff        ;sp incremented?
                                trap_ne
1163 : f003            >        beq skip0031
                       >        trap            ;failed not equal (non zero)
1165 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1168 :                 >skip0031
                        
1168 : c999                     cmp #$99        ;unchanged?
                                trap_ne
116a : f003            >        beq skip0033
                       >        trap            ;failed not equal (non zero)
116c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
116f :                 >skip0033
                        
                                next_test            
116f : ad0202          >            lda test_case   ;previous test
1172 : c901            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1174 : f003            >        beq skip0036
                       >        trap            ;failed not equal (non zero)
1176 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1179 :                 >skip0036
                       >
0002 =                 >test_num = test_num + 1
1179 : a902            >            lda #test_num   ;*** next tests' number
117b : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            check_ram       ;uncomment to find altered RAM after each test
117e : d8              >            cld
117f : a900            >            lda #0
1181 : 8510            >            sta zpt         ;set low byte of indirect pointer
1183 : 8513            >            sta zpt+3       ;checksum high byte
1185 : a20b            >            ldx #11         ;reset modifiable RAM
1187 : 9df902          >ccs10038      sta jxi_tab,x   ;JMP indirect page cross area
118a : ca              >            dex
118b : 10fa            >            bpl ccs10038
118d : 8dd144          >            sta chkdadi     ;self modifying code
1190 : 8dee44          >            sta chkdsbi
1193 : 18              >            clc
1194 : a207            >            ldx #zp_bss-zero_page ;zeropage - write test area
1196 : 7510            >ccs30038      adc zero_page,x
1198 : 9003            >            bcc ccs20038
119a : e613            >            inc zpt+3       ;carry to high byte
119c : 18              >            clc
119d : e8              >ccs20038      inx
119e : d0f6            >            bne ccs30038
11a0 : a202            >            ldx #hi(data_segment) ;set high byte of indirect pointer
11a2 : 8611            >            stx zpt+1
11a4 : a00a            >            ldy #lo(data_bss) ;data after write test area
11a6 : 7110            >ccs50038      adc (zpt),y
11a8 : 9003            >            bcc ccs40038
11aa : e613            >            inc zpt+3       ;carry to high byte
11ac : 18              >            clc
11ad : c8              >ccs40038      iny
11ae : d0f6            >            bne ccs50038
11b0 : e8              >            inx             ;advance RAM high address
11b1 : 8611            >            stx zpt+1
11b3 : e0e0            >            cpx #ram_top
11b5 : d0ef            >            bne ccs50038
11b7 : 8512            >            sta zpt+2       ;checksum low is
11b9 : cd0302          >            cmp ram_chksm   ;checksum low expected
                       >            trap_ne         ;checksum mismatch
11bc : f003            >        beq skip0039
                       >        trap            ;failed not equal (non zero)
11be : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11c1 :                 >skip0039
                       >
11c1 : a513            >            lda zpt+3       ;checksum high is
11c3 : cd0402          >            cmp ram_chksm+1 ;checksum high expected
                       >            trap_ne         ;checksum mismatch
11c6 : f003            >        beq skip0041
                       >        trap            ;failed not equal (non zero)
11c8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11cb :                 >skip0041
                       >
                       >
                        
                                
11cb : 8d04ef            sta $ef04
11ce : 74657374205048..  db "test PHX does not alter flags or X but PLX does", 10, 0
11ff : a0aa                     ldy #$aa        ;protect y
                                set_x 1,$ff     ;push
                       >            load_flag $ff     
1201 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
1203 : 48              >            pha         ;use stack to load status
1204 : a201            >            ldx #1     ;precharge index x
1206 : 28              >            plp
                        
1207 : da                       phx
                                tst_x 1,$ff
1208 : 08              >            php         ;save flags
1209 : 08              >            php
120a : e001            >            cpx #1     ;test result
                       >            trap_ne
120c : f003            >        beq skip0046
                       >        trap            ;failed not equal (non zero)
120e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1211 :                 >skip0046
                       >
1211 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1212 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1214 : f003            >        beq skip0049
                       >        trap            ;failed not equal (non zero)
1216 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1219 :                 >skip0049
                       >
1219 : 28              >            plp         ;restore status
                        
                                set_x 0,0
                       >            load_flag 0
121a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
121c : 48              >            pha         ;use stack to load status
121d : a200            >            ldx #0     ;precharge index x
121f : 28              >            plp
                        
1220 : da                       phx
                                tst_x 0,0
1221 : 08              >            php         ;save flags
1222 : 08              >            php
1223 : e000            >            cpx #0     ;test result
                       >            trap_ne
1225 : f003            >        beq skip0054
                       >        trap            ;failed not equal (non zero)
1227 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
122a :                 >skip0054
                       >
122a : 68              >            pla         ;load status
                       >            cmp_flag 0
122b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
122d : f003            >        beq skip0057
                       >        trap            ;failed not equal (non zero)
122f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1232 :                 >skip0057
                       >
1232 : 28              >            plp         ;restore status
                        
                                set_x $ff,$ff
                       >            load_flag $ff
1233 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1235 : 48              >            pha         ;use stack to load status
1236 : a2ff            >            ldx #$ff     ;precharge index x
1238 : 28              >            plp
                        
1239 : da                       phx
                                tst_x $ff,$ff
123a : 08              >            php         ;save flags
123b : 08              >            php
123c : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
123e : f003            >        beq skip0062
                       >        trap            ;failed not equal (non zero)
1240 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1243 :                 >skip0062
                       >
1243 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1244 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1246 : f003            >        beq skip0065
                       >        trap            ;failed not equal (non zero)
1248 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
124b :                 >skip0065
                       >
124b : 28              >            plp         ;restore status
                        
                                set_x 1,0
                       >            load_flag 0
124c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
124e : 48              >            pha         ;use stack to load status
124f : a201            >            ldx #1     ;precharge index x
1251 : 28              >            plp
                        
1252 : da                       phx
                                tst_x 1,0
1253 : 08              >            php         ;save flags
1254 : 08              >            php
1255 : e001            >            cpx #1     ;test result
                       >            trap_ne
1257 : f003            >        beq skip0070
                       >        trap            ;failed not equal (non zero)
1259 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
125c :                 >skip0070
                       >
125c : 68              >            pla         ;load status
                       >            cmp_flag 0
125d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
125f : f003            >        beq skip0073
                       >        trap            ;failed not equal (non zero)
1261 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1264 :                 >skip0073
                       >
1264 : 28              >            plp         ;restore status
                        
                                set_x 0,$ff
                       >            load_flag $ff
1265 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1267 : 48              >            pha         ;use stack to load status
1268 : a200            >            ldx #0     ;precharge index x
126a : 28              >            plp
                        
126b : da                       phx
                                tst_x 0,$ff
126c : 08              >            php         ;save flags
126d : 08              >            php
126e : e000            >            cpx #0     ;test result
                       >            trap_ne
1270 : f003            >        beq skip0078
                       >        trap            ;failed not equal (non zero)
1272 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1275 :                 >skip0078
                       >
1275 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1276 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1278 : f003            >        beq skip0081
                       >        trap            ;failed not equal (non zero)
127a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
127d :                 >skip0081
                       >
127d : 28              >            plp         ;restore status
                        
                                set_x $ff,0
                       >            load_flag 0
127e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1280 : 48              >            pha         ;use stack to load status
1281 : a2ff            >            ldx #$ff     ;precharge index x
1283 : 28              >            plp
                        
1284 : da                       phx
                                tst_x $ff,0
1285 : 08              >            php         ;save flags
1286 : 08              >            php
1287 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
1289 : f003            >        beq skip0086
                       >        trap            ;failed not equal (non zero)
128b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
128e :                 >skip0086
                       >
128e : 68              >            pla         ;load status
                       >            cmp_flag 0
128f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1291 : f003            >        beq skip0089
                       >        trap            ;failed not equal (non zero)
1293 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1296 :                 >skip0089
                       >
1296 : 28              >            plp         ;restore status
                        
                                set_x 0,$ff     ;pull
                       >            load_flag $ff     
1297 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
1299 : 48              >            pha         ;use stack to load status
129a : a200            >            ldx #0     ;precharge index x
129c : 28              >            plp
                        
129d : fa                       plx
                                tst_x $ff,$ff-zero
129e : 08              >            php         ;save flags
129f : 08              >            php
12a0 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
12a2 : f003            >        beq skip0094
                       >        trap            ;failed not equal (non zero)
12a4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12a7 :                 >skip0094
                       >
12a7 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
12a8 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
12aa : f003            >        beq skip0097
                       >        trap            ;failed not equal (non zero)
12ac : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12af :                 >skip0097
                       >
12af : 28              >            plp         ;restore status
                        
                                set_x $ff,0
                       >            load_flag 0
12b0 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
12b2 : 48              >            pha         ;use stack to load status
12b3 : a2ff            >            ldx #$ff     ;precharge index x
12b5 : 28              >            plp
                        
12b6 : fa                       plx
                                tst_x 0,zero
12b7 : 08              >            php         ;save flags
12b8 : 08              >            php
12b9 : e000            >            cpx #0     ;test result
                       >            trap_ne
12bb : f003            >        beq skip0102
                       >        trap            ;failed not equal (non zero)
12bd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12c0 :                 >skip0102
                       >
12c0 : 68              >            pla         ;load status
                       >            cmp_flag zero
12c1 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
12c3 : f003            >        beq skip0105
                       >        trap            ;failed not equal (non zero)
12c5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12c8 :                 >skip0105
                       >
12c8 : 28              >            plp         ;restore status
                        
                                set_x $fe,$ff
                       >            load_flag $ff
12c9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
12cb : 48              >            pha         ;use stack to load status
12cc : a2fe            >            ldx #$fe     ;precharge index x
12ce : 28              >            plp
                        
12cf : fa                       plx
                                tst_x 1,$ff-zero-minus
12d0 : 08              >            php         ;save flags
12d1 : 08              >            php
12d2 : e001            >            cpx #1     ;test result
                       >            trap_ne
12d4 : f003            >        beq skip0110
                       >        trap            ;failed not equal (non zero)
12d6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12d9 :                 >skip0110
                       >
12d9 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero-minus
12da : c97d            >            cmp #($ff-zero-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
12dc : f003            >        beq skip0113
                       >        trap            ;failed not equal (non zero)
12de : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12e1 :                 >skip0113
                       >
12e1 : 28              >            plp         ;restore status
                        
                                set_x 0,0
                       >            load_flag 0
12e2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
12e4 : 48              >            pha         ;use stack to load status
12e5 : a200            >            ldx #0     ;precharge index x
12e7 : 28              >            plp
                        
12e8 : fa                       plx
                                tst_x $ff,minus
12e9 : 08              >            php         ;save flags
12ea : 08              >            php
12eb : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
12ed : f003            >        beq skip0118
                       >        trap            ;failed not equal (non zero)
12ef : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12f2 :                 >skip0118
                       >
12f2 : 68              >            pla         ;load status
                       >            cmp_flag minus
12f3 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
12f5 : f003            >        beq skip0121
                       >        trap            ;failed not equal (non zero)
12f7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12fa :                 >skip0121
                       >
12fa : 28              >            plp         ;restore status
                        
                                set_x $ff,$ff
                       >            load_flag $ff
12fb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
12fd : 48              >            pha         ;use stack to load status
12fe : a2ff            >            ldx #$ff     ;precharge index x
1300 : 28              >            plp
                        
1301 : fa                       plx
                                tst_x 0,$ff-minus
1302 : 08              >            php         ;save flags
1303 : 08              >            php
1304 : e000            >            cpx #0     ;test result
                       >            trap_ne
1306 : f003            >        beq skip0126
                       >        trap            ;failed not equal (non zero)
1308 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
130b :                 >skip0126
                       >
130b : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
130c : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
130e : f003            >        beq skip0129
                       >        trap            ;failed not equal (non zero)
1310 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1313 :                 >skip0129
                       >
1313 : 28              >            plp         ;restore status
                        
                                set_x $fe,0
                       >            load_flag 0
1314 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1316 : 48              >            pha         ;use stack to load status
1317 : a2fe            >            ldx #$fe     ;precharge index x
1319 : 28              >            plp
                        
131a : fa                       plx
                                tst_x 1,0
131b : 08              >            php         ;save flags
131c : 08              >            php
131d : e001            >            cpx #1     ;test result
                       >            trap_ne
131f : f003            >        beq skip0134
                       >        trap            ;failed not equal (non zero)
1321 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1324 :                 >skip0134
                       >
1324 : 68              >            pla         ;load status
                       >            cmp_flag 0
1325 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1327 : f003            >        beq skip0137
                       >        trap            ;failed not equal (non zero)
1329 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
132c :                 >skip0137
                       >
132c : 28              >            plp         ;restore status
                        
132d : c0aa                     cpy #$aa        ;Y unchanged
                                trap_ne
132f : f003            >        beq skip0139
                       >        trap            ;failed not equal (non zero)
1331 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1334 :                 >skip0139
                        
                                next_test            
1334 : ad0202          >            lda test_case   ;previous test
1337 : c902            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1339 : f003            >        beq skip0142
                       >        trap            ;failed not equal (non zero)
133b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
133e :                 >skip0142
                       >
0003 =                 >test_num = test_num + 1
133e : a903            >            lda #test_num   ;*** next tests' number
1340 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            check_ram       ;uncomment to find altered RAM after each test
1343 : d8              >            cld
1344 : a900            >            lda #0
1346 : 8510            >            sta zpt         ;set low byte of indirect pointer
1348 : 8513            >            sta zpt+3       ;checksum high byte
134a : a20b            >            ldx #11         ;reset modifiable RAM
134c : 9df902          >ccs10144      sta jxi_tab,x   ;JMP indirect page cross area
134f : ca              >            dex
1350 : 10fa            >            bpl ccs10144
1352 : 8dd144          >            sta chkdadi     ;self modifying code
1355 : 8dee44          >            sta chkdsbi
1358 : 18              >            clc
1359 : a207            >            ldx #zp_bss-zero_page ;zeropage - write test area
135b : 7510            >ccs30144      adc zero_page,x
135d : 9003            >            bcc ccs20144
135f : e613            >            inc zpt+3       ;carry to high byte
1361 : 18              >            clc
1362 : e8              >ccs20144      inx
1363 : d0f6            >            bne ccs30144
1365 : a202            >            ldx #hi(data_segment) ;set high byte of indirect pointer
1367 : 8611            >            stx zpt+1
1369 : a00a            >            ldy #lo(data_bss) ;data after write test area
136b : 7110            >ccs50144      adc (zpt),y
136d : 9003            >            bcc ccs40144
136f : e613            >            inc zpt+3       ;carry to high byte
1371 : 18              >            clc
1372 : c8              >ccs40144      iny
1373 : d0f6            >            bne ccs50144
1375 : e8              >            inx             ;advance RAM high address
1376 : 8611            >            stx zpt+1
1378 : e0e0            >            cpx #ram_top
137a : d0ef            >            bne ccs50144
137c : 8512            >            sta zpt+2       ;checksum low is
137e : cd0302          >            cmp ram_chksm   ;checksum low expected
                       >            trap_ne         ;checksum mismatch
1381 : f003            >        beq skip0145
                       >        trap            ;failed not equal (non zero)
1383 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1386 :                 >skip0145
                       >
1386 : a513            >            lda zpt+3       ;checksum high is
1388 : cd0402          >            cmp ram_chksm+1 ;checksum high expected
                       >            trap_ne         ;checksum mismatch
138b : f003            >        beq skip0147
                       >        trap            ;failed not equal (non zero)
138d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1390 :                 >skip0147
                       >
                       >
                        
                         
1390 : 8d04ef            sta $ef04
1393 : 74657374205048..  db "test PHY does not alter flags or Y but PLY does", 10, 0
13c4 : a255                     ldx #$55        ;x & a protected
                                set_y 1,$ff     ;push
                       >            load_flag $ff     
13c6 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
13c8 : 48              >            pha         ;use stack to load status
13c9 : a001            >            ldy #1     ;precharge index y
13cb : 28              >            plp
                        
13cc : 5a                       phy
                                tst_y 1,$ff
13cd : 08              >            php         ;save flags
13ce : 08              >            php
13cf : c001            >            cpy #1     ;test result
                       >            trap_ne
13d1 : f003            >        beq skip0152
                       >        trap            ;failed not equal (non zero)
13d3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
13d6 :                 >skip0152
                       >
13d6 : 68              >            pla         ;load status
                       >            cmp_flag $ff
13d7 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
13d9 : f003            >        beq skip0155
                       >        trap            ;failed not equal (non zero)
13db : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
13de :                 >skip0155
                       >
13de : 28              >            plp         ;restore status
                        
                                set_y 0,0
                       >            load_flag 0
13df : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
13e1 : 48              >            pha         ;use stack to load status
13e2 : a000            >            ldy #0     ;precharge index y
13e4 : 28              >            plp
                        
13e5 : 5a                       phy
                                tst_y 0,0
13e6 : 08              >            php         ;save flags
13e7 : 08              >            php
13e8 : c000            >            cpy #0     ;test result
                       >            trap_ne
13ea : f003            >        beq skip0160
                       >        trap            ;failed not equal (non zero)
13ec : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
13ef :                 >skip0160
                       >
13ef : 68              >            pla         ;load status
                       >            cmp_flag 0
13f0 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
13f2 : f003            >        beq skip0163
                       >        trap            ;failed not equal (non zero)
13f4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
13f7 :                 >skip0163
                       >
13f7 : 28              >            plp         ;restore status
                        
                                set_y $ff,$ff
                       >            load_flag $ff
13f8 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
13fa : 48              >            pha         ;use stack to load status
13fb : a0ff            >            ldy #$ff     ;precharge index y
13fd : 28              >            plp
                        
13fe : 5a                       phy
                                tst_y $ff,$ff
13ff : 08              >            php         ;save flags
1400 : 08              >            php
1401 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
1403 : f003            >        beq skip0168
                       >        trap            ;failed not equal (non zero)
1405 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1408 :                 >skip0168
                       >
1408 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1409 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
140b : f003            >        beq skip0171
                       >        trap            ;failed not equal (non zero)
140d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1410 :                 >skip0171
                       >
1410 : 28              >            plp         ;restore status
                        
                                set_y 1,0
                       >            load_flag 0
1411 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1413 : 48              >            pha         ;use stack to load status
1414 : a001            >            ldy #1     ;precharge index y
1416 : 28              >            plp
                        
1417 : 5a                       phy
                                tst_y 1,0
1418 : 08              >            php         ;save flags
1419 : 08              >            php
141a : c001            >            cpy #1     ;test result
                       >            trap_ne
141c : f003            >        beq skip0176
                       >        trap            ;failed not equal (non zero)
141e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1421 :                 >skip0176
                       >
1421 : 68              >            pla         ;load status
                       >            cmp_flag 0
1422 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1424 : f003            >        beq skip0179
                       >        trap            ;failed not equal (non zero)
1426 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1429 :                 >skip0179
                       >
1429 : 28              >            plp         ;restore status
                        
                                set_y 0,$ff
                       >            load_flag $ff
142a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
142c : 48              >            pha         ;use stack to load status
142d : a000            >            ldy #0     ;precharge index y
142f : 28              >            plp
                        
1430 : 5a                       phy
                                tst_y 0,$ff
1431 : 08              >            php         ;save flags
1432 : 08              >            php
1433 : c000            >            cpy #0     ;test result
                       >            trap_ne
1435 : f003            >        beq skip0184
                       >        trap            ;failed not equal (non zero)
1437 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
143a :                 >skip0184
                       >
143a : 68              >            pla         ;load status
                       >            cmp_flag $ff
143b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
143d : f003            >        beq skip0187
                       >        trap            ;failed not equal (non zero)
143f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1442 :                 >skip0187
                       >
1442 : 28              >            plp         ;restore status
                        
                                set_y $ff,0
                       >            load_flag 0
1443 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1445 : 48              >            pha         ;use stack to load status
1446 : a0ff            >            ldy #$ff     ;precharge index y
1448 : 28              >            plp
                        
1449 : 5a                       phy
                                tst_y $ff,0
144a : 08              >            php         ;save flags
144b : 08              >            php
144c : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
144e : f003            >        beq skip0192
                       >        trap            ;failed not equal (non zero)
1450 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1453 :                 >skip0192
                       >
1453 : 68              >            pla         ;load status
                       >            cmp_flag 0
1454 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1456 : f003            >        beq skip0195
                       >        trap            ;failed not equal (non zero)
1458 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
145b :                 >skip0195
                       >
145b : 28              >            plp         ;restore status
                        
                                set_y 0,$ff     ;pull
                       >            load_flag $ff     
145c : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
145e : 48              >            pha         ;use stack to load status
145f : a000            >            ldy #0     ;precharge index y
1461 : 28              >            plp
                        
1462 : 7a                       ply
                                tst_y $ff,$ff-zero
1463 : 08              >            php         ;save flags
1464 : 08              >            php
1465 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
1467 : f003            >        beq skip0200
                       >        trap            ;failed not equal (non zero)
1469 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
146c :                 >skip0200
                       >
146c : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
146d : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
146f : f003            >        beq skip0203
                       >        trap            ;failed not equal (non zero)
1471 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1474 :                 >skip0203
                       >
1474 : 28              >            plp         ;restore status
                        
                                set_y $ff,0
                       >            load_flag 0
1475 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1477 : 48              >            pha         ;use stack to load status
1478 : a0ff            >            ldy #$ff     ;precharge index y
147a : 28              >            plp
                        
147b : 7a                       ply
                                tst_y 0,zero
147c : 08              >            php         ;save flags
147d : 08              >            php
147e : c000            >            cpy #0     ;test result
                       >            trap_ne
1480 : f003            >        beq skip0208
                       >        trap            ;failed not equal (non zero)
1482 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1485 :                 >skip0208
                       >
1485 : 68              >            pla         ;load status
                       >            cmp_flag zero
1486 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1488 : f003            >        beq skip0211
                       >        trap            ;failed not equal (non zero)
148a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
148d :                 >skip0211
                       >
148d : 28              >            plp         ;restore status
                        
                                set_y $fe,$ff
                       >            load_flag $ff
148e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1490 : 48              >            pha         ;use stack to load status
1491 : a0fe            >            ldy #$fe     ;precharge index y
1493 : 28              >            plp
                        
1494 : 7a                       ply
                                tst_y 1,$ff-zero-minus
1495 : 08              >            php         ;save flags
1496 : 08              >            php
1497 : c001            >            cpy #1     ;test result
                       >            trap_ne
1499 : f003            >        beq skip0216
                       >        trap            ;failed not equal (non zero)
149b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
149e :                 >skip0216
                       >
149e : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero-minus
149f : c97d            >            cmp #($ff-zero-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
14a1 : f003            >        beq skip0219
                       >        trap            ;failed not equal (non zero)
14a3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14a6 :                 >skip0219
                       >
14a6 : 28              >            plp         ;restore status
                        
                                set_y 0,0
                       >            load_flag 0
14a7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
14a9 : 48              >            pha         ;use stack to load status
14aa : a000            >            ldy #0     ;precharge index y
14ac : 28              >            plp
                        
14ad : 7a                       ply
                                tst_y $ff,minus
14ae : 08              >            php         ;save flags
14af : 08              >            php
14b0 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
14b2 : f003            >        beq skip0224
                       >        trap            ;failed not equal (non zero)
14b4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14b7 :                 >skip0224
                       >
14b7 : 68              >            pla         ;load status
                       >            cmp_flag minus
14b8 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
14ba : f003            >        beq skip0227
                       >        trap            ;failed not equal (non zero)
14bc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14bf :                 >skip0227
                       >
14bf : 28              >            plp         ;restore status
                        
                                set_y $ff,$ff
                       >            load_flag $ff
14c0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
14c2 : 48              >            pha         ;use stack to load status
14c3 : a0ff            >            ldy #$ff     ;precharge index y
14c5 : 28              >            plp
                        
14c6 : 7a                       ply
                                tst_y 0,$ff-minus
14c7 : 08              >            php         ;save flags
14c8 : 08              >            php
14c9 : c000            >            cpy #0     ;test result
                       >            trap_ne
14cb : f003            >        beq skip0232
                       >        trap            ;failed not equal (non zero)
14cd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14d0 :                 >skip0232
                       >
14d0 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
14d1 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
14d3 : f003            >        beq skip0235
                       >        trap            ;failed not equal (non zero)
14d5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14d8 :                 >skip0235
                       >
14d8 : 28              >            plp         ;restore status
                        
                                set_y $fe,0
                       >            load_flag 0
14d9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
14db : 48              >            pha         ;use stack to load status
14dc : a0fe            >            ldy #$fe     ;precharge index y
14de : 28              >            plp
                        
14df : 7a                       ply
                                tst_y 1,0
14e0 : 08              >            php         ;save flags
14e1 : 08              >            php
14e2 : c001            >            cpy #1     ;test result
                       >            trap_ne
14e4 : f003            >        beq skip0240
                       >        trap            ;failed not equal (non zero)
14e6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14e9 :                 >skip0240
                       >
14e9 : 68              >            pla         ;load status
                       >            cmp_flag 0
14ea : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
14ec : f003            >        beq skip0243
                       >        trap            ;failed not equal (non zero)
14ee : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14f1 :                 >skip0243
                       >
14f1 : 28              >            plp         ;restore status
                        
14f2 : e055                     cpx #$55        ;x unchanged?
                                trap_ne
14f4 : f003            >        beq skip0245
                       >        trap            ;failed not equal (non zero)
14f6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14f9 :                 >skip0245
                        
                                next_test            
14f9 : ad0202          >            lda test_case   ;previous test
14fc : c903            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
14fe : f003            >        beq skip0248
                       >        trap            ;failed not equal (non zero)
1500 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1503 :                 >skip0248
                       >
0004 =                 >test_num = test_num + 1
1503 : a904            >            lda #test_num   ;*** next tests' number
1505 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            check_ram       ;uncomment to find altered RAM after each test
1508 : d8              >            cld
1509 : a900            >            lda #0
150b : 8510            >            sta zpt         ;set low byte of indirect pointer
150d : 8513            >            sta zpt+3       ;checksum high byte
150f : a20b            >            ldx #11         ;reset modifiable RAM
1511 : 9df902          >ccs10250      sta jxi_tab,x   ;JMP indirect page cross area
1514 : ca              >            dex
1515 : 10fa            >            bpl ccs10250
1517 : 8dd144          >            sta chkdadi     ;self modifying code
151a : 8dee44          >            sta chkdsbi
151d : 18              >            clc
151e : a207            >            ldx #zp_bss-zero_page ;zeropage - write test area
1520 : 7510            >ccs30250      adc zero_page,x
1522 : 9003            >            bcc ccs20250
1524 : e613            >            inc zpt+3       ;carry to high byte
1526 : 18              >            clc
1527 : e8              >ccs20250      inx
1528 : d0f6            >            bne ccs30250
152a : a202            >            ldx #hi(data_segment) ;set high byte of indirect pointer
152c : 8611            >            stx zpt+1
152e : a00a            >            ldy #lo(data_bss) ;data after write test area
1530 : 7110            >ccs50250      adc (zpt),y
1532 : 9003            >            bcc ccs40250
1534 : e613            >            inc zpt+3       ;carry to high byte
1536 : 18              >            clc
1537 : c8              >ccs40250      iny
1538 : d0f6            >            bne ccs50250
153a : e8              >            inx             ;advance RAM high address
153b : 8611            >            stx zpt+1
153d : e0e0            >            cpx #ram_top
153f : d0ef            >            bne ccs50250
1541 : 8512            >            sta zpt+2       ;checksum low is
1543 : cd0302          >            cmp ram_chksm   ;checksum low expected
                       >            trap_ne         ;checksum mismatch
1546 : f003            >        beq skip0251
                       >        trap            ;failed not equal (non zero)
1548 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
154b :                 >skip0251
                       >
154b : a513            >            lda zpt+3       ;checksum high is
154d : cd0402          >            cmp ram_chksm+1 ;checksum high expected
                       >            trap_ne         ;checksum mismatch
1550 : f003            >        beq skip0253
                       >        trap            ;failed not equal (non zero)
1552 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1555 :                 >skip0253
                       >
                       >
                        
                         
1555 : 8d04ef            sta $ef04
1558 : 5043206d6f6469..  db "PC modifying instructions (BRA, BBR, BBS, 1, 2, 3 byte NOPs, JMP(abs,x))", 10, 0
15a2 : 8d04ef            sta $ef04
15a5 : 74657374696e67..  db "testing unconditional branch BRA", 10, 0
                        
15c7 : a281                     ldx #$81        ;protect unused registers
15c9 : a07e                     ldy #$7e
                                set_a 0,$ff
                       >            load_flag $ff
15cb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
15cd : 48              >            pha         ;use stack to load status
15ce : a900            >            lda #0     ;precharge accu
15d0 : 28              >            plp
                        
15d1 : 8003                     bra br1         ;branch should always be taken
                                trap 
15d3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
15d6 :                  br1
                                tst_a 0,$ff
15d6 : 08              >            php         ;save flags
15d7 : 08              >            php
15d8 : c900            >            cmp #0     ;test result
                       >            trap_ne
15da : f003            >        beq skip0259
                       >        trap            ;failed not equal (non zero)
15dc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15df :                 >skip0259
                       >
15df : 68              >            pla         ;load status
                       >            cmp_flag $ff
15e0 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
15e2 : f003            >        beq skip0262
                       >        trap            ;failed not equal (non zero)
15e4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15e7 :                 >skip0262
                       >
15e7 : 28              >            plp         ;restore status
                        
                                set_a $ff,0
                       >            load_flag 0
15e8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
15ea : 48              >            pha         ;use stack to load status
15eb : a9ff            >            lda #$ff     ;precharge accu
15ed : 28              >            plp
                        
15ee : 8003                     bra br2         ;branch should always be taken
                                trap 
15f0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
15f3 :                  br2
                                tst_a $ff,0
15f3 : 08              >            php         ;save flags
15f4 : 08              >            php
15f5 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
15f7 : f003            >        beq skip0268
                       >        trap            ;failed not equal (non zero)
15f9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15fc :                 >skip0268
                       >
15fc : 68              >            pla         ;load status
                       >            cmp_flag 0
15fd : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
15ff : f003            >        beq skip0271
                       >        trap            ;failed not equal (non zero)
1601 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1604 :                 >skip0271
                       >
1604 : 28              >            plp         ;restore status
                        
1605 : e081                     cpx #$81
                                trap_ne
1607 : f003            >        beq skip0273
                       >        trap            ;failed not equal (non zero)
1609 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
160c :                 >skip0273
                        
160c : c07e                     cpy #$7e
                                trap_ne
160e : f003            >        beq skip0275
                       >        trap            ;failed not equal (non zero)
1610 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1613 :                 >skip0275
                        
                                next_test            
1613 : ad0202          >            lda test_case   ;previous test
1616 : c904            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1618 : f003            >        beq skip0278
                       >        trap            ;failed not equal (non zero)
161a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
161d :                 >skip0278
                       >
0005 =                 >test_num = test_num + 1
161d : a905            >            lda #test_num   ;*** next tests' number
161f : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            check_ram       ;uncomment to find altered RAM after each test
1622 : d8              >            cld
1623 : a900            >            lda #0
1625 : 8510            >            sta zpt         ;set low byte of indirect pointer
1627 : 8513            >            sta zpt+3       ;checksum high byte
1629 : a20b            >            ldx #11         ;reset modifiable RAM
162b : 9df902          >ccs10280      sta jxi_tab,x   ;JMP indirect page cross area
162e : ca              >            dex
162f : 10fa            >            bpl ccs10280
1631 : 8dd144          >            sta chkdadi     ;self modifying code
1634 : 8dee44          >            sta chkdsbi
1637 : 18              >            clc
1638 : a207            >            ldx #zp_bss-zero_page ;zeropage - write test area
163a : 7510            >ccs30280      adc zero_page,x
163c : 9003            >            bcc ccs20280
163e : e613            >            inc zpt+3       ;carry to high byte
1640 : 18              >            clc
1641 : e8              >ccs20280      inx
1642 : d0f6            >            bne ccs30280
1644 : a202            >            ldx #hi(data_segment) ;set high byte of indirect pointer
1646 : 8611            >            stx zpt+1
1648 : a00a            >            ldy #lo(data_bss) ;data after write test area
164a : 7110            >ccs50280      adc (zpt),y
164c : 9003            >            bcc ccs40280
164e : e613            >            inc zpt+3       ;carry to high byte
1650 : 18              >            clc
1651 : c8              >ccs40280      iny
1652 : d0f6            >            bne ccs50280
1654 : e8              >            inx             ;advance RAM high address
1655 : 8611            >            stx zpt+1
1657 : e0e0            >            cpx #ram_top
1659 : d0ef            >            bne ccs50280
165b : 8512            >            sta zpt+2       ;checksum low is
165d : cd0302          >            cmp ram_chksm   ;checksum low expected
                       >            trap_ne         ;checksum mismatch
1660 : f003            >        beq skip0281
                       >        trap            ;failed not equal (non zero)
1662 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1665 :                 >skip0281
                       >
1665 : a513            >            lda zpt+3       ;checksum high is
1667 : cd0402          >            cmp ram_chksm+1 ;checksum high expected
                       >            trap_ne         ;checksum mismatch
166a : f003            >        beq skip0283
                       >        trap            ;failed not equal (non zero)
166c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
166f :                 >skip0283
                       >
                       >
                        
                                
166f : a000                     ldy #0          ;branch range test  
1671 : 8076                     bra bra0
                                
1673 : c001             bra1    cpy #1
                                trap_ne         ;long range backward
1675 : f003            >        beq skip0285
                       >        trap            ;failed not equal (non zero)
1677 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
167a :                 >skip0285
                        
167a : c8                       iny        
167b : 8062                     bra bra2
                                        
167d : c003             bra3    cpy #3
                                trap_ne         ;long range backward
167f : f003            >        beq skip0287
                       >        trap            ;failed not equal (non zero)
1681 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1684 :                 >skip0287
                        
1684 : c8                       iny        
1685 : 804e                     bra bra4
                                        
1687 : c005             bra5    cpy #5
                                trap_ne         ;long range backward
1689 : f003            >        beq skip0289
                       >        trap            ;failed not equal (non zero)
168b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
168e :                 >skip0289
                        
168e : c8                       iny        
168f : a000                     ldy #0
1691 : 8004                     bra brf0
                                
1693 : c8                       iny
1694 : c8                       iny
1695 : c8                       iny
1696 : c8                       iny        
1697 : 8003             brf0    bra brf1
                        
1699 : c8                       iny
169a : c8                       iny
169b : c8                       iny
169c : c8               brf1    iny        
169d : 8002                     bra brf2
                                
169f : c8                       iny
16a0 : c8                       iny
16a1 : c8               brf2    iny
16a2 : c8                       iny        
16a3 : 8001                     bra brf3
                                
16a5 : c8                       iny
16a6 : c8               brf3    iny
16a7 : c8                       iny
16a8 : c8                       iny        
16a9 : 8000                     bra brf4
                                
16ab : c8               brf4    iny
16ac : c8                       iny
16ad : c8                       iny
16ae : c8                       iny
16af : c00a                     cpy #10
                                trap_ne     ;short range forward
16b1 : f003            >        beq skip0291
                       >        trap            ;failed not equal (non zero)
16b3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16b6 :                 >skip0291
                        
16b6 : 8012                     bra brb0
                        
16b8 : 88               brb4    dey
16b9 : 88                       dey
16ba : 88                       dey
16bb : 88                       dey
16bc : 800e                     bra brb5        
                        
16be : 88               brb3    dey
16bf : 88                       dey
16c0 : 88                       dey
16c1 : 80f5                     bra brb4        
                        
16c3 : 88               brb2    dey
16c4 : 88                       dey
16c5 : 80f7                     bra brb3        
                        
16c7 : 88               brb1    dey
16c8 : 80f9                     bra brb2        
                        
16ca : 80fb             brb0    bra brb1        
                        
16cc : c000             brb5    cpy #0
                                trap_ne     ;short range backward
16ce : f003            >        beq skip0293
                       >        trap            ;failed not equal (non zero)
16d0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16d3 :                 >skip0293
                        
16d3 : 801e                     bra bra6
                        
16d5 : c004             bra4    cpy #4
                                trap_ne     ;long range forward
16d7 : f003            >        beq skip0295
                       >        trap            ;failed not equal (non zero)
16d9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16dc :                 >skip0295
                        
16dc : c8                       iny        
16dd : 80a8                     bra bra5
                                        
16df : c002             bra2    cpy #2
                                trap_ne     ;long range forward
16e1 : f003            >        beq skip0297
                       >        trap            ;failed not equal (non zero)
16e3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16e6 :                 >skip0297
                        
16e6 : c8                       iny        
16e7 : 8094                     bra bra3
                                        
16e9 : c000             bra0    cpy #0
                                trap_ne     ;long range forward
16eb : f003            >        beq skip0299
                       >        trap            ;failed not equal (non zero)
16ed : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16f0 :                 >skip0299
                        
16f0 : c8                       iny        
16f1 : 8080                     bra bra1
                                        
16f3 :                  bra6
                                next_test
16f3 : ad0202          >            lda test_case   ;previous test
16f6 : c905            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
16f8 : f003            >        beq skip0302
                       >        trap            ;failed not equal (non zero)
16fa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16fd :                 >skip0302
                       >
0006 =                 >test_num = test_num + 1
16fd : a906            >            lda #test_num   ;*** next tests' number
16ff : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            check_ram       ;uncomment to find altered RAM after each test
1702 : d8              >            cld
1703 : a900            >            lda #0
1705 : 8510            >            sta zpt         ;set low byte of indirect pointer
1707 : 8513            >            sta zpt+3       ;checksum high byte
1709 : a20b            >            ldx #11         ;reset modifiable RAM
170b : 9df902          >ccs10304      sta jxi_tab,x   ;JMP indirect page cross area
170e : ca              >            dex
170f : 10fa            >            bpl ccs10304
1711 : 8dd144          >            sta chkdadi     ;self modifying code
1714 : 8dee44          >            sta chkdsbi
1717 : 18              >            clc
1718 : a207            >            ldx #zp_bss-zero_page ;zeropage - write test area
171a : 7510            >ccs30304      adc zero_page,x
171c : 9003            >            bcc ccs20304
171e : e613            >            inc zpt+3       ;carry to high byte
1720 : 18              >            clc
1721 : e8              >ccs20304      inx
1722 : d0f6            >            bne ccs30304
1724 : a202            >            ldx #hi(data_segment) ;set high byte of indirect pointer
1726 : 8611            >            stx zpt+1
1728 : a00a            >            ldy #lo(data_bss) ;data after write test area
172a : 7110            >ccs50304      adc (zpt),y
172c : 9003            >            bcc ccs40304
172e : e613            >            inc zpt+3       ;carry to high byte
1730 : 18              >            clc
1731 : c8              >ccs40304      iny
1732 : d0f6            >            bne ccs50304
1734 : e8              >            inx             ;advance RAM high address
1735 : 8611            >            stx zpt+1
1737 : e0e0            >            cpx #ram_top
1739 : d0ef            >            bne ccs50304
173b : 8512            >            sta zpt+2       ;checksum low is
173d : cd0302          >            cmp ram_chksm   ;checksum low expected
                       >            trap_ne         ;checksum mismatch
1740 : f003            >        beq skip0305
                       >        trap            ;failed not equal (non zero)
1742 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1745 :                 >skip0305
                       >
1745 : a513            >            lda zpt+3       ;checksum high is
1747 : cd0402          >            cmp ram_chksm+1 ;checksum high expected
                       >            trap_ne         ;checksum mismatch
174a : f003            >        beq skip0307
                       >        trap            ;failed not equal (non zero)
174c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
174f :                 >skip0307
                       >
                       >
                        
                                
                            if rkwl_wdc_op = 1
174f : 8d04ef            sta $ef04
1752 : 74657374696e67..  db "testing BBR & BBS", 10, 0
                        
                        bbt     macro           ;\1 = bitnum
                                lda #(1<<\1)    ;testing 1 bit on
                                sta zpt
                                set_a $33,0     ;with flags off
                                bbr \1,zpt,fail1\?
                                bbs \1,zpt,ok1\?
                                trap            ;bbs branch not taken
                        fail1\?
                                trap            ;bbr branch taken
                        ok1\?   
                                tst_a $33,0
                                set_a $cc,$ff   ;with flags on
                                bbr \1,zpt,fail2\?
                                bbs \1,zpt,ok2\?
                                trap            ;bbs branch not taken
                        fail2\? 
                                trap            ;bbr branch taken
                        ok2\?   
                                tst_a $cc,$ff
                                lda zpt
                                cmp #(1<<\1)
                                trap_ne         ;zp altered
                                lda #$ff-(1<<\1) ;testing 1 bit off
                                sta zpt
                                set_a $33,0     ;with flags off
                                bbs \1,zpt,fail3\?
                                bbr \1,zpt,ok3\?
                                trap            ;bbr branch not taken
                        fail3\? 
                                trap            ;bbs branch taken
                        ok3\?   
                                tst_a $33,0
                                set_a $cc,$ff   ;with flags on
                                bbs \1,zpt,fail4\?
                                bbr \1,zpt,ok4\?
                                trap            ;bbr branch not taken
                        fail4\? 
                                trap            ;bbs branch taken
                        ok4\?   
                                tst_a $cc,$ff
                                lda zpt
                                cmp #$ff-(1<<\1)
                                trap_ne         ;zp altered
                                endm
                        
1765 : a211                     ldx #$11        ;test bbr/bbs integrity
1767 : a022                     ldy #$22
                                bbt 0
1769 : a901            >        lda #(1<<0)    ;testing 1 bit on
176b : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
176d : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
176f : 48              >            pha         ;use stack to load status
1770 : a933            >            lda #$33     ;precharge accu
1772 : 28              >            plp
                       >
1773 : 0f1006          >        bbr 0,zpt,fail10309
1776 : 8f1006          >        bbs 0,zpt,ok10309
                       >        trap            ;bbs branch not taken
1779 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
177c :                 >fail10309
                       >        trap            ;bbr branch taken
177c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
177f :                 >ok10309   
                       >        tst_a $33,0
177f : 08              >            php         ;save flags
1780 : 08              >            php
1781 : c933            >            cmp #$33     ;test result
                       >            trap_ne
1783 : f003            >        beq skip0315
                       >        trap            ;failed not equal (non zero)
1785 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1788 :                 >skip0315
                       >
1788 : 68              >            pla         ;load status
                       >            cmp_flag 0
1789 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
178b : f003            >        beq skip0318
                       >        trap            ;failed not equal (non zero)
178d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1790 :                 >skip0318
                       >
1790 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1791 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1793 : 48              >            pha         ;use stack to load status
1794 : a9cc            >            lda #$cc     ;precharge accu
1796 : 28              >            plp
                       >
1797 : 0f1006          >        bbr 0,zpt,fail20309
179a : 8f1006          >        bbs 0,zpt,ok20309
                       >        trap            ;bbs branch not taken
179d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17a0 :                 >fail20309 
                       >        trap            ;bbr branch taken
17a0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17a3 :                 >ok20309   
                       >        tst_a $cc,$ff
17a3 : 08              >            php         ;save flags
17a4 : 08              >            php
17a5 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
17a7 : f003            >        beq skip0325
                       >        trap            ;failed not equal (non zero)
17a9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17ac :                 >skip0325
                       >
17ac : 68              >            pla         ;load status
                       >            cmp_flag $ff
17ad : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
17af : f003            >        beq skip0328
                       >        trap            ;failed not equal (non zero)
17b1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17b4 :                 >skip0328
                       >
17b4 : 28              >            plp         ;restore status
                       >
17b5 : a510            >        lda zpt
17b7 : c901            >        cmp #(1<<0)
                       >        trap_ne         ;zp altered
17b9 : f003            >        beq skip0330
                       >        trap            ;failed not equal (non zero)
17bb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17be :                 >skip0330
                       >
17be : a9fe            >        lda #$ff-(1<<0) ;testing 1 bit off
17c0 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
17c2 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
17c4 : 48              >            pha         ;use stack to load status
17c5 : a933            >            lda #$33     ;precharge accu
17c7 : 28              >            plp
                       >
17c8 : 8f1006          >        bbs 0,zpt,fail30309
17cb : 0f1006          >        bbr 0,zpt,ok30309
                       >        trap            ;bbr branch not taken
17ce : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17d1 :                 >fail30309 
                       >        trap            ;bbs branch taken
17d1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17d4 :                 >ok30309   
                       >        tst_a $33,0
17d4 : 08              >            php         ;save flags
17d5 : 08              >            php
17d6 : c933            >            cmp #$33     ;test result
                       >            trap_ne
17d8 : f003            >        beq skip0337
                       >        trap            ;failed not equal (non zero)
17da : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17dd :                 >skip0337
                       >
17dd : 68              >            pla         ;load status
                       >            cmp_flag 0
17de : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
17e0 : f003            >        beq skip0340
                       >        trap            ;failed not equal (non zero)
17e2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17e5 :                 >skip0340
                       >
17e5 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
17e6 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
17e8 : 48              >            pha         ;use stack to load status
17e9 : a9cc            >            lda #$cc     ;precharge accu
17eb : 28              >            plp
                       >
17ec : 8f1006          >        bbs 0,zpt,fail40309
17ef : 0f1006          >        bbr 0,zpt,ok40309
                       >        trap            ;bbr branch not taken
17f2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17f5 :                 >fail40309 
                       >        trap            ;bbs branch taken
17f5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17f8 :                 >ok40309   
                       >        tst_a $cc,$ff
17f8 : 08              >            php         ;save flags
17f9 : 08              >            php
17fa : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
17fc : f003            >        beq skip0347
                       >        trap            ;failed not equal (non zero)
17fe : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1801 :                 >skip0347
                       >
1801 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1802 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1804 : f003            >        beq skip0350
                       >        trap            ;failed not equal (non zero)
1806 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1809 :                 >skip0350
                       >
1809 : 28              >            plp         ;restore status
                       >
180a : a510            >        lda zpt
180c : c9fe            >        cmp #$ff-(1<<0)
                       >        trap_ne         ;zp altered
180e : f003            >        beq skip0352
                       >        trap            ;failed not equal (non zero)
1810 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1813 :                 >skip0352
                       >
                        
                                bbt 1
1813 : a902            >        lda #(1<<1)    ;testing 1 bit on
1815 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1817 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1819 : 48              >            pha         ;use stack to load status
181a : a933            >            lda #$33     ;precharge accu
181c : 28              >            plp
                       >
181d : 1f1006          >        bbr 1,zpt,fail10354
1820 : 9f1006          >        bbs 1,zpt,ok10354
                       >        trap            ;bbs branch not taken
1823 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1826 :                 >fail10354
                       >        trap            ;bbr branch taken
1826 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1829 :                 >ok10354   
                       >        tst_a $33,0
1829 : 08              >            php         ;save flags
182a : 08              >            php
182b : c933            >            cmp #$33     ;test result
                       >            trap_ne
182d : f003            >        beq skip0360
                       >        trap            ;failed not equal (non zero)
182f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1832 :                 >skip0360
                       >
1832 : 68              >            pla         ;load status
                       >            cmp_flag 0
1833 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1835 : f003            >        beq skip0363
                       >        trap            ;failed not equal (non zero)
1837 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
183a :                 >skip0363
                       >
183a : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
183b : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
183d : 48              >            pha         ;use stack to load status
183e : a9cc            >            lda #$cc     ;precharge accu
1840 : 28              >            plp
                       >
1841 : 1f1006          >        bbr 1,zpt,fail20354
1844 : 9f1006          >        bbs 1,zpt,ok20354
                       >        trap            ;bbs branch not taken
1847 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
184a :                 >fail20354 
                       >        trap            ;bbr branch taken
184a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
184d :                 >ok20354   
                       >        tst_a $cc,$ff
184d : 08              >            php         ;save flags
184e : 08              >            php
184f : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1851 : f003            >        beq skip0370
                       >        trap            ;failed not equal (non zero)
1853 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1856 :                 >skip0370
                       >
1856 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1857 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1859 : f003            >        beq skip0373
                       >        trap            ;failed not equal (non zero)
185b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
185e :                 >skip0373
                       >
185e : 28              >            plp         ;restore status
                       >
185f : a510            >        lda zpt
1861 : c902            >        cmp #(1<<1)
                       >        trap_ne         ;zp altered
1863 : f003            >        beq skip0375
                       >        trap            ;failed not equal (non zero)
1865 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1868 :                 >skip0375
                       >
1868 : a9fd            >        lda #$ff-(1<<1) ;testing 1 bit off
186a : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
186c : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
186e : 48              >            pha         ;use stack to load status
186f : a933            >            lda #$33     ;precharge accu
1871 : 28              >            plp
                       >
1872 : 9f1006          >        bbs 1,zpt,fail30354
1875 : 1f1006          >        bbr 1,zpt,ok30354
                       >        trap            ;bbr branch not taken
1878 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
187b :                 >fail30354 
                       >        trap            ;bbs branch taken
187b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
187e :                 >ok30354   
                       >        tst_a $33,0
187e : 08              >            php         ;save flags
187f : 08              >            php
1880 : c933            >            cmp #$33     ;test result
                       >            trap_ne
1882 : f003            >        beq skip0382
                       >        trap            ;failed not equal (non zero)
1884 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1887 :                 >skip0382
                       >
1887 : 68              >            pla         ;load status
                       >            cmp_flag 0
1888 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
188a : f003            >        beq skip0385
                       >        trap            ;failed not equal (non zero)
188c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
188f :                 >skip0385
                       >
188f : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1890 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1892 : 48              >            pha         ;use stack to load status
1893 : a9cc            >            lda #$cc     ;precharge accu
1895 : 28              >            plp
                       >
1896 : 9f1006          >        bbs 1,zpt,fail40354
1899 : 1f1006          >        bbr 1,zpt,ok40354
                       >        trap            ;bbr branch not taken
189c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
189f :                 >fail40354 
                       >        trap            ;bbs branch taken
189f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18a2 :                 >ok40354   
                       >        tst_a $cc,$ff
18a2 : 08              >            php         ;save flags
18a3 : 08              >            php
18a4 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
18a6 : f003            >        beq skip0392
                       >        trap            ;failed not equal (non zero)
18a8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18ab :                 >skip0392
                       >
18ab : 68              >            pla         ;load status
                       >            cmp_flag $ff
18ac : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
18ae : f003            >        beq skip0395
                       >        trap            ;failed not equal (non zero)
18b0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18b3 :                 >skip0395
                       >
18b3 : 28              >            plp         ;restore status
                       >
18b4 : a510            >        lda zpt
18b6 : c9fd            >        cmp #$ff-(1<<1)
                       >        trap_ne         ;zp altered
18b8 : f003            >        beq skip0397
                       >        trap            ;failed not equal (non zero)
18ba : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18bd :                 >skip0397
                       >
                        
                                bbt 2
18bd : a904            >        lda #(1<<2)    ;testing 1 bit on
18bf : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
18c1 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
18c3 : 48              >            pha         ;use stack to load status
18c4 : a933            >            lda #$33     ;precharge accu
18c6 : 28              >            plp
                       >
18c7 : 2f1006          >        bbr 2,zpt,fail10399
18ca : af1006          >        bbs 2,zpt,ok10399
                       >        trap            ;bbs branch not taken
18cd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18d0 :                 >fail10399
                       >        trap            ;bbr branch taken
18d0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18d3 :                 >ok10399   
                       >        tst_a $33,0
18d3 : 08              >            php         ;save flags
18d4 : 08              >            php
18d5 : c933            >            cmp #$33     ;test result
                       >            trap_ne
18d7 : f003            >        beq skip0405
                       >        trap            ;failed not equal (non zero)
18d9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18dc :                 >skip0405
                       >
18dc : 68              >            pla         ;load status
                       >            cmp_flag 0
18dd : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
18df : f003            >        beq skip0408
                       >        trap            ;failed not equal (non zero)
18e1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18e4 :                 >skip0408
                       >
18e4 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
18e5 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
18e7 : 48              >            pha         ;use stack to load status
18e8 : a9cc            >            lda #$cc     ;precharge accu
18ea : 28              >            plp
                       >
18eb : 2f1006          >        bbr 2,zpt,fail20399
18ee : af1006          >        bbs 2,zpt,ok20399
                       >        trap            ;bbs branch not taken
18f1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18f4 :                 >fail20399 
                       >        trap            ;bbr branch taken
18f4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18f7 :                 >ok20399   
                       >        tst_a $cc,$ff
18f7 : 08              >            php         ;save flags
18f8 : 08              >            php
18f9 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
18fb : f003            >        beq skip0415
                       >        trap            ;failed not equal (non zero)
18fd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1900 :                 >skip0415
                       >
1900 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1901 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1903 : f003            >        beq skip0418
                       >        trap            ;failed not equal (non zero)
1905 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1908 :                 >skip0418
                       >
1908 : 28              >            plp         ;restore status
                       >
1909 : a510            >        lda zpt
190b : c904            >        cmp #(1<<2)
                       >        trap_ne         ;zp altered
190d : f003            >        beq skip0420
                       >        trap            ;failed not equal (non zero)
190f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1912 :                 >skip0420
                       >
1912 : a9fb            >        lda #$ff-(1<<2) ;testing 1 bit off
1914 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1916 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1918 : 48              >            pha         ;use stack to load status
1919 : a933            >            lda #$33     ;precharge accu
191b : 28              >            plp
                       >
191c : af1006          >        bbs 2,zpt,fail30399
191f : 2f1006          >        bbr 2,zpt,ok30399
                       >        trap            ;bbr branch not taken
1922 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1925 :                 >fail30399 
                       >        trap            ;bbs branch taken
1925 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1928 :                 >ok30399   
                       >        tst_a $33,0
1928 : 08              >            php         ;save flags
1929 : 08              >            php
192a : c933            >            cmp #$33     ;test result
                       >            trap_ne
192c : f003            >        beq skip0427
                       >        trap            ;failed not equal (non zero)
192e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1931 :                 >skip0427
                       >
1931 : 68              >            pla         ;load status
                       >            cmp_flag 0
1932 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1934 : f003            >        beq skip0430
                       >        trap            ;failed not equal (non zero)
1936 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1939 :                 >skip0430
                       >
1939 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
193a : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
193c : 48              >            pha         ;use stack to load status
193d : a9cc            >            lda #$cc     ;precharge accu
193f : 28              >            plp
                       >
1940 : af1006          >        bbs 2,zpt,fail40399
1943 : 2f1006          >        bbr 2,zpt,ok40399
                       >        trap            ;bbr branch not taken
1946 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1949 :                 >fail40399 
                       >        trap            ;bbs branch taken
1949 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
194c :                 >ok40399   
                       >        tst_a $cc,$ff
194c : 08              >            php         ;save flags
194d : 08              >            php
194e : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1950 : f003            >        beq skip0437
                       >        trap            ;failed not equal (non zero)
1952 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1955 :                 >skip0437
                       >
1955 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1956 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1958 : f003            >        beq skip0440
                       >        trap            ;failed not equal (non zero)
195a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
195d :                 >skip0440
                       >
195d : 28              >            plp         ;restore status
                       >
195e : a510            >        lda zpt
1960 : c9fb            >        cmp #$ff-(1<<2)
                       >        trap_ne         ;zp altered
1962 : f003            >        beq skip0442
                       >        trap            ;failed not equal (non zero)
1964 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1967 :                 >skip0442
                       >
                        
                                bbt 3
1967 : a908            >        lda #(1<<3)    ;testing 1 bit on
1969 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
196b : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
196d : 48              >            pha         ;use stack to load status
196e : a933            >            lda #$33     ;precharge accu
1970 : 28              >            plp
                       >
1971 : 3f1006          >        bbr 3,zpt,fail10444
1974 : bf1006          >        bbs 3,zpt,ok10444
                       >        trap            ;bbs branch not taken
1977 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
197a :                 >fail10444
                       >        trap            ;bbr branch taken
197a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
197d :                 >ok10444   
                       >        tst_a $33,0
197d : 08              >            php         ;save flags
197e : 08              >            php
197f : c933            >            cmp #$33     ;test result
                       >            trap_ne
1981 : f003            >        beq skip0450
                       >        trap            ;failed not equal (non zero)
1983 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1986 :                 >skip0450
                       >
1986 : 68              >            pla         ;load status
                       >            cmp_flag 0
1987 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1989 : f003            >        beq skip0453
                       >        trap            ;failed not equal (non zero)
198b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
198e :                 >skip0453
                       >
198e : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
198f : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1991 : 48              >            pha         ;use stack to load status
1992 : a9cc            >            lda #$cc     ;precharge accu
1994 : 28              >            plp
                       >
1995 : 3f1006          >        bbr 3,zpt,fail20444
1998 : bf1006          >        bbs 3,zpt,ok20444
                       >        trap            ;bbs branch not taken
199b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
199e :                 >fail20444 
                       >        trap            ;bbr branch taken
199e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19a1 :                 >ok20444   
                       >        tst_a $cc,$ff
19a1 : 08              >            php         ;save flags
19a2 : 08              >            php
19a3 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
19a5 : f003            >        beq skip0460
                       >        trap            ;failed not equal (non zero)
19a7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19aa :                 >skip0460
                       >
19aa : 68              >            pla         ;load status
                       >            cmp_flag $ff
19ab : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
19ad : f003            >        beq skip0463
                       >        trap            ;failed not equal (non zero)
19af : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19b2 :                 >skip0463
                       >
19b2 : 28              >            plp         ;restore status
                       >
19b3 : a510            >        lda zpt
19b5 : c908            >        cmp #(1<<3)
                       >        trap_ne         ;zp altered
19b7 : f003            >        beq skip0465
                       >        trap            ;failed not equal (non zero)
19b9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19bc :                 >skip0465
                       >
19bc : a9f7            >        lda #$ff-(1<<3) ;testing 1 bit off
19be : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
19c0 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
19c2 : 48              >            pha         ;use stack to load status
19c3 : a933            >            lda #$33     ;precharge accu
19c5 : 28              >            plp
                       >
19c6 : bf1006          >        bbs 3,zpt,fail30444
19c9 : 3f1006          >        bbr 3,zpt,ok30444
                       >        trap            ;bbr branch not taken
19cc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19cf :                 >fail30444 
                       >        trap            ;bbs branch taken
19cf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19d2 :                 >ok30444   
                       >        tst_a $33,0
19d2 : 08              >            php         ;save flags
19d3 : 08              >            php
19d4 : c933            >            cmp #$33     ;test result
                       >            trap_ne
19d6 : f003            >        beq skip0472
                       >        trap            ;failed not equal (non zero)
19d8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19db :                 >skip0472
                       >
19db : 68              >            pla         ;load status
                       >            cmp_flag 0
19dc : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
19de : f003            >        beq skip0475
                       >        trap            ;failed not equal (non zero)
19e0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19e3 :                 >skip0475
                       >
19e3 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
19e4 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
19e6 : 48              >            pha         ;use stack to load status
19e7 : a9cc            >            lda #$cc     ;precharge accu
19e9 : 28              >            plp
                       >
19ea : bf1006          >        bbs 3,zpt,fail40444
19ed : 3f1006          >        bbr 3,zpt,ok40444
                       >        trap            ;bbr branch not taken
19f0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19f3 :                 >fail40444 
                       >        trap            ;bbs branch taken
19f3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19f6 :                 >ok40444   
                       >        tst_a $cc,$ff
19f6 : 08              >            php         ;save flags
19f7 : 08              >            php
19f8 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
19fa : f003            >        beq skip0482
                       >        trap            ;failed not equal (non zero)
19fc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19ff :                 >skip0482
                       >
19ff : 68              >            pla         ;load status
                       >            cmp_flag $ff
1a00 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a02 : f003            >        beq skip0485
                       >        trap            ;failed not equal (non zero)
1a04 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a07 :                 >skip0485
                       >
1a07 : 28              >            plp         ;restore status
                       >
1a08 : a510            >        lda zpt
1a0a : c9f7            >        cmp #$ff-(1<<3)
                       >        trap_ne         ;zp altered
1a0c : f003            >        beq skip0487
                       >        trap            ;failed not equal (non zero)
1a0e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a11 :                 >skip0487
                       >
                        
                                bbt 4
1a11 : a910            >        lda #(1<<4)    ;testing 1 bit on
1a13 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1a15 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1a17 : 48              >            pha         ;use stack to load status
1a18 : a933            >            lda #$33     ;precharge accu
1a1a : 28              >            plp
                       >
1a1b : 4f1006          >        bbr 4,zpt,fail10489
1a1e : cf1006          >        bbs 4,zpt,ok10489
                       >        trap            ;bbs branch not taken
1a21 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a24 :                 >fail10489
                       >        trap            ;bbr branch taken
1a24 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a27 :                 >ok10489   
                       >        tst_a $33,0
1a27 : 08              >            php         ;save flags
1a28 : 08              >            php
1a29 : c933            >            cmp #$33     ;test result
                       >            trap_ne
1a2b : f003            >        beq skip0495
                       >        trap            ;failed not equal (non zero)
1a2d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a30 :                 >skip0495
                       >
1a30 : 68              >            pla         ;load status
                       >            cmp_flag 0
1a31 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a33 : f003            >        beq skip0498
                       >        trap            ;failed not equal (non zero)
1a35 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a38 :                 >skip0498
                       >
1a38 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1a39 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1a3b : 48              >            pha         ;use stack to load status
1a3c : a9cc            >            lda #$cc     ;precharge accu
1a3e : 28              >            plp
                       >
1a3f : 4f1006          >        bbr 4,zpt,fail20489
1a42 : cf1006          >        bbs 4,zpt,ok20489
                       >        trap            ;bbs branch not taken
1a45 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a48 :                 >fail20489 
                       >        trap            ;bbr branch taken
1a48 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a4b :                 >ok20489   
                       >        tst_a $cc,$ff
1a4b : 08              >            php         ;save flags
1a4c : 08              >            php
1a4d : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1a4f : f003            >        beq skip0505
                       >        trap            ;failed not equal (non zero)
1a51 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a54 :                 >skip0505
                       >
1a54 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1a55 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a57 : f003            >        beq skip0508
                       >        trap            ;failed not equal (non zero)
1a59 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a5c :                 >skip0508
                       >
1a5c : 28              >            plp         ;restore status
                       >
1a5d : a510            >        lda zpt
1a5f : c910            >        cmp #(1<<4)
                       >        trap_ne         ;zp altered
1a61 : f003            >        beq skip0510
                       >        trap            ;failed not equal (non zero)
1a63 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a66 :                 >skip0510
                       >
1a66 : a9ef            >        lda #$ff-(1<<4) ;testing 1 bit off
1a68 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1a6a : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1a6c : 48              >            pha         ;use stack to load status
1a6d : a933            >            lda #$33     ;precharge accu
1a6f : 28              >            plp
                       >
1a70 : cf1006          >        bbs 4,zpt,fail30489
1a73 : 4f1006          >        bbr 4,zpt,ok30489
                       >        trap            ;bbr branch not taken
1a76 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a79 :                 >fail30489 
                       >        trap            ;bbs branch taken
1a79 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a7c :                 >ok30489   
                       >        tst_a $33,0
1a7c : 08              >            php         ;save flags
1a7d : 08              >            php
1a7e : c933            >            cmp #$33     ;test result
                       >            trap_ne
1a80 : f003            >        beq skip0517
                       >        trap            ;failed not equal (non zero)
1a82 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a85 :                 >skip0517
                       >
1a85 : 68              >            pla         ;load status
                       >            cmp_flag 0
1a86 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a88 : f003            >        beq skip0520
                       >        trap            ;failed not equal (non zero)
1a8a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a8d :                 >skip0520
                       >
1a8d : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1a8e : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1a90 : 48              >            pha         ;use stack to load status
1a91 : a9cc            >            lda #$cc     ;precharge accu
1a93 : 28              >            plp
                       >
1a94 : cf1006          >        bbs 4,zpt,fail40489
1a97 : 4f1006          >        bbr 4,zpt,ok40489
                       >        trap            ;bbr branch not taken
1a9a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a9d :                 >fail40489 
                       >        trap            ;bbs branch taken
1a9d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1aa0 :                 >ok40489   
                       >        tst_a $cc,$ff
1aa0 : 08              >            php         ;save flags
1aa1 : 08              >            php
1aa2 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1aa4 : f003            >        beq skip0527
                       >        trap            ;failed not equal (non zero)
1aa6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1aa9 :                 >skip0527
                       >
1aa9 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1aaa : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1aac : f003            >        beq skip0530
                       >        trap            ;failed not equal (non zero)
1aae : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ab1 :                 >skip0530
                       >
1ab1 : 28              >            plp         ;restore status
                       >
1ab2 : a510            >        lda zpt
1ab4 : c9ef            >        cmp #$ff-(1<<4)
                       >        trap_ne         ;zp altered
1ab6 : f003            >        beq skip0532
                       >        trap            ;failed not equal (non zero)
1ab8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1abb :                 >skip0532
                       >
                        
                                bbt 5
1abb : a920            >        lda #(1<<5)    ;testing 1 bit on
1abd : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1abf : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1ac1 : 48              >            pha         ;use stack to load status
1ac2 : a933            >            lda #$33     ;precharge accu
1ac4 : 28              >            plp
                       >
1ac5 : 5f1006          >        bbr 5,zpt,fail10534
1ac8 : df1006          >        bbs 5,zpt,ok10534
                       >        trap            ;bbs branch not taken
1acb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ace :                 >fail10534
                       >        trap            ;bbr branch taken
1ace : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ad1 :                 >ok10534   
                       >        tst_a $33,0
1ad1 : 08              >            php         ;save flags
1ad2 : 08              >            php
1ad3 : c933            >            cmp #$33     ;test result
                       >            trap_ne
1ad5 : f003            >        beq skip0540
                       >        trap            ;failed not equal (non zero)
1ad7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ada :                 >skip0540
                       >
1ada : 68              >            pla         ;load status
                       >            cmp_flag 0
1adb : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1add : f003            >        beq skip0543
                       >        trap            ;failed not equal (non zero)
1adf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ae2 :                 >skip0543
                       >
1ae2 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1ae3 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1ae5 : 48              >            pha         ;use stack to load status
1ae6 : a9cc            >            lda #$cc     ;precharge accu
1ae8 : 28              >            plp
                       >
1ae9 : 5f1006          >        bbr 5,zpt,fail20534
1aec : df1006          >        bbs 5,zpt,ok20534
                       >        trap            ;bbs branch not taken
1aef : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1af2 :                 >fail20534 
                       >        trap            ;bbr branch taken
1af2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1af5 :                 >ok20534   
                       >        tst_a $cc,$ff
1af5 : 08              >            php         ;save flags
1af6 : 08              >            php
1af7 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1af9 : f003            >        beq skip0550
                       >        trap            ;failed not equal (non zero)
1afb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1afe :                 >skip0550
                       >
1afe : 68              >            pla         ;load status
                       >            cmp_flag $ff
1aff : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b01 : f003            >        beq skip0553
                       >        trap            ;failed not equal (non zero)
1b03 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b06 :                 >skip0553
                       >
1b06 : 28              >            plp         ;restore status
                       >
1b07 : a510            >        lda zpt
1b09 : c920            >        cmp #(1<<5)
                       >        trap_ne         ;zp altered
1b0b : f003            >        beq skip0555
                       >        trap            ;failed not equal (non zero)
1b0d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b10 :                 >skip0555
                       >
1b10 : a9df            >        lda #$ff-(1<<5) ;testing 1 bit off
1b12 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1b14 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1b16 : 48              >            pha         ;use stack to load status
1b17 : a933            >            lda #$33     ;precharge accu
1b19 : 28              >            plp
                       >
1b1a : df1006          >        bbs 5,zpt,fail30534
1b1d : 5f1006          >        bbr 5,zpt,ok30534
                       >        trap            ;bbr branch not taken
1b20 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b23 :                 >fail30534 
                       >        trap            ;bbs branch taken
1b23 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b26 :                 >ok30534   
                       >        tst_a $33,0
1b26 : 08              >            php         ;save flags
1b27 : 08              >            php
1b28 : c933            >            cmp #$33     ;test result
                       >            trap_ne
1b2a : f003            >        beq skip0562
                       >        trap            ;failed not equal (non zero)
1b2c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b2f :                 >skip0562
                       >
1b2f : 68              >            pla         ;load status
                       >            cmp_flag 0
1b30 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b32 : f003            >        beq skip0565
                       >        trap            ;failed not equal (non zero)
1b34 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b37 :                 >skip0565
                       >
1b37 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1b38 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1b3a : 48              >            pha         ;use stack to load status
1b3b : a9cc            >            lda #$cc     ;precharge accu
1b3d : 28              >            plp
                       >
1b3e : df1006          >        bbs 5,zpt,fail40534
1b41 : 5f1006          >        bbr 5,zpt,ok40534
                       >        trap            ;bbr branch not taken
1b44 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b47 :                 >fail40534 
                       >        trap            ;bbs branch taken
1b47 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b4a :                 >ok40534   
                       >        tst_a $cc,$ff
1b4a : 08              >            php         ;save flags
1b4b : 08              >            php
1b4c : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1b4e : f003            >        beq skip0572
                       >        trap            ;failed not equal (non zero)
1b50 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b53 :                 >skip0572
                       >
1b53 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1b54 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b56 : f003            >        beq skip0575
                       >        trap            ;failed not equal (non zero)
1b58 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b5b :                 >skip0575
                       >
1b5b : 28              >            plp         ;restore status
                       >
1b5c : a510            >        lda zpt
1b5e : c9df            >        cmp #$ff-(1<<5)
                       >        trap_ne         ;zp altered
1b60 : f003            >        beq skip0577
                       >        trap            ;failed not equal (non zero)
1b62 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b65 :                 >skip0577
                       >
                        
                                bbt 6
1b65 : a940            >        lda #(1<<6)    ;testing 1 bit on
1b67 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1b69 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1b6b : 48              >            pha         ;use stack to load status
1b6c : a933            >            lda #$33     ;precharge accu
1b6e : 28              >            plp
                       >
1b6f : 6f1006          >        bbr 6,zpt,fail10579
1b72 : ef1006          >        bbs 6,zpt,ok10579
                       >        trap            ;bbs branch not taken
1b75 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b78 :                 >fail10579
                       >        trap            ;bbr branch taken
1b78 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b7b :                 >ok10579   
                       >        tst_a $33,0
1b7b : 08              >            php         ;save flags
1b7c : 08              >            php
1b7d : c933            >            cmp #$33     ;test result
                       >            trap_ne
1b7f : f003            >        beq skip0585
                       >        trap            ;failed not equal (non zero)
1b81 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b84 :                 >skip0585
                       >
1b84 : 68              >            pla         ;load status
                       >            cmp_flag 0
1b85 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b87 : f003            >        beq skip0588
                       >        trap            ;failed not equal (non zero)
1b89 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b8c :                 >skip0588
                       >
1b8c : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1b8d : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1b8f : 48              >            pha         ;use stack to load status
1b90 : a9cc            >            lda #$cc     ;precharge accu
1b92 : 28              >            plp
                       >
1b93 : 6f1006          >        bbr 6,zpt,fail20579
1b96 : ef1006          >        bbs 6,zpt,ok20579
                       >        trap            ;bbs branch not taken
1b99 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b9c :                 >fail20579 
                       >        trap            ;bbr branch taken
1b9c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b9f :                 >ok20579   
                       >        tst_a $cc,$ff
1b9f : 08              >            php         ;save flags
1ba0 : 08              >            php
1ba1 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1ba3 : f003            >        beq skip0595
                       >        trap            ;failed not equal (non zero)
1ba5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ba8 :                 >skip0595
                       >
1ba8 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1ba9 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1bab : f003            >        beq skip0598
                       >        trap            ;failed not equal (non zero)
1bad : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bb0 :                 >skip0598
                       >
1bb0 : 28              >            plp         ;restore status
                       >
1bb1 : a510            >        lda zpt
1bb3 : c940            >        cmp #(1<<6)
                       >        trap_ne         ;zp altered
1bb5 : f003            >        beq skip0600
                       >        trap            ;failed not equal (non zero)
1bb7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bba :                 >skip0600
                       >
1bba : a9bf            >        lda #$ff-(1<<6) ;testing 1 bit off
1bbc : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1bbe : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1bc0 : 48              >            pha         ;use stack to load status
1bc1 : a933            >            lda #$33     ;precharge accu
1bc3 : 28              >            plp
                       >
1bc4 : ef1006          >        bbs 6,zpt,fail30579
1bc7 : 6f1006          >        bbr 6,zpt,ok30579
                       >        trap            ;bbr branch not taken
1bca : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bcd :                 >fail30579 
                       >        trap            ;bbs branch taken
1bcd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bd0 :                 >ok30579   
                       >        tst_a $33,0
1bd0 : 08              >            php         ;save flags
1bd1 : 08              >            php
1bd2 : c933            >            cmp #$33     ;test result
                       >            trap_ne
1bd4 : f003            >        beq skip0607
                       >        trap            ;failed not equal (non zero)
1bd6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bd9 :                 >skip0607
                       >
1bd9 : 68              >            pla         ;load status
                       >            cmp_flag 0
1bda : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1bdc : f003            >        beq skip0610
                       >        trap            ;failed not equal (non zero)
1bde : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1be1 :                 >skip0610
                       >
1be1 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1be2 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1be4 : 48              >            pha         ;use stack to load status
1be5 : a9cc            >            lda #$cc     ;precharge accu
1be7 : 28              >            plp
                       >
1be8 : ef1006          >        bbs 6,zpt,fail40579
1beb : 6f1006          >        bbr 6,zpt,ok40579
                       >        trap            ;bbr branch not taken
1bee : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bf1 :                 >fail40579 
                       >        trap            ;bbs branch taken
1bf1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bf4 :                 >ok40579   
                       >        tst_a $cc,$ff
1bf4 : 08              >            php         ;save flags
1bf5 : 08              >            php
1bf6 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1bf8 : f003            >        beq skip0617
                       >        trap            ;failed not equal (non zero)
1bfa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bfd :                 >skip0617
                       >
1bfd : 68              >            pla         ;load status
                       >            cmp_flag $ff
1bfe : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c00 : f003            >        beq skip0620
                       >        trap            ;failed not equal (non zero)
1c02 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c05 :                 >skip0620
                       >
1c05 : 28              >            plp         ;restore status
                       >
1c06 : a510            >        lda zpt
1c08 : c9bf            >        cmp #$ff-(1<<6)
                       >        trap_ne         ;zp altered
1c0a : f003            >        beq skip0622
                       >        trap            ;failed not equal (non zero)
1c0c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c0f :                 >skip0622
                       >
                        
                                bbt 7
1c0f : a980            >        lda #(1<<7)    ;testing 1 bit on
1c11 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1c13 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1c15 : 48              >            pha         ;use stack to load status
1c16 : a933            >            lda #$33     ;precharge accu
1c18 : 28              >            plp
                       >
1c19 : 7f1006          >        bbr 7,zpt,fail10624
1c1c : ff1006          >        bbs 7,zpt,ok10624
                       >        trap            ;bbs branch not taken
1c1f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c22 :                 >fail10624
                       >        trap            ;bbr branch taken
1c22 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c25 :                 >ok10624   
                       >        tst_a $33,0
1c25 : 08              >            php         ;save flags
1c26 : 08              >            php
1c27 : c933            >            cmp #$33     ;test result
                       >            trap_ne
1c29 : f003            >        beq skip0630
                       >        trap            ;failed not equal (non zero)
1c2b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c2e :                 >skip0630
                       >
1c2e : 68              >            pla         ;load status
                       >            cmp_flag 0
1c2f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c31 : f003            >        beq skip0633
                       >        trap            ;failed not equal (non zero)
1c33 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c36 :                 >skip0633
                       >
1c36 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1c37 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1c39 : 48              >            pha         ;use stack to load status
1c3a : a9cc            >            lda #$cc     ;precharge accu
1c3c : 28              >            plp
                       >
1c3d : 7f1006          >        bbr 7,zpt,fail20624
1c40 : ff1006          >        bbs 7,zpt,ok20624
                       >        trap            ;bbs branch not taken
1c43 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c46 :                 >fail20624 
                       >        trap            ;bbr branch taken
1c46 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c49 :                 >ok20624   
                       >        tst_a $cc,$ff
1c49 : 08              >            php         ;save flags
1c4a : 08              >            php
1c4b : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1c4d : f003            >        beq skip0640
                       >        trap            ;failed not equal (non zero)
1c4f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c52 :                 >skip0640
                       >
1c52 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1c53 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c55 : f003            >        beq skip0643
                       >        trap            ;failed not equal (non zero)
1c57 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c5a :                 >skip0643
                       >
1c5a : 28              >            plp         ;restore status
                       >
1c5b : a510            >        lda zpt
1c5d : c980            >        cmp #(1<<7)
                       >        trap_ne         ;zp altered
1c5f : f003            >        beq skip0645
                       >        trap            ;failed not equal (non zero)
1c61 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c64 :                 >skip0645
                       >
1c64 : a97f            >        lda #$ff-(1<<7) ;testing 1 bit off
1c66 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1c68 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1c6a : 48              >            pha         ;use stack to load status
1c6b : a933            >            lda #$33     ;precharge accu
1c6d : 28              >            plp
                       >
1c6e : ff1006          >        bbs 7,zpt,fail30624
1c71 : 7f1006          >        bbr 7,zpt,ok30624
                       >        trap            ;bbr branch not taken
1c74 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c77 :                 >fail30624 
                       >        trap            ;bbs branch taken
1c77 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c7a :                 >ok30624   
                       >        tst_a $33,0
1c7a : 08              >            php         ;save flags
1c7b : 08              >            php
1c7c : c933            >            cmp #$33     ;test result
                       >            trap_ne
1c7e : f003            >        beq skip0652
                       >        trap            ;failed not equal (non zero)
1c80 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c83 :                 >skip0652
                       >
1c83 : 68              >            pla         ;load status
                       >            cmp_flag 0
1c84 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c86 : f003            >        beq skip0655
                       >        trap            ;failed not equal (non zero)
1c88 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c8b :                 >skip0655
                       >
1c8b : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1c8c : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1c8e : 48              >            pha         ;use stack to load status
1c8f : a9cc            >            lda #$cc     ;precharge accu
1c91 : 28              >            plp
                       >
1c92 : ff1006          >        bbs 7,zpt,fail40624
1c95 : 7f1006          >        bbr 7,zpt,ok40624
                       >        trap            ;bbr branch not taken
1c98 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c9b :                 >fail40624 
                       >        trap            ;bbs branch taken
1c9b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c9e :                 >ok40624   
                       >        tst_a $cc,$ff
1c9e : 08              >            php         ;save flags
1c9f : 08              >            php
1ca0 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1ca2 : f003            >        beq skip0662
                       >        trap            ;failed not equal (non zero)
1ca4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ca7 :                 >skip0662
                       >
1ca7 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1ca8 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1caa : f003            >        beq skip0665
                       >        trap            ;failed not equal (non zero)
1cac : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1caf :                 >skip0665
                       >
1caf : 28              >            plp         ;restore status
                       >
1cb0 : a510            >        lda zpt
1cb2 : c97f            >        cmp #$ff-(1<<7)
                       >        trap_ne         ;zp altered
1cb4 : f003            >        beq skip0667
                       >        trap            ;failed not equal (non zero)
1cb6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1cb9 :                 >skip0667
                       >
                        
1cb9 : e011                     cpx #$11
                                trap_ne         ;x overwritten
1cbb : f003            >        beq skip0669
                       >        trap            ;failed not equal (non zero)
1cbd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1cc0 :                 >skip0669
                        
1cc0 : c022                     cpy #$22
                                trap_ne         ;y overwritten
1cc2 : f003            >        beq skip0671
                       >        trap            ;failed not equal (non zero)
1cc4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1cc7 :                 >skip0671
                        
                                next_test 
1cc7 : ad0202          >            lda test_case   ;previous test
1cca : c906            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1ccc : f003            >        beq skip0674
                       >        trap            ;failed not equal (non zero)
1cce : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1cd1 :                 >skip0674
                       >
0007 =                 >test_num = test_num + 1
1cd1 : a907            >            lda #test_num   ;*** next tests' number
1cd3 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            check_ram       ;uncomment to find altered RAM after each test
1cd6 : d8              >            cld
1cd7 : a900            >            lda #0
1cd9 : 8510            >            sta zpt         ;set low byte of indirect pointer
1cdb : 8513            >            sta zpt+3       ;checksum high byte
1cdd : a20b            >            ldx #11         ;reset modifiable RAM
1cdf : 9df902          >ccs10676      sta jxi_tab,x   ;JMP indirect page cross area
1ce2 : ca              >            dex
1ce3 : 10fa            >            bpl ccs10676
1ce5 : 8dd144          >            sta chkdadi     ;self modifying code
1ce8 : 8dee44          >            sta chkdsbi
1ceb : 18              >            clc
1cec : a207            >            ldx #zp_bss-zero_page ;zeropage - write test area
1cee : 7510            >ccs30676      adc zero_page,x
1cf0 : 9003            >            bcc ccs20676
1cf2 : e613            >            inc zpt+3       ;carry to high byte
1cf4 : 18              >            clc
1cf5 : e8              >ccs20676      inx
1cf6 : d0f6            >            bne ccs30676
1cf8 : a202            >            ldx #hi(data_segment) ;set high byte of indirect pointer
1cfa : 8611            >            stx zpt+1
1cfc : a00a            >            ldy #lo(data_bss) ;data after write test area
1cfe : 7110            >ccs50676      adc (zpt),y
1d00 : 9003            >            bcc ccs40676
1d02 : e613            >            inc zpt+3       ;carry to high byte
1d04 : 18              >            clc
1d05 : c8              >ccs40676      iny
1d06 : d0f6            >            bne ccs50676
1d08 : e8              >            inx             ;advance RAM high address
1d09 : 8611            >            stx zpt+1
1d0b : e0e0            >            cpx #ram_top
1d0d : d0ef            >            bne ccs50676
1d0f : 8512            >            sta zpt+2       ;checksum low is
1d11 : cd0302          >            cmp ram_chksm   ;checksum low expected
                       >            trap_ne         ;checksum mismatch
1d14 : f003            >        beq skip0677
                       >        trap            ;failed not equal (non zero)
1d16 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d19 :                 >skip0677
                       >
1d19 : a513            >            lda zpt+3       ;checksum high is
1d1b : cd0402          >            cmp ram_chksm+1 ;checksum high expected
                       >            trap_ne         ;checksum mismatch
1d1e : f003            >        beq skip0679
                       >        trap            ;failed not equal (non zero)
1d20 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d23 :                 >skip0679
                       >
                       >
                        
                        
                        bbrc    macro           ;\1 = bitnum
                                bbr \1,zpt,skip\?
                                eor #(1<<\1)       
                        skip\?
                                endm
                        bbsc    macro           ;\1 = bitnum
                                bbs \1,zpt,skip\?
                                eor #(1<<\1)       
                        skip\?
                                endm
                        
1d23 : a900                     lda #0          ;combined bit test
1d25 : 8510                     sta zpt
1d27 : a900             bbcl    lda #0
                                bbrc 0
1d29 : 0f1002          >        bbr 0,zpt,skip0681
1d2c : 4901            >        eor #(1<<0)       
1d2e :                 >skip0681
                        
                                bbrc 1
1d2e : 1f1002          >        bbr 1,zpt,skip0682
1d31 : 4902            >        eor #(1<<1)       
1d33 :                 >skip0682
                        
                                bbrc 2
1d33 : 2f1002          >        bbr 2,zpt,skip0683
1d36 : 4904            >        eor #(1<<2)       
1d38 :                 >skip0683
                        
                                bbrc 3
1d38 : 3f1002          >        bbr 3,zpt,skip0684
1d3b : 4908            >        eor #(1<<3)       
1d3d :                 >skip0684
                        
                                bbrc 4
1d3d : 4f1002          >        bbr 4,zpt,skip0685
1d40 : 4910            >        eor #(1<<4)       
1d42 :                 >skip0685
                        
                                bbrc 5
1d42 : 5f1002          >        bbr 5,zpt,skip0686
1d45 : 4920            >        eor #(1<<5)       
1d47 :                 >skip0686
                        
                                bbrc 6
1d47 : 6f1002          >        bbr 6,zpt,skip0687
1d4a : 4940            >        eor #(1<<6)       
1d4c :                 >skip0687
                        
                                bbrc 7
1d4c : 7f1002          >        bbr 7,zpt,skip0688
1d4f : 4980            >        eor #(1<<7)       
1d51 :                 >skip0688
                        
1d51 : 4510                     eor zpt
                                trap_ne         ;failed bbr bitnum in accu       
1d53 : f003            >        beq skip0689
                       >        trap            ;failed not equal (non zero)
1d55 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d58 :                 >skip0689
                        
1d58 : a9ff                     lda #$ff
                                bbsc 0
1d5a : 8f1002          >        bbs 0,zpt,skip0691
1d5d : 4901            >        eor #(1<<0)       
1d5f :                 >skip0691
                        
                                bbsc 1
1d5f : 9f1002          >        bbs 1,zpt,skip0692
1d62 : 4902            >        eor #(1<<1)       
1d64 :                 >skip0692
                        
                                bbsc 2
1d64 : af1002          >        bbs 2,zpt,skip0693
1d67 : 4904            >        eor #(1<<2)       
1d69 :                 >skip0693
                        
                                bbsc 3
1d69 : bf1002          >        bbs 3,zpt,skip0694
1d6c : 4908            >        eor #(1<<3)       
1d6e :                 >skip0694
                        
                                bbsc 4
1d6e : cf1002          >        bbs 4,zpt,skip0695
1d71 : 4910            >        eor #(1<<4)       
1d73 :                 >skip0695
                        
                                bbsc 5
1d73 : df1002          >        bbs 5,zpt,skip0696
1d76 : 4920            >        eor #(1<<5)       
1d78 :                 >skip0696
                        
                                bbsc 6
1d78 : ef1002          >        bbs 6,zpt,skip0697
1d7b : 4940            >        eor #(1<<6)       
1d7d :                 >skip0697
                        
                                bbsc 7
1d7d : ff1002          >        bbs 7,zpt,skip0698
1d80 : 4980            >        eor #(1<<7)       
1d82 :                 >skip0698
                        
1d82 : 4510                     eor zpt
                                trap_ne         ;failed bbs bitnum in accu       
1d84 : f003            >        beq skip0699
                       >        trap            ;failed not equal (non zero)
1d86 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d89 :                 >skip0699
                        
1d89 : e610                     inc zpt
1d8b : d09a                     bne bbcl
                                next_test            
1d8d : ad0202          >            lda test_case   ;previous test
1d90 : c907            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1d92 : f003            >        beq skip0702
                       >        trap            ;failed not equal (non zero)
1d94 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d97 :                 >skip0702
                       >
0008 =                 >test_num = test_num + 1
1d97 : a908            >            lda #test_num   ;*** next tests' number
1d99 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            check_ram       ;uncomment to find altered RAM after each test
1d9c : d8              >            cld
1d9d : a900            >            lda #0
1d9f : 8510            >            sta zpt         ;set low byte of indirect pointer
1da1 : 8513            >            sta zpt+3       ;checksum high byte
1da3 : a20b            >            ldx #11         ;reset modifiable RAM
1da5 : 9df902          >ccs10704      sta jxi_tab,x   ;JMP indirect page cross area
1da8 : ca              >            dex
1da9 : 10fa            >            bpl ccs10704
1dab : 8dd144          >            sta chkdadi     ;self modifying code
1dae : 8dee44          >            sta chkdsbi
1db1 : 18              >            clc
1db2 : a207            >            ldx #zp_bss-zero_page ;zeropage - write test area
1db4 : 7510            >ccs30704      adc zero_page,x
1db6 : 9003            >            bcc ccs20704
1db8 : e613            >            inc zpt+3       ;carry to high byte
1dba : 18              >            clc
1dbb : e8              >ccs20704      inx
1dbc : d0f6            >            bne ccs30704
1dbe : a202            >            ldx #hi(data_segment) ;set high byte of indirect pointer
1dc0 : 8611            >            stx zpt+1
1dc2 : a00a            >            ldy #lo(data_bss) ;data after write test area
1dc4 : 7110            >ccs50704      adc (zpt),y
1dc6 : 9003            >            bcc ccs40704
1dc8 : e613            >            inc zpt+3       ;carry to high byte
1dca : 18              >            clc
1dcb : c8              >ccs40704      iny
1dcc : d0f6            >            bne ccs50704
1dce : e8              >            inx             ;advance RAM high address
1dcf : 8611            >            stx zpt+1
1dd1 : e0e0            >            cpx #ram_top
1dd3 : d0ef            >            bne ccs50704
1dd5 : 8512            >            sta zpt+2       ;checksum low is
1dd7 : cd0302          >            cmp ram_chksm   ;checksum low expected
                       >            trap_ne         ;checksum mismatch
1dda : f003            >        beq skip0705
                       >        trap            ;failed not equal (non zero)
1ddc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ddf :                 >skip0705
                       >
1ddf : a513            >            lda zpt+3       ;checksum high is
1de1 : cd0402          >            cmp ram_chksm+1 ;checksum high expected
                       >            trap_ne         ;checksum mismatch
1de4 : f003            >        beq skip0707
                       >        trap            ;failed not equal (non zero)
1de6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1de9 :                 >skip0707
                       >
                       >
                        
                            endif
                            
1de9 : 8d04ef            sta $ef04
1dec : 74657374696e67..  db "testing NOP", 10, 0
                        
                        nop_test    macro       ;\1 = opcode, \2 = # of bytes
                                    ldy #$42
                                    ldx #4-\2
                                    db  \1          ;test nop length
                                if \2 = 1
                                    dex
                                    dex
                                endif
                                if \2 = 2
                                    iny
                                    dex
                                endif
                                if \2 = 3
                                    iny
                                    iny
                                endif
                                    dex
                                    trap_ne         ;wrong number of bytes
                                    set_a $ff-\1,0
                                    db  \1          ;test nop integrity - flags off
                                    nop
                                    nop
                                    tst_a $ff-\1,0
                                    set_a $aa-\1,$ff
                                    db  \1          ;test nop integrity - flags on
                                    nop
                                    nop
                                    tst_a $aa-\1,$ff
                                    cpy #$42
                                    trap_ne         ;y changed
                                    cpx #0
                                    trap_ne         ;x changed
                                    endm
                                    
                                nop_test $02,2
1df9 : a042            >            ldy #$42
1dfb : a202            >            ldx #4-2
1dfd : 02              >            db  $02          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1dfe : c8              >            iny
1dff : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1e00 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1e01 : f003            >        beq skip0710
                       >        trap            ;failed not equal (non zero)
1e03 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e06 :                 >skip0710
                       >
                       >            set_a $ff-$02,0
                       >            load_flag 0
1e06 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1e08 : 48              >            pha         ;use stack to load status
1e09 : a9fd            >            lda #$ff-$02     ;precharge accu
1e0b : 28              >            plp
                       >
1e0c : 02              >            db  $02          ;test nop integrity - flags off
1e0d : ea              >            nop
1e0e : ea              >            nop
                       >            tst_a $ff-$02,0
1e0f : 08              >            php         ;save flags
1e10 : 08              >            php
1e11 : c9fd            >            cmp #$ff-$02     ;test result
                       >            trap_ne
1e13 : f003            >        beq skip0715
                       >        trap            ;failed not equal (non zero)
1e15 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e18 :                 >skip0715
                       >
1e18 : 68              >            pla         ;load status
                       >            cmp_flag 0
1e19 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e1b : f003            >        beq skip0718
                       >        trap            ;failed not equal (non zero)
1e1d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e20 :                 >skip0718
                       >
1e20 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$02,$ff
                       >            load_flag $ff
1e21 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1e23 : 48              >            pha         ;use stack to load status
1e24 : a9a8            >            lda #$aa-$02     ;precharge accu
1e26 : 28              >            plp
                       >
1e27 : 02              >            db  $02          ;test nop integrity - flags on
1e28 : ea              >            nop
1e29 : ea              >            nop
                       >            tst_a $aa-$02,$ff
1e2a : 08              >            php         ;save flags
1e2b : 08              >            php
1e2c : c9a8            >            cmp #$aa-$02     ;test result
                       >            trap_ne
1e2e : f003            >        beq skip0723
                       >        trap            ;failed not equal (non zero)
1e30 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e33 :                 >skip0723
                       >
1e33 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1e34 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e36 : f003            >        beq skip0726
                       >        trap            ;failed not equal (non zero)
1e38 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e3b :                 >skip0726
                       >
1e3b : 28              >            plp         ;restore status
                       >
1e3c : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1e3e : f003            >        beq skip0728
                       >        trap            ;failed not equal (non zero)
1e40 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e43 :                 >skip0728
                       >
1e43 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1e45 : f003            >        beq skip0730
                       >        trap            ;failed not equal (non zero)
1e47 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e4a :                 >skip0730
                       >
                        
                                nop_test $22,2
1e4a : a042            >            ldy #$42
1e4c : a202            >            ldx #4-2
1e4e : 22              >            db  $22          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1e4f : c8              >            iny
1e50 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1e51 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1e52 : f003            >        beq skip0733
                       >        trap            ;failed not equal (non zero)
1e54 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e57 :                 >skip0733
                       >
                       >            set_a $ff-$22,0
                       >            load_flag 0
1e57 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1e59 : 48              >            pha         ;use stack to load status
1e5a : a9dd            >            lda #$ff-$22     ;precharge accu
1e5c : 28              >            plp
                       >
1e5d : 22              >            db  $22          ;test nop integrity - flags off
1e5e : ea              >            nop
1e5f : ea              >            nop
                       >            tst_a $ff-$22,0
1e60 : 08              >            php         ;save flags
1e61 : 08              >            php
1e62 : c9dd            >            cmp #$ff-$22     ;test result
                       >            trap_ne
1e64 : f003            >        beq skip0738
                       >        trap            ;failed not equal (non zero)
1e66 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e69 :                 >skip0738
                       >
1e69 : 68              >            pla         ;load status
                       >            cmp_flag 0
1e6a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e6c : f003            >        beq skip0741
                       >        trap            ;failed not equal (non zero)
1e6e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e71 :                 >skip0741
                       >
1e71 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$22,$ff
                       >            load_flag $ff
1e72 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1e74 : 48              >            pha         ;use stack to load status
1e75 : a988            >            lda #$aa-$22     ;precharge accu
1e77 : 28              >            plp
                       >
1e78 : 22              >            db  $22          ;test nop integrity - flags on
1e79 : ea              >            nop
1e7a : ea              >            nop
                       >            tst_a $aa-$22,$ff
1e7b : 08              >            php         ;save flags
1e7c : 08              >            php
1e7d : c988            >            cmp #$aa-$22     ;test result
                       >            trap_ne
1e7f : f003            >        beq skip0746
                       >        trap            ;failed not equal (non zero)
1e81 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e84 :                 >skip0746
                       >
1e84 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1e85 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e87 : f003            >        beq skip0749
                       >        trap            ;failed not equal (non zero)
1e89 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e8c :                 >skip0749
                       >
1e8c : 28              >            plp         ;restore status
                       >
1e8d : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1e8f : f003            >        beq skip0751
                       >        trap            ;failed not equal (non zero)
1e91 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e94 :                 >skip0751
                       >
1e94 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1e96 : f003            >        beq skip0753
                       >        trap            ;failed not equal (non zero)
1e98 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e9b :                 >skip0753
                       >
                        
                                nop_test $42,2
1e9b : a042            >            ldy #$42
1e9d : a202            >            ldx #4-2
1e9f : 42              >            db  $42          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1ea0 : c8              >            iny
1ea1 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1ea2 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1ea3 : f003            >        beq skip0756
                       >        trap            ;failed not equal (non zero)
1ea5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ea8 :                 >skip0756
                       >
                       >            set_a $ff-$42,0
                       >            load_flag 0
1ea8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1eaa : 48              >            pha         ;use stack to load status
1eab : a9bd            >            lda #$ff-$42     ;precharge accu
1ead : 28              >            plp
                       >
1eae : 42              >            db  $42          ;test nop integrity - flags off
1eaf : ea              >            nop
1eb0 : ea              >            nop
                       >            tst_a $ff-$42,0
1eb1 : 08              >            php         ;save flags
1eb2 : 08              >            php
1eb3 : c9bd            >            cmp #$ff-$42     ;test result
                       >            trap_ne
1eb5 : f003            >        beq skip0761
                       >        trap            ;failed not equal (non zero)
1eb7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1eba :                 >skip0761
                       >
1eba : 68              >            pla         ;load status
                       >            cmp_flag 0
1ebb : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ebd : f003            >        beq skip0764
                       >        trap            ;failed not equal (non zero)
1ebf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ec2 :                 >skip0764
                       >
1ec2 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$42,$ff
                       >            load_flag $ff
1ec3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1ec5 : 48              >            pha         ;use stack to load status
1ec6 : a968            >            lda #$aa-$42     ;precharge accu
1ec8 : 28              >            plp
                       >
1ec9 : 42              >            db  $42          ;test nop integrity - flags on
1eca : ea              >            nop
1ecb : ea              >            nop
                       >            tst_a $aa-$42,$ff
1ecc : 08              >            php         ;save flags
1ecd : 08              >            php
1ece : c968            >            cmp #$aa-$42     ;test result
                       >            trap_ne
1ed0 : f003            >        beq skip0769
                       >        trap            ;failed not equal (non zero)
1ed2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ed5 :                 >skip0769
                       >
1ed5 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1ed6 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ed8 : f003            >        beq skip0772
                       >        trap            ;failed not equal (non zero)
1eda : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1edd :                 >skip0772
                       >
1edd : 28              >            plp         ;restore status
                       >
1ede : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1ee0 : f003            >        beq skip0774
                       >        trap            ;failed not equal (non zero)
1ee2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ee5 :                 >skip0774
                       >
1ee5 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1ee7 : f003            >        beq skip0776
                       >        trap            ;failed not equal (non zero)
1ee9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1eec :                 >skip0776
                       >
                        
                                nop_test $62,2
1eec : a042            >            ldy #$42
1eee : a202            >            ldx #4-2
1ef0 : 62              >            db  $62          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1ef1 : c8              >            iny
1ef2 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1ef3 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1ef4 : f003            >        beq skip0779
                       >        trap            ;failed not equal (non zero)
1ef6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ef9 :                 >skip0779
                       >
                       >            set_a $ff-$62,0
                       >            load_flag 0
1ef9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1efb : 48              >            pha         ;use stack to load status
1efc : a99d            >            lda #$ff-$62     ;precharge accu
1efe : 28              >            plp
                       >
1eff : 62              >            db  $62          ;test nop integrity - flags off
1f00 : ea              >            nop
1f01 : ea              >            nop
                       >            tst_a $ff-$62,0
1f02 : 08              >            php         ;save flags
1f03 : 08              >            php
1f04 : c99d            >            cmp #$ff-$62     ;test result
                       >            trap_ne
1f06 : f003            >        beq skip0784
                       >        trap            ;failed not equal (non zero)
1f08 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f0b :                 >skip0784
                       >
1f0b : 68              >            pla         ;load status
                       >            cmp_flag 0
1f0c : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1f0e : f003            >        beq skip0787
                       >        trap            ;failed not equal (non zero)
1f10 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f13 :                 >skip0787
                       >
1f13 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$62,$ff
                       >            load_flag $ff
1f14 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1f16 : 48              >            pha         ;use stack to load status
1f17 : a948            >            lda #$aa-$62     ;precharge accu
1f19 : 28              >            plp
                       >
1f1a : 62              >            db  $62          ;test nop integrity - flags on
1f1b : ea              >            nop
1f1c : ea              >            nop
                       >            tst_a $aa-$62,$ff
1f1d : 08              >            php         ;save flags
1f1e : 08              >            php
1f1f : c948            >            cmp #$aa-$62     ;test result
                       >            trap_ne
1f21 : f003            >        beq skip0792
                       >        trap            ;failed not equal (non zero)
1f23 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f26 :                 >skip0792
                       >
1f26 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1f27 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1f29 : f003            >        beq skip0795
                       >        trap            ;failed not equal (non zero)
1f2b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f2e :                 >skip0795
                       >
1f2e : 28              >            plp         ;restore status
                       >
1f2f : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1f31 : f003            >        beq skip0797
                       >        trap            ;failed not equal (non zero)
1f33 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f36 :                 >skip0797
                       >
1f36 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1f38 : f003            >        beq skip0799
                       >        trap            ;failed not equal (non zero)
1f3a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f3d :                 >skip0799
                       >
                        
                                nop_test $82,2
1f3d : a042            >            ldy #$42
1f3f : a202            >            ldx #4-2
1f41 : 82              >            db  $82          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1f42 : c8              >            iny
1f43 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1f44 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1f45 : f003            >        beq skip0802
                       >        trap            ;failed not equal (non zero)
1f47 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f4a :                 >skip0802
                       >
                       >            set_a $ff-$82,0
                       >            load_flag 0
1f4a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1f4c : 48              >            pha         ;use stack to load status
1f4d : a97d            >            lda #$ff-$82     ;precharge accu
1f4f : 28              >            plp
                       >
1f50 : 82              >            db  $82          ;test nop integrity - flags off
1f51 : ea              >            nop
1f52 : ea              >            nop
                       >            tst_a $ff-$82,0
1f53 : 08              >            php         ;save flags
1f54 : 08              >            php
1f55 : c97d            >            cmp #$ff-$82     ;test result
                       >            trap_ne
1f57 : f003            >        beq skip0807
                       >        trap            ;failed not equal (non zero)
1f59 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f5c :                 >skip0807
                       >
1f5c : 68              >            pla         ;load status
                       >            cmp_flag 0
1f5d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1f5f : f003            >        beq skip0810
                       >        trap            ;failed not equal (non zero)
1f61 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f64 :                 >skip0810
                       >
1f64 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$82,$ff
                       >            load_flag $ff
1f65 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1f67 : 48              >            pha         ;use stack to load status
1f68 : a928            >            lda #$aa-$82     ;precharge accu
1f6a : 28              >            plp
                       >
1f6b : 82              >            db  $82          ;test nop integrity - flags on
1f6c : ea              >            nop
1f6d : ea              >            nop
                       >            tst_a $aa-$82,$ff
1f6e : 08              >            php         ;save flags
1f6f : 08              >            php
1f70 : c928            >            cmp #$aa-$82     ;test result
                       >            trap_ne
1f72 : f003            >        beq skip0815
                       >        trap            ;failed not equal (non zero)
1f74 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f77 :                 >skip0815
                       >
1f77 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1f78 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1f7a : f003            >        beq skip0818
                       >        trap            ;failed not equal (non zero)
1f7c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f7f :                 >skip0818
                       >
1f7f : 28              >            plp         ;restore status
                       >
1f80 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1f82 : f003            >        beq skip0820
                       >        trap            ;failed not equal (non zero)
1f84 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f87 :                 >skip0820
                       >
1f87 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1f89 : f003            >        beq skip0822
                       >        trap            ;failed not equal (non zero)
1f8b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f8e :                 >skip0822
                       >
                        
                                nop_test $c2,2
1f8e : a042            >            ldy #$42
1f90 : a202            >            ldx #4-2
1f92 : c2              >            db  $c2          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1f93 : c8              >            iny
1f94 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1f95 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1f96 : f003            >        beq skip0825
                       >        trap            ;failed not equal (non zero)
1f98 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f9b :                 >skip0825
                       >
                       >            set_a $ff-$c2,0
                       >            load_flag 0
1f9b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1f9d : 48              >            pha         ;use stack to load status
1f9e : a93d            >            lda #$ff-$c2     ;precharge accu
1fa0 : 28              >            plp
                       >
1fa1 : c2              >            db  $c2          ;test nop integrity - flags off
1fa2 : ea              >            nop
1fa3 : ea              >            nop
                       >            tst_a $ff-$c2,0
1fa4 : 08              >            php         ;save flags
1fa5 : 08              >            php
1fa6 : c93d            >            cmp #$ff-$c2     ;test result
                       >            trap_ne
1fa8 : f003            >        beq skip0830
                       >        trap            ;failed not equal (non zero)
1faa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1fad :                 >skip0830
                       >
1fad : 68              >            pla         ;load status
                       >            cmp_flag 0
1fae : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1fb0 : f003            >        beq skip0833
                       >        trap            ;failed not equal (non zero)
1fb2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1fb5 :                 >skip0833
                       >
1fb5 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$c2,$ff
                       >            load_flag $ff
1fb6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1fb8 : 48              >            pha         ;use stack to load status
1fb9 : a9e8            >            lda #$aa-$c2     ;precharge accu
1fbb : 28              >            plp
                       >
1fbc : c2              >            db  $c2          ;test nop integrity - flags on
1fbd : ea              >            nop
1fbe : ea              >            nop
                       >            tst_a $aa-$c2,$ff
1fbf : 08              >            php         ;save flags
1fc0 : 08              >            php
1fc1 : c9e8            >            cmp #$aa-$c2     ;test result
                       >            trap_ne
1fc3 : f003            >        beq skip0838
                       >        trap            ;failed not equal (non zero)
1fc5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1fc8 :                 >skip0838
                       >
1fc8 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1fc9 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1fcb : f003            >        beq skip0841
                       >        trap            ;failed not equal (non zero)
1fcd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1fd0 :                 >skip0841
                       >
1fd0 : 28              >            plp         ;restore status
                       >
1fd1 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1fd3 : f003            >        beq skip0843
                       >        trap            ;failed not equal (non zero)
1fd5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1fd8 :                 >skip0843
                       >
1fd8 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1fda : f003            >        beq skip0845
                       >        trap            ;failed not equal (non zero)
1fdc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1fdf :                 >skip0845
                       >
                        
                                nop_test $e2,2
1fdf : a042            >            ldy #$42
1fe1 : a202            >            ldx #4-2
1fe3 : e2              >            db  $e2          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1fe4 : c8              >            iny
1fe5 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1fe6 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1fe7 : f003            >        beq skip0848
                       >        trap            ;failed not equal (non zero)
1fe9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1fec :                 >skip0848
                       >
                       >            set_a $ff-$e2,0
                       >            load_flag 0
1fec : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1fee : 48              >            pha         ;use stack to load status
1fef : a91d            >            lda #$ff-$e2     ;precharge accu
1ff1 : 28              >            plp
                       >
1ff2 : e2              >            db  $e2          ;test nop integrity - flags off
1ff3 : ea              >            nop
1ff4 : ea              >            nop
                       >            tst_a $ff-$e2,0
1ff5 : 08              >            php         ;save flags
1ff6 : 08              >            php
1ff7 : c91d            >            cmp #$ff-$e2     ;test result
                       >            trap_ne
1ff9 : f003            >        beq skip0853
                       >        trap            ;failed not equal (non zero)
1ffb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ffe :                 >skip0853
                       >
1ffe : 68              >            pla         ;load status
                       >            cmp_flag 0
1fff : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2001 : f003            >        beq skip0856
                       >        trap            ;failed not equal (non zero)
2003 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2006 :                 >skip0856
                       >
2006 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$e2,$ff
                       >            load_flag $ff
2007 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2009 : 48              >            pha         ;use stack to load status
200a : a9c8            >            lda #$aa-$e2     ;precharge accu
200c : 28              >            plp
                       >
200d : e2              >            db  $e2          ;test nop integrity - flags on
200e : ea              >            nop
200f : ea              >            nop
                       >            tst_a $aa-$e2,$ff
2010 : 08              >            php         ;save flags
2011 : 08              >            php
2012 : c9c8            >            cmp #$aa-$e2     ;test result
                       >            trap_ne
2014 : f003            >        beq skip0861
                       >        trap            ;failed not equal (non zero)
2016 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2019 :                 >skip0861
                       >
2019 : 68              >            pla         ;load status
                       >            cmp_flag $ff
201a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
201c : f003            >        beq skip0864
                       >        trap            ;failed not equal (non zero)
201e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2021 :                 >skip0864
                       >
2021 : 28              >            plp         ;restore status
                       >
2022 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2024 : f003            >        beq skip0866
                       >        trap            ;failed not equal (non zero)
2026 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2029 :                 >skip0866
                       >
2029 : e000            >            cpx #0
                       >            trap_ne         ;x changed
202b : f003            >        beq skip0868
                       >        trap            ;failed not equal (non zero)
202d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2030 :                 >skip0868
                       >
                        
                                nop_test $44,2
2030 : a042            >            ldy #$42
2032 : a202            >            ldx #4-2
2034 : 44              >            db  $44          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
2035 : c8              >            iny
2036 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
2037 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2038 : f003            >        beq skip0871
                       >        trap            ;failed not equal (non zero)
203a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
203d :                 >skip0871
                       >
                       >            set_a $ff-$44,0
                       >            load_flag 0
203d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
203f : 48              >            pha         ;use stack to load status
2040 : a9bb            >            lda #$ff-$44     ;precharge accu
2042 : 28              >            plp
                       >
2043 : 44              >            db  $44          ;test nop integrity - flags off
2044 : ea              >            nop
2045 : ea              >            nop
                       >            tst_a $ff-$44,0
2046 : 08              >            php         ;save flags
2047 : 08              >            php
2048 : c9bb            >            cmp #$ff-$44     ;test result
                       >            trap_ne
204a : f003            >        beq skip0876
                       >        trap            ;failed not equal (non zero)
204c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
204f :                 >skip0876
                       >
204f : 68              >            pla         ;load status
                       >            cmp_flag 0
2050 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2052 : f003            >        beq skip0879
                       >        trap            ;failed not equal (non zero)
2054 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2057 :                 >skip0879
                       >
2057 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$44,$ff
                       >            load_flag $ff
2058 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
205a : 48              >            pha         ;use stack to load status
205b : a966            >            lda #$aa-$44     ;precharge accu
205d : 28              >            plp
                       >
205e : 44              >            db  $44          ;test nop integrity - flags on
205f : ea              >            nop
2060 : ea              >            nop
                       >            tst_a $aa-$44,$ff
2061 : 08              >            php         ;save flags
2062 : 08              >            php
2063 : c966            >            cmp #$aa-$44     ;test result
                       >            trap_ne
2065 : f003            >        beq skip0884
                       >        trap            ;failed not equal (non zero)
2067 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
206a :                 >skip0884
                       >
206a : 68              >            pla         ;load status
                       >            cmp_flag $ff
206b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
206d : f003            >        beq skip0887
                       >        trap            ;failed not equal (non zero)
206f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2072 :                 >skip0887
                       >
2072 : 28              >            plp         ;restore status
                       >
2073 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2075 : f003            >        beq skip0889
                       >        trap            ;failed not equal (non zero)
2077 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
207a :                 >skip0889
                       >
207a : e000            >            cpx #0
                       >            trap_ne         ;x changed
207c : f003            >        beq skip0891
                       >        trap            ;failed not equal (non zero)
207e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2081 :                 >skip0891
                       >
                        
                                nop_test $54,2
2081 : a042            >            ldy #$42
2083 : a202            >            ldx #4-2
2085 : 54              >            db  $54          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
2086 : c8              >            iny
2087 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
2088 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2089 : f003            >        beq skip0894
                       >        trap            ;failed not equal (non zero)
208b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
208e :                 >skip0894
                       >
                       >            set_a $ff-$54,0
                       >            load_flag 0
208e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2090 : 48              >            pha         ;use stack to load status
2091 : a9ab            >            lda #$ff-$54     ;precharge accu
2093 : 28              >            plp
                       >
2094 : 54              >            db  $54          ;test nop integrity - flags off
2095 : ea              >            nop
2096 : ea              >            nop
                       >            tst_a $ff-$54,0
2097 : 08              >            php         ;save flags
2098 : 08              >            php
2099 : c9ab            >            cmp #$ff-$54     ;test result
                       >            trap_ne
209b : f003            >        beq skip0899
                       >        trap            ;failed not equal (non zero)
209d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20a0 :                 >skip0899
                       >
20a0 : 68              >            pla         ;load status
                       >            cmp_flag 0
20a1 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
20a3 : f003            >        beq skip0902
                       >        trap            ;failed not equal (non zero)
20a5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20a8 :                 >skip0902
                       >
20a8 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$54,$ff
                       >            load_flag $ff
20a9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
20ab : 48              >            pha         ;use stack to load status
20ac : a956            >            lda #$aa-$54     ;precharge accu
20ae : 28              >            plp
                       >
20af : 54              >            db  $54          ;test nop integrity - flags on
20b0 : ea              >            nop
20b1 : ea              >            nop
                       >            tst_a $aa-$54,$ff
20b2 : 08              >            php         ;save flags
20b3 : 08              >            php
20b4 : c956            >            cmp #$aa-$54     ;test result
                       >            trap_ne
20b6 : f003            >        beq skip0907
                       >        trap            ;failed not equal (non zero)
20b8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20bb :                 >skip0907
                       >
20bb : 68              >            pla         ;load status
                       >            cmp_flag $ff
20bc : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
20be : f003            >        beq skip0910
                       >        trap            ;failed not equal (non zero)
20c0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20c3 :                 >skip0910
                       >
20c3 : 28              >            plp         ;restore status
                       >
20c4 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
20c6 : f003            >        beq skip0912
                       >        trap            ;failed not equal (non zero)
20c8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20cb :                 >skip0912
                       >
20cb : e000            >            cpx #0
                       >            trap_ne         ;x changed
20cd : f003            >        beq skip0914
                       >        trap            ;failed not equal (non zero)
20cf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20d2 :                 >skip0914
                       >
                        
                                nop_test $d4,2
20d2 : a042            >            ldy #$42
20d4 : a202            >            ldx #4-2
20d6 : d4              >            db  $d4          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
20d7 : c8              >            iny
20d8 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
20d9 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
20da : f003            >        beq skip0917
                       >        trap            ;failed not equal (non zero)
20dc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20df :                 >skip0917
                       >
                       >            set_a $ff-$d4,0
                       >            load_flag 0
20df : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
20e1 : 48              >            pha         ;use stack to load status
20e2 : a92b            >            lda #$ff-$d4     ;precharge accu
20e4 : 28              >            plp
                       >
20e5 : d4              >            db  $d4          ;test nop integrity - flags off
20e6 : ea              >            nop
20e7 : ea              >            nop
                       >            tst_a $ff-$d4,0
20e8 : 08              >            php         ;save flags
20e9 : 08              >            php
20ea : c92b            >            cmp #$ff-$d4     ;test result
                       >            trap_ne
20ec : f003            >        beq skip0922
                       >        trap            ;failed not equal (non zero)
20ee : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20f1 :                 >skip0922
                       >
20f1 : 68              >            pla         ;load status
                       >            cmp_flag 0
20f2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
20f4 : f003            >        beq skip0925
                       >        trap            ;failed not equal (non zero)
20f6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20f9 :                 >skip0925
                       >
20f9 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$d4,$ff
                       >            load_flag $ff
20fa : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
20fc : 48              >            pha         ;use stack to load status
20fd : a9d6            >            lda #$aa-$d4     ;precharge accu
20ff : 28              >            plp
                       >
2100 : d4              >            db  $d4          ;test nop integrity - flags on
2101 : ea              >            nop
2102 : ea              >            nop
                       >            tst_a $aa-$d4,$ff
2103 : 08              >            php         ;save flags
2104 : 08              >            php
2105 : c9d6            >            cmp #$aa-$d4     ;test result
                       >            trap_ne
2107 : f003            >        beq skip0930
                       >        trap            ;failed not equal (non zero)
2109 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
210c :                 >skip0930
                       >
210c : 68              >            pla         ;load status
                       >            cmp_flag $ff
210d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
210f : f003            >        beq skip0933
                       >        trap            ;failed not equal (non zero)
2111 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2114 :                 >skip0933
                       >
2114 : 28              >            plp         ;restore status
                       >
2115 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2117 : f003            >        beq skip0935
                       >        trap            ;failed not equal (non zero)
2119 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
211c :                 >skip0935
                       >
211c : e000            >            cpx #0
                       >            trap_ne         ;x changed
211e : f003            >        beq skip0937
                       >        trap            ;failed not equal (non zero)
2120 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2123 :                 >skip0937
                       >
                        
                                nop_test $f4,2
2123 : a042            >            ldy #$42
2125 : a202            >            ldx #4-2
2127 : f4              >            db  $f4          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
2128 : c8              >            iny
2129 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
212a : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
212b : f003            >        beq skip0940
                       >        trap            ;failed not equal (non zero)
212d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2130 :                 >skip0940
                       >
                       >            set_a $ff-$f4,0
                       >            load_flag 0
2130 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2132 : 48              >            pha         ;use stack to load status
2133 : a90b            >            lda #$ff-$f4     ;precharge accu
2135 : 28              >            plp
                       >
2136 : f4              >            db  $f4          ;test nop integrity - flags off
2137 : ea              >            nop
2138 : ea              >            nop
                       >            tst_a $ff-$f4,0
2139 : 08              >            php         ;save flags
213a : 08              >            php
213b : c90b            >            cmp #$ff-$f4     ;test result
                       >            trap_ne
213d : f003            >        beq skip0945
                       >        trap            ;failed not equal (non zero)
213f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2142 :                 >skip0945
                       >
2142 : 68              >            pla         ;load status
                       >            cmp_flag 0
2143 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2145 : f003            >        beq skip0948
                       >        trap            ;failed not equal (non zero)
2147 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
214a :                 >skip0948
                       >
214a : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$f4,$ff
                       >            load_flag $ff
214b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
214d : 48              >            pha         ;use stack to load status
214e : a9b6            >            lda #$aa-$f4     ;precharge accu
2150 : 28              >            plp
                       >
2151 : f4              >            db  $f4          ;test nop integrity - flags on
2152 : ea              >            nop
2153 : ea              >            nop
                       >            tst_a $aa-$f4,$ff
2154 : 08              >            php         ;save flags
2155 : 08              >            php
2156 : c9b6            >            cmp #$aa-$f4     ;test result
                       >            trap_ne
2158 : f003            >        beq skip0953
                       >        trap            ;failed not equal (non zero)
215a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
215d :                 >skip0953
                       >
215d : 68              >            pla         ;load status
                       >            cmp_flag $ff
215e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2160 : f003            >        beq skip0956
                       >        trap            ;failed not equal (non zero)
2162 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2165 :                 >skip0956
                       >
2165 : 28              >            plp         ;restore status
                       >
2166 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2168 : f003            >        beq skip0958
                       >        trap            ;failed not equal (non zero)
216a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
216d :                 >skip0958
                       >
216d : e000            >            cpx #0
                       >            trap_ne         ;x changed
216f : f003            >        beq skip0960
                       >        trap            ;failed not equal (non zero)
2171 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2174 :                 >skip0960
                       >
                        
                                nop_test $5c,3
2174 : a042            >            ldy #$42
2176 : a201            >            ldx #4-3
2178 : 5c              >            db  $5c          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
2179 : c8              >            iny
217a : c8              >            iny
                       >        endif
217b : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
217c : f003            >        beq skip0963
                       >        trap            ;failed not equal (non zero)
217e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2181 :                 >skip0963
                       >
                       >            set_a $ff-$5c,0
                       >            load_flag 0
2181 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2183 : 48              >            pha         ;use stack to load status
2184 : a9a3            >            lda #$ff-$5c     ;precharge accu
2186 : 28              >            plp
                       >
2187 : 5c              >            db  $5c          ;test nop integrity - flags off
2188 : ea              >            nop
2189 : ea              >            nop
                       >            tst_a $ff-$5c,0
218a : 08              >            php         ;save flags
218b : 08              >            php
218c : c9a3            >            cmp #$ff-$5c     ;test result
                       >            trap_ne
218e : f003            >        beq skip0968
                       >        trap            ;failed not equal (non zero)
2190 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2193 :                 >skip0968
                       >
2193 : 68              >            pla         ;load status
                       >            cmp_flag 0
2194 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2196 : f003            >        beq skip0971
                       >        trap            ;failed not equal (non zero)
2198 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
219b :                 >skip0971
                       >
219b : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$5c,$ff
                       >            load_flag $ff
219c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
219e : 48              >            pha         ;use stack to load status
219f : a94e            >            lda #$aa-$5c     ;precharge accu
21a1 : 28              >            plp
                       >
21a2 : 5c              >            db  $5c          ;test nop integrity - flags on
21a3 : ea              >            nop
21a4 : ea              >            nop
                       >            tst_a $aa-$5c,$ff
21a5 : 08              >            php         ;save flags
21a6 : 08              >            php
21a7 : c94e            >            cmp #$aa-$5c     ;test result
                       >            trap_ne
21a9 : f003            >        beq skip0976
                       >        trap            ;failed not equal (non zero)
21ab : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21ae :                 >skip0976
                       >
21ae : 68              >            pla         ;load status
                       >            cmp_flag $ff
21af : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
21b1 : f003            >        beq skip0979
                       >        trap            ;failed not equal (non zero)
21b3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21b6 :                 >skip0979
                       >
21b6 : 28              >            plp         ;restore status
                       >
21b7 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
21b9 : f003            >        beq skip0981
                       >        trap            ;failed not equal (non zero)
21bb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21be :                 >skip0981
                       >
21be : e000            >            cpx #0
                       >            trap_ne         ;x changed
21c0 : f003            >        beq skip0983
                       >        trap            ;failed not equal (non zero)
21c2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21c5 :                 >skip0983
                       >
                        
                                nop_test $dc,3
21c5 : a042            >            ldy #$42
21c7 : a201            >            ldx #4-3
21c9 : dc              >            db  $dc          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
21ca : c8              >            iny
21cb : c8              >            iny
                       >        endif
21cc : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
21cd : f003            >        beq skip0986
                       >        trap            ;failed not equal (non zero)
21cf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21d2 :                 >skip0986
                       >
                       >            set_a $ff-$dc,0
                       >            load_flag 0
21d2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
21d4 : 48              >            pha         ;use stack to load status
21d5 : a923            >            lda #$ff-$dc     ;precharge accu
21d7 : 28              >            plp
                       >
21d8 : dc              >            db  $dc          ;test nop integrity - flags off
21d9 : ea              >            nop
21da : ea              >            nop
                       >            tst_a $ff-$dc,0
21db : 08              >            php         ;save flags
21dc : 08              >            php
21dd : c923            >            cmp #$ff-$dc     ;test result
                       >            trap_ne
21df : f003            >        beq skip0991
                       >        trap            ;failed not equal (non zero)
21e1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21e4 :                 >skip0991
                       >
21e4 : 68              >            pla         ;load status
                       >            cmp_flag 0
21e5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
21e7 : f003            >        beq skip0994
                       >        trap            ;failed not equal (non zero)
21e9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21ec :                 >skip0994
                       >
21ec : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$dc,$ff
                       >            load_flag $ff
21ed : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
21ef : 48              >            pha         ;use stack to load status
21f0 : a9ce            >            lda #$aa-$dc     ;precharge accu
21f2 : 28              >            plp
                       >
21f3 : dc              >            db  $dc          ;test nop integrity - flags on
21f4 : ea              >            nop
21f5 : ea              >            nop
                       >            tst_a $aa-$dc,$ff
21f6 : 08              >            php         ;save flags
21f7 : 08              >            php
21f8 : c9ce            >            cmp #$aa-$dc     ;test result
                       >            trap_ne
21fa : f003            >        beq skip0999
                       >        trap            ;failed not equal (non zero)
21fc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21ff :                 >skip0999
                       >
21ff : 68              >            pla         ;load status
                       >            cmp_flag $ff
2200 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2202 : f003            >        beq skip1002
                       >        trap            ;failed not equal (non zero)
2204 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2207 :                 >skip1002
                       >
2207 : 28              >            plp         ;restore status
                       >
2208 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
220a : f003            >        beq skip1004
                       >        trap            ;failed not equal (non zero)
220c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
220f :                 >skip1004
                       >
220f : e000            >            cpx #0
                       >            trap_ne         ;x changed
2211 : f003            >        beq skip1006
                       >        trap            ;failed not equal (non zero)
2213 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2216 :                 >skip1006
                       >
                        
                                nop_test $fc,3
2216 : a042            >            ldy #$42
2218 : a201            >            ldx #4-3
221a : fc              >            db  $fc          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
221b : c8              >            iny
221c : c8              >            iny
                       >        endif
221d : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
221e : f003            >        beq skip1009
                       >        trap            ;failed not equal (non zero)
2220 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2223 :                 >skip1009
                       >
                       >            set_a $ff-$fc,0
                       >            load_flag 0
2223 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2225 : 48              >            pha         ;use stack to load status
2226 : a903            >            lda #$ff-$fc     ;precharge accu
2228 : 28              >            plp
                       >
2229 : fc              >            db  $fc          ;test nop integrity - flags off
222a : ea              >            nop
222b : ea              >            nop
                       >            tst_a $ff-$fc,0
222c : 08              >            php         ;save flags
222d : 08              >            php
222e : c903            >            cmp #$ff-$fc     ;test result
                       >            trap_ne
2230 : f003            >        beq skip1014
                       >        trap            ;failed not equal (non zero)
2232 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2235 :                 >skip1014
                       >
2235 : 68              >            pla         ;load status
                       >            cmp_flag 0
2236 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2238 : f003            >        beq skip1017
                       >        trap            ;failed not equal (non zero)
223a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
223d :                 >skip1017
                       >
223d : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$fc,$ff
                       >            load_flag $ff
223e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2240 : 48              >            pha         ;use stack to load status
2241 : a9ae            >            lda #$aa-$fc     ;precharge accu
2243 : 28              >            plp
                       >
2244 : fc              >            db  $fc          ;test nop integrity - flags on
2245 : ea              >            nop
2246 : ea              >            nop
                       >            tst_a $aa-$fc,$ff
2247 : 08              >            php         ;save flags
2248 : 08              >            php
2249 : c9ae            >            cmp #$aa-$fc     ;test result
                       >            trap_ne
224b : f003            >        beq skip1022
                       >        trap            ;failed not equal (non zero)
224d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2250 :                 >skip1022
                       >
2250 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2251 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2253 : f003            >        beq skip1025
                       >        trap            ;failed not equal (non zero)
2255 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2258 :                 >skip1025
                       >
2258 : 28              >            plp         ;restore status
                       >
2259 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
225b : f003            >        beq skip1027
                       >        trap            ;failed not equal (non zero)
225d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2260 :                 >skip1027
                       >
2260 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2262 : f003            >        beq skip1029
                       >        trap            ;failed not equal (non zero)
2264 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2267 :                 >skip1029
                       >
                        
                                nop_test $03,1
2267 : a042            >            ldy #$42
2269 : a203            >            ldx #4-1
226b : 03              >            db  $03          ;test nop length
                       >        if 1 = 1
226c : ca              >            dex
226d : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
226e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
226f : f003            >        beq skip1032
                       >        trap            ;failed not equal (non zero)
2271 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2274 :                 >skip1032
                       >
                       >            set_a $ff-$03,0
                       >            load_flag 0
2274 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2276 : 48              >            pha         ;use stack to load status
2277 : a9fc            >            lda #$ff-$03     ;precharge accu
2279 : 28              >            plp
                       >
227a : 03              >            db  $03          ;test nop integrity - flags off
227b : ea              >            nop
227c : ea              >            nop
                       >            tst_a $ff-$03,0
227d : 08              >            php         ;save flags
227e : 08              >            php
227f : c9fc            >            cmp #$ff-$03     ;test result
                       >            trap_ne
2281 : f003            >        beq skip1037
                       >        trap            ;failed not equal (non zero)
2283 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2286 :                 >skip1037
                       >
2286 : 68              >            pla         ;load status
                       >            cmp_flag 0
2287 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2289 : f003            >        beq skip1040
                       >        trap            ;failed not equal (non zero)
228b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
228e :                 >skip1040
                       >
228e : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$03,$ff
                       >            load_flag $ff
228f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2291 : 48              >            pha         ;use stack to load status
2292 : a9a7            >            lda #$aa-$03     ;precharge accu
2294 : 28              >            plp
                       >
2295 : 03              >            db  $03          ;test nop integrity - flags on
2296 : ea              >            nop
2297 : ea              >            nop
                       >            tst_a $aa-$03,$ff
2298 : 08              >            php         ;save flags
2299 : 08              >            php
229a : c9a7            >            cmp #$aa-$03     ;test result
                       >            trap_ne
229c : f003            >        beq skip1045
                       >        trap            ;failed not equal (non zero)
229e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22a1 :                 >skip1045
                       >
22a1 : 68              >            pla         ;load status
                       >            cmp_flag $ff
22a2 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
22a4 : f003            >        beq skip1048
                       >        trap            ;failed not equal (non zero)
22a6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22a9 :                 >skip1048
                       >
22a9 : 28              >            plp         ;restore status
                       >
22aa : c042            >            cpy #$42
                       >            trap_ne         ;y changed
22ac : f003            >        beq skip1050
                       >        trap            ;failed not equal (non zero)
22ae : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22b1 :                 >skip1050
                       >
22b1 : e000            >            cpx #0
                       >            trap_ne         ;x changed
22b3 : f003            >        beq skip1052
                       >        trap            ;failed not equal (non zero)
22b5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22b8 :                 >skip1052
                       >
                        
                                nop_test $13,1
22b8 : a042            >            ldy #$42
22ba : a203            >            ldx #4-1
22bc : 13              >            db  $13          ;test nop length
                       >        if 1 = 1
22bd : ca              >            dex
22be : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
22bf : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
22c0 : f003            >        beq skip1055
                       >        trap            ;failed not equal (non zero)
22c2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22c5 :                 >skip1055
                       >
                       >            set_a $ff-$13,0
                       >            load_flag 0
22c5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
22c7 : 48              >            pha         ;use stack to load status
22c8 : a9ec            >            lda #$ff-$13     ;precharge accu
22ca : 28              >            plp
                       >
22cb : 13              >            db  $13          ;test nop integrity - flags off
22cc : ea              >            nop
22cd : ea              >            nop
                       >            tst_a $ff-$13,0
22ce : 08              >            php         ;save flags
22cf : 08              >            php
22d0 : c9ec            >            cmp #$ff-$13     ;test result
                       >            trap_ne
22d2 : f003            >        beq skip1060
                       >        trap            ;failed not equal (non zero)
22d4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22d7 :                 >skip1060
                       >
22d7 : 68              >            pla         ;load status
                       >            cmp_flag 0
22d8 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
22da : f003            >        beq skip1063
                       >        trap            ;failed not equal (non zero)
22dc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22df :                 >skip1063
                       >
22df : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$13,$ff
                       >            load_flag $ff
22e0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
22e2 : 48              >            pha         ;use stack to load status
22e3 : a997            >            lda #$aa-$13     ;precharge accu
22e5 : 28              >            plp
                       >
22e6 : 13              >            db  $13          ;test nop integrity - flags on
22e7 : ea              >            nop
22e8 : ea              >            nop
                       >            tst_a $aa-$13,$ff
22e9 : 08              >            php         ;save flags
22ea : 08              >            php
22eb : c997            >            cmp #$aa-$13     ;test result
                       >            trap_ne
22ed : f003            >        beq skip1068
                       >        trap            ;failed not equal (non zero)
22ef : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22f2 :                 >skip1068
                       >
22f2 : 68              >            pla         ;load status
                       >            cmp_flag $ff
22f3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
22f5 : f003            >        beq skip1071
                       >        trap            ;failed not equal (non zero)
22f7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22fa :                 >skip1071
                       >
22fa : 28              >            plp         ;restore status
                       >
22fb : c042            >            cpy #$42
                       >            trap_ne         ;y changed
22fd : f003            >        beq skip1073
                       >        trap            ;failed not equal (non zero)
22ff : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2302 :                 >skip1073
                       >
2302 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2304 : f003            >        beq skip1075
                       >        trap            ;failed not equal (non zero)
2306 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2309 :                 >skip1075
                       >
                        
                                nop_test $23,1
2309 : a042            >            ldy #$42
230b : a203            >            ldx #4-1
230d : 23              >            db  $23          ;test nop length
                       >        if 1 = 1
230e : ca              >            dex
230f : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2310 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2311 : f003            >        beq skip1078
                       >        trap            ;failed not equal (non zero)
2313 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2316 :                 >skip1078
                       >
                       >            set_a $ff-$23,0
                       >            load_flag 0
2316 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2318 : 48              >            pha         ;use stack to load status
2319 : a9dc            >            lda #$ff-$23     ;precharge accu
231b : 28              >            plp
                       >
231c : 23              >            db  $23          ;test nop integrity - flags off
231d : ea              >            nop
231e : ea              >            nop
                       >            tst_a $ff-$23,0
231f : 08              >            php         ;save flags
2320 : 08              >            php
2321 : c9dc            >            cmp #$ff-$23     ;test result
                       >            trap_ne
2323 : f003            >        beq skip1083
                       >        trap            ;failed not equal (non zero)
2325 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2328 :                 >skip1083
                       >
2328 : 68              >            pla         ;load status
                       >            cmp_flag 0
2329 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
232b : f003            >        beq skip1086
                       >        trap            ;failed not equal (non zero)
232d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2330 :                 >skip1086
                       >
2330 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$23,$ff
                       >            load_flag $ff
2331 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2333 : 48              >            pha         ;use stack to load status
2334 : a987            >            lda #$aa-$23     ;precharge accu
2336 : 28              >            plp
                       >
2337 : 23              >            db  $23          ;test nop integrity - flags on
2338 : ea              >            nop
2339 : ea              >            nop
                       >            tst_a $aa-$23,$ff
233a : 08              >            php         ;save flags
233b : 08              >            php
233c : c987            >            cmp #$aa-$23     ;test result
                       >            trap_ne
233e : f003            >        beq skip1091
                       >        trap            ;failed not equal (non zero)
2340 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2343 :                 >skip1091
                       >
2343 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2344 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2346 : f003            >        beq skip1094
                       >        trap            ;failed not equal (non zero)
2348 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
234b :                 >skip1094
                       >
234b : 28              >            plp         ;restore status
                       >
234c : c042            >            cpy #$42
                       >            trap_ne         ;y changed
234e : f003            >        beq skip1096
                       >        trap            ;failed not equal (non zero)
2350 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2353 :                 >skip1096
                       >
2353 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2355 : f003            >        beq skip1098
                       >        trap            ;failed not equal (non zero)
2357 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
235a :                 >skip1098
                       >
                        
                                nop_test $33,1
235a : a042            >            ldy #$42
235c : a203            >            ldx #4-1
235e : 33              >            db  $33          ;test nop length
                       >        if 1 = 1
235f : ca              >            dex
2360 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2361 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2362 : f003            >        beq skip1101
                       >        trap            ;failed not equal (non zero)
2364 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2367 :                 >skip1101
                       >
                       >            set_a $ff-$33,0
                       >            load_flag 0
2367 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2369 : 48              >            pha         ;use stack to load status
236a : a9cc            >            lda #$ff-$33     ;precharge accu
236c : 28              >            plp
                       >
236d : 33              >            db  $33          ;test nop integrity - flags off
236e : ea              >            nop
236f : ea              >            nop
                       >            tst_a $ff-$33,0
2370 : 08              >            php         ;save flags
2371 : 08              >            php
2372 : c9cc            >            cmp #$ff-$33     ;test result
                       >            trap_ne
2374 : f003            >        beq skip1106
                       >        trap            ;failed not equal (non zero)
2376 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2379 :                 >skip1106
                       >
2379 : 68              >            pla         ;load status
                       >            cmp_flag 0
237a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
237c : f003            >        beq skip1109
                       >        trap            ;failed not equal (non zero)
237e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2381 :                 >skip1109
                       >
2381 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$33,$ff
                       >            load_flag $ff
2382 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2384 : 48              >            pha         ;use stack to load status
2385 : a977            >            lda #$aa-$33     ;precharge accu
2387 : 28              >            plp
                       >
2388 : 33              >            db  $33          ;test nop integrity - flags on
2389 : ea              >            nop
238a : ea              >            nop
                       >            tst_a $aa-$33,$ff
238b : 08              >            php         ;save flags
238c : 08              >            php
238d : c977            >            cmp #$aa-$33     ;test result
                       >            trap_ne
238f : f003            >        beq skip1114
                       >        trap            ;failed not equal (non zero)
2391 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2394 :                 >skip1114
                       >
2394 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2395 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2397 : f003            >        beq skip1117
                       >        trap            ;failed not equal (non zero)
2399 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
239c :                 >skip1117
                       >
239c : 28              >            plp         ;restore status
                       >
239d : c042            >            cpy #$42
                       >            trap_ne         ;y changed
239f : f003            >        beq skip1119
                       >        trap            ;failed not equal (non zero)
23a1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23a4 :                 >skip1119
                       >
23a4 : e000            >            cpx #0
                       >            trap_ne         ;x changed
23a6 : f003            >        beq skip1121
                       >        trap            ;failed not equal (non zero)
23a8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23ab :                 >skip1121
                       >
                        
                                nop_test $43,1
23ab : a042            >            ldy #$42
23ad : a203            >            ldx #4-1
23af : 43              >            db  $43          ;test nop length
                       >        if 1 = 1
23b0 : ca              >            dex
23b1 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
23b2 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
23b3 : f003            >        beq skip1124
                       >        trap            ;failed not equal (non zero)
23b5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23b8 :                 >skip1124
                       >
                       >            set_a $ff-$43,0
                       >            load_flag 0
23b8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
23ba : 48              >            pha         ;use stack to load status
23bb : a9bc            >            lda #$ff-$43     ;precharge accu
23bd : 28              >            plp
                       >
23be : 43              >            db  $43          ;test nop integrity - flags off
23bf : ea              >            nop
23c0 : ea              >            nop
                       >            tst_a $ff-$43,0
23c1 : 08              >            php         ;save flags
23c2 : 08              >            php
23c3 : c9bc            >            cmp #$ff-$43     ;test result
                       >            trap_ne
23c5 : f003            >        beq skip1129
                       >        trap            ;failed not equal (non zero)
23c7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23ca :                 >skip1129
                       >
23ca : 68              >            pla         ;load status
                       >            cmp_flag 0
23cb : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
23cd : f003            >        beq skip1132
                       >        trap            ;failed not equal (non zero)
23cf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23d2 :                 >skip1132
                       >
23d2 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$43,$ff
                       >            load_flag $ff
23d3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
23d5 : 48              >            pha         ;use stack to load status
23d6 : a967            >            lda #$aa-$43     ;precharge accu
23d8 : 28              >            plp
                       >
23d9 : 43              >            db  $43          ;test nop integrity - flags on
23da : ea              >            nop
23db : ea              >            nop
                       >            tst_a $aa-$43,$ff
23dc : 08              >            php         ;save flags
23dd : 08              >            php
23de : c967            >            cmp #$aa-$43     ;test result
                       >            trap_ne
23e0 : f003            >        beq skip1137
                       >        trap            ;failed not equal (non zero)
23e2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23e5 :                 >skip1137
                       >
23e5 : 68              >            pla         ;load status
                       >            cmp_flag $ff
23e6 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
23e8 : f003            >        beq skip1140
                       >        trap            ;failed not equal (non zero)
23ea : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23ed :                 >skip1140
                       >
23ed : 28              >            plp         ;restore status
                       >
23ee : c042            >            cpy #$42
                       >            trap_ne         ;y changed
23f0 : f003            >        beq skip1142
                       >        trap            ;failed not equal (non zero)
23f2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23f5 :                 >skip1142
                       >
23f5 : e000            >            cpx #0
                       >            trap_ne         ;x changed
23f7 : f003            >        beq skip1144
                       >        trap            ;failed not equal (non zero)
23f9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23fc :                 >skip1144
                       >
                        
                                nop_test $53,1
23fc : a042            >            ldy #$42
23fe : a203            >            ldx #4-1
2400 : 53              >            db  $53          ;test nop length
                       >        if 1 = 1
2401 : ca              >            dex
2402 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2403 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2404 : f003            >        beq skip1147
                       >        trap            ;failed not equal (non zero)
2406 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2409 :                 >skip1147
                       >
                       >            set_a $ff-$53,0
                       >            load_flag 0
2409 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
240b : 48              >            pha         ;use stack to load status
240c : a9ac            >            lda #$ff-$53     ;precharge accu
240e : 28              >            plp
                       >
240f : 53              >            db  $53          ;test nop integrity - flags off
2410 : ea              >            nop
2411 : ea              >            nop
                       >            tst_a $ff-$53,0
2412 : 08              >            php         ;save flags
2413 : 08              >            php
2414 : c9ac            >            cmp #$ff-$53     ;test result
                       >            trap_ne
2416 : f003            >        beq skip1152
                       >        trap            ;failed not equal (non zero)
2418 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
241b :                 >skip1152
                       >
241b : 68              >            pla         ;load status
                       >            cmp_flag 0
241c : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
241e : f003            >        beq skip1155
                       >        trap            ;failed not equal (non zero)
2420 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2423 :                 >skip1155
                       >
2423 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$53,$ff
                       >            load_flag $ff
2424 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2426 : 48              >            pha         ;use stack to load status
2427 : a957            >            lda #$aa-$53     ;precharge accu
2429 : 28              >            plp
                       >
242a : 53              >            db  $53          ;test nop integrity - flags on
242b : ea              >            nop
242c : ea              >            nop
                       >            tst_a $aa-$53,$ff
242d : 08              >            php         ;save flags
242e : 08              >            php
242f : c957            >            cmp #$aa-$53     ;test result
                       >            trap_ne
2431 : f003            >        beq skip1160
                       >        trap            ;failed not equal (non zero)
2433 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2436 :                 >skip1160
                       >
2436 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2437 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2439 : f003            >        beq skip1163
                       >        trap            ;failed not equal (non zero)
243b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
243e :                 >skip1163
                       >
243e : 28              >            plp         ;restore status
                       >
243f : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2441 : f003            >        beq skip1165
                       >        trap            ;failed not equal (non zero)
2443 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2446 :                 >skip1165
                       >
2446 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2448 : f003            >        beq skip1167
                       >        trap            ;failed not equal (non zero)
244a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
244d :                 >skip1167
                       >
                        
                                nop_test $63,1
244d : a042            >            ldy #$42
244f : a203            >            ldx #4-1
2451 : 63              >            db  $63          ;test nop length
                       >        if 1 = 1
2452 : ca              >            dex
2453 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2454 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2455 : f003            >        beq skip1170
                       >        trap            ;failed not equal (non zero)
2457 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
245a :                 >skip1170
                       >
                       >            set_a $ff-$63,0
                       >            load_flag 0
245a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
245c : 48              >            pha         ;use stack to load status
245d : a99c            >            lda #$ff-$63     ;precharge accu
245f : 28              >            plp
                       >
2460 : 63              >            db  $63          ;test nop integrity - flags off
2461 : ea              >            nop
2462 : ea              >            nop
                       >            tst_a $ff-$63,0
2463 : 08              >            php         ;save flags
2464 : 08              >            php
2465 : c99c            >            cmp #$ff-$63     ;test result
                       >            trap_ne
2467 : f003            >        beq skip1175
                       >        trap            ;failed not equal (non zero)
2469 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
246c :                 >skip1175
                       >
246c : 68              >            pla         ;load status
                       >            cmp_flag 0
246d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
246f : f003            >        beq skip1178
                       >        trap            ;failed not equal (non zero)
2471 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2474 :                 >skip1178
                       >
2474 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$63,$ff
                       >            load_flag $ff
2475 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2477 : 48              >            pha         ;use stack to load status
2478 : a947            >            lda #$aa-$63     ;precharge accu
247a : 28              >            plp
                       >
247b : 63              >            db  $63          ;test nop integrity - flags on
247c : ea              >            nop
247d : ea              >            nop
                       >            tst_a $aa-$63,$ff
247e : 08              >            php         ;save flags
247f : 08              >            php
2480 : c947            >            cmp #$aa-$63     ;test result
                       >            trap_ne
2482 : f003            >        beq skip1183
                       >        trap            ;failed not equal (non zero)
2484 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2487 :                 >skip1183
                       >
2487 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2488 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
248a : f003            >        beq skip1186
                       >        trap            ;failed not equal (non zero)
248c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
248f :                 >skip1186
                       >
248f : 28              >            plp         ;restore status
                       >
2490 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2492 : f003            >        beq skip1188
                       >        trap            ;failed not equal (non zero)
2494 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2497 :                 >skip1188
                       >
2497 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2499 : f003            >        beq skip1190
                       >        trap            ;failed not equal (non zero)
249b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
249e :                 >skip1190
                       >
                        
                                nop_test $73,1
249e : a042            >            ldy #$42
24a0 : a203            >            ldx #4-1
24a2 : 73              >            db  $73          ;test nop length
                       >        if 1 = 1
24a3 : ca              >            dex
24a4 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
24a5 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
24a6 : f003            >        beq skip1193
                       >        trap            ;failed not equal (non zero)
24a8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24ab :                 >skip1193
                       >
                       >            set_a $ff-$73,0
                       >            load_flag 0
24ab : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
24ad : 48              >            pha         ;use stack to load status
24ae : a98c            >            lda #$ff-$73     ;precharge accu
24b0 : 28              >            plp
                       >
24b1 : 73              >            db  $73          ;test nop integrity - flags off
24b2 : ea              >            nop
24b3 : ea              >            nop
                       >            tst_a $ff-$73,0
24b4 : 08              >            php         ;save flags
24b5 : 08              >            php
24b6 : c98c            >            cmp #$ff-$73     ;test result
                       >            trap_ne
24b8 : f003            >        beq skip1198
                       >        trap            ;failed not equal (non zero)
24ba : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24bd :                 >skip1198
                       >
24bd : 68              >            pla         ;load status
                       >            cmp_flag 0
24be : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
24c0 : f003            >        beq skip1201
                       >        trap            ;failed not equal (non zero)
24c2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24c5 :                 >skip1201
                       >
24c5 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$73,$ff
                       >            load_flag $ff
24c6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
24c8 : 48              >            pha         ;use stack to load status
24c9 : a937            >            lda #$aa-$73     ;precharge accu
24cb : 28              >            plp
                       >
24cc : 73              >            db  $73          ;test nop integrity - flags on
24cd : ea              >            nop
24ce : ea              >            nop
                       >            tst_a $aa-$73,$ff
24cf : 08              >            php         ;save flags
24d0 : 08              >            php
24d1 : c937            >            cmp #$aa-$73     ;test result
                       >            trap_ne
24d3 : f003            >        beq skip1206
                       >        trap            ;failed not equal (non zero)
24d5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24d8 :                 >skip1206
                       >
24d8 : 68              >            pla         ;load status
                       >            cmp_flag $ff
24d9 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
24db : f003            >        beq skip1209
                       >        trap            ;failed not equal (non zero)
24dd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24e0 :                 >skip1209
                       >
24e0 : 28              >            plp         ;restore status
                       >
24e1 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
24e3 : f003            >        beq skip1211
                       >        trap            ;failed not equal (non zero)
24e5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24e8 :                 >skip1211
                       >
24e8 : e000            >            cpx #0
                       >            trap_ne         ;x changed
24ea : f003            >        beq skip1213
                       >        trap            ;failed not equal (non zero)
24ec : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24ef :                 >skip1213
                       >
                        
                                nop_test $83,1
24ef : a042            >            ldy #$42
24f1 : a203            >            ldx #4-1
24f3 : 83              >            db  $83          ;test nop length
                       >        if 1 = 1
24f4 : ca              >            dex
24f5 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
24f6 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
24f7 : f003            >        beq skip1216
                       >        trap            ;failed not equal (non zero)
24f9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24fc :                 >skip1216
                       >
                       >            set_a $ff-$83,0
                       >            load_flag 0
24fc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
24fe : 48              >            pha         ;use stack to load status
24ff : a97c            >            lda #$ff-$83     ;precharge accu
2501 : 28              >            plp
                       >
2502 : 83              >            db  $83          ;test nop integrity - flags off
2503 : ea              >            nop
2504 : ea              >            nop
                       >            tst_a $ff-$83,0
2505 : 08              >            php         ;save flags
2506 : 08              >            php
2507 : c97c            >            cmp #$ff-$83     ;test result
                       >            trap_ne
2509 : f003            >        beq skip1221
                       >        trap            ;failed not equal (non zero)
250b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
250e :                 >skip1221
                       >
250e : 68              >            pla         ;load status
                       >            cmp_flag 0
250f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2511 : f003            >        beq skip1224
                       >        trap            ;failed not equal (non zero)
2513 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2516 :                 >skip1224
                       >
2516 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$83,$ff
                       >            load_flag $ff
2517 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2519 : 48              >            pha         ;use stack to load status
251a : a927            >            lda #$aa-$83     ;precharge accu
251c : 28              >            plp
                       >
251d : 83              >            db  $83          ;test nop integrity - flags on
251e : ea              >            nop
251f : ea              >            nop
                       >            tst_a $aa-$83,$ff
2520 : 08              >            php         ;save flags
2521 : 08              >            php
2522 : c927            >            cmp #$aa-$83     ;test result
                       >            trap_ne
2524 : f003            >        beq skip1229
                       >        trap            ;failed not equal (non zero)
2526 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2529 :                 >skip1229
                       >
2529 : 68              >            pla         ;load status
                       >            cmp_flag $ff
252a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
252c : f003            >        beq skip1232
                       >        trap            ;failed not equal (non zero)
252e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2531 :                 >skip1232
                       >
2531 : 28              >            plp         ;restore status
                       >
2532 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2534 : f003            >        beq skip1234
                       >        trap            ;failed not equal (non zero)
2536 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2539 :                 >skip1234
                       >
2539 : e000            >            cpx #0
                       >            trap_ne         ;x changed
253b : f003            >        beq skip1236
                       >        trap            ;failed not equal (non zero)
253d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2540 :                 >skip1236
                       >
                        
                                nop_test $93,1
2540 : a042            >            ldy #$42
2542 : a203            >            ldx #4-1
2544 : 93              >            db  $93          ;test nop length
                       >        if 1 = 1
2545 : ca              >            dex
2546 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2547 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2548 : f003            >        beq skip1239
                       >        trap            ;failed not equal (non zero)
254a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
254d :                 >skip1239
                       >
                       >            set_a $ff-$93,0
                       >            load_flag 0
254d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
254f : 48              >            pha         ;use stack to load status
2550 : a96c            >            lda #$ff-$93     ;precharge accu
2552 : 28              >            plp
                       >
2553 : 93              >            db  $93          ;test nop integrity - flags off
2554 : ea              >            nop
2555 : ea              >            nop
                       >            tst_a $ff-$93,0
2556 : 08              >            php         ;save flags
2557 : 08              >            php
2558 : c96c            >            cmp #$ff-$93     ;test result
                       >            trap_ne
255a : f003            >        beq skip1244
                       >        trap            ;failed not equal (non zero)
255c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
255f :                 >skip1244
                       >
255f : 68              >            pla         ;load status
                       >            cmp_flag 0
2560 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2562 : f003            >        beq skip1247
                       >        trap            ;failed not equal (non zero)
2564 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2567 :                 >skip1247
                       >
2567 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$93,$ff
                       >            load_flag $ff
2568 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
256a : 48              >            pha         ;use stack to load status
256b : a917            >            lda #$aa-$93     ;precharge accu
256d : 28              >            plp
                       >
256e : 93              >            db  $93          ;test nop integrity - flags on
256f : ea              >            nop
2570 : ea              >            nop
                       >            tst_a $aa-$93,$ff
2571 : 08              >            php         ;save flags
2572 : 08              >            php
2573 : c917            >            cmp #$aa-$93     ;test result
                       >            trap_ne
2575 : f003            >        beq skip1252
                       >        trap            ;failed not equal (non zero)
2577 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
257a :                 >skip1252
                       >
257a : 68              >            pla         ;load status
                       >            cmp_flag $ff
257b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
257d : f003            >        beq skip1255
                       >        trap            ;failed not equal (non zero)
257f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2582 :                 >skip1255
                       >
2582 : 28              >            plp         ;restore status
                       >
2583 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2585 : f003            >        beq skip1257
                       >        trap            ;failed not equal (non zero)
2587 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
258a :                 >skip1257
                       >
258a : e000            >            cpx #0
                       >            trap_ne         ;x changed
258c : f003            >        beq skip1259
                       >        trap            ;failed not equal (non zero)
258e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2591 :                 >skip1259
                       >
                        
                                nop_test $a3,1
2591 : a042            >            ldy #$42
2593 : a203            >            ldx #4-1
2595 : a3              >            db  $a3          ;test nop length
                       >        if 1 = 1
2596 : ca              >            dex
2597 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2598 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2599 : f003            >        beq skip1262
                       >        trap            ;failed not equal (non zero)
259b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
259e :                 >skip1262
                       >
                       >            set_a $ff-$a3,0
                       >            load_flag 0
259e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
25a0 : 48              >            pha         ;use stack to load status
25a1 : a95c            >            lda #$ff-$a3     ;precharge accu
25a3 : 28              >            plp
                       >
25a4 : a3              >            db  $a3          ;test nop integrity - flags off
25a5 : ea              >            nop
25a6 : ea              >            nop
                       >            tst_a $ff-$a3,0
25a7 : 08              >            php         ;save flags
25a8 : 08              >            php
25a9 : c95c            >            cmp #$ff-$a3     ;test result
                       >            trap_ne
25ab : f003            >        beq skip1267
                       >        trap            ;failed not equal (non zero)
25ad : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25b0 :                 >skip1267
                       >
25b0 : 68              >            pla         ;load status
                       >            cmp_flag 0
25b1 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
25b3 : f003            >        beq skip1270
                       >        trap            ;failed not equal (non zero)
25b5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25b8 :                 >skip1270
                       >
25b8 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$a3,$ff
                       >            load_flag $ff
25b9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
25bb : 48              >            pha         ;use stack to load status
25bc : a907            >            lda #$aa-$a3     ;precharge accu
25be : 28              >            plp
                       >
25bf : a3              >            db  $a3          ;test nop integrity - flags on
25c0 : ea              >            nop
25c1 : ea              >            nop
                       >            tst_a $aa-$a3,$ff
25c2 : 08              >            php         ;save flags
25c3 : 08              >            php
25c4 : c907            >            cmp #$aa-$a3     ;test result
                       >            trap_ne
25c6 : f003            >        beq skip1275
                       >        trap            ;failed not equal (non zero)
25c8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25cb :                 >skip1275
                       >
25cb : 68              >            pla         ;load status
                       >            cmp_flag $ff
25cc : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
25ce : f003            >        beq skip1278
                       >        trap            ;failed not equal (non zero)
25d0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25d3 :                 >skip1278
                       >
25d3 : 28              >            plp         ;restore status
                       >
25d4 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
25d6 : f003            >        beq skip1280
                       >        trap            ;failed not equal (non zero)
25d8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25db :                 >skip1280
                       >
25db : e000            >            cpx #0
                       >            trap_ne         ;x changed
25dd : f003            >        beq skip1282
                       >        trap            ;failed not equal (non zero)
25df : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25e2 :                 >skip1282
                       >
                        
                                nop_test $b3,1
25e2 : a042            >            ldy #$42
25e4 : a203            >            ldx #4-1
25e6 : b3              >            db  $b3          ;test nop length
                       >        if 1 = 1
25e7 : ca              >            dex
25e8 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
25e9 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
25ea : f003            >        beq skip1285
                       >        trap            ;failed not equal (non zero)
25ec : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25ef :                 >skip1285
                       >
                       >            set_a $ff-$b3,0
                       >            load_flag 0
25ef : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
25f1 : 48              >            pha         ;use stack to load status
25f2 : a94c            >            lda #$ff-$b3     ;precharge accu
25f4 : 28              >            plp
                       >
25f5 : b3              >            db  $b3          ;test nop integrity - flags off
25f6 : ea              >            nop
25f7 : ea              >            nop
                       >            tst_a $ff-$b3,0
25f8 : 08              >            php         ;save flags
25f9 : 08              >            php
25fa : c94c            >            cmp #$ff-$b3     ;test result
                       >            trap_ne
25fc : f003            >        beq skip1290
                       >        trap            ;failed not equal (non zero)
25fe : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2601 :                 >skip1290
                       >
2601 : 68              >            pla         ;load status
                       >            cmp_flag 0
2602 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2604 : f003            >        beq skip1293
                       >        trap            ;failed not equal (non zero)
2606 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2609 :                 >skip1293
                       >
2609 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$b3,$ff
                       >            load_flag $ff
260a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
260c : 48              >            pha         ;use stack to load status
260d : a9f7            >            lda #$aa-$b3     ;precharge accu
260f : 28              >            plp
                       >
2610 : b3              >            db  $b3          ;test nop integrity - flags on
2611 : ea              >            nop
2612 : ea              >            nop
                       >            tst_a $aa-$b3,$ff
2613 : 08              >            php         ;save flags
2614 : 08              >            php
2615 : c9f7            >            cmp #$aa-$b3     ;test result
                       >            trap_ne
2617 : f003            >        beq skip1298
                       >        trap            ;failed not equal (non zero)
2619 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
261c :                 >skip1298
                       >
261c : 68              >            pla         ;load status
                       >            cmp_flag $ff
261d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
261f : f003            >        beq skip1301
                       >        trap            ;failed not equal (non zero)
2621 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2624 :                 >skip1301
                       >
2624 : 28              >            plp         ;restore status
                       >
2625 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2627 : f003            >        beq skip1303
                       >        trap            ;failed not equal (non zero)
2629 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
262c :                 >skip1303
                       >
262c : e000            >            cpx #0
                       >            trap_ne         ;x changed
262e : f003            >        beq skip1305
                       >        trap            ;failed not equal (non zero)
2630 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2633 :                 >skip1305
                       >
                        
                                nop_test $c3,1
2633 : a042            >            ldy #$42
2635 : a203            >            ldx #4-1
2637 : c3              >            db  $c3          ;test nop length
                       >        if 1 = 1
2638 : ca              >            dex
2639 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
263a : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
263b : f003            >        beq skip1308
                       >        trap            ;failed not equal (non zero)
263d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2640 :                 >skip1308
                       >
                       >            set_a $ff-$c3,0
                       >            load_flag 0
2640 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2642 : 48              >            pha         ;use stack to load status
2643 : a93c            >            lda #$ff-$c3     ;precharge accu
2645 : 28              >            plp
                       >
2646 : c3              >            db  $c3          ;test nop integrity - flags off
2647 : ea              >            nop
2648 : ea              >            nop
                       >            tst_a $ff-$c3,0
2649 : 08              >            php         ;save flags
264a : 08              >            php
264b : c93c            >            cmp #$ff-$c3     ;test result
                       >            trap_ne
264d : f003            >        beq skip1313
                       >        trap            ;failed not equal (non zero)
264f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2652 :                 >skip1313
                       >
2652 : 68              >            pla         ;load status
                       >            cmp_flag 0
2653 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2655 : f003            >        beq skip1316
                       >        trap            ;failed not equal (non zero)
2657 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
265a :                 >skip1316
                       >
265a : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$c3,$ff
                       >            load_flag $ff
265b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
265d : 48              >            pha         ;use stack to load status
265e : a9e7            >            lda #$aa-$c3     ;precharge accu
2660 : 28              >            plp
                       >
2661 : c3              >            db  $c3          ;test nop integrity - flags on
2662 : ea              >            nop
2663 : ea              >            nop
                       >            tst_a $aa-$c3,$ff
2664 : 08              >            php         ;save flags
2665 : 08              >            php
2666 : c9e7            >            cmp #$aa-$c3     ;test result
                       >            trap_ne
2668 : f003            >        beq skip1321
                       >        trap            ;failed not equal (non zero)
266a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
266d :                 >skip1321
                       >
266d : 68              >            pla         ;load status
                       >            cmp_flag $ff
266e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2670 : f003            >        beq skip1324
                       >        trap            ;failed not equal (non zero)
2672 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2675 :                 >skip1324
                       >
2675 : 28              >            plp         ;restore status
                       >
2676 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2678 : f003            >        beq skip1326
                       >        trap            ;failed not equal (non zero)
267a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
267d :                 >skip1326
                       >
267d : e000            >            cpx #0
                       >            trap_ne         ;x changed
267f : f003            >        beq skip1328
                       >        trap            ;failed not equal (non zero)
2681 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2684 :                 >skip1328
                       >
                        
                                nop_test $d3,1
2684 : a042            >            ldy #$42
2686 : a203            >            ldx #4-1
2688 : d3              >            db  $d3          ;test nop length
                       >        if 1 = 1
2689 : ca              >            dex
268a : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
268b : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
268c : f003            >        beq skip1331
                       >        trap            ;failed not equal (non zero)
268e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2691 :                 >skip1331
                       >
                       >            set_a $ff-$d3,0
                       >            load_flag 0
2691 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2693 : 48              >            pha         ;use stack to load status
2694 : a92c            >            lda #$ff-$d3     ;precharge accu
2696 : 28              >            plp
                       >
2697 : d3              >            db  $d3          ;test nop integrity - flags off
2698 : ea              >            nop
2699 : ea              >            nop
                       >            tst_a $ff-$d3,0
269a : 08              >            php         ;save flags
269b : 08              >            php
269c : c92c            >            cmp #$ff-$d3     ;test result
                       >            trap_ne
269e : f003            >        beq skip1336
                       >        trap            ;failed not equal (non zero)
26a0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26a3 :                 >skip1336
                       >
26a3 : 68              >            pla         ;load status
                       >            cmp_flag 0
26a4 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
26a6 : f003            >        beq skip1339
                       >        trap            ;failed not equal (non zero)
26a8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26ab :                 >skip1339
                       >
26ab : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$d3,$ff
                       >            load_flag $ff
26ac : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
26ae : 48              >            pha         ;use stack to load status
26af : a9d7            >            lda #$aa-$d3     ;precharge accu
26b1 : 28              >            plp
                       >
26b2 : d3              >            db  $d3          ;test nop integrity - flags on
26b3 : ea              >            nop
26b4 : ea              >            nop
                       >            tst_a $aa-$d3,$ff
26b5 : 08              >            php         ;save flags
26b6 : 08              >            php
26b7 : c9d7            >            cmp #$aa-$d3     ;test result
                       >            trap_ne
26b9 : f003            >        beq skip1344
                       >        trap            ;failed not equal (non zero)
26bb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26be :                 >skip1344
                       >
26be : 68              >            pla         ;load status
                       >            cmp_flag $ff
26bf : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
26c1 : f003            >        beq skip1347
                       >        trap            ;failed not equal (non zero)
26c3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26c6 :                 >skip1347
                       >
26c6 : 28              >            plp         ;restore status
                       >
26c7 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
26c9 : f003            >        beq skip1349
                       >        trap            ;failed not equal (non zero)
26cb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26ce :                 >skip1349
                       >
26ce : e000            >            cpx #0
                       >            trap_ne         ;x changed
26d0 : f003            >        beq skip1351
                       >        trap            ;failed not equal (non zero)
26d2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26d5 :                 >skip1351
                       >
                        
                                nop_test $e3,1
26d5 : a042            >            ldy #$42
26d7 : a203            >            ldx #4-1
26d9 : e3              >            db  $e3          ;test nop length
                       >        if 1 = 1
26da : ca              >            dex
26db : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
26dc : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
26dd : f003            >        beq skip1354
                       >        trap            ;failed not equal (non zero)
26df : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26e2 :                 >skip1354
                       >
                       >            set_a $ff-$e3,0
                       >            load_flag 0
26e2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
26e4 : 48              >            pha         ;use stack to load status
26e5 : a91c            >            lda #$ff-$e3     ;precharge accu
26e7 : 28              >            plp
                       >
26e8 : e3              >            db  $e3          ;test nop integrity - flags off
26e9 : ea              >            nop
26ea : ea              >            nop
                       >            tst_a $ff-$e3,0
26eb : 08              >            php         ;save flags
26ec : 08              >            php
26ed : c91c            >            cmp #$ff-$e3     ;test result
                       >            trap_ne
26ef : f003            >        beq skip1359
                       >        trap            ;failed not equal (non zero)
26f1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26f4 :                 >skip1359
                       >
26f4 : 68              >            pla         ;load status
                       >            cmp_flag 0
26f5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
26f7 : f003            >        beq skip1362
                       >        trap            ;failed not equal (non zero)
26f9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26fc :                 >skip1362
                       >
26fc : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$e3,$ff
                       >            load_flag $ff
26fd : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
26ff : 48              >            pha         ;use stack to load status
2700 : a9c7            >            lda #$aa-$e3     ;precharge accu
2702 : 28              >            plp
                       >
2703 : e3              >            db  $e3          ;test nop integrity - flags on
2704 : ea              >            nop
2705 : ea              >            nop
                       >            tst_a $aa-$e3,$ff
2706 : 08              >            php         ;save flags
2707 : 08              >            php
2708 : c9c7            >            cmp #$aa-$e3     ;test result
                       >            trap_ne
270a : f003            >        beq skip1367
                       >        trap            ;failed not equal (non zero)
270c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
270f :                 >skip1367
                       >
270f : 68              >            pla         ;load status
                       >            cmp_flag $ff
2710 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2712 : f003            >        beq skip1370
                       >        trap            ;failed not equal (non zero)
2714 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2717 :                 >skip1370
                       >
2717 : 28              >            plp         ;restore status
                       >
2718 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
271a : f003            >        beq skip1372
                       >        trap            ;failed not equal (non zero)
271c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
271f :                 >skip1372
                       >
271f : e000            >            cpx #0
                       >            trap_ne         ;x changed
2721 : f003            >        beq skip1374
                       >        trap            ;failed not equal (non zero)
2723 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2726 :                 >skip1374
                       >
                        
                                nop_test $f3,1
2726 : a042            >            ldy #$42
2728 : a203            >            ldx #4-1
272a : f3              >            db  $f3          ;test nop length
                       >        if 1 = 1
272b : ca              >            dex
272c : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
272d : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
272e : f003            >        beq skip1377
                       >        trap            ;failed not equal (non zero)
2730 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2733 :                 >skip1377
                       >
                       >            set_a $ff-$f3,0
                       >            load_flag 0
2733 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2735 : 48              >            pha         ;use stack to load status
2736 : a90c            >            lda #$ff-$f3     ;precharge accu
2738 : 28              >            plp
                       >
2739 : f3              >            db  $f3          ;test nop integrity - flags off
273a : ea              >            nop
273b : ea              >            nop
                       >            tst_a $ff-$f3,0
273c : 08              >            php         ;save flags
273d : 08              >            php
273e : c90c            >            cmp #$ff-$f3     ;test result
                       >            trap_ne
2740 : f003            >        beq skip1382
                       >        trap            ;failed not equal (non zero)
2742 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2745 :                 >skip1382
                       >
2745 : 68              >            pla         ;load status
                       >            cmp_flag 0
2746 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2748 : f003            >        beq skip1385
                       >        trap            ;failed not equal (non zero)
274a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
274d :                 >skip1385
                       >
274d : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$f3,$ff
                       >            load_flag $ff
274e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2750 : 48              >            pha         ;use stack to load status
2751 : a9b7            >            lda #$aa-$f3     ;precharge accu
2753 : 28              >            plp
                       >
2754 : f3              >            db  $f3          ;test nop integrity - flags on
2755 : ea              >            nop
2756 : ea              >            nop
                       >            tst_a $aa-$f3,$ff
2757 : 08              >            php         ;save flags
2758 : 08              >            php
2759 : c9b7            >            cmp #$aa-$f3     ;test result
                       >            trap_ne
275b : f003            >        beq skip1390
                       >        trap            ;failed not equal (non zero)
275d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2760 :                 >skip1390
                       >
2760 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2761 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2763 : f003            >        beq skip1393
                       >        trap            ;failed not equal (non zero)
2765 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2768 :                 >skip1393
                       >
2768 : 28              >            plp         ;restore status
                       >
2769 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
276b : f003            >        beq skip1395
                       >        trap            ;failed not equal (non zero)
276d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2770 :                 >skip1395
                       >
2770 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2772 : f003            >        beq skip1397
                       >        trap            ;failed not equal (non zero)
2774 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2777 :                 >skip1397
                       >
                        
                                nop_test $0b,1
2777 : a042            >            ldy #$42
2779 : a203            >            ldx #4-1
277b : 0b              >            db  $0b          ;test nop length
                       >        if 1 = 1
277c : ca              >            dex
277d : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
277e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
277f : f003            >        beq skip1400
                       >        trap            ;failed not equal (non zero)
2781 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2784 :                 >skip1400
                       >
                       >            set_a $ff-$0b,0
                       >            load_flag 0
2784 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2786 : 48              >            pha         ;use stack to load status
2787 : a9f4            >            lda #$ff-$0b     ;precharge accu
2789 : 28              >            plp
                       >
278a : 0b              >            db  $0b          ;test nop integrity - flags off
278b : ea              >            nop
278c : ea              >            nop
                       >            tst_a $ff-$0b,0
278d : 08              >            php         ;save flags
278e : 08              >            php
278f : c9f4            >            cmp #$ff-$0b     ;test result
                       >            trap_ne
2791 : f003            >        beq skip1405
                       >        trap            ;failed not equal (non zero)
2793 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2796 :                 >skip1405
                       >
2796 : 68              >            pla         ;load status
                       >            cmp_flag 0
2797 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2799 : f003            >        beq skip1408
                       >        trap            ;failed not equal (non zero)
279b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
279e :                 >skip1408
                       >
279e : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$0b,$ff
                       >            load_flag $ff
279f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
27a1 : 48              >            pha         ;use stack to load status
27a2 : a99f            >            lda #$aa-$0b     ;precharge accu
27a4 : 28              >            plp
                       >
27a5 : 0b              >            db  $0b          ;test nop integrity - flags on
27a6 : ea              >            nop
27a7 : ea              >            nop
                       >            tst_a $aa-$0b,$ff
27a8 : 08              >            php         ;save flags
27a9 : 08              >            php
27aa : c99f            >            cmp #$aa-$0b     ;test result
                       >            trap_ne
27ac : f003            >        beq skip1413
                       >        trap            ;failed not equal (non zero)
27ae : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27b1 :                 >skip1413
                       >
27b1 : 68              >            pla         ;load status
                       >            cmp_flag $ff
27b2 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
27b4 : f003            >        beq skip1416
                       >        trap            ;failed not equal (non zero)
27b6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27b9 :                 >skip1416
                       >
27b9 : 28              >            plp         ;restore status
                       >
27ba : c042            >            cpy #$42
                       >            trap_ne         ;y changed
27bc : f003            >        beq skip1418
                       >        trap            ;failed not equal (non zero)
27be : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27c1 :                 >skip1418
                       >
27c1 : e000            >            cpx #0
                       >            trap_ne         ;x changed
27c3 : f003            >        beq skip1420
                       >        trap            ;failed not equal (non zero)
27c5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27c8 :                 >skip1420
                       >
                        
                                nop_test $1b,1
27c8 : a042            >            ldy #$42
27ca : a203            >            ldx #4-1
27cc : 1b              >            db  $1b          ;test nop length
                       >        if 1 = 1
27cd : ca              >            dex
27ce : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
27cf : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
27d0 : f003            >        beq skip1423
                       >        trap            ;failed not equal (non zero)
27d2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27d5 :                 >skip1423
                       >
                       >            set_a $ff-$1b,0
                       >            load_flag 0
27d5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
27d7 : 48              >            pha         ;use stack to load status
27d8 : a9e4            >            lda #$ff-$1b     ;precharge accu
27da : 28              >            plp
                       >
27db : 1b              >            db  $1b          ;test nop integrity - flags off
27dc : ea              >            nop
27dd : ea              >            nop
                       >            tst_a $ff-$1b,0
27de : 08              >            php         ;save flags
27df : 08              >            php
27e0 : c9e4            >            cmp #$ff-$1b     ;test result
                       >            trap_ne
27e2 : f003            >        beq skip1428
                       >        trap            ;failed not equal (non zero)
27e4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27e7 :                 >skip1428
                       >
27e7 : 68              >            pla         ;load status
                       >            cmp_flag 0
27e8 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
27ea : f003            >        beq skip1431
                       >        trap            ;failed not equal (non zero)
27ec : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27ef :                 >skip1431
                       >
27ef : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$1b,$ff
                       >            load_flag $ff
27f0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
27f2 : 48              >            pha         ;use stack to load status
27f3 : a98f            >            lda #$aa-$1b     ;precharge accu
27f5 : 28              >            plp
                       >
27f6 : 1b              >            db  $1b          ;test nop integrity - flags on
27f7 : ea              >            nop
27f8 : ea              >            nop
                       >            tst_a $aa-$1b,$ff
27f9 : 08              >            php         ;save flags
27fa : 08              >            php
27fb : c98f            >            cmp #$aa-$1b     ;test result
                       >            trap_ne
27fd : f003            >        beq skip1436
                       >        trap            ;failed not equal (non zero)
27ff : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2802 :                 >skip1436
                       >
2802 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2803 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2805 : f003            >        beq skip1439
                       >        trap            ;failed not equal (non zero)
2807 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
280a :                 >skip1439
                       >
280a : 28              >            plp         ;restore status
                       >
280b : c042            >            cpy #$42
                       >            trap_ne         ;y changed
280d : f003            >        beq skip1441
                       >        trap            ;failed not equal (non zero)
280f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2812 :                 >skip1441
                       >
2812 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2814 : f003            >        beq skip1443
                       >        trap            ;failed not equal (non zero)
2816 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2819 :                 >skip1443
                       >
                        
                                nop_test $2b,1
2819 : a042            >            ldy #$42
281b : a203            >            ldx #4-1
281d : 2b              >            db  $2b          ;test nop length
                       >        if 1 = 1
281e : ca              >            dex
281f : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2820 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2821 : f003            >        beq skip1446
                       >        trap            ;failed not equal (non zero)
2823 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2826 :                 >skip1446
                       >
                       >            set_a $ff-$2b,0
                       >            load_flag 0
2826 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2828 : 48              >            pha         ;use stack to load status
2829 : a9d4            >            lda #$ff-$2b     ;precharge accu
282b : 28              >            plp
                       >
282c : 2b              >            db  $2b          ;test nop integrity - flags off
282d : ea              >            nop
282e : ea              >            nop
                       >            tst_a $ff-$2b,0
282f : 08              >            php         ;save flags
2830 : 08              >            php
2831 : c9d4            >            cmp #$ff-$2b     ;test result
                       >            trap_ne
2833 : f003            >        beq skip1451
                       >        trap            ;failed not equal (non zero)
2835 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2838 :                 >skip1451
                       >
2838 : 68              >            pla         ;load status
                       >            cmp_flag 0
2839 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
283b : f003            >        beq skip1454
                       >        trap            ;failed not equal (non zero)
283d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2840 :                 >skip1454
                       >
2840 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$2b,$ff
                       >            load_flag $ff
2841 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2843 : 48              >            pha         ;use stack to load status
2844 : a97f            >            lda #$aa-$2b     ;precharge accu
2846 : 28              >            plp
                       >
2847 : 2b              >            db  $2b          ;test nop integrity - flags on
2848 : ea              >            nop
2849 : ea              >            nop
                       >            tst_a $aa-$2b,$ff
284a : 08              >            php         ;save flags
284b : 08              >            php
284c : c97f            >            cmp #$aa-$2b     ;test result
                       >            trap_ne
284e : f003            >        beq skip1459
                       >        trap            ;failed not equal (non zero)
2850 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2853 :                 >skip1459
                       >
2853 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2854 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2856 : f003            >        beq skip1462
                       >        trap            ;failed not equal (non zero)
2858 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
285b :                 >skip1462
                       >
285b : 28              >            plp         ;restore status
                       >
285c : c042            >            cpy #$42
                       >            trap_ne         ;y changed
285e : f003            >        beq skip1464
                       >        trap            ;failed not equal (non zero)
2860 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2863 :                 >skip1464
                       >
2863 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2865 : f003            >        beq skip1466
                       >        trap            ;failed not equal (non zero)
2867 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
286a :                 >skip1466
                       >
                        
                                nop_test $3b,1
286a : a042            >            ldy #$42
286c : a203            >            ldx #4-1
286e : 3b              >            db  $3b          ;test nop length
                       >        if 1 = 1
286f : ca              >            dex
2870 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2871 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2872 : f003            >        beq skip1469
                       >        trap            ;failed not equal (non zero)
2874 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2877 :                 >skip1469
                       >
                       >            set_a $ff-$3b,0
                       >            load_flag 0
2877 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2879 : 48              >            pha         ;use stack to load status
287a : a9c4            >            lda #$ff-$3b     ;precharge accu
287c : 28              >            plp
                       >
287d : 3b              >            db  $3b          ;test nop integrity - flags off
287e : ea              >            nop
287f : ea              >            nop
                       >            tst_a $ff-$3b,0
2880 : 08              >            php         ;save flags
2881 : 08              >            php
2882 : c9c4            >            cmp #$ff-$3b     ;test result
                       >            trap_ne
2884 : f003            >        beq skip1474
                       >        trap            ;failed not equal (non zero)
2886 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2889 :                 >skip1474
                       >
2889 : 68              >            pla         ;load status
                       >            cmp_flag 0
288a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
288c : f003            >        beq skip1477
                       >        trap            ;failed not equal (non zero)
288e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2891 :                 >skip1477
                       >
2891 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$3b,$ff
                       >            load_flag $ff
2892 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2894 : 48              >            pha         ;use stack to load status
2895 : a96f            >            lda #$aa-$3b     ;precharge accu
2897 : 28              >            plp
                       >
2898 : 3b              >            db  $3b          ;test nop integrity - flags on
2899 : ea              >            nop
289a : ea              >            nop
                       >            tst_a $aa-$3b,$ff
289b : 08              >            php         ;save flags
289c : 08              >            php
289d : c96f            >            cmp #$aa-$3b     ;test result
                       >            trap_ne
289f : f003            >        beq skip1482
                       >        trap            ;failed not equal (non zero)
28a1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28a4 :                 >skip1482
                       >
28a4 : 68              >            pla         ;load status
                       >            cmp_flag $ff
28a5 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
28a7 : f003            >        beq skip1485
                       >        trap            ;failed not equal (non zero)
28a9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28ac :                 >skip1485
                       >
28ac : 28              >            plp         ;restore status
                       >
28ad : c042            >            cpy #$42
                       >            trap_ne         ;y changed
28af : f003            >        beq skip1487
                       >        trap            ;failed not equal (non zero)
28b1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28b4 :                 >skip1487
                       >
28b4 : e000            >            cpx #0
                       >            trap_ne         ;x changed
28b6 : f003            >        beq skip1489
                       >        trap            ;failed not equal (non zero)
28b8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28bb :                 >skip1489
                       >
                        
                                nop_test $4b,1
28bb : a042            >            ldy #$42
28bd : a203            >            ldx #4-1
28bf : 4b              >            db  $4b          ;test nop length
                       >        if 1 = 1
28c0 : ca              >            dex
28c1 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
28c2 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
28c3 : f003            >        beq skip1492
                       >        trap            ;failed not equal (non zero)
28c5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28c8 :                 >skip1492
                       >
                       >            set_a $ff-$4b,0
                       >            load_flag 0
28c8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
28ca : 48              >            pha         ;use stack to load status
28cb : a9b4            >            lda #$ff-$4b     ;precharge accu
28cd : 28              >            plp
                       >
28ce : 4b              >            db  $4b          ;test nop integrity - flags off
28cf : ea              >            nop
28d0 : ea              >            nop
                       >            tst_a $ff-$4b,0
28d1 : 08              >            php         ;save flags
28d2 : 08              >            php
28d3 : c9b4            >            cmp #$ff-$4b     ;test result
                       >            trap_ne
28d5 : f003            >        beq skip1497
                       >        trap            ;failed not equal (non zero)
28d7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28da :                 >skip1497
                       >
28da : 68              >            pla         ;load status
                       >            cmp_flag 0
28db : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
28dd : f003            >        beq skip1500
                       >        trap            ;failed not equal (non zero)
28df : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28e2 :                 >skip1500
                       >
28e2 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$4b,$ff
                       >            load_flag $ff
28e3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
28e5 : 48              >            pha         ;use stack to load status
28e6 : a95f            >            lda #$aa-$4b     ;precharge accu
28e8 : 28              >            plp
                       >
28e9 : 4b              >            db  $4b          ;test nop integrity - flags on
28ea : ea              >            nop
28eb : ea              >            nop
                       >            tst_a $aa-$4b,$ff
28ec : 08              >            php         ;save flags
28ed : 08              >            php
28ee : c95f            >            cmp #$aa-$4b     ;test result
                       >            trap_ne
28f0 : f003            >        beq skip1505
                       >        trap            ;failed not equal (non zero)
28f2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28f5 :                 >skip1505
                       >
28f5 : 68              >            pla         ;load status
                       >            cmp_flag $ff
28f6 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
28f8 : f003            >        beq skip1508
                       >        trap            ;failed not equal (non zero)
28fa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28fd :                 >skip1508
                       >
28fd : 28              >            plp         ;restore status
                       >
28fe : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2900 : f003            >        beq skip1510
                       >        trap            ;failed not equal (non zero)
2902 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2905 :                 >skip1510
                       >
2905 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2907 : f003            >        beq skip1512
                       >        trap            ;failed not equal (non zero)
2909 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
290c :                 >skip1512
                       >
                        
                                nop_test $5b,1
290c : a042            >            ldy #$42
290e : a203            >            ldx #4-1
2910 : 5b              >            db  $5b          ;test nop length
                       >        if 1 = 1
2911 : ca              >            dex
2912 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2913 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2914 : f003            >        beq skip1515
                       >        trap            ;failed not equal (non zero)
2916 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2919 :                 >skip1515
                       >
                       >            set_a $ff-$5b,0
                       >            load_flag 0
2919 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
291b : 48              >            pha         ;use stack to load status
291c : a9a4            >            lda #$ff-$5b     ;precharge accu
291e : 28              >            plp
                       >
291f : 5b              >            db  $5b          ;test nop integrity - flags off
2920 : ea              >            nop
2921 : ea              >            nop
                       >            tst_a $ff-$5b,0
2922 : 08              >            php         ;save flags
2923 : 08              >            php
2924 : c9a4            >            cmp #$ff-$5b     ;test result
                       >            trap_ne
2926 : f003            >        beq skip1520
                       >        trap            ;failed not equal (non zero)
2928 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
292b :                 >skip1520
                       >
292b : 68              >            pla         ;load status
                       >            cmp_flag 0
292c : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
292e : f003            >        beq skip1523
                       >        trap            ;failed not equal (non zero)
2930 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2933 :                 >skip1523
                       >
2933 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$5b,$ff
                       >            load_flag $ff
2934 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2936 : 48              >            pha         ;use stack to load status
2937 : a94f            >            lda #$aa-$5b     ;precharge accu
2939 : 28              >            plp
                       >
293a : 5b              >            db  $5b          ;test nop integrity - flags on
293b : ea              >            nop
293c : ea              >            nop
                       >            tst_a $aa-$5b,$ff
293d : 08              >            php         ;save flags
293e : 08              >            php
293f : c94f            >            cmp #$aa-$5b     ;test result
                       >            trap_ne
2941 : f003            >        beq skip1528
                       >        trap            ;failed not equal (non zero)
2943 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2946 :                 >skip1528
                       >
2946 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2947 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2949 : f003            >        beq skip1531
                       >        trap            ;failed not equal (non zero)
294b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
294e :                 >skip1531
                       >
294e : 28              >            plp         ;restore status
                       >
294f : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2951 : f003            >        beq skip1533
                       >        trap            ;failed not equal (non zero)
2953 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2956 :                 >skip1533
                       >
2956 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2958 : f003            >        beq skip1535
                       >        trap            ;failed not equal (non zero)
295a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
295d :                 >skip1535
                       >
                        
                                nop_test $6b,1
295d : a042            >            ldy #$42
295f : a203            >            ldx #4-1
2961 : 6b              >            db  $6b          ;test nop length
                       >        if 1 = 1
2962 : ca              >            dex
2963 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2964 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2965 : f003            >        beq skip1538
                       >        trap            ;failed not equal (non zero)
2967 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
296a :                 >skip1538
                       >
                       >            set_a $ff-$6b,0
                       >            load_flag 0
296a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
296c : 48              >            pha         ;use stack to load status
296d : a994            >            lda #$ff-$6b     ;precharge accu
296f : 28              >            plp
                       >
2970 : 6b              >            db  $6b          ;test nop integrity - flags off
2971 : ea              >            nop
2972 : ea              >            nop
                       >            tst_a $ff-$6b,0
2973 : 08              >            php         ;save flags
2974 : 08              >            php
2975 : c994            >            cmp #$ff-$6b     ;test result
                       >            trap_ne
2977 : f003            >        beq skip1543
                       >        trap            ;failed not equal (non zero)
2979 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
297c :                 >skip1543
                       >
297c : 68              >            pla         ;load status
                       >            cmp_flag 0
297d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
297f : f003            >        beq skip1546
                       >        trap            ;failed not equal (non zero)
2981 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2984 :                 >skip1546
                       >
2984 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$6b,$ff
                       >            load_flag $ff
2985 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2987 : 48              >            pha         ;use stack to load status
2988 : a93f            >            lda #$aa-$6b     ;precharge accu
298a : 28              >            plp
                       >
298b : 6b              >            db  $6b          ;test nop integrity - flags on
298c : ea              >            nop
298d : ea              >            nop
                       >            tst_a $aa-$6b,$ff
298e : 08              >            php         ;save flags
298f : 08              >            php
2990 : c93f            >            cmp #$aa-$6b     ;test result
                       >            trap_ne
2992 : f003            >        beq skip1551
                       >        trap            ;failed not equal (non zero)
2994 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2997 :                 >skip1551
                       >
2997 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2998 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
299a : f003            >        beq skip1554
                       >        trap            ;failed not equal (non zero)
299c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
299f :                 >skip1554
                       >
299f : 28              >            plp         ;restore status
                       >
29a0 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
29a2 : f003            >        beq skip1556
                       >        trap            ;failed not equal (non zero)
29a4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29a7 :                 >skip1556
                       >
29a7 : e000            >            cpx #0
                       >            trap_ne         ;x changed
29a9 : f003            >        beq skip1558
                       >        trap            ;failed not equal (non zero)
29ab : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29ae :                 >skip1558
                       >
                        
                                nop_test $7b,1
29ae : a042            >            ldy #$42
29b0 : a203            >            ldx #4-1
29b2 : 7b              >            db  $7b          ;test nop length
                       >        if 1 = 1
29b3 : ca              >            dex
29b4 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
29b5 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
29b6 : f003            >        beq skip1561
                       >        trap            ;failed not equal (non zero)
29b8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29bb :                 >skip1561
                       >
                       >            set_a $ff-$7b,0
                       >            load_flag 0
29bb : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
29bd : 48              >            pha         ;use stack to load status
29be : a984            >            lda #$ff-$7b     ;precharge accu
29c0 : 28              >            plp
                       >
29c1 : 7b              >            db  $7b          ;test nop integrity - flags off
29c2 : ea              >            nop
29c3 : ea              >            nop
                       >            tst_a $ff-$7b,0
29c4 : 08              >            php         ;save flags
29c5 : 08              >            php
29c6 : c984            >            cmp #$ff-$7b     ;test result
                       >            trap_ne
29c8 : f003            >        beq skip1566
                       >        trap            ;failed not equal (non zero)
29ca : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29cd :                 >skip1566
                       >
29cd : 68              >            pla         ;load status
                       >            cmp_flag 0
29ce : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
29d0 : f003            >        beq skip1569
                       >        trap            ;failed not equal (non zero)
29d2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29d5 :                 >skip1569
                       >
29d5 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$7b,$ff
                       >            load_flag $ff
29d6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
29d8 : 48              >            pha         ;use stack to load status
29d9 : a92f            >            lda #$aa-$7b     ;precharge accu
29db : 28              >            plp
                       >
29dc : 7b              >            db  $7b          ;test nop integrity - flags on
29dd : ea              >            nop
29de : ea              >            nop
                       >            tst_a $aa-$7b,$ff
29df : 08              >            php         ;save flags
29e0 : 08              >            php
29e1 : c92f            >            cmp #$aa-$7b     ;test result
                       >            trap_ne
29e3 : f003            >        beq skip1574
                       >        trap            ;failed not equal (non zero)
29e5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29e8 :                 >skip1574
                       >
29e8 : 68              >            pla         ;load status
                       >            cmp_flag $ff
29e9 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
29eb : f003            >        beq skip1577
                       >        trap            ;failed not equal (non zero)
29ed : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29f0 :                 >skip1577
                       >
29f0 : 28              >            plp         ;restore status
                       >
29f1 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
29f3 : f003            >        beq skip1579
                       >        trap            ;failed not equal (non zero)
29f5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29f8 :                 >skip1579
                       >
29f8 : e000            >            cpx #0
                       >            trap_ne         ;x changed
29fa : f003            >        beq skip1581
                       >        trap            ;failed not equal (non zero)
29fc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29ff :                 >skip1581
                       >
                        
                                nop_test $8b,1
29ff : a042            >            ldy #$42
2a01 : a203            >            ldx #4-1
2a03 : 8b              >            db  $8b          ;test nop length
                       >        if 1 = 1
2a04 : ca              >            dex
2a05 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2a06 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2a07 : f003            >        beq skip1584
                       >        trap            ;failed not equal (non zero)
2a09 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a0c :                 >skip1584
                       >
                       >            set_a $ff-$8b,0
                       >            load_flag 0
2a0c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2a0e : 48              >            pha         ;use stack to load status
2a0f : a974            >            lda #$ff-$8b     ;precharge accu
2a11 : 28              >            plp
                       >
2a12 : 8b              >            db  $8b          ;test nop integrity - flags off
2a13 : ea              >            nop
2a14 : ea              >            nop
                       >            tst_a $ff-$8b,0
2a15 : 08              >            php         ;save flags
2a16 : 08              >            php
2a17 : c974            >            cmp #$ff-$8b     ;test result
                       >            trap_ne
2a19 : f003            >        beq skip1589
                       >        trap            ;failed not equal (non zero)
2a1b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a1e :                 >skip1589
                       >
2a1e : 68              >            pla         ;load status
                       >            cmp_flag 0
2a1f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2a21 : f003            >        beq skip1592
                       >        trap            ;failed not equal (non zero)
2a23 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a26 :                 >skip1592
                       >
2a26 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$8b,$ff
                       >            load_flag $ff
2a27 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2a29 : 48              >            pha         ;use stack to load status
2a2a : a91f            >            lda #$aa-$8b     ;precharge accu
2a2c : 28              >            plp
                       >
2a2d : 8b              >            db  $8b          ;test nop integrity - flags on
2a2e : ea              >            nop
2a2f : ea              >            nop
                       >            tst_a $aa-$8b,$ff
2a30 : 08              >            php         ;save flags
2a31 : 08              >            php
2a32 : c91f            >            cmp #$aa-$8b     ;test result
                       >            trap_ne
2a34 : f003            >        beq skip1597
                       >        trap            ;failed not equal (non zero)
2a36 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a39 :                 >skip1597
                       >
2a39 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2a3a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2a3c : f003            >        beq skip1600
                       >        trap            ;failed not equal (non zero)
2a3e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a41 :                 >skip1600
                       >
2a41 : 28              >            plp         ;restore status
                       >
2a42 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2a44 : f003            >        beq skip1602
                       >        trap            ;failed not equal (non zero)
2a46 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a49 :                 >skip1602
                       >
2a49 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2a4b : f003            >        beq skip1604
                       >        trap            ;failed not equal (non zero)
2a4d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a50 :                 >skip1604
                       >
                        
                                nop_test $9b,1
2a50 : a042            >            ldy #$42
2a52 : a203            >            ldx #4-1
2a54 : 9b              >            db  $9b          ;test nop length
                       >        if 1 = 1
2a55 : ca              >            dex
2a56 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2a57 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2a58 : f003            >        beq skip1607
                       >        trap            ;failed not equal (non zero)
2a5a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a5d :                 >skip1607
                       >
                       >            set_a $ff-$9b,0
                       >            load_flag 0
2a5d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2a5f : 48              >            pha         ;use stack to load status
2a60 : a964            >            lda #$ff-$9b     ;precharge accu
2a62 : 28              >            plp
                       >
2a63 : 9b              >            db  $9b          ;test nop integrity - flags off
2a64 : ea              >            nop
2a65 : ea              >            nop
                       >            tst_a $ff-$9b,0
2a66 : 08              >            php         ;save flags
2a67 : 08              >            php
2a68 : c964            >            cmp #$ff-$9b     ;test result
                       >            trap_ne
2a6a : f003            >        beq skip1612
                       >        trap            ;failed not equal (non zero)
2a6c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a6f :                 >skip1612
                       >
2a6f : 68              >            pla         ;load status
                       >            cmp_flag 0
2a70 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2a72 : f003            >        beq skip1615
                       >        trap            ;failed not equal (non zero)
2a74 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a77 :                 >skip1615
                       >
2a77 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$9b,$ff
                       >            load_flag $ff
2a78 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2a7a : 48              >            pha         ;use stack to load status
2a7b : a90f            >            lda #$aa-$9b     ;precharge accu
2a7d : 28              >            plp
                       >
2a7e : 9b              >            db  $9b          ;test nop integrity - flags on
2a7f : ea              >            nop
2a80 : ea              >            nop
                       >            tst_a $aa-$9b,$ff
2a81 : 08              >            php         ;save flags
2a82 : 08              >            php
2a83 : c90f            >            cmp #$aa-$9b     ;test result
                       >            trap_ne
2a85 : f003            >        beq skip1620
                       >        trap            ;failed not equal (non zero)
2a87 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a8a :                 >skip1620
                       >
2a8a : 68              >            pla         ;load status
                       >            cmp_flag $ff
2a8b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2a8d : f003            >        beq skip1623
                       >        trap            ;failed not equal (non zero)
2a8f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a92 :                 >skip1623
                       >
2a92 : 28              >            plp         ;restore status
                       >
2a93 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2a95 : f003            >        beq skip1625
                       >        trap            ;failed not equal (non zero)
2a97 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a9a :                 >skip1625
                       >
2a9a : e000            >            cpx #0
                       >            trap_ne         ;x changed
2a9c : f003            >        beq skip1627
                       >        trap            ;failed not equal (non zero)
2a9e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2aa1 :                 >skip1627
                       >
                        
                                nop_test $ab,1
2aa1 : a042            >            ldy #$42
2aa3 : a203            >            ldx #4-1
2aa5 : ab              >            db  $ab          ;test nop length
                       >        if 1 = 1
2aa6 : ca              >            dex
2aa7 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2aa8 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2aa9 : f003            >        beq skip1630
                       >        trap            ;failed not equal (non zero)
2aab : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2aae :                 >skip1630
                       >
                       >            set_a $ff-$ab,0
                       >            load_flag 0
2aae : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2ab0 : 48              >            pha         ;use stack to load status
2ab1 : a954            >            lda #$ff-$ab     ;precharge accu
2ab3 : 28              >            plp
                       >
2ab4 : ab              >            db  $ab          ;test nop integrity - flags off
2ab5 : ea              >            nop
2ab6 : ea              >            nop
                       >            tst_a $ff-$ab,0
2ab7 : 08              >            php         ;save flags
2ab8 : 08              >            php
2ab9 : c954            >            cmp #$ff-$ab     ;test result
                       >            trap_ne
2abb : f003            >        beq skip1635
                       >        trap            ;failed not equal (non zero)
2abd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ac0 :                 >skip1635
                       >
2ac0 : 68              >            pla         ;load status
                       >            cmp_flag 0
2ac1 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2ac3 : f003            >        beq skip1638
                       >        trap            ;failed not equal (non zero)
2ac5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ac8 :                 >skip1638
                       >
2ac8 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$ab,$ff
                       >            load_flag $ff
2ac9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2acb : 48              >            pha         ;use stack to load status
2acc : a9ff            >            lda #$aa-$ab     ;precharge accu
2ace : 28              >            plp
                       >
2acf : ab              >            db  $ab          ;test nop integrity - flags on
2ad0 : ea              >            nop
2ad1 : ea              >            nop
                       >            tst_a $aa-$ab,$ff
2ad2 : 08              >            php         ;save flags
2ad3 : 08              >            php
2ad4 : c9ff            >            cmp #$aa-$ab     ;test result
                       >            trap_ne
2ad6 : f003            >        beq skip1643
                       >        trap            ;failed not equal (non zero)
2ad8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2adb :                 >skip1643
                       >
2adb : 68              >            pla         ;load status
                       >            cmp_flag $ff
2adc : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2ade : f003            >        beq skip1646
                       >        trap            ;failed not equal (non zero)
2ae0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ae3 :                 >skip1646
                       >
2ae3 : 28              >            plp         ;restore status
                       >
2ae4 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2ae6 : f003            >        beq skip1648
                       >        trap            ;failed not equal (non zero)
2ae8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2aeb :                 >skip1648
                       >
2aeb : e000            >            cpx #0
                       >            trap_ne         ;x changed
2aed : f003            >        beq skip1650
                       >        trap            ;failed not equal (non zero)
2aef : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2af2 :                 >skip1650
                       >
                        
                                nop_test $bb,1
2af2 : a042            >            ldy #$42
2af4 : a203            >            ldx #4-1
2af6 : bb              >            db  $bb          ;test nop length
                       >        if 1 = 1
2af7 : ca              >            dex
2af8 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2af9 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2afa : f003            >        beq skip1653
                       >        trap            ;failed not equal (non zero)
2afc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2aff :                 >skip1653
                       >
                       >            set_a $ff-$bb,0
                       >            load_flag 0
2aff : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2b01 : 48              >            pha         ;use stack to load status
2b02 : a944            >            lda #$ff-$bb     ;precharge accu
2b04 : 28              >            plp
                       >
2b05 : bb              >            db  $bb          ;test nop integrity - flags off
2b06 : ea              >            nop
2b07 : ea              >            nop
                       >            tst_a $ff-$bb,0
2b08 : 08              >            php         ;save flags
2b09 : 08              >            php
2b0a : c944            >            cmp #$ff-$bb     ;test result
                       >            trap_ne
2b0c : f003            >        beq skip1658
                       >        trap            ;failed not equal (non zero)
2b0e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b11 :                 >skip1658
                       >
2b11 : 68              >            pla         ;load status
                       >            cmp_flag 0
2b12 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2b14 : f003            >        beq skip1661
                       >        trap            ;failed not equal (non zero)
2b16 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b19 :                 >skip1661
                       >
2b19 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$bb,$ff
                       >            load_flag $ff
2b1a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2b1c : 48              >            pha         ;use stack to load status
2b1d : a9ef            >            lda #$aa-$bb     ;precharge accu
2b1f : 28              >            plp
                       >
2b20 : bb              >            db  $bb          ;test nop integrity - flags on
2b21 : ea              >            nop
2b22 : ea              >            nop
                       >            tst_a $aa-$bb,$ff
2b23 : 08              >            php         ;save flags
2b24 : 08              >            php
2b25 : c9ef            >            cmp #$aa-$bb     ;test result
                       >            trap_ne
2b27 : f003            >        beq skip1666
                       >        trap            ;failed not equal (non zero)
2b29 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b2c :                 >skip1666
                       >
2b2c : 68              >            pla         ;load status
                       >            cmp_flag $ff
2b2d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2b2f : f003            >        beq skip1669
                       >        trap            ;failed not equal (non zero)
2b31 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b34 :                 >skip1669
                       >
2b34 : 28              >            plp         ;restore status
                       >
2b35 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2b37 : f003            >        beq skip1671
                       >        trap            ;failed not equal (non zero)
2b39 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b3c :                 >skip1671
                       >
2b3c : e000            >            cpx #0
                       >            trap_ne         ;x changed
2b3e : f003            >        beq skip1673
                       >        trap            ;failed not equal (non zero)
2b40 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b43 :                 >skip1673
                       >
                        
                                nop_test $eb,1
2b43 : a042            >            ldy #$42
2b45 : a203            >            ldx #4-1
2b47 : eb              >            db  $eb          ;test nop length
                       >        if 1 = 1
2b48 : ca              >            dex
2b49 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2b4a : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2b4b : f003            >        beq skip1676
                       >        trap            ;failed not equal (non zero)
2b4d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b50 :                 >skip1676
                       >
                       >            set_a $ff-$eb,0
                       >            load_flag 0
2b50 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2b52 : 48              >            pha         ;use stack to load status
2b53 : a914            >            lda #$ff-$eb     ;precharge accu
2b55 : 28              >            plp
                       >
2b56 : eb              >            db  $eb          ;test nop integrity - flags off
2b57 : ea              >            nop
2b58 : ea              >            nop
                       >            tst_a $ff-$eb,0
2b59 : 08              >            php         ;save flags
2b5a : 08              >            php
2b5b : c914            >            cmp #$ff-$eb     ;test result
                       >            trap_ne
2b5d : f003            >        beq skip1681
                       >        trap            ;failed not equal (non zero)
2b5f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b62 :                 >skip1681
                       >
2b62 : 68              >            pla         ;load status
                       >            cmp_flag 0
2b63 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2b65 : f003            >        beq skip1684
                       >        trap            ;failed not equal (non zero)
2b67 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b6a :                 >skip1684
                       >
2b6a : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$eb,$ff
                       >            load_flag $ff
2b6b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2b6d : 48              >            pha         ;use stack to load status
2b6e : a9bf            >            lda #$aa-$eb     ;precharge accu
2b70 : 28              >            plp
                       >
2b71 : eb              >            db  $eb          ;test nop integrity - flags on
2b72 : ea              >            nop
2b73 : ea              >            nop
                       >            tst_a $aa-$eb,$ff
2b74 : 08              >            php         ;save flags
2b75 : 08              >            php
2b76 : c9bf            >            cmp #$aa-$eb     ;test result
                       >            trap_ne
2b78 : f003            >        beq skip1689
                       >        trap            ;failed not equal (non zero)
2b7a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b7d :                 >skip1689
                       >
2b7d : 68              >            pla         ;load status
                       >            cmp_flag $ff
2b7e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2b80 : f003            >        beq skip1692
                       >        trap            ;failed not equal (non zero)
2b82 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b85 :                 >skip1692
                       >
2b85 : 28              >            plp         ;restore status
                       >
2b86 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2b88 : f003            >        beq skip1694
                       >        trap            ;failed not equal (non zero)
2b8a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b8d :                 >skip1694
                       >
2b8d : e000            >            cpx #0
                       >            trap_ne         ;x changed
2b8f : f003            >        beq skip1696
                       >        trap            ;failed not equal (non zero)
2b91 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b94 :                 >skip1696
                       >
                        
                                nop_test $fb,1
2b94 : a042            >            ldy #$42
2b96 : a203            >            ldx #4-1
2b98 : fb              >            db  $fb          ;test nop length
                       >        if 1 = 1
2b99 : ca              >            dex
2b9a : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2b9b : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2b9c : f003            >        beq skip1699
                       >        trap            ;failed not equal (non zero)
2b9e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ba1 :                 >skip1699
                       >
                       >            set_a $ff-$fb,0
                       >            load_flag 0
2ba1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2ba3 : 48              >            pha         ;use stack to load status
2ba4 : a904            >            lda #$ff-$fb     ;precharge accu
2ba6 : 28              >            plp
                       >
2ba7 : fb              >            db  $fb          ;test nop integrity - flags off
2ba8 : ea              >            nop
2ba9 : ea              >            nop
                       >            tst_a $ff-$fb,0
2baa : 08              >            php         ;save flags
2bab : 08              >            php
2bac : c904            >            cmp #$ff-$fb     ;test result
                       >            trap_ne
2bae : f003            >        beq skip1704
                       >        trap            ;failed not equal (non zero)
2bb0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2bb3 :                 >skip1704
                       >
2bb3 : 68              >            pla         ;load status
                       >            cmp_flag 0
2bb4 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2bb6 : f003            >        beq skip1707
                       >        trap            ;failed not equal (non zero)
2bb8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2bbb :                 >skip1707
                       >
2bbb : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$fb,$ff
                       >            load_flag $ff
2bbc : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2bbe : 48              >            pha         ;use stack to load status
2bbf : a9af            >            lda #$aa-$fb     ;precharge accu
2bc1 : 28              >            plp
                       >
2bc2 : fb              >            db  $fb          ;test nop integrity - flags on
2bc3 : ea              >            nop
2bc4 : ea              >            nop
                       >            tst_a $aa-$fb,$ff
2bc5 : 08              >            php         ;save flags
2bc6 : 08              >            php
2bc7 : c9af            >            cmp #$aa-$fb     ;test result
                       >            trap_ne
2bc9 : f003            >        beq skip1712
                       >        trap            ;failed not equal (non zero)
2bcb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2bce :                 >skip1712
                       >
2bce : 68              >            pla         ;load status
                       >            cmp_flag $ff
2bcf : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2bd1 : f003            >        beq skip1715
                       >        trap            ;failed not equal (non zero)
2bd3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2bd6 :                 >skip1715
                       >
2bd6 : 28              >            plp         ;restore status
                       >
2bd7 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2bd9 : f003            >        beq skip1717
                       >        trap            ;failed not equal (non zero)
2bdb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2bde :                 >skip1717
                       >
2bde : e000            >            cpx #0
                       >            trap_ne         ;x changed
2be0 : f003            >        beq skip1719
                       >        trap            ;failed not equal (non zero)
2be2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2be5 :                 >skip1719
                       >
                        
                            if rkwl_wdc_op = 0      ;NOPs not available on Rockwell & WDC 65C02
                                nop_test $07,1
                                nop_test $17,1
                                nop_test $27,1
                                nop_test $37,1
                                nop_test $47,1
                                nop_test $57,1
                                nop_test $67,1
                                nop_test $77,1
                                nop_test $87,1
                                nop_test $97,1
                                nop_test $a7,1
                                nop_test $b7,1
                                nop_test $c7,1
                                nop_test $d7,1
                                nop_test $e7,1
                                nop_test $f7,1
                                nop_test $0f,1
                                nop_test $1f,1
                                nop_test $2f,1
                                nop_test $3f,1
                                nop_test $4f,1
                                nop_test $5f,1
                                nop_test $6f,1
                                nop_test $7f,1
                                nop_test $8f,1
                                nop_test $9f,1
                                nop_test $af,1
                                nop_test $bf,1
                                nop_test $cf,1
                                nop_test $df,1
                                nop_test $ef,1
                                nop_test $ff,1
                            endif
                            if  wdc_op = 0          ;NOPs not available on WDC 65C02 (WAI, STP)
                                nop_test $cb,1
                                nop_test $db,1
                            endif
                                next_test
2be5 : ad0202          >            lda test_case   ;previous test
2be8 : c908            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2bea : f003            >        beq skip1722
                       >        trap            ;failed not equal (non zero)
2bec : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2bef :                 >skip1722
                       >
0009 =                 >test_num = test_num + 1
2bef : a909            >            lda #test_num   ;*** next tests' number
2bf1 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            check_ram       ;uncomment to find altered RAM after each test
2bf4 : d8              >            cld
2bf5 : a900            >            lda #0
2bf7 : 8510            >            sta zpt         ;set low byte of indirect pointer
2bf9 : 8513            >            sta zpt+3       ;checksum high byte
2bfb : a20b            >            ldx #11         ;reset modifiable RAM
2bfd : 9df902          >ccs11724      sta jxi_tab,x   ;JMP indirect page cross area
2c00 : ca              >            dex
2c01 : 10fa            >            bpl ccs11724
2c03 : 8dd144          >            sta chkdadi     ;self modifying code
2c06 : 8dee44          >            sta chkdsbi
2c09 : 18              >            clc
2c0a : a207            >            ldx #zp_bss-zero_page ;zeropage - write test area
2c0c : 7510            >ccs31724      adc zero_page,x
2c0e : 9003            >            bcc ccs21724
2c10 : e613            >            inc zpt+3       ;carry to high byte
2c12 : 18              >            clc
2c13 : e8              >ccs21724      inx
2c14 : d0f6            >            bne ccs31724
2c16 : a202            >            ldx #hi(data_segment) ;set high byte of indirect pointer
2c18 : 8611            >            stx zpt+1
2c1a : a00a            >            ldy #lo(data_bss) ;data after write test area
2c1c : 7110            >ccs51724      adc (zpt),y
2c1e : 9003            >            bcc ccs41724
2c20 : e613            >            inc zpt+3       ;carry to high byte
2c22 : 18              >            clc
2c23 : c8              >ccs41724      iny
2c24 : d0f6            >            bne ccs51724
2c26 : e8              >            inx             ;advance RAM high address
2c27 : 8611            >            stx zpt+1
2c29 : e0e0            >            cpx #ram_top
2c2b : d0ef            >            bne ccs51724
2c2d : 8512            >            sta zpt+2       ;checksum low is
2c2f : cd0302          >            cmp ram_chksm   ;checksum low expected
                       >            trap_ne         ;checksum mismatch
2c32 : f003            >        beq skip1725
                       >        trap            ;failed not equal (non zero)
2c34 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c37 :                 >skip1725
                       >
2c37 : a513            >            lda zpt+3       ;checksum high is
2c39 : cd0402          >            cmp ram_chksm+1 ;checksum high expected
                       >            trap_ne         ;checksum mismatch
2c3c : f003            >        beq skip1727
                       >        trap            ;failed not equal (non zero)
2c3e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c41 :                 >skip1727
                       >
                       >
                        
                                    
2c41 : 8d04ef            sta $ef04
2c44 : 6a756d7020696e..  db "jump indirect (test page cross bug is fixed)", 10, 0
2c72 : a203                     ldx #3          ;prepare table
2c74 : bd7046           ji1     lda ji_adr,x
2c77 : 9dfd02                   sta ji_tab,x
2c7a : ca                       dex
2c7b : 10f7                     bpl ji1
2c7d : a949                     lda #hi(ji_px) ;high address if page cross bug
2c7f : 8d0002                   sta pg_x
                                set_stat 0
                       >            load_flag 0
2c82 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2c84 : 48              >            pha         ;use stack to load status
2c85 : 28              >            plp
                        
2c86 : a949                     lda #'I'
2c88 : a24e                     ldx #'N'
2c8a : a044                     ldy #'D'        ;N=0, V=0, Z=0, C=0
2c8c : 6cfd02                   jmp (ji_tab)
2c8f : ea                       nop
                                trap_ne         ;runover protection
2c90 : f003            >        beq skip1731
                       >        trap            ;failed not equal (non zero)
2c92 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c95 :                 >skip1731
                        
                        
2c95 : 88                       dey
2c96 : 88                       dey
2c97 : 08               ji_ret  php             ;either SP or Y count will fail, if we do not hit
2c98 : 88                       dey
2c99 : 88                       dey
2c9a : 88                       dey
2c9b : 28                       plp
                                trap_eq         ;returned flags OK?
2c9c : d003            >        bne skip1733
                       >        trap           ;failed equal (zero)
2c9e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ca1 :                 >skip1733
                        
                                trap_pl
2ca1 : 3003            >        bmi skip1735
                       >        trap            ;failed plus (bit 7 clear)
2ca3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ca6 :                 >skip1735
                        
                                trap_cc
2ca6 : b003            >        bcs skip1737
                       >        trap            ;failed carry clear
2ca8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2cab :                 >skip1737
                        
                                trap_vc
2cab : 7003            >        bvs skip1739
                       >        trap            ;failed overflow clear
2cad : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2cb0 :                 >skip1739
                        
2cb0 : c9e3                     cmp #('I'^$aa)  ;returned registers OK?
                                trap_ne
2cb2 : f003            >        beq skip1741
                       >        trap            ;failed not equal (non zero)
2cb4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2cb7 :                 >skip1741
                        
2cb7 : e04f                     cpx #('N'+1)
                                trap_ne
2cb9 : f003            >        beq skip1743
                       >        trap            ;failed not equal (non zero)
2cbb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2cbe :                 >skip1743
                        
2cbe : c03e                     cpy #('D'-6)
                                trap_ne
2cc0 : f003            >        beq skip1745
                       >        trap            ;failed not equal (non zero)
2cc2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2cc5 :                 >skip1745
                        
2cc5 : ba                       tsx             ;SP check
2cc6 : e0ff                     cpx #$ff
                                trap_ne
2cc8 : f003            >        beq skip1747
                       >        trap            ;failed not equal (non zero)
2cca : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ccd :                 >skip1747
                        
                                next_test
2ccd : ad0202          >            lda test_case   ;previous test
2cd0 : c909            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2cd2 : f003            >        beq skip1750
                       >        trap            ;failed not equal (non zero)
2cd4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2cd7 :                 >skip1750
                       >
000a =                 >test_num = test_num + 1
2cd7 : a90a            >            lda #test_num   ;*** next tests' number
2cd9 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            check_ram       ;uncomment to find altered RAM after each test
2cdc : d8              >            cld
2cdd : a900            >            lda #0
2cdf : 8510            >            sta zpt         ;set low byte of indirect pointer
2ce1 : 8513            >            sta zpt+3       ;checksum high byte
2ce3 : a20b            >            ldx #11         ;reset modifiable RAM
2ce5 : 9df902          >ccs11752      sta jxi_tab,x   ;JMP indirect page cross area
2ce8 : ca              >            dex
2ce9 : 10fa            >            bpl ccs11752
2ceb : 8dd144          >            sta chkdadi     ;self modifying code
2cee : 8dee44          >            sta chkdsbi
2cf1 : 18              >            clc
2cf2 : a207            >            ldx #zp_bss-zero_page ;zeropage - write test area
2cf4 : 7510            >ccs31752      adc zero_page,x
2cf6 : 9003            >            bcc ccs21752
2cf8 : e613            >            inc zpt+3       ;carry to high byte
2cfa : 18              >            clc
2cfb : e8              >ccs21752      inx
2cfc : d0f6            >            bne ccs31752
2cfe : a202            >            ldx #hi(data_segment) ;set high byte of indirect pointer
2d00 : 8611            >            stx zpt+1
2d02 : a00a            >            ldy #lo(data_bss) ;data after write test area
2d04 : 7110            >ccs51752      adc (zpt),y
2d06 : 9003            >            bcc ccs41752
2d08 : e613            >            inc zpt+3       ;carry to high byte
2d0a : 18              >            clc
2d0b : c8              >ccs41752      iny
2d0c : d0f6            >            bne ccs51752
2d0e : e8              >            inx             ;advance RAM high address
2d0f : 8611            >            stx zpt+1
2d11 : e0e0            >            cpx #ram_top
2d13 : d0ef            >            bne ccs51752
2d15 : 8512            >            sta zpt+2       ;checksum low is
2d17 : cd0302          >            cmp ram_chksm   ;checksum low expected
                       >            trap_ne         ;checksum mismatch
2d1a : f003            >        beq skip1753
                       >        trap            ;failed not equal (non zero)
2d1c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d1f :                 >skip1753
                       >
2d1f : a513            >            lda zpt+3       ;checksum high is
2d21 : cd0402          >            cmp ram_chksm+1 ;checksum high expected
                       >            trap_ne         ;checksum mismatch
2d24 : f003            >        beq skip1755
                       >        trap            ;failed not equal (non zero)
2d26 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d29 :                 >skip1755
                       >
                       >
                        
                        
2d29 : 8d04ef            sta $ef04
2d2c : 6a756d7020696e..  db "jump indexed indirect", 10, 0
2d43 : a20b                     ldx #11         ;prepare table
2d45 : bdc146           jxi1    lda jxi_adr,x
2d48 : 9df902                   sta jxi_tab,x
2d4b : ca                       dex
2d4c : 10f7                     bpl jxi1
2d4e : a949                     lda #hi(jxi_px) ;high address if page cross bug
2d50 : 8d0002                   sta pg_x
                                set_stat 0
                       >            load_flag 0
2d53 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2d55 : 48              >            pha         ;use stack to load status
2d56 : 28              >            plp
                        
2d57 : a958                     lda #'X'
2d59 : a204                     ldx #4
2d5b : a049                     ldy #'I'        ;N=0, V=0, Z=0, C=0
2d5d : 7cf902                   jmp (jxi_tab,x)
2d60 : ea                       nop
                                trap_ne         ;runover protection
2d61 : f003            >        beq skip1759
                       >        trap            ;failed not equal (non zero)
2d63 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d66 :                 >skip1759
                        
                        
2d66 : 88                       dey
2d67 : 88                       dey
2d68 : 08               jxi_ret php             ;either SP or Y count will fail, if we do not hit
2d69 : 88                       dey
2d6a : 88                       dey
2d6b : 88                       dey
2d6c : 28                       plp
                                trap_eq         ;returned flags OK?
2d6d : d003            >        bne skip1761
                       >        trap           ;failed equal (zero)
2d6f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d72 :                 >skip1761
                        
                                trap_pl
2d72 : 3003            >        bmi skip1763
                       >        trap            ;failed plus (bit 7 clear)
2d74 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d77 :                 >skip1763
                        
                                trap_cc
2d77 : b003            >        bcs skip1765
                       >        trap            ;failed carry clear
2d79 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d7c :                 >skip1765
                        
                                trap_vc
2d7c : 7003            >        bvs skip1767
                       >        trap            ;failed overflow clear
2d7e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d81 :                 >skip1767
                        
2d81 : c9f2                     cmp #('X'^$aa)  ;returned registers OK?
                                trap_ne
2d83 : f003            >        beq skip1769
                       >        trap            ;failed not equal (non zero)
2d85 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d88 :                 >skip1769
                        
2d88 : e006                     cpx #6
                                trap_ne
2d8a : f003            >        beq skip1771
                       >        trap            ;failed not equal (non zero)
2d8c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d8f :                 >skip1771
                        
2d8f : c043                     cpy #('I'-6)
                                trap_ne
2d91 : f003            >        beq skip1773
                       >        trap            ;failed not equal (non zero)
2d93 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d96 :                 >skip1773
                        
2d96 : ba                       tsx             ;SP check
2d97 : e0ff                     cpx #$ff
                                trap_ne
2d99 : f003            >        beq skip1775
                       >        trap            ;failed not equal (non zero)
2d9b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d9e :                 >skip1775
                        
                        
2d9e : a9ba                     lda #lo(jxp_ok) ;test with index causing a page cross
2da0 : 8d0003                   sta jxp_tab
2da3 : a92d                     lda #hi(jxp_ok)
2da5 : 8d0103                   sta jxp_tab+1
2da8 : a9b7                     lda #lo(jxp_px)
2daa : 8d0002                   sta pg_x
2dad : a92d                     lda #hi(jxp_px)
2daf : 8d0102                   sta pg_x+1
2db2 : a2ff                     ldx #$ff
2db4 : 7c0102                   jmp (jxp_tab-$ff,x)
                                
2db7 :                  jxp_px  
                                trap            ;page cross by index to wrong page
2db7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
                        
2dba :                  jxp_ok
                                next_test
2dba : ad0202          >            lda test_case   ;previous test
2dbd : c90a            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2dbf : f003            >        beq skip1779
                       >        trap            ;failed not equal (non zero)
2dc1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2dc4 :                 >skip1779
                       >
000b =                 >test_num = test_num + 1
2dc4 : a90b            >            lda #test_num   ;*** next tests' number
2dc6 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            check_ram       ;uncomment to find altered RAM after each test
2dc9 : d8              >            cld
2dca : a900            >            lda #0
2dcc : 8510            >            sta zpt         ;set low byte of indirect pointer
2dce : 8513            >            sta zpt+3       ;checksum high byte
2dd0 : a20b            >            ldx #11         ;reset modifiable RAM
2dd2 : 9df902          >ccs11781      sta jxi_tab,x   ;JMP indirect page cross area
2dd5 : ca              >            dex
2dd6 : 10fa            >            bpl ccs11781
2dd8 : 8dd144          >            sta chkdadi     ;self modifying code
2ddb : 8dee44          >            sta chkdsbi
2dde : 18              >            clc
2ddf : a207            >            ldx #zp_bss-zero_page ;zeropage - write test area
2de1 : 7510            >ccs31781      adc zero_page,x
2de3 : 9003            >            bcc ccs21781
2de5 : e613            >            inc zpt+3       ;carry to high byte
2de7 : 18              >            clc
2de8 : e8              >ccs21781      inx
2de9 : d0f6            >            bne ccs31781
2deb : a202            >            ldx #hi(data_segment) ;set high byte of indirect pointer
2ded : 8611            >            stx zpt+1
2def : a00a            >            ldy #lo(data_bss) ;data after write test area
2df1 : 7110            >ccs51781      adc (zpt),y
2df3 : 9003            >            bcc ccs41781
2df5 : e613            >            inc zpt+3       ;carry to high byte
2df7 : 18              >            clc
2df8 : c8              >ccs41781      iny
2df9 : d0f6            >            bne ccs51781
2dfb : e8              >            inx             ;advance RAM high address
2dfc : 8611            >            stx zpt+1
2dfe : e0e0            >            cpx #ram_top
2e00 : d0ef            >            bne ccs51781
2e02 : 8512            >            sta zpt+2       ;checksum low is
2e04 : cd0302          >            cmp ram_chksm   ;checksum low expected
                       >            trap_ne         ;checksum mismatch
2e07 : f003            >        beq skip1782
                       >        trap            ;failed not equal (non zero)
2e09 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e0c :                 >skip1782
                       >
2e0c : a513            >            lda zpt+3       ;checksum high is
2e0e : cd0402          >            cmp ram_chksm+1 ;checksum high expected
                       >            trap_ne         ;checksum mismatch
2e11 : f003            >        beq skip1784
                       >        trap            ;failed not equal (non zero)
2e13 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e16 :                 >skip1784
                       >
                       >
                        
                        
                            if ROM_vectors = 1
2e16 : 8d04ef            sta $ef04
2e19 : 74657374204252..  db "test BRK clears decimal mode", 10, 0
2e37 : f8                       sed
2e38 : 00                       brk
2e39 : ea                       nop
2e3a :                  brk_ret
                                next_test
2e3a : ad0202          >            lda test_case   ;previous test
2e3d : c90b            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2e3f : f003            >        beq skip1787
                       >        trap            ;failed not equal (non zero)
2e41 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e44 :                 >skip1787
                       >
000c =                 >test_num = test_num + 1
2e44 : a90c            >            lda #test_num   ;*** next tests' number
2e46 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            check_ram       ;uncomment to find altered RAM after each test
2e49 : d8              >            cld
2e4a : a900            >            lda #0
2e4c : 8510            >            sta zpt         ;set low byte of indirect pointer
2e4e : 8513            >            sta zpt+3       ;checksum high byte
2e50 : a20b            >            ldx #11         ;reset modifiable RAM
2e52 : 9df902          >ccs11789      sta jxi_tab,x   ;JMP indirect page cross area
2e55 : ca              >            dex
2e56 : 10fa            >            bpl ccs11789
2e58 : 8dd144          >            sta chkdadi     ;self modifying code
2e5b : 8dee44          >            sta chkdsbi
2e5e : 18              >            clc
2e5f : a207            >            ldx #zp_bss-zero_page ;zeropage - write test area
2e61 : 7510            >ccs31789      adc zero_page,x
2e63 : 9003            >            bcc ccs21789
2e65 : e613            >            inc zpt+3       ;carry to high byte
2e67 : 18              >            clc
2e68 : e8              >ccs21789      inx
2e69 : d0f6            >            bne ccs31789
2e6b : a202            >            ldx #hi(data_segment) ;set high byte of indirect pointer
2e6d : 8611            >            stx zpt+1
2e6f : a00a            >            ldy #lo(data_bss) ;data after write test area
2e71 : 7110            >ccs51789      adc (zpt),y
2e73 : 9003            >            bcc ccs41789
2e75 : e613            >            inc zpt+3       ;carry to high byte
2e77 : 18              >            clc
2e78 : c8              >ccs41789      iny
2e79 : d0f6            >            bne ccs51789
2e7b : e8              >            inx             ;advance RAM high address
2e7c : 8611            >            stx zpt+1
2e7e : e0e0            >            cpx #ram_top
2e80 : d0ef            >            bne ccs51789
2e82 : 8512            >            sta zpt+2       ;checksum low is
2e84 : cd0302          >            cmp ram_chksm   ;checksum low expected
                       >            trap_ne         ;checksum mismatch
2e87 : f003            >        beq skip1790
                       >        trap            ;failed not equal (non zero)
2e89 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e8c :                 >skip1790
                       >
2e8c : a513            >            lda zpt+3       ;checksum high is
2e8e : cd0402          >            cmp ram_chksm+1 ;checksum high expected
                       >            trap_ne         ;checksum mismatch
2e91 : f003            >        beq skip1792
                       >        trap            ;failed not equal (non zero)
2e93 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e96 :                 >skip1792
                       >
                       >
                        
                            endif
                         
2e96 : 8d04ef            sta $ef04
2e99 : 74657374696e67..  db "testing accumulator increment/decrement INC A & DEC A", 10, 0
2ed0 : a2ac                     ldx #$ac    ;protect x & y
2ed2 : a0dc                     ldy #$dc
                                set_a $fe,$ff
                       >            load_flag $ff
2ed4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2ed6 : 48              >            pha         ;use stack to load status
2ed7 : a9fe            >            lda #$fe     ;precharge accu
2ed9 : 28              >            plp
                        
2eda : 1a                       inc a           ;ff
                                tst_as $ff,$ff-zero
2edb : 48              >            pha
2edc : 08              >            php         ;save flags
2edd : 08              >            php
2ede : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
2ee0 : f003            >        beq skip1797
                       >        trap            ;failed not equal (non zero)
2ee2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ee5 :                 >skip1797
                       >
2ee5 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
2ee6 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2ee8 : f003            >        beq skip1800
                       >        trap            ;failed not equal (non zero)
2eea : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2eed :                 >skip1800
                       >
2eed : 28              >            plp         ;restore status
2eee : 68              >            pla
                        
2eef : 1a                       inc a           ;00
                                tst_as 0,$ff-minus
2ef0 : 48              >            pha
2ef1 : 08              >            php         ;save flags
2ef2 : 08              >            php
2ef3 : c900            >            cmp #0     ;test result
                       >            trap_ne
2ef5 : f003            >        beq skip1803
                       >        trap            ;failed not equal (non zero)
2ef7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2efa :                 >skip1803
                       >
2efa : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
2efb : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2efd : f003            >        beq skip1806
                       >        trap            ;failed not equal (non zero)
2eff : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f02 :                 >skip1806
                       >
2f02 : 28              >            plp         ;restore status
2f03 : 68              >            pla
                        
2f04 : 1a                       inc a           ;01
                                tst_as 1,$ff-minus-zero
2f05 : 48              >            pha
2f06 : 08              >            php         ;save flags
2f07 : 08              >            php
2f08 : c901            >            cmp #1     ;test result
                       >            trap_ne
2f0a : f003            >        beq skip1809
                       >        trap            ;failed not equal (non zero)
2f0c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f0f :                 >skip1809
                       >
2f0f : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus-zero
2f10 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f12 : f003            >        beq skip1812
                       >        trap            ;failed not equal (non zero)
2f14 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f17 :                 >skip1812
                       >
2f17 : 28              >            plp         ;restore status
2f18 : 68              >            pla
                        
2f19 : 3a                       dec a           ;00
                                tst_as 0,$ff-minus
2f1a : 48              >            pha
2f1b : 08              >            php         ;save flags
2f1c : 08              >            php
2f1d : c900            >            cmp #0     ;test result
                       >            trap_ne
2f1f : f003            >        beq skip1815
                       >        trap            ;failed not equal (non zero)
2f21 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f24 :                 >skip1815
                       >
2f24 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
2f25 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f27 : f003            >        beq skip1818
                       >        trap            ;failed not equal (non zero)
2f29 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f2c :                 >skip1818
                       >
2f2c : 28              >            plp         ;restore status
2f2d : 68              >            pla
                        
2f2e : 3a                       dec a           ;ff
                                tst_as $ff,$ff-zero
2f2f : 48              >            pha
2f30 : 08              >            php         ;save flags
2f31 : 08              >            php
2f32 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
2f34 : f003            >        beq skip1821
                       >        trap            ;failed not equal (non zero)
2f36 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f39 :                 >skip1821
                       >
2f39 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
2f3a : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f3c : f003            >        beq skip1824
                       >        trap            ;failed not equal (non zero)
2f3e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f41 :                 >skip1824
                       >
2f41 : 28              >            plp         ;restore status
2f42 : 68              >            pla
                        
2f43 : 3a                       dec a           ;fe
                                set_a $fe,0
                       >            load_flag 0
2f44 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2f46 : 48              >            pha         ;use stack to load status
2f47 : a9fe            >            lda #$fe     ;precharge accu
2f49 : 28              >            plp
                        
2f4a : 1a                       inc a           ;ff
                                tst_as $ff,minus
2f4b : 48              >            pha
2f4c : 08              >            php         ;save flags
2f4d : 08              >            php
2f4e : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
2f50 : f003            >        beq skip1829
                       >        trap            ;failed not equal (non zero)
2f52 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f55 :                 >skip1829
                       >
2f55 : 68              >            pla         ;load status
                       >            cmp_flag minus
2f56 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f58 : f003            >        beq skip1832
                       >        trap            ;failed not equal (non zero)
2f5a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f5d :                 >skip1832
                       >
2f5d : 28              >            plp         ;restore status
2f5e : 68              >            pla
                        
2f5f : 1a                       inc a           ;00
                                tst_as 0,zero
2f60 : 48              >            pha
2f61 : 08              >            php         ;save flags
2f62 : 08              >            php
2f63 : c900            >            cmp #0     ;test result
                       >            trap_ne
2f65 : f003            >        beq skip1835
                       >        trap            ;failed not equal (non zero)
2f67 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f6a :                 >skip1835
                       >
2f6a : 68              >            pla         ;load status
                       >            cmp_flag zero
2f6b : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f6d : f003            >        beq skip1838
                       >        trap            ;failed not equal (non zero)
2f6f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f72 :                 >skip1838
                       >
2f72 : 28              >            plp         ;restore status
2f73 : 68              >            pla
                        
2f74 : 1a                       inc a           ;01
                                tst_as 1,0
2f75 : 48              >            pha
2f76 : 08              >            php         ;save flags
2f77 : 08              >            php
2f78 : c901            >            cmp #1     ;test result
                       >            trap_ne
2f7a : f003            >        beq skip1841
                       >        trap            ;failed not equal (non zero)
2f7c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f7f :                 >skip1841
                       >
2f7f : 68              >            pla         ;load status
                       >            cmp_flag 0
2f80 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f82 : f003            >        beq skip1844
                       >        trap            ;failed not equal (non zero)
2f84 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f87 :                 >skip1844
                       >
2f87 : 28              >            plp         ;restore status
2f88 : 68              >            pla
                        
2f89 : 3a                       dec a           ;00
                                tst_as 0,zero
2f8a : 48              >            pha
2f8b : 08              >            php         ;save flags
2f8c : 08              >            php
2f8d : c900            >            cmp #0     ;test result
                       >            trap_ne
2f8f : f003            >        beq skip1847
                       >        trap            ;failed not equal (non zero)
2f91 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f94 :                 >skip1847
                       >
2f94 : 68              >            pla         ;load status
                       >            cmp_flag zero
2f95 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f97 : f003            >        beq skip1850
                       >        trap            ;failed not equal (non zero)
2f99 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f9c :                 >skip1850
                       >
2f9c : 28              >            plp         ;restore status
2f9d : 68              >            pla
                        
2f9e : 3a                       dec a           ;ff
                                tst_as $ff,minus
2f9f : 48              >            pha
2fa0 : 08              >            php         ;save flags
2fa1 : 08              >            php
2fa2 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
2fa4 : f003            >        beq skip1853
                       >        trap            ;failed not equal (non zero)
2fa6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2fa9 :                 >skip1853
                       >
2fa9 : 68              >            pla         ;load status
                       >            cmp_flag minus
2faa : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2fac : f003            >        beq skip1856
                       >        trap            ;failed not equal (non zero)
2fae : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2fb1 :                 >skip1856
                       >
2fb1 : 28              >            plp         ;restore status
2fb2 : 68              >            pla
                        
2fb3 : e0ac                     cpx #$ac
                                trap_ne     ;x altered during test
2fb5 : f003            >        beq skip1858
                       >        trap            ;failed not equal (non zero)
2fb7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2fba :                 >skip1858
                        
2fba : c0dc                     cpy #$dc
                                trap_ne     ;y altered during test
2fbc : f003            >        beq skip1860
                       >        trap            ;failed not equal (non zero)
2fbe : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2fc1 :                 >skip1860
                        
2fc1 : ba                       tsx
2fc2 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
2fc4 : f003            >        beq skip1862
                       >        trap            ;failed not equal (non zero)
2fc6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2fc9 :                 >skip1862
                        
                                next_test
2fc9 : ad0202          >            lda test_case   ;previous test
2fcc : c90c            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2fce : f003            >        beq skip1865
                       >        trap            ;failed not equal (non zero)
2fd0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2fd3 :                 >skip1865
                       >
000d =                 >test_num = test_num + 1
2fd3 : a90d            >            lda #test_num   ;*** next tests' number
2fd5 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            check_ram       ;uncomment to find altered RAM after each test
2fd8 : d8              >            cld
2fd9 : a900            >            lda #0
2fdb : 8510            >            sta zpt         ;set low byte of indirect pointer
2fdd : 8513            >            sta zpt+3       ;checksum high byte
2fdf : a20b            >            ldx #11         ;reset modifiable RAM
2fe1 : 9df902          >ccs11867      sta jxi_tab,x   ;JMP indirect page cross area
2fe4 : ca              >            dex
2fe5 : 10fa            >            bpl ccs11867
2fe7 : 8dd144          >            sta chkdadi     ;self modifying code
2fea : 8dee44          >            sta chkdsbi
2fed : 18              >            clc
2fee : a207            >            ldx #zp_bss-zero_page ;zeropage - write test area
2ff0 : 7510            >ccs31867      adc zero_page,x
2ff2 : 9003            >            bcc ccs21867
2ff4 : e613            >            inc zpt+3       ;carry to high byte
2ff6 : 18              >            clc
2ff7 : e8              >ccs21867      inx
2ff8 : d0f6            >            bne ccs31867
2ffa : a202            >            ldx #hi(data_segment) ;set high byte of indirect pointer
2ffc : 8611            >            stx zpt+1
2ffe : a00a            >            ldy #lo(data_bss) ;data after write test area
3000 : 7110            >ccs51867      adc (zpt),y
3002 : 9003            >            bcc ccs41867
3004 : e613            >            inc zpt+3       ;carry to high byte
3006 : 18              >            clc
3007 : c8              >ccs41867      iny
3008 : d0f6            >            bne ccs51867
300a : e8              >            inx             ;advance RAM high address
300b : 8611            >            stx zpt+1
300d : e0e0            >            cpx #ram_top
300f : d0ef            >            bne ccs51867
3011 : 8512            >            sta zpt+2       ;checksum low is
3013 : cd0302          >            cmp ram_chksm   ;checksum low expected
                       >            trap_ne         ;checksum mismatch
3016 : f003            >        beq skip1868
                       >        trap            ;failed not equal (non zero)
3018 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
301b :                 >skip1868
                       >
301b : a513            >            lda zpt+3       ;checksum high is
301d : cd0402          >            cmp ram_chksm+1 ;checksum high expected
                       >            trap_ne         ;checksum mismatch
3020 : f003            >        beq skip1870
                       >        trap            ;failed not equal (non zero)
3022 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3025 :                 >skip1870
                       >
                       >
                        
                        
3025 : 8d04ef            sta $ef04
3028 : 74657374696e67..  db "testing load / store accumulator LDA / STA (zp)", 10, 0
3059 : a299                     ldx #$99    ;protect x & y
305b : a066                     ldy #$66
                                set_stat 0  
                       >            load_flag 0  
305d : a900            >            lda #0               ;allow test to change I-flag (no mask)
                       >
305f : 48              >            pha         ;use stack to load status
3060 : 28              >            plp
                        
3061 : b228                     lda (ind1)
3063 : 08                       php         ;test stores do not alter flags
3064 : 49c3                     eor #$c3
3066 : 28                       plp
3067 : 9234                     sta (indt)
3069 : 08                       php         ;flags after load/store sequence
306a : 49c3                     eor #$c3
306c : c9c3                     cmp #$c3    ;test result
                                trap_ne
306e : f003            >        beq skip1874
                       >        trap            ;failed not equal (non zero)
3070 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3073 :                 >skip1874
                        
3073 : 68                       pla         ;load status
                                eor_flag 0
3074 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
3076 : cd0f02                   cmp fLDx    ;test flags
                                trap_ne
3079 : f003            >        beq skip1877
                       >        trap            ;failed not equal (non zero)
307b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
307e :                 >skip1877
                        
                                set_stat 0
                       >            load_flag 0
307e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3080 : 48              >            pha         ;use stack to load status
3081 : 28              >            plp
                        
3082 : b22a                     lda (ind1+2)
3084 : 08                       php         ;test stores do not alter flags
3085 : 49c3                     eor #$c3
3087 : 28                       plp
3088 : 9236                     sta (indt+2)
308a : 08                       php         ;flags after load/store sequence
308b : 49c3                     eor #$c3
308d : c982                     cmp #$82    ;test result
                                trap_ne
308f : f003            >        beq skip1881
                       >        trap            ;failed not equal (non zero)
3091 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3094 :                 >skip1881
                        
3094 : 68                       pla         ;load status
                                eor_flag 0
3095 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
3097 : cd1002                   cmp fLDx+1  ;test flags
                                trap_ne
309a : f003            >        beq skip1884
                       >        trap            ;failed not equal (non zero)
309c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
309f :                 >skip1884
                        
                                set_stat 0
                       >            load_flag 0
309f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
30a1 : 48              >            pha         ;use stack to load status
30a2 : 28              >            plp
                        
30a3 : b22c                     lda (ind1+4)
30a5 : 08                       php         ;test stores do not alter flags
30a6 : 49c3                     eor #$c3
30a8 : 28                       plp
30a9 : 9238                     sta (indt+4)
30ab : 08                       php         ;flags after load/store sequence
30ac : 49c3                     eor #$c3
30ae : c941                     cmp #$41    ;test result
                                trap_ne
30b0 : f003            >        beq skip1888
                       >        trap            ;failed not equal (non zero)
30b2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30b5 :                 >skip1888
                        
30b5 : 68                       pla         ;load status
                                eor_flag 0
30b6 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
30b8 : cd1102                   cmp fLDx+2  ;test flags
                                trap_ne
30bb : f003            >        beq skip1891
                       >        trap            ;failed not equal (non zero)
30bd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30c0 :                 >skip1891
                        
                                set_stat 0
                       >            load_flag 0
30c0 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
30c2 : 48              >            pha         ;use stack to load status
30c3 : 28              >            plp
                        
30c4 : b22e                     lda (ind1+6)
30c6 : 08                       php         ;test stores do not alter flags
30c7 : 49c3                     eor #$c3
30c9 : 28                       plp
30ca : 923a                     sta (indt+6)
30cc : 08                       php         ;flags after load/store sequence
30cd : 49c3                     eor #$c3
30cf : c900                     cmp #0      ;test result
                                trap_ne
30d1 : f003            >        beq skip1895
                       >        trap            ;failed not equal (non zero)
30d3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30d6 :                 >skip1895
                        
30d6 : 68                       pla         ;load status
                                eor_flag 0
30d7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
30d9 : cd1202                   cmp fLDx+3  ;test flags
                                trap_ne
30dc : f003            >        beq skip1898
                       >        trap            ;failed not equal (non zero)
30de : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30e1 :                 >skip1898
                        
30e1 : e099                     cpx #$99
                                trap_ne     ;x altered during test
30e3 : f003            >        beq skip1900
                       >        trap            ;failed not equal (non zero)
30e5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30e8 :                 >skip1900
                        
30e8 : c066                     cpy #$66
                                trap_ne     ;y altered during test
30ea : f003            >        beq skip1902
                       >        trap            ;failed not equal (non zero)
30ec : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30ef :                 >skip1902
                        
                        
30ef : a003                     ldy #3      ;testing store result
30f1 : a200                     ldx #0
30f3 : b90502           tstai1  lda abst,y
30f6 : 49c3                     eor #$c3
30f8 : d90a02                   cmp abs1,y
                                trap_ne     ;store to indirect data
30fb : f003            >        beq skip1904
                       >        trap            ;failed not equal (non zero)
30fd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3100 :                 >skip1904
                        
3100 : 8a                       txa
3101 : 990502                   sta abst,y  ;clear                
3104 : 88                       dey
3105 : 10ec                     bpl tstai1
                        
3107 : a299                     ldx #$99    ;protect x & y
3109 : a066                     ldy #$66
                                set_stat $ff  
                       >            load_flag $ff  
310b : a9ff            >            lda #$ff               ;allow test to change I-flag (no mask)
                       >
310d : 48              >            pha         ;use stack to load status
310e : 28              >            plp
                        
310f : b228                     lda (ind1)
3111 : 08                       php         ;test stores do not alter flags
3112 : 49c3                     eor #$c3
3114 : 28                       plp
3115 : 9234                     sta (indt)
3117 : 08                       php         ;flags after load/store sequence
3118 : 49c3                     eor #$c3
311a : c9c3                     cmp #$c3    ;test result
                                trap_ne
311c : f003            >        beq skip1908
                       >        trap            ;failed not equal (non zero)
311e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3121 :                 >skip1908
                        
3121 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
3122 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
3124 : cd0f02                   cmp fLDx    ;test flags
                                trap_ne
3127 : f003            >        beq skip1911
                       >        trap            ;failed not equal (non zero)
3129 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
312c :                 >skip1911
                        
                                set_stat $ff
                       >            load_flag $ff
312c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
312e : 48              >            pha         ;use stack to load status
312f : 28              >            plp
                        
3130 : b22a                     lda (ind1+2)
3132 : 08                       php         ;test stores do not alter flags
3133 : 49c3                     eor #$c3
3135 : 28                       plp
3136 : 9236                     sta (indt+2)
3138 : 08                       php         ;flags after load/store sequence
3139 : 49c3                     eor #$c3
313b : c982                     cmp #$82    ;test result
                                trap_ne
313d : f003            >        beq skip1915
                       >        trap            ;failed not equal (non zero)
313f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3142 :                 >skip1915
                        
3142 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
3143 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
3145 : cd1002                   cmp fLDx+1  ;test flags
                                trap_ne
3148 : f003            >        beq skip1918
                       >        trap            ;failed not equal (non zero)
314a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
314d :                 >skip1918
                        
                                set_stat $ff
                       >            load_flag $ff
314d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
314f : 48              >            pha         ;use stack to load status
3150 : 28              >            plp
                        
3151 : b22c                     lda (ind1+4)
3153 : 08                       php         ;test stores do not alter flags
3154 : 49c3                     eor #$c3
3156 : 28                       plp
3157 : 9238                     sta (indt+4)
3159 : 08                       php         ;flags after load/store sequence
315a : 49c3                     eor #$c3
315c : c941                     cmp #$41    ;test result
                                trap_ne
315e : f003            >        beq skip1922
                       >        trap            ;failed not equal (non zero)
3160 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3163 :                 >skip1922
                        
3163 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
3164 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
3166 : cd1102                   cmp fLDx+2  ;test flags
                                trap_ne
3169 : f003            >        beq skip1925
                       >        trap            ;failed not equal (non zero)
316b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
316e :                 >skip1925
                        
                                set_stat $ff
                       >            load_flag $ff
316e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3170 : 48              >            pha         ;use stack to load status
3171 : 28              >            plp
                        
3172 : b22e                     lda (ind1+6)
3174 : 08                       php         ;test stores do not alter flags
3175 : 49c3                     eor #$c3
3177 : 28                       plp
3178 : 923a                     sta (indt+6)
317a : 08                       php         ;flags after load/store sequence
317b : 49c3                     eor #$c3
317d : c900                     cmp #0      ;test result
                                trap_ne
317f : f003            >        beq skip1929
                       >        trap            ;failed not equal (non zero)
3181 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3184 :                 >skip1929
                        
3184 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
3185 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
3187 : cd1202                   cmp fLDx+3  ;test flags
                                trap_ne
318a : f003            >        beq skip1932
                       >        trap            ;failed not equal (non zero)
318c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
318f :                 >skip1932
                        
318f : e099                     cpx #$99
                                trap_ne     ;x altered during test
3191 : f003            >        beq skip1934
                       >        trap            ;failed not equal (non zero)
3193 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3196 :                 >skip1934
                        
3196 : c066                     cpy #$66
                                trap_ne     ;y altered during test
3198 : f003            >        beq skip1936
                       >        trap            ;failed not equal (non zero)
319a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
319d :                 >skip1936
                        
                        
319d : a003                     ldy #3      ;testing store result
319f : a200                     ldx #0
31a1 : b90502           tstai2  lda abst,y
31a4 : 49c3                     eor #$c3
31a6 : d90a02                   cmp abs1,y
                                trap_ne     ;store to indirect data
31a9 : f003            >        beq skip1938
                       >        trap            ;failed not equal (non zero)
31ab : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
31ae :                 >skip1938
                        
31ae : 8a                       txa
31af : 990502                   sta abst,y  ;clear                
31b2 : 88                       dey
31b3 : 10ec                     bpl tstai2
31b5 : ba                       tsx
31b6 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
31b8 : f003            >        beq skip1940
                       >        trap            ;failed not equal (non zero)
31ba : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
31bd :                 >skip1940
                        
                                next_test
31bd : ad0202          >            lda test_case   ;previous test
31c0 : c90d            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
31c2 : f003            >        beq skip1943
                       >        trap            ;failed not equal (non zero)
31c4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
31c7 :                 >skip1943
                       >
000e =                 >test_num = test_num + 1
31c7 : a90e            >            lda #test_num   ;*** next tests' number
31c9 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            check_ram       ;uncomment to find altered RAM after each test
31cc : d8              >            cld
31cd : a900            >            lda #0
31cf : 8510            >            sta zpt         ;set low byte of indirect pointer
31d1 : 8513            >            sta zpt+3       ;checksum high byte
31d3 : a20b            >            ldx #11         ;reset modifiable RAM
31d5 : 9df902          >ccs11945      sta jxi_tab,x   ;JMP indirect page cross area
31d8 : ca              >            dex
31d9 : 10fa            >            bpl ccs11945
31db : 8dd144          >            sta chkdadi     ;self modifying code
31de : 8dee44          >            sta chkdsbi
31e1 : 18              >            clc
31e2 : a207            >            ldx #zp_bss-zero_page ;zeropage - write test area
31e4 : 7510            >ccs31945      adc zero_page,x
31e6 : 9003            >            bcc ccs21945
31e8 : e613            >            inc zpt+3       ;carry to high byte
31ea : 18              >            clc
31eb : e8              >ccs21945      inx
31ec : d0f6            >            bne ccs31945
31ee : a202            >            ldx #hi(data_segment) ;set high byte of indirect pointer
31f0 : 8611            >            stx zpt+1
31f2 : a00a            >            ldy #lo(data_bss) ;data after write test area
31f4 : 7110            >ccs51945      adc (zpt),y
31f6 : 9003            >            bcc ccs41945
31f8 : e613            >            inc zpt+3       ;carry to high byte
31fa : 18              >            clc
31fb : c8              >ccs41945      iny
31fc : d0f6            >            bne ccs51945
31fe : e8              >            inx             ;advance RAM high address
31ff : 8611            >            stx zpt+1
3201 : e0e0            >            cpx #ram_top
3203 : d0ef            >            bne ccs51945
3205 : 8512            >            sta zpt+2       ;checksum low is
3207 : cd0302          >            cmp ram_chksm   ;checksum low expected
                       >            trap_ne         ;checksum mismatch
320a : f003            >        beq skip1946
                       >        trap            ;failed not equal (non zero)
320c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
320f :                 >skip1946
                       >
320f : a513            >            lda zpt+3       ;checksum high is
3211 : cd0402          >            cmp ram_chksm+1 ;checksum high expected
                       >            trap_ne         ;checksum mismatch
3214 : f003            >        beq skip1948
                       >        trap            ;failed not equal (non zero)
3216 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3219 :                 >skip1948
                       >
                       >
                        
                        
3219 : 8d04ef            sta $ef04
321c : 74657374696e67..  db "testing STZ - zp / abs / zp,x / abs,x", 10, 0
3243 : a07b                     ldy #123    ;protect y
3245 : a204                     ldx #4      ;precharge test area
3247 : a907                     lda #7
3249 : 9510             tstz1   sta zpt,x
324b : 0a                       asl a
324c : ca                       dex
324d : 10fa                     bpl tstz1
324f : a204                     ldx #4
                                set_a $55,$ff
                       >            load_flag $ff
3251 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3253 : 48              >            pha         ;use stack to load status
3254 : a955            >            lda #$55     ;precharge accu
3256 : 28              >            plp
                        
3257 : 6410                     stz zpt     
3259 : 6411                     stz zpt+1
325b : 6412                     stz zpt+2
325d : 6413                     stz zpt+3
325f : 6414                     stz zpt+4
                                tst_a $55,$ff
3261 : 08              >            php         ;save flags
3262 : 08              >            php
3263 : c955            >            cmp #$55     ;test result
                       >            trap_ne
3265 : f003            >        beq skip1953
                       >        trap            ;failed not equal (non zero)
3267 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
326a :                 >skip1953
                       >
326a : 68              >            pla         ;load status
                       >            cmp_flag $ff
326b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
326d : f003            >        beq skip1956
                       >        trap            ;failed not equal (non zero)
326f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3272 :                 >skip1956
                       >
3272 : 28              >            plp         ;restore status
                        
3273 : b510             tstz2   lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
3275 : f003            >        beq skip1958
                       >        trap            ;failed not equal (non zero)
3277 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
327a :                 >skip1958
                        
327a : ca                       dex
327b : 10f6                     bpl tstz2
327d : a204                     ldx #4      ;precharge test area
327f : a907                     lda #7
3281 : 9510             tstz3   sta zpt,x
3283 : 0a                       asl a
3284 : ca                       dex
3285 : 10fa                     bpl tstz3
3287 : a204                     ldx #4
                                set_a $aa,0
                       >            load_flag 0
3289 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
328b : 48              >            pha         ;use stack to load status
328c : a9aa            >            lda #$aa     ;precharge accu
328e : 28              >            plp
                        
328f : 6410                     stz zpt     
3291 : 6411                     stz zpt+1
3293 : 6412                     stz zpt+2
3295 : 6413                     stz zpt+3
3297 : 6414                     stz zpt+4
                                tst_a $aa,0
3299 : 08              >            php         ;save flags
329a : 08              >            php
329b : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
329d : f003            >        beq skip1963
                       >        trap            ;failed not equal (non zero)
329f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32a2 :                 >skip1963
                       >
32a2 : 68              >            pla         ;load status
                       >            cmp_flag 0
32a3 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
32a5 : f003            >        beq skip1966
                       >        trap            ;failed not equal (non zero)
32a7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32aa :                 >skip1966
                       >
32aa : 28              >            plp         ;restore status
                        
32ab : b510             tstz4   lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
32ad : f003            >        beq skip1968
                       >        trap            ;failed not equal (non zero)
32af : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32b2 :                 >skip1968
                        
32b2 : ca                       dex
32b3 : 10f6                     bpl tstz4
                                
32b5 : a204                     ldx #4      ;precharge test area
32b7 : a907                     lda #7
32b9 : 9d0502           tstz5   sta abst,x
32bc : 0a                       asl a
32bd : ca                       dex
32be : 10f9                     bpl tstz5
32c0 : a204                     ldx #4
                                set_a $55,$ff
                       >            load_flag $ff
32c2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
32c4 : 48              >            pha         ;use stack to load status
32c5 : a955            >            lda #$55     ;precharge accu
32c7 : 28              >            plp
                        
32c8 : 9c0502                   stz abst     
32cb : 9c0602                   stz abst+1
32ce : 9c0702                   stz abst+2
32d1 : 9c0802                   stz abst+3
32d4 : 9c0902                   stz abst+4
                                tst_a $55,$ff
32d7 : 08              >            php         ;save flags
32d8 : 08              >            php
32d9 : c955            >            cmp #$55     ;test result
                       >            trap_ne
32db : f003            >        beq skip1973
                       >        trap            ;failed not equal (non zero)
32dd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32e0 :                 >skip1973
                       >
32e0 : 68              >            pla         ;load status
                       >            cmp_flag $ff
32e1 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
32e3 : f003            >        beq skip1976
                       >        trap            ;failed not equal (non zero)
32e5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32e8 :                 >skip1976
                       >
32e8 : 28              >            plp         ;restore status
                        
32e9 : bd0502           tstz6   lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ abs
32ec : f003            >        beq skip1978
                       >        trap            ;failed not equal (non zero)
32ee : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32f1 :                 >skip1978
                        
32f1 : ca                       dex
32f2 : 10f5                     bpl tstz6
32f4 : a204                     ldx #4      ;precharge test area
32f6 : a907                     lda #7
32f8 : 9d0502           tstz7   sta abst,x
32fb : 0a                       asl a
32fc : ca                       dex
32fd : 10f9                     bpl tstz7
32ff : a204                     ldx #4
                                set_a $aa,0
                       >            load_flag 0
3301 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3303 : 48              >            pha         ;use stack to load status
3304 : a9aa            >            lda #$aa     ;precharge accu
3306 : 28              >            plp
                        
3307 : 9c0502                   stz abst     
330a : 9c0602                   stz abst+1
330d : 9c0702                   stz abst+2
3310 : 9c0802                   stz abst+3
3313 : 9c0902                   stz abst+4
                                tst_a $aa,0
3316 : 08              >            php         ;save flags
3317 : 08              >            php
3318 : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
331a : f003            >        beq skip1983
                       >        trap            ;failed not equal (non zero)
331c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
331f :                 >skip1983
                       >
331f : 68              >            pla         ;load status
                       >            cmp_flag 0
3320 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3322 : f003            >        beq skip1986
                       >        trap            ;failed not equal (non zero)
3324 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3327 :                 >skip1986
                       >
3327 : 28              >            plp         ;restore status
                        
3328 : bd0502           tstz8   lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ abs
332b : f003            >        beq skip1988
                       >        trap            ;failed not equal (non zero)
332d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3330 :                 >skip1988
                        
3330 : ca                       dex
3331 : 10f5                     bpl tstz8
                                
3333 : a204                     ldx #4      ;precharge test area
3335 : a907                     lda #7
3337 : 9510             tstz11  sta zpt,x
3339 : 0a                       asl a
333a : ca                       dex
333b : 10fa                     bpl tstz11
333d : a204                     ldx #4
333f :                  tstz15
                                set_a $55,$ff
                       >            load_flag $ff
333f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3341 : 48              >            pha         ;use stack to load status
3342 : a955            >            lda #$55     ;precharge accu
3344 : 28              >            plp
                        
3345 : 7410                     stz zpt,x     
                                tst_a $55,$ff
3347 : 08              >            php         ;save flags
3348 : 08              >            php
3349 : c955            >            cmp #$55     ;test result
                       >            trap_ne
334b : f003            >        beq skip1993
                       >        trap            ;failed not equal (non zero)
334d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3350 :                 >skip1993
                       >
3350 : 68              >            pla         ;load status
                       >            cmp_flag $ff
3351 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3353 : f003            >        beq skip1996
                       >        trap            ;failed not equal (non zero)
3355 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3358 :                 >skip1996
                       >
3358 : 28              >            plp         ;restore status
                        
3359 : ca                       dex
335a : 10e3                     bpl tstz15
335c : a204                     ldx #4
335e : b510             tstz12  lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
3360 : f003            >        beq skip1998
                       >        trap            ;failed not equal (non zero)
3362 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3365 :                 >skip1998
                        
3365 : ca                       dex
3366 : 10f6                     bpl tstz12
3368 : a204                     ldx #4      ;precharge test area
336a : a907                     lda #7
336c : 9510             tstz13  sta zpt,x
336e : 0a                       asl a
336f : ca                       dex
3370 : 10fa                     bpl tstz13
3372 : a204                     ldx #4
3374 :                  tstz16
                                set_a $aa,0
                       >            load_flag 0
3374 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3376 : 48              >            pha         ;use stack to load status
3377 : a9aa            >            lda #$aa     ;precharge accu
3379 : 28              >            plp
                        
337a : 7410                     stz zpt,x
                                tst_a $aa,0
337c : 08              >            php         ;save flags
337d : 08              >            php
337e : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
3380 : f003            >        beq skip2003
                       >        trap            ;failed not equal (non zero)
3382 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3385 :                 >skip2003
                       >
3385 : 68              >            pla         ;load status
                       >            cmp_flag 0
3386 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3388 : f003            >        beq skip2006
                       >        trap            ;failed not equal (non zero)
338a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
338d :                 >skip2006
                       >
338d : 28              >            plp         ;restore status
                        
338e : ca                       dex
338f : 10e3                     bpl tstz16
3391 : a204                     ldx #4
3393 : b510             tstz14  lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
3395 : f003            >        beq skip2008
                       >        trap            ;failed not equal (non zero)
3397 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
339a :                 >skip2008
                        
339a : ca                       dex
339b : 10f6                     bpl tstz14
                                
339d : a204                     ldx #4      ;precharge test area
339f : a907                     lda #7
33a1 : 9d0502           tstz21  sta abst,x
33a4 : 0a                       asl a
33a5 : ca                       dex
33a6 : 10f9                     bpl tstz21
33a8 : a204                     ldx #4
33aa :                  tstz25
                                set_a $55,$ff
                       >            load_flag $ff
33aa : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
33ac : 48              >            pha         ;use stack to load status
33ad : a955            >            lda #$55     ;precharge accu
33af : 28              >            plp
                        
33b0 : 9e0502                   stz abst,x     
                                tst_a $55,$ff
33b3 : 08              >            php         ;save flags
33b4 : 08              >            php
33b5 : c955            >            cmp #$55     ;test result
                       >            trap_ne
33b7 : f003            >        beq skip2013
                       >        trap            ;failed not equal (non zero)
33b9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33bc :                 >skip2013
                       >
33bc : 68              >            pla         ;load status
                       >            cmp_flag $ff
33bd : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
33bf : f003            >        beq skip2016
                       >        trap            ;failed not equal (non zero)
33c1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33c4 :                 >skip2016
                       >
33c4 : 28              >            plp         ;restore status
                        
33c5 : ca                       dex
33c6 : 10e2                     bpl tstz25
33c8 : a204                     ldx #4
33ca : bd0502           tstz22  lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
33cd : f003            >        beq skip2018
                       >        trap            ;failed not equal (non zero)
33cf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33d2 :                 >skip2018
                        
33d2 : ca                       dex
33d3 : 10f5                     bpl tstz22
33d5 : a204                     ldx #4      ;precharge test area
33d7 : a907                     lda #7
33d9 : 9d0502           tstz23  sta abst,x
33dc : 0a                       asl a
33dd : ca                       dex
33de : 10f9                     bpl tstz23
33e0 : a204                     ldx #4
33e2 :                  tstz26
                                set_a $aa,0
                       >            load_flag 0
33e2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
33e4 : 48              >            pha         ;use stack to load status
33e5 : a9aa            >            lda #$aa     ;precharge accu
33e7 : 28              >            plp
                        
33e8 : 9e0502                   stz abst,x
                                tst_a $aa,0
33eb : 08              >            php         ;save flags
33ec : 08              >            php
33ed : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
33ef : f003            >        beq skip2023
                       >        trap            ;failed not equal (non zero)
33f1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33f4 :                 >skip2023
                       >
33f4 : 68              >            pla         ;load status
                       >            cmp_flag 0
33f5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
33f7 : f003            >        beq skip2026
                       >        trap            ;failed not equal (non zero)
33f9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33fc :                 >skip2026
                       >
33fc : 28              >            plp         ;restore status
                        
33fd : ca                       dex
33fe : 10e2                     bpl tstz26
3400 : a204                     ldx #4
3402 : bd0502           tstz24  lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
3405 : f003            >        beq skip2028
                       >        trap            ;failed not equal (non zero)
3407 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
340a :                 >skip2028
                        
340a : ca                       dex
340b : 10f5                     bpl tstz24
                                
340d : c07b                     cpy #123
                                trap_ne     ;y altered during test 
340f : f003            >        beq skip2030
                       >        trap            ;failed not equal (non zero)
3411 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3414 :                 >skip2030
                        
3414 : ba                       tsx
3415 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
3417 : f003            >        beq skip2032
                       >        trap            ;failed not equal (non zero)
3419 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
341c :                 >skip2032
                        
                                next_test
341c : ad0202          >            lda test_case   ;previous test
341f : c90e            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3421 : f003            >        beq skip2035
                       >        trap            ;failed not equal (non zero)
3423 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3426 :                 >skip2035
                       >
000f =                 >test_num = test_num + 1
3426 : a90f            >            lda #test_num   ;*** next tests' number
3428 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            check_ram       ;uncomment to find altered RAM after each test
342b : d8              >            cld
342c : a900            >            lda #0
342e : 8510            >            sta zpt         ;set low byte of indirect pointer
3430 : 8513            >            sta zpt+3       ;checksum high byte
3432 : a20b            >            ldx #11         ;reset modifiable RAM
3434 : 9df902          >ccs12037      sta jxi_tab,x   ;JMP indirect page cross area
3437 : ca              >            dex
3438 : 10fa            >            bpl ccs12037
343a : 8dd144          >            sta chkdadi     ;self modifying code
343d : 8dee44          >            sta chkdsbi
3440 : 18              >            clc
3441 : a207            >            ldx #zp_bss-zero_page ;zeropage - write test area
3443 : 7510            >ccs32037      adc zero_page,x
3445 : 9003            >            bcc ccs22037
3447 : e613            >            inc zpt+3       ;carry to high byte
3449 : 18              >            clc
344a : e8              >ccs22037      inx
344b : d0f6            >            bne ccs32037
344d : a202            >            ldx #hi(data_segment) ;set high byte of indirect pointer
344f : 8611            >            stx zpt+1
3451 : a00a            >            ldy #lo(data_bss) ;data after write test area
3453 : 7110            >ccs52037      adc (zpt),y
3455 : 9003            >            bcc ccs42037
3457 : e613            >            inc zpt+3       ;carry to high byte
3459 : 18              >            clc
345a : c8              >ccs42037      iny
345b : d0f6            >            bne ccs52037
345d : e8              >            inx             ;advance RAM high address
345e : 8611            >            stx zpt+1
3460 : e0e0            >            cpx #ram_top
3462 : d0ef            >            bne ccs52037
3464 : 8512            >            sta zpt+2       ;checksum low is
3466 : cd0302          >            cmp ram_chksm   ;checksum low expected
                       >            trap_ne         ;checksum mismatch
3469 : f003            >        beq skip2038
                       >        trap            ;failed not equal (non zero)
346b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
346e :                 >skip2038
                       >
346e : a513            >            lda zpt+3       ;checksum high is
3470 : cd0402          >            cmp ram_chksm+1 ;checksum high expected
                       >            trap_ne         ;checksum mismatch
3473 : f003            >        beq skip2040
                       >        trap            ;failed not equal (non zero)
3475 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3478 :                 >skip2040
                       >
                       >
                        
                        
3478 : 8d04ef            sta $ef04
347b : 74657374696e67..  db "testing BIT - zp,x / abs,x / #", 10, 0
349b : a042                     ldy #$42
349d : a203                     ldx #3
                                set_a $ff,0
                       >            load_flag 0
349f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
34a1 : 48              >            pha         ;use stack to load status
34a2 : a9ff            >            lda #$ff     ;precharge accu
34a4 : 28              >            plp
                        
34a5 : 3417                     bit zp1,x   ;00 - should set Z / clear  NV
                                tst_a $ff,fz 
34a7 : 08              >            php         ;save flags
34a8 : 08              >            php
34a9 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
34ab : f003            >        beq skip2045
                       >        trap            ;failed not equal (non zero)
34ad : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34b0 :                 >skip2045
                       >
34b0 : 68              >            pla         ;load status
                       >            cmp_flag fz 
34b1 : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
34b3 : f003            >        beq skip2048
                       >        trap            ;failed not equal (non zero)
34b5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34b8 :                 >skip2048
                       >
34b8 : 28              >            plp         ;restore status
                        
34b9 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
34ba : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
34bc : 48              >            pha         ;use stack to load status
34bd : a901            >            lda #1     ;precharge accu
34bf : 28              >            plp
                        
34c0 : 3417                     bit zp1,x   ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
34c2 : 08              >            php         ;save flags
34c3 : 08              >            php
34c4 : c901            >            cmp #1     ;test result
                       >            trap_ne
34c6 : f003            >        beq skip2053
                       >        trap            ;failed not equal (non zero)
34c8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34cb :                 >skip2053
                       >
34cb : 68              >            pla         ;load status
                       >            cmp_flag fv
34cc : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
34ce : f003            >        beq skip2056
                       >        trap            ;failed not equal (non zero)
34d0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34d3 :                 >skip2056
                       >
34d3 : 28              >            plp         ;restore status
                        
34d4 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
34d5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
34d7 : 48              >            pha         ;use stack to load status
34d8 : a901            >            lda #1     ;precharge accu
34da : 28              >            plp
                        
34db : 3417                     bit zp1,x   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
34dd : 08              >            php         ;save flags
34de : 08              >            php
34df : c901            >            cmp #1     ;test result
                       >            trap_ne
34e1 : f003            >        beq skip2061
                       >        trap            ;failed not equal (non zero)
34e3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34e6 :                 >skip2061
                       >
34e6 : 68              >            pla         ;load status
                       >            cmp_flag fnz
34e7 : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
34e9 : f003            >        beq skip2064
                       >        trap            ;failed not equal (non zero)
34eb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34ee :                 >skip2064
                       >
34ee : 28              >            plp         ;restore status
                        
34ef : ca                       dex
                                set_a 1,0
                       >            load_flag 0
34f0 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
34f2 : 48              >            pha         ;use stack to load status
34f3 : a901            >            lda #1     ;precharge accu
34f5 : 28              >            plp
                        
34f6 : 3417                     bit zp1,x   ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
34f8 : 08              >            php         ;save flags
34f9 : 08              >            php
34fa : c901            >            cmp #1     ;test result
                       >            trap_ne
34fc : f003            >        beq skip2069
                       >        trap            ;failed not equal (non zero)
34fe : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3501 :                 >skip2069
                       >
3501 : 68              >            pla         ;load status
                       >            cmp_flag fnv
3502 : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3504 : f003            >        beq skip2072
                       >        trap            ;failed not equal (non zero)
3506 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3509 :                 >skip2072
                       >
3509 : 28              >            plp         ;restore status
                        
                                
                                set_a 1,$ff
                       >            load_flag $ff
350a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
350c : 48              >            pha         ;use stack to load status
350d : a901            >            lda #1     ;precharge accu
350f : 28              >            plp
                        
3510 : 3417                     bit zp1,x   ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
3512 : 08              >            php         ;save flags
3513 : 08              >            php
3514 : c901            >            cmp #1     ;test result
                       >            trap_ne
3516 : f003            >        beq skip2077
                       >        trap            ;failed not equal (non zero)
3518 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
351b :                 >skip2077
                       >
351b : 68              >            pla         ;load status
                       >            cmp_flag ~fz
351c : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
351e : f003            >        beq skip2080
                       >        trap            ;failed not equal (non zero)
3520 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3523 :                 >skip2080
                       >
3523 : 28              >            plp         ;restore status
                        
3524 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
3525 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3527 : 48              >            pha         ;use stack to load status
3528 : a901            >            lda #1     ;precharge accu
352a : 28              >            plp
                        
352b : 3417                     bit zp1,x   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
352d : 08              >            php         ;save flags
352e : 08              >            php
352f : c901            >            cmp #1     ;test result
                       >            trap_ne
3531 : f003            >        beq skip2085
                       >        trap            ;failed not equal (non zero)
3533 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3536 :                 >skip2085
                       >
3536 : 68              >            pla         ;load status
                       >            cmp_flag ~fv
3537 : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3539 : f003            >        beq skip2088
                       >        trap            ;failed not equal (non zero)
353b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
353e :                 >skip2088
                       >
353e : 28              >            plp         ;restore status
                        
353f : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
3540 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3542 : 48              >            pha         ;use stack to load status
3543 : a901            >            lda #1     ;precharge accu
3545 : 28              >            plp
                        
3546 : 3417                     bit zp1,x   ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
3548 : 08              >            php         ;save flags
3549 : 08              >            php
354a : c901            >            cmp #1     ;test result
                       >            trap_ne
354c : f003            >        beq skip2093
                       >        trap            ;failed not equal (non zero)
354e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3551 :                 >skip2093
                       >
3551 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
3552 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3554 : f003            >        beq skip2096
                       >        trap            ;failed not equal (non zero)
3556 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3559 :                 >skip2096
                       >
3559 : 28              >            plp         ;restore status
                        
355a : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
355b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
355d : 48              >            pha         ;use stack to load status
355e : a9ff            >            lda #$ff     ;precharge accu
3560 : 28              >            plp
                        
3561 : 3417                     bit zp1,x   ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv 
3563 : 08              >            php         ;save flags
3564 : 08              >            php
3565 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
3567 : f003            >        beq skip2101
                       >        trap            ;failed not equal (non zero)
3569 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
356c :                 >skip2101
                       >
356c : 68              >            pla         ;load status
                       >            cmp_flag ~fnv 
356d : c93f            >            cmp #(~fnv |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
356f : f003            >        beq skip2104
                       >        trap            ;failed not equal (non zero)
3571 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3574 :                 >skip2104
                       >
3574 : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,0
                       >            load_flag 0
3575 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3577 : 48              >            pha         ;use stack to load status
3578 : a9ff            >            lda #$ff     ;precharge accu
357a : 28              >            plp
                        
357b : 3c0a02                   bit abs1,x  ;00 - should set Z / clear  NV
                                tst_a $ff,fz 
357e : 08              >            php         ;save flags
357f : 08              >            php
3580 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
3582 : f003            >        beq skip2109
                       >        trap            ;failed not equal (non zero)
3584 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3587 :                 >skip2109
                       >
3587 : 68              >            pla         ;load status
                       >            cmp_flag fz 
3588 : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
358a : f003            >        beq skip2112
                       >        trap            ;failed not equal (non zero)
358c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
358f :                 >skip2112
                       >
358f : 28              >            plp         ;restore status
                        
3590 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
3591 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3593 : 48              >            pha         ;use stack to load status
3594 : a901            >            lda #1     ;precharge accu
3596 : 28              >            plp
                        
3597 : 3c0a02                   bit abs1,x  ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
359a : 08              >            php         ;save flags
359b : 08              >            php
359c : c901            >            cmp #1     ;test result
                       >            trap_ne
359e : f003            >        beq skip2117
                       >        trap            ;failed not equal (non zero)
35a0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35a3 :                 >skip2117
                       >
35a3 : 68              >            pla         ;load status
                       >            cmp_flag fv
35a4 : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35a6 : f003            >        beq skip2120
                       >        trap            ;failed not equal (non zero)
35a8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35ab :                 >skip2120
                       >
35ab : 28              >            plp         ;restore status
                        
35ac : ca                       dex
                                set_a 1,0
                       >            load_flag 0
35ad : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
35af : 48              >            pha         ;use stack to load status
35b0 : a901            >            lda #1     ;precharge accu
35b2 : 28              >            plp
                        
35b3 : 3c0a02                   bit abs1,x  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
35b6 : 08              >            php         ;save flags
35b7 : 08              >            php
35b8 : c901            >            cmp #1     ;test result
                       >            trap_ne
35ba : f003            >        beq skip2125
                       >        trap            ;failed not equal (non zero)
35bc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35bf :                 >skip2125
                       >
35bf : 68              >            pla         ;load status
                       >            cmp_flag fnz
35c0 : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35c2 : f003            >        beq skip2128
                       >        trap            ;failed not equal (non zero)
35c4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35c7 :                 >skip2128
                       >
35c7 : 28              >            plp         ;restore status
                        
35c8 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
35c9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
35cb : 48              >            pha         ;use stack to load status
35cc : a901            >            lda #1     ;precharge accu
35ce : 28              >            plp
                        
35cf : 3c0a02                   bit abs1,x  ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
35d2 : 08              >            php         ;save flags
35d3 : 08              >            php
35d4 : c901            >            cmp #1     ;test result
                       >            trap_ne
35d6 : f003            >        beq skip2133
                       >        trap            ;failed not equal (non zero)
35d8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35db :                 >skip2133
                       >
35db : 68              >            pla         ;load status
                       >            cmp_flag fnv
35dc : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35de : f003            >        beq skip2136
                       >        trap            ;failed not equal (non zero)
35e0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35e3 :                 >skip2136
                       >
35e3 : 28              >            plp         ;restore status
                        
                                
                                set_a 1,$ff
                       >            load_flag $ff
35e4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
35e6 : 48              >            pha         ;use stack to load status
35e7 : a901            >            lda #1     ;precharge accu
35e9 : 28              >            plp
                        
35ea : 3c0a02                   bit abs1,x  ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
35ed : 08              >            php         ;save flags
35ee : 08              >            php
35ef : c901            >            cmp #1     ;test result
                       >            trap_ne
35f1 : f003            >        beq skip2141
                       >        trap            ;failed not equal (non zero)
35f3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35f6 :                 >skip2141
                       >
35f6 : 68              >            pla         ;load status
                       >            cmp_flag ~fz
35f7 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35f9 : f003            >        beq skip2144
                       >        trap            ;failed not equal (non zero)
35fb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35fe :                 >skip2144
                       >
35fe : 28              >            plp         ;restore status
                        
35ff : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
3600 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3602 : 48              >            pha         ;use stack to load status
3603 : a901            >            lda #1     ;precharge accu
3605 : 28              >            plp
                        
3606 : 3c0a02                   bit abs1,x  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
3609 : 08              >            php         ;save flags
360a : 08              >            php
360b : c901            >            cmp #1     ;test result
                       >            trap_ne
360d : f003            >        beq skip2149
                       >        trap            ;failed not equal (non zero)
360f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3612 :                 >skip2149
                       >
3612 : 68              >            pla         ;load status
                       >            cmp_flag ~fv
3613 : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3615 : f003            >        beq skip2152
                       >        trap            ;failed not equal (non zero)
3617 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
361a :                 >skip2152
                       >
361a : 28              >            plp         ;restore status
                        
361b : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
361c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
361e : 48              >            pha         ;use stack to load status
361f : a901            >            lda #1     ;precharge accu
3621 : 28              >            plp
                        
3622 : 3c0a02                   bit abs1,x  ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
3625 : 08              >            php         ;save flags
3626 : 08              >            php
3627 : c901            >            cmp #1     ;test result
                       >            trap_ne
3629 : f003            >        beq skip2157
                       >        trap            ;failed not equal (non zero)
362b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
362e :                 >skip2157
                       >
362e : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
362f : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3631 : f003            >        beq skip2160
                       >        trap            ;failed not equal (non zero)
3633 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3636 :                 >skip2160
                       >
3636 : 28              >            plp         ;restore status
                        
3637 : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
3638 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
363a : 48              >            pha         ;use stack to load status
363b : a9ff            >            lda #$ff     ;precharge accu
363d : 28              >            plp
                        
363e : 3c0a02                   bit abs1,x  ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv 
3641 : 08              >            php         ;save flags
3642 : 08              >            php
3643 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
3645 : f003            >        beq skip2165
                       >        trap            ;failed not equal (non zero)
3647 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
364a :                 >skip2165
                       >
364a : 68              >            pla         ;load status
                       >            cmp_flag ~fnv 
364b : c93f            >            cmp #(~fnv |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
364d : f003            >        beq skip2168
                       >        trap            ;failed not equal (non zero)
364f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3652 :                 >skip2168
                       >
3652 : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,0
                       >            load_flag 0
3653 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3655 : 48              >            pha         ;use stack to load status
3656 : a9ff            >            lda #$ff     ;precharge accu
3658 : 28              >            plp
                        
3659 : 8900                     bit #$00    ;00 - should set Z
                                tst_a $ff,fz 
365b : 08              >            php         ;save flags
365c : 08              >            php
365d : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
365f : f003            >        beq skip2173
                       >        trap            ;failed not equal (non zero)
3661 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3664 :                 >skip2173
                       >
3664 : 68              >            pla         ;load status
                       >            cmp_flag fz 
3665 : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3667 : f003            >        beq skip2176
                       >        trap            ;failed not equal (non zero)
3669 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
366c :                 >skip2176
                       >
366c : 28              >            plp         ;restore status
                        
366d : ca                       dex
                                set_a 1,0
                       >            load_flag 0
366e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3670 : 48              >            pha         ;use stack to load status
3671 : a901            >            lda #1     ;precharge accu
3673 : 28              >            plp
                        
3674 : 8941                     bit #$41    ;41 - should clear Z
                                tst_a 1,0
3676 : 08              >            php         ;save flags
3677 : 08              >            php
3678 : c901            >            cmp #1     ;test result
                       >            trap_ne
367a : f003            >        beq skip2181
                       >        trap            ;failed not equal (non zero)
367c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
367f :                 >skip2181
                       >
367f : 68              >            pla         ;load status
                       >            cmp_flag 0
3680 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3682 : f003            >        beq skip2184
                       >        trap            ;failed not equal (non zero)
3684 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3687 :                 >skip2184
                       >
3687 : 28              >            plp         ;restore status
                        
                        ; *** DEBUG INFO ***
                        ; if it fails the previous test and your BIT # has set the V flag
                        ; see http://forum.6502.org/viewtopic.php?f=2&t=2241&p=27243#p27239
                        ; why it shouldn't alter N or V flags on a BIT #
3688 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
3689 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
368b : 48              >            pha         ;use stack to load status
368c : a901            >            lda #1     ;precharge accu
368e : 28              >            plp
                        
368f : 8982                     bit #$82    ;82 - should set Z
                                tst_a 1,fz
3691 : 08              >            php         ;save flags
3692 : 08              >            php
3693 : c901            >            cmp #1     ;test result
                       >            trap_ne
3695 : f003            >        beq skip2189
                       >        trap            ;failed not equal (non zero)
3697 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
369a :                 >skip2189
                       >
369a : 68              >            pla         ;load status
                       >            cmp_flag fz
369b : c932            >            cmp #(fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
369d : f003            >        beq skip2192
                       >        trap            ;failed not equal (non zero)
369f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36a2 :                 >skip2192
                       >
36a2 : 28              >            plp         ;restore status
                        
36a3 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
36a4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
36a6 : 48              >            pha         ;use stack to load status
36a7 : a901            >            lda #1     ;precharge accu
36a9 : 28              >            plp
                        
36aa : 89c3                     bit #$c3    ;c3 - should clear Z
                                tst_a 1,0
36ac : 08              >            php         ;save flags
36ad : 08              >            php
36ae : c901            >            cmp #1     ;test result
                       >            trap_ne
36b0 : f003            >        beq skip2197
                       >        trap            ;failed not equal (non zero)
36b2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36b5 :                 >skip2197
                       >
36b5 : 68              >            pla         ;load status
                       >            cmp_flag 0
36b6 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36b8 : f003            >        beq skip2200
                       >        trap            ;failed not equal (non zero)
36ba : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36bd :                 >skip2200
                       >
36bd : 28              >            plp         ;restore status
                        
                                
                                set_a 1,$ff
                       >            load_flag $ff
36be : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
36c0 : 48              >            pha         ;use stack to load status
36c1 : a901            >            lda #1     ;precharge accu
36c3 : 28              >            plp
                        
36c4 : 89c3                     bit #$c3    ;c3 - clear Z
                                tst_a 1,~fz
36c6 : 08              >            php         ;save flags
36c7 : 08              >            php
36c8 : c901            >            cmp #1     ;test result
                       >            trap_ne
36ca : f003            >        beq skip2205
                       >        trap            ;failed not equal (non zero)
36cc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36cf :                 >skip2205
                       >
36cf : 68              >            pla         ;load status
                       >            cmp_flag ~fz
36d0 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36d2 : f003            >        beq skip2208
                       >        trap            ;failed not equal (non zero)
36d4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36d7 :                 >skip2208
                       >
36d7 : 28              >            plp         ;restore status
                        
36d8 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
36d9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
36db : 48              >            pha         ;use stack to load status
36dc : a901            >            lda #1     ;precharge accu
36de : 28              >            plp
                        
36df : 8982                     bit #$82    ;82 - should set Z
                                tst_a 1,$ff
36e1 : 08              >            php         ;save flags
36e2 : 08              >            php
36e3 : c901            >            cmp #1     ;test result
                       >            trap_ne
36e5 : f003            >        beq skip2213
                       >        trap            ;failed not equal (non zero)
36e7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36ea :                 >skip2213
                       >
36ea : 68              >            pla         ;load status
                       >            cmp_flag $ff
36eb : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36ed : f003            >        beq skip2216
                       >        trap            ;failed not equal (non zero)
36ef : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36f2 :                 >skip2216
                       >
36f2 : 28              >            plp         ;restore status
                        
36f3 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
36f4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
36f6 : 48              >            pha         ;use stack to load status
36f7 : a901            >            lda #1     ;precharge accu
36f9 : 28              >            plp
                        
36fa : 8941                     bit #$41    ;41 - should clear Z
                                tst_a 1,~fz
36fc : 08              >            php         ;save flags
36fd : 08              >            php
36fe : c901            >            cmp #1     ;test result
                       >            trap_ne
3700 : f003            >        beq skip2221
                       >        trap            ;failed not equal (non zero)
3702 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3705 :                 >skip2221
                       >
3705 : 68              >            pla         ;load status
                       >            cmp_flag ~fz
3706 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3708 : f003            >        beq skip2224
                       >        trap            ;failed not equal (non zero)
370a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
370d :                 >skip2224
                       >
370d : 28              >            plp         ;restore status
                        
370e : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
370f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3711 : 48              >            pha         ;use stack to load status
3712 : a9ff            >            lda #$ff     ;precharge accu
3714 : 28              >            plp
                        
3715 : 8900                     bit #$00   ;00 - should set Z
                                tst_a $ff,$ff
3717 : 08              >            php         ;save flags
3718 : 08              >            php
3719 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
371b : f003            >        beq skip2229
                       >        trap            ;failed not equal (non zero)
371d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3720 :                 >skip2229
                       >
3720 : 68              >            pla         ;load status
                       >            cmp_flag $ff
3721 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3723 : f003            >        beq skip2232
                       >        trap            ;failed not equal (non zero)
3725 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3728 :                 >skip2232
                       >
3728 : 28              >            plp         ;restore status
                        
                                
3729 : e003                     cpx #3
                                trap_ne     ;x altered during test
372b : f003            >        beq skip2234
                       >        trap            ;failed not equal (non zero)
372d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3730 :                 >skip2234
                        
3730 : c042                     cpy #$42
                                trap_ne     ;y altered during test 
3732 : f003            >        beq skip2236
                       >        trap            ;failed not equal (non zero)
3734 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3737 :                 >skip2236
                        
3737 : ba                       tsx
3738 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
373a : f003            >        beq skip2238
                       >        trap            ;failed not equal (non zero)
373c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
373f :                 >skip2238
                        
                                next_test
373f : ad0202          >            lda test_case   ;previous test
3742 : c90f            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3744 : f003            >        beq skip2241
                       >        trap            ;failed not equal (non zero)
3746 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3749 :                 >skip2241
                       >
0010 =                 >test_num = test_num + 1
3749 : a910            >            lda #test_num   ;*** next tests' number
374b : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            check_ram       ;uncomment to find altered RAM after each test
374e : d8              >            cld
374f : a900            >            lda #0
3751 : 8510            >            sta zpt         ;set low byte of indirect pointer
3753 : 8513            >            sta zpt+3       ;checksum high byte
3755 : a20b            >            ldx #11         ;reset modifiable RAM
3757 : 9df902          >ccs12243      sta jxi_tab,x   ;JMP indirect page cross area
375a : ca              >            dex
375b : 10fa            >            bpl ccs12243
375d : 8dd144          >            sta chkdadi     ;self modifying code
3760 : 8dee44          >            sta chkdsbi
3763 : 18              >            clc
3764 : a207            >            ldx #zp_bss-zero_page ;zeropage - write test area
3766 : 7510            >ccs32243      adc zero_page,x
3768 : 9003            >            bcc ccs22243
376a : e613            >            inc zpt+3       ;carry to high byte
376c : 18              >            clc
376d : e8              >ccs22243      inx
376e : d0f6            >            bne ccs32243
3770 : a202            >            ldx #hi(data_segment) ;set high byte of indirect pointer
3772 : 8611            >            stx zpt+1
3774 : a00a            >            ldy #lo(data_bss) ;data after write test area
3776 : 7110            >ccs52243      adc (zpt),y
3778 : 9003            >            bcc ccs42243
377a : e613            >            inc zpt+3       ;carry to high byte
377c : 18              >            clc
377d : c8              >ccs42243      iny
377e : d0f6            >            bne ccs52243
3780 : e8              >            inx             ;advance RAM high address
3781 : 8611            >            stx zpt+1
3783 : e0e0            >            cpx #ram_top
3785 : d0ef            >            bne ccs52243
3787 : 8512            >            sta zpt+2       ;checksum low is
3789 : cd0302          >            cmp ram_chksm   ;checksum low expected
                       >            trap_ne         ;checksum mismatch
378c : f003            >        beq skip2244
                       >        trap            ;failed not equal (non zero)
378e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3791 :                 >skip2244
                       >
3791 : a513            >            lda zpt+3       ;checksum high is
3793 : cd0402          >            cmp ram_chksm+1 ;checksum high expected
                       >            trap_ne         ;checksum mismatch
3796 : f003            >        beq skip2246
                       >        trap            ;failed not equal (non zero)
3798 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
379b :                 >skip2246
                       >
                       >
                        
                        
379b : 8d04ef            sta $ef04
379e : 74657374696e67..  db "testing TRB, TSB - zp / abs", 10, 0
                        
                        trbt    macro       ;\1 = memory, \2 = flags   
                                sty \1
                                load_flag \2
                                pha
                                lda zpt+1
                                plp
                                trb \1
                                php
                                cmp zpt+1
                                trap_ne     ;accu was changed
                                pla
                                pha
                                ora #fz     ;mask Z
                                cmp_flag \2|fz
                                trap_ne     ;flags changed except Z
                                pla
                                and #fz
                                cmp zpt+2
                                trap_ne     ;Z flag invalid
                                lda zpt+3
                                cmp zpt
                                trap_ne     ;altered bits in memory wrong       
                                endm
                        
                        tsbt    macro       ;\1 = memory, \2 = flags   
                                sty \1
                                load_flag \2
                                pha
                                lda zpt+1
                                plp
                                tsb \1
                                php
                                cmp zpt+1
                                trap_ne     ;accu was changed
                                pla
                                pha
                                ora #fz     ;mask Z
                                cmp_flag \2|fz
                                trap_ne     ;flags changed except Z
                                pla
                                and #fz
                                cmp zpt+2
                                trap_ne     ;Z flag invalid
                                lda zpt+4
                                cmp zpt
                                trap_ne     ;altered bits in memory wrong        
                                endm
                        
37bb : a2c0                     ldx #$c0
37bd : a000                     ldy #0      ;op1 - memory save
                                ;   zpt     ;op1 - memory modifiable
37bf : 6411                     stz zpt+1   ;op2 - accu
                                ;   zpt+2   ;and flags
                                ;   zpt+3   ;memory after reset
                                ;   zpt+4   ;memory after set
                                
37c1 : 98               tbt1    tya
37c2 : 2511                     and zpt+1   ;set Z by anding the 2 operands
37c4 : 08                       php
37c5 : 68                       pla
37c6 : 2902                     and #fz     ;mask Z
37c8 : 8512                     sta zpt+2
37ca : 98                       tya         ;reset op1 bits by op2
37cb : 49ff                     eor #$ff
37cd : 0511                     ora zpt+1
37cf : 49ff                     eor #$ff
37d1 : 8513                     sta zpt+3
37d3 : 98                       tya         ;set op1 bits by op2
37d4 : 0511                     ora zpt+1
37d6 : 8514                     sta zpt+4
                        
                                trbt zpt,$ff
37d8 : 8410            >        sty zpt
                       >        load_flag $ff
37da : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
37dc : 48              >        pha
37dd : a511            >        lda zpt+1
37df : 28              >        plp
37e0 : 1410            >        trb zpt
37e2 : 08              >        php
37e3 : c511            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
37e5 : f003            >        beq skip2250
                       >        trap            ;failed not equal (non zero)
37e7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37ea :                 >skip2250
                       >
37ea : 68              >        pla
37eb : 48              >        pha
37ec : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
37ee : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
37f0 : f003            >        beq skip2253
                       >        trap            ;failed not equal (non zero)
37f2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37f5 :                 >skip2253
                       >
37f5 : 68              >        pla
37f6 : 2902            >        and #fz
37f8 : c512            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
37fa : f003            >        beq skip2255
                       >        trap            ;failed not equal (non zero)
37fc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37ff :                 >skip2255
                       >
37ff : a513            >        lda zpt+3
3801 : c510            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
3803 : f003            >        beq skip2257
                       >        trap            ;failed not equal (non zero)
3805 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3808 :                 >skip2257
                       >
                        
                                trbt abst,$ff
3808 : 8c0502          >        sty abst
                       >        load_flag $ff
380b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
380d : 48              >        pha
380e : a511            >        lda zpt+1
3810 : 28              >        plp
3811 : 1c0502          >        trb abst
3814 : 08              >        php
3815 : c511            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
3817 : f003            >        beq skip2261
                       >        trap            ;failed not equal (non zero)
3819 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
381c :                 >skip2261
                       >
381c : 68              >        pla
381d : 48              >        pha
381e : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
3820 : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
3822 : f003            >        beq skip2264
                       >        trap            ;failed not equal (non zero)
3824 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3827 :                 >skip2264
                       >
3827 : 68              >        pla
3828 : 2902            >        and #fz
382a : c512            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
382c : f003            >        beq skip2266
                       >        trap            ;failed not equal (non zero)
382e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3831 :                 >skip2266
                       >
3831 : a513            >        lda zpt+3
3833 : c510            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
3835 : f003            >        beq skip2268
                       >        trap            ;failed not equal (non zero)
3837 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
383a :                 >skip2268
                       >
                        
                                trbt zpt,0
383a : 8410            >        sty zpt
                       >        load_flag 0
383c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
383e : 48              >        pha
383f : a511            >        lda zpt+1
3841 : 28              >        plp
3842 : 1410            >        trb zpt
3844 : 08              >        php
3845 : c511            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
3847 : f003            >        beq skip2272
                       >        trap            ;failed not equal (non zero)
3849 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
384c :                 >skip2272
                       >
384c : 68              >        pla
384d : 48              >        pha
384e : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
3850 : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
3852 : f003            >        beq skip2275
                       >        trap            ;failed not equal (non zero)
3854 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3857 :                 >skip2275
                       >
3857 : 68              >        pla
3858 : 2902            >        and #fz
385a : c512            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
385c : f003            >        beq skip2277
                       >        trap            ;failed not equal (non zero)
385e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3861 :                 >skip2277
                       >
3861 : a513            >        lda zpt+3
3863 : c510            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
3865 : f003            >        beq skip2279
                       >        trap            ;failed not equal (non zero)
3867 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
386a :                 >skip2279
                       >
                        
                                trbt abst,0
386a : 8c0502          >        sty abst
                       >        load_flag 0
386d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
386f : 48              >        pha
3870 : a511            >        lda zpt+1
3872 : 28              >        plp
3873 : 1c0502          >        trb abst
3876 : 08              >        php
3877 : c511            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
3879 : f003            >        beq skip2283
                       >        trap            ;failed not equal (non zero)
387b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
387e :                 >skip2283
                       >
387e : 68              >        pla
387f : 48              >        pha
3880 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
3882 : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
3884 : f003            >        beq skip2286
                       >        trap            ;failed not equal (non zero)
3886 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3889 :                 >skip2286
                       >
3889 : 68              >        pla
388a : 2902            >        and #fz
388c : c512            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
388e : f003            >        beq skip2288
                       >        trap            ;failed not equal (non zero)
3890 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3893 :                 >skip2288
                       >
3893 : a513            >        lda zpt+3
3895 : c510            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
3897 : f003            >        beq skip2290
                       >        trap            ;failed not equal (non zero)
3899 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
389c :                 >skip2290
                       >
                        
                                tsbt zpt,$ff
389c : 8410            >        sty zpt
                       >        load_flag $ff
389e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
38a0 : 48              >        pha
38a1 : a511            >        lda zpt+1
38a3 : 28              >        plp
38a4 : 0410            >        tsb zpt
38a6 : 08              >        php
38a7 : c511            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
38a9 : f003            >        beq skip2294
                       >        trap            ;failed not equal (non zero)
38ab : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38ae :                 >skip2294
                       >
38ae : 68              >        pla
38af : 48              >        pha
38b0 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
38b2 : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
38b4 : f003            >        beq skip2297
                       >        trap            ;failed not equal (non zero)
38b6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38b9 :                 >skip2297
                       >
38b9 : 68              >        pla
38ba : 2902            >        and #fz
38bc : c512            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
38be : f003            >        beq skip2299
                       >        trap            ;failed not equal (non zero)
38c0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38c3 :                 >skip2299
                       >
38c3 : a514            >        lda zpt+4
38c5 : c510            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
38c7 : f003            >        beq skip2301
                       >        trap            ;failed not equal (non zero)
38c9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38cc :                 >skip2301
                       >
                        
                                tsbt abst,$ff
38cc : 8c0502          >        sty abst
                       >        load_flag $ff
38cf : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
38d1 : 48              >        pha
38d2 : a511            >        lda zpt+1
38d4 : 28              >        plp
38d5 : 0c0502          >        tsb abst
38d8 : 08              >        php
38d9 : c511            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
38db : f003            >        beq skip2305
                       >        trap            ;failed not equal (non zero)
38dd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38e0 :                 >skip2305
                       >
38e0 : 68              >        pla
38e1 : 48              >        pha
38e2 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
38e4 : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
38e6 : f003            >        beq skip2308
                       >        trap            ;failed not equal (non zero)
38e8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38eb :                 >skip2308
                       >
38eb : 68              >        pla
38ec : 2902            >        and #fz
38ee : c512            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
38f0 : f003            >        beq skip2310
                       >        trap            ;failed not equal (non zero)
38f2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38f5 :                 >skip2310
                       >
38f5 : a514            >        lda zpt+4
38f7 : c510            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
38f9 : f003            >        beq skip2312
                       >        trap            ;failed not equal (non zero)
38fb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38fe :                 >skip2312
                       >
                        
                                tsbt zpt,0
38fe : 8410            >        sty zpt
                       >        load_flag 0
3900 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3902 : 48              >        pha
3903 : a511            >        lda zpt+1
3905 : 28              >        plp
3906 : 0410            >        tsb zpt
3908 : 08              >        php
3909 : c511            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
390b : f003            >        beq skip2316
                       >        trap            ;failed not equal (non zero)
390d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3910 :                 >skip2316
                       >
3910 : 68              >        pla
3911 : 48              >        pha
3912 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
3914 : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
3916 : f003            >        beq skip2319
                       >        trap            ;failed not equal (non zero)
3918 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
391b :                 >skip2319
                       >
391b : 68              >        pla
391c : 2902            >        and #fz
391e : c512            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
3920 : f003            >        beq skip2321
                       >        trap            ;failed not equal (non zero)
3922 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3925 :                 >skip2321
                       >
3925 : a514            >        lda zpt+4
3927 : c510            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
3929 : f003            >        beq skip2323
                       >        trap            ;failed not equal (non zero)
392b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
392e :                 >skip2323
                       >
                        
                                tsbt abst,0
392e : 8c0502          >        sty abst
                       >        load_flag 0
3931 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3933 : 48              >        pha
3934 : a511            >        lda zpt+1
3936 : 28              >        plp
3937 : 0c0502          >        tsb abst
393a : 08              >        php
393b : c511            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
393d : f003            >        beq skip2327
                       >        trap            ;failed not equal (non zero)
393f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3942 :                 >skip2327
                       >
3942 : 68              >        pla
3943 : 48              >        pha
3944 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
3946 : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
3948 : f003            >        beq skip2330
                       >        trap            ;failed not equal (non zero)
394a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
394d :                 >skip2330
                       >
394d : 68              >        pla
394e : 2902            >        and #fz
3950 : c512            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
3952 : f003            >        beq skip2332
                       >        trap            ;failed not equal (non zero)
3954 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3957 :                 >skip2332
                       >
3957 : a514            >        lda zpt+4
3959 : c510            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
395b : f003            >        beq skip2334
                       >        trap            ;failed not equal (non zero)
395d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3960 :                 >skip2334
                       >
                        
                                
3960 : c8                       iny         ;iterate op1
3961 : d004                     bne tbt3
3963 : e611                     inc zpt+1   ;iterate op2
3965 : f003                     beq tbt2
3967 : 4cc137           tbt3    jmp tbt1        
396a :                  tbt2
396a : e0c0                     cpx #$c0
                                trap_ne     ;x altered during test
396c : f003            >        beq skip2336
                       >        trap            ;failed not equal (non zero)
396e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3971 :                 >skip2336
                        
3971 : ba                       tsx
3972 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
3974 : f003            >        beq skip2338
                       >        trap            ;failed not equal (non zero)
3976 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3979 :                 >skip2338
                        
                                next_test    
3979 : ad0202          >            lda test_case   ;previous test
397c : c910            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
397e : f003            >        beq skip2341
                       >        trap            ;failed not equal (non zero)
3980 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3983 :                 >skip2341
                       >
0011 =                 >test_num = test_num + 1
3983 : a911            >            lda #test_num   ;*** next tests' number
3985 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            check_ram       ;uncomment to find altered RAM after each test
3988 : d8              >            cld
3989 : a900            >            lda #0
398b : 8510            >            sta zpt         ;set low byte of indirect pointer
398d : 8513            >            sta zpt+3       ;checksum high byte
398f : a20b            >            ldx #11         ;reset modifiable RAM
3991 : 9df902          >ccs12343      sta jxi_tab,x   ;JMP indirect page cross area
3994 : ca              >            dex
3995 : 10fa            >            bpl ccs12343
3997 : 8dd144          >            sta chkdadi     ;self modifying code
399a : 8dee44          >            sta chkdsbi
399d : 18              >            clc
399e : a207            >            ldx #zp_bss-zero_page ;zeropage - write test area
39a0 : 7510            >ccs32343      adc zero_page,x
39a2 : 9003            >            bcc ccs22343
39a4 : e613            >            inc zpt+3       ;carry to high byte
39a6 : 18              >            clc
39a7 : e8              >ccs22343      inx
39a8 : d0f6            >            bne ccs32343
39aa : a202            >            ldx #hi(data_segment) ;set high byte of indirect pointer
39ac : 8611            >            stx zpt+1
39ae : a00a            >            ldy #lo(data_bss) ;data after write test area
39b0 : 7110            >ccs52343      adc (zpt),y
39b2 : 9003            >            bcc ccs42343
39b4 : e613            >            inc zpt+3       ;carry to high byte
39b6 : 18              >            clc
39b7 : c8              >ccs42343      iny
39b8 : d0f6            >            bne ccs52343
39ba : e8              >            inx             ;advance RAM high address
39bb : 8611            >            stx zpt+1
39bd : e0e0            >            cpx #ram_top
39bf : d0ef            >            bne ccs52343
39c1 : 8512            >            sta zpt+2       ;checksum low is
39c3 : cd0302          >            cmp ram_chksm   ;checksum low expected
                       >            trap_ne         ;checksum mismatch
39c6 : f003            >        beq skip2344
                       >        trap            ;failed not equal (non zero)
39c8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
39cb :                 >skip2344
                       >
39cb : a513            >            lda zpt+3       ;checksum high is
39cd : cd0402          >            cmp ram_chksm+1 ;checksum high expected
                       >            trap_ne         ;checksum mismatch
39d0 : f003            >        beq skip2346
                       >        trap            ;failed not equal (non zero)
39d2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
39d5 :                 >skip2346
                       >
                       >
                        
                        
                            if rkwl_wdc_op
39d5 : 8d04ef            sta $ef04
39d8 : 74657374696e67..  db "testing RMB, SMB - zp", 10, 0
                        rmbt    macro       ;\1 = bitnum
                                lda #$ff
                                sta zpt
                                set_a $a5,0
                                rmb \1,zpt
                                tst_a $a5,0
                                lda zpt
                                cmp #$ff-(1<<\1)
                                trap_ne     ;wrong bits set or cleared
                                lda #1<<\1
                                sta zpt
                                set_a $5a,$ff
                                rmb \1,zpt
                                tst_a $5a,$ff
                                lda zpt
                                trap_ne     ;wrong bits set or cleared
                                endm
                        smbt    macro       ;\1 = bitnum
                                lda #$ff-(1<<\1)
                                sta zpt
                                set_a $a5,0
                                smb \1,zpt
                                tst_a $a5,0
                                lda zpt
                                cmp #$ff
                                trap_ne     ;wrong bits set or cleared
                                lda #0
                                sta zpt
                                set_a $5a,$ff
                                smb \1,zpt
                                tst_a $5a,$ff
                                lda zpt
                                cmp #1<<\1
                                trap_ne     ;wrong bits set or cleared
                                endm
                        
39ef : a2ba                     ldx #$ba    ;protect x & y
39f1 : a0d0                     ldy #$d0
                                rmbt 0
39f3 : a9ff            >        lda #$ff
39f5 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
39f7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
39f9 : 48              >            pha         ;use stack to load status
39fa : a9a5            >            lda #$a5     ;precharge accu
39fc : 28              >            plp
                       >
39fd : 0710            >        rmb 0,zpt
                       >        tst_a $a5,0
39ff : 08              >            php         ;save flags
3a00 : 08              >            php
3a01 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3a03 : f003            >        beq skip2352
                       >        trap            ;failed not equal (non zero)
3a05 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a08 :                 >skip2352
                       >
3a08 : 68              >            pla         ;load status
                       >            cmp_flag 0
3a09 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3a0b : f003            >        beq skip2355
                       >        trap            ;failed not equal (non zero)
3a0d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a10 :                 >skip2355
                       >
3a10 : 28              >            plp         ;restore status
                       >
3a11 : a510            >        lda zpt
3a13 : c9fe            >        cmp #$ff-(1<<0)
                       >        trap_ne     ;wrong bits set or cleared
3a15 : f003            >        beq skip2357
                       >        trap            ;failed not equal (non zero)
3a17 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a1a :                 >skip2357
                       >
3a1a : a901            >        lda #1<<0
3a1c : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3a1e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3a20 : 48              >            pha         ;use stack to load status
3a21 : a95a            >            lda #$5a     ;precharge accu
3a23 : 28              >            plp
                       >
3a24 : 0710            >        rmb 0,zpt
                       >        tst_a $5a,$ff
3a26 : 08              >            php         ;save flags
3a27 : 08              >            php
3a28 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3a2a : f003            >        beq skip2362
                       >        trap            ;failed not equal (non zero)
3a2c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a2f :                 >skip2362
                       >
3a2f : 68              >            pla         ;load status
                       >            cmp_flag $ff
3a30 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3a32 : f003            >        beq skip2365
                       >        trap            ;failed not equal (non zero)
3a34 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a37 :                 >skip2365
                       >
3a37 : 28              >            plp         ;restore status
                       >
3a38 : a510            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
3a3a : f003            >        beq skip2367
                       >        trap            ;failed not equal (non zero)
3a3c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a3f :                 >skip2367
                       >
                        
                                rmbt 1
3a3f : a9ff            >        lda #$ff
3a41 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3a43 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3a45 : 48              >            pha         ;use stack to load status
3a46 : a9a5            >            lda #$a5     ;precharge accu
3a48 : 28              >            plp
                       >
3a49 : 1710            >        rmb 1,zpt
                       >        tst_a $a5,0
3a4b : 08              >            php         ;save flags
3a4c : 08              >            php
3a4d : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3a4f : f003            >        beq skip2373
                       >        trap            ;failed not equal (non zero)
3a51 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a54 :                 >skip2373
                       >
3a54 : 68              >            pla         ;load status
                       >            cmp_flag 0
3a55 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3a57 : f003            >        beq skip2376
                       >        trap            ;failed not equal (non zero)
3a59 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a5c :                 >skip2376
                       >
3a5c : 28              >            plp         ;restore status
                       >
3a5d : a510            >        lda zpt
3a5f : c9fd            >        cmp #$ff-(1<<1)
                       >        trap_ne     ;wrong bits set or cleared
3a61 : f003            >        beq skip2378
                       >        trap            ;failed not equal (non zero)
3a63 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a66 :                 >skip2378
                       >
3a66 : a902            >        lda #1<<1
3a68 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3a6a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3a6c : 48              >            pha         ;use stack to load status
3a6d : a95a            >            lda #$5a     ;precharge accu
3a6f : 28              >            plp
                       >
3a70 : 1710            >        rmb 1,zpt
                       >        tst_a $5a,$ff
3a72 : 08              >            php         ;save flags
3a73 : 08              >            php
3a74 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3a76 : f003            >        beq skip2383
                       >        trap            ;failed not equal (non zero)
3a78 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a7b :                 >skip2383
                       >
3a7b : 68              >            pla         ;load status
                       >            cmp_flag $ff
3a7c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3a7e : f003            >        beq skip2386
                       >        trap            ;failed not equal (non zero)
3a80 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a83 :                 >skip2386
                       >
3a83 : 28              >            plp         ;restore status
                       >
3a84 : a510            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
3a86 : f003            >        beq skip2388
                       >        trap            ;failed not equal (non zero)
3a88 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a8b :                 >skip2388
                       >
                        
                                rmbt 2
3a8b : a9ff            >        lda #$ff
3a8d : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3a8f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3a91 : 48              >            pha         ;use stack to load status
3a92 : a9a5            >            lda #$a5     ;precharge accu
3a94 : 28              >            plp
                       >
3a95 : 2710            >        rmb 2,zpt
                       >        tst_a $a5,0
3a97 : 08              >            php         ;save flags
3a98 : 08              >            php
3a99 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3a9b : f003            >        beq skip2394
                       >        trap            ;failed not equal (non zero)
3a9d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3aa0 :                 >skip2394
                       >
3aa0 : 68              >            pla         ;load status
                       >            cmp_flag 0
3aa1 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3aa3 : f003            >        beq skip2397
                       >        trap            ;failed not equal (non zero)
3aa5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3aa8 :                 >skip2397
                       >
3aa8 : 28              >            plp         ;restore status
                       >
3aa9 : a510            >        lda zpt
3aab : c9fb            >        cmp #$ff-(1<<2)
                       >        trap_ne     ;wrong bits set or cleared
3aad : f003            >        beq skip2399
                       >        trap            ;failed not equal (non zero)
3aaf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ab2 :                 >skip2399
                       >
3ab2 : a904            >        lda #1<<2
3ab4 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3ab6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3ab8 : 48              >            pha         ;use stack to load status
3ab9 : a95a            >            lda #$5a     ;precharge accu
3abb : 28              >            plp
                       >
3abc : 2710            >        rmb 2,zpt
                       >        tst_a $5a,$ff
3abe : 08              >            php         ;save flags
3abf : 08              >            php
3ac0 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3ac2 : f003            >        beq skip2404
                       >        trap            ;failed not equal (non zero)
3ac4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ac7 :                 >skip2404
                       >
3ac7 : 68              >            pla         ;load status
                       >            cmp_flag $ff
3ac8 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3aca : f003            >        beq skip2407
                       >        trap            ;failed not equal (non zero)
3acc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3acf :                 >skip2407
                       >
3acf : 28              >            plp         ;restore status
                       >
3ad0 : a510            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
3ad2 : f003            >        beq skip2409
                       >        trap            ;failed not equal (non zero)
3ad4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ad7 :                 >skip2409
                       >
                        
                                rmbt 3
3ad7 : a9ff            >        lda #$ff
3ad9 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3adb : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3add : 48              >            pha         ;use stack to load status
3ade : a9a5            >            lda #$a5     ;precharge accu
3ae0 : 28              >            plp
                       >
3ae1 : 3710            >        rmb 3,zpt
                       >        tst_a $a5,0
3ae3 : 08              >            php         ;save flags
3ae4 : 08              >            php
3ae5 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3ae7 : f003            >        beq skip2415
                       >        trap            ;failed not equal (non zero)
3ae9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3aec :                 >skip2415
                       >
3aec : 68              >            pla         ;load status
                       >            cmp_flag 0
3aed : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3aef : f003            >        beq skip2418
                       >        trap            ;failed not equal (non zero)
3af1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3af4 :                 >skip2418
                       >
3af4 : 28              >            plp         ;restore status
                       >
3af5 : a510            >        lda zpt
3af7 : c9f7            >        cmp #$ff-(1<<3)
                       >        trap_ne     ;wrong bits set or cleared
3af9 : f003            >        beq skip2420
                       >        trap            ;failed not equal (non zero)
3afb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3afe :                 >skip2420
                       >
3afe : a908            >        lda #1<<3
3b00 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3b02 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3b04 : 48              >            pha         ;use stack to load status
3b05 : a95a            >            lda #$5a     ;precharge accu
3b07 : 28              >            plp
                       >
3b08 : 3710            >        rmb 3,zpt
                       >        tst_a $5a,$ff
3b0a : 08              >            php         ;save flags
3b0b : 08              >            php
3b0c : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3b0e : f003            >        beq skip2425
                       >        trap            ;failed not equal (non zero)
3b10 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b13 :                 >skip2425
                       >
3b13 : 68              >            pla         ;load status
                       >            cmp_flag $ff
3b14 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3b16 : f003            >        beq skip2428
                       >        trap            ;failed not equal (non zero)
3b18 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b1b :                 >skip2428
                       >
3b1b : 28              >            plp         ;restore status
                       >
3b1c : a510            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
3b1e : f003            >        beq skip2430
                       >        trap            ;failed not equal (non zero)
3b20 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b23 :                 >skip2430
                       >
                        
                                rmbt 4
3b23 : a9ff            >        lda #$ff
3b25 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3b27 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3b29 : 48              >            pha         ;use stack to load status
3b2a : a9a5            >            lda #$a5     ;precharge accu
3b2c : 28              >            plp
                       >
3b2d : 4710            >        rmb 4,zpt
                       >        tst_a $a5,0
3b2f : 08              >            php         ;save flags
3b30 : 08              >            php
3b31 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3b33 : f003            >        beq skip2436
                       >        trap            ;failed not equal (non zero)
3b35 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b38 :                 >skip2436
                       >
3b38 : 68              >            pla         ;load status
                       >            cmp_flag 0
3b39 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3b3b : f003            >        beq skip2439
                       >        trap            ;failed not equal (non zero)
3b3d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b40 :                 >skip2439
                       >
3b40 : 28              >            plp         ;restore status
                       >
3b41 : a510            >        lda zpt
3b43 : c9ef            >        cmp #$ff-(1<<4)
                       >        trap_ne     ;wrong bits set or cleared
3b45 : f003            >        beq skip2441
                       >        trap            ;failed not equal (non zero)
3b47 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b4a :                 >skip2441
                       >
3b4a : a910            >        lda #1<<4
3b4c : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3b4e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3b50 : 48              >            pha         ;use stack to load status
3b51 : a95a            >            lda #$5a     ;precharge accu
3b53 : 28              >            plp
                       >
3b54 : 4710            >        rmb 4,zpt
                       >        tst_a $5a,$ff
3b56 : 08              >            php         ;save flags
3b57 : 08              >            php
3b58 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3b5a : f003            >        beq skip2446
                       >        trap            ;failed not equal (non zero)
3b5c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b5f :                 >skip2446
                       >
3b5f : 68              >            pla         ;load status
                       >            cmp_flag $ff
3b60 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3b62 : f003            >        beq skip2449
                       >        trap            ;failed not equal (non zero)
3b64 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b67 :                 >skip2449
                       >
3b67 : 28              >            plp         ;restore status
                       >
3b68 : a510            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
3b6a : f003            >        beq skip2451
                       >        trap            ;failed not equal (non zero)
3b6c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b6f :                 >skip2451
                       >
                        
                                rmbt 5
3b6f : a9ff            >        lda #$ff
3b71 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3b73 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3b75 : 48              >            pha         ;use stack to load status
3b76 : a9a5            >            lda #$a5     ;precharge accu
3b78 : 28              >            plp
                       >
3b79 : 5710            >        rmb 5,zpt
                       >        tst_a $a5,0
3b7b : 08              >            php         ;save flags
3b7c : 08              >            php
3b7d : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3b7f : f003            >        beq skip2457
                       >        trap            ;failed not equal (non zero)
3b81 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b84 :                 >skip2457
                       >
3b84 : 68              >            pla         ;load status
                       >            cmp_flag 0
3b85 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3b87 : f003            >        beq skip2460
                       >        trap            ;failed not equal (non zero)
3b89 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b8c :                 >skip2460
                       >
3b8c : 28              >            plp         ;restore status
                       >
3b8d : a510            >        lda zpt
3b8f : c9df            >        cmp #$ff-(1<<5)
                       >        trap_ne     ;wrong bits set or cleared
3b91 : f003            >        beq skip2462
                       >        trap            ;failed not equal (non zero)
3b93 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b96 :                 >skip2462
                       >
3b96 : a920            >        lda #1<<5
3b98 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3b9a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3b9c : 48              >            pha         ;use stack to load status
3b9d : a95a            >            lda #$5a     ;precharge accu
3b9f : 28              >            plp
                       >
3ba0 : 5710            >        rmb 5,zpt
                       >        tst_a $5a,$ff
3ba2 : 08              >            php         ;save flags
3ba3 : 08              >            php
3ba4 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3ba6 : f003            >        beq skip2467
                       >        trap            ;failed not equal (non zero)
3ba8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3bab :                 >skip2467
                       >
3bab : 68              >            pla         ;load status
                       >            cmp_flag $ff
3bac : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3bae : f003            >        beq skip2470
                       >        trap            ;failed not equal (non zero)
3bb0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3bb3 :                 >skip2470
                       >
3bb3 : 28              >            plp         ;restore status
                       >
3bb4 : a510            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
3bb6 : f003            >        beq skip2472
                       >        trap            ;failed not equal (non zero)
3bb8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3bbb :                 >skip2472
                       >
                        
                                rmbt 6
3bbb : a9ff            >        lda #$ff
3bbd : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3bbf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3bc1 : 48              >            pha         ;use stack to load status
3bc2 : a9a5            >            lda #$a5     ;precharge accu
3bc4 : 28              >            plp
                       >
3bc5 : 6710            >        rmb 6,zpt
                       >        tst_a $a5,0
3bc7 : 08              >            php         ;save flags
3bc8 : 08              >            php
3bc9 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3bcb : f003            >        beq skip2478
                       >        trap            ;failed not equal (non zero)
3bcd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3bd0 :                 >skip2478
                       >
3bd0 : 68              >            pla         ;load status
                       >            cmp_flag 0
3bd1 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3bd3 : f003            >        beq skip2481
                       >        trap            ;failed not equal (non zero)
3bd5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3bd8 :                 >skip2481
                       >
3bd8 : 28              >            plp         ;restore status
                       >
3bd9 : a510            >        lda zpt
3bdb : c9bf            >        cmp #$ff-(1<<6)
                       >        trap_ne     ;wrong bits set or cleared
3bdd : f003            >        beq skip2483
                       >        trap            ;failed not equal (non zero)
3bdf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3be2 :                 >skip2483
                       >
3be2 : a940            >        lda #1<<6
3be4 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3be6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3be8 : 48              >            pha         ;use stack to load status
3be9 : a95a            >            lda #$5a     ;precharge accu
3beb : 28              >            plp
                       >
3bec : 6710            >        rmb 6,zpt
                       >        tst_a $5a,$ff
3bee : 08              >            php         ;save flags
3bef : 08              >            php
3bf0 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3bf2 : f003            >        beq skip2488
                       >        trap            ;failed not equal (non zero)
3bf4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3bf7 :                 >skip2488
                       >
3bf7 : 68              >            pla         ;load status
                       >            cmp_flag $ff
3bf8 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3bfa : f003            >        beq skip2491
                       >        trap            ;failed not equal (non zero)
3bfc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3bff :                 >skip2491
                       >
3bff : 28              >            plp         ;restore status
                       >
3c00 : a510            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
3c02 : f003            >        beq skip2493
                       >        trap            ;failed not equal (non zero)
3c04 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c07 :                 >skip2493
                       >
                        
                                rmbt 7
3c07 : a9ff            >        lda #$ff
3c09 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3c0b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3c0d : 48              >            pha         ;use stack to load status
3c0e : a9a5            >            lda #$a5     ;precharge accu
3c10 : 28              >            plp
                       >
3c11 : 7710            >        rmb 7,zpt
                       >        tst_a $a5,0
3c13 : 08              >            php         ;save flags
3c14 : 08              >            php
3c15 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3c17 : f003            >        beq skip2499
                       >        trap            ;failed not equal (non zero)
3c19 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c1c :                 >skip2499
                       >
3c1c : 68              >            pla         ;load status
                       >            cmp_flag 0
3c1d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3c1f : f003            >        beq skip2502
                       >        trap            ;failed not equal (non zero)
3c21 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c24 :                 >skip2502
                       >
3c24 : 28              >            plp         ;restore status
                       >
3c25 : a510            >        lda zpt
3c27 : c97f            >        cmp #$ff-(1<<7)
                       >        trap_ne     ;wrong bits set or cleared
3c29 : f003            >        beq skip2504
                       >        trap            ;failed not equal (non zero)
3c2b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c2e :                 >skip2504
                       >
3c2e : a980            >        lda #1<<7
3c30 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3c32 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3c34 : 48              >            pha         ;use stack to load status
3c35 : a95a            >            lda #$5a     ;precharge accu
3c37 : 28              >            plp
                       >
3c38 : 7710            >        rmb 7,zpt
                       >        tst_a $5a,$ff
3c3a : 08              >            php         ;save flags
3c3b : 08              >            php
3c3c : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3c3e : f003            >        beq skip2509
                       >        trap            ;failed not equal (non zero)
3c40 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c43 :                 >skip2509
                       >
3c43 : 68              >            pla         ;load status
                       >            cmp_flag $ff
3c44 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3c46 : f003            >        beq skip2512
                       >        trap            ;failed not equal (non zero)
3c48 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c4b :                 >skip2512
                       >
3c4b : 28              >            plp         ;restore status
                       >
3c4c : a510            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
3c4e : f003            >        beq skip2514
                       >        trap            ;failed not equal (non zero)
3c50 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c53 :                 >skip2514
                       >
                        
                                smbt 0
3c53 : a9fe            >        lda #$ff-(1<<0)
3c55 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3c57 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3c59 : 48              >            pha         ;use stack to load status
3c5a : a9a5            >            lda #$a5     ;precharge accu
3c5c : 28              >            plp
                       >
3c5d : 8710            >        smb 0,zpt
                       >        tst_a $a5,0
3c5f : 08              >            php         ;save flags
3c60 : 08              >            php
3c61 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3c63 : f003            >        beq skip2520
                       >        trap            ;failed not equal (non zero)
3c65 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c68 :                 >skip2520
                       >
3c68 : 68              >            pla         ;load status
                       >            cmp_flag 0
3c69 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3c6b : f003            >        beq skip2523
                       >        trap            ;failed not equal (non zero)
3c6d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c70 :                 >skip2523
                       >
3c70 : 28              >            plp         ;restore status
                       >
3c71 : a510            >        lda zpt
3c73 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
3c75 : f003            >        beq skip2525
                       >        trap            ;failed not equal (non zero)
3c77 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c7a :                 >skip2525
                       >
3c7a : a900            >        lda #0
3c7c : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3c7e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3c80 : 48              >            pha         ;use stack to load status
3c81 : a95a            >            lda #$5a     ;precharge accu
3c83 : 28              >            plp
                       >
3c84 : 8710            >        smb 0,zpt
                       >        tst_a $5a,$ff
3c86 : 08              >            php         ;save flags
3c87 : 08              >            php
3c88 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3c8a : f003            >        beq skip2530
                       >        trap            ;failed not equal (non zero)
3c8c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c8f :                 >skip2530
                       >
3c8f : 68              >            pla         ;load status
                       >            cmp_flag $ff
3c90 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3c92 : f003            >        beq skip2533
                       >        trap            ;failed not equal (non zero)
3c94 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c97 :                 >skip2533
                       >
3c97 : 28              >            plp         ;restore status
                       >
3c98 : a510            >        lda zpt
3c9a : c901            >        cmp #1<<0
                       >        trap_ne     ;wrong bits set or cleared
3c9c : f003            >        beq skip2535
                       >        trap            ;failed not equal (non zero)
3c9e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ca1 :                 >skip2535
                       >
                        
                                smbt 1
3ca1 : a9fd            >        lda #$ff-(1<<1)
3ca3 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3ca5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3ca7 : 48              >            pha         ;use stack to load status
3ca8 : a9a5            >            lda #$a5     ;precharge accu
3caa : 28              >            plp
                       >
3cab : 9710            >        smb 1,zpt
                       >        tst_a $a5,0
3cad : 08              >            php         ;save flags
3cae : 08              >            php
3caf : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3cb1 : f003            >        beq skip2541
                       >        trap            ;failed not equal (non zero)
3cb3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3cb6 :                 >skip2541
                       >
3cb6 : 68              >            pla         ;load status
                       >            cmp_flag 0
3cb7 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3cb9 : f003            >        beq skip2544
                       >        trap            ;failed not equal (non zero)
3cbb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3cbe :                 >skip2544
                       >
3cbe : 28              >            plp         ;restore status
                       >
3cbf : a510            >        lda zpt
3cc1 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
3cc3 : f003            >        beq skip2546
                       >        trap            ;failed not equal (non zero)
3cc5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3cc8 :                 >skip2546
                       >
3cc8 : a900            >        lda #0
3cca : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3ccc : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3cce : 48              >            pha         ;use stack to load status
3ccf : a95a            >            lda #$5a     ;precharge accu
3cd1 : 28              >            plp
                       >
3cd2 : 9710            >        smb 1,zpt
                       >        tst_a $5a,$ff
3cd4 : 08              >            php         ;save flags
3cd5 : 08              >            php
3cd6 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3cd8 : f003            >        beq skip2551
                       >        trap            ;failed not equal (non zero)
3cda : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3cdd :                 >skip2551
                       >
3cdd : 68              >            pla         ;load status
                       >            cmp_flag $ff
3cde : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3ce0 : f003            >        beq skip2554
                       >        trap            ;failed not equal (non zero)
3ce2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ce5 :                 >skip2554
                       >
3ce5 : 28              >            plp         ;restore status
                       >
3ce6 : a510            >        lda zpt
3ce8 : c902            >        cmp #1<<1
                       >        trap_ne     ;wrong bits set or cleared
3cea : f003            >        beq skip2556
                       >        trap            ;failed not equal (non zero)
3cec : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3cef :                 >skip2556
                       >
                        
                                smbt 2
3cef : a9fb            >        lda #$ff-(1<<2)
3cf1 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3cf3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3cf5 : 48              >            pha         ;use stack to load status
3cf6 : a9a5            >            lda #$a5     ;precharge accu
3cf8 : 28              >            plp
                       >
3cf9 : a710            >        smb 2,zpt
                       >        tst_a $a5,0
3cfb : 08              >            php         ;save flags
3cfc : 08              >            php
3cfd : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3cff : f003            >        beq skip2562
                       >        trap            ;failed not equal (non zero)
3d01 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d04 :                 >skip2562
                       >
3d04 : 68              >            pla         ;load status
                       >            cmp_flag 0
3d05 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3d07 : f003            >        beq skip2565
                       >        trap            ;failed not equal (non zero)
3d09 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d0c :                 >skip2565
                       >
3d0c : 28              >            plp         ;restore status
                       >
3d0d : a510            >        lda zpt
3d0f : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
3d11 : f003            >        beq skip2567
                       >        trap            ;failed not equal (non zero)
3d13 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d16 :                 >skip2567
                       >
3d16 : a900            >        lda #0
3d18 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3d1a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3d1c : 48              >            pha         ;use stack to load status
3d1d : a95a            >            lda #$5a     ;precharge accu
3d1f : 28              >            plp
                       >
3d20 : a710            >        smb 2,zpt
                       >        tst_a $5a,$ff
3d22 : 08              >            php         ;save flags
3d23 : 08              >            php
3d24 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3d26 : f003            >        beq skip2572
                       >        trap            ;failed not equal (non zero)
3d28 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d2b :                 >skip2572
                       >
3d2b : 68              >            pla         ;load status
                       >            cmp_flag $ff
3d2c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3d2e : f003            >        beq skip2575
                       >        trap            ;failed not equal (non zero)
3d30 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d33 :                 >skip2575
                       >
3d33 : 28              >            plp         ;restore status
                       >
3d34 : a510            >        lda zpt
3d36 : c904            >        cmp #1<<2
                       >        trap_ne     ;wrong bits set or cleared
3d38 : f003            >        beq skip2577
                       >        trap            ;failed not equal (non zero)
3d3a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d3d :                 >skip2577
                       >
                        
                                smbt 3
3d3d : a9f7            >        lda #$ff-(1<<3)
3d3f : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3d41 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3d43 : 48              >            pha         ;use stack to load status
3d44 : a9a5            >            lda #$a5     ;precharge accu
3d46 : 28              >            plp
                       >
3d47 : b710            >        smb 3,zpt
                       >        tst_a $a5,0
3d49 : 08              >            php         ;save flags
3d4a : 08              >            php
3d4b : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3d4d : f003            >        beq skip2583
                       >        trap            ;failed not equal (non zero)
3d4f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d52 :                 >skip2583
                       >
3d52 : 68              >            pla         ;load status
                       >            cmp_flag 0
3d53 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3d55 : f003            >        beq skip2586
                       >        trap            ;failed not equal (non zero)
3d57 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d5a :                 >skip2586
                       >
3d5a : 28              >            plp         ;restore status
                       >
3d5b : a510            >        lda zpt
3d5d : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
3d5f : f003            >        beq skip2588
                       >        trap            ;failed not equal (non zero)
3d61 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d64 :                 >skip2588
                       >
3d64 : a900            >        lda #0
3d66 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3d68 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3d6a : 48              >            pha         ;use stack to load status
3d6b : a95a            >            lda #$5a     ;precharge accu
3d6d : 28              >            plp
                       >
3d6e : b710            >        smb 3,zpt
                       >        tst_a $5a,$ff
3d70 : 08              >            php         ;save flags
3d71 : 08              >            php
3d72 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3d74 : f003            >        beq skip2593
                       >        trap            ;failed not equal (non zero)
3d76 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d79 :                 >skip2593
                       >
3d79 : 68              >            pla         ;load status
                       >            cmp_flag $ff
3d7a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3d7c : f003            >        beq skip2596
                       >        trap            ;failed not equal (non zero)
3d7e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d81 :                 >skip2596
                       >
3d81 : 28              >            plp         ;restore status
                       >
3d82 : a510            >        lda zpt
3d84 : c908            >        cmp #1<<3
                       >        trap_ne     ;wrong bits set or cleared
3d86 : f003            >        beq skip2598
                       >        trap            ;failed not equal (non zero)
3d88 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d8b :                 >skip2598
                       >
                        
                                smbt 4
3d8b : a9ef            >        lda #$ff-(1<<4)
3d8d : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3d8f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3d91 : 48              >            pha         ;use stack to load status
3d92 : a9a5            >            lda #$a5     ;precharge accu
3d94 : 28              >            plp
                       >
3d95 : c710            >        smb 4,zpt
                       >        tst_a $a5,0
3d97 : 08              >            php         ;save flags
3d98 : 08              >            php
3d99 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3d9b : f003            >        beq skip2604
                       >        trap            ;failed not equal (non zero)
3d9d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3da0 :                 >skip2604
                       >
3da0 : 68              >            pla         ;load status
                       >            cmp_flag 0
3da1 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3da3 : f003            >        beq skip2607
                       >        trap            ;failed not equal (non zero)
3da5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3da8 :                 >skip2607
                       >
3da8 : 28              >            plp         ;restore status
                       >
3da9 : a510            >        lda zpt
3dab : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
3dad : f003            >        beq skip2609
                       >        trap            ;failed not equal (non zero)
3daf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3db2 :                 >skip2609
                       >
3db2 : a900            >        lda #0
3db4 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3db6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3db8 : 48              >            pha         ;use stack to load status
3db9 : a95a            >            lda #$5a     ;precharge accu
3dbb : 28              >            plp
                       >
3dbc : c710            >        smb 4,zpt
                       >        tst_a $5a,$ff
3dbe : 08              >            php         ;save flags
3dbf : 08              >            php
3dc0 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3dc2 : f003            >        beq skip2614
                       >        trap            ;failed not equal (non zero)
3dc4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3dc7 :                 >skip2614
                       >
3dc7 : 68              >            pla         ;load status
                       >            cmp_flag $ff
3dc8 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3dca : f003            >        beq skip2617
                       >        trap            ;failed not equal (non zero)
3dcc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3dcf :                 >skip2617
                       >
3dcf : 28              >            plp         ;restore status
                       >
3dd0 : a510            >        lda zpt
3dd2 : c910            >        cmp #1<<4
                       >        trap_ne     ;wrong bits set or cleared
3dd4 : f003            >        beq skip2619
                       >        trap            ;failed not equal (non zero)
3dd6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3dd9 :                 >skip2619
                       >
                        
                                smbt 5
3dd9 : a9df            >        lda #$ff-(1<<5)
3ddb : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3ddd : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3ddf : 48              >            pha         ;use stack to load status
3de0 : a9a5            >            lda #$a5     ;precharge accu
3de2 : 28              >            plp
                       >
3de3 : d710            >        smb 5,zpt
                       >        tst_a $a5,0
3de5 : 08              >            php         ;save flags
3de6 : 08              >            php
3de7 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3de9 : f003            >        beq skip2625
                       >        trap            ;failed not equal (non zero)
3deb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3dee :                 >skip2625
                       >
3dee : 68              >            pla         ;load status
                       >            cmp_flag 0
3def : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3df1 : f003            >        beq skip2628
                       >        trap            ;failed not equal (non zero)
3df3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3df6 :                 >skip2628
                       >
3df6 : 28              >            plp         ;restore status
                       >
3df7 : a510            >        lda zpt
3df9 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
3dfb : f003            >        beq skip2630
                       >        trap            ;failed not equal (non zero)
3dfd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e00 :                 >skip2630
                       >
3e00 : a900            >        lda #0
3e02 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3e04 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3e06 : 48              >            pha         ;use stack to load status
3e07 : a95a            >            lda #$5a     ;precharge accu
3e09 : 28              >            plp
                       >
3e0a : d710            >        smb 5,zpt
                       >        tst_a $5a,$ff
3e0c : 08              >            php         ;save flags
3e0d : 08              >            php
3e0e : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3e10 : f003            >        beq skip2635
                       >        trap            ;failed not equal (non zero)
3e12 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e15 :                 >skip2635
                       >
3e15 : 68              >            pla         ;load status
                       >            cmp_flag $ff
3e16 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3e18 : f003            >        beq skip2638
                       >        trap            ;failed not equal (non zero)
3e1a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e1d :                 >skip2638
                       >
3e1d : 28              >            plp         ;restore status
                       >
3e1e : a510            >        lda zpt
3e20 : c920            >        cmp #1<<5
                       >        trap_ne     ;wrong bits set or cleared
3e22 : f003            >        beq skip2640
                       >        trap            ;failed not equal (non zero)
3e24 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e27 :                 >skip2640
                       >
                        
                                smbt 6
3e27 : a9bf            >        lda #$ff-(1<<6)
3e29 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3e2b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3e2d : 48              >            pha         ;use stack to load status
3e2e : a9a5            >            lda #$a5     ;precharge accu
3e30 : 28              >            plp
                       >
3e31 : e710            >        smb 6,zpt
                       >        tst_a $a5,0
3e33 : 08              >            php         ;save flags
3e34 : 08              >            php
3e35 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3e37 : f003            >        beq skip2646
                       >        trap            ;failed not equal (non zero)
3e39 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e3c :                 >skip2646
                       >
3e3c : 68              >            pla         ;load status
                       >            cmp_flag 0
3e3d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3e3f : f003            >        beq skip2649
                       >        trap            ;failed not equal (non zero)
3e41 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e44 :                 >skip2649
                       >
3e44 : 28              >            plp         ;restore status
                       >
3e45 : a510            >        lda zpt
3e47 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
3e49 : f003            >        beq skip2651
                       >        trap            ;failed not equal (non zero)
3e4b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e4e :                 >skip2651
                       >
3e4e : a900            >        lda #0
3e50 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3e52 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3e54 : 48              >            pha         ;use stack to load status
3e55 : a95a            >            lda #$5a     ;precharge accu
3e57 : 28              >            plp
                       >
3e58 : e710            >        smb 6,zpt
                       >        tst_a $5a,$ff
3e5a : 08              >            php         ;save flags
3e5b : 08              >            php
3e5c : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3e5e : f003            >        beq skip2656
                       >        trap            ;failed not equal (non zero)
3e60 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e63 :                 >skip2656
                       >
3e63 : 68              >            pla         ;load status
                       >            cmp_flag $ff
3e64 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3e66 : f003            >        beq skip2659
                       >        trap            ;failed not equal (non zero)
3e68 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e6b :                 >skip2659
                       >
3e6b : 28              >            plp         ;restore status
                       >
3e6c : a510            >        lda zpt
3e6e : c940            >        cmp #1<<6
                       >        trap_ne     ;wrong bits set or cleared
3e70 : f003            >        beq skip2661
                       >        trap            ;failed not equal (non zero)
3e72 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e75 :                 >skip2661
                       >
                        
                                smbt 7
3e75 : a97f            >        lda #$ff-(1<<7)
3e77 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3e79 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3e7b : 48              >            pha         ;use stack to load status
3e7c : a9a5            >            lda #$a5     ;precharge accu
3e7e : 28              >            plp
                       >
3e7f : f710            >        smb 7,zpt
                       >        tst_a $a5,0
3e81 : 08              >            php         ;save flags
3e82 : 08              >            php
3e83 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3e85 : f003            >        beq skip2667
                       >        trap            ;failed not equal (non zero)
3e87 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e8a :                 >skip2667
                       >
3e8a : 68              >            pla         ;load status
                       >            cmp_flag 0
3e8b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3e8d : f003            >        beq skip2670
                       >        trap            ;failed not equal (non zero)
3e8f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e92 :                 >skip2670
                       >
3e92 : 28              >            plp         ;restore status
                       >
3e93 : a510            >        lda zpt
3e95 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
3e97 : f003            >        beq skip2672
                       >        trap            ;failed not equal (non zero)
3e99 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e9c :                 >skip2672
                       >
3e9c : a900            >        lda #0
3e9e : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3ea0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3ea2 : 48              >            pha         ;use stack to load status
3ea3 : a95a            >            lda #$5a     ;precharge accu
3ea5 : 28              >            plp
                       >
3ea6 : f710            >        smb 7,zpt
                       >        tst_a $5a,$ff
3ea8 : 08              >            php         ;save flags
3ea9 : 08              >            php
3eaa : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3eac : f003            >        beq skip2677
                       >        trap            ;failed not equal (non zero)
3eae : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3eb1 :                 >skip2677
                       >
3eb1 : 68              >            pla         ;load status
                       >            cmp_flag $ff
3eb2 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3eb4 : f003            >        beq skip2680
                       >        trap            ;failed not equal (non zero)
3eb6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3eb9 :                 >skip2680
                       >
3eb9 : 28              >            plp         ;restore status
                       >
3eba : a510            >        lda zpt
3ebc : c980            >        cmp #1<<7
                       >        trap_ne     ;wrong bits set or cleared
3ebe : f003            >        beq skip2682
                       >        trap            ;failed not equal (non zero)
3ec0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ec3 :                 >skip2682
                       >
                        
3ec3 : e0ba                     cpx #$ba
                                trap_ne     ;x altered during test
3ec5 : f003            >        beq skip2684
                       >        trap            ;failed not equal (non zero)
3ec7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3eca :                 >skip2684
                        
3eca : c0d0                     cpy #$d0
                                trap_ne     ;y altered during test
3ecc : f003            >        beq skip2686
                       >        trap            ;failed not equal (non zero)
3ece : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ed1 :                 >skip2686
                        
3ed1 : ba                       tsx
3ed2 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
3ed4 : f003            >        beq skip2688
                       >        trap            ;failed not equal (non zero)
3ed6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ed9 :                 >skip2688
                        
                                next_test
3ed9 : ad0202          >            lda test_case   ;previous test
3edc : c911            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3ede : f003            >        beq skip2691
                       >        trap            ;failed not equal (non zero)
3ee0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ee3 :                 >skip2691
                       >
0012 =                 >test_num = test_num + 1
3ee3 : a912            >            lda #test_num   ;*** next tests' number
3ee5 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            check_ram       ;uncomment to find altered RAM after each test
3ee8 : d8              >            cld
3ee9 : a900            >            lda #0
3eeb : 8510            >            sta zpt         ;set low byte of indirect pointer
3eed : 8513            >            sta zpt+3       ;checksum high byte
3eef : a20b            >            ldx #11         ;reset modifiable RAM
3ef1 : 9df902          >ccs12693      sta jxi_tab,x   ;JMP indirect page cross area
3ef4 : ca              >            dex
3ef5 : 10fa            >            bpl ccs12693
3ef7 : 8dd144          >            sta chkdadi     ;self modifying code
3efa : 8dee44          >            sta chkdsbi
3efd : 18              >            clc
3efe : a207            >            ldx #zp_bss-zero_page ;zeropage - write test area
3f00 : 7510            >ccs32693      adc zero_page,x
3f02 : 9003            >            bcc ccs22693
3f04 : e613            >            inc zpt+3       ;carry to high byte
3f06 : 18              >            clc
3f07 : e8              >ccs22693      inx
3f08 : d0f6            >            bne ccs32693
3f0a : a202            >            ldx #hi(data_segment) ;set high byte of indirect pointer
3f0c : 8611            >            stx zpt+1
3f0e : a00a            >            ldy #lo(data_bss) ;data after write test area
3f10 : 7110            >ccs52693      adc (zpt),y
3f12 : 9003            >            bcc ccs42693
3f14 : e613            >            inc zpt+3       ;carry to high byte
3f16 : 18              >            clc
3f17 : c8              >ccs42693      iny
3f18 : d0f6            >            bne ccs52693
3f1a : e8              >            inx             ;advance RAM high address
3f1b : 8611            >            stx zpt+1
3f1d : e0e0            >            cpx #ram_top
3f1f : d0ef            >            bne ccs52693
3f21 : 8512            >            sta zpt+2       ;checksum low is
3f23 : cd0302          >            cmp ram_chksm   ;checksum low expected
                       >            trap_ne         ;checksum mismatch
3f26 : f003            >        beq skip2694
                       >        trap            ;failed not equal (non zero)
3f28 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f2b :                 >skip2694
                       >
3f2b : a513            >            lda zpt+3       ;checksum high is
3f2d : cd0402          >            cmp ram_chksm+1 ;checksum high expected
                       >            trap_ne         ;checksum mismatch
3f30 : f003            >        beq skip2696
                       >        trap            ;failed not equal (non zero)
3f32 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f35 :                 >skip2696
                       >
                       >
                        
                            endif        
                                 
3f35 : 8d04ef            sta $ef04
3f38 : 74657374696e67..  db "testing CMP - (zp)         ", 10, 0
3f55 : a2de                     ldx #$de    ;protect x & y
3f57 : a0ad                     ldy #$ad
                                set_a $80,0
                       >            load_flag 0
3f59 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3f5b : 48              >            pha         ;use stack to load status
3f5c : a980            >            lda #$80     ;precharge accu
3f5e : 28              >            plp
                        
3f5f : d230                     cmp (ind1+8)
                                tst_a $80,fc
3f61 : 08              >            php         ;save flags
3f62 : 08              >            php
3f63 : c980            >            cmp #$80     ;test result
                       >            trap_ne
3f65 : f003            >        beq skip2701
                       >        trap            ;failed not equal (non zero)
3f67 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f6a :                 >skip2701
                       >
3f6a : 68              >            pla         ;load status
                       >            cmp_flag fc
3f6b : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3f6d : f003            >        beq skip2704
                       >        trap            ;failed not equal (non zero)
3f6f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f72 :                 >skip2704
                       >
3f72 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
3f73 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3f75 : 48              >            pha         ;use stack to load status
3f76 : a97f            >            lda #$7f     ;precharge accu
3f78 : 28              >            plp
                        
3f79 : d230                     cmp (ind1+8)
                                tst_a $7f,fzc
3f7b : 08              >            php         ;save flags
3f7c : 08              >            php
3f7d : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
3f7f : f003            >        beq skip2709
                       >        trap            ;failed not equal (non zero)
3f81 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f84 :                 >skip2709
                       >
3f84 : 68              >            pla         ;load status
                       >            cmp_flag fzc
3f85 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3f87 : f003            >        beq skip2712
                       >        trap            ;failed not equal (non zero)
3f89 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f8c :                 >skip2712
                       >
3f8c : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
3f8d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3f8f : 48              >            pha         ;use stack to load status
3f90 : a97e            >            lda #$7e     ;precharge accu
3f92 : 28              >            plp
                        
3f93 : d230                     cmp (ind1+8)
                                tst_a $7e,fn
3f95 : 08              >            php         ;save flags
3f96 : 08              >            php
3f97 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
3f99 : f003            >        beq skip2717
                       >        trap            ;failed not equal (non zero)
3f9b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f9e :                 >skip2717
                       >
3f9e : 68              >            pla         ;load status
                       >            cmp_flag fn
3f9f : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3fa1 : f003            >        beq skip2720
                       >        trap            ;failed not equal (non zero)
3fa3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3fa6 :                 >skip2720
                       >
3fa6 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
3fa7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3fa9 : 48              >            pha         ;use stack to load status
3faa : a980            >            lda #$80     ;precharge accu
3fac : 28              >            plp
                        
3fad : d230                     cmp (ind1+8)
                                tst_a $80,~fnz
3faf : 08              >            php         ;save flags
3fb0 : 08              >            php
3fb1 : c980            >            cmp #$80     ;test result
                       >            trap_ne
3fb3 : f003            >        beq skip2725
                       >        trap            ;failed not equal (non zero)
3fb5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3fb8 :                 >skip2725
                       >
3fb8 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
3fb9 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3fbb : f003            >        beq skip2728
                       >        trap            ;failed not equal (non zero)
3fbd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3fc0 :                 >skip2728
                       >
3fc0 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
3fc1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3fc3 : 48              >            pha         ;use stack to load status
3fc4 : a97f            >            lda #$7f     ;precharge accu
3fc6 : 28              >            plp
                        
3fc7 : d230                     cmp (ind1+8)
                                tst_a $7f,~fn
3fc9 : 08              >            php         ;save flags
3fca : 08              >            php
3fcb : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
3fcd : f003            >        beq skip2733
                       >        trap            ;failed not equal (non zero)
3fcf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3fd2 :                 >skip2733
                       >
3fd2 : 68              >            pla         ;load status
                       >            cmp_flag ~fn
3fd3 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3fd5 : f003            >        beq skip2736
                       >        trap            ;failed not equal (non zero)
3fd7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3fda :                 >skip2736
                       >
3fda : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
3fdb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3fdd : 48              >            pha         ;use stack to load status
3fde : a97e            >            lda #$7e     ;precharge accu
3fe0 : 28              >            plp
                        
3fe1 : d230                     cmp (ind1+8)
                                tst_a $7e,~fzc
3fe3 : 08              >            php         ;save flags
3fe4 : 08              >            php
3fe5 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
3fe7 : f003            >        beq skip2741
                       >        trap            ;failed not equal (non zero)
3fe9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3fec :                 >skip2741
                       >
3fec : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
3fed : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3fef : f003            >        beq skip2744
                       >        trap            ;failed not equal (non zero)
3ff1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ff4 :                 >skip2744
                       >
3ff4 : 28              >            plp         ;restore status
                        
3ff5 : e0de                     cpx #$de
                                trap_ne     ;x altered during test
3ff7 : f003            >        beq skip2746
                       >        trap            ;failed not equal (non zero)
3ff9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ffc :                 >skip2746
                        
3ffc : c0ad                     cpy #$ad
                                trap_ne     ;y altered during test 
3ffe : f003            >        beq skip2748
                       >        trap            ;failed not equal (non zero)
4000 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4003 :                 >skip2748
                        
4003 : ba                       tsx
4004 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
4006 : f003            >        beq skip2750
                       >        trap            ;failed not equal (non zero)
4008 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
400b :                 >skip2750
                        
                                next_test
400b : ad0202          >            lda test_case   ;previous test
400e : c912            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
4010 : f003            >        beq skip2753
                       >        trap            ;failed not equal (non zero)
4012 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4015 :                 >skip2753
                       >
0013 =                 >test_num = test_num + 1
4015 : a913            >            lda #test_num   ;*** next tests' number
4017 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            check_ram       ;uncomment to find altered RAM after each test
401a : d8              >            cld
401b : a900            >            lda #0
401d : 8510            >            sta zpt         ;set low byte of indirect pointer
401f : 8513            >            sta zpt+3       ;checksum high byte
4021 : a20b            >            ldx #11         ;reset modifiable RAM
4023 : 9df902          >ccs12755      sta jxi_tab,x   ;JMP indirect page cross area
4026 : ca              >            dex
4027 : 10fa            >            bpl ccs12755
4029 : 8dd144          >            sta chkdadi     ;self modifying code
402c : 8dee44          >            sta chkdsbi
402f : 18              >            clc
4030 : a207            >            ldx #zp_bss-zero_page ;zeropage - write test area
4032 : 7510            >ccs32755      adc zero_page,x
4034 : 9003            >            bcc ccs22755
4036 : e613            >            inc zpt+3       ;carry to high byte
4038 : 18              >            clc
4039 : e8              >ccs22755      inx
403a : d0f6            >            bne ccs32755
403c : a202            >            ldx #hi(data_segment) ;set high byte of indirect pointer
403e : 8611            >            stx zpt+1
4040 : a00a            >            ldy #lo(data_bss) ;data after write test area
4042 : 7110            >ccs52755      adc (zpt),y
4044 : 9003            >            bcc ccs42755
4046 : e613            >            inc zpt+3       ;carry to high byte
4048 : 18              >            clc
4049 : c8              >ccs42755      iny
404a : d0f6            >            bne ccs52755
404c : e8              >            inx             ;advance RAM high address
404d : 8611            >            stx zpt+1
404f : e0e0            >            cpx #ram_top
4051 : d0ef            >            bne ccs52755
4053 : 8512            >            sta zpt+2       ;checksum low is
4055 : cd0302          >            cmp ram_chksm   ;checksum low expected
                       >            trap_ne         ;checksum mismatch
4058 : f003            >        beq skip2756
                       >        trap            ;failed not equal (non zero)
405a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
405d :                 >skip2756
                       >
405d : a513            >            lda zpt+3       ;checksum high is
405f : cd0402          >            cmp ram_chksm+1 ;checksum high expected
                       >            trap_ne         ;checksum mismatch
4062 : f003            >        beq skip2758
                       >        trap            ;failed not equal (non zero)
4064 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4067 :                 >skip2758
                       >
                       >
                        
                        
4067 : 8d04ef            sta $ef04
406a : 74657374696e67..  db "testing logical instructions - AND EOR ORA (zp)", 10, 0
409b : a242                     ldx #$42    ;protect x & y
                        
409d : a000                     ldy #0      ;AND
409f : a53e                     lda indAN   ;set indirect address
40a1 : 8510                     sta zpt
40a3 : a53f                     lda indAN+1
40a5 : 8511                     sta zpt+1
40a7 :                  tand1
                                set_ay  absANa,0
                       >            load_flag 0
40a7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
40a9 : 48              >            pha         ;use stack to load status
40aa : b94d02          >            lda absANa,y    ;precharge accu
40ad : 28              >            plp
                        
40ae : 3210                     and (zpt)
                                tst_ay  absrlo,absflo,0
40b0 : 08              >            php         ;save flags
40b1 : d95502          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
40b4 : f003            >        beq skip2763
                       >        trap            ;failed not equal (non zero)
40b6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
40b9 :                 >skip2763
                       >
40b9 : 68              >            pla         ;load status
                       >            eor_flag 0
40ba : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
40bc : d95902          >            cmp absflo,y    ;test flags
                       >            trap_ne
40bf : f003            >        beq skip2766
                       >        trap            ;failed not equal (non zero)
40c1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
40c4 :                 >skip2766
                       >
                        
40c4 : e610                     inc zpt
40c6 : c8                       iny
40c7 : c004                     cpy #4
40c9 : d0dc                     bne tand1
40cb : 88                       dey
40cc : c610                     dec zpt
40ce :                  tand2
                                set_ay  absANa,$ff
                       >            load_flag $ff
40ce : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
40d0 : 48              >            pha         ;use stack to load status
40d1 : b94d02          >            lda absANa,y    ;precharge accu
40d4 : 28              >            plp
                        
40d5 : 3210                     and (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
40d7 : 08              >            php         ;save flags
40d8 : d95502          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
40db : f003            >        beq skip2771
                       >        trap            ;failed not equal (non zero)
40dd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
40e0 :                 >skip2771
                       >
40e0 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
40e1 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
40e3 : d95902          >            cmp absflo,y    ;test flags
                       >            trap_ne
40e6 : f003            >        beq skip2774
                       >        trap            ;failed not equal (non zero)
40e8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
40eb :                 >skip2774
                       >
                        
40eb : c610                     dec zpt
40ed : 88                       dey
40ee : 10de                     bpl tand2
                        
40f0 : a000                     ldy #0      ;EOR
40f2 : a546                     lda indEO   ;set indirect address
40f4 : 8510                     sta zpt
40f6 : a547                     lda indEO+1
40f8 : 8511                     sta zpt+1
40fa :                  teor1
                                set_ay  absEOa,0
                       >            load_flag 0
40fa : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
40fc : 48              >            pha         ;use stack to load status
40fd : b95102          >            lda absEOa,y    ;precharge accu
4100 : 28              >            plp
                        
4101 : 5210                     eor (zpt)
                                tst_ay  absrlo,absflo,0
4103 : 08              >            php         ;save flags
4104 : d95502          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4107 : f003            >        beq skip2779
                       >        trap            ;failed not equal (non zero)
4109 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
410c :                 >skip2779
                       >
410c : 68              >            pla         ;load status
                       >            eor_flag 0
410d : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
410f : d95902          >            cmp absflo,y    ;test flags
                       >            trap_ne
4112 : f003            >        beq skip2782
                       >        trap            ;failed not equal (non zero)
4114 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4117 :                 >skip2782
                       >
                        
4117 : e610                     inc zpt
4119 : c8                       iny
411a : c004                     cpy #4
411c : d0dc                     bne teor1
411e : 88                       dey
411f : c610                     dec zpt
4121 :                  teor2
                                set_ay  absEOa,$ff
                       >            load_flag $ff
4121 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4123 : 48              >            pha         ;use stack to load status
4124 : b95102          >            lda absEOa,y    ;precharge accu
4127 : 28              >            plp
                        
4128 : 5210                     eor (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
412a : 08              >            php         ;save flags
412b : d95502          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
412e : f003            >        beq skip2787
                       >        trap            ;failed not equal (non zero)
4130 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4133 :                 >skip2787
                       >
4133 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4134 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4136 : d95902          >            cmp absflo,y    ;test flags
                       >            trap_ne
4139 : f003            >        beq skip2790
                       >        trap            ;failed not equal (non zero)
413b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
413e :                 >skip2790
                       >
                        
413e : c610                     dec zpt
4140 : 88                       dey
4141 : 10de                     bpl teor2
                        
4143 : a000                     ldy #0      ;ORA
4145 : a54e                     lda indOR   ;set indirect address
4147 : 8510                     sta zpt
4149 : a54f                     lda indOR+1
414b : 8511                     sta zpt+1
414d :                  tora1
                                set_ay  absORa,0
                       >            load_flag 0
414d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
414f : 48              >            pha         ;use stack to load status
4150 : b94902          >            lda absORa,y    ;precharge accu
4153 : 28              >            plp
                        
4154 : 1210                     ora (zpt)
                                tst_ay  absrlo,absflo,0
4156 : 08              >            php         ;save flags
4157 : d95502          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
415a : f003            >        beq skip2795
                       >        trap            ;failed not equal (non zero)
415c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
415f :                 >skip2795
                       >
415f : 68              >            pla         ;load status
                       >            eor_flag 0
4160 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
4162 : d95902          >            cmp absflo,y    ;test flags
                       >            trap_ne
4165 : f003            >        beq skip2798
                       >        trap            ;failed not equal (non zero)
4167 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
416a :                 >skip2798
                       >
                        
416a : e610                     inc zpt
416c : c8                       iny
416d : c004                     cpy #4
416f : d0dc                     bne tora1
4171 : 88                       dey
4172 : c610                     dec zpt
4174 :                  tora2
                                set_ay  absORa,$ff
                       >            load_flag $ff
4174 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
4176 : 48              >            pha         ;use stack to load status
4177 : b94902          >            lda absORa,y    ;precharge accu
417a : 28              >            plp
                        
417b : 1210                     ora (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
417d : 08              >            php         ;save flags
417e : d95502          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
4181 : f003            >        beq skip2803
                       >        trap            ;failed not equal (non zero)
4183 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4186 :                 >skip2803
                       >
4186 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
4187 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
4189 : d95902          >            cmp absflo,y    ;test flags
                       >            trap_ne
418c : f003            >        beq skip2806
                       >        trap            ;failed not equal (non zero)
418e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4191 :                 >skip2806
                       >
                        
4191 : c610                     dec zpt
4193 : 88                       dey
4194 : 10de                     bpl tora2
                        
4196 : e042                     cpx #$42
                                trap_ne     ;x altered during test
4198 : f003            >        beq skip2808
                       >        trap            ;failed not equal (non zero)
419a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
419d :                 >skip2808
                        
419d : ba                       tsx
419e : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
41a0 : f003            >        beq skip2810
                       >        trap            ;failed not equal (non zero)
41a2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
41a5 :                 >skip2810
                        
                                next_test
41a5 : ad0202          >            lda test_case   ;previous test
41a8 : c913            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
41aa : f003            >        beq skip2813
                       >        trap            ;failed not equal (non zero)
41ac : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
41af :                 >skip2813
                       >
0014 =                 >test_num = test_num + 1
41af : a914            >            lda #test_num   ;*** next tests' number
41b1 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            check_ram       ;uncomment to find altered RAM after each test
41b4 : d8              >            cld
41b5 : a900            >            lda #0
41b7 : 8510            >            sta zpt         ;set low byte of indirect pointer
41b9 : 8513            >            sta zpt+3       ;checksum high byte
41bb : a20b            >            ldx #11         ;reset modifiable RAM
41bd : 9df902          >ccs12815      sta jxi_tab,x   ;JMP indirect page cross area
41c0 : ca              >            dex
41c1 : 10fa            >            bpl ccs12815
41c3 : 8dd144          >            sta chkdadi     ;self modifying code
41c6 : 8dee44          >            sta chkdsbi
41c9 : 18              >            clc
41ca : a207            >            ldx #zp_bss-zero_page ;zeropage - write test area
41cc : 7510            >ccs32815      adc zero_page,x
41ce : 9003            >            bcc ccs22815
41d0 : e613            >            inc zpt+3       ;carry to high byte
41d2 : 18              >            clc
41d3 : e8              >ccs22815      inx
41d4 : d0f6            >            bne ccs32815
41d6 : a202            >            ldx #hi(data_segment) ;set high byte of indirect pointer
41d8 : 8611            >            stx zpt+1
41da : a00a            >            ldy #lo(data_bss) ;data after write test area
41dc : 7110            >ccs52815      adc (zpt),y
41de : 9003            >            bcc ccs42815
41e0 : e613            >            inc zpt+3       ;carry to high byte
41e2 : 18              >            clc
41e3 : c8              >ccs42815      iny
41e4 : d0f6            >            bne ccs52815
41e6 : e8              >            inx             ;advance RAM high address
41e7 : 8611            >            stx zpt+1
41e9 : e0e0            >            cpx #ram_top
41eb : d0ef            >            bne ccs52815
41ed : 8512            >            sta zpt+2       ;checksum low is
41ef : cd0302          >            cmp ram_chksm   ;checksum low expected
                       >            trap_ne         ;checksum mismatch
41f2 : f003            >        beq skip2816
                       >        trap            ;failed not equal (non zero)
41f4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
41f7 :                 >skip2816
                       >
41f7 : a513            >            lda zpt+3       ;checksum high is
41f9 : cd0402          >            cmp ram_chksm+1 ;checksum high expected
                       >            trap_ne         ;checksum mismatch
41fc : f003            >        beq skip2818
                       >        trap            ;failed not equal (non zero)
41fe : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4201 :                 >skip2818
                       >
                       >
                        
                                
                            if I_flag = 3
4201 : 58                       cli
                            endif                
                        
4202 : 8d04ef            sta $ef04
4205 : 66756c6c206269..  db "full binary add/subtract test - (zp) only", 10, 0
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
4230 : d8                       cld
4231 : a212                     ldx #ad2        ;for indexed test
4233 : a0ff                     ldy #$ff        ;max range
4235 : a900                     lda #0          ;start with adding zeroes & no carry
4237 : 8510                     sta adfc        ;carry in - for diag
4239 : 8511                     sta ad1         ;operand 1 - accumulator
423b : 8512                     sta ad2         ;operand 2 - memory or immediate
423d : 8d0502                   sta ada2        ;non zp
4240 : 8513                     sta adrl        ;expected result bits 0-7
4242 : 8514                     sta adrh        ;expected result bit 8 (carry out)
4244 : a9ff                     lda #$ff        ;complemented operand 2 for subtract
4246 : 8516                     sta sb2
4248 : 8d0602                   sta sba2        ;non zp
424b : a902                     lda #2          ;expected Z-flag
424d : 8515                     sta adrf
424f : 18               tadd    clc             ;test with carry clear
4250 : 202746                   jsr chkadd
4253 : e610                     inc adfc        ;now with carry
4255 : e613                     inc adrl        ;result +1
4257 : 08                       php             ;save N & Z from low result
4258 : 08                       php
4259 : 68                       pla             ;accu holds expected flags
425a : 2982                     and #$82        ;mask N & Z
425c : 28                       plp
425d : d002                     bne tadd1
425f : e614                     inc adrh        ;result bit 8 - carry
4261 : 0514             tadd1   ora adrh        ;merge C to expected flags
4263 : 8515                     sta adrf        ;save expected flags except overflow
4265 : 38                       sec             ;test with carry set
4266 : 202746                   jsr chkadd
4269 : c610                     dec adfc        ;same for operand +1 but no carry
426b : e611                     inc ad1
426d : d0e0                     bne tadd        ;iterate op1
426f : a900                     lda #0          ;preset result to op2 when op1 = 0
4271 : 8514                     sta adrh
4273 : ee0502                   inc ada2
4276 : e612                     inc ad2
4278 : 08                       php             ;save NZ as operand 2 becomes the new result
4279 : 68                       pla
427a : 2982                     and #$82        ;mask N00000Z0
427c : 8515                     sta adrf        ;no need to check carry as we are adding to 0
427e : c616                     dec sb2         ;complement subtract operand 2
4280 : ce0602                   dec sba2
4283 : a512                     lda ad2         
4285 : 8513                     sta adrl
4287 : d0c6                     bne tadd        ;iterate op2
                        
4289 : e012                     cpx #ad2
                                trap_ne         ;x altered during test
428b : f003            >        beq skip2820
                       >        trap            ;failed not equal (non zero)
428d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4290 :                 >skip2820
                        
4290 : c0ff                     cpy #$ff
                                trap_ne         ;y altered during test 
4292 : f003            >        beq skip2822
                       >        trap            ;failed not equal (non zero)
4294 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4297 :                 >skip2822
                        
4297 : ba                       tsx
4298 : e0ff                     cpx #$ff
                                trap_ne         ;sp push/pop mismatch
429a : f003            >        beq skip2824
                       >        trap            ;failed not equal (non zero)
429c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
429f :                 >skip2824
                        
                                next_test
429f : ad0202          >            lda test_case   ;previous test
42a2 : c914            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
42a4 : f003            >        beq skip2827
                       >        trap            ;failed not equal (non zero)
42a6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
42a9 :                 >skip2827
                       >
0015 =                 >test_num = test_num + 1
42a9 : a915            >            lda #test_num   ;*** next tests' number
42ab : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            check_ram       ;uncomment to find altered RAM after each test
42ae : d8              >            cld
42af : a900            >            lda #0
42b1 : 8510            >            sta zpt         ;set low byte of indirect pointer
42b3 : 8513            >            sta zpt+3       ;checksum high byte
42b5 : a20b            >            ldx #11         ;reset modifiable RAM
42b7 : 9df902          >ccs12829      sta jxi_tab,x   ;JMP indirect page cross area
42ba : ca              >            dex
42bb : 10fa            >            bpl ccs12829
42bd : 8dd144          >            sta chkdadi     ;self modifying code
42c0 : 8dee44          >            sta chkdsbi
42c3 : 18              >            clc
42c4 : a207            >            ldx #zp_bss-zero_page ;zeropage - write test area
42c6 : 7510            >ccs32829      adc zero_page,x
42c8 : 9003            >            bcc ccs22829
42ca : e613            >            inc zpt+3       ;carry to high byte
42cc : 18              >            clc
42cd : e8              >ccs22829      inx
42ce : d0f6            >            bne ccs32829
42d0 : a202            >            ldx #hi(data_segment) ;set high byte of indirect pointer
42d2 : 8611            >            stx zpt+1
42d4 : a00a            >            ldy #lo(data_bss) ;data after write test area
42d6 : 7110            >ccs52829      adc (zpt),y
42d8 : 9003            >            bcc ccs42829
42da : e613            >            inc zpt+3       ;carry to high byte
42dc : 18              >            clc
42dd : c8              >ccs42829      iny
42de : d0f6            >            bne ccs52829
42e0 : e8              >            inx             ;advance RAM high address
42e1 : 8611            >            stx zpt+1
42e3 : e0e0            >            cpx #ram_top
42e5 : d0ef            >            bne ccs52829
42e7 : 8512            >            sta zpt+2       ;checksum low is
42e9 : cd0302          >            cmp ram_chksm   ;checksum low expected
                       >            trap_ne         ;checksum mismatch
42ec : f003            >        beq skip2830
                       >        trap            ;failed not equal (non zero)
42ee : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
42f1 :                 >skip2830
                       >
42f1 : a513            >            lda zpt+3       ;checksum high is
42f3 : cd0402          >            cmp ram_chksm+1 ;checksum high expected
                       >            trap_ne         ;checksum mismatch
42f6 : f003            >        beq skip2832
                       >        trap            ;failed not equal (non zero)
42f8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
42fb :                 >skip2832
                       >
                       >
                        
                        
42fb : 8d04ef            sta $ef04
42fe : 646563696d616c..  db "decimal add/subtract test", 10, 0
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, the V flag is ignored
                        ;   although V is declared as beeing valid on the 65C02 it has absolutely
                        ;   no use in BCD math. No sign = no overflow!
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
4319 : f8                       sed 
431a : a212                     ldx #ad2        ;for indexed test
431c : a0ff                     ldy #$ff        ;max range
431e : a999                     lda #$99        ;start with adding 99 to 99 with carry
4320 : 8511                     sta ad1         ;operand 1 - accumulator
4322 : 8512                     sta ad2         ;operand 2 - memory or immediate
4324 : 8d0502                   sta ada2        ;non zp
4327 : 8513                     sta adrl        ;expected result bits 0-7
4329 : a901                     lda #1          ;set carry in & out
432b : 8510                     sta adfc        ;carry in - for diag
432d : 8514                     sta adrh        ;expected result bit 8 (carry out)
432f : a981                     lda #$81        ;set N & C (99 + 99 + C = 99 + C)
4331 : 8515                     sta adrf
4333 : a900                     lda #0          ;complemented operand 2 for subtract
4335 : 8516                     sta sb2
4337 : 8d0602                   sta sba2        ;non zp
433a : 38               tdad    sec             ;test with carry set
433b : 206644                   jsr chkdad
433e : c610                     dec adfc        ;now with carry clear
4340 : a513                     lda adrl        ;decimal adjust result
4342 : d008                     bne tdad1       ;skip clear carry & preset result 99 (9A-1)
4344 : c614                     dec adrh
4346 : a999                     lda #$99
4348 : 8513                     sta adrl
434a : d012                     bne tdad3
434c : 290f             tdad1   and #$f         ;lower nibble mask
434e : d00c                     bne tdad2       ;no decimal adjust needed
4350 : c613                     dec adrl        ;decimal adjust (?0-6)
4352 : c613                     dec adrl
4354 : c613                     dec adrl
4356 : c613                     dec adrl
4358 : c613                     dec adrl
435a : c613                     dec adrl
435c : c613             tdad2   dec adrl        ;result -1
435e : 08               tdad3   php             ;save valid flags
435f : 68                       pla
4360 : 2982                     and #$82        ;N-----Z-
4362 : 0514                     ora adrh        ;N-----ZC
4364 : 8515                     sta adrf
4366 : 18                       clc             ;test with carry clear
4367 : 206644                   jsr chkdad
436a : e610                     inc adfc        ;same for operand -1 but with carry
436c : a511                     lda ad1         ;decimal adjust operand 1
436e : f015                     beq tdad5       ;iterate operand 2
4370 : 290f                     and #$f         ;lower nibble mask
4372 : d00c                     bne tdad4       ;skip decimal adjust
4374 : c611                     dec ad1         ;decimal adjust (?0-6)
4376 : c611                     dec ad1
4378 : c611                     dec ad1
437a : c611                     dec ad1
437c : c611                     dec ad1
437e : c611                     dec ad1
4380 : c611             tdad4   dec ad1         ;operand 1 -1
4382 : 4c3a43                   jmp tdad        ;iterate op1
                        
4385 : a999             tdad5   lda #$99        ;precharge op1 max
4387 : 8511                     sta ad1
4389 : a512                     lda ad2         ;decimal adjust operand 2
438b : f039                     beq tdad7       ;end of iteration
438d : 290f                     and #$f         ;lower nibble mask
438f : d018                     bne tdad6       ;skip decimal adjust
4391 : c612                     dec ad2         ;decimal adjust (?0-6)
4393 : c612                     dec ad2
4395 : c612                     dec ad2
4397 : c612                     dec ad2
4399 : c612                     dec ad2
439b : c612                     dec ad2
439d : e616                     inc sb2         ;complemented decimal adjust for subtract (?9+6)
439f : e616                     inc sb2
43a1 : e616                     inc sb2
43a3 : e616                     inc sb2
43a5 : e616                     inc sb2
43a7 : e616                     inc sb2
43a9 : c612             tdad6   dec ad2         ;operand 2 -1
43ab : e616                     inc sb2         ;complemented operand for subtract
43ad : a516                     lda sb2
43af : 8d0602                   sta sba2        ;copy as non zp operand
43b2 : a512                     lda ad2
43b4 : 8d0502                   sta ada2        ;copy as non zp operand
43b7 : 8513                     sta adrl        ;new result since op1+carry=00+carry +op2=op2
43b9 : 08                       php             ;save flags
43ba : 68                       pla
43bb : 2982                     and #$82        ;N-----Z-
43bd : 0901                     ora #1          ;N-----ZC
43bf : 8515                     sta adrf
43c1 : e614                     inc adrh        ;result carry
43c3 : 4c3a43                   jmp tdad        ;iterate op2
                        
43c6 : e012             tdad7   cpx #ad2
                                trap_ne         ;x altered during test
43c8 : f003            >        beq skip2834
                       >        trap            ;failed not equal (non zero)
43ca : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
43cd :                 >skip2834
                        
43cd : c0ff                     cpy #$ff
                                trap_ne         ;y altered during test 
43cf : f003            >        beq skip2836
                       >        trap            ;failed not equal (non zero)
43d1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
43d4 :                 >skip2836
                        
43d4 : ba                       tsx
43d5 : e0ff                     cpx #$ff
                                trap_ne         ;sp push/pop mismatch
43d7 : f003            >        beq skip2838
                       >        trap            ;failed not equal (non zero)
43d9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
43dc :                 >skip2838
                        
43dc : d8                       cld
                        
43dd : ad0202                   lda test_case
43e0 : c915                     cmp #test_num
                                trap_ne         ;previous test is out of sequence
43e2 : f003            >        beq skip2840
                       >        trap            ;failed not equal (non zero)
43e4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
43e7 :                 >skip2840
                        
43e7 : a9f0                     lda #$f0        ;mark opcode testing complete
43e9 : 8d0202                   sta test_case
                        
43ec : 8d04ef            sta $ef04
43ef : 66696e616c2052..  db "final RAM integrity test", 10, 0
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                                check_ram
4409 : d8              >            cld
440a : a900            >            lda #0
440c : 8510            >            sta zpt         ;set low byte of indirect pointer
440e : 8513            >            sta zpt+3       ;checksum high byte
4410 : a20b            >            ldx #11         ;reset modifiable RAM
4412 : 9df902          >ccs12842      sta jxi_tab,x   ;JMP indirect page cross area
4415 : ca              >            dex
4416 : 10fa            >            bpl ccs12842
4418 : 8dd144          >            sta chkdadi     ;self modifying code
441b : 8dee44          >            sta chkdsbi
441e : 18              >            clc
441f : a207            >            ldx #zp_bss-zero_page ;zeropage - write test area
4421 : 7510            >ccs32842      adc zero_page,x
4423 : 9003            >            bcc ccs22842
4425 : e613            >            inc zpt+3       ;carry to high byte
4427 : 18              >            clc
4428 : e8              >ccs22842      inx
4429 : d0f6            >            bne ccs32842
442b : a202            >            ldx #hi(data_segment) ;set high byte of indirect pointer
442d : 8611            >            stx zpt+1
442f : a00a            >            ldy #lo(data_bss) ;data after write test area
4431 : 7110            >ccs52842      adc (zpt),y
4433 : 9003            >            bcc ccs42842
4435 : e613            >            inc zpt+3       ;carry to high byte
4437 : 18              >            clc
4438 : c8              >ccs42842      iny
4439 : d0f6            >            bne ccs52842
443b : e8              >            inx             ;advance RAM high address
443c : 8611            >            stx zpt+1
443e : e0e0            >            cpx #ram_top
4440 : d0ef            >            bne ccs52842
4442 : 8512            >            sta zpt+2       ;checksum low is
4444 : cd0302          >            cmp ram_chksm   ;checksum low expected
                       >            trap_ne         ;checksum mismatch
4447 : f003            >        beq skip2843
                       >        trap            ;failed not equal (non zero)
4449 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
444c :                 >skip2843
                       >
444c : a513            >            lda zpt+3       ;checksum high is
444e : cd0402          >            cmp ram_chksm+1 ;checksum high expected
                       >            trap_ne         ;checksum mismatch
4451 : f003            >        beq skip2845
                       >        trap            ;failed not equal (non zero)
4453 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4456 :                 >skip2845
                       >
                        
                        ; *** DEBUG INFO ***
                        ; to debug checksum errors uncomment check_ram in the next_test macro to 
                        ; narrow down the responsible opcode.
                        ; may give false errors when monitor, OS or other background activity is
                        ; allowed during previous tests.
                        
                        
                        ; S U C C E S S ************************************************       
                        ; -------------       
                                success         ;if you get here everything went well
4456 : 8d04ef          > sta $ef04
4459 : 73756363657373..> db "success", 10, 0
4462 : db              >        db $db
                       >        ;jsr report_success
                        
                        ; -------------       
                        ; S U C C E S S ************************************************       
4463 : 4c0410                   jmp start       ;run again      
                        
                        ; core subroutine of the decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, V flag is ignored
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
4466 :                  chkdad
                        ; decimal ADC / SBC zp
4466 : 08                       php             ;save carry for subtract
4467 : a511                     lda ad1
4469 : 6512                     adc ad2         ;perform add
446b : 08                       php          
446c : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
446e : f003            >        beq skip2848
                       >        trap            ;failed not equal (non zero)
4470 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4473 :                 >skip2848
                        
4473 : 68                       pla             ;check flags
4474 : 2983                     and #$83        ;mask N-----ZC
4476 : c515                     cmp adrf
                                trap_ne         ;bad flags
4478 : f003            >        beq skip2850
                       >        trap            ;failed not equal (non zero)
447a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
447d :                 >skip2850
                        
447d : 28                       plp
447e : 08                       php             ;save carry for next add
447f : a511                     lda ad1
4481 : e516                     sbc sb2         ;perform subtract
4483 : 08                       php          
4484 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
4486 : f003            >        beq skip2852
                       >        trap            ;failed not equal (non zero)
4488 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
448b :                 >skip2852
                        
448b : 68                       pla             ;check flags
448c : 2983                     and #$83        ;mask N-----ZC
448e : c515                     cmp adrf
                                trap_ne         ;bad flags
4490 : f003            >        beq skip2854
                       >        trap            ;failed not equal (non zero)
4492 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4495 :                 >skip2854
                        
4495 : 28                       plp
                        ; decimal ADC / SBC abs
4496 : 08                       php             ;save carry for subtract
4497 : a511                     lda ad1
4499 : 6d0502                   adc ada2        ;perform add
449c : 08                       php          
449d : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
449f : f003            >        beq skip2856
                       >        trap            ;failed not equal (non zero)
44a1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
44a4 :                 >skip2856
                        
44a4 : 68                       pla             ;check flags
44a5 : 2983                     and #$83        ;mask N-----ZC
44a7 : c515                     cmp adrf
                                trap_ne         ;bad flags
44a9 : f003            >        beq skip2858
                       >        trap            ;failed not equal (non zero)
44ab : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
44ae :                 >skip2858
                        
44ae : 28                       plp
44af : 08                       php             ;save carry for next add
44b0 : a511                     lda ad1
44b2 : ed0602                   sbc sba2        ;perform subtract
44b5 : 08                       php          
44b6 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
44b8 : f003            >        beq skip2860
                       >        trap            ;failed not equal (non zero)
44ba : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
44bd :                 >skip2860
                        
44bd : 68                       pla             ;check flags
44be : 2983                     and #$83        ;mask N-----ZC
44c0 : c515                     cmp adrf
                                trap_ne         ;bad flags
44c2 : f003            >        beq skip2862
                       >        trap            ;failed not equal (non zero)
44c4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
44c7 :                 >skip2862
                        
44c7 : 28                       plp
                        ; decimal ADC / SBC #
44c8 : 08                       php             ;save carry for subtract
44c9 : a512                     lda ad2
44cb : 8dd144                   sta chkdadi     ;self modify immediate
44ce : a511                     lda ad1
44d1 =                  chkdadi = * + 1         ;operand of the immediate ADC
44d0 : 6900                     adc #0          ;perform add
44d2 : 08                       php          
44d3 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
44d5 : f003            >        beq skip2864
                       >        trap            ;failed not equal (non zero)
44d7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
44da :                 >skip2864
                        
44da : 68                       pla             ;check flags
44db : 2983                     and #$83        ;mask N-----ZC
44dd : c515                     cmp adrf
                                trap_ne         ;bad flags
44df : f003            >        beq skip2866
                       >        trap            ;failed not equal (non zero)
44e1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
44e4 :                 >skip2866
                        
44e4 : 28                       plp
44e5 : 08                       php             ;save carry for next add
44e6 : a516                     lda sb2
44e8 : 8dee44                   sta chkdsbi     ;self modify immediate
44eb : a511                     lda ad1
44ee =                  chkdsbi = * + 1         ;operand of the immediate SBC
44ed : e900                     sbc #0          ;perform subtract
44ef : 08                       php          
44f0 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
44f2 : f003            >        beq skip2868
                       >        trap            ;failed not equal (non zero)
44f4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
44f7 :                 >skip2868
                        
44f7 : 68                       pla             ;check flags
44f8 : 2983                     and #$83        ;mask N-----ZC
44fa : c515                     cmp adrf
                                trap_ne         ;bad flags
44fc : f003            >        beq skip2870
                       >        trap            ;failed not equal (non zero)
44fe : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4501 :                 >skip2870
                        
4501 : 28                       plp
                        ; decimal ADC / SBC zp,x
4502 : 08                       php             ;save carry for subtract
4503 : a511                     lda ad1
4505 : 7500                     adc 0,x         ;perform add
4507 : 08                       php          
4508 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
450a : f003            >        beq skip2872
                       >        trap            ;failed not equal (non zero)
450c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
450f :                 >skip2872
                        
450f : 68                       pla             ;check flags
4510 : 2983                     and #$83        ;mask N-----ZC
4512 : c515                     cmp adrf
                                trap_ne         ;bad flags
4514 : f003            >        beq skip2874
                       >        trap            ;failed not equal (non zero)
4516 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4519 :                 >skip2874
                        
4519 : 28                       plp
451a : 08                       php             ;save carry for next add
451b : a511                     lda ad1
451d : f504                     sbc sb2-ad2,x   ;perform subtract
451f : 08                       php          
4520 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
4522 : f003            >        beq skip2876
                       >        trap            ;failed not equal (non zero)
4524 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4527 :                 >skip2876
                        
4527 : 68                       pla             ;check flags
4528 : 2983                     and #$83        ;mask N-----ZC
452a : c515                     cmp adrf
                                trap_ne         ;bad flags
452c : f003            >        beq skip2878
                       >        trap            ;failed not equal (non zero)
452e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4531 :                 >skip2878
                        
4531 : 28                       plp
                        ; decimal ADC / SBC abs,x
4532 : 08                       php             ;save carry for subtract
4533 : a511                     lda ad1
4535 : 7df301                   adc ada2-ad2,x  ;perform add
4538 : 08                       php          
4539 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
453b : f003            >        beq skip2880
                       >        trap            ;failed not equal (non zero)
453d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4540 :                 >skip2880
                        
4540 : 68                       pla             ;check flags
4541 : 2983                     and #$83        ;mask N-----ZC
4543 : c515                     cmp adrf
                                trap_ne         ;bad flags
4545 : f003            >        beq skip2882
                       >        trap            ;failed not equal (non zero)
4547 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
454a :                 >skip2882
                        
454a : 28                       plp
454b : 08                       php             ;save carry for next add
454c : a511                     lda ad1
454e : fdf401                   sbc sba2-ad2,x  ;perform subtract
4551 : 08                       php          
4552 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
4554 : f003            >        beq skip2884
                       >        trap            ;failed not equal (non zero)
4556 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4559 :                 >skip2884
                        
4559 : 68                       pla             ;check flags
455a : 2983                     and #$83        ;mask N-----ZC
455c : c515                     cmp adrf
                                trap_ne         ;bad flags
455e : f003            >        beq skip2886
                       >        trap            ;failed not equal (non zero)
4560 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4563 :                 >skip2886
                        
4563 : 28                       plp
                        ; decimal ADC / SBC abs,y
4564 : 08                       php             ;save carry for subtract
4565 : a511                     lda ad1
4567 : 790601                   adc ada2-$ff,y  ;perform add
456a : 08                       php          
456b : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
456d : f003            >        beq skip2888
                       >        trap            ;failed not equal (non zero)
456f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4572 :                 >skip2888
                        
4572 : 68                       pla             ;check flags
4573 : 2983                     and #$83        ;mask N-----ZC
4575 : c515                     cmp adrf
                                trap_ne         ;bad flags
4577 : f003            >        beq skip2890
                       >        trap            ;failed not equal (non zero)
4579 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
457c :                 >skip2890
                        
457c : 28                       plp
457d : 08                       php             ;save carry for next add
457e : a511                     lda ad1
4580 : f90701                   sbc sba2-$ff,y  ;perform subtract
4583 : 08                       php          
4584 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
4586 : f003            >        beq skip2892
                       >        trap            ;failed not equal (non zero)
4588 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
458b :                 >skip2892
                        
458b : 68                       pla             ;check flags
458c : 2983                     and #$83        ;mask N-----ZC
458e : c515                     cmp adrf
                                trap_ne         ;bad flags
4590 : f003            >        beq skip2894
                       >        trap            ;failed not equal (non zero)
4592 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4595 :                 >skip2894
                        
4595 : 28                       plp
                        ; decimal ADC / SBC (zp,x)
4596 : 08                       php             ;save carry for subtract
4597 : a511                     lda ad1
4599 : 6144                     adc (lo adi2-ad2,x) ;perform add
459b : 08                       php          
459c : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
459e : f003            >        beq skip2896
                       >        trap            ;failed not equal (non zero)
45a0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
45a3 :                 >skip2896
                        
45a3 : 68                       pla             ;check flags
45a4 : 2983                     and #$83        ;mask N-----ZC
45a6 : c515                     cmp adrf
                                trap_ne         ;bad flags
45a8 : f003            >        beq skip2898
                       >        trap            ;failed not equal (non zero)
45aa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
45ad :                 >skip2898
                        
45ad : 28                       plp
45ae : 08                       php             ;save carry for next add
45af : a511                     lda ad1
45b1 : e146                     sbc (lo sbi2-ad2,x) ;perform subtract
45b3 : 08                       php          
45b4 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
45b6 : f003            >        beq skip2900
                       >        trap            ;failed not equal (non zero)
45b8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
45bb :                 >skip2900
                        
45bb : 68                       pla             ;check flags
45bc : 2983                     and #$83        ;mask N-----ZC
45be : c515                     cmp adrf
                                trap_ne         ;bad flags
45c0 : f003            >        beq skip2902
                       >        trap            ;failed not equal (non zero)
45c2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
45c5 :                 >skip2902
                        
45c5 : 28                       plp
                        ; decimal ADC / SBC (abs),y
45c6 : 08                       php             ;save carry for subtract
45c7 : a511                     lda ad1
45c9 : 715a                     adc (adiy2),y   ;perform add
45cb : 08                       php          
45cc : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
45ce : f003            >        beq skip2904
                       >        trap            ;failed not equal (non zero)
45d0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
45d3 :                 >skip2904
                        
45d3 : 68                       pla             ;check flags
45d4 : 2983                     and #$83        ;mask N-----ZC
45d6 : c515                     cmp adrf
                                trap_ne         ;bad flags
45d8 : f003            >        beq skip2906
                       >        trap            ;failed not equal (non zero)
45da : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
45dd :                 >skip2906
                        
45dd : 28                       plp
45de : 08                       php             ;save carry for next add
45df : a511                     lda ad1
45e1 : f15c                     sbc (sbiy2),y   ;perform subtract
45e3 : 08                       php          
45e4 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
45e6 : f003            >        beq skip2908
                       >        trap            ;failed not equal (non zero)
45e8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
45eb :                 >skip2908
                        
45eb : 68                       pla             ;check flags
45ec : 2983                     and #$83        ;mask N-----ZC
45ee : c515                     cmp adrf
                                trap_ne         ;bad flags
45f0 : f003            >        beq skip2910
                       >        trap            ;failed not equal (non zero)
45f2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
45f5 :                 >skip2910
                        
45f5 : 28                       plp
                        ; decimal ADC / SBC (zp)
45f6 : 08                       php             ;save carry for subtract
45f7 : a511                     lda ad1
45f9 : 7256                     adc (adi2)      ;perform add
45fb : 08                       php          
45fc : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
45fe : f003            >        beq skip2912
                       >        trap            ;failed not equal (non zero)
4600 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4603 :                 >skip2912
                        
4603 : 68                       pla             ;check flags
4604 : 2983                     and #$83        ;mask N-----ZC
4606 : c515                     cmp adrf
                                trap_ne         ;bad flags
4608 : f003            >        beq skip2914
                       >        trap            ;failed not equal (non zero)
460a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
460d :                 >skip2914
                        
460d : 28                       plp
460e : 08                       php             ;save carry for next add
460f : a511                     lda ad1
4611 : f258                     sbc (sbi2)      ;perform subtract
4613 : 08                       php          
4614 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
4616 : f003            >        beq skip2916
                       >        trap            ;failed not equal (non zero)
4618 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
461b :                 >skip2916
                        
461b : 68                       pla             ;check flags
461c : 2983                     and #$83        ;mask N-----ZC
461e : c515                     cmp adrf
                                trap_ne         ;bad flags
4620 : f003            >        beq skip2918
                       >        trap            ;failed not equal (non zero)
4622 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4625 :                 >skip2918
                        
4625 : 28                       plp
4626 : 60                       rts
                        
                        ; core subroutine of the full binary add/subtract test
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
4627 : a515             chkadd  lda adrf        ;add V-flag if overflow
4629 : 2983                     and #$83        ;keep N-----ZC / clear V
462b : 48                       pha
462c : a511                     lda ad1         ;test sign unequal between operands
462e : 4512                     eor ad2
4630 : 300a                     bmi ckad1       ;no overflow possible - operands have different sign
4632 : a511                     lda ad1         ;test sign equal between operands and result
4634 : 4513                     eor adrl
4636 : 1004                     bpl ckad1       ;no overflow occured - operand and result have same sign
4638 : 68                       pla
4639 : 0940                     ora #$40        ;set V
463b : 48                       pha
463c : 68               ckad1   pla
463d : 8515                     sta adrf        ;save expected flags
                        ; binary ADC / SBC (zp)
463f : 08                       php             ;save carry for subtract
4640 : a511                     lda ad1
4642 : 7256                     adc (adi2)      ;perform add
4644 : 08                       php          
4645 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
4647 : f003            >        beq skip2920
                       >        trap            ;failed not equal (non zero)
4649 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
464c :                 >skip2920
                        
464c : 68                       pla             ;check flags
464d : 29c3                     and #$c3        ;mask NV----ZC
464f : c515                     cmp adrf
                                trap_ne         ;bad flags
4651 : f003            >        beq skip2922
                       >        trap            ;failed not equal (non zero)
4653 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4656 :                 >skip2922
                        
4656 : 28                       plp
4657 : 08                       php             ;save carry for next add
4658 : a511                     lda ad1
465a : f258                     sbc (sbi2)      ;perform subtract
465c : 08                       php          
465d : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
465f : f003            >        beq skip2924
                       >        trap            ;failed not equal (non zero)
4661 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4664 :                 >skip2924
                        
4664 : 68                       pla             ;check flags
4665 : 29c3                     and #$c3        ;mask NV----ZC
4667 : c515                     cmp adrf
                                trap_ne         ;bad flags
4669 : f003            >        beq skip2926
                       >        trap            ;failed not equal (non zero)
466b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
466e :                 >skip2926
                        
466e : 28                       plp
466f : 60                       rts
                                
                        ; target for the jump indirect test
4670 : 7646             ji_adr  dw test_ji
4672 : 972c                     dw ji_ret
                        
4674 : 88                       dey
4675 : 88                       dey
4676 :                  test_ji
4676 : 08                       php             ;either SP or Y count will fail, if we do not hit
4677 : 88                       dey
4678 : 88                       dey
4679 : 88                       dey
467a : 28                       plp
                                trap_cs         ;flags loaded?
467b : 9003            >        bcc skip2928
                       >        trap            ;failed carry set
467d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4680 :                 >skip2928
                        
                                trap_vs
4680 : 5003            >        bvc skip2930
                       >        trap            ;failed overflow set
4682 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4685 :                 >skip2930
                        
                                trap_mi
4685 : 1003            >        bpl skip2932
                       >        trap            ;failed minus (bit 7 set)
4687 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
468a :                 >skip2932
                        
                                trap_eq 
468a : d003            >        bne skip2934
                       >        trap           ;failed equal (zero)
468c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
468f :                 >skip2934
                        
468f : c949                     cmp #'I'        ;registers loaded?
                                trap_ne
4691 : f003            >        beq skip2936
                       >        trap            ;failed not equal (non zero)
4693 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4696 :                 >skip2936
                        
4696 : e04e                     cpx #'N'
                                trap_ne        
4698 : f003            >        beq skip2938
                       >        trap            ;failed not equal (non zero)
469a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
469d :                 >skip2938
                        
469d : c041                     cpy #('D'-3)
                                trap_ne
469f : f003            >        beq skip2940
                       >        trap            ;failed not equal (non zero)
46a1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
46a4 :                 >skip2940
                        
46a4 : 48                       pha             ;save a,x
46a5 : 8a                       txa
46a6 : 48                       pha
46a7 : ba                       tsx
46a8 : e0fd                     cpx #$fd        ;check SP
                                trap_ne
46aa : f003            >        beq skip2942
                       >        trap            ;failed not equal (non zero)
46ac : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
46af :                 >skip2942
                        
46af : 68                       pla             ;restore x
46b0 : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
46b1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
46b3 : 48              >            pha         ;use stack to load status
46b4 : 28              >            plp
                        
46b5 : 68                       pla             ;restore a
46b6 : e8                       inx             ;return registers with modifications
46b7 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
46b9 : 6cff02                   jmp (ji_tab+2)
46bc : ea                       nop
46bd : ea                       nop
                                trap            ;runover protection
46be : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
                        
                        ; target for the jump indirect test
46c1 : 1d47             jxi_adr dw  trap_ind
46c3 : 1d47                     dw  trap_ind
46c5 : cf46                     dw  test_jxi    ;+4
46c7 : 682d                     dw  jxi_ret     ;+6
46c9 : 1d47                     dw  trap_ind
46cb : 1d47                     dw  trap_ind
                        
46cd : 88                       dey
46ce : 88                       dey
46cf :                  test_jxi
46cf : 08                       php             ;either SP or Y count will fail, if we do not hit
46d0 : 88                       dey
46d1 : 88                       dey
46d2 : 88                       dey
46d3 : 28                       plp
                                trap_cs         ;flags loaded?
46d4 : 9003            >        bcc skip2947
                       >        trap            ;failed carry set
46d6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
46d9 :                 >skip2947
                        
                                trap_vs
46d9 : 5003            >        bvc skip2949
                       >        trap            ;failed overflow set
46db : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
46de :                 >skip2949
                        
                                trap_mi
46de : 1003            >        bpl skip2951
                       >        trap            ;failed minus (bit 7 set)
46e0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
46e3 :                 >skip2951
                        
                                trap_eq 
46e3 : d003            >        bne skip2953
                       >        trap           ;failed equal (zero)
46e5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
46e8 :                 >skip2953
                        
46e8 : c958                     cmp #'X'        ;registers loaded?
                                trap_ne
46ea : f003            >        beq skip2955
                       >        trap            ;failed not equal (non zero)
46ec : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
46ef :                 >skip2955
                        
46ef : e004                     cpx #4
                                trap_ne        
46f1 : f003            >        beq skip2957
                       >        trap            ;failed not equal (non zero)
46f3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
46f6 :                 >skip2957
                        
46f6 : c046                     cpy #('I'-3)
                                trap_ne
46f8 : f003            >        beq skip2959
                       >        trap            ;failed not equal (non zero)
46fa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
46fd :                 >skip2959
                        
46fd : 48                       pha             ;save a,x
46fe : 8a                       txa
46ff : 48                       pha
4700 : ba                       tsx
4701 : e0fd                     cpx #$fd        ;check SP
                                trap_ne
4703 : f003            >        beq skip2961
                       >        trap            ;failed not equal (non zero)
4705 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4708 :                 >skip2961
                        
4708 : 68                       pla             ;restore x
4709 : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
470a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
470c : 48              >            pha         ;use stack to load status
470d : 28              >            plp
                        
470e : 68                       pla             ;restore a
470f : e8                       inx             ;return registers with modifications
4710 : e8                       inx
4711 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
4713 : 7cf902                   jmp (jxi_tab,x)
4716 : ea                       nop
4717 : ea                       nop
                                trap            ;runover protection
4718 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
                        
                        ; JMP (abs,x) with bad x
471b : ea                       nop
471c : ea                       nop
471d :                  trap_ind
471d : ea                       nop
471e : ea                       nop
                                trap            ;near miss indexed indirect jump
471f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
                        
                        ;trap in case of unexpected IRQ, NMI, BRK, RESET
4722 :                  nmi_trap
                                trap            ;check stack for conditions at NMI
4722 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
4725 :                  res_trap
                                trap            ;unexpected RESET
4725 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
4728 :                  irq_trap
4728 : 08                       php             ;save decimal flag
4729 : ba                       tsx             ;test break on stack
472a : bd0201                   lda $102,x
472d : 2910                     and #break
                                trap_eq         ;check stack for conditions at IRQ
472f : d003            >        bne skip2969
                       >        trap           ;failed equal (zero)
4731 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4734 :                 >skip2969
                        
                            if ROM_vectors = 1
4734 : 68                       pla             ;test decimal mode cleared
4735 : 2908                     and #decmode
                                trap_ne         ;decimal mode not cleared after BRK
4737 : f003            >        beq skip2971
                       >        trap            ;failed not equal (non zero)
4739 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
473c :                 >skip2971
                        
473c : 28                       plp             ;pop saved flags
473d : 68                       pla             ;return address low
473e : c93a                     cmp #lo(brk_ret)
                                trap_ne         ;unexpected BRK
4740 : f003            >        beq skip2973
                       >        trap            ;failed not equal (non zero)
4742 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
4745 :                 >skip2973
                        
4745 : 68                       pla             ;return address high
4746 : c92e                     cmp #hi(brk_ret)
                                trap_ne         ;unexpected BRK
4748 : f003            >        beq skip2975
                       >        trap            ;failed not equal (non zero)
474a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
474d :                 >skip2975
                        
474d : 4c3a2e                   jmp brk_ret
                            else
                                trap_ne         ;check stack for conditions at BRK
                            endif
                                
                            if report = 1
                                include "report.i65"
                        ;**** report 6502 funtional test errors to standard I/O ****
                        ;
                        ;this include file is part of the 6502 functional tests
                        ;it is used when you configure report = 1 in the tests
                        ;
                        ;to adopt the standard output vectors of your test environment
                        ;you must modify the rchar and rget subroutines in this include
                        ;
                        ;I/O hardware may have to be initialized in report_init
                        
                        ;print message macro - \1 = message location
                        rprt    macro
                                ldx #0
                                lda \1
                        loop\?
                                jsr rchar
                                inx
                                lda \1,x
                                bne loop\?
                                endm
                        
                        ;initialize I/O as required (example: configure & enable ACIA)
4750 :                  report_init
                                ;nothing to initialize
                                rprt rmsg_start
4750 : a200            >        ldx #0
4752 : ad2648          >        lda rmsg_start
4755 :                 >loop2977
4755 : 202248          >        jsr rchar
4758 : e8              >        inx
4759 : bd2648          >        lda rmsg_start,x
475c : d0f7            >        bne loop2977
                        
475e : 60                       rts
                                
                        ;show stack (with saved registers), zeropage and absolute memory workspace
                        ;after an error was trapped in the test program
475f :                  report_error
                        ;save registers
475f : 08                       php
4760 : 48                       pha
4761 : 8a                       txa
4762 : 48                       pha
4763 : 98                       tya
4764 : 48                       pha
4765 : d8                       cld
                        ;show stack with index to registers at error
                                rprt rmsg_stack
4766 : a200            >        ldx #0
4768 : ad3a48          >        lda rmsg_stack
476b :                 >loop2978
476b : 202248          >        jsr rchar
476e : e8              >        inx
476f : bd3a48          >        lda rmsg_stack,x
4772 : d0f7            >        bne loop2978
                        
4774 : ba                       tsx
4775 : e8                       inx
4776 : a901                     lda #1      ;address high
4778 : 200e48                   jsr rhex
477b : 8a                       txa         ;address low
477c : 200e48                   jsr rhex
477f : 200a48           rstack  jsr rspace
4782 : bd0001                   lda $100,x  ;stack data
4785 : 200e48                   jsr rhex
4788 : e8                       inx
4789 : d0f4                     bne rstack
478b : 200148                   jsr rcrlf   ;new line
                        ;show zero page workspace
478e : a900                     lda #0
4790 : 200e48                   jsr rhex
4793 : a910                     lda #zpt
4795 : aa                       tax
4796 : 200e48                   jsr rhex
4799 : 200a48           rzp     jsr rspace
479c : b500                     lda 0,x
479e : 200e48                   jsr rhex
47a1 : e8                       inx
47a2 : e017                     cpx #zp_bss
47a4 : d0f3                     bne rzp
47a6 : 200148                   jsr rcrlf
                        ;show absolute workspace
47a9 : a902                     lda #hi(data_segment)
47ab : 200e48                   jsr rhex
47ae : a900                     lda #lo(data_segment)
47b0 : 200e48                   jsr rhex
47b3 : a200                     ldx #0
47b5 : 200a48           rabs    jsr rspace
47b8 : bd0002                   lda data_segment,x
47bb : 200e48                   jsr rhex
47be : e8                       inx
47bf : e00a                     cpx #(data_bss-data_segment)
47c1 : d0f2                     bne rabs
                        ;ask to continue
                                rprt rmsg_cont
47c3 : a200            >        ldx #0
47c5 : ad5648          >        lda rmsg_cont
47c8 :                 >loop2979
47c8 : 202248          >        jsr rchar
47cb : e8              >        inx
47cc : bd5648          >        lda rmsg_cont,x
47cf : d0f7            >        bne loop2979
                        
47d1 : 20f547           rerr1   jsr rget
47d4 : c943                     cmp #'C'
47d6 : d0f9                     bne rerr1        
                        ;restore registers
47d8 : 68                       pla
47d9 : a8                       tay
47da : 68                       pla
47db : aa                       tax
47dc : 68                       pla 
47dd : 28                       plp
47de : 60                       rts   
                        
                        ;show test has ended, ask to repeat
47df :                  report_success
                            if rep_int = 1
                                rprt rmsg_priority
                                lda data_segment    ;show interrupt sequence
                                jsr rhex
                                jsr rspace
                                lda data_segment+1
                                jsr rhex
                                jsr rspace
                                lda data_segment+2
                                jsr rhex
                            endif
                                rprt rmsg_success
47df : a200            >        ldx #0
47e1 : ad6e48          >        lda rmsg_success
47e4 :                 >loop2980
47e4 : 202248          >        jsr rchar
47e7 : e8              >        inx
47e8 : bd6e48          >        lda rmsg_success,x
47eb : d0f7            >        bne loop2980
                        
47ed : 20f547           rsuc1   jsr rget
47f0 : c952                     cmp #'R'
47f2 : d0f9                     bne rsuc1        
47f4 : 60                       rts
                        
                        ;input subroutine
                        ;get a character from standard input 
                        ;adjust according to the needs in your test environment
47f5 :                  rget                ;get character in A
                        ;rget1
                        ;        lda $bff1   ;wait RDRF
                        ;        and #8
                        ;        beq rget1
                        ;not a real ACIA - so RDRF is not checked
47f5 : adf0bf                   lda $bff0   ;read acia rx reg
                        ;the load can be replaced by a call to a kernal routine
                        ;        jsr $ffcf   ;example: CHRIN for a C64
47f8 : c961                     cmp #'a'    ;lower case
47fa : 9002                     bcc rget1
47fc : 295f                     and #$5f    ;convert to upper case
47fe : a943             rget1   lda #'C'
4800 : 60               		rts
                        
                        ;output subroutines
4801 : a90a             rcrlf   lda #10
4803 : 202248                   jsr rchar
4806 : a90d                     lda #13
4808 : d018                     bne rchar
                        
480a : a920             rspace  lda #' '
480c : d014                     bne rchar
                                
480e : 48               rhex    pha         ;report hex byte in A
480f : 4a                       lsr a       ;high nibble first
4810 : 4a                       lsr a
4811 : 4a                       lsr a
4812 : 4a                       lsr a
4813 : 201948                   jsr rnib
4816 : 68                       pla         ;now low nibble
4817 : 290f                     and #$f
                        
4819 : 18               rnib    clc         ;report nibble in A
481a : 6930                     adc #'0'    ;make printable 0-9
481c : c93a                     cmp #'9'+1
481e : 9002                     bcc rchar
4820 : 6906                     adc #6      ;make printable A-F
                        
                        ;send a character to standard output 
                        ;adjust according to the needs in your test environment
                        ;register X needs to be preserved!
4822 :                  rchar               ;report character in A
                        ;        pha         ;wait TDRF
                        ;rchar1  lda $bff1
                        ;        and #$10
                        ;        beq rchar1
                        ;        pla
                        ;not a real ACIA - so TDRF is not checked
4822 : 8d00ef                   sta $ef00   ;write acia tx reg
                        ;the store can be replaced by a call to a kernal routine
                        ;        jsr $ffd2   ;example: CHROUT for a C64
4825 : 60                       rts
                        
4826 :                  rmsg_start
4826 : 0a0d5374617274..         db  10,13,"Started testing",10,13,0
483a :                  rmsg_stack
483a : 0a0d7265677320..         db  10,13,"regs Y  X  A  PS PCLPCH",10,13,0
4856 :                  rmsg_cont
4856 : 0a0d7072657373..         db  10,13,"press C to continue",10,13,0
486e :                  rmsg_success
486e : 0a0d416c6c2074..         db  10,13,"All tests completed, press R to repeat",10,13,0
                            if rep_int = 1
                        rmsg_priority
                                db  10,13,"interrupt sequence (NMI IRQ BRK) ",0
                            endif
                           
                            endif
                                    
                        ;copy of data to initialize BSS segment
                            if load_data_direct != 1
4899 :                  zp_init
4899 : c3824100         zp1_    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
489d : 7f               zp7f_   db  $7f             ;test pattern for compare  
                        ;logical zeropage operands
489e : 001f7180         zpOR_   db  0,$1f,$71,$80   ;test pattern for OR
48a2 : 0fff7f80         zpAN_   db  $0f,$ff,$7f,$80 ;test pattern for AND
48a6 : ff0f8f8f         zpEO_   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
48aa : 0a02             ind1_   dw  abs1            ;indirect pointer to pattern in absolute memory
48ac : 0b02                     dw  abs1+1
48ae : 0c02                     dw  abs1+2
48b0 : 0d02                     dw  abs1+3
48b2 : 0e02                     dw  abs7f
48b4 : 1201             inw1_   dw  abs1-$f8        ;indirect pointer for wrap-test pattern
48b6 : 0502             indt_   dw  abst            ;indirect pointer to store area in absolute memory
48b8 : 0602                     dw  abst+1
48ba : 0702                     dw  abst+2
48bc : 0802                     dw  abst+3
48be : 0d01             inwt_   dw  abst-$f8        ;indirect pointer for wrap-test store
48c0 : 4102             indAN_  dw  absAN           ;indirect pointer to AND pattern in absolute memory
48c2 : 4202                     dw  absAN+1
48c4 : 4302                     dw  absAN+2
48c6 : 4402                     dw  absAN+3
48c8 : 4502             indEO_  dw  absEO           ;indirect pointer to EOR pattern in absolute memory
48ca : 4602                     dw  absEO+1
48cc : 4702                     dw  absEO+2
48ce : 4802                     dw  absEO+3
48d0 : 3d02             indOR_  dw  absOR           ;indirect pointer to OR pattern in absolute memory
48d2 : 3e02                     dw  absOR+1
48d4 : 3f02                     dw  absOR+2
48d6 : 4002                     dw  absOR+3
                        ;add/subtract indirect pointers
48d8 : 0502             adi2_   dw  ada2            ;indirect pointer to operand 2 in absolute memory
48da : 0602             sbi2_   dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
48dc : 0601             adiy2_  dw  ada2-$ff        ;with offset for indirect indexed
48de : 0701             sbiy2_  dw  sba2-$ff
48e0 :                  zp_end
                            if (zp_end - zp_init) != (zp_bss_end - zp_bss)   
                                ;force assembler error if size is different   
                                ERROR ERROR ERROR   ;mismatch between bss and zeropage data
                            endif 
48e0 :                  data_init
48e0 : c3824100         abs1_   db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
48e4 : 7f               abs7f_  db  $7f             ;test pattern for compare
                        ;loads
48e5 : 80800002         fLDx_   db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
48e9 :                  rASL_                       ;expected result ASL & ROL -carry  
48e9 : 86048200         rROL_   db  $86,$04,$82,0   ; "
48ed : 87058301         rROLc_  db  $87,$05,$83,1   ;expected result ROL +carry
48f1 :                  rLSR_                       ;expected result LSR & ROR -carry
48f1 : 61412000         rROR_   db  $61,$41,$20,0   ; "
48f5 : e1c1a080         rRORc_  db  $e1,$c1,$a0,$80 ;expected result ROR +carry
48f9 :                  fASL_                       ;expected flags for shifts
48f9 : 81018002         fROL_   db  fnc,fc,fn,fz    ;no carry in
48fd : 81018000         fROLc_  db  fnc,fc,fn,0     ;carry in
4901 :                  fLSR_
4901 : 01000102         fROR_   db  fc,0,fc,fz      ;no carry in
4905 : 81808180         fRORc_  db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
4909 : 7f80ff0001       rINC_   db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
490e : 0080800200       fINC_   db  0,fn,fn,fz,0    ;expected flags for INC/DEC
                        ;logical memory operand
4913 : 001f7180         absOR_  db  0,$1f,$71,$80   ;test pattern for OR
4917 : 0fff7f80         absAN_  db  $0f,$ff,$7f,$80 ;test pattern for AND
491b : ff0f8f8f         absEO_  db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
491f : 00f11f00         absORa_ db  0,$f1,$1f,0     ;test pattern for OR
4923 : f0ffffff         absANa_ db  $f0,$ff,$ff,$ff ;test pattern for AND
4927 : fff0f00f         absEOa_ db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
492b : 00ff7f80         absrlo_ db  0,$ff,$7f,$80
492f : 02800080         absflo_ db  fz,fn,0,fn
4933 :                  data_end
                            if (data_end - data_init) != (data_bss_end - data_bss)
                                ;force assembler error if size is different   
                                ERROR ERROR ERROR   ;mismatch between bss and data
                            endif 
                        
4933 :                  vec_init
4933 : 2247                     dw  nmi_trap
4935 : 2547                     dw  res_trap
4937 : 2847                     dw  irq_trap
fffa =                  vec_bss equ $fffa
                            endif                   ;end of RAM init data
                            
                        ; code at end of image due to the need to add blank space as required
                            if ($ff & (ji_ret - * - 2)) < ($ff & (jxi_ret - * - 2))
                        ; JMP (abs) when $xxff and $xx00 are from same page
                                ds  lo(ji_ret - * - 2)
                                nop
                                nop
                        ji_px   nop             ;low address byte matched with ji_ret 
                                nop
                                trap            ;jmp indirect page cross bug
                        
                        ; JMP (abs,x) when $xxff and $xx00 are from same page
                                ds  lo(jxi_ret - * - 2)
                                nop
                                nop
                        jxi_px  nop             ;low address byte matched with jxi_ret 
                                nop
                                trap            ;jmp indexed indirect page cross bug
                            else
                        ; JMP (abs,x) when $xxff and $xx00 are from same page
4939 : 00000000000000..         ds  lo(jxi_ret - * - 2)
4966 : ea                       nop
4967 : ea                       nop
4968 : ea               jxi_px  nop             ;low address byte matched with jxi_ret 
4969 : ea                       nop
                                trap            ;jmp indexed indirect page cross bug
496a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
                        
                        ; JMP (abs) when $xxff and $xx00 are from same page
496d : 00000000000000..         ds  lo(ji_ret - * - 2)
4995 : ea                       nop
4996 : ea                       nop
4997 : ea               ji_px   nop             ;low address byte matched with ji_ret 
4998 : ea                       nop
                                trap            ;jmp indirect page cross bug
4999 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
                            endif
                            
                            if (load_data_direct = 1) & (ROM_vectors = 1)  
                                org $fffa       ;vectors
                                dw  nmi_trap
                                dw  res_trap
                                dw  irq_trap
                            endif
                        
4997 =                          end start
                                    
No errors in pass 2.
Wrote binary from address $1000 through $499b.
Total size 14748 bytes.
Program start address is at $1004 (4100).
