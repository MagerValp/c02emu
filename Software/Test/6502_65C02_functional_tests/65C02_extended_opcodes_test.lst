AS65 Assembler for R6502 [1.42].  Copyright 1994-2007, Frank A. Kingswood                                                Page    1
------------------------------------------------ 65C02_extended_opcodes_test.a65c ------------------------------------------------

2924 lines read, no errors in pass 1.
                        ;
                        ; 6 5 C 0 2   E X T E N D E D   O P C O D E S   T E S T
                        ;
                        ; Copyright (C) 2013  Klaus Dormann
                        ;
                        ; This program is free software: you can redistribute it and/or modify
                        ; it under the terms of the GNU General Public License as published by
                        ; the Free Software Foundation, either version 3 of the License, or
                        ; (at your option) any later version.
                        ;
                        ; This program is distributed in the hope that it will be useful,
                        ; but WITHOUT ANY WARRANTY; without even the implied warranty of
                        ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        ; GNU General Public License for more details.
                        ;
                        ; You should have received a copy of the GNU General Public License
                        ; along with this program.  If not, see <http://www.gnu.org/licenses/>.
                        
                        
                        ; This program is designed to test all additional 65C02 opcodes, addressing
                        ; modes and functionality not available in the NMOS version of the 6502.
                        ; The 6502_functional_test is a prerequisite to this test.
                        ; NMI, IRQ, BRK, STP & WAI are covered in the 6502_interrupt_test.
                        ; 
                        ; version 16-aug-2013
                        ; contact info at http://2m5.de or email K@2m5.de
                        ;
                        ; assembled with AS65 from http://www.kingswood-consulting.co.uk/assemblers/
                        ; command line switches: -l -m -s2 -w -x -h0
                        ;                         |  |  |   |  |  no page headers in listing
                        ;                         |  |  |   |  65C02 extensions
                        ;                         |  |  |   wide listing (133 char/col)
                        ;                         |  |  write intel hex file instead of binary
                        ;                         |  expand macros in listing
                        ;                         generate pass2 listing
                        ;
                        ; No IO - should be run from a monitor with access to registers.
                        ; To run load intel hex image with a load command, than alter PC to 400 hex
                        ; (code_segment) and enter a go command.
                        ; Loop on program counter determines error or successful completion of test.
                        ; Check listing for relevant traps (jump/branch *).
                        ; Please note that in early tests some instructions will have to be used before
                        ; they are actually tested!
                        ;
                        ; RESET, NMI or IRQ should not occur and will be trapped if vectors are enabled.
                        ; Tests documented behavior of the original 65C02 only!
                        ; Decimal ops will only be tested with valid BCD operands and the V flag will
                        ; be ignored as it is absolutely useless in decimal mode.
                        ;
                        ; Debugging hints:
                        ;     Most of the code is written sequentially. if you hit a trap, check the
                        ;   immediately preceeding code for the instruction to be tested. Results are
                        ;   tested first, flags are checked second by pushing them onto the stack and
                        ;   pulling them to the accumulator after the result was checked. The "real"
                        ;   flags are no longer valid for the tested instruction at this time!
                        ;     If the tested instruction was indexed, the relevant index (X or Y) must
                        ;   also be checked. Opposed to the flags, X and Y registers are still valid.
                        ;
                        ; versions:
                        ;   19-jul-2013  1st version distributed for testing
                        ;   23-jul-2013  fixed BRA out of range due to larger trap macros
                        ;                added RAM integrity check
                        ;   16-aug-2013  added error report to standard output option
                        
                        
                        ; C O N F I G U R A T I O N
                        
                        ;ROM_vectors writable (0=no, 1=yes)
                        ;if ROM vectors can not be used interrupts will not be trapped
                        ;as a consequence BRK can not be tested but will be emulated to test RTI
0000 =                  ROM_vectors = 0
                        
                        ;load_data_direct (0=move from code segment, 1=load directly)
                        ;loading directly is preferred but may not be supported by your platform
                        ;0 produces only consecutive object code, 1 is not suitable for a binary image
0000 =                  load_data_direct = 0
                        
                        ;I_flag behavior (0=force enabled, 1=force disabled, 2=prohibit change, 3=allow
                        ;change) 2 requires extra code and is not recommended.
0003 =                  I_flag = 3
                        
                        ;configure memory - try to stay away from memory used by the system
                        ;zero_page memory start address, $4e (78) consecutive Bytes required
                        ;                                add 2 if I_flag = 2
000a =                  zero_page = $a  
                        
                        ;data_segment memory start address, $5D (93) consecutive Bytes required
                        ; + 12 Bytes at data_segment + $f9 (JMP indirect page cross test)
0200 =                  data_segment = $200
                            if (data_segment & $ff) != 0
                                ERROR ERROR ERROR low byte of data_segment MUST be $00 !!
                            endif  
                        
                        ;code_segment memory start address, 10kB of consecutive space required
                        ;                                   add 1 kB if I_flag = 2
                        ;parts of the code are self modifying and must reside in RAM
0400 =                  code_segment = $400  
                        
                        ;added WDC only opcodes WAI & STP (0=test as NOPs, >0=no test)
0000 =                  wdc_op = 0
                        
                        ;added Rockwell & WDC opcodes BBR, BBS, RMB & SMB
                        ;(0=test as NOPs, 1=full test, >1=no test) 
0001 =                  rkwl_wdc_op = 1
                        
                        ;report errors through I/O channel (0=use standard self trap loops, 1=include
                        ;report.i65 as I/O channel, add 3 kB)
0001 =                  report = 1
                        
                        ;RAM integrity test option. Checks for undesired RAM writes.
                        ;set lowest non RAM or RAM mirror address page (-1=disable, 0=64k, $40=16k)
                        ;leave disabled if a monitor, OS or background interrupt is allowed to alter RAM
ffff =                  ram_top = -1
                        
                                noopt       ;do not take shortcuts
                                
                        ;macros for error & success traps to allow user modification
                        ;example:
                        ;trap    macro
                        ;        jsr my_error_handler
                        ;        endm
                        ;trap_eq macro
                        ;        bne skip\?
                        ;        trap           ;failed equal (zero)
                        ;skip\?
                        ;        endm
                        ;
                        ; my_error_handler should pop the calling address from the stack and report it.
                        ; putting larger portions of code (more than 3 bytes) inside the trap macro
                        ; may lead to branch range problems for some tests.
                            if report = 0
                        trap    macro
                                jmp *           ;failed anyway
                                endm
                        trap_eq macro
                                beq *           ;failed equal (zero)
                                endm
                        trap_ne macro
                                bne *           ;failed not equal (non zero)
                                endm
                        trap_cs macro
                                bcs *           ;failed carry set
                                endm
                        trap_cc macro
                                bcc *           ;failed carry clear
                                endm
                        trap_mi macro
                                bmi *           ;failed minus (bit 7 set)
                                endm
                        trap_pl macro
                                bpl *           ;failed plus (bit 7 clear)
                                endm
                        trap_vs macro
                                bvs *           ;failed overflow set
                                endm
                        trap_vc macro
                                bvc *           ;failed overflow clear
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                                jmp *           ;test passed, no errors
                                endm
                            endif
                            if report = 1
                        trap    macro
                                jsr report_error
                                endm
                        trap_eq macro
                                bne skip\?
                                trap           ;failed equal (zero)
                        skip\?
                                endm
                        trap_ne macro
                                beq skip\?
                                trap            ;failed not equal (non zero)
                        skip\?
                                endm
                        trap_cs macro
                                bcc skip\?
                                trap            ;failed carry set
                        skip\?
                                endm
                        trap_cc macro
                                bcs skip\?
                                trap            ;failed carry clear
                        skip\?
                                endm
                        trap_mi macro
                                bpl skip\?
                                trap            ;failed minus (bit 7 set)
                        skip\?
                                endm
                        trap_pl macro
                                bmi skip\?
                                trap            ;failed plus (bit 7 clear)
                        skip\?
                                endm
                        trap_vs macro
                                bvc skip\?
                                trap            ;failed overflow set
                        skip\?
                                endm
                        trap_vc macro
                                bvs skip\?
                                trap            ;failed overflow clear
                        skip\?
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                                jsr report_success
                                endm
                            endif
                        
                        
0001 =                  carry   equ %00000001   ;flag bits in status
0002 =                  zero    equ %00000010
0004 =                  intdis  equ %00000100
0008 =                  decmode equ %00001000
0010 =                  break   equ %00010000
0020 =                  reserv  equ %00100000
0040 =                  overfl  equ %01000000
0080 =                  minus   equ %10000000
                        
0001 =                  fc      equ carry
0002 =                  fz      equ zero
0003 =                  fzc     equ carry+zero
0040 =                  fv      equ overfl
0042 =                  fvz     equ overfl+zero
0080 =                  fn      equ minus
0081 =                  fnc     equ minus+carry
0082 =                  fnz     equ minus+zero
0083 =                  fnzc    equ minus+zero+carry
00c0 =                  fnv     equ minus+overfl
                        
0030 =                  fao     equ break+reserv    ;bits always on after PHP, BRK
0034 =                  fai     equ fao+intdis      ;+ forced interrupt disable
00ff =                  m8      equ $ff             ;8 bit mask
00fb =                  m8i     equ $ff&~intdis     ;8 bit mask - interrupt disable
                        
                        ;macros to allow masking of status bits.
                        ;masking of interrupt enable/disable on load and compare
                        ;masking of always on bits after PHP or BRK (unused & break) on compare
                                if I_flag = 0
                        load_flag   macro
                                    lda #\1&m8i         ;force enable interrupts (mask I)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8i   ;I_flag is always enabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 1
                        load_flag   macro
                                    lda #\1|intdis      ;force disable interrupts
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fai)&m8    ;I_flag is always disabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1|fai)       ;invert expected flags + always on bits + I
                                    endm
                                endif
                                if I_flag = 2
                        load_flag   macro
                                    lda #\1
                                    ora flag_I_on       ;restore I-flag
                                    and flag_I_off
                                    endm
                        cmp_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    cmp #(\1|fao)&m8i   ;expected flags + always on bits, mask I
                                    endm
                        eor_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 3
                        load_flag   macro
                                    lda #\1             ;allow test to change I-flag (no mask)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8    ;expected flags + always on bits
                                    endm
                        eor_flag    macro
                                    eor #\1|fao         ;invert expected flags + always on bits
                                    endm
                                endif
                        
                        ;macros to set (register|memory|zeropage) & status
                        set_stat    macro       ;setting flags in the processor status register
                                    load_flag \1
                                    pha         ;use stack to load status
                                    plp
                                    endm
                        
                        set_a       macro       ;precharging accu & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda #\1     ;precharge accu
                                    plp
                                    endm
                        
                        set_x       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldx #\1     ;precharge index x
                                    plp
                                    endm
                        
                        set_y       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldy #\1     ;precharge index y
                                    plp
                                    endm
                        
                        set_ax      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;precharge accu
                                    plp
                                    endm
                        
                        set_ay      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,y    ;precharge accu
                                    plp
                                    endm
                        
                        set_z       macro       ;precharging indexed zp & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to zeropage
                                    sta zpt
                                    plp
                                    endm
                        
                        set_zx      macro       ;precharging zp,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed zeropage
                                    sta zpt,x
                                    plp
                                    endm
                        
                        set_abs     macro       ;precharging indexed memory & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to memory
                                    sta abst
                                    plp
                                    endm
                        
                        set_absx    macro       ;precharging abs,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed memory
                                    sta abst,x
                                    plp
                                    endm
                        
                        ;macros to test (register|memory|zeropage) & status & (mask)
                        tst_stat    macro       ;testing flags in the processor status register
                                    php         ;save status
                                    php         ;use stack to retrieve status
                                    pla
                                    cmp_flag \1
                                    trap_ne
                                    plp         ;restore status
                                    endm
                                    
                        tst_a       macro       ;testing result in accu & flags
                                    php         ;save flags
                                    php
                                    cmp #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_as      macro       ;testing result in accu & flags, save accu
                                    pha
                                    php         ;save flags
                                    php
                                    cmp #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    pla
                                    endm
                        
                        tst_x       macro       ;testing result in x index & flags
                                    php         ;save flags
                                    php
                                    cpx #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_y       macro       ;testing result in y index & flags
                                    php         ;save flags
                                    php
                                    cpy #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_ax      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne     ;
                                    endm
                        
                        tst_ay      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,y    ;test result
                                    trap_ne     ;
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,y    ;test flags
                                    trap_ne
                                    endm
                                
                        tst_z       macro       ;indexed testing result in zp & flags
                                    php         ;save flags
                                    lda zpt
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_zx      macro       ;testing result in zp,x & flags
                                    php         ;save flags
                                    lda zpt,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_abs     macro       ;indexed testing result in memory & flags
                                    php         ;save flags
                                    lda abst
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_absx    macro       ;testing result in abs,x & flags
                                    php         ;save flags
                                    lda abst,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                                    
                        ; RAM integrity test
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                        ;   uses zpt word as indirect pointer, zpt+2 word as checksum
                                if ram_top > -1
                        check_ram   macro 
                                    cld
                                    lda #0
                                    sta zpt         ;set low byte of indirect pointer
                                    sta zpt+3       ;checksum high byte
                                    ldx #11         ;reset modifiable RAM
                        ccs1\?      sta jxi_tab,x   ;JMP indirect page cross area
                                    dex
                                    bpl ccs1\?
                                    sta chkdadi     ;self modifying code
                                    sta chkdsbi
                                    clc
                                    ldx #zp_bss-zero_page ;zeropage - write test area
                        ccs3\?      adc zero_page,x
                                    bcc ccs2\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs2\?      inx
                                    bne ccs3\?
                                    ldx #hi(data_segment) ;set high byte of indirect pointer
                                    stx zpt+1
                                    ldy #lo(data_bss) ;data after write test area
                        ccs5\?      adc (zpt),y
                                    bcc ccs4\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs4\?      iny
                                    bne ccs5\?
                                    inx             ;advance RAM high address
                                    stx zpt+1
                                    cpx #ram_top
                                    bne ccs5\?
                                    sta zpt+2       ;checksum low is
                                    cmp ram_chksm   ;checksum low expected
                                    trap_ne         ;checksum mismatch
                                    lda zpt+3       ;checksum high is
                                    cmp ram_chksm+1 ;checksum high expected
                                    trap_ne         ;checksum mismatch
                                    endm            
                                else
                        check_ram   macro
                                    ;RAM check disabled - RAM size not set
                                    endm
                                endif
                                    
                        next_test   macro           ;make sure, tests don't jump the fence
                                    lda test_case   ;previous test
                                    cmp #test_num
                                    trap_ne         ;test is out of sequence
                        test_num = test_num + 1
                                    lda #test_num   ;*** next tests' number
                                    sta test_case
                                    ;check_ram       ;uncomment to find altered RAM after each test
                                    endm
                        
                            if load_data_direct = 1
                                data
                            else
                                bss                 ;uninitialized segment, copy of data at end of code!
                            endif
000a =                          org zero_page
                            if I_flag = 2
                        ;masking for I bit in status
                        flag_I_on   ds  1           ;or mask to load flags   
                        flag_I_off  ds  1           ;and mask to load flags
                            endif
000a =                  zpt                         ;5 bytes store/modify test area
                        ;add/subtract operand generation and result/flag prediction
000a =                  adfc    ds  1               ;carry flag before op
000b =                  ad1     ds  1               ;operand 1 - accumulator
000c =                  ad2     ds  1               ;operand 2 - memory / immediate
000d =                  adrl    ds  1               ;expected result bits 0-7
000e =                  adrh    ds  1               ;expected result bit 8 (carry)
000f =                  adrf    ds  1               ;expected flags NV0000ZC (-V in decimal mode)
0010 =                  sb2     ds  1               ;operand 2 complemented for subtract
0011 =                  zp_bss
0011 =                  zp1     db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
0015 =                  zp7f    db  $7f             ;test pattern for compare  
                        ;logical zeropage operands
0016 =                  zpOR    db  0,$1f,$71,$80   ;test pattern for OR
001a =                  zpAN    db  $0f,$ff,$7f,$80 ;test pattern for AND
001e =                  zpEO    db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
0022 =                  ind1    dw  abs1            ;indirect pointer to pattern in absolute memory
0024 =                          dw  abs1+1
0026 =                          dw  abs1+2
0028 =                          dw  abs1+3
002a =                          dw  abs7f
002c =                  inw1    dw  abs1-$f8        ;indirect pointer for wrap-test pattern
002e =                  indt    dw  abst            ;indirect pointer to store area in absolute memory
0030 =                          dw  abst+1
0032 =                          dw  abst+2
0034 =                          dw  abst+3
0036 =                  inwt    dw  abst-$f8        ;indirect pointer for wrap-test store
0038 =                  indAN   dw  absAN           ;indirect pointer to AND pattern in absolute memory
003a =                          dw  absAN+1
003c =                          dw  absAN+2
003e =                          dw  absAN+3
0040 =                  indEO   dw  absEO           ;indirect pointer to EOR pattern in absolute memory
0042 =                          dw  absEO+1
0044 =                          dw  absEO+2
0046 =                          dw  absEO+3
0048 =                  indOR   dw  absOR           ;indirect pointer to OR pattern in absolute memory
004a =                          dw  absOR+1
004c =                          dw  absOR+2
004e =                          dw  absOR+3
                        ;add/subtract indirect pointers
0050 =                  adi2    dw  ada2            ;indirect pointer to operand 2 in absolute memory
0052 =                  sbi2    dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
0054 =                  adiy2   dw  ada2-$ff        ;with offset for indirect indexed
0056 =                  sbiy2   dw  sba2-$ff
0058 =                  zp_bss_end
                            
0200 =                          org data_segment
0200 =                  pg_x    ds  2               ;high JMP indirect address for page cross bug
0202 =                  test_case   ds  1           ;current test number
0203 =                  ram_chksm   ds  2           ;checksum for RAM integrity test
                        ;add/subtract operand copy - abs tests write area
0205 =                  abst                        ;5 bytes store/modify test area
0205 =                  ada2    ds  1               ;operand 2
0206 =                  sba2    ds  1               ;operand 2 complemented for subtract
0207 =                          ds  3               ;fill remaining bytes
020a =                  data_bss
020a =                  abs1    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
020e =                  abs7f   db  $7f             ;test pattern for compare
                        ;loads
020f =                  fLDx    db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
0213 =                  rASL                        ;expected result ASL & ROL -carry  
0213 =                  rROL    db  $86,$04,$82,0   ; "
0217 =                  rROLc   db  $87,$05,$83,1   ;expected result ROL +carry
021b =                  rLSR                        ;expected result LSR & ROR -carry
021b =                  rROR    db  $61,$41,$20,0   ; "
021f =                  rRORc   db  $e1,$c1,$a0,$80 ;expected result ROR +carry
0223 =                  fASL                        ;expected flags for shifts
0223 =                  fROL    db  fnc,fc,fn,fz    ;no carry in
0227 =                  fROLc   db  fnc,fc,fn,0     ;carry in
022b =                  fLSR
022b =                  fROR    db  fc,0,fc,fz      ;no carry in
022f =                  fRORc   db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
0233 =                  rINC    db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
0238 =                  fINC    db  0,fn,fn,fz,0    ;expected flags for INC/DEC
                        ;logical memory operand
023d =                  absOR   db  0,$1f,$71,$80   ;test pattern for OR
0241 =                  absAN   db  $0f,$ff,$7f,$80 ;test pattern for AND
0245 =                  absEO   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
0249 =                  absORa  db  0,$f1,$1f,0     ;test pattern for OR
024d =                  absANa  db  $f0,$ff,$ff,$ff ;test pattern for AND
0251 =                  absEOa  db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
0255 =                  absrlo  db  0,$ff,$7f,$80
0259 =                  absflo  db  fz,fn,0,fn
025d =                  data_bss_end
                        ;define area for page crossing JMP (abs) & JMP (abs,x) test
02f9 =                  jxi_tab equ data_segment + $100 - 7     ;JMP (jxi_tab,x) x=6
02fd =                  ji_tab  equ data_segment + $100 - 3     ;JMP (ji_tab+2)
0300 =                  jxp_tab equ data_segment + $100         ;JMP (jxp_tab-255) x=255
                        
                        
                                code
0400 =                          org code_segment
0400 : d8               start   cld
0401 : a2ff                     ldx #$ff
0403 : 9a                       txs
0404 : a900                     lda #0          ;*** test 0 = initialize
0406 : 8d0202                   sta test_case
0000 =                  test_num = 0
                        
                        ;stop interrupts before initializing BSS
                            if I_flag = 1
                                sei
                            endif
                            
                        ;initialize I/O for report channel
                            if report = 1
0409 : 208931                   jsr report_init
                            endif
                            
                        ;initialize BSS segment
                            if load_data_direct != 1
040c : a246                     ldx #zp_end-zp_init-1
040e : bdd232           ld_zp   lda zp_init,x
0411 : 9511                     sta zp_bss,x
0413 : ca                       dex
0414 : 10f8                     bpl ld_zp
0416 : a252                     ldx #data_end-data_init-1
0418 : bd1933           ld_data lda data_init,x
041b : 9d0a02                   sta data_bss,x
041e : ca                       dex
041f : 10f7                     bpl ld_data
                              if ROM_vectors = 1
                                ldx #5
                        ld_vect lda vec_init,x
                                sta vec_bss,x
                                dex
                                bpl ld_vect
                              endif
                            endif
                        
                        ;retain status of interrupt flag
                            if I_flag = 2
                                php
                                pla
                                and #4          ;isolate flag
                                sta flag_I_on   ;or mask
                                eor #lo(~4)     ;reverse
                                sta flag_I_off  ;and mask
                            endif
                                
                        ;generate checksum for RAM integrity test
                            if ram_top > -1
                                lda #0 
                                sta zpt         ;set low byte of indirect pointer
                                sta ram_chksm+1 ;checksum high byte
                                ldx #11         ;reset modifiable RAM
                        gcs1    sta jxi_tab,x   ;JMP indirect page cross area
                                dex
                                bpl gcs1
                                sta chkdadi     ;self modifying code
                                sta chkdsbi
                                clc
                                ldx #zp_bss-zero_page ;zeropage - write test area
                        gcs3    adc zero_page,x
                                bcc gcs2
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs2    inx
                                bne gcs3
                                ldx #hi(data_segment) ;set high byte of indirect pointer
                                stx zpt+1
                                ldy #lo(data_bss) ;data after write test area
                        gcs5    adc (zpt),y
                                bcc gcs4
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs4    iny
                                bne gcs5
                                inx             ;advance RAM high address
                                stx zpt+1
                                cpx #ram_top
                                bne gcs5
                                sta ram_chksm   ;checksum complete
                            endif
                                next_test            
0421 : ad0202          >            lda test_case   ;previous test
0424 : c900            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
0426 : f003            >        beq skip0002
                       >        trap            ;failed not equal (non zero)
0428 : 209831          >        jsr report_error
                       >
042b :                 >skip0002
                       >
0001 =                 >test_num = test_num + 1
042b : a901            >            lda #test_num   ;*** next tests' number
042d : 8d0202          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ;testing stack operations PHX PHY PLX PLY
0430 : a999                     lda #$99        ;protect a
0432 : a2ff                     ldx #$ff        ;initialize stack
0434 : 9a                       txs
0435 : a255                     ldx #$55
0437 : da                       phx
0438 : a2aa                     ldx #$aa
043a : da                       phx
043b : ecfe01                   cpx $1fe        ;on stack ?
                                trap_ne
043e : f003            >        beq skip0004
                       >        trap            ;failed not equal (non zero)
0440 : 209831          >        jsr report_error
                       >
0443 :                 >skip0004
                        
0443 : ba                       tsx
0444 : e0fd                     cpx #$fd        ;sp decremented?
                                trap_ne
0446 : f003            >        beq skip0006
                       >        trap            ;failed not equal (non zero)
0448 : 209831          >        jsr report_error
                       >
044b :                 >skip0006
                        
044b : 7a                       ply
044c : c0aa                     cpy #$aa        ;successful retreived from stack?
                                trap_ne
044e : f003            >        beq skip0008
                       >        trap            ;failed not equal (non zero)
0450 : 209831          >        jsr report_error
                       >
0453 :                 >skip0008
                        
0453 : 7a                       ply
0454 : c055                     cpy #$55
                                trap_ne
0456 : f003            >        beq skip0010
                       >        trap            ;failed not equal (non zero)
0458 : 209831          >        jsr report_error
                       >
045b :                 >skip0010
                        
045b : ccff01                   cpy $1ff        ;remains on stack?
                                trap_ne
045e : f003            >        beq skip0012
                       >        trap            ;failed not equal (non zero)
0460 : 209831          >        jsr report_error
                       >
0463 :                 >skip0012
                        
0463 : ba                       tsx
0464 : e0ff                     cpx #$ff        ;sp incremented?
                                trap_ne
0466 : f003            >        beq skip0014
                       >        trap            ;failed not equal (non zero)
0468 : 209831          >        jsr report_error
                       >
046b :                 >skip0014
                        
                                
046b : a0a5                     ldy #$a5
046d : 5a                       phy
046e : a05a                     ldy #$5a
0470 : 5a                       phy
0471 : ccfe01                   cpy $1fe        ;on stack ?
                                trap_ne
0474 : f003            >        beq skip0016
                       >        trap            ;failed not equal (non zero)
0476 : 209831          >        jsr report_error
                       >
0479 :                 >skip0016
                        
0479 : ba                       tsx
047a : e0fd                     cpx #$fd        ;sp decremented?
                                trap_ne
047c : f003            >        beq skip0018
                       >        trap            ;failed not equal (non zero)
047e : 209831          >        jsr report_error
                       >
0481 :                 >skip0018
                        
0481 : fa                       plx
0482 : e05a                     cpx #$5a        ;successful retreived from stack?
                                trap_ne
0484 : f003            >        beq skip0020
                       >        trap            ;failed not equal (non zero)
0486 : 209831          >        jsr report_error
                       >
0489 :                 >skip0020
                        
0489 : fa                       plx
048a : e0a5                     cpx #$a5
                                trap_ne
048c : f003            >        beq skip0022
                       >        trap            ;failed not equal (non zero)
048e : 209831          >        jsr report_error
                       >
0491 :                 >skip0022
                        
0491 : ecff01                   cpx $1ff        ;remains on stack?
                                trap_ne
0494 : f003            >        beq skip0024
                       >        trap            ;failed not equal (non zero)
0496 : 209831          >        jsr report_error
                       >
0499 :                 >skip0024
                        
0499 : ba                       tsx
049a : e0ff                     cpx #$ff        ;sp incremented?
                                trap_ne
049c : f003            >        beq skip0026
                       >        trap            ;failed not equal (non zero)
049e : 209831          >        jsr report_error
                       >
04a1 :                 >skip0026
                        
04a1 : c999                     cmp #$99        ;unchanged?
                                trap_ne
04a3 : f003            >        beq skip0028
                       >        trap            ;failed not equal (non zero)
04a5 : 209831          >        jsr report_error
                       >
04a8 :                 >skip0028
                        
                                next_test            
04a8 : ad0202          >            lda test_case   ;previous test
04ab : c901            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
04ad : f003            >        beq skip0031
                       >        trap            ;failed not equal (non zero)
04af : 209831          >        jsr report_error
                       >
04b2 :                 >skip0031
                       >
0002 =                 >test_num = test_num + 1
04b2 : a902            >            lda #test_num   ;*** next tests' number
04b4 : 8d0202          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                        ; test PHX does not alter flags or X but PLX does
04b7 : a0aa                     ldy #$aa        ;protect y
                                set_x 1,$ff     ;push
                       >            load_flag $ff     
04b9 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
04bb : 48              >            pha         ;use stack to load status
04bc : a201            >            ldx #1     ;precharge index x
04be : 28              >            plp
                        
04bf : da                       phx
                                tst_x 1,$ff
04c0 : 08              >            php         ;save flags
04c1 : 08              >            php
04c2 : e001            >            cpx #1     ;test result
                       >            trap_ne
04c4 : f003            >        beq skip0036
                       >        trap            ;failed not equal (non zero)
04c6 : 209831          >        jsr report_error
                       >
04c9 :                 >skip0036
                       >
04c9 : 68              >            pla         ;load status
                       >            cmp_flag $ff
04ca : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
04cc : f003            >        beq skip0039
                       >        trap            ;failed not equal (non zero)
04ce : 209831          >        jsr report_error
                       >
04d1 :                 >skip0039
                       >
04d1 : 28              >            plp         ;restore status
                        
                                set_x 0,0
                       >            load_flag 0
04d2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
04d4 : 48              >            pha         ;use stack to load status
04d5 : a200            >            ldx #0     ;precharge index x
04d7 : 28              >            plp
                        
04d8 : da                       phx
                                tst_x 0,0
04d9 : 08              >            php         ;save flags
04da : 08              >            php
04db : e000            >            cpx #0     ;test result
                       >            trap_ne
04dd : f003            >        beq skip0044
                       >        trap            ;failed not equal (non zero)
04df : 209831          >        jsr report_error
                       >
04e2 :                 >skip0044
                       >
04e2 : 68              >            pla         ;load status
                       >            cmp_flag 0
04e3 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
04e5 : f003            >        beq skip0047
                       >        trap            ;failed not equal (non zero)
04e7 : 209831          >        jsr report_error
                       >
04ea :                 >skip0047
                       >
04ea : 28              >            plp         ;restore status
                        
                                set_x $ff,$ff
                       >            load_flag $ff
04eb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
04ed : 48              >            pha         ;use stack to load status
04ee : a2ff            >            ldx #$ff     ;precharge index x
04f0 : 28              >            plp
                        
04f1 : da                       phx
                                tst_x $ff,$ff
04f2 : 08              >            php         ;save flags
04f3 : 08              >            php
04f4 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
04f6 : f003            >        beq skip0052
                       >        trap            ;failed not equal (non zero)
04f8 : 209831          >        jsr report_error
                       >
04fb :                 >skip0052
                       >
04fb : 68              >            pla         ;load status
                       >            cmp_flag $ff
04fc : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
04fe : f003            >        beq skip0055
                       >        trap            ;failed not equal (non zero)
0500 : 209831          >        jsr report_error
                       >
0503 :                 >skip0055
                       >
0503 : 28              >            plp         ;restore status
                        
                                set_x 1,0
                       >            load_flag 0
0504 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
0506 : 48              >            pha         ;use stack to load status
0507 : a201            >            ldx #1     ;precharge index x
0509 : 28              >            plp
                        
050a : da                       phx
                                tst_x 1,0
050b : 08              >            php         ;save flags
050c : 08              >            php
050d : e001            >            cpx #1     ;test result
                       >            trap_ne
050f : f003            >        beq skip0060
                       >        trap            ;failed not equal (non zero)
0511 : 209831          >        jsr report_error
                       >
0514 :                 >skip0060
                       >
0514 : 68              >            pla         ;load status
                       >            cmp_flag 0
0515 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0517 : f003            >        beq skip0063
                       >        trap            ;failed not equal (non zero)
0519 : 209831          >        jsr report_error
                       >
051c :                 >skip0063
                       >
051c : 28              >            plp         ;restore status
                        
                                set_x 0,$ff
                       >            load_flag $ff
051d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
051f : 48              >            pha         ;use stack to load status
0520 : a200            >            ldx #0     ;precharge index x
0522 : 28              >            plp
                        
0523 : da                       phx
                                tst_x 0,$ff
0524 : 08              >            php         ;save flags
0525 : 08              >            php
0526 : e000            >            cpx #0     ;test result
                       >            trap_ne
0528 : f003            >        beq skip0068
                       >        trap            ;failed not equal (non zero)
052a : 209831          >        jsr report_error
                       >
052d :                 >skip0068
                       >
052d : 68              >            pla         ;load status
                       >            cmp_flag $ff
052e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0530 : f003            >        beq skip0071
                       >        trap            ;failed not equal (non zero)
0532 : 209831          >        jsr report_error
                       >
0535 :                 >skip0071
                       >
0535 : 28              >            plp         ;restore status
                        
                                set_x $ff,0
                       >            load_flag 0
0536 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
0538 : 48              >            pha         ;use stack to load status
0539 : a2ff            >            ldx #$ff     ;precharge index x
053b : 28              >            plp
                        
053c : da                       phx
                                tst_x $ff,0
053d : 08              >            php         ;save flags
053e : 08              >            php
053f : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
0541 : f003            >        beq skip0076
                       >        trap            ;failed not equal (non zero)
0543 : 209831          >        jsr report_error
                       >
0546 :                 >skip0076
                       >
0546 : 68              >            pla         ;load status
                       >            cmp_flag 0
0547 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0549 : f003            >        beq skip0079
                       >        trap            ;failed not equal (non zero)
054b : 209831          >        jsr report_error
                       >
054e :                 >skip0079
                       >
054e : 28              >            plp         ;restore status
                        
                                set_x 0,$ff     ;pull
                       >            load_flag $ff     
054f : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
0551 : 48              >            pha         ;use stack to load status
0552 : a200            >            ldx #0     ;precharge index x
0554 : 28              >            plp
                        
0555 : fa                       plx
                                tst_x $ff,$ff-zero
0556 : 08              >            php         ;save flags
0557 : 08              >            php
0558 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
055a : f003            >        beq skip0084
                       >        trap            ;failed not equal (non zero)
055c : 209831          >        jsr report_error
                       >
055f :                 >skip0084
                       >
055f : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
0560 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0562 : f003            >        beq skip0087
                       >        trap            ;failed not equal (non zero)
0564 : 209831          >        jsr report_error
                       >
0567 :                 >skip0087
                       >
0567 : 28              >            plp         ;restore status
                        
                                set_x $ff,0
                       >            load_flag 0
0568 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
056a : 48              >            pha         ;use stack to load status
056b : a2ff            >            ldx #$ff     ;precharge index x
056d : 28              >            plp
                        
056e : fa                       plx
                                tst_x 0,zero
056f : 08              >            php         ;save flags
0570 : 08              >            php
0571 : e000            >            cpx #0     ;test result
                       >            trap_ne
0573 : f003            >        beq skip0092
                       >        trap            ;failed not equal (non zero)
0575 : 209831          >        jsr report_error
                       >
0578 :                 >skip0092
                       >
0578 : 68              >            pla         ;load status
                       >            cmp_flag zero
0579 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
057b : f003            >        beq skip0095
                       >        trap            ;failed not equal (non zero)
057d : 209831          >        jsr report_error
                       >
0580 :                 >skip0095
                       >
0580 : 28              >            plp         ;restore status
                        
                                set_x $fe,$ff
                       >            load_flag $ff
0581 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
0583 : 48              >            pha         ;use stack to load status
0584 : a2fe            >            ldx #$fe     ;precharge index x
0586 : 28              >            plp
                        
0587 : fa                       plx
                                tst_x 1,$ff-zero-minus
0588 : 08              >            php         ;save flags
0589 : 08              >            php
058a : e001            >            cpx #1     ;test result
                       >            trap_ne
058c : f003            >        beq skip0100
                       >        trap            ;failed not equal (non zero)
058e : 209831          >        jsr report_error
                       >
0591 :                 >skip0100
                       >
0591 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero-minus
0592 : c97d            >            cmp #($ff-zero-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0594 : f003            >        beq skip0103
                       >        trap            ;failed not equal (non zero)
0596 : 209831          >        jsr report_error
                       >
0599 :                 >skip0103
                       >
0599 : 28              >            plp         ;restore status
                        
                                set_x 0,0
                       >            load_flag 0
059a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
059c : 48              >            pha         ;use stack to load status
059d : a200            >            ldx #0     ;precharge index x
059f : 28              >            plp
                        
05a0 : fa                       plx
                                tst_x $ff,minus
05a1 : 08              >            php         ;save flags
05a2 : 08              >            php
05a3 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
05a5 : f003            >        beq skip0108
                       >        trap            ;failed not equal (non zero)
05a7 : 209831          >        jsr report_error
                       >
05aa :                 >skip0108
                       >
05aa : 68              >            pla         ;load status
                       >            cmp_flag minus
05ab : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
05ad : f003            >        beq skip0111
                       >        trap            ;failed not equal (non zero)
05af : 209831          >        jsr report_error
                       >
05b2 :                 >skip0111
                       >
05b2 : 28              >            plp         ;restore status
                        
                                set_x $ff,$ff
                       >            load_flag $ff
05b3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
05b5 : 48              >            pha         ;use stack to load status
05b6 : a2ff            >            ldx #$ff     ;precharge index x
05b8 : 28              >            plp
                        
05b9 : fa                       plx
                                tst_x 0,$ff-minus
05ba : 08              >            php         ;save flags
05bb : 08              >            php
05bc : e000            >            cpx #0     ;test result
                       >            trap_ne
05be : f003            >        beq skip0116
                       >        trap            ;failed not equal (non zero)
05c0 : 209831          >        jsr report_error
                       >
05c3 :                 >skip0116
                       >
05c3 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
05c4 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
05c6 : f003            >        beq skip0119
                       >        trap            ;failed not equal (non zero)
05c8 : 209831          >        jsr report_error
                       >
05cb :                 >skip0119
                       >
05cb : 28              >            plp         ;restore status
                        
                                set_x $fe,0
                       >            load_flag 0
05cc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
05ce : 48              >            pha         ;use stack to load status
05cf : a2fe            >            ldx #$fe     ;precharge index x
05d1 : 28              >            plp
                        
05d2 : fa                       plx
                                tst_x 1,0
05d3 : 08              >            php         ;save flags
05d4 : 08              >            php
05d5 : e001            >            cpx #1     ;test result
                       >            trap_ne
05d7 : f003            >        beq skip0124
                       >        trap            ;failed not equal (non zero)
05d9 : 209831          >        jsr report_error
                       >
05dc :                 >skip0124
                       >
05dc : 68              >            pla         ;load status
                       >            cmp_flag 0
05dd : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
05df : f003            >        beq skip0127
                       >        trap            ;failed not equal (non zero)
05e1 : 209831          >        jsr report_error
                       >
05e4 :                 >skip0127
                       >
05e4 : 28              >            plp         ;restore status
                        
05e5 : c0aa                     cpy #$aa        ;Y unchanged
                                trap_ne
05e7 : f003            >        beq skip0129
                       >        trap            ;failed not equal (non zero)
05e9 : 209831          >        jsr report_error
                       >
05ec :                 >skip0129
                        
                                next_test            
05ec : ad0202          >            lda test_case   ;previous test
05ef : c902            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
05f1 : f003            >        beq skip0132
                       >        trap            ;failed not equal (non zero)
05f3 : 209831          >        jsr report_error
                       >
05f6 :                 >skip0132
                       >
0003 =                 >test_num = test_num + 1
05f6 : a903            >            lda #test_num   ;*** next tests' number
05f8 : 8d0202          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                         
                        ; test PHY does not alter flags or Y but PLY does
05fb : a255                     ldx #$55        ;x & a protected
                                set_y 1,$ff     ;push
                       >            load_flag $ff     
05fd : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
05ff : 48              >            pha         ;use stack to load status
0600 : a001            >            ldy #1     ;precharge index y
0602 : 28              >            plp
                        
0603 : 5a                       phy
                                tst_y 1,$ff
0604 : 08              >            php         ;save flags
0605 : 08              >            php
0606 : c001            >            cpy #1     ;test result
                       >            trap_ne
0608 : f003            >        beq skip0137
                       >        trap            ;failed not equal (non zero)
060a : 209831          >        jsr report_error
                       >
060d :                 >skip0137
                       >
060d : 68              >            pla         ;load status
                       >            cmp_flag $ff
060e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0610 : f003            >        beq skip0140
                       >        trap            ;failed not equal (non zero)
0612 : 209831          >        jsr report_error
                       >
0615 :                 >skip0140
                       >
0615 : 28              >            plp         ;restore status
                        
                                set_y 0,0
                       >            load_flag 0
0616 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
0618 : 48              >            pha         ;use stack to load status
0619 : a000            >            ldy #0     ;precharge index y
061b : 28              >            plp
                        
061c : 5a                       phy
                                tst_y 0,0
061d : 08              >            php         ;save flags
061e : 08              >            php
061f : c000            >            cpy #0     ;test result
                       >            trap_ne
0621 : f003            >        beq skip0145
                       >        trap            ;failed not equal (non zero)
0623 : 209831          >        jsr report_error
                       >
0626 :                 >skip0145
                       >
0626 : 68              >            pla         ;load status
                       >            cmp_flag 0
0627 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0629 : f003            >        beq skip0148
                       >        trap            ;failed not equal (non zero)
062b : 209831          >        jsr report_error
                       >
062e :                 >skip0148
                       >
062e : 28              >            plp         ;restore status
                        
                                set_y $ff,$ff
                       >            load_flag $ff
062f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
0631 : 48              >            pha         ;use stack to load status
0632 : a0ff            >            ldy #$ff     ;precharge index y
0634 : 28              >            plp
                        
0635 : 5a                       phy
                                tst_y $ff,$ff
0636 : 08              >            php         ;save flags
0637 : 08              >            php
0638 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
063a : f003            >        beq skip0153
                       >        trap            ;failed not equal (non zero)
063c : 209831          >        jsr report_error
                       >
063f :                 >skip0153
                       >
063f : 68              >            pla         ;load status
                       >            cmp_flag $ff
0640 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0642 : f003            >        beq skip0156
                       >        trap            ;failed not equal (non zero)
0644 : 209831          >        jsr report_error
                       >
0647 :                 >skip0156
                       >
0647 : 28              >            plp         ;restore status
                        
                                set_y 1,0
                       >            load_flag 0
0648 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
064a : 48              >            pha         ;use stack to load status
064b : a001            >            ldy #1     ;precharge index y
064d : 28              >            plp
                        
064e : 5a                       phy
                                tst_y 1,0
064f : 08              >            php         ;save flags
0650 : 08              >            php
0651 : c001            >            cpy #1     ;test result
                       >            trap_ne
0653 : f003            >        beq skip0161
                       >        trap            ;failed not equal (non zero)
0655 : 209831          >        jsr report_error
                       >
0658 :                 >skip0161
                       >
0658 : 68              >            pla         ;load status
                       >            cmp_flag 0
0659 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
065b : f003            >        beq skip0164
                       >        trap            ;failed not equal (non zero)
065d : 209831          >        jsr report_error
                       >
0660 :                 >skip0164
                       >
0660 : 28              >            plp         ;restore status
                        
                                set_y 0,$ff
                       >            load_flag $ff
0661 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
0663 : 48              >            pha         ;use stack to load status
0664 : a000            >            ldy #0     ;precharge index y
0666 : 28              >            plp
                        
0667 : 5a                       phy
                                tst_y 0,$ff
0668 : 08              >            php         ;save flags
0669 : 08              >            php
066a : c000            >            cpy #0     ;test result
                       >            trap_ne
066c : f003            >        beq skip0169
                       >        trap            ;failed not equal (non zero)
066e : 209831          >        jsr report_error
                       >
0671 :                 >skip0169
                       >
0671 : 68              >            pla         ;load status
                       >            cmp_flag $ff
0672 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0674 : f003            >        beq skip0172
                       >        trap            ;failed not equal (non zero)
0676 : 209831          >        jsr report_error
                       >
0679 :                 >skip0172
                       >
0679 : 28              >            plp         ;restore status
                        
                                set_y $ff,0
                       >            load_flag 0
067a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
067c : 48              >            pha         ;use stack to load status
067d : a0ff            >            ldy #$ff     ;precharge index y
067f : 28              >            plp
                        
0680 : 5a                       phy
                                tst_y $ff,0
0681 : 08              >            php         ;save flags
0682 : 08              >            php
0683 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
0685 : f003            >        beq skip0177
                       >        trap            ;failed not equal (non zero)
0687 : 209831          >        jsr report_error
                       >
068a :                 >skip0177
                       >
068a : 68              >            pla         ;load status
                       >            cmp_flag 0
068b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
068d : f003            >        beq skip0180
                       >        trap            ;failed not equal (non zero)
068f : 209831          >        jsr report_error
                       >
0692 :                 >skip0180
                       >
0692 : 28              >            plp         ;restore status
                        
                                set_y 0,$ff     ;pull
                       >            load_flag $ff     
0693 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
0695 : 48              >            pha         ;use stack to load status
0696 : a000            >            ldy #0     ;precharge index y
0698 : 28              >            plp
                        
0699 : 7a                       ply
                                tst_y $ff,$ff-zero
069a : 08              >            php         ;save flags
069b : 08              >            php
069c : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
069e : f003            >        beq skip0185
                       >        trap            ;failed not equal (non zero)
06a0 : 209831          >        jsr report_error
                       >
06a3 :                 >skip0185
                       >
06a3 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
06a4 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
06a6 : f003            >        beq skip0188
                       >        trap            ;failed not equal (non zero)
06a8 : 209831          >        jsr report_error
                       >
06ab :                 >skip0188
                       >
06ab : 28              >            plp         ;restore status
                        
                                set_y $ff,0
                       >            load_flag 0
06ac : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
06ae : 48              >            pha         ;use stack to load status
06af : a0ff            >            ldy #$ff     ;precharge index y
06b1 : 28              >            plp
                        
06b2 : 7a                       ply
                                tst_y 0,zero
06b3 : 08              >            php         ;save flags
06b4 : 08              >            php
06b5 : c000            >            cpy #0     ;test result
                       >            trap_ne
06b7 : f003            >        beq skip0193
                       >        trap            ;failed not equal (non zero)
06b9 : 209831          >        jsr report_error
                       >
06bc :                 >skip0193
                       >
06bc : 68              >            pla         ;load status
                       >            cmp_flag zero
06bd : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
06bf : f003            >        beq skip0196
                       >        trap            ;failed not equal (non zero)
06c1 : 209831          >        jsr report_error
                       >
06c4 :                 >skip0196
                       >
06c4 : 28              >            plp         ;restore status
                        
                                set_y $fe,$ff
                       >            load_flag $ff
06c5 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
06c7 : 48              >            pha         ;use stack to load status
06c8 : a0fe            >            ldy #$fe     ;precharge index y
06ca : 28              >            plp
                        
06cb : 7a                       ply
                                tst_y 1,$ff-zero-minus
06cc : 08              >            php         ;save flags
06cd : 08              >            php
06ce : c001            >            cpy #1     ;test result
                       >            trap_ne
06d0 : f003            >        beq skip0201
                       >        trap            ;failed not equal (non zero)
06d2 : 209831          >        jsr report_error
                       >
06d5 :                 >skip0201
                       >
06d5 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero-minus
06d6 : c97d            >            cmp #($ff-zero-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
06d8 : f003            >        beq skip0204
                       >        trap            ;failed not equal (non zero)
06da : 209831          >        jsr report_error
                       >
06dd :                 >skip0204
                       >
06dd : 28              >            plp         ;restore status
                        
                                set_y 0,0
                       >            load_flag 0
06de : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
06e0 : 48              >            pha         ;use stack to load status
06e1 : a000            >            ldy #0     ;precharge index y
06e3 : 28              >            plp
                        
06e4 : 7a                       ply
                                tst_y $ff,minus
06e5 : 08              >            php         ;save flags
06e6 : 08              >            php
06e7 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
06e9 : f003            >        beq skip0209
                       >        trap            ;failed not equal (non zero)
06eb : 209831          >        jsr report_error
                       >
06ee :                 >skip0209
                       >
06ee : 68              >            pla         ;load status
                       >            cmp_flag minus
06ef : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
06f1 : f003            >        beq skip0212
                       >        trap            ;failed not equal (non zero)
06f3 : 209831          >        jsr report_error
                       >
06f6 :                 >skip0212
                       >
06f6 : 28              >            plp         ;restore status
                        
                                set_y $ff,$ff
                       >            load_flag $ff
06f7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
06f9 : 48              >            pha         ;use stack to load status
06fa : a0ff            >            ldy #$ff     ;precharge index y
06fc : 28              >            plp
                        
06fd : 7a                       ply
                                tst_y 0,$ff-minus
06fe : 08              >            php         ;save flags
06ff : 08              >            php
0700 : c000            >            cpy #0     ;test result
                       >            trap_ne
0702 : f003            >        beq skip0217
                       >        trap            ;failed not equal (non zero)
0704 : 209831          >        jsr report_error
                       >
0707 :                 >skip0217
                       >
0707 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
0708 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
070a : f003            >        beq skip0220
                       >        trap            ;failed not equal (non zero)
070c : 209831          >        jsr report_error
                       >
070f :                 >skip0220
                       >
070f : 28              >            plp         ;restore status
                        
                                set_y $fe,0
                       >            load_flag 0
0710 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
0712 : 48              >            pha         ;use stack to load status
0713 : a0fe            >            ldy #$fe     ;precharge index y
0715 : 28              >            plp
                        
0716 : 7a                       ply
                                tst_y 1,0
0717 : 08              >            php         ;save flags
0718 : 08              >            php
0719 : c001            >            cpy #1     ;test result
                       >            trap_ne
071b : f003            >        beq skip0225
                       >        trap            ;failed not equal (non zero)
071d : 209831          >        jsr report_error
                       >
0720 :                 >skip0225
                       >
0720 : 68              >            pla         ;load status
                       >            cmp_flag 0
0721 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0723 : f003            >        beq skip0228
                       >        trap            ;failed not equal (non zero)
0725 : 209831          >        jsr report_error
                       >
0728 :                 >skip0228
                       >
0728 : 28              >            plp         ;restore status
                        
0729 : e055                     cpx #$55        ;x unchanged?
                                trap_ne
072b : f003            >        beq skip0230
                       >        trap            ;failed not equal (non zero)
072d : 209831          >        jsr report_error
                       >
0730 :                 >skip0230
                        
                                next_test            
0730 : ad0202          >            lda test_case   ;previous test
0733 : c903            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
0735 : f003            >        beq skip0233
                       >        trap            ;failed not equal (non zero)
0737 : 209831          >        jsr report_error
                       >
073a :                 >skip0233
                       >
0004 =                 >test_num = test_num + 1
073a : a904            >            lda #test_num   ;*** next tests' number
073c : 8d0202          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                         
                        ; PC modifying instructions (BRA, BBR, BBS, 1, 2, 3 byte NOPs, JMP(abs,x))
                        ; testing unconditional branch BRA
                        
073f : a281                     ldx #$81        ;protect unused registers
0741 : a07e                     ldy #$7e
                                set_a 0,$ff
                       >            load_flag $ff
0743 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
0745 : 48              >            pha         ;use stack to load status
0746 : a900            >            lda #0     ;precharge accu
0748 : 28              >            plp
                        
0749 : 8003                     bra br1         ;branch should always be taken
                                trap 
074b : 209831          >        jsr report_error
                        
074e :                  br1
                                tst_a 0,$ff
074e : 08              >            php         ;save flags
074f : 08              >            php
0750 : c900            >            cmp #0     ;test result
                       >            trap_ne
0752 : f003            >        beq skip0239
                       >        trap            ;failed not equal (non zero)
0754 : 209831          >        jsr report_error
                       >
0757 :                 >skip0239
                       >
0757 : 68              >            pla         ;load status
                       >            cmp_flag $ff
0758 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
075a : f003            >        beq skip0242
                       >        trap            ;failed not equal (non zero)
075c : 209831          >        jsr report_error
                       >
075f :                 >skip0242
                       >
075f : 28              >            plp         ;restore status
                        
                                set_a $ff,0
                       >            load_flag 0
0760 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
0762 : 48              >            pha         ;use stack to load status
0763 : a9ff            >            lda #$ff     ;precharge accu
0765 : 28              >            plp
                        
0766 : 8003                     bra br2         ;branch should always be taken
                                trap 
0768 : 209831          >        jsr report_error
                        
076b :                  br2
                                tst_a $ff,0
076b : 08              >            php         ;save flags
076c : 08              >            php
076d : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
076f : f003            >        beq skip0248
                       >        trap            ;failed not equal (non zero)
0771 : 209831          >        jsr report_error
                       >
0774 :                 >skip0248
                       >
0774 : 68              >            pla         ;load status
                       >            cmp_flag 0
0775 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0777 : f003            >        beq skip0251
                       >        trap            ;failed not equal (non zero)
0779 : 209831          >        jsr report_error
                       >
077c :                 >skip0251
                       >
077c : 28              >            plp         ;restore status
                        
077d : e081                     cpx #$81
                                trap_ne
077f : f003            >        beq skip0253
                       >        trap            ;failed not equal (non zero)
0781 : 209831          >        jsr report_error
                       >
0784 :                 >skip0253
                        
0784 : c07e                     cpy #$7e
                                trap_ne
0786 : f003            >        beq skip0255
                       >        trap            ;failed not equal (non zero)
0788 : 209831          >        jsr report_error
                       >
078b :                 >skip0255
                        
                                next_test            
078b : ad0202          >            lda test_case   ;previous test
078e : c904            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
0790 : f003            >        beq skip0258
                       >        trap            ;failed not equal (non zero)
0792 : 209831          >        jsr report_error
                       >
0795 :                 >skip0258
                       >
0005 =                 >test_num = test_num + 1
0795 : a905            >            lda #test_num   ;*** next tests' number
0797 : 8d0202          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
079a : a000                     ldy #0          ;branch range test  
079c : 8076                     bra bra0
                                
079e : c001             bra1    cpy #1
                                trap_ne         ;long range backward
07a0 : f003            >        beq skip0260
                       >        trap            ;failed not equal (non zero)
07a2 : 209831          >        jsr report_error
                       >
07a5 :                 >skip0260
                        
07a5 : c8                       iny        
07a6 : 8062                     bra bra2
                                        
07a8 : c003             bra3    cpy #3
                                trap_ne         ;long range backward
07aa : f003            >        beq skip0262
                       >        trap            ;failed not equal (non zero)
07ac : 209831          >        jsr report_error
                       >
07af :                 >skip0262
                        
07af : c8                       iny        
07b0 : 804e                     bra bra4
                                        
07b2 : c005             bra5    cpy #5
                                trap_ne         ;long range backward
07b4 : f003            >        beq skip0264
                       >        trap            ;failed not equal (non zero)
07b6 : 209831          >        jsr report_error
                       >
07b9 :                 >skip0264
                        
07b9 : c8                       iny        
07ba : a000                     ldy #0
07bc : 8004                     bra brf0
                                
07be : c8                       iny
07bf : c8                       iny
07c0 : c8                       iny
07c1 : c8                       iny        
07c2 : 8003             brf0    bra brf1
                        
07c4 : c8                       iny
07c5 : c8                       iny
07c6 : c8                       iny
07c7 : c8               brf1    iny        
07c8 : 8002                     bra brf2
                                
07ca : c8                       iny
07cb : c8                       iny
07cc : c8               brf2    iny
07cd : c8                       iny        
07ce : 8001                     bra brf3
                                
07d0 : c8                       iny
07d1 : c8               brf3    iny
07d2 : c8                       iny
07d3 : c8                       iny        
07d4 : 8000                     bra brf4
                                
07d6 : c8               brf4    iny
07d7 : c8                       iny
07d8 : c8                       iny
07d9 : c8                       iny
07da : c00a                     cpy #10
                                trap_ne     ;short range forward
07dc : f003            >        beq skip0266
                       >        trap            ;failed not equal (non zero)
07de : 209831          >        jsr report_error
                       >
07e1 :                 >skip0266
                        
07e1 : 8012                     bra brb0
                        
07e3 : 88               brb4    dey
07e4 : 88                       dey
07e5 : 88                       dey
07e6 : 88                       dey
07e7 : 800e                     bra brb5        
                        
07e9 : 88               brb3    dey
07ea : 88                       dey
07eb : 88                       dey
07ec : 80f5                     bra brb4        
                        
07ee : 88               brb2    dey
07ef : 88                       dey
07f0 : 80f7                     bra brb3        
                        
07f2 : 88               brb1    dey
07f3 : 80f9                     bra brb2        
                        
07f5 : 80fb             brb0    bra brb1        
                        
07f7 : c000             brb5    cpy #0
                                trap_ne     ;short range backward
07f9 : f003            >        beq skip0268
                       >        trap            ;failed not equal (non zero)
07fb : 209831          >        jsr report_error
                       >
07fe :                 >skip0268
                        
07fe : 801e                     bra bra6
                        
0800 : c004             bra4    cpy #4
                                trap_ne     ;long range forward
0802 : f003            >        beq skip0270
                       >        trap            ;failed not equal (non zero)
0804 : 209831          >        jsr report_error
                       >
0807 :                 >skip0270
                        
0807 : c8                       iny        
0808 : 80a8                     bra bra5
                                        
080a : c002             bra2    cpy #2
                                trap_ne     ;long range forward
080c : f003            >        beq skip0272
                       >        trap            ;failed not equal (non zero)
080e : 209831          >        jsr report_error
                       >
0811 :                 >skip0272
                        
0811 : c8                       iny        
0812 : 8094                     bra bra3
                                        
0814 : c000             bra0    cpy #0
                                trap_ne     ;long range forward
0816 : f003            >        beq skip0274
                       >        trap            ;failed not equal (non zero)
0818 : 209831          >        jsr report_error
                       >
081b :                 >skip0274
                        
081b : c8                       iny        
081c : 8080                     bra bra1
                                        
081e :                  bra6
                                next_test
081e : ad0202          >            lda test_case   ;previous test
0821 : c905            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
0823 : f003            >        beq skip0277
                       >        trap            ;failed not equal (non zero)
0825 : 209831          >        jsr report_error
                       >
0828 :                 >skip0277
                       >
0006 =                 >test_num = test_num + 1
0828 : a906            >            lda #test_num   ;*** next tests' number
082a : 8d0202          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                            if rkwl_wdc_op = 1
                        ; testing BBR & BBS
                        
                        bbt     macro           ;\1 = bitnum
                                lda #(1<<\1)    ;testing 1 bit on
                                sta zpt
                                set_a $33,0     ;with flags off
                                bbr \1,zpt,fail1\?
                                bbs \1,zpt,ok1\?
                                trap            ;bbs branch not taken
                        fail1\?
                                trap            ;bbr branch taken
                        ok1\?   
                                tst_a $33,0
                                set_a $cc,$ff   ;with flags on
                                bbr \1,zpt,fail2\?
                                bbs \1,zpt,ok2\?
                                trap            ;bbs branch not taken
                        fail2\? 
                                trap            ;bbr branch taken
                        ok2\?   
                                tst_a $cc,$ff
                                lda zpt
                                cmp #(1<<\1)
                                trap_ne         ;zp altered
                                lda #$ff-(1<<\1) ;testing 1 bit off
                                sta zpt
                                set_a $33,0     ;with flags off
                                bbs \1,zpt,fail3\?
                                bbr \1,zpt,ok3\?
                                trap            ;bbr branch not taken
                        fail3\? 
                                trap            ;bbs branch taken
                        ok3\?   
                                tst_a $33,0
                                set_a $cc,$ff   ;with flags on
                                bbs \1,zpt,fail4\?
                                bbr \1,zpt,ok4\?
                                trap            ;bbr branch not taken
                        fail4\? 
                                trap            ;bbs branch taken
                        ok4\?   
                                tst_a $cc,$ff
                                lda zpt
                                cmp #$ff-(1<<\1)
                                trap_ne         ;zp altered
                                endm
                        
082d : a211                     ldx #$11        ;test bbr/bbs integrity
082f : a022                     ldy #$22
                                bbt 0
0831 : a901            >        lda #(1<<0)    ;testing 1 bit on
0833 : 850a            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
0835 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
0837 : 48              >            pha         ;use stack to load status
0838 : a933            >            lda #$33     ;precharge accu
083a : 28              >            plp
                       >
083b : 0f0a06          >        bbr 0,zpt,fail10279
083e : 8f0a06          >        bbs 0,zpt,ok10279
                       >        trap            ;bbs branch not taken
0841 : 209831          >        jsr report_error
                       >
0844 :                 >fail10279
                       >        trap            ;bbr branch taken
0844 : 209831          >        jsr report_error
                       >
0847 :                 >ok10279   
                       >        tst_a $33,0
0847 : 08              >            php         ;save flags
0848 : 08              >            php
0849 : c933            >            cmp #$33     ;test result
                       >            trap_ne
084b : f003            >        beq skip0285
                       >        trap            ;failed not equal (non zero)
084d : 209831          >        jsr report_error
                       >
0850 :                 >skip0285
                       >
0850 : 68              >            pla         ;load status
                       >            cmp_flag 0
0851 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0853 : f003            >        beq skip0288
                       >        trap            ;failed not equal (non zero)
0855 : 209831          >        jsr report_error
                       >
0858 :                 >skip0288
                       >
0858 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
0859 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
085b : 48              >            pha         ;use stack to load status
085c : a9cc            >            lda #$cc     ;precharge accu
085e : 28              >            plp
                       >
085f : 0f0a06          >        bbr 0,zpt,fail20279
0862 : 8f0a06          >        bbs 0,zpt,ok20279
                       >        trap            ;bbs branch not taken
0865 : 209831          >        jsr report_error
                       >
0868 :                 >fail20279 
                       >        trap            ;bbr branch taken
0868 : 209831          >        jsr report_error
                       >
086b :                 >ok20279   
                       >        tst_a $cc,$ff
086b : 08              >            php         ;save flags
086c : 08              >            php
086d : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
086f : f003            >        beq skip0295
                       >        trap            ;failed not equal (non zero)
0871 : 209831          >        jsr report_error
                       >
0874 :                 >skip0295
                       >
0874 : 68              >            pla         ;load status
                       >            cmp_flag $ff
0875 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0877 : f003            >        beq skip0298
                       >        trap            ;failed not equal (non zero)
0879 : 209831          >        jsr report_error
                       >
087c :                 >skip0298
                       >
087c : 28              >            plp         ;restore status
                       >
087d : a50a            >        lda zpt
087f : c901            >        cmp #(1<<0)
                       >        trap_ne         ;zp altered
0881 : f003            >        beq skip0300
                       >        trap            ;failed not equal (non zero)
0883 : 209831          >        jsr report_error
                       >
0886 :                 >skip0300
                       >
0886 : a9fe            >        lda #$ff-(1<<0) ;testing 1 bit off
0888 : 850a            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
088a : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
088c : 48              >            pha         ;use stack to load status
088d : a933            >            lda #$33     ;precharge accu
088f : 28              >            plp
                       >
0890 : 8f0a06          >        bbs 0,zpt,fail30279
0893 : 0f0a06          >        bbr 0,zpt,ok30279
                       >        trap            ;bbr branch not taken
0896 : 209831          >        jsr report_error
                       >
0899 :                 >fail30279 
                       >        trap            ;bbs branch taken
0899 : 209831          >        jsr report_error
                       >
089c :                 >ok30279   
                       >        tst_a $33,0
089c : 08              >            php         ;save flags
089d : 08              >            php
089e : c933            >            cmp #$33     ;test result
                       >            trap_ne
08a0 : f003            >        beq skip0307
                       >        trap            ;failed not equal (non zero)
08a2 : 209831          >        jsr report_error
                       >
08a5 :                 >skip0307
                       >
08a5 : 68              >            pla         ;load status
                       >            cmp_flag 0
08a6 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
08a8 : f003            >        beq skip0310
                       >        trap            ;failed not equal (non zero)
08aa : 209831          >        jsr report_error
                       >
08ad :                 >skip0310
                       >
08ad : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
08ae : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
08b0 : 48              >            pha         ;use stack to load status
08b1 : a9cc            >            lda #$cc     ;precharge accu
08b3 : 28              >            plp
                       >
08b4 : 8f0a06          >        bbs 0,zpt,fail40279
08b7 : 0f0a06          >        bbr 0,zpt,ok40279
                       >        trap            ;bbr branch not taken
08ba : 209831          >        jsr report_error
                       >
08bd :                 >fail40279 
                       >        trap            ;bbs branch taken
08bd : 209831          >        jsr report_error
                       >
08c0 :                 >ok40279   
                       >        tst_a $cc,$ff
08c0 : 08              >            php         ;save flags
08c1 : 08              >            php
08c2 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
08c4 : f003            >        beq skip0317
                       >        trap            ;failed not equal (non zero)
08c6 : 209831          >        jsr report_error
                       >
08c9 :                 >skip0317
                       >
08c9 : 68              >            pla         ;load status
                       >            cmp_flag $ff
08ca : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
08cc : f003            >        beq skip0320
                       >        trap            ;failed not equal (non zero)
08ce : 209831          >        jsr report_error
                       >
08d1 :                 >skip0320
                       >
08d1 : 28              >            plp         ;restore status
                       >
08d2 : a50a            >        lda zpt
08d4 : c9fe            >        cmp #$ff-(1<<0)
                       >        trap_ne         ;zp altered
08d6 : f003            >        beq skip0322
                       >        trap            ;failed not equal (non zero)
08d8 : 209831          >        jsr report_error
                       >
08db :                 >skip0322
                       >
                        
                                bbt 1
08db : a902            >        lda #(1<<1)    ;testing 1 bit on
08dd : 850a            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
08df : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
08e1 : 48              >            pha         ;use stack to load status
08e2 : a933            >            lda #$33     ;precharge accu
08e4 : 28              >            plp
                       >
08e5 : 1f0a06          >        bbr 1,zpt,fail10324
08e8 : 9f0a06          >        bbs 1,zpt,ok10324
                       >        trap            ;bbs branch not taken
08eb : 209831          >        jsr report_error
                       >
08ee :                 >fail10324
                       >        trap            ;bbr branch taken
08ee : 209831          >        jsr report_error
                       >
08f1 :                 >ok10324   
                       >        tst_a $33,0
08f1 : 08              >            php         ;save flags
08f2 : 08              >            php
08f3 : c933            >            cmp #$33     ;test result
                       >            trap_ne
08f5 : f003            >        beq skip0330
                       >        trap            ;failed not equal (non zero)
08f7 : 209831          >        jsr report_error
                       >
08fa :                 >skip0330
                       >
08fa : 68              >            pla         ;load status
                       >            cmp_flag 0
08fb : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
08fd : f003            >        beq skip0333
                       >        trap            ;failed not equal (non zero)
08ff : 209831          >        jsr report_error
                       >
0902 :                 >skip0333
                       >
0902 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
0903 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
0905 : 48              >            pha         ;use stack to load status
0906 : a9cc            >            lda #$cc     ;precharge accu
0908 : 28              >            plp
                       >
0909 : 1f0a06          >        bbr 1,zpt,fail20324
090c : 9f0a06          >        bbs 1,zpt,ok20324
                       >        trap            ;bbs branch not taken
090f : 209831          >        jsr report_error
                       >
0912 :                 >fail20324 
                       >        trap            ;bbr branch taken
0912 : 209831          >        jsr report_error
                       >
0915 :                 >ok20324   
                       >        tst_a $cc,$ff
0915 : 08              >            php         ;save flags
0916 : 08              >            php
0917 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
0919 : f003            >        beq skip0340
                       >        trap            ;failed not equal (non zero)
091b : 209831          >        jsr report_error
                       >
091e :                 >skip0340
                       >
091e : 68              >            pla         ;load status
                       >            cmp_flag $ff
091f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0921 : f003            >        beq skip0343
                       >        trap            ;failed not equal (non zero)
0923 : 209831          >        jsr report_error
                       >
0926 :                 >skip0343
                       >
0926 : 28              >            plp         ;restore status
                       >
0927 : a50a            >        lda zpt
0929 : c902            >        cmp #(1<<1)
                       >        trap_ne         ;zp altered
092b : f003            >        beq skip0345
                       >        trap            ;failed not equal (non zero)
092d : 209831          >        jsr report_error
                       >
0930 :                 >skip0345
                       >
0930 : a9fd            >        lda #$ff-(1<<1) ;testing 1 bit off
0932 : 850a            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
0934 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
0936 : 48              >            pha         ;use stack to load status
0937 : a933            >            lda #$33     ;precharge accu
0939 : 28              >            plp
                       >
093a : 9f0a06          >        bbs 1,zpt,fail30324
093d : 1f0a06          >        bbr 1,zpt,ok30324
                       >        trap            ;bbr branch not taken
0940 : 209831          >        jsr report_error
                       >
0943 :                 >fail30324 
                       >        trap            ;bbs branch taken
0943 : 209831          >        jsr report_error
                       >
0946 :                 >ok30324   
                       >        tst_a $33,0
0946 : 08              >            php         ;save flags
0947 : 08              >            php
0948 : c933            >            cmp #$33     ;test result
                       >            trap_ne
094a : f003            >        beq skip0352
                       >        trap            ;failed not equal (non zero)
094c : 209831          >        jsr report_error
                       >
094f :                 >skip0352
                       >
094f : 68              >            pla         ;load status
                       >            cmp_flag 0
0950 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0952 : f003            >        beq skip0355
                       >        trap            ;failed not equal (non zero)
0954 : 209831          >        jsr report_error
                       >
0957 :                 >skip0355
                       >
0957 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
0958 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
095a : 48              >            pha         ;use stack to load status
095b : a9cc            >            lda #$cc     ;precharge accu
095d : 28              >            plp
                       >
095e : 9f0a06          >        bbs 1,zpt,fail40324
0961 : 1f0a06          >        bbr 1,zpt,ok40324
                       >        trap            ;bbr branch not taken
0964 : 209831          >        jsr report_error
                       >
0967 :                 >fail40324 
                       >        trap            ;bbs branch taken
0967 : 209831          >        jsr report_error
                       >
096a :                 >ok40324   
                       >        tst_a $cc,$ff
096a : 08              >            php         ;save flags
096b : 08              >            php
096c : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
096e : f003            >        beq skip0362
                       >        trap            ;failed not equal (non zero)
0970 : 209831          >        jsr report_error
                       >
0973 :                 >skip0362
                       >
0973 : 68              >            pla         ;load status
                       >            cmp_flag $ff
0974 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0976 : f003            >        beq skip0365
                       >        trap            ;failed not equal (non zero)
0978 : 209831          >        jsr report_error
                       >
097b :                 >skip0365
                       >
097b : 28              >            plp         ;restore status
                       >
097c : a50a            >        lda zpt
097e : c9fd            >        cmp #$ff-(1<<1)
                       >        trap_ne         ;zp altered
0980 : f003            >        beq skip0367
                       >        trap            ;failed not equal (non zero)
0982 : 209831          >        jsr report_error
                       >
0985 :                 >skip0367
                       >
                        
                                bbt 2
0985 : a904            >        lda #(1<<2)    ;testing 1 bit on
0987 : 850a            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
0989 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
098b : 48              >            pha         ;use stack to load status
098c : a933            >            lda #$33     ;precharge accu
098e : 28              >            plp
                       >
098f : 2f0a06          >        bbr 2,zpt,fail10369
0992 : af0a06          >        bbs 2,zpt,ok10369
                       >        trap            ;bbs branch not taken
0995 : 209831          >        jsr report_error
                       >
0998 :                 >fail10369
                       >        trap            ;bbr branch taken
0998 : 209831          >        jsr report_error
                       >
099b :                 >ok10369   
                       >        tst_a $33,0
099b : 08              >            php         ;save flags
099c : 08              >            php
099d : c933            >            cmp #$33     ;test result
                       >            trap_ne
099f : f003            >        beq skip0375
                       >        trap            ;failed not equal (non zero)
09a1 : 209831          >        jsr report_error
                       >
09a4 :                 >skip0375
                       >
09a4 : 68              >            pla         ;load status
                       >            cmp_flag 0
09a5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
09a7 : f003            >        beq skip0378
                       >        trap            ;failed not equal (non zero)
09a9 : 209831          >        jsr report_error
                       >
09ac :                 >skip0378
                       >
09ac : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
09ad : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
09af : 48              >            pha         ;use stack to load status
09b0 : a9cc            >            lda #$cc     ;precharge accu
09b2 : 28              >            plp
                       >
09b3 : 2f0a06          >        bbr 2,zpt,fail20369
09b6 : af0a06          >        bbs 2,zpt,ok20369
                       >        trap            ;bbs branch not taken
09b9 : 209831          >        jsr report_error
                       >
09bc :                 >fail20369 
                       >        trap            ;bbr branch taken
09bc : 209831          >        jsr report_error
                       >
09bf :                 >ok20369   
                       >        tst_a $cc,$ff
09bf : 08              >            php         ;save flags
09c0 : 08              >            php
09c1 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
09c3 : f003            >        beq skip0385
                       >        trap            ;failed not equal (non zero)
09c5 : 209831          >        jsr report_error
                       >
09c8 :                 >skip0385
                       >
09c8 : 68              >            pla         ;load status
                       >            cmp_flag $ff
09c9 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
09cb : f003            >        beq skip0388
                       >        trap            ;failed not equal (non zero)
09cd : 209831          >        jsr report_error
                       >
09d0 :                 >skip0388
                       >
09d0 : 28              >            plp         ;restore status
                       >
09d1 : a50a            >        lda zpt
09d3 : c904            >        cmp #(1<<2)
                       >        trap_ne         ;zp altered
09d5 : f003            >        beq skip0390
                       >        trap            ;failed not equal (non zero)
09d7 : 209831          >        jsr report_error
                       >
09da :                 >skip0390
                       >
09da : a9fb            >        lda #$ff-(1<<2) ;testing 1 bit off
09dc : 850a            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
09de : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
09e0 : 48              >            pha         ;use stack to load status
09e1 : a933            >            lda #$33     ;precharge accu
09e3 : 28              >            plp
                       >
09e4 : af0a06          >        bbs 2,zpt,fail30369
09e7 : 2f0a06          >        bbr 2,zpt,ok30369
                       >        trap            ;bbr branch not taken
09ea : 209831          >        jsr report_error
                       >
09ed :                 >fail30369 
                       >        trap            ;bbs branch taken
09ed : 209831          >        jsr report_error
                       >
09f0 :                 >ok30369   
                       >        tst_a $33,0
09f0 : 08              >            php         ;save flags
09f1 : 08              >            php
09f2 : c933            >            cmp #$33     ;test result
                       >            trap_ne
09f4 : f003            >        beq skip0397
                       >        trap            ;failed not equal (non zero)
09f6 : 209831          >        jsr report_error
                       >
09f9 :                 >skip0397
                       >
09f9 : 68              >            pla         ;load status
                       >            cmp_flag 0
09fa : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
09fc : f003            >        beq skip0400
                       >        trap            ;failed not equal (non zero)
09fe : 209831          >        jsr report_error
                       >
0a01 :                 >skip0400
                       >
0a01 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
0a02 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
0a04 : 48              >            pha         ;use stack to load status
0a05 : a9cc            >            lda #$cc     ;precharge accu
0a07 : 28              >            plp
                       >
0a08 : af0a06          >        bbs 2,zpt,fail40369
0a0b : 2f0a06          >        bbr 2,zpt,ok40369
                       >        trap            ;bbr branch not taken
0a0e : 209831          >        jsr report_error
                       >
0a11 :                 >fail40369 
                       >        trap            ;bbs branch taken
0a11 : 209831          >        jsr report_error
                       >
0a14 :                 >ok40369   
                       >        tst_a $cc,$ff
0a14 : 08              >            php         ;save flags
0a15 : 08              >            php
0a16 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
0a18 : f003            >        beq skip0407
                       >        trap            ;failed not equal (non zero)
0a1a : 209831          >        jsr report_error
                       >
0a1d :                 >skip0407
                       >
0a1d : 68              >            pla         ;load status
                       >            cmp_flag $ff
0a1e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0a20 : f003            >        beq skip0410
                       >        trap            ;failed not equal (non zero)
0a22 : 209831          >        jsr report_error
                       >
0a25 :                 >skip0410
                       >
0a25 : 28              >            plp         ;restore status
                       >
0a26 : a50a            >        lda zpt
0a28 : c9fb            >        cmp #$ff-(1<<2)
                       >        trap_ne         ;zp altered
0a2a : f003            >        beq skip0412
                       >        trap            ;failed not equal (non zero)
0a2c : 209831          >        jsr report_error
                       >
0a2f :                 >skip0412
                       >
                        
                                bbt 3
0a2f : a908            >        lda #(1<<3)    ;testing 1 bit on
0a31 : 850a            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
0a33 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
0a35 : 48              >            pha         ;use stack to load status
0a36 : a933            >            lda #$33     ;precharge accu
0a38 : 28              >            plp
                       >
0a39 : 3f0a06          >        bbr 3,zpt,fail10414
0a3c : bf0a06          >        bbs 3,zpt,ok10414
                       >        trap            ;bbs branch not taken
0a3f : 209831          >        jsr report_error
                       >
0a42 :                 >fail10414
                       >        trap            ;bbr branch taken
0a42 : 209831          >        jsr report_error
                       >
0a45 :                 >ok10414   
                       >        tst_a $33,0
0a45 : 08              >            php         ;save flags
0a46 : 08              >            php
0a47 : c933            >            cmp #$33     ;test result
                       >            trap_ne
0a49 : f003            >        beq skip0420
                       >        trap            ;failed not equal (non zero)
0a4b : 209831          >        jsr report_error
                       >
0a4e :                 >skip0420
                       >
0a4e : 68              >            pla         ;load status
                       >            cmp_flag 0
0a4f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0a51 : f003            >        beq skip0423
                       >        trap            ;failed not equal (non zero)
0a53 : 209831          >        jsr report_error
                       >
0a56 :                 >skip0423
                       >
0a56 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
0a57 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
0a59 : 48              >            pha         ;use stack to load status
0a5a : a9cc            >            lda #$cc     ;precharge accu
0a5c : 28              >            plp
                       >
0a5d : 3f0a06          >        bbr 3,zpt,fail20414
0a60 : bf0a06          >        bbs 3,zpt,ok20414
                       >        trap            ;bbs branch not taken
0a63 : 209831          >        jsr report_error
                       >
0a66 :                 >fail20414 
                       >        trap            ;bbr branch taken
0a66 : 209831          >        jsr report_error
                       >
0a69 :                 >ok20414   
                       >        tst_a $cc,$ff
0a69 : 08              >            php         ;save flags
0a6a : 08              >            php
0a6b : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
0a6d : f003            >        beq skip0430
                       >        trap            ;failed not equal (non zero)
0a6f : 209831          >        jsr report_error
                       >
0a72 :                 >skip0430
                       >
0a72 : 68              >            pla         ;load status
                       >            cmp_flag $ff
0a73 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0a75 : f003            >        beq skip0433
                       >        trap            ;failed not equal (non zero)
0a77 : 209831          >        jsr report_error
                       >
0a7a :                 >skip0433
                       >
0a7a : 28              >            plp         ;restore status
                       >
0a7b : a50a            >        lda zpt
0a7d : c908            >        cmp #(1<<3)
                       >        trap_ne         ;zp altered
0a7f : f003            >        beq skip0435
                       >        trap            ;failed not equal (non zero)
0a81 : 209831          >        jsr report_error
                       >
0a84 :                 >skip0435
                       >
0a84 : a9f7            >        lda #$ff-(1<<3) ;testing 1 bit off
0a86 : 850a            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
0a88 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
0a8a : 48              >            pha         ;use stack to load status
0a8b : a933            >            lda #$33     ;precharge accu
0a8d : 28              >            plp
                       >
0a8e : bf0a06          >        bbs 3,zpt,fail30414
0a91 : 3f0a06          >        bbr 3,zpt,ok30414
                       >        trap            ;bbr branch not taken
0a94 : 209831          >        jsr report_error
                       >
0a97 :                 >fail30414 
                       >        trap            ;bbs branch taken
0a97 : 209831          >        jsr report_error
                       >
0a9a :                 >ok30414   
                       >        tst_a $33,0
0a9a : 08              >            php         ;save flags
0a9b : 08              >            php
0a9c : c933            >            cmp #$33     ;test result
                       >            trap_ne
0a9e : f003            >        beq skip0442
                       >        trap            ;failed not equal (non zero)
0aa0 : 209831          >        jsr report_error
                       >
0aa3 :                 >skip0442
                       >
0aa3 : 68              >            pla         ;load status
                       >            cmp_flag 0
0aa4 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0aa6 : f003            >        beq skip0445
                       >        trap            ;failed not equal (non zero)
0aa8 : 209831          >        jsr report_error
                       >
0aab :                 >skip0445
                       >
0aab : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
0aac : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
0aae : 48              >            pha         ;use stack to load status
0aaf : a9cc            >            lda #$cc     ;precharge accu
0ab1 : 28              >            plp
                       >
0ab2 : bf0a06          >        bbs 3,zpt,fail40414
0ab5 : 3f0a06          >        bbr 3,zpt,ok40414
                       >        trap            ;bbr branch not taken
0ab8 : 209831          >        jsr report_error
                       >
0abb :                 >fail40414 
                       >        trap            ;bbs branch taken
0abb : 209831          >        jsr report_error
                       >
0abe :                 >ok40414   
                       >        tst_a $cc,$ff
0abe : 08              >            php         ;save flags
0abf : 08              >            php
0ac0 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
0ac2 : f003            >        beq skip0452
                       >        trap            ;failed not equal (non zero)
0ac4 : 209831          >        jsr report_error
                       >
0ac7 :                 >skip0452
                       >
0ac7 : 68              >            pla         ;load status
                       >            cmp_flag $ff
0ac8 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0aca : f003            >        beq skip0455
                       >        trap            ;failed not equal (non zero)
0acc : 209831          >        jsr report_error
                       >
0acf :                 >skip0455
                       >
0acf : 28              >            plp         ;restore status
                       >
0ad0 : a50a            >        lda zpt
0ad2 : c9f7            >        cmp #$ff-(1<<3)
                       >        trap_ne         ;zp altered
0ad4 : f003            >        beq skip0457
                       >        trap            ;failed not equal (non zero)
0ad6 : 209831          >        jsr report_error
                       >
0ad9 :                 >skip0457
                       >
                        
                                bbt 4
0ad9 : a910            >        lda #(1<<4)    ;testing 1 bit on
0adb : 850a            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
0add : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
0adf : 48              >            pha         ;use stack to load status
0ae0 : a933            >            lda #$33     ;precharge accu
0ae2 : 28              >            plp
                       >
0ae3 : 4f0a06          >        bbr 4,zpt,fail10459
0ae6 : cf0a06          >        bbs 4,zpt,ok10459
                       >        trap            ;bbs branch not taken
0ae9 : 209831          >        jsr report_error
                       >
0aec :                 >fail10459
                       >        trap            ;bbr branch taken
0aec : 209831          >        jsr report_error
                       >
0aef :                 >ok10459   
                       >        tst_a $33,0
0aef : 08              >            php         ;save flags
0af0 : 08              >            php
0af1 : c933            >            cmp #$33     ;test result
                       >            trap_ne
0af3 : f003            >        beq skip0465
                       >        trap            ;failed not equal (non zero)
0af5 : 209831          >        jsr report_error
                       >
0af8 :                 >skip0465
                       >
0af8 : 68              >            pla         ;load status
                       >            cmp_flag 0
0af9 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0afb : f003            >        beq skip0468
                       >        trap            ;failed not equal (non zero)
0afd : 209831          >        jsr report_error
                       >
0b00 :                 >skip0468
                       >
0b00 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
0b01 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
0b03 : 48              >            pha         ;use stack to load status
0b04 : a9cc            >            lda #$cc     ;precharge accu
0b06 : 28              >            plp
                       >
0b07 : 4f0a06          >        bbr 4,zpt,fail20459
0b0a : cf0a06          >        bbs 4,zpt,ok20459
                       >        trap            ;bbs branch not taken
0b0d : 209831          >        jsr report_error
                       >
0b10 :                 >fail20459 
                       >        trap            ;bbr branch taken
0b10 : 209831          >        jsr report_error
                       >
0b13 :                 >ok20459   
                       >        tst_a $cc,$ff
0b13 : 08              >            php         ;save flags
0b14 : 08              >            php
0b15 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
0b17 : f003            >        beq skip0475
                       >        trap            ;failed not equal (non zero)
0b19 : 209831          >        jsr report_error
                       >
0b1c :                 >skip0475
                       >
0b1c : 68              >            pla         ;load status
                       >            cmp_flag $ff
0b1d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0b1f : f003            >        beq skip0478
                       >        trap            ;failed not equal (non zero)
0b21 : 209831          >        jsr report_error
                       >
0b24 :                 >skip0478
                       >
0b24 : 28              >            plp         ;restore status
                       >
0b25 : a50a            >        lda zpt
0b27 : c910            >        cmp #(1<<4)
                       >        trap_ne         ;zp altered
0b29 : f003            >        beq skip0480
                       >        trap            ;failed not equal (non zero)
0b2b : 209831          >        jsr report_error
                       >
0b2e :                 >skip0480
                       >
0b2e : a9ef            >        lda #$ff-(1<<4) ;testing 1 bit off
0b30 : 850a            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
0b32 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
0b34 : 48              >            pha         ;use stack to load status
0b35 : a933            >            lda #$33     ;precharge accu
0b37 : 28              >            plp
                       >
0b38 : cf0a06          >        bbs 4,zpt,fail30459
0b3b : 4f0a06          >        bbr 4,zpt,ok30459
                       >        trap            ;bbr branch not taken
0b3e : 209831          >        jsr report_error
                       >
0b41 :                 >fail30459 
                       >        trap            ;bbs branch taken
0b41 : 209831          >        jsr report_error
                       >
0b44 :                 >ok30459   
                       >        tst_a $33,0
0b44 : 08              >            php         ;save flags
0b45 : 08              >            php
0b46 : c933            >            cmp #$33     ;test result
                       >            trap_ne
0b48 : f003            >        beq skip0487
                       >        trap            ;failed not equal (non zero)
0b4a : 209831          >        jsr report_error
                       >
0b4d :                 >skip0487
                       >
0b4d : 68              >            pla         ;load status
                       >            cmp_flag 0
0b4e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0b50 : f003            >        beq skip0490
                       >        trap            ;failed not equal (non zero)
0b52 : 209831          >        jsr report_error
                       >
0b55 :                 >skip0490
                       >
0b55 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
0b56 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
0b58 : 48              >            pha         ;use stack to load status
0b59 : a9cc            >            lda #$cc     ;precharge accu
0b5b : 28              >            plp
                       >
0b5c : cf0a06          >        bbs 4,zpt,fail40459
0b5f : 4f0a06          >        bbr 4,zpt,ok40459
                       >        trap            ;bbr branch not taken
0b62 : 209831          >        jsr report_error
                       >
0b65 :                 >fail40459 
                       >        trap            ;bbs branch taken
0b65 : 209831          >        jsr report_error
                       >
0b68 :                 >ok40459   
                       >        tst_a $cc,$ff
0b68 : 08              >            php         ;save flags
0b69 : 08              >            php
0b6a : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
0b6c : f003            >        beq skip0497
                       >        trap            ;failed not equal (non zero)
0b6e : 209831          >        jsr report_error
                       >
0b71 :                 >skip0497
                       >
0b71 : 68              >            pla         ;load status
                       >            cmp_flag $ff
0b72 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0b74 : f003            >        beq skip0500
                       >        trap            ;failed not equal (non zero)
0b76 : 209831          >        jsr report_error
                       >
0b79 :                 >skip0500
                       >
0b79 : 28              >            plp         ;restore status
                       >
0b7a : a50a            >        lda zpt
0b7c : c9ef            >        cmp #$ff-(1<<4)
                       >        trap_ne         ;zp altered
0b7e : f003            >        beq skip0502
                       >        trap            ;failed not equal (non zero)
0b80 : 209831          >        jsr report_error
                       >
0b83 :                 >skip0502
                       >
                        
                                bbt 5
0b83 : a920            >        lda #(1<<5)    ;testing 1 bit on
0b85 : 850a            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
0b87 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
0b89 : 48              >            pha         ;use stack to load status
0b8a : a933            >            lda #$33     ;precharge accu
0b8c : 28              >            plp
                       >
0b8d : 5f0a06          >        bbr 5,zpt,fail10504
0b90 : df0a06          >        bbs 5,zpt,ok10504
                       >        trap            ;bbs branch not taken
0b93 : 209831          >        jsr report_error
                       >
0b96 :                 >fail10504
                       >        trap            ;bbr branch taken
0b96 : 209831          >        jsr report_error
                       >
0b99 :                 >ok10504   
                       >        tst_a $33,0
0b99 : 08              >            php         ;save flags
0b9a : 08              >            php
0b9b : c933            >            cmp #$33     ;test result
                       >            trap_ne
0b9d : f003            >        beq skip0510
                       >        trap            ;failed not equal (non zero)
0b9f : 209831          >        jsr report_error
                       >
0ba2 :                 >skip0510
                       >
0ba2 : 68              >            pla         ;load status
                       >            cmp_flag 0
0ba3 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0ba5 : f003            >        beq skip0513
                       >        trap            ;failed not equal (non zero)
0ba7 : 209831          >        jsr report_error
                       >
0baa :                 >skip0513
                       >
0baa : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
0bab : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
0bad : 48              >            pha         ;use stack to load status
0bae : a9cc            >            lda #$cc     ;precharge accu
0bb0 : 28              >            plp
                       >
0bb1 : 5f0a06          >        bbr 5,zpt,fail20504
0bb4 : df0a06          >        bbs 5,zpt,ok20504
                       >        trap            ;bbs branch not taken
0bb7 : 209831          >        jsr report_error
                       >
0bba :                 >fail20504 
                       >        trap            ;bbr branch taken
0bba : 209831          >        jsr report_error
                       >
0bbd :                 >ok20504   
                       >        tst_a $cc,$ff
0bbd : 08              >            php         ;save flags
0bbe : 08              >            php
0bbf : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
0bc1 : f003            >        beq skip0520
                       >        trap            ;failed not equal (non zero)
0bc3 : 209831          >        jsr report_error
                       >
0bc6 :                 >skip0520
                       >
0bc6 : 68              >            pla         ;load status
                       >            cmp_flag $ff
0bc7 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0bc9 : f003            >        beq skip0523
                       >        trap            ;failed not equal (non zero)
0bcb : 209831          >        jsr report_error
                       >
0bce :                 >skip0523
                       >
0bce : 28              >            plp         ;restore status
                       >
0bcf : a50a            >        lda zpt
0bd1 : c920            >        cmp #(1<<5)
                       >        trap_ne         ;zp altered
0bd3 : f003            >        beq skip0525
                       >        trap            ;failed not equal (non zero)
0bd5 : 209831          >        jsr report_error
                       >
0bd8 :                 >skip0525
                       >
0bd8 : a9df            >        lda #$ff-(1<<5) ;testing 1 bit off
0bda : 850a            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
0bdc : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
0bde : 48              >            pha         ;use stack to load status
0bdf : a933            >            lda #$33     ;precharge accu
0be1 : 28              >            plp
                       >
0be2 : df0a06          >        bbs 5,zpt,fail30504
0be5 : 5f0a06          >        bbr 5,zpt,ok30504
                       >        trap            ;bbr branch not taken
0be8 : 209831          >        jsr report_error
                       >
0beb :                 >fail30504 
                       >        trap            ;bbs branch taken
0beb : 209831          >        jsr report_error
                       >
0bee :                 >ok30504   
                       >        tst_a $33,0
0bee : 08              >            php         ;save flags
0bef : 08              >            php
0bf0 : c933            >            cmp #$33     ;test result
                       >            trap_ne
0bf2 : f003            >        beq skip0532
                       >        trap            ;failed not equal (non zero)
0bf4 : 209831          >        jsr report_error
                       >
0bf7 :                 >skip0532
                       >
0bf7 : 68              >            pla         ;load status
                       >            cmp_flag 0
0bf8 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0bfa : f003            >        beq skip0535
                       >        trap            ;failed not equal (non zero)
0bfc : 209831          >        jsr report_error
                       >
0bff :                 >skip0535
                       >
0bff : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
0c00 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
0c02 : 48              >            pha         ;use stack to load status
0c03 : a9cc            >            lda #$cc     ;precharge accu
0c05 : 28              >            plp
                       >
0c06 : df0a06          >        bbs 5,zpt,fail40504
0c09 : 5f0a06          >        bbr 5,zpt,ok40504
                       >        trap            ;bbr branch not taken
0c0c : 209831          >        jsr report_error
                       >
0c0f :                 >fail40504 
                       >        trap            ;bbs branch taken
0c0f : 209831          >        jsr report_error
                       >
0c12 :                 >ok40504   
                       >        tst_a $cc,$ff
0c12 : 08              >            php         ;save flags
0c13 : 08              >            php
0c14 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
0c16 : f003            >        beq skip0542
                       >        trap            ;failed not equal (non zero)
0c18 : 209831          >        jsr report_error
                       >
0c1b :                 >skip0542
                       >
0c1b : 68              >            pla         ;load status
                       >            cmp_flag $ff
0c1c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0c1e : f003            >        beq skip0545
                       >        trap            ;failed not equal (non zero)
0c20 : 209831          >        jsr report_error
                       >
0c23 :                 >skip0545
                       >
0c23 : 28              >            plp         ;restore status
                       >
0c24 : a50a            >        lda zpt
0c26 : c9df            >        cmp #$ff-(1<<5)
                       >        trap_ne         ;zp altered
0c28 : f003            >        beq skip0547
                       >        trap            ;failed not equal (non zero)
0c2a : 209831          >        jsr report_error
                       >
0c2d :                 >skip0547
                       >
                        
                                bbt 6
0c2d : a940            >        lda #(1<<6)    ;testing 1 bit on
0c2f : 850a            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
0c31 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
0c33 : 48              >            pha         ;use stack to load status
0c34 : a933            >            lda #$33     ;precharge accu
0c36 : 28              >            plp
                       >
0c37 : 6f0a06          >        bbr 6,zpt,fail10549
0c3a : ef0a06          >        bbs 6,zpt,ok10549
                       >        trap            ;bbs branch not taken
0c3d : 209831          >        jsr report_error
                       >
0c40 :                 >fail10549
                       >        trap            ;bbr branch taken
0c40 : 209831          >        jsr report_error
                       >
0c43 :                 >ok10549   
                       >        tst_a $33,0
0c43 : 08              >            php         ;save flags
0c44 : 08              >            php
0c45 : c933            >            cmp #$33     ;test result
                       >            trap_ne
0c47 : f003            >        beq skip0555
                       >        trap            ;failed not equal (non zero)
0c49 : 209831          >        jsr report_error
                       >
0c4c :                 >skip0555
                       >
0c4c : 68              >            pla         ;load status
                       >            cmp_flag 0
0c4d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0c4f : f003            >        beq skip0558
                       >        trap            ;failed not equal (non zero)
0c51 : 209831          >        jsr report_error
                       >
0c54 :                 >skip0558
                       >
0c54 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
0c55 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
0c57 : 48              >            pha         ;use stack to load status
0c58 : a9cc            >            lda #$cc     ;precharge accu
0c5a : 28              >            plp
                       >
0c5b : 6f0a06          >        bbr 6,zpt,fail20549
0c5e : ef0a06          >        bbs 6,zpt,ok20549
                       >        trap            ;bbs branch not taken
0c61 : 209831          >        jsr report_error
                       >
0c64 :                 >fail20549 
                       >        trap            ;bbr branch taken
0c64 : 209831          >        jsr report_error
                       >
0c67 :                 >ok20549   
                       >        tst_a $cc,$ff
0c67 : 08              >            php         ;save flags
0c68 : 08              >            php
0c69 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
0c6b : f003            >        beq skip0565
                       >        trap            ;failed not equal (non zero)
0c6d : 209831          >        jsr report_error
                       >
0c70 :                 >skip0565
                       >
0c70 : 68              >            pla         ;load status
                       >            cmp_flag $ff
0c71 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0c73 : f003            >        beq skip0568
                       >        trap            ;failed not equal (non zero)
0c75 : 209831          >        jsr report_error
                       >
0c78 :                 >skip0568
                       >
0c78 : 28              >            plp         ;restore status
                       >
0c79 : a50a            >        lda zpt
0c7b : c940            >        cmp #(1<<6)
                       >        trap_ne         ;zp altered
0c7d : f003            >        beq skip0570
                       >        trap            ;failed not equal (non zero)
0c7f : 209831          >        jsr report_error
                       >
0c82 :                 >skip0570
                       >
0c82 : a9bf            >        lda #$ff-(1<<6) ;testing 1 bit off
0c84 : 850a            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
0c86 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
0c88 : 48              >            pha         ;use stack to load status
0c89 : a933            >            lda #$33     ;precharge accu
0c8b : 28              >            plp
                       >
0c8c : ef0a06          >        bbs 6,zpt,fail30549
0c8f : 6f0a06          >        bbr 6,zpt,ok30549
                       >        trap            ;bbr branch not taken
0c92 : 209831          >        jsr report_error
                       >
0c95 :                 >fail30549 
                       >        trap            ;bbs branch taken
0c95 : 209831          >        jsr report_error
                       >
0c98 :                 >ok30549   
                       >        tst_a $33,0
0c98 : 08              >            php         ;save flags
0c99 : 08              >            php
0c9a : c933            >            cmp #$33     ;test result
                       >            trap_ne
0c9c : f003            >        beq skip0577
                       >        trap            ;failed not equal (non zero)
0c9e : 209831          >        jsr report_error
                       >
0ca1 :                 >skip0577
                       >
0ca1 : 68              >            pla         ;load status
                       >            cmp_flag 0
0ca2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0ca4 : f003            >        beq skip0580
                       >        trap            ;failed not equal (non zero)
0ca6 : 209831          >        jsr report_error
                       >
0ca9 :                 >skip0580
                       >
0ca9 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
0caa : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
0cac : 48              >            pha         ;use stack to load status
0cad : a9cc            >            lda #$cc     ;precharge accu
0caf : 28              >            plp
                       >
0cb0 : ef0a06          >        bbs 6,zpt,fail40549
0cb3 : 6f0a06          >        bbr 6,zpt,ok40549
                       >        trap            ;bbr branch not taken
0cb6 : 209831          >        jsr report_error
                       >
0cb9 :                 >fail40549 
                       >        trap            ;bbs branch taken
0cb9 : 209831          >        jsr report_error
                       >
0cbc :                 >ok40549   
                       >        tst_a $cc,$ff
0cbc : 08              >            php         ;save flags
0cbd : 08              >            php
0cbe : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
0cc0 : f003            >        beq skip0587
                       >        trap            ;failed not equal (non zero)
0cc2 : 209831          >        jsr report_error
                       >
0cc5 :                 >skip0587
                       >
0cc5 : 68              >            pla         ;load status
                       >            cmp_flag $ff
0cc6 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0cc8 : f003            >        beq skip0590
                       >        trap            ;failed not equal (non zero)
0cca : 209831          >        jsr report_error
                       >
0ccd :                 >skip0590
                       >
0ccd : 28              >            plp         ;restore status
                       >
0cce : a50a            >        lda zpt
0cd0 : c9bf            >        cmp #$ff-(1<<6)
                       >        trap_ne         ;zp altered
0cd2 : f003            >        beq skip0592
                       >        trap            ;failed not equal (non zero)
0cd4 : 209831          >        jsr report_error
                       >
0cd7 :                 >skip0592
                       >
                        
                                bbt 7
0cd7 : a980            >        lda #(1<<7)    ;testing 1 bit on
0cd9 : 850a            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
0cdb : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
0cdd : 48              >            pha         ;use stack to load status
0cde : a933            >            lda #$33     ;precharge accu
0ce0 : 28              >            plp
                       >
0ce1 : 7f0a06          >        bbr 7,zpt,fail10594
0ce4 : ff0a06          >        bbs 7,zpt,ok10594
                       >        trap            ;bbs branch not taken
0ce7 : 209831          >        jsr report_error
                       >
0cea :                 >fail10594
                       >        trap            ;bbr branch taken
0cea : 209831          >        jsr report_error
                       >
0ced :                 >ok10594   
                       >        tst_a $33,0
0ced : 08              >            php         ;save flags
0cee : 08              >            php
0cef : c933            >            cmp #$33     ;test result
                       >            trap_ne
0cf1 : f003            >        beq skip0600
                       >        trap            ;failed not equal (non zero)
0cf3 : 209831          >        jsr report_error
                       >
0cf6 :                 >skip0600
                       >
0cf6 : 68              >            pla         ;load status
                       >            cmp_flag 0
0cf7 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0cf9 : f003            >        beq skip0603
                       >        trap            ;failed not equal (non zero)
0cfb : 209831          >        jsr report_error
                       >
0cfe :                 >skip0603
                       >
0cfe : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
0cff : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
0d01 : 48              >            pha         ;use stack to load status
0d02 : a9cc            >            lda #$cc     ;precharge accu
0d04 : 28              >            plp
                       >
0d05 : 7f0a06          >        bbr 7,zpt,fail20594
0d08 : ff0a06          >        bbs 7,zpt,ok20594
                       >        trap            ;bbs branch not taken
0d0b : 209831          >        jsr report_error
                       >
0d0e :                 >fail20594 
                       >        trap            ;bbr branch taken
0d0e : 209831          >        jsr report_error
                       >
0d11 :                 >ok20594   
                       >        tst_a $cc,$ff
0d11 : 08              >            php         ;save flags
0d12 : 08              >            php
0d13 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
0d15 : f003            >        beq skip0610
                       >        trap            ;failed not equal (non zero)
0d17 : 209831          >        jsr report_error
                       >
0d1a :                 >skip0610
                       >
0d1a : 68              >            pla         ;load status
                       >            cmp_flag $ff
0d1b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0d1d : f003            >        beq skip0613
                       >        trap            ;failed not equal (non zero)
0d1f : 209831          >        jsr report_error
                       >
0d22 :                 >skip0613
                       >
0d22 : 28              >            plp         ;restore status
                       >
0d23 : a50a            >        lda zpt
0d25 : c980            >        cmp #(1<<7)
                       >        trap_ne         ;zp altered
0d27 : f003            >        beq skip0615
                       >        trap            ;failed not equal (non zero)
0d29 : 209831          >        jsr report_error
                       >
0d2c :                 >skip0615
                       >
0d2c : a97f            >        lda #$ff-(1<<7) ;testing 1 bit off
0d2e : 850a            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
0d30 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
0d32 : 48              >            pha         ;use stack to load status
0d33 : a933            >            lda #$33     ;precharge accu
0d35 : 28              >            plp
                       >
0d36 : ff0a06          >        bbs 7,zpt,fail30594
0d39 : 7f0a06          >        bbr 7,zpt,ok30594
                       >        trap            ;bbr branch not taken
0d3c : 209831          >        jsr report_error
                       >
0d3f :                 >fail30594 
                       >        trap            ;bbs branch taken
0d3f : 209831          >        jsr report_error
                       >
0d42 :                 >ok30594   
                       >        tst_a $33,0
0d42 : 08              >            php         ;save flags
0d43 : 08              >            php
0d44 : c933            >            cmp #$33     ;test result
                       >            trap_ne
0d46 : f003            >        beq skip0622
                       >        trap            ;failed not equal (non zero)
0d48 : 209831          >        jsr report_error
                       >
0d4b :                 >skip0622
                       >
0d4b : 68              >            pla         ;load status
                       >            cmp_flag 0
0d4c : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0d4e : f003            >        beq skip0625
                       >        trap            ;failed not equal (non zero)
0d50 : 209831          >        jsr report_error
                       >
0d53 :                 >skip0625
                       >
0d53 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
0d54 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
0d56 : 48              >            pha         ;use stack to load status
0d57 : a9cc            >            lda #$cc     ;precharge accu
0d59 : 28              >            plp
                       >
0d5a : ff0a06          >        bbs 7,zpt,fail40594
0d5d : 7f0a06          >        bbr 7,zpt,ok40594
                       >        trap            ;bbr branch not taken
0d60 : 209831          >        jsr report_error
                       >
0d63 :                 >fail40594 
                       >        trap            ;bbs branch taken
0d63 : 209831          >        jsr report_error
                       >
0d66 :                 >ok40594   
                       >        tst_a $cc,$ff
0d66 : 08              >            php         ;save flags
0d67 : 08              >            php
0d68 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
0d6a : f003            >        beq skip0632
                       >        trap            ;failed not equal (non zero)
0d6c : 209831          >        jsr report_error
                       >
0d6f :                 >skip0632
                       >
0d6f : 68              >            pla         ;load status
                       >            cmp_flag $ff
0d70 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0d72 : f003            >        beq skip0635
                       >        trap            ;failed not equal (non zero)
0d74 : 209831          >        jsr report_error
                       >
0d77 :                 >skip0635
                       >
0d77 : 28              >            plp         ;restore status
                       >
0d78 : a50a            >        lda zpt
0d7a : c97f            >        cmp #$ff-(1<<7)
                       >        trap_ne         ;zp altered
0d7c : f003            >        beq skip0637
                       >        trap            ;failed not equal (non zero)
0d7e : 209831          >        jsr report_error
                       >
0d81 :                 >skip0637
                       >
                        
0d81 : e011                     cpx #$11
                                trap_ne         ;x overwritten
0d83 : f003            >        beq skip0639
                       >        trap            ;failed not equal (non zero)
0d85 : 209831          >        jsr report_error
                       >
0d88 :                 >skip0639
                        
0d88 : c022                     cpy #$22
                                trap_ne         ;y overwritten
0d8a : f003            >        beq skip0641
                       >        trap            ;failed not equal (non zero)
0d8c : 209831          >        jsr report_error
                       >
0d8f :                 >skip0641
                        
                                next_test 
0d8f : ad0202          >            lda test_case   ;previous test
0d92 : c906            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
0d94 : f003            >        beq skip0644
                       >        trap            ;failed not equal (non zero)
0d96 : 209831          >        jsr report_error
                       >
0d99 :                 >skip0644
                       >
0007 =                 >test_num = test_num + 1
0d99 : a907            >            lda #test_num   ;*** next tests' number
0d9b : 8d0202          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        bbrc    macro           ;\1 = bitnum
                                bbr \1,zpt,skip\?
                                eor #(1<<\1)       
                        skip\?
                                endm
                        bbsc    macro           ;\1 = bitnum
                                bbs \1,zpt,skip\?
                                eor #(1<<\1)       
                        skip\?
                                endm
                        
0d9e : a900                     lda #0          ;combined bit test
0da0 : 850a                     sta zpt
0da2 : a900             bbcl    lda #0
                                bbrc 0
0da4 : 0f0a02          >        bbr 0,zpt,skip0646
0da7 : 4901            >        eor #(1<<0)       
0da9 :                 >skip0646
                        
                                bbrc 1
0da9 : 1f0a02          >        bbr 1,zpt,skip0647
0dac : 4902            >        eor #(1<<1)       
0dae :                 >skip0647
                        
                                bbrc 2
0dae : 2f0a02          >        bbr 2,zpt,skip0648
0db1 : 4904            >        eor #(1<<2)       
0db3 :                 >skip0648
                        
                                bbrc 3
0db3 : 3f0a02          >        bbr 3,zpt,skip0649
0db6 : 4908            >        eor #(1<<3)       
0db8 :                 >skip0649
                        
                                bbrc 4
0db8 : 4f0a02          >        bbr 4,zpt,skip0650
0dbb : 4910            >        eor #(1<<4)       
0dbd :                 >skip0650
                        
                                bbrc 5
0dbd : 5f0a02          >        bbr 5,zpt,skip0651
0dc0 : 4920            >        eor #(1<<5)       
0dc2 :                 >skip0651
                        
                                bbrc 6
0dc2 : 6f0a02          >        bbr 6,zpt,skip0652
0dc5 : 4940            >        eor #(1<<6)       
0dc7 :                 >skip0652
                        
                                bbrc 7
0dc7 : 7f0a02          >        bbr 7,zpt,skip0653
0dca : 4980            >        eor #(1<<7)       
0dcc :                 >skip0653
                        
0dcc : 450a                     eor zpt
                                trap_ne         ;failed bbr bitnum in accu       
0dce : f003            >        beq skip0654
                       >        trap            ;failed not equal (non zero)
0dd0 : 209831          >        jsr report_error
                       >
0dd3 :                 >skip0654
                        
0dd3 : a9ff                     lda #$ff
                                bbsc 0
0dd5 : 8f0a02          >        bbs 0,zpt,skip0656
0dd8 : 4901            >        eor #(1<<0)       
0dda :                 >skip0656
                        
                                bbsc 1
0dda : 9f0a02          >        bbs 1,zpt,skip0657
0ddd : 4902            >        eor #(1<<1)       
0ddf :                 >skip0657
                        
                                bbsc 2
0ddf : af0a02          >        bbs 2,zpt,skip0658
0de2 : 4904            >        eor #(1<<2)       
0de4 :                 >skip0658
                        
                                bbsc 3
0de4 : bf0a02          >        bbs 3,zpt,skip0659
0de7 : 4908            >        eor #(1<<3)       
0de9 :                 >skip0659
                        
                                bbsc 4
0de9 : cf0a02          >        bbs 4,zpt,skip0660
0dec : 4910            >        eor #(1<<4)       
0dee :                 >skip0660
                        
                                bbsc 5
0dee : df0a02          >        bbs 5,zpt,skip0661
0df1 : 4920            >        eor #(1<<5)       
0df3 :                 >skip0661
                        
                                bbsc 6
0df3 : ef0a02          >        bbs 6,zpt,skip0662
0df6 : 4940            >        eor #(1<<6)       
0df8 :                 >skip0662
                        
                                bbsc 7
0df8 : ff0a02          >        bbs 7,zpt,skip0663
0dfb : 4980            >        eor #(1<<7)       
0dfd :                 >skip0663
                        
0dfd : 450a                     eor zpt
                                trap_ne         ;failed bbs bitnum in accu       
0dff : f003            >        beq skip0664
                       >        trap            ;failed not equal (non zero)
0e01 : 209831          >        jsr report_error
                       >
0e04 :                 >skip0664
                        
0e04 : e60a                     inc zpt
0e06 : d09a                     bne bbcl
                                next_test            
0e08 : ad0202          >            lda test_case   ;previous test
0e0b : c907            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
0e0d : f003            >        beq skip0667
                       >        trap            ;failed not equal (non zero)
0e0f : 209831          >        jsr report_error
                       >
0e12 :                 >skip0667
                       >
0008 =                 >test_num = test_num + 1
0e12 : a908            >            lda #test_num   ;*** next tests' number
0e14 : 8d0202          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                            endif
                            
                        ; testing NOP
                        
                        nop_test    macro       ;\1 = opcode, \2 = # of bytes
                                    ldy #$42
                                    ldx #4-\2
                                    db  \1          ;test nop length
                                if \2 = 1
                                    dex
                                    dex
                                endif
                                if \2 = 2
                                    iny
                                    dex
                                endif
                                if \2 = 3
                                    iny
                                    iny
                                endif
                                    dex
                                    trap_ne         ;wrong number of bytes
                                    set_a $ff-\1,0
                                    db  \1          ;test nop integrity - flags off
                                    nop
                                    nop
                                    tst_a $ff-\1,0
                                    set_a $aa-\1,$ff
                                    db  \1          ;test nop integrity - flags on
                                    nop
                                    nop
                                    tst_a $aa-\1,$ff
                                    cpy #$42
                                    trap_ne         ;y changed
                                    cpx #0
                                    trap_ne         ;x changed
                                    endm
                                    
                                nop_test $02,2
0e17 : a042            >            ldy #$42
0e19 : a202            >            ldx #4-2
0e1b : 02              >            db  $02          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
0e1c : c8              >            iny
0e1d : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
0e1e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
0e1f : f003            >        beq skip0670
                       >        trap            ;failed not equal (non zero)
0e21 : 209831          >        jsr report_error
                       >
0e24 :                 >skip0670
                       >
                       >            set_a $ff-$02,0
                       >            load_flag 0
0e24 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
0e26 : 48              >            pha         ;use stack to load status
0e27 : a9fd            >            lda #$ff-$02     ;precharge accu
0e29 : 28              >            plp
                       >
0e2a : 02              >            db  $02          ;test nop integrity - flags off
0e2b : ea              >            nop
0e2c : ea              >            nop
                       >            tst_a $ff-$02,0
0e2d : 08              >            php         ;save flags
0e2e : 08              >            php
0e2f : c9fd            >            cmp #$ff-$02     ;test result
                       >            trap_ne
0e31 : f003            >        beq skip0675
                       >        trap            ;failed not equal (non zero)
0e33 : 209831          >        jsr report_error
                       >
0e36 :                 >skip0675
                       >
0e36 : 68              >            pla         ;load status
                       >            cmp_flag 0
0e37 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0e39 : f003            >        beq skip0678
                       >        trap            ;failed not equal (non zero)
0e3b : 209831          >        jsr report_error
                       >
0e3e :                 >skip0678
                       >
0e3e : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$02,$ff
                       >            load_flag $ff
0e3f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
0e41 : 48              >            pha         ;use stack to load status
0e42 : a9a8            >            lda #$aa-$02     ;precharge accu
0e44 : 28              >            plp
                       >
0e45 : 02              >            db  $02          ;test nop integrity - flags on
0e46 : ea              >            nop
0e47 : ea              >            nop
                       >            tst_a $aa-$02,$ff
0e48 : 08              >            php         ;save flags
0e49 : 08              >            php
0e4a : c9a8            >            cmp #$aa-$02     ;test result
                       >            trap_ne
0e4c : f003            >        beq skip0683
                       >        trap            ;failed not equal (non zero)
0e4e : 209831          >        jsr report_error
                       >
0e51 :                 >skip0683
                       >
0e51 : 68              >            pla         ;load status
                       >            cmp_flag $ff
0e52 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0e54 : f003            >        beq skip0686
                       >        trap            ;failed not equal (non zero)
0e56 : 209831          >        jsr report_error
                       >
0e59 :                 >skip0686
                       >
0e59 : 28              >            plp         ;restore status
                       >
0e5a : c042            >            cpy #$42
                       >            trap_ne         ;y changed
0e5c : f003            >        beq skip0688
                       >        trap            ;failed not equal (non zero)
0e5e : 209831          >        jsr report_error
                       >
0e61 :                 >skip0688
                       >
0e61 : e000            >            cpx #0
                       >            trap_ne         ;x changed
0e63 : f003            >        beq skip0690
                       >        trap            ;failed not equal (non zero)
0e65 : 209831          >        jsr report_error
                       >
0e68 :                 >skip0690
                       >
                        
                                nop_test $22,2
0e68 : a042            >            ldy #$42
0e6a : a202            >            ldx #4-2
0e6c : 22              >            db  $22          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
0e6d : c8              >            iny
0e6e : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
0e6f : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
0e70 : f003            >        beq skip0693
                       >        trap            ;failed not equal (non zero)
0e72 : 209831          >        jsr report_error
                       >
0e75 :                 >skip0693
                       >
                       >            set_a $ff-$22,0
                       >            load_flag 0
0e75 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
0e77 : 48              >            pha         ;use stack to load status
0e78 : a9dd            >            lda #$ff-$22     ;precharge accu
0e7a : 28              >            plp
                       >
0e7b : 22              >            db  $22          ;test nop integrity - flags off
0e7c : ea              >            nop
0e7d : ea              >            nop
                       >            tst_a $ff-$22,0
0e7e : 08              >            php         ;save flags
0e7f : 08              >            php
0e80 : c9dd            >            cmp #$ff-$22     ;test result
                       >            trap_ne
0e82 : f003            >        beq skip0698
                       >        trap            ;failed not equal (non zero)
0e84 : 209831          >        jsr report_error
                       >
0e87 :                 >skip0698
                       >
0e87 : 68              >            pla         ;load status
                       >            cmp_flag 0
0e88 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0e8a : f003            >        beq skip0701
                       >        trap            ;failed not equal (non zero)
0e8c : 209831          >        jsr report_error
                       >
0e8f :                 >skip0701
                       >
0e8f : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$22,$ff
                       >            load_flag $ff
0e90 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
0e92 : 48              >            pha         ;use stack to load status
0e93 : a988            >            lda #$aa-$22     ;precharge accu
0e95 : 28              >            plp
                       >
0e96 : 22              >            db  $22          ;test nop integrity - flags on
0e97 : ea              >            nop
0e98 : ea              >            nop
                       >            tst_a $aa-$22,$ff
0e99 : 08              >            php         ;save flags
0e9a : 08              >            php
0e9b : c988            >            cmp #$aa-$22     ;test result
                       >            trap_ne
0e9d : f003            >        beq skip0706
                       >        trap            ;failed not equal (non zero)
0e9f : 209831          >        jsr report_error
                       >
0ea2 :                 >skip0706
                       >
0ea2 : 68              >            pla         ;load status
                       >            cmp_flag $ff
0ea3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0ea5 : f003            >        beq skip0709
                       >        trap            ;failed not equal (non zero)
0ea7 : 209831          >        jsr report_error
                       >
0eaa :                 >skip0709
                       >
0eaa : 28              >            plp         ;restore status
                       >
0eab : c042            >            cpy #$42
                       >            trap_ne         ;y changed
0ead : f003            >        beq skip0711
                       >        trap            ;failed not equal (non zero)
0eaf : 209831          >        jsr report_error
                       >
0eb2 :                 >skip0711
                       >
0eb2 : e000            >            cpx #0
                       >            trap_ne         ;x changed
0eb4 : f003            >        beq skip0713
                       >        trap            ;failed not equal (non zero)
0eb6 : 209831          >        jsr report_error
                       >
0eb9 :                 >skip0713
                       >
                        
                                nop_test $42,2
0eb9 : a042            >            ldy #$42
0ebb : a202            >            ldx #4-2
0ebd : 42              >            db  $42          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
0ebe : c8              >            iny
0ebf : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
0ec0 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
0ec1 : f003            >        beq skip0716
                       >        trap            ;failed not equal (non zero)
0ec3 : 209831          >        jsr report_error
                       >
0ec6 :                 >skip0716
                       >
                       >            set_a $ff-$42,0
                       >            load_flag 0
0ec6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
0ec8 : 48              >            pha         ;use stack to load status
0ec9 : a9bd            >            lda #$ff-$42     ;precharge accu
0ecb : 28              >            plp
                       >
0ecc : 42              >            db  $42          ;test nop integrity - flags off
0ecd : ea              >            nop
0ece : ea              >            nop
                       >            tst_a $ff-$42,0
0ecf : 08              >            php         ;save flags
0ed0 : 08              >            php
0ed1 : c9bd            >            cmp #$ff-$42     ;test result
                       >            trap_ne
0ed3 : f003            >        beq skip0721
                       >        trap            ;failed not equal (non zero)
0ed5 : 209831          >        jsr report_error
                       >
0ed8 :                 >skip0721
                       >
0ed8 : 68              >            pla         ;load status
                       >            cmp_flag 0
0ed9 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0edb : f003            >        beq skip0724
                       >        trap            ;failed not equal (non zero)
0edd : 209831          >        jsr report_error
                       >
0ee0 :                 >skip0724
                       >
0ee0 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$42,$ff
                       >            load_flag $ff
0ee1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
0ee3 : 48              >            pha         ;use stack to load status
0ee4 : a968            >            lda #$aa-$42     ;precharge accu
0ee6 : 28              >            plp
                       >
0ee7 : 42              >            db  $42          ;test nop integrity - flags on
0ee8 : ea              >            nop
0ee9 : ea              >            nop
                       >            tst_a $aa-$42,$ff
0eea : 08              >            php         ;save flags
0eeb : 08              >            php
0eec : c968            >            cmp #$aa-$42     ;test result
                       >            trap_ne
0eee : f003            >        beq skip0729
                       >        trap            ;failed not equal (non zero)
0ef0 : 209831          >        jsr report_error
                       >
0ef3 :                 >skip0729
                       >
0ef3 : 68              >            pla         ;load status
                       >            cmp_flag $ff
0ef4 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0ef6 : f003            >        beq skip0732
                       >        trap            ;failed not equal (non zero)
0ef8 : 209831          >        jsr report_error
                       >
0efb :                 >skip0732
                       >
0efb : 28              >            plp         ;restore status
                       >
0efc : c042            >            cpy #$42
                       >            trap_ne         ;y changed
0efe : f003            >        beq skip0734
                       >        trap            ;failed not equal (non zero)
0f00 : 209831          >        jsr report_error
                       >
0f03 :                 >skip0734
                       >
0f03 : e000            >            cpx #0
                       >            trap_ne         ;x changed
0f05 : f003            >        beq skip0736
                       >        trap            ;failed not equal (non zero)
0f07 : 209831          >        jsr report_error
                       >
0f0a :                 >skip0736
                       >
                        
                                nop_test $62,2
0f0a : a042            >            ldy #$42
0f0c : a202            >            ldx #4-2
0f0e : 62              >            db  $62          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
0f0f : c8              >            iny
0f10 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
0f11 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
0f12 : f003            >        beq skip0739
                       >        trap            ;failed not equal (non zero)
0f14 : 209831          >        jsr report_error
                       >
0f17 :                 >skip0739
                       >
                       >            set_a $ff-$62,0
                       >            load_flag 0
0f17 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
0f19 : 48              >            pha         ;use stack to load status
0f1a : a99d            >            lda #$ff-$62     ;precharge accu
0f1c : 28              >            plp
                       >
0f1d : 62              >            db  $62          ;test nop integrity - flags off
0f1e : ea              >            nop
0f1f : ea              >            nop
                       >            tst_a $ff-$62,0
0f20 : 08              >            php         ;save flags
0f21 : 08              >            php
0f22 : c99d            >            cmp #$ff-$62     ;test result
                       >            trap_ne
0f24 : f003            >        beq skip0744
                       >        trap            ;failed not equal (non zero)
0f26 : 209831          >        jsr report_error
                       >
0f29 :                 >skip0744
                       >
0f29 : 68              >            pla         ;load status
                       >            cmp_flag 0
0f2a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0f2c : f003            >        beq skip0747
                       >        trap            ;failed not equal (non zero)
0f2e : 209831          >        jsr report_error
                       >
0f31 :                 >skip0747
                       >
0f31 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$62,$ff
                       >            load_flag $ff
0f32 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
0f34 : 48              >            pha         ;use stack to load status
0f35 : a948            >            lda #$aa-$62     ;precharge accu
0f37 : 28              >            plp
                       >
0f38 : 62              >            db  $62          ;test nop integrity - flags on
0f39 : ea              >            nop
0f3a : ea              >            nop
                       >            tst_a $aa-$62,$ff
0f3b : 08              >            php         ;save flags
0f3c : 08              >            php
0f3d : c948            >            cmp #$aa-$62     ;test result
                       >            trap_ne
0f3f : f003            >        beq skip0752
                       >        trap            ;failed not equal (non zero)
0f41 : 209831          >        jsr report_error
                       >
0f44 :                 >skip0752
                       >
0f44 : 68              >            pla         ;load status
                       >            cmp_flag $ff
0f45 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0f47 : f003            >        beq skip0755
                       >        trap            ;failed not equal (non zero)
0f49 : 209831          >        jsr report_error
                       >
0f4c :                 >skip0755
                       >
0f4c : 28              >            plp         ;restore status
                       >
0f4d : c042            >            cpy #$42
                       >            trap_ne         ;y changed
0f4f : f003            >        beq skip0757
                       >        trap            ;failed not equal (non zero)
0f51 : 209831          >        jsr report_error
                       >
0f54 :                 >skip0757
                       >
0f54 : e000            >            cpx #0
                       >            trap_ne         ;x changed
0f56 : f003            >        beq skip0759
                       >        trap            ;failed not equal (non zero)
0f58 : 209831          >        jsr report_error
                       >
0f5b :                 >skip0759
                       >
                        
                                nop_test $82,2
0f5b : a042            >            ldy #$42
0f5d : a202            >            ldx #4-2
0f5f : 82              >            db  $82          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
0f60 : c8              >            iny
0f61 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
0f62 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
0f63 : f003            >        beq skip0762
                       >        trap            ;failed not equal (non zero)
0f65 : 209831          >        jsr report_error
                       >
0f68 :                 >skip0762
                       >
                       >            set_a $ff-$82,0
                       >            load_flag 0
0f68 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
0f6a : 48              >            pha         ;use stack to load status
0f6b : a97d            >            lda #$ff-$82     ;precharge accu
0f6d : 28              >            plp
                       >
0f6e : 82              >            db  $82          ;test nop integrity - flags off
0f6f : ea              >            nop
0f70 : ea              >            nop
                       >            tst_a $ff-$82,0
0f71 : 08              >            php         ;save flags
0f72 : 08              >            php
0f73 : c97d            >            cmp #$ff-$82     ;test result
                       >            trap_ne
0f75 : f003            >        beq skip0767
                       >        trap            ;failed not equal (non zero)
0f77 : 209831          >        jsr report_error
                       >
0f7a :                 >skip0767
                       >
0f7a : 68              >            pla         ;load status
                       >            cmp_flag 0
0f7b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0f7d : f003            >        beq skip0770
                       >        trap            ;failed not equal (non zero)
0f7f : 209831          >        jsr report_error
                       >
0f82 :                 >skip0770
                       >
0f82 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$82,$ff
                       >            load_flag $ff
0f83 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
0f85 : 48              >            pha         ;use stack to load status
0f86 : a928            >            lda #$aa-$82     ;precharge accu
0f88 : 28              >            plp
                       >
0f89 : 82              >            db  $82          ;test nop integrity - flags on
0f8a : ea              >            nop
0f8b : ea              >            nop
                       >            tst_a $aa-$82,$ff
0f8c : 08              >            php         ;save flags
0f8d : 08              >            php
0f8e : c928            >            cmp #$aa-$82     ;test result
                       >            trap_ne
0f90 : f003            >        beq skip0775
                       >        trap            ;failed not equal (non zero)
0f92 : 209831          >        jsr report_error
                       >
0f95 :                 >skip0775
                       >
0f95 : 68              >            pla         ;load status
                       >            cmp_flag $ff
0f96 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0f98 : f003            >        beq skip0778
                       >        trap            ;failed not equal (non zero)
0f9a : 209831          >        jsr report_error
                       >
0f9d :                 >skip0778
                       >
0f9d : 28              >            plp         ;restore status
                       >
0f9e : c042            >            cpy #$42
                       >            trap_ne         ;y changed
0fa0 : f003            >        beq skip0780
                       >        trap            ;failed not equal (non zero)
0fa2 : 209831          >        jsr report_error
                       >
0fa5 :                 >skip0780
                       >
0fa5 : e000            >            cpx #0
                       >            trap_ne         ;x changed
0fa7 : f003            >        beq skip0782
                       >        trap            ;failed not equal (non zero)
0fa9 : 209831          >        jsr report_error
                       >
0fac :                 >skip0782
                       >
                        
                                nop_test $c2,2
0fac : a042            >            ldy #$42
0fae : a202            >            ldx #4-2
0fb0 : c2              >            db  $c2          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
0fb1 : c8              >            iny
0fb2 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
0fb3 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
0fb4 : f003            >        beq skip0785
                       >        trap            ;failed not equal (non zero)
0fb6 : 209831          >        jsr report_error
                       >
0fb9 :                 >skip0785
                       >
                       >            set_a $ff-$c2,0
                       >            load_flag 0
0fb9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
0fbb : 48              >            pha         ;use stack to load status
0fbc : a93d            >            lda #$ff-$c2     ;precharge accu
0fbe : 28              >            plp
                       >
0fbf : c2              >            db  $c2          ;test nop integrity - flags off
0fc0 : ea              >            nop
0fc1 : ea              >            nop
                       >            tst_a $ff-$c2,0
0fc2 : 08              >            php         ;save flags
0fc3 : 08              >            php
0fc4 : c93d            >            cmp #$ff-$c2     ;test result
                       >            trap_ne
0fc6 : f003            >        beq skip0790
                       >        trap            ;failed not equal (non zero)
0fc8 : 209831          >        jsr report_error
                       >
0fcb :                 >skip0790
                       >
0fcb : 68              >            pla         ;load status
                       >            cmp_flag 0
0fcc : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0fce : f003            >        beq skip0793
                       >        trap            ;failed not equal (non zero)
0fd0 : 209831          >        jsr report_error
                       >
0fd3 :                 >skip0793
                       >
0fd3 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$c2,$ff
                       >            load_flag $ff
0fd4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
0fd6 : 48              >            pha         ;use stack to load status
0fd7 : a9e8            >            lda #$aa-$c2     ;precharge accu
0fd9 : 28              >            plp
                       >
0fda : c2              >            db  $c2          ;test nop integrity - flags on
0fdb : ea              >            nop
0fdc : ea              >            nop
                       >            tst_a $aa-$c2,$ff
0fdd : 08              >            php         ;save flags
0fde : 08              >            php
0fdf : c9e8            >            cmp #$aa-$c2     ;test result
                       >            trap_ne
0fe1 : f003            >        beq skip0798
                       >        trap            ;failed not equal (non zero)
0fe3 : 209831          >        jsr report_error
                       >
0fe6 :                 >skip0798
                       >
0fe6 : 68              >            pla         ;load status
                       >            cmp_flag $ff
0fe7 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
0fe9 : f003            >        beq skip0801
                       >        trap            ;failed not equal (non zero)
0feb : 209831          >        jsr report_error
                       >
0fee :                 >skip0801
                       >
0fee : 28              >            plp         ;restore status
                       >
0fef : c042            >            cpy #$42
                       >            trap_ne         ;y changed
0ff1 : f003            >        beq skip0803
                       >        trap            ;failed not equal (non zero)
0ff3 : 209831          >        jsr report_error
                       >
0ff6 :                 >skip0803
                       >
0ff6 : e000            >            cpx #0
                       >            trap_ne         ;x changed
0ff8 : f003            >        beq skip0805
                       >        trap            ;failed not equal (non zero)
0ffa : 209831          >        jsr report_error
                       >
0ffd :                 >skip0805
                       >
                        
                                nop_test $e2,2
0ffd : a042            >            ldy #$42
0fff : a202            >            ldx #4-2
1001 : e2              >            db  $e2          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1002 : c8              >            iny
1003 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1004 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1005 : f003            >        beq skip0808
                       >        trap            ;failed not equal (non zero)
1007 : 209831          >        jsr report_error
                       >
100a :                 >skip0808
                       >
                       >            set_a $ff-$e2,0
                       >            load_flag 0
100a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
100c : 48              >            pha         ;use stack to load status
100d : a91d            >            lda #$ff-$e2     ;precharge accu
100f : 28              >            plp
                       >
1010 : e2              >            db  $e2          ;test nop integrity - flags off
1011 : ea              >            nop
1012 : ea              >            nop
                       >            tst_a $ff-$e2,0
1013 : 08              >            php         ;save flags
1014 : 08              >            php
1015 : c91d            >            cmp #$ff-$e2     ;test result
                       >            trap_ne
1017 : f003            >        beq skip0813
                       >        trap            ;failed not equal (non zero)
1019 : 209831          >        jsr report_error
                       >
101c :                 >skip0813
                       >
101c : 68              >            pla         ;load status
                       >            cmp_flag 0
101d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
101f : f003            >        beq skip0816
                       >        trap            ;failed not equal (non zero)
1021 : 209831          >        jsr report_error
                       >
1024 :                 >skip0816
                       >
1024 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$e2,$ff
                       >            load_flag $ff
1025 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1027 : 48              >            pha         ;use stack to load status
1028 : a9c8            >            lda #$aa-$e2     ;precharge accu
102a : 28              >            plp
                       >
102b : e2              >            db  $e2          ;test nop integrity - flags on
102c : ea              >            nop
102d : ea              >            nop
                       >            tst_a $aa-$e2,$ff
102e : 08              >            php         ;save flags
102f : 08              >            php
1030 : c9c8            >            cmp #$aa-$e2     ;test result
                       >            trap_ne
1032 : f003            >        beq skip0821
                       >        trap            ;failed not equal (non zero)
1034 : 209831          >        jsr report_error
                       >
1037 :                 >skip0821
                       >
1037 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1038 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
103a : f003            >        beq skip0824
                       >        trap            ;failed not equal (non zero)
103c : 209831          >        jsr report_error
                       >
103f :                 >skip0824
                       >
103f : 28              >            plp         ;restore status
                       >
1040 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1042 : f003            >        beq skip0826
                       >        trap            ;failed not equal (non zero)
1044 : 209831          >        jsr report_error
                       >
1047 :                 >skip0826
                       >
1047 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1049 : f003            >        beq skip0828
                       >        trap            ;failed not equal (non zero)
104b : 209831          >        jsr report_error
                       >
104e :                 >skip0828
                       >
                        
                                nop_test $44,2
104e : a042            >            ldy #$42
1050 : a202            >            ldx #4-2
1052 : 44              >            db  $44          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1053 : c8              >            iny
1054 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1055 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1056 : f003            >        beq skip0831
                       >        trap            ;failed not equal (non zero)
1058 : 209831          >        jsr report_error
                       >
105b :                 >skip0831
                       >
                       >            set_a $ff-$44,0
                       >            load_flag 0
105b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
105d : 48              >            pha         ;use stack to load status
105e : a9bb            >            lda #$ff-$44     ;precharge accu
1060 : 28              >            plp
                       >
1061 : 44              >            db  $44          ;test nop integrity - flags off
1062 : ea              >            nop
1063 : ea              >            nop
                       >            tst_a $ff-$44,0
1064 : 08              >            php         ;save flags
1065 : 08              >            php
1066 : c9bb            >            cmp #$ff-$44     ;test result
                       >            trap_ne
1068 : f003            >        beq skip0836
                       >        trap            ;failed not equal (non zero)
106a : 209831          >        jsr report_error
                       >
106d :                 >skip0836
                       >
106d : 68              >            pla         ;load status
                       >            cmp_flag 0
106e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1070 : f003            >        beq skip0839
                       >        trap            ;failed not equal (non zero)
1072 : 209831          >        jsr report_error
                       >
1075 :                 >skip0839
                       >
1075 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$44,$ff
                       >            load_flag $ff
1076 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1078 : 48              >            pha         ;use stack to load status
1079 : a966            >            lda #$aa-$44     ;precharge accu
107b : 28              >            plp
                       >
107c : 44              >            db  $44          ;test nop integrity - flags on
107d : ea              >            nop
107e : ea              >            nop
                       >            tst_a $aa-$44,$ff
107f : 08              >            php         ;save flags
1080 : 08              >            php
1081 : c966            >            cmp #$aa-$44     ;test result
                       >            trap_ne
1083 : f003            >        beq skip0844
                       >        trap            ;failed not equal (non zero)
1085 : 209831          >        jsr report_error
                       >
1088 :                 >skip0844
                       >
1088 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1089 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
108b : f003            >        beq skip0847
                       >        trap            ;failed not equal (non zero)
108d : 209831          >        jsr report_error
                       >
1090 :                 >skip0847
                       >
1090 : 28              >            plp         ;restore status
                       >
1091 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1093 : f003            >        beq skip0849
                       >        trap            ;failed not equal (non zero)
1095 : 209831          >        jsr report_error
                       >
1098 :                 >skip0849
                       >
1098 : e000            >            cpx #0
                       >            trap_ne         ;x changed
109a : f003            >        beq skip0851
                       >        trap            ;failed not equal (non zero)
109c : 209831          >        jsr report_error
                       >
109f :                 >skip0851
                       >
                        
                                nop_test $54,2
109f : a042            >            ldy #$42
10a1 : a202            >            ldx #4-2
10a3 : 54              >            db  $54          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
10a4 : c8              >            iny
10a5 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
10a6 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
10a7 : f003            >        beq skip0854
                       >        trap            ;failed not equal (non zero)
10a9 : 209831          >        jsr report_error
                       >
10ac :                 >skip0854
                       >
                       >            set_a $ff-$54,0
                       >            load_flag 0
10ac : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
10ae : 48              >            pha         ;use stack to load status
10af : a9ab            >            lda #$ff-$54     ;precharge accu
10b1 : 28              >            plp
                       >
10b2 : 54              >            db  $54          ;test nop integrity - flags off
10b3 : ea              >            nop
10b4 : ea              >            nop
                       >            tst_a $ff-$54,0
10b5 : 08              >            php         ;save flags
10b6 : 08              >            php
10b7 : c9ab            >            cmp #$ff-$54     ;test result
                       >            trap_ne
10b9 : f003            >        beq skip0859
                       >        trap            ;failed not equal (non zero)
10bb : 209831          >        jsr report_error
                       >
10be :                 >skip0859
                       >
10be : 68              >            pla         ;load status
                       >            cmp_flag 0
10bf : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
10c1 : f003            >        beq skip0862
                       >        trap            ;failed not equal (non zero)
10c3 : 209831          >        jsr report_error
                       >
10c6 :                 >skip0862
                       >
10c6 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$54,$ff
                       >            load_flag $ff
10c7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
10c9 : 48              >            pha         ;use stack to load status
10ca : a956            >            lda #$aa-$54     ;precharge accu
10cc : 28              >            plp
                       >
10cd : 54              >            db  $54          ;test nop integrity - flags on
10ce : ea              >            nop
10cf : ea              >            nop
                       >            tst_a $aa-$54,$ff
10d0 : 08              >            php         ;save flags
10d1 : 08              >            php
10d2 : c956            >            cmp #$aa-$54     ;test result
                       >            trap_ne
10d4 : f003            >        beq skip0867
                       >        trap            ;failed not equal (non zero)
10d6 : 209831          >        jsr report_error
                       >
10d9 :                 >skip0867
                       >
10d9 : 68              >            pla         ;load status
                       >            cmp_flag $ff
10da : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
10dc : f003            >        beq skip0870
                       >        trap            ;failed not equal (non zero)
10de : 209831          >        jsr report_error
                       >
10e1 :                 >skip0870
                       >
10e1 : 28              >            plp         ;restore status
                       >
10e2 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
10e4 : f003            >        beq skip0872
                       >        trap            ;failed not equal (non zero)
10e6 : 209831          >        jsr report_error
                       >
10e9 :                 >skip0872
                       >
10e9 : e000            >            cpx #0
                       >            trap_ne         ;x changed
10eb : f003            >        beq skip0874
                       >        trap            ;failed not equal (non zero)
10ed : 209831          >        jsr report_error
                       >
10f0 :                 >skip0874
                       >
                        
                                nop_test $d4,2
10f0 : a042            >            ldy #$42
10f2 : a202            >            ldx #4-2
10f4 : d4              >            db  $d4          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
10f5 : c8              >            iny
10f6 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
10f7 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
10f8 : f003            >        beq skip0877
                       >        trap            ;failed not equal (non zero)
10fa : 209831          >        jsr report_error
                       >
10fd :                 >skip0877
                       >
                       >            set_a $ff-$d4,0
                       >            load_flag 0
10fd : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
10ff : 48              >            pha         ;use stack to load status
1100 : a92b            >            lda #$ff-$d4     ;precharge accu
1102 : 28              >            plp
                       >
1103 : d4              >            db  $d4          ;test nop integrity - flags off
1104 : ea              >            nop
1105 : ea              >            nop
                       >            tst_a $ff-$d4,0
1106 : 08              >            php         ;save flags
1107 : 08              >            php
1108 : c92b            >            cmp #$ff-$d4     ;test result
                       >            trap_ne
110a : f003            >        beq skip0882
                       >        trap            ;failed not equal (non zero)
110c : 209831          >        jsr report_error
                       >
110f :                 >skip0882
                       >
110f : 68              >            pla         ;load status
                       >            cmp_flag 0
1110 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1112 : f003            >        beq skip0885
                       >        trap            ;failed not equal (non zero)
1114 : 209831          >        jsr report_error
                       >
1117 :                 >skip0885
                       >
1117 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$d4,$ff
                       >            load_flag $ff
1118 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
111a : 48              >            pha         ;use stack to load status
111b : a9d6            >            lda #$aa-$d4     ;precharge accu
111d : 28              >            plp
                       >
111e : d4              >            db  $d4          ;test nop integrity - flags on
111f : ea              >            nop
1120 : ea              >            nop
                       >            tst_a $aa-$d4,$ff
1121 : 08              >            php         ;save flags
1122 : 08              >            php
1123 : c9d6            >            cmp #$aa-$d4     ;test result
                       >            trap_ne
1125 : f003            >        beq skip0890
                       >        trap            ;failed not equal (non zero)
1127 : 209831          >        jsr report_error
                       >
112a :                 >skip0890
                       >
112a : 68              >            pla         ;load status
                       >            cmp_flag $ff
112b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
112d : f003            >        beq skip0893
                       >        trap            ;failed not equal (non zero)
112f : 209831          >        jsr report_error
                       >
1132 :                 >skip0893
                       >
1132 : 28              >            plp         ;restore status
                       >
1133 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1135 : f003            >        beq skip0895
                       >        trap            ;failed not equal (non zero)
1137 : 209831          >        jsr report_error
                       >
113a :                 >skip0895
                       >
113a : e000            >            cpx #0
                       >            trap_ne         ;x changed
113c : f003            >        beq skip0897
                       >        trap            ;failed not equal (non zero)
113e : 209831          >        jsr report_error
                       >
1141 :                 >skip0897
                       >
                        
                                nop_test $f4,2
1141 : a042            >            ldy #$42
1143 : a202            >            ldx #4-2
1145 : f4              >            db  $f4          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1146 : c8              >            iny
1147 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1148 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1149 : f003            >        beq skip0900
                       >        trap            ;failed not equal (non zero)
114b : 209831          >        jsr report_error
                       >
114e :                 >skip0900
                       >
                       >            set_a $ff-$f4,0
                       >            load_flag 0
114e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1150 : 48              >            pha         ;use stack to load status
1151 : a90b            >            lda #$ff-$f4     ;precharge accu
1153 : 28              >            plp
                       >
1154 : f4              >            db  $f4          ;test nop integrity - flags off
1155 : ea              >            nop
1156 : ea              >            nop
                       >            tst_a $ff-$f4,0
1157 : 08              >            php         ;save flags
1158 : 08              >            php
1159 : c90b            >            cmp #$ff-$f4     ;test result
                       >            trap_ne
115b : f003            >        beq skip0905
                       >        trap            ;failed not equal (non zero)
115d : 209831          >        jsr report_error
                       >
1160 :                 >skip0905
                       >
1160 : 68              >            pla         ;load status
                       >            cmp_flag 0
1161 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1163 : f003            >        beq skip0908
                       >        trap            ;failed not equal (non zero)
1165 : 209831          >        jsr report_error
                       >
1168 :                 >skip0908
                       >
1168 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$f4,$ff
                       >            load_flag $ff
1169 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
116b : 48              >            pha         ;use stack to load status
116c : a9b6            >            lda #$aa-$f4     ;precharge accu
116e : 28              >            plp
                       >
116f : f4              >            db  $f4          ;test nop integrity - flags on
1170 : ea              >            nop
1171 : ea              >            nop
                       >            tst_a $aa-$f4,$ff
1172 : 08              >            php         ;save flags
1173 : 08              >            php
1174 : c9b6            >            cmp #$aa-$f4     ;test result
                       >            trap_ne
1176 : f003            >        beq skip0913
                       >        trap            ;failed not equal (non zero)
1178 : 209831          >        jsr report_error
                       >
117b :                 >skip0913
                       >
117b : 68              >            pla         ;load status
                       >            cmp_flag $ff
117c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
117e : f003            >        beq skip0916
                       >        trap            ;failed not equal (non zero)
1180 : 209831          >        jsr report_error
                       >
1183 :                 >skip0916
                       >
1183 : 28              >            plp         ;restore status
                       >
1184 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1186 : f003            >        beq skip0918
                       >        trap            ;failed not equal (non zero)
1188 : 209831          >        jsr report_error
                       >
118b :                 >skip0918
                       >
118b : e000            >            cpx #0
                       >            trap_ne         ;x changed
118d : f003            >        beq skip0920
                       >        trap            ;failed not equal (non zero)
118f : 209831          >        jsr report_error
                       >
1192 :                 >skip0920
                       >
                        
                                nop_test $5c,3
1192 : a042            >            ldy #$42
1194 : a201            >            ldx #4-3
1196 : 5c              >            db  $5c          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
1197 : c8              >            iny
1198 : c8              >            iny
                       >        endif
1199 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
119a : f003            >        beq skip0923
                       >        trap            ;failed not equal (non zero)
119c : 209831          >        jsr report_error
                       >
119f :                 >skip0923
                       >
                       >            set_a $ff-$5c,0
                       >            load_flag 0
119f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
11a1 : 48              >            pha         ;use stack to load status
11a2 : a9a3            >            lda #$ff-$5c     ;precharge accu
11a4 : 28              >            plp
                       >
11a5 : 5c              >            db  $5c          ;test nop integrity - flags off
11a6 : ea              >            nop
11a7 : ea              >            nop
                       >            tst_a $ff-$5c,0
11a8 : 08              >            php         ;save flags
11a9 : 08              >            php
11aa : c9a3            >            cmp #$ff-$5c     ;test result
                       >            trap_ne
11ac : f003            >        beq skip0928
                       >        trap            ;failed not equal (non zero)
11ae : 209831          >        jsr report_error
                       >
11b1 :                 >skip0928
                       >
11b1 : 68              >            pla         ;load status
                       >            cmp_flag 0
11b2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
11b4 : f003            >        beq skip0931
                       >        trap            ;failed not equal (non zero)
11b6 : 209831          >        jsr report_error
                       >
11b9 :                 >skip0931
                       >
11b9 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$5c,$ff
                       >            load_flag $ff
11ba : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
11bc : 48              >            pha         ;use stack to load status
11bd : a94e            >            lda #$aa-$5c     ;precharge accu
11bf : 28              >            plp
                       >
11c0 : 5c              >            db  $5c          ;test nop integrity - flags on
11c1 : ea              >            nop
11c2 : ea              >            nop
                       >            tst_a $aa-$5c,$ff
11c3 : 08              >            php         ;save flags
11c4 : 08              >            php
11c5 : c94e            >            cmp #$aa-$5c     ;test result
                       >            trap_ne
11c7 : f003            >        beq skip0936
                       >        trap            ;failed not equal (non zero)
11c9 : 209831          >        jsr report_error
                       >
11cc :                 >skip0936
                       >
11cc : 68              >            pla         ;load status
                       >            cmp_flag $ff
11cd : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
11cf : f003            >        beq skip0939
                       >        trap            ;failed not equal (non zero)
11d1 : 209831          >        jsr report_error
                       >
11d4 :                 >skip0939
                       >
11d4 : 28              >            plp         ;restore status
                       >
11d5 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
11d7 : f003            >        beq skip0941
                       >        trap            ;failed not equal (non zero)
11d9 : 209831          >        jsr report_error
                       >
11dc :                 >skip0941
                       >
11dc : e000            >            cpx #0
                       >            trap_ne         ;x changed
11de : f003            >        beq skip0943
                       >        trap            ;failed not equal (non zero)
11e0 : 209831          >        jsr report_error
                       >
11e3 :                 >skip0943
                       >
                        
                                nop_test $dc,3
11e3 : a042            >            ldy #$42
11e5 : a201            >            ldx #4-3
11e7 : dc              >            db  $dc          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
11e8 : c8              >            iny
11e9 : c8              >            iny
                       >        endif
11ea : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
11eb : f003            >        beq skip0946
                       >        trap            ;failed not equal (non zero)
11ed : 209831          >        jsr report_error
                       >
11f0 :                 >skip0946
                       >
                       >            set_a $ff-$dc,0
                       >            load_flag 0
11f0 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
11f2 : 48              >            pha         ;use stack to load status
11f3 : a923            >            lda #$ff-$dc     ;precharge accu
11f5 : 28              >            plp
                       >
11f6 : dc              >            db  $dc          ;test nop integrity - flags off
11f7 : ea              >            nop
11f8 : ea              >            nop
                       >            tst_a $ff-$dc,0
11f9 : 08              >            php         ;save flags
11fa : 08              >            php
11fb : c923            >            cmp #$ff-$dc     ;test result
                       >            trap_ne
11fd : f003            >        beq skip0951
                       >        trap            ;failed not equal (non zero)
11ff : 209831          >        jsr report_error
                       >
1202 :                 >skip0951
                       >
1202 : 68              >            pla         ;load status
                       >            cmp_flag 0
1203 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1205 : f003            >        beq skip0954
                       >        trap            ;failed not equal (non zero)
1207 : 209831          >        jsr report_error
                       >
120a :                 >skip0954
                       >
120a : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$dc,$ff
                       >            load_flag $ff
120b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
120d : 48              >            pha         ;use stack to load status
120e : a9ce            >            lda #$aa-$dc     ;precharge accu
1210 : 28              >            plp
                       >
1211 : dc              >            db  $dc          ;test nop integrity - flags on
1212 : ea              >            nop
1213 : ea              >            nop
                       >            tst_a $aa-$dc,$ff
1214 : 08              >            php         ;save flags
1215 : 08              >            php
1216 : c9ce            >            cmp #$aa-$dc     ;test result
                       >            trap_ne
1218 : f003            >        beq skip0959
                       >        trap            ;failed not equal (non zero)
121a : 209831          >        jsr report_error
                       >
121d :                 >skip0959
                       >
121d : 68              >            pla         ;load status
                       >            cmp_flag $ff
121e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1220 : f003            >        beq skip0962
                       >        trap            ;failed not equal (non zero)
1222 : 209831          >        jsr report_error
                       >
1225 :                 >skip0962
                       >
1225 : 28              >            plp         ;restore status
                       >
1226 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1228 : f003            >        beq skip0964
                       >        trap            ;failed not equal (non zero)
122a : 209831          >        jsr report_error
                       >
122d :                 >skip0964
                       >
122d : e000            >            cpx #0
                       >            trap_ne         ;x changed
122f : f003            >        beq skip0966
                       >        trap            ;failed not equal (non zero)
1231 : 209831          >        jsr report_error
                       >
1234 :                 >skip0966
                       >
                        
                                nop_test $fc,3
1234 : a042            >            ldy #$42
1236 : a201            >            ldx #4-3
1238 : fc              >            db  $fc          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
1239 : c8              >            iny
123a : c8              >            iny
                       >        endif
123b : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
123c : f003            >        beq skip0969
                       >        trap            ;failed not equal (non zero)
123e : 209831          >        jsr report_error
                       >
1241 :                 >skip0969
                       >
                       >            set_a $ff-$fc,0
                       >            load_flag 0
1241 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1243 : 48              >            pha         ;use stack to load status
1244 : a903            >            lda #$ff-$fc     ;precharge accu
1246 : 28              >            plp
                       >
1247 : fc              >            db  $fc          ;test nop integrity - flags off
1248 : ea              >            nop
1249 : ea              >            nop
                       >            tst_a $ff-$fc,0
124a : 08              >            php         ;save flags
124b : 08              >            php
124c : c903            >            cmp #$ff-$fc     ;test result
                       >            trap_ne
124e : f003            >        beq skip0974
                       >        trap            ;failed not equal (non zero)
1250 : 209831          >        jsr report_error
                       >
1253 :                 >skip0974
                       >
1253 : 68              >            pla         ;load status
                       >            cmp_flag 0
1254 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1256 : f003            >        beq skip0977
                       >        trap            ;failed not equal (non zero)
1258 : 209831          >        jsr report_error
                       >
125b :                 >skip0977
                       >
125b : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$fc,$ff
                       >            load_flag $ff
125c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
125e : 48              >            pha         ;use stack to load status
125f : a9ae            >            lda #$aa-$fc     ;precharge accu
1261 : 28              >            plp
                       >
1262 : fc              >            db  $fc          ;test nop integrity - flags on
1263 : ea              >            nop
1264 : ea              >            nop
                       >            tst_a $aa-$fc,$ff
1265 : 08              >            php         ;save flags
1266 : 08              >            php
1267 : c9ae            >            cmp #$aa-$fc     ;test result
                       >            trap_ne
1269 : f003            >        beq skip0982
                       >        trap            ;failed not equal (non zero)
126b : 209831          >        jsr report_error
                       >
126e :                 >skip0982
                       >
126e : 68              >            pla         ;load status
                       >            cmp_flag $ff
126f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1271 : f003            >        beq skip0985
                       >        trap            ;failed not equal (non zero)
1273 : 209831          >        jsr report_error
                       >
1276 :                 >skip0985
                       >
1276 : 28              >            plp         ;restore status
                       >
1277 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1279 : f003            >        beq skip0987
                       >        trap            ;failed not equal (non zero)
127b : 209831          >        jsr report_error
                       >
127e :                 >skip0987
                       >
127e : e000            >            cpx #0
                       >            trap_ne         ;x changed
1280 : f003            >        beq skip0989
                       >        trap            ;failed not equal (non zero)
1282 : 209831          >        jsr report_error
                       >
1285 :                 >skip0989
                       >
                        
                                nop_test $03,1
1285 : a042            >            ldy #$42
1287 : a203            >            ldx #4-1
1289 : 03              >            db  $03          ;test nop length
                       >        if 1 = 1
128a : ca              >            dex
128b : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
128c : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
128d : f003            >        beq skip0992
                       >        trap            ;failed not equal (non zero)
128f : 209831          >        jsr report_error
                       >
1292 :                 >skip0992
                       >
                       >            set_a $ff-$03,0
                       >            load_flag 0
1292 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1294 : 48              >            pha         ;use stack to load status
1295 : a9fc            >            lda #$ff-$03     ;precharge accu
1297 : 28              >            plp
                       >
1298 : 03              >            db  $03          ;test nop integrity - flags off
1299 : ea              >            nop
129a : ea              >            nop
                       >            tst_a $ff-$03,0
129b : 08              >            php         ;save flags
129c : 08              >            php
129d : c9fc            >            cmp #$ff-$03     ;test result
                       >            trap_ne
129f : f003            >        beq skip0997
                       >        trap            ;failed not equal (non zero)
12a1 : 209831          >        jsr report_error
                       >
12a4 :                 >skip0997
                       >
12a4 : 68              >            pla         ;load status
                       >            cmp_flag 0
12a5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
12a7 : f003            >        beq skip1000
                       >        trap            ;failed not equal (non zero)
12a9 : 209831          >        jsr report_error
                       >
12ac :                 >skip1000
                       >
12ac : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$03,$ff
                       >            load_flag $ff
12ad : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
12af : 48              >            pha         ;use stack to load status
12b0 : a9a7            >            lda #$aa-$03     ;precharge accu
12b2 : 28              >            plp
                       >
12b3 : 03              >            db  $03          ;test nop integrity - flags on
12b4 : ea              >            nop
12b5 : ea              >            nop
                       >            tst_a $aa-$03,$ff
12b6 : 08              >            php         ;save flags
12b7 : 08              >            php
12b8 : c9a7            >            cmp #$aa-$03     ;test result
                       >            trap_ne
12ba : f003            >        beq skip1005
                       >        trap            ;failed not equal (non zero)
12bc : 209831          >        jsr report_error
                       >
12bf :                 >skip1005
                       >
12bf : 68              >            pla         ;load status
                       >            cmp_flag $ff
12c0 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
12c2 : f003            >        beq skip1008
                       >        trap            ;failed not equal (non zero)
12c4 : 209831          >        jsr report_error
                       >
12c7 :                 >skip1008
                       >
12c7 : 28              >            plp         ;restore status
                       >
12c8 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
12ca : f003            >        beq skip1010
                       >        trap            ;failed not equal (non zero)
12cc : 209831          >        jsr report_error
                       >
12cf :                 >skip1010
                       >
12cf : e000            >            cpx #0
                       >            trap_ne         ;x changed
12d1 : f003            >        beq skip1012
                       >        trap            ;failed not equal (non zero)
12d3 : 209831          >        jsr report_error
                       >
12d6 :                 >skip1012
                       >
                        
                                nop_test $13,1
12d6 : a042            >            ldy #$42
12d8 : a203            >            ldx #4-1
12da : 13              >            db  $13          ;test nop length
                       >        if 1 = 1
12db : ca              >            dex
12dc : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
12dd : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
12de : f003            >        beq skip1015
                       >        trap            ;failed not equal (non zero)
12e0 : 209831          >        jsr report_error
                       >
12e3 :                 >skip1015
                       >
                       >            set_a $ff-$13,0
                       >            load_flag 0
12e3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
12e5 : 48              >            pha         ;use stack to load status
12e6 : a9ec            >            lda #$ff-$13     ;precharge accu
12e8 : 28              >            plp
                       >
12e9 : 13              >            db  $13          ;test nop integrity - flags off
12ea : ea              >            nop
12eb : ea              >            nop
                       >            tst_a $ff-$13,0
12ec : 08              >            php         ;save flags
12ed : 08              >            php
12ee : c9ec            >            cmp #$ff-$13     ;test result
                       >            trap_ne
12f0 : f003            >        beq skip1020
                       >        trap            ;failed not equal (non zero)
12f2 : 209831          >        jsr report_error
                       >
12f5 :                 >skip1020
                       >
12f5 : 68              >            pla         ;load status
                       >            cmp_flag 0
12f6 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
12f8 : f003            >        beq skip1023
                       >        trap            ;failed not equal (non zero)
12fa : 209831          >        jsr report_error
                       >
12fd :                 >skip1023
                       >
12fd : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$13,$ff
                       >            load_flag $ff
12fe : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1300 : 48              >            pha         ;use stack to load status
1301 : a997            >            lda #$aa-$13     ;precharge accu
1303 : 28              >            plp
                       >
1304 : 13              >            db  $13          ;test nop integrity - flags on
1305 : ea              >            nop
1306 : ea              >            nop
                       >            tst_a $aa-$13,$ff
1307 : 08              >            php         ;save flags
1308 : 08              >            php
1309 : c997            >            cmp #$aa-$13     ;test result
                       >            trap_ne
130b : f003            >        beq skip1028
                       >        trap            ;failed not equal (non zero)
130d : 209831          >        jsr report_error
                       >
1310 :                 >skip1028
                       >
1310 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1311 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1313 : f003            >        beq skip1031
                       >        trap            ;failed not equal (non zero)
1315 : 209831          >        jsr report_error
                       >
1318 :                 >skip1031
                       >
1318 : 28              >            plp         ;restore status
                       >
1319 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
131b : f003            >        beq skip1033
                       >        trap            ;failed not equal (non zero)
131d : 209831          >        jsr report_error
                       >
1320 :                 >skip1033
                       >
1320 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1322 : f003            >        beq skip1035
                       >        trap            ;failed not equal (non zero)
1324 : 209831          >        jsr report_error
                       >
1327 :                 >skip1035
                       >
                        
                                nop_test $23,1
1327 : a042            >            ldy #$42
1329 : a203            >            ldx #4-1
132b : 23              >            db  $23          ;test nop length
                       >        if 1 = 1
132c : ca              >            dex
132d : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
132e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
132f : f003            >        beq skip1038
                       >        trap            ;failed not equal (non zero)
1331 : 209831          >        jsr report_error
                       >
1334 :                 >skip1038
                       >
                       >            set_a $ff-$23,0
                       >            load_flag 0
1334 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1336 : 48              >            pha         ;use stack to load status
1337 : a9dc            >            lda #$ff-$23     ;precharge accu
1339 : 28              >            plp
                       >
133a : 23              >            db  $23          ;test nop integrity - flags off
133b : ea              >            nop
133c : ea              >            nop
                       >            tst_a $ff-$23,0
133d : 08              >            php         ;save flags
133e : 08              >            php
133f : c9dc            >            cmp #$ff-$23     ;test result
                       >            trap_ne
1341 : f003            >        beq skip1043
                       >        trap            ;failed not equal (non zero)
1343 : 209831          >        jsr report_error
                       >
1346 :                 >skip1043
                       >
1346 : 68              >            pla         ;load status
                       >            cmp_flag 0
1347 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1349 : f003            >        beq skip1046
                       >        trap            ;failed not equal (non zero)
134b : 209831          >        jsr report_error
                       >
134e :                 >skip1046
                       >
134e : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$23,$ff
                       >            load_flag $ff
134f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1351 : 48              >            pha         ;use stack to load status
1352 : a987            >            lda #$aa-$23     ;precharge accu
1354 : 28              >            plp
                       >
1355 : 23              >            db  $23          ;test nop integrity - flags on
1356 : ea              >            nop
1357 : ea              >            nop
                       >            tst_a $aa-$23,$ff
1358 : 08              >            php         ;save flags
1359 : 08              >            php
135a : c987            >            cmp #$aa-$23     ;test result
                       >            trap_ne
135c : f003            >        beq skip1051
                       >        trap            ;failed not equal (non zero)
135e : 209831          >        jsr report_error
                       >
1361 :                 >skip1051
                       >
1361 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1362 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1364 : f003            >        beq skip1054
                       >        trap            ;failed not equal (non zero)
1366 : 209831          >        jsr report_error
                       >
1369 :                 >skip1054
                       >
1369 : 28              >            plp         ;restore status
                       >
136a : c042            >            cpy #$42
                       >            trap_ne         ;y changed
136c : f003            >        beq skip1056
                       >        trap            ;failed not equal (non zero)
136e : 209831          >        jsr report_error
                       >
1371 :                 >skip1056
                       >
1371 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1373 : f003            >        beq skip1058
                       >        trap            ;failed not equal (non zero)
1375 : 209831          >        jsr report_error
                       >
1378 :                 >skip1058
                       >
                        
                                nop_test $33,1
1378 : a042            >            ldy #$42
137a : a203            >            ldx #4-1
137c : 33              >            db  $33          ;test nop length
                       >        if 1 = 1
137d : ca              >            dex
137e : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
137f : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1380 : f003            >        beq skip1061
                       >        trap            ;failed not equal (non zero)
1382 : 209831          >        jsr report_error
                       >
1385 :                 >skip1061
                       >
                       >            set_a $ff-$33,0
                       >            load_flag 0
1385 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1387 : 48              >            pha         ;use stack to load status
1388 : a9cc            >            lda #$ff-$33     ;precharge accu
138a : 28              >            plp
                       >
138b : 33              >            db  $33          ;test nop integrity - flags off
138c : ea              >            nop
138d : ea              >            nop
                       >            tst_a $ff-$33,0
138e : 08              >            php         ;save flags
138f : 08              >            php
1390 : c9cc            >            cmp #$ff-$33     ;test result
                       >            trap_ne
1392 : f003            >        beq skip1066
                       >        trap            ;failed not equal (non zero)
1394 : 209831          >        jsr report_error
                       >
1397 :                 >skip1066
                       >
1397 : 68              >            pla         ;load status
                       >            cmp_flag 0
1398 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
139a : f003            >        beq skip1069
                       >        trap            ;failed not equal (non zero)
139c : 209831          >        jsr report_error
                       >
139f :                 >skip1069
                       >
139f : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$33,$ff
                       >            load_flag $ff
13a0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
13a2 : 48              >            pha         ;use stack to load status
13a3 : a977            >            lda #$aa-$33     ;precharge accu
13a5 : 28              >            plp
                       >
13a6 : 33              >            db  $33          ;test nop integrity - flags on
13a7 : ea              >            nop
13a8 : ea              >            nop
                       >            tst_a $aa-$33,$ff
13a9 : 08              >            php         ;save flags
13aa : 08              >            php
13ab : c977            >            cmp #$aa-$33     ;test result
                       >            trap_ne
13ad : f003            >        beq skip1074
                       >        trap            ;failed not equal (non zero)
13af : 209831          >        jsr report_error
                       >
13b2 :                 >skip1074
                       >
13b2 : 68              >            pla         ;load status
                       >            cmp_flag $ff
13b3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
13b5 : f003            >        beq skip1077
                       >        trap            ;failed not equal (non zero)
13b7 : 209831          >        jsr report_error
                       >
13ba :                 >skip1077
                       >
13ba : 28              >            plp         ;restore status
                       >
13bb : c042            >            cpy #$42
                       >            trap_ne         ;y changed
13bd : f003            >        beq skip1079
                       >        trap            ;failed not equal (non zero)
13bf : 209831          >        jsr report_error
                       >
13c2 :                 >skip1079
                       >
13c2 : e000            >            cpx #0
                       >            trap_ne         ;x changed
13c4 : f003            >        beq skip1081
                       >        trap            ;failed not equal (non zero)
13c6 : 209831          >        jsr report_error
                       >
13c9 :                 >skip1081
                       >
                        
                                nop_test $43,1
13c9 : a042            >            ldy #$42
13cb : a203            >            ldx #4-1
13cd : 43              >            db  $43          ;test nop length
                       >        if 1 = 1
13ce : ca              >            dex
13cf : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
13d0 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
13d1 : f003            >        beq skip1084
                       >        trap            ;failed not equal (non zero)
13d3 : 209831          >        jsr report_error
                       >
13d6 :                 >skip1084
                       >
                       >            set_a $ff-$43,0
                       >            load_flag 0
13d6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
13d8 : 48              >            pha         ;use stack to load status
13d9 : a9bc            >            lda #$ff-$43     ;precharge accu
13db : 28              >            plp
                       >
13dc : 43              >            db  $43          ;test nop integrity - flags off
13dd : ea              >            nop
13de : ea              >            nop
                       >            tst_a $ff-$43,0
13df : 08              >            php         ;save flags
13e0 : 08              >            php
13e1 : c9bc            >            cmp #$ff-$43     ;test result
                       >            trap_ne
13e3 : f003            >        beq skip1089
                       >        trap            ;failed not equal (non zero)
13e5 : 209831          >        jsr report_error
                       >
13e8 :                 >skip1089
                       >
13e8 : 68              >            pla         ;load status
                       >            cmp_flag 0
13e9 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
13eb : f003            >        beq skip1092
                       >        trap            ;failed not equal (non zero)
13ed : 209831          >        jsr report_error
                       >
13f0 :                 >skip1092
                       >
13f0 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$43,$ff
                       >            load_flag $ff
13f1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
13f3 : 48              >            pha         ;use stack to load status
13f4 : a967            >            lda #$aa-$43     ;precharge accu
13f6 : 28              >            plp
                       >
13f7 : 43              >            db  $43          ;test nop integrity - flags on
13f8 : ea              >            nop
13f9 : ea              >            nop
                       >            tst_a $aa-$43,$ff
13fa : 08              >            php         ;save flags
13fb : 08              >            php
13fc : c967            >            cmp #$aa-$43     ;test result
                       >            trap_ne
13fe : f003            >        beq skip1097
                       >        trap            ;failed not equal (non zero)
1400 : 209831          >        jsr report_error
                       >
1403 :                 >skip1097
                       >
1403 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1404 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1406 : f003            >        beq skip1100
                       >        trap            ;failed not equal (non zero)
1408 : 209831          >        jsr report_error
                       >
140b :                 >skip1100
                       >
140b : 28              >            plp         ;restore status
                       >
140c : c042            >            cpy #$42
                       >            trap_ne         ;y changed
140e : f003            >        beq skip1102
                       >        trap            ;failed not equal (non zero)
1410 : 209831          >        jsr report_error
                       >
1413 :                 >skip1102
                       >
1413 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1415 : f003            >        beq skip1104
                       >        trap            ;failed not equal (non zero)
1417 : 209831          >        jsr report_error
                       >
141a :                 >skip1104
                       >
                        
                                nop_test $53,1
141a : a042            >            ldy #$42
141c : a203            >            ldx #4-1
141e : 53              >            db  $53          ;test nop length
                       >        if 1 = 1
141f : ca              >            dex
1420 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1421 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1422 : f003            >        beq skip1107
                       >        trap            ;failed not equal (non zero)
1424 : 209831          >        jsr report_error
                       >
1427 :                 >skip1107
                       >
                       >            set_a $ff-$53,0
                       >            load_flag 0
1427 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1429 : 48              >            pha         ;use stack to load status
142a : a9ac            >            lda #$ff-$53     ;precharge accu
142c : 28              >            plp
                       >
142d : 53              >            db  $53          ;test nop integrity - flags off
142e : ea              >            nop
142f : ea              >            nop
                       >            tst_a $ff-$53,0
1430 : 08              >            php         ;save flags
1431 : 08              >            php
1432 : c9ac            >            cmp #$ff-$53     ;test result
                       >            trap_ne
1434 : f003            >        beq skip1112
                       >        trap            ;failed not equal (non zero)
1436 : 209831          >        jsr report_error
                       >
1439 :                 >skip1112
                       >
1439 : 68              >            pla         ;load status
                       >            cmp_flag 0
143a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
143c : f003            >        beq skip1115
                       >        trap            ;failed not equal (non zero)
143e : 209831          >        jsr report_error
                       >
1441 :                 >skip1115
                       >
1441 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$53,$ff
                       >            load_flag $ff
1442 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1444 : 48              >            pha         ;use stack to load status
1445 : a957            >            lda #$aa-$53     ;precharge accu
1447 : 28              >            plp
                       >
1448 : 53              >            db  $53          ;test nop integrity - flags on
1449 : ea              >            nop
144a : ea              >            nop
                       >            tst_a $aa-$53,$ff
144b : 08              >            php         ;save flags
144c : 08              >            php
144d : c957            >            cmp #$aa-$53     ;test result
                       >            trap_ne
144f : f003            >        beq skip1120
                       >        trap            ;failed not equal (non zero)
1451 : 209831          >        jsr report_error
                       >
1454 :                 >skip1120
                       >
1454 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1455 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1457 : f003            >        beq skip1123
                       >        trap            ;failed not equal (non zero)
1459 : 209831          >        jsr report_error
                       >
145c :                 >skip1123
                       >
145c : 28              >            plp         ;restore status
                       >
145d : c042            >            cpy #$42
                       >            trap_ne         ;y changed
145f : f003            >        beq skip1125
                       >        trap            ;failed not equal (non zero)
1461 : 209831          >        jsr report_error
                       >
1464 :                 >skip1125
                       >
1464 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1466 : f003            >        beq skip1127
                       >        trap            ;failed not equal (non zero)
1468 : 209831          >        jsr report_error
                       >
146b :                 >skip1127
                       >
                        
                                nop_test $63,1
146b : a042            >            ldy #$42
146d : a203            >            ldx #4-1
146f : 63              >            db  $63          ;test nop length
                       >        if 1 = 1
1470 : ca              >            dex
1471 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1472 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1473 : f003            >        beq skip1130
                       >        trap            ;failed not equal (non zero)
1475 : 209831          >        jsr report_error
                       >
1478 :                 >skip1130
                       >
                       >            set_a $ff-$63,0
                       >            load_flag 0
1478 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
147a : 48              >            pha         ;use stack to load status
147b : a99c            >            lda #$ff-$63     ;precharge accu
147d : 28              >            plp
                       >
147e : 63              >            db  $63          ;test nop integrity - flags off
147f : ea              >            nop
1480 : ea              >            nop
                       >            tst_a $ff-$63,0
1481 : 08              >            php         ;save flags
1482 : 08              >            php
1483 : c99c            >            cmp #$ff-$63     ;test result
                       >            trap_ne
1485 : f003            >        beq skip1135
                       >        trap            ;failed not equal (non zero)
1487 : 209831          >        jsr report_error
                       >
148a :                 >skip1135
                       >
148a : 68              >            pla         ;load status
                       >            cmp_flag 0
148b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
148d : f003            >        beq skip1138
                       >        trap            ;failed not equal (non zero)
148f : 209831          >        jsr report_error
                       >
1492 :                 >skip1138
                       >
1492 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$63,$ff
                       >            load_flag $ff
1493 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1495 : 48              >            pha         ;use stack to load status
1496 : a947            >            lda #$aa-$63     ;precharge accu
1498 : 28              >            plp
                       >
1499 : 63              >            db  $63          ;test nop integrity - flags on
149a : ea              >            nop
149b : ea              >            nop
                       >            tst_a $aa-$63,$ff
149c : 08              >            php         ;save flags
149d : 08              >            php
149e : c947            >            cmp #$aa-$63     ;test result
                       >            trap_ne
14a0 : f003            >        beq skip1143
                       >        trap            ;failed not equal (non zero)
14a2 : 209831          >        jsr report_error
                       >
14a5 :                 >skip1143
                       >
14a5 : 68              >            pla         ;load status
                       >            cmp_flag $ff
14a6 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
14a8 : f003            >        beq skip1146
                       >        trap            ;failed not equal (non zero)
14aa : 209831          >        jsr report_error
                       >
14ad :                 >skip1146
                       >
14ad : 28              >            plp         ;restore status
                       >
14ae : c042            >            cpy #$42
                       >            trap_ne         ;y changed
14b0 : f003            >        beq skip1148
                       >        trap            ;failed not equal (non zero)
14b2 : 209831          >        jsr report_error
                       >
14b5 :                 >skip1148
                       >
14b5 : e000            >            cpx #0
                       >            trap_ne         ;x changed
14b7 : f003            >        beq skip1150
                       >        trap            ;failed not equal (non zero)
14b9 : 209831          >        jsr report_error
                       >
14bc :                 >skip1150
                       >
                        
                                nop_test $73,1
14bc : a042            >            ldy #$42
14be : a203            >            ldx #4-1
14c0 : 73              >            db  $73          ;test nop length
                       >        if 1 = 1
14c1 : ca              >            dex
14c2 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
14c3 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
14c4 : f003            >        beq skip1153
                       >        trap            ;failed not equal (non zero)
14c6 : 209831          >        jsr report_error
                       >
14c9 :                 >skip1153
                       >
                       >            set_a $ff-$73,0
                       >            load_flag 0
14c9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
14cb : 48              >            pha         ;use stack to load status
14cc : a98c            >            lda #$ff-$73     ;precharge accu
14ce : 28              >            plp
                       >
14cf : 73              >            db  $73          ;test nop integrity - flags off
14d0 : ea              >            nop
14d1 : ea              >            nop
                       >            tst_a $ff-$73,0
14d2 : 08              >            php         ;save flags
14d3 : 08              >            php
14d4 : c98c            >            cmp #$ff-$73     ;test result
                       >            trap_ne
14d6 : f003            >        beq skip1158
                       >        trap            ;failed not equal (non zero)
14d8 : 209831          >        jsr report_error
                       >
14db :                 >skip1158
                       >
14db : 68              >            pla         ;load status
                       >            cmp_flag 0
14dc : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
14de : f003            >        beq skip1161
                       >        trap            ;failed not equal (non zero)
14e0 : 209831          >        jsr report_error
                       >
14e3 :                 >skip1161
                       >
14e3 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$73,$ff
                       >            load_flag $ff
14e4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
14e6 : 48              >            pha         ;use stack to load status
14e7 : a937            >            lda #$aa-$73     ;precharge accu
14e9 : 28              >            plp
                       >
14ea : 73              >            db  $73          ;test nop integrity - flags on
14eb : ea              >            nop
14ec : ea              >            nop
                       >            tst_a $aa-$73,$ff
14ed : 08              >            php         ;save flags
14ee : 08              >            php
14ef : c937            >            cmp #$aa-$73     ;test result
                       >            trap_ne
14f1 : f003            >        beq skip1166
                       >        trap            ;failed not equal (non zero)
14f3 : 209831          >        jsr report_error
                       >
14f6 :                 >skip1166
                       >
14f6 : 68              >            pla         ;load status
                       >            cmp_flag $ff
14f7 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
14f9 : f003            >        beq skip1169
                       >        trap            ;failed not equal (non zero)
14fb : 209831          >        jsr report_error
                       >
14fe :                 >skip1169
                       >
14fe : 28              >            plp         ;restore status
                       >
14ff : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1501 : f003            >        beq skip1171
                       >        trap            ;failed not equal (non zero)
1503 : 209831          >        jsr report_error
                       >
1506 :                 >skip1171
                       >
1506 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1508 : f003            >        beq skip1173
                       >        trap            ;failed not equal (non zero)
150a : 209831          >        jsr report_error
                       >
150d :                 >skip1173
                       >
                        
                                nop_test $83,1
150d : a042            >            ldy #$42
150f : a203            >            ldx #4-1
1511 : 83              >            db  $83          ;test nop length
                       >        if 1 = 1
1512 : ca              >            dex
1513 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1514 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1515 : f003            >        beq skip1176
                       >        trap            ;failed not equal (non zero)
1517 : 209831          >        jsr report_error
                       >
151a :                 >skip1176
                       >
                       >            set_a $ff-$83,0
                       >            load_flag 0
151a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
151c : 48              >            pha         ;use stack to load status
151d : a97c            >            lda #$ff-$83     ;precharge accu
151f : 28              >            plp
                       >
1520 : 83              >            db  $83          ;test nop integrity - flags off
1521 : ea              >            nop
1522 : ea              >            nop
                       >            tst_a $ff-$83,0
1523 : 08              >            php         ;save flags
1524 : 08              >            php
1525 : c97c            >            cmp #$ff-$83     ;test result
                       >            trap_ne
1527 : f003            >        beq skip1181
                       >        trap            ;failed not equal (non zero)
1529 : 209831          >        jsr report_error
                       >
152c :                 >skip1181
                       >
152c : 68              >            pla         ;load status
                       >            cmp_flag 0
152d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
152f : f003            >        beq skip1184
                       >        trap            ;failed not equal (non zero)
1531 : 209831          >        jsr report_error
                       >
1534 :                 >skip1184
                       >
1534 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$83,$ff
                       >            load_flag $ff
1535 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1537 : 48              >            pha         ;use stack to load status
1538 : a927            >            lda #$aa-$83     ;precharge accu
153a : 28              >            plp
                       >
153b : 83              >            db  $83          ;test nop integrity - flags on
153c : ea              >            nop
153d : ea              >            nop
                       >            tst_a $aa-$83,$ff
153e : 08              >            php         ;save flags
153f : 08              >            php
1540 : c927            >            cmp #$aa-$83     ;test result
                       >            trap_ne
1542 : f003            >        beq skip1189
                       >        trap            ;failed not equal (non zero)
1544 : 209831          >        jsr report_error
                       >
1547 :                 >skip1189
                       >
1547 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1548 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
154a : f003            >        beq skip1192
                       >        trap            ;failed not equal (non zero)
154c : 209831          >        jsr report_error
                       >
154f :                 >skip1192
                       >
154f : 28              >            plp         ;restore status
                       >
1550 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1552 : f003            >        beq skip1194
                       >        trap            ;failed not equal (non zero)
1554 : 209831          >        jsr report_error
                       >
1557 :                 >skip1194
                       >
1557 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1559 : f003            >        beq skip1196
                       >        trap            ;failed not equal (non zero)
155b : 209831          >        jsr report_error
                       >
155e :                 >skip1196
                       >
                        
                                nop_test $93,1
155e : a042            >            ldy #$42
1560 : a203            >            ldx #4-1
1562 : 93              >            db  $93          ;test nop length
                       >        if 1 = 1
1563 : ca              >            dex
1564 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1565 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1566 : f003            >        beq skip1199
                       >        trap            ;failed not equal (non zero)
1568 : 209831          >        jsr report_error
                       >
156b :                 >skip1199
                       >
                       >            set_a $ff-$93,0
                       >            load_flag 0
156b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
156d : 48              >            pha         ;use stack to load status
156e : a96c            >            lda #$ff-$93     ;precharge accu
1570 : 28              >            plp
                       >
1571 : 93              >            db  $93          ;test nop integrity - flags off
1572 : ea              >            nop
1573 : ea              >            nop
                       >            tst_a $ff-$93,0
1574 : 08              >            php         ;save flags
1575 : 08              >            php
1576 : c96c            >            cmp #$ff-$93     ;test result
                       >            trap_ne
1578 : f003            >        beq skip1204
                       >        trap            ;failed not equal (non zero)
157a : 209831          >        jsr report_error
                       >
157d :                 >skip1204
                       >
157d : 68              >            pla         ;load status
                       >            cmp_flag 0
157e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1580 : f003            >        beq skip1207
                       >        trap            ;failed not equal (non zero)
1582 : 209831          >        jsr report_error
                       >
1585 :                 >skip1207
                       >
1585 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$93,$ff
                       >            load_flag $ff
1586 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1588 : 48              >            pha         ;use stack to load status
1589 : a917            >            lda #$aa-$93     ;precharge accu
158b : 28              >            plp
                       >
158c : 93              >            db  $93          ;test nop integrity - flags on
158d : ea              >            nop
158e : ea              >            nop
                       >            tst_a $aa-$93,$ff
158f : 08              >            php         ;save flags
1590 : 08              >            php
1591 : c917            >            cmp #$aa-$93     ;test result
                       >            trap_ne
1593 : f003            >        beq skip1212
                       >        trap            ;failed not equal (non zero)
1595 : 209831          >        jsr report_error
                       >
1598 :                 >skip1212
                       >
1598 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1599 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
159b : f003            >        beq skip1215
                       >        trap            ;failed not equal (non zero)
159d : 209831          >        jsr report_error
                       >
15a0 :                 >skip1215
                       >
15a0 : 28              >            plp         ;restore status
                       >
15a1 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
15a3 : f003            >        beq skip1217
                       >        trap            ;failed not equal (non zero)
15a5 : 209831          >        jsr report_error
                       >
15a8 :                 >skip1217
                       >
15a8 : e000            >            cpx #0
                       >            trap_ne         ;x changed
15aa : f003            >        beq skip1219
                       >        trap            ;failed not equal (non zero)
15ac : 209831          >        jsr report_error
                       >
15af :                 >skip1219
                       >
                        
                                nop_test $a3,1
15af : a042            >            ldy #$42
15b1 : a203            >            ldx #4-1
15b3 : a3              >            db  $a3          ;test nop length
                       >        if 1 = 1
15b4 : ca              >            dex
15b5 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
15b6 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
15b7 : f003            >        beq skip1222
                       >        trap            ;failed not equal (non zero)
15b9 : 209831          >        jsr report_error
                       >
15bc :                 >skip1222
                       >
                       >            set_a $ff-$a3,0
                       >            load_flag 0
15bc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
15be : 48              >            pha         ;use stack to load status
15bf : a95c            >            lda #$ff-$a3     ;precharge accu
15c1 : 28              >            plp
                       >
15c2 : a3              >            db  $a3          ;test nop integrity - flags off
15c3 : ea              >            nop
15c4 : ea              >            nop
                       >            tst_a $ff-$a3,0
15c5 : 08              >            php         ;save flags
15c6 : 08              >            php
15c7 : c95c            >            cmp #$ff-$a3     ;test result
                       >            trap_ne
15c9 : f003            >        beq skip1227
                       >        trap            ;failed not equal (non zero)
15cb : 209831          >        jsr report_error
                       >
15ce :                 >skip1227
                       >
15ce : 68              >            pla         ;load status
                       >            cmp_flag 0
15cf : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
15d1 : f003            >        beq skip1230
                       >        trap            ;failed not equal (non zero)
15d3 : 209831          >        jsr report_error
                       >
15d6 :                 >skip1230
                       >
15d6 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$a3,$ff
                       >            load_flag $ff
15d7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
15d9 : 48              >            pha         ;use stack to load status
15da : a907            >            lda #$aa-$a3     ;precharge accu
15dc : 28              >            plp
                       >
15dd : a3              >            db  $a3          ;test nop integrity - flags on
15de : ea              >            nop
15df : ea              >            nop
                       >            tst_a $aa-$a3,$ff
15e0 : 08              >            php         ;save flags
15e1 : 08              >            php
15e2 : c907            >            cmp #$aa-$a3     ;test result
                       >            trap_ne
15e4 : f003            >        beq skip1235
                       >        trap            ;failed not equal (non zero)
15e6 : 209831          >        jsr report_error
                       >
15e9 :                 >skip1235
                       >
15e9 : 68              >            pla         ;load status
                       >            cmp_flag $ff
15ea : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
15ec : f003            >        beq skip1238
                       >        trap            ;failed not equal (non zero)
15ee : 209831          >        jsr report_error
                       >
15f1 :                 >skip1238
                       >
15f1 : 28              >            plp         ;restore status
                       >
15f2 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
15f4 : f003            >        beq skip1240
                       >        trap            ;failed not equal (non zero)
15f6 : 209831          >        jsr report_error
                       >
15f9 :                 >skip1240
                       >
15f9 : e000            >            cpx #0
                       >            trap_ne         ;x changed
15fb : f003            >        beq skip1242
                       >        trap            ;failed not equal (non zero)
15fd : 209831          >        jsr report_error
                       >
1600 :                 >skip1242
                       >
                        
                                nop_test $b3,1
1600 : a042            >            ldy #$42
1602 : a203            >            ldx #4-1
1604 : b3              >            db  $b3          ;test nop length
                       >        if 1 = 1
1605 : ca              >            dex
1606 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1607 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1608 : f003            >        beq skip1245
                       >        trap            ;failed not equal (non zero)
160a : 209831          >        jsr report_error
                       >
160d :                 >skip1245
                       >
                       >            set_a $ff-$b3,0
                       >            load_flag 0
160d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
160f : 48              >            pha         ;use stack to load status
1610 : a94c            >            lda #$ff-$b3     ;precharge accu
1612 : 28              >            plp
                       >
1613 : b3              >            db  $b3          ;test nop integrity - flags off
1614 : ea              >            nop
1615 : ea              >            nop
                       >            tst_a $ff-$b3,0
1616 : 08              >            php         ;save flags
1617 : 08              >            php
1618 : c94c            >            cmp #$ff-$b3     ;test result
                       >            trap_ne
161a : f003            >        beq skip1250
                       >        trap            ;failed not equal (non zero)
161c : 209831          >        jsr report_error
                       >
161f :                 >skip1250
                       >
161f : 68              >            pla         ;load status
                       >            cmp_flag 0
1620 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1622 : f003            >        beq skip1253
                       >        trap            ;failed not equal (non zero)
1624 : 209831          >        jsr report_error
                       >
1627 :                 >skip1253
                       >
1627 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$b3,$ff
                       >            load_flag $ff
1628 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
162a : 48              >            pha         ;use stack to load status
162b : a9f7            >            lda #$aa-$b3     ;precharge accu
162d : 28              >            plp
                       >
162e : b3              >            db  $b3          ;test nop integrity - flags on
162f : ea              >            nop
1630 : ea              >            nop
                       >            tst_a $aa-$b3,$ff
1631 : 08              >            php         ;save flags
1632 : 08              >            php
1633 : c9f7            >            cmp #$aa-$b3     ;test result
                       >            trap_ne
1635 : f003            >        beq skip1258
                       >        trap            ;failed not equal (non zero)
1637 : 209831          >        jsr report_error
                       >
163a :                 >skip1258
                       >
163a : 68              >            pla         ;load status
                       >            cmp_flag $ff
163b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
163d : f003            >        beq skip1261
                       >        trap            ;failed not equal (non zero)
163f : 209831          >        jsr report_error
                       >
1642 :                 >skip1261
                       >
1642 : 28              >            plp         ;restore status
                       >
1643 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1645 : f003            >        beq skip1263
                       >        trap            ;failed not equal (non zero)
1647 : 209831          >        jsr report_error
                       >
164a :                 >skip1263
                       >
164a : e000            >            cpx #0
                       >            trap_ne         ;x changed
164c : f003            >        beq skip1265
                       >        trap            ;failed not equal (non zero)
164e : 209831          >        jsr report_error
                       >
1651 :                 >skip1265
                       >
                        
                                nop_test $c3,1
1651 : a042            >            ldy #$42
1653 : a203            >            ldx #4-1
1655 : c3              >            db  $c3          ;test nop length
                       >        if 1 = 1
1656 : ca              >            dex
1657 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1658 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1659 : f003            >        beq skip1268
                       >        trap            ;failed not equal (non zero)
165b : 209831          >        jsr report_error
                       >
165e :                 >skip1268
                       >
                       >            set_a $ff-$c3,0
                       >            load_flag 0
165e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1660 : 48              >            pha         ;use stack to load status
1661 : a93c            >            lda #$ff-$c3     ;precharge accu
1663 : 28              >            plp
                       >
1664 : c3              >            db  $c3          ;test nop integrity - flags off
1665 : ea              >            nop
1666 : ea              >            nop
                       >            tst_a $ff-$c3,0
1667 : 08              >            php         ;save flags
1668 : 08              >            php
1669 : c93c            >            cmp #$ff-$c3     ;test result
                       >            trap_ne
166b : f003            >        beq skip1273
                       >        trap            ;failed not equal (non zero)
166d : 209831          >        jsr report_error
                       >
1670 :                 >skip1273
                       >
1670 : 68              >            pla         ;load status
                       >            cmp_flag 0
1671 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1673 : f003            >        beq skip1276
                       >        trap            ;failed not equal (non zero)
1675 : 209831          >        jsr report_error
                       >
1678 :                 >skip1276
                       >
1678 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$c3,$ff
                       >            load_flag $ff
1679 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
167b : 48              >            pha         ;use stack to load status
167c : a9e7            >            lda #$aa-$c3     ;precharge accu
167e : 28              >            plp
                       >
167f : c3              >            db  $c3          ;test nop integrity - flags on
1680 : ea              >            nop
1681 : ea              >            nop
                       >            tst_a $aa-$c3,$ff
1682 : 08              >            php         ;save flags
1683 : 08              >            php
1684 : c9e7            >            cmp #$aa-$c3     ;test result
                       >            trap_ne
1686 : f003            >        beq skip1281
                       >        trap            ;failed not equal (non zero)
1688 : 209831          >        jsr report_error
                       >
168b :                 >skip1281
                       >
168b : 68              >            pla         ;load status
                       >            cmp_flag $ff
168c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
168e : f003            >        beq skip1284
                       >        trap            ;failed not equal (non zero)
1690 : 209831          >        jsr report_error
                       >
1693 :                 >skip1284
                       >
1693 : 28              >            plp         ;restore status
                       >
1694 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1696 : f003            >        beq skip1286
                       >        trap            ;failed not equal (non zero)
1698 : 209831          >        jsr report_error
                       >
169b :                 >skip1286
                       >
169b : e000            >            cpx #0
                       >            trap_ne         ;x changed
169d : f003            >        beq skip1288
                       >        trap            ;failed not equal (non zero)
169f : 209831          >        jsr report_error
                       >
16a2 :                 >skip1288
                       >
                        
                                nop_test $d3,1
16a2 : a042            >            ldy #$42
16a4 : a203            >            ldx #4-1
16a6 : d3              >            db  $d3          ;test nop length
                       >        if 1 = 1
16a7 : ca              >            dex
16a8 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
16a9 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
16aa : f003            >        beq skip1291
                       >        trap            ;failed not equal (non zero)
16ac : 209831          >        jsr report_error
                       >
16af :                 >skip1291
                       >
                       >            set_a $ff-$d3,0
                       >            load_flag 0
16af : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
16b1 : 48              >            pha         ;use stack to load status
16b2 : a92c            >            lda #$ff-$d3     ;precharge accu
16b4 : 28              >            plp
                       >
16b5 : d3              >            db  $d3          ;test nop integrity - flags off
16b6 : ea              >            nop
16b7 : ea              >            nop
                       >            tst_a $ff-$d3,0
16b8 : 08              >            php         ;save flags
16b9 : 08              >            php
16ba : c92c            >            cmp #$ff-$d3     ;test result
                       >            trap_ne
16bc : f003            >        beq skip1296
                       >        trap            ;failed not equal (non zero)
16be : 209831          >        jsr report_error
                       >
16c1 :                 >skip1296
                       >
16c1 : 68              >            pla         ;load status
                       >            cmp_flag 0
16c2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
16c4 : f003            >        beq skip1299
                       >        trap            ;failed not equal (non zero)
16c6 : 209831          >        jsr report_error
                       >
16c9 :                 >skip1299
                       >
16c9 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$d3,$ff
                       >            load_flag $ff
16ca : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
16cc : 48              >            pha         ;use stack to load status
16cd : a9d7            >            lda #$aa-$d3     ;precharge accu
16cf : 28              >            plp
                       >
16d0 : d3              >            db  $d3          ;test nop integrity - flags on
16d1 : ea              >            nop
16d2 : ea              >            nop
                       >            tst_a $aa-$d3,$ff
16d3 : 08              >            php         ;save flags
16d4 : 08              >            php
16d5 : c9d7            >            cmp #$aa-$d3     ;test result
                       >            trap_ne
16d7 : f003            >        beq skip1304
                       >        trap            ;failed not equal (non zero)
16d9 : 209831          >        jsr report_error
                       >
16dc :                 >skip1304
                       >
16dc : 68              >            pla         ;load status
                       >            cmp_flag $ff
16dd : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
16df : f003            >        beq skip1307
                       >        trap            ;failed not equal (non zero)
16e1 : 209831          >        jsr report_error
                       >
16e4 :                 >skip1307
                       >
16e4 : 28              >            plp         ;restore status
                       >
16e5 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
16e7 : f003            >        beq skip1309
                       >        trap            ;failed not equal (non zero)
16e9 : 209831          >        jsr report_error
                       >
16ec :                 >skip1309
                       >
16ec : e000            >            cpx #0
                       >            trap_ne         ;x changed
16ee : f003            >        beq skip1311
                       >        trap            ;failed not equal (non zero)
16f0 : 209831          >        jsr report_error
                       >
16f3 :                 >skip1311
                       >
                        
                                nop_test $e3,1
16f3 : a042            >            ldy #$42
16f5 : a203            >            ldx #4-1
16f7 : e3              >            db  $e3          ;test nop length
                       >        if 1 = 1
16f8 : ca              >            dex
16f9 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
16fa : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
16fb : f003            >        beq skip1314
                       >        trap            ;failed not equal (non zero)
16fd : 209831          >        jsr report_error
                       >
1700 :                 >skip1314
                       >
                       >            set_a $ff-$e3,0
                       >            load_flag 0
1700 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1702 : 48              >            pha         ;use stack to load status
1703 : a91c            >            lda #$ff-$e3     ;precharge accu
1705 : 28              >            plp
                       >
1706 : e3              >            db  $e3          ;test nop integrity - flags off
1707 : ea              >            nop
1708 : ea              >            nop
                       >            tst_a $ff-$e3,0
1709 : 08              >            php         ;save flags
170a : 08              >            php
170b : c91c            >            cmp #$ff-$e3     ;test result
                       >            trap_ne
170d : f003            >        beq skip1319
                       >        trap            ;failed not equal (non zero)
170f : 209831          >        jsr report_error
                       >
1712 :                 >skip1319
                       >
1712 : 68              >            pla         ;load status
                       >            cmp_flag 0
1713 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1715 : f003            >        beq skip1322
                       >        trap            ;failed not equal (non zero)
1717 : 209831          >        jsr report_error
                       >
171a :                 >skip1322
                       >
171a : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$e3,$ff
                       >            load_flag $ff
171b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
171d : 48              >            pha         ;use stack to load status
171e : a9c7            >            lda #$aa-$e3     ;precharge accu
1720 : 28              >            plp
                       >
1721 : e3              >            db  $e3          ;test nop integrity - flags on
1722 : ea              >            nop
1723 : ea              >            nop
                       >            tst_a $aa-$e3,$ff
1724 : 08              >            php         ;save flags
1725 : 08              >            php
1726 : c9c7            >            cmp #$aa-$e3     ;test result
                       >            trap_ne
1728 : f003            >        beq skip1327
                       >        trap            ;failed not equal (non zero)
172a : 209831          >        jsr report_error
                       >
172d :                 >skip1327
                       >
172d : 68              >            pla         ;load status
                       >            cmp_flag $ff
172e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1730 : f003            >        beq skip1330
                       >        trap            ;failed not equal (non zero)
1732 : 209831          >        jsr report_error
                       >
1735 :                 >skip1330
                       >
1735 : 28              >            plp         ;restore status
                       >
1736 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1738 : f003            >        beq skip1332
                       >        trap            ;failed not equal (non zero)
173a : 209831          >        jsr report_error
                       >
173d :                 >skip1332
                       >
173d : e000            >            cpx #0
                       >            trap_ne         ;x changed
173f : f003            >        beq skip1334
                       >        trap            ;failed not equal (non zero)
1741 : 209831          >        jsr report_error
                       >
1744 :                 >skip1334
                       >
                        
                                nop_test $f3,1
1744 : a042            >            ldy #$42
1746 : a203            >            ldx #4-1
1748 : f3              >            db  $f3          ;test nop length
                       >        if 1 = 1
1749 : ca              >            dex
174a : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
174b : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
174c : f003            >        beq skip1337
                       >        trap            ;failed not equal (non zero)
174e : 209831          >        jsr report_error
                       >
1751 :                 >skip1337
                       >
                       >            set_a $ff-$f3,0
                       >            load_flag 0
1751 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1753 : 48              >            pha         ;use stack to load status
1754 : a90c            >            lda #$ff-$f3     ;precharge accu
1756 : 28              >            plp
                       >
1757 : f3              >            db  $f3          ;test nop integrity - flags off
1758 : ea              >            nop
1759 : ea              >            nop
                       >            tst_a $ff-$f3,0
175a : 08              >            php         ;save flags
175b : 08              >            php
175c : c90c            >            cmp #$ff-$f3     ;test result
                       >            trap_ne
175e : f003            >        beq skip1342
                       >        trap            ;failed not equal (non zero)
1760 : 209831          >        jsr report_error
                       >
1763 :                 >skip1342
                       >
1763 : 68              >            pla         ;load status
                       >            cmp_flag 0
1764 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1766 : f003            >        beq skip1345
                       >        trap            ;failed not equal (non zero)
1768 : 209831          >        jsr report_error
                       >
176b :                 >skip1345
                       >
176b : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$f3,$ff
                       >            load_flag $ff
176c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
176e : 48              >            pha         ;use stack to load status
176f : a9b7            >            lda #$aa-$f3     ;precharge accu
1771 : 28              >            plp
                       >
1772 : f3              >            db  $f3          ;test nop integrity - flags on
1773 : ea              >            nop
1774 : ea              >            nop
                       >            tst_a $aa-$f3,$ff
1775 : 08              >            php         ;save flags
1776 : 08              >            php
1777 : c9b7            >            cmp #$aa-$f3     ;test result
                       >            trap_ne
1779 : f003            >        beq skip1350
                       >        trap            ;failed not equal (non zero)
177b : 209831          >        jsr report_error
                       >
177e :                 >skip1350
                       >
177e : 68              >            pla         ;load status
                       >            cmp_flag $ff
177f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1781 : f003            >        beq skip1353
                       >        trap            ;failed not equal (non zero)
1783 : 209831          >        jsr report_error
                       >
1786 :                 >skip1353
                       >
1786 : 28              >            plp         ;restore status
                       >
1787 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1789 : f003            >        beq skip1355
                       >        trap            ;failed not equal (non zero)
178b : 209831          >        jsr report_error
                       >
178e :                 >skip1355
                       >
178e : e000            >            cpx #0
                       >            trap_ne         ;x changed
1790 : f003            >        beq skip1357
                       >        trap            ;failed not equal (non zero)
1792 : 209831          >        jsr report_error
                       >
1795 :                 >skip1357
                       >
                        
                                nop_test $0b,1
1795 : a042            >            ldy #$42
1797 : a203            >            ldx #4-1
1799 : 0b              >            db  $0b          ;test nop length
                       >        if 1 = 1
179a : ca              >            dex
179b : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
179c : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
179d : f003            >        beq skip1360
                       >        trap            ;failed not equal (non zero)
179f : 209831          >        jsr report_error
                       >
17a2 :                 >skip1360
                       >
                       >            set_a $ff-$0b,0
                       >            load_flag 0
17a2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
17a4 : 48              >            pha         ;use stack to load status
17a5 : a9f4            >            lda #$ff-$0b     ;precharge accu
17a7 : 28              >            plp
                       >
17a8 : 0b              >            db  $0b          ;test nop integrity - flags off
17a9 : ea              >            nop
17aa : ea              >            nop
                       >            tst_a $ff-$0b,0
17ab : 08              >            php         ;save flags
17ac : 08              >            php
17ad : c9f4            >            cmp #$ff-$0b     ;test result
                       >            trap_ne
17af : f003            >        beq skip1365
                       >        trap            ;failed not equal (non zero)
17b1 : 209831          >        jsr report_error
                       >
17b4 :                 >skip1365
                       >
17b4 : 68              >            pla         ;load status
                       >            cmp_flag 0
17b5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
17b7 : f003            >        beq skip1368
                       >        trap            ;failed not equal (non zero)
17b9 : 209831          >        jsr report_error
                       >
17bc :                 >skip1368
                       >
17bc : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$0b,$ff
                       >            load_flag $ff
17bd : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
17bf : 48              >            pha         ;use stack to load status
17c0 : a99f            >            lda #$aa-$0b     ;precharge accu
17c2 : 28              >            plp
                       >
17c3 : 0b              >            db  $0b          ;test nop integrity - flags on
17c4 : ea              >            nop
17c5 : ea              >            nop
                       >            tst_a $aa-$0b,$ff
17c6 : 08              >            php         ;save flags
17c7 : 08              >            php
17c8 : c99f            >            cmp #$aa-$0b     ;test result
                       >            trap_ne
17ca : f003            >        beq skip1373
                       >        trap            ;failed not equal (non zero)
17cc : 209831          >        jsr report_error
                       >
17cf :                 >skip1373
                       >
17cf : 68              >            pla         ;load status
                       >            cmp_flag $ff
17d0 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
17d2 : f003            >        beq skip1376
                       >        trap            ;failed not equal (non zero)
17d4 : 209831          >        jsr report_error
                       >
17d7 :                 >skip1376
                       >
17d7 : 28              >            plp         ;restore status
                       >
17d8 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
17da : f003            >        beq skip1378
                       >        trap            ;failed not equal (non zero)
17dc : 209831          >        jsr report_error
                       >
17df :                 >skip1378
                       >
17df : e000            >            cpx #0
                       >            trap_ne         ;x changed
17e1 : f003            >        beq skip1380
                       >        trap            ;failed not equal (non zero)
17e3 : 209831          >        jsr report_error
                       >
17e6 :                 >skip1380
                       >
                        
                                nop_test $1b,1
17e6 : a042            >            ldy #$42
17e8 : a203            >            ldx #4-1
17ea : 1b              >            db  $1b          ;test nop length
                       >        if 1 = 1
17eb : ca              >            dex
17ec : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
17ed : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
17ee : f003            >        beq skip1383
                       >        trap            ;failed not equal (non zero)
17f0 : 209831          >        jsr report_error
                       >
17f3 :                 >skip1383
                       >
                       >            set_a $ff-$1b,0
                       >            load_flag 0
17f3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
17f5 : 48              >            pha         ;use stack to load status
17f6 : a9e4            >            lda #$ff-$1b     ;precharge accu
17f8 : 28              >            plp
                       >
17f9 : 1b              >            db  $1b          ;test nop integrity - flags off
17fa : ea              >            nop
17fb : ea              >            nop
                       >            tst_a $ff-$1b,0
17fc : 08              >            php         ;save flags
17fd : 08              >            php
17fe : c9e4            >            cmp #$ff-$1b     ;test result
                       >            trap_ne
1800 : f003            >        beq skip1388
                       >        trap            ;failed not equal (non zero)
1802 : 209831          >        jsr report_error
                       >
1805 :                 >skip1388
                       >
1805 : 68              >            pla         ;load status
                       >            cmp_flag 0
1806 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1808 : f003            >        beq skip1391
                       >        trap            ;failed not equal (non zero)
180a : 209831          >        jsr report_error
                       >
180d :                 >skip1391
                       >
180d : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$1b,$ff
                       >            load_flag $ff
180e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1810 : 48              >            pha         ;use stack to load status
1811 : a98f            >            lda #$aa-$1b     ;precharge accu
1813 : 28              >            plp
                       >
1814 : 1b              >            db  $1b          ;test nop integrity - flags on
1815 : ea              >            nop
1816 : ea              >            nop
                       >            tst_a $aa-$1b,$ff
1817 : 08              >            php         ;save flags
1818 : 08              >            php
1819 : c98f            >            cmp #$aa-$1b     ;test result
                       >            trap_ne
181b : f003            >        beq skip1396
                       >        trap            ;failed not equal (non zero)
181d : 209831          >        jsr report_error
                       >
1820 :                 >skip1396
                       >
1820 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1821 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1823 : f003            >        beq skip1399
                       >        trap            ;failed not equal (non zero)
1825 : 209831          >        jsr report_error
                       >
1828 :                 >skip1399
                       >
1828 : 28              >            plp         ;restore status
                       >
1829 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
182b : f003            >        beq skip1401
                       >        trap            ;failed not equal (non zero)
182d : 209831          >        jsr report_error
                       >
1830 :                 >skip1401
                       >
1830 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1832 : f003            >        beq skip1403
                       >        trap            ;failed not equal (non zero)
1834 : 209831          >        jsr report_error
                       >
1837 :                 >skip1403
                       >
                        
                                nop_test $2b,1
1837 : a042            >            ldy #$42
1839 : a203            >            ldx #4-1
183b : 2b              >            db  $2b          ;test nop length
                       >        if 1 = 1
183c : ca              >            dex
183d : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
183e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
183f : f003            >        beq skip1406
                       >        trap            ;failed not equal (non zero)
1841 : 209831          >        jsr report_error
                       >
1844 :                 >skip1406
                       >
                       >            set_a $ff-$2b,0
                       >            load_flag 0
1844 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1846 : 48              >            pha         ;use stack to load status
1847 : a9d4            >            lda #$ff-$2b     ;precharge accu
1849 : 28              >            plp
                       >
184a : 2b              >            db  $2b          ;test nop integrity - flags off
184b : ea              >            nop
184c : ea              >            nop
                       >            tst_a $ff-$2b,0
184d : 08              >            php         ;save flags
184e : 08              >            php
184f : c9d4            >            cmp #$ff-$2b     ;test result
                       >            trap_ne
1851 : f003            >        beq skip1411
                       >        trap            ;failed not equal (non zero)
1853 : 209831          >        jsr report_error
                       >
1856 :                 >skip1411
                       >
1856 : 68              >            pla         ;load status
                       >            cmp_flag 0
1857 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1859 : f003            >        beq skip1414
                       >        trap            ;failed not equal (non zero)
185b : 209831          >        jsr report_error
                       >
185e :                 >skip1414
                       >
185e : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$2b,$ff
                       >            load_flag $ff
185f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1861 : 48              >            pha         ;use stack to load status
1862 : a97f            >            lda #$aa-$2b     ;precharge accu
1864 : 28              >            plp
                       >
1865 : 2b              >            db  $2b          ;test nop integrity - flags on
1866 : ea              >            nop
1867 : ea              >            nop
                       >            tst_a $aa-$2b,$ff
1868 : 08              >            php         ;save flags
1869 : 08              >            php
186a : c97f            >            cmp #$aa-$2b     ;test result
                       >            trap_ne
186c : f003            >        beq skip1419
                       >        trap            ;failed not equal (non zero)
186e : 209831          >        jsr report_error
                       >
1871 :                 >skip1419
                       >
1871 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1872 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1874 : f003            >        beq skip1422
                       >        trap            ;failed not equal (non zero)
1876 : 209831          >        jsr report_error
                       >
1879 :                 >skip1422
                       >
1879 : 28              >            plp         ;restore status
                       >
187a : c042            >            cpy #$42
                       >            trap_ne         ;y changed
187c : f003            >        beq skip1424
                       >        trap            ;failed not equal (non zero)
187e : 209831          >        jsr report_error
                       >
1881 :                 >skip1424
                       >
1881 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1883 : f003            >        beq skip1426
                       >        trap            ;failed not equal (non zero)
1885 : 209831          >        jsr report_error
                       >
1888 :                 >skip1426
                       >
                        
                                nop_test $3b,1
1888 : a042            >            ldy #$42
188a : a203            >            ldx #4-1
188c : 3b              >            db  $3b          ;test nop length
                       >        if 1 = 1
188d : ca              >            dex
188e : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
188f : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1890 : f003            >        beq skip1429
                       >        trap            ;failed not equal (non zero)
1892 : 209831          >        jsr report_error
                       >
1895 :                 >skip1429
                       >
                       >            set_a $ff-$3b,0
                       >            load_flag 0
1895 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1897 : 48              >            pha         ;use stack to load status
1898 : a9c4            >            lda #$ff-$3b     ;precharge accu
189a : 28              >            plp
                       >
189b : 3b              >            db  $3b          ;test nop integrity - flags off
189c : ea              >            nop
189d : ea              >            nop
                       >            tst_a $ff-$3b,0
189e : 08              >            php         ;save flags
189f : 08              >            php
18a0 : c9c4            >            cmp #$ff-$3b     ;test result
                       >            trap_ne
18a2 : f003            >        beq skip1434
                       >        trap            ;failed not equal (non zero)
18a4 : 209831          >        jsr report_error
                       >
18a7 :                 >skip1434
                       >
18a7 : 68              >            pla         ;load status
                       >            cmp_flag 0
18a8 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
18aa : f003            >        beq skip1437
                       >        trap            ;failed not equal (non zero)
18ac : 209831          >        jsr report_error
                       >
18af :                 >skip1437
                       >
18af : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$3b,$ff
                       >            load_flag $ff
18b0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
18b2 : 48              >            pha         ;use stack to load status
18b3 : a96f            >            lda #$aa-$3b     ;precharge accu
18b5 : 28              >            plp
                       >
18b6 : 3b              >            db  $3b          ;test nop integrity - flags on
18b7 : ea              >            nop
18b8 : ea              >            nop
                       >            tst_a $aa-$3b,$ff
18b9 : 08              >            php         ;save flags
18ba : 08              >            php
18bb : c96f            >            cmp #$aa-$3b     ;test result
                       >            trap_ne
18bd : f003            >        beq skip1442
                       >        trap            ;failed not equal (non zero)
18bf : 209831          >        jsr report_error
                       >
18c2 :                 >skip1442
                       >
18c2 : 68              >            pla         ;load status
                       >            cmp_flag $ff
18c3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
18c5 : f003            >        beq skip1445
                       >        trap            ;failed not equal (non zero)
18c7 : 209831          >        jsr report_error
                       >
18ca :                 >skip1445
                       >
18ca : 28              >            plp         ;restore status
                       >
18cb : c042            >            cpy #$42
                       >            trap_ne         ;y changed
18cd : f003            >        beq skip1447
                       >        trap            ;failed not equal (non zero)
18cf : 209831          >        jsr report_error
                       >
18d2 :                 >skip1447
                       >
18d2 : e000            >            cpx #0
                       >            trap_ne         ;x changed
18d4 : f003            >        beq skip1449
                       >        trap            ;failed not equal (non zero)
18d6 : 209831          >        jsr report_error
                       >
18d9 :                 >skip1449
                       >
                        
                                nop_test $4b,1
18d9 : a042            >            ldy #$42
18db : a203            >            ldx #4-1
18dd : 4b              >            db  $4b          ;test nop length
                       >        if 1 = 1
18de : ca              >            dex
18df : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
18e0 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
18e1 : f003            >        beq skip1452
                       >        trap            ;failed not equal (non zero)
18e3 : 209831          >        jsr report_error
                       >
18e6 :                 >skip1452
                       >
                       >            set_a $ff-$4b,0
                       >            load_flag 0
18e6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
18e8 : 48              >            pha         ;use stack to load status
18e9 : a9b4            >            lda #$ff-$4b     ;precharge accu
18eb : 28              >            plp
                       >
18ec : 4b              >            db  $4b          ;test nop integrity - flags off
18ed : ea              >            nop
18ee : ea              >            nop
                       >            tst_a $ff-$4b,0
18ef : 08              >            php         ;save flags
18f0 : 08              >            php
18f1 : c9b4            >            cmp #$ff-$4b     ;test result
                       >            trap_ne
18f3 : f003            >        beq skip1457
                       >        trap            ;failed not equal (non zero)
18f5 : 209831          >        jsr report_error
                       >
18f8 :                 >skip1457
                       >
18f8 : 68              >            pla         ;load status
                       >            cmp_flag 0
18f9 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
18fb : f003            >        beq skip1460
                       >        trap            ;failed not equal (non zero)
18fd : 209831          >        jsr report_error
                       >
1900 :                 >skip1460
                       >
1900 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$4b,$ff
                       >            load_flag $ff
1901 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1903 : 48              >            pha         ;use stack to load status
1904 : a95f            >            lda #$aa-$4b     ;precharge accu
1906 : 28              >            plp
                       >
1907 : 4b              >            db  $4b          ;test nop integrity - flags on
1908 : ea              >            nop
1909 : ea              >            nop
                       >            tst_a $aa-$4b,$ff
190a : 08              >            php         ;save flags
190b : 08              >            php
190c : c95f            >            cmp #$aa-$4b     ;test result
                       >            trap_ne
190e : f003            >        beq skip1465
                       >        trap            ;failed not equal (non zero)
1910 : 209831          >        jsr report_error
                       >
1913 :                 >skip1465
                       >
1913 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1914 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1916 : f003            >        beq skip1468
                       >        trap            ;failed not equal (non zero)
1918 : 209831          >        jsr report_error
                       >
191b :                 >skip1468
                       >
191b : 28              >            plp         ;restore status
                       >
191c : c042            >            cpy #$42
                       >            trap_ne         ;y changed
191e : f003            >        beq skip1470
                       >        trap            ;failed not equal (non zero)
1920 : 209831          >        jsr report_error
                       >
1923 :                 >skip1470
                       >
1923 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1925 : f003            >        beq skip1472
                       >        trap            ;failed not equal (non zero)
1927 : 209831          >        jsr report_error
                       >
192a :                 >skip1472
                       >
                        
                                nop_test $5b,1
192a : a042            >            ldy #$42
192c : a203            >            ldx #4-1
192e : 5b              >            db  $5b          ;test nop length
                       >        if 1 = 1
192f : ca              >            dex
1930 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1931 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1932 : f003            >        beq skip1475
                       >        trap            ;failed not equal (non zero)
1934 : 209831          >        jsr report_error
                       >
1937 :                 >skip1475
                       >
                       >            set_a $ff-$5b,0
                       >            load_flag 0
1937 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1939 : 48              >            pha         ;use stack to load status
193a : a9a4            >            lda #$ff-$5b     ;precharge accu
193c : 28              >            plp
                       >
193d : 5b              >            db  $5b          ;test nop integrity - flags off
193e : ea              >            nop
193f : ea              >            nop
                       >            tst_a $ff-$5b,0
1940 : 08              >            php         ;save flags
1941 : 08              >            php
1942 : c9a4            >            cmp #$ff-$5b     ;test result
                       >            trap_ne
1944 : f003            >        beq skip1480
                       >        trap            ;failed not equal (non zero)
1946 : 209831          >        jsr report_error
                       >
1949 :                 >skip1480
                       >
1949 : 68              >            pla         ;load status
                       >            cmp_flag 0
194a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
194c : f003            >        beq skip1483
                       >        trap            ;failed not equal (non zero)
194e : 209831          >        jsr report_error
                       >
1951 :                 >skip1483
                       >
1951 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$5b,$ff
                       >            load_flag $ff
1952 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1954 : 48              >            pha         ;use stack to load status
1955 : a94f            >            lda #$aa-$5b     ;precharge accu
1957 : 28              >            plp
                       >
1958 : 5b              >            db  $5b          ;test nop integrity - flags on
1959 : ea              >            nop
195a : ea              >            nop
                       >            tst_a $aa-$5b,$ff
195b : 08              >            php         ;save flags
195c : 08              >            php
195d : c94f            >            cmp #$aa-$5b     ;test result
                       >            trap_ne
195f : f003            >        beq skip1488
                       >        trap            ;failed not equal (non zero)
1961 : 209831          >        jsr report_error
                       >
1964 :                 >skip1488
                       >
1964 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1965 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1967 : f003            >        beq skip1491
                       >        trap            ;failed not equal (non zero)
1969 : 209831          >        jsr report_error
                       >
196c :                 >skip1491
                       >
196c : 28              >            plp         ;restore status
                       >
196d : c042            >            cpy #$42
                       >            trap_ne         ;y changed
196f : f003            >        beq skip1493
                       >        trap            ;failed not equal (non zero)
1971 : 209831          >        jsr report_error
                       >
1974 :                 >skip1493
                       >
1974 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1976 : f003            >        beq skip1495
                       >        trap            ;failed not equal (non zero)
1978 : 209831          >        jsr report_error
                       >
197b :                 >skip1495
                       >
                        
                                nop_test $6b,1
197b : a042            >            ldy #$42
197d : a203            >            ldx #4-1
197f : 6b              >            db  $6b          ;test nop length
                       >        if 1 = 1
1980 : ca              >            dex
1981 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1982 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1983 : f003            >        beq skip1498
                       >        trap            ;failed not equal (non zero)
1985 : 209831          >        jsr report_error
                       >
1988 :                 >skip1498
                       >
                       >            set_a $ff-$6b,0
                       >            load_flag 0
1988 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
198a : 48              >            pha         ;use stack to load status
198b : a994            >            lda #$ff-$6b     ;precharge accu
198d : 28              >            plp
                       >
198e : 6b              >            db  $6b          ;test nop integrity - flags off
198f : ea              >            nop
1990 : ea              >            nop
                       >            tst_a $ff-$6b,0
1991 : 08              >            php         ;save flags
1992 : 08              >            php
1993 : c994            >            cmp #$ff-$6b     ;test result
                       >            trap_ne
1995 : f003            >        beq skip1503
                       >        trap            ;failed not equal (non zero)
1997 : 209831          >        jsr report_error
                       >
199a :                 >skip1503
                       >
199a : 68              >            pla         ;load status
                       >            cmp_flag 0
199b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
199d : f003            >        beq skip1506
                       >        trap            ;failed not equal (non zero)
199f : 209831          >        jsr report_error
                       >
19a2 :                 >skip1506
                       >
19a2 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$6b,$ff
                       >            load_flag $ff
19a3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
19a5 : 48              >            pha         ;use stack to load status
19a6 : a93f            >            lda #$aa-$6b     ;precharge accu
19a8 : 28              >            plp
                       >
19a9 : 6b              >            db  $6b          ;test nop integrity - flags on
19aa : ea              >            nop
19ab : ea              >            nop
                       >            tst_a $aa-$6b,$ff
19ac : 08              >            php         ;save flags
19ad : 08              >            php
19ae : c93f            >            cmp #$aa-$6b     ;test result
                       >            trap_ne
19b0 : f003            >        beq skip1511
                       >        trap            ;failed not equal (non zero)
19b2 : 209831          >        jsr report_error
                       >
19b5 :                 >skip1511
                       >
19b5 : 68              >            pla         ;load status
                       >            cmp_flag $ff
19b6 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
19b8 : f003            >        beq skip1514
                       >        trap            ;failed not equal (non zero)
19ba : 209831          >        jsr report_error
                       >
19bd :                 >skip1514
                       >
19bd : 28              >            plp         ;restore status
                       >
19be : c042            >            cpy #$42
                       >            trap_ne         ;y changed
19c0 : f003            >        beq skip1516
                       >        trap            ;failed not equal (non zero)
19c2 : 209831          >        jsr report_error
                       >
19c5 :                 >skip1516
                       >
19c5 : e000            >            cpx #0
                       >            trap_ne         ;x changed
19c7 : f003            >        beq skip1518
                       >        trap            ;failed not equal (non zero)
19c9 : 209831          >        jsr report_error
                       >
19cc :                 >skip1518
                       >
                        
                                nop_test $7b,1
19cc : a042            >            ldy #$42
19ce : a203            >            ldx #4-1
19d0 : 7b              >            db  $7b          ;test nop length
                       >        if 1 = 1
19d1 : ca              >            dex
19d2 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
19d3 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
19d4 : f003            >        beq skip1521
                       >        trap            ;failed not equal (non zero)
19d6 : 209831          >        jsr report_error
                       >
19d9 :                 >skip1521
                       >
                       >            set_a $ff-$7b,0
                       >            load_flag 0
19d9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
19db : 48              >            pha         ;use stack to load status
19dc : a984            >            lda #$ff-$7b     ;precharge accu
19de : 28              >            plp
                       >
19df : 7b              >            db  $7b          ;test nop integrity - flags off
19e0 : ea              >            nop
19e1 : ea              >            nop
                       >            tst_a $ff-$7b,0
19e2 : 08              >            php         ;save flags
19e3 : 08              >            php
19e4 : c984            >            cmp #$ff-$7b     ;test result
                       >            trap_ne
19e6 : f003            >        beq skip1526
                       >        trap            ;failed not equal (non zero)
19e8 : 209831          >        jsr report_error
                       >
19eb :                 >skip1526
                       >
19eb : 68              >            pla         ;load status
                       >            cmp_flag 0
19ec : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
19ee : f003            >        beq skip1529
                       >        trap            ;failed not equal (non zero)
19f0 : 209831          >        jsr report_error
                       >
19f3 :                 >skip1529
                       >
19f3 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$7b,$ff
                       >            load_flag $ff
19f4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
19f6 : 48              >            pha         ;use stack to load status
19f7 : a92f            >            lda #$aa-$7b     ;precharge accu
19f9 : 28              >            plp
                       >
19fa : 7b              >            db  $7b          ;test nop integrity - flags on
19fb : ea              >            nop
19fc : ea              >            nop
                       >            tst_a $aa-$7b,$ff
19fd : 08              >            php         ;save flags
19fe : 08              >            php
19ff : c92f            >            cmp #$aa-$7b     ;test result
                       >            trap_ne
1a01 : f003            >        beq skip1534
                       >        trap            ;failed not equal (non zero)
1a03 : 209831          >        jsr report_error
                       >
1a06 :                 >skip1534
                       >
1a06 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1a07 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a09 : f003            >        beq skip1537
                       >        trap            ;failed not equal (non zero)
1a0b : 209831          >        jsr report_error
                       >
1a0e :                 >skip1537
                       >
1a0e : 28              >            plp         ;restore status
                       >
1a0f : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1a11 : f003            >        beq skip1539
                       >        trap            ;failed not equal (non zero)
1a13 : 209831          >        jsr report_error
                       >
1a16 :                 >skip1539
                       >
1a16 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1a18 : f003            >        beq skip1541
                       >        trap            ;failed not equal (non zero)
1a1a : 209831          >        jsr report_error
                       >
1a1d :                 >skip1541
                       >
                        
                                nop_test $8b,1
1a1d : a042            >            ldy #$42
1a1f : a203            >            ldx #4-1
1a21 : 8b              >            db  $8b          ;test nop length
                       >        if 1 = 1
1a22 : ca              >            dex
1a23 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1a24 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1a25 : f003            >        beq skip1544
                       >        trap            ;failed not equal (non zero)
1a27 : 209831          >        jsr report_error
                       >
1a2a :                 >skip1544
                       >
                       >            set_a $ff-$8b,0
                       >            load_flag 0
1a2a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1a2c : 48              >            pha         ;use stack to load status
1a2d : a974            >            lda #$ff-$8b     ;precharge accu
1a2f : 28              >            plp
                       >
1a30 : 8b              >            db  $8b          ;test nop integrity - flags off
1a31 : ea              >            nop
1a32 : ea              >            nop
                       >            tst_a $ff-$8b,0
1a33 : 08              >            php         ;save flags
1a34 : 08              >            php
1a35 : c974            >            cmp #$ff-$8b     ;test result
                       >            trap_ne
1a37 : f003            >        beq skip1549
                       >        trap            ;failed not equal (non zero)
1a39 : 209831          >        jsr report_error
                       >
1a3c :                 >skip1549
                       >
1a3c : 68              >            pla         ;load status
                       >            cmp_flag 0
1a3d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a3f : f003            >        beq skip1552
                       >        trap            ;failed not equal (non zero)
1a41 : 209831          >        jsr report_error
                       >
1a44 :                 >skip1552
                       >
1a44 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$8b,$ff
                       >            load_flag $ff
1a45 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1a47 : 48              >            pha         ;use stack to load status
1a48 : a91f            >            lda #$aa-$8b     ;precharge accu
1a4a : 28              >            plp
                       >
1a4b : 8b              >            db  $8b          ;test nop integrity - flags on
1a4c : ea              >            nop
1a4d : ea              >            nop
                       >            tst_a $aa-$8b,$ff
1a4e : 08              >            php         ;save flags
1a4f : 08              >            php
1a50 : c91f            >            cmp #$aa-$8b     ;test result
                       >            trap_ne
1a52 : f003            >        beq skip1557
                       >        trap            ;failed not equal (non zero)
1a54 : 209831          >        jsr report_error
                       >
1a57 :                 >skip1557
                       >
1a57 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1a58 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a5a : f003            >        beq skip1560
                       >        trap            ;failed not equal (non zero)
1a5c : 209831          >        jsr report_error
                       >
1a5f :                 >skip1560
                       >
1a5f : 28              >            plp         ;restore status
                       >
1a60 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1a62 : f003            >        beq skip1562
                       >        trap            ;failed not equal (non zero)
1a64 : 209831          >        jsr report_error
                       >
1a67 :                 >skip1562
                       >
1a67 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1a69 : f003            >        beq skip1564
                       >        trap            ;failed not equal (non zero)
1a6b : 209831          >        jsr report_error
                       >
1a6e :                 >skip1564
                       >
                        
                                nop_test $9b,1
1a6e : a042            >            ldy #$42
1a70 : a203            >            ldx #4-1
1a72 : 9b              >            db  $9b          ;test nop length
                       >        if 1 = 1
1a73 : ca              >            dex
1a74 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1a75 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1a76 : f003            >        beq skip1567
                       >        trap            ;failed not equal (non zero)
1a78 : 209831          >        jsr report_error
                       >
1a7b :                 >skip1567
                       >
                       >            set_a $ff-$9b,0
                       >            load_flag 0
1a7b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1a7d : 48              >            pha         ;use stack to load status
1a7e : a964            >            lda #$ff-$9b     ;precharge accu
1a80 : 28              >            plp
                       >
1a81 : 9b              >            db  $9b          ;test nop integrity - flags off
1a82 : ea              >            nop
1a83 : ea              >            nop
                       >            tst_a $ff-$9b,0
1a84 : 08              >            php         ;save flags
1a85 : 08              >            php
1a86 : c964            >            cmp #$ff-$9b     ;test result
                       >            trap_ne
1a88 : f003            >        beq skip1572
                       >        trap            ;failed not equal (non zero)
1a8a : 209831          >        jsr report_error
                       >
1a8d :                 >skip1572
                       >
1a8d : 68              >            pla         ;load status
                       >            cmp_flag 0
1a8e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a90 : f003            >        beq skip1575
                       >        trap            ;failed not equal (non zero)
1a92 : 209831          >        jsr report_error
                       >
1a95 :                 >skip1575
                       >
1a95 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$9b,$ff
                       >            load_flag $ff
1a96 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1a98 : 48              >            pha         ;use stack to load status
1a99 : a90f            >            lda #$aa-$9b     ;precharge accu
1a9b : 28              >            plp
                       >
1a9c : 9b              >            db  $9b          ;test nop integrity - flags on
1a9d : ea              >            nop
1a9e : ea              >            nop
                       >            tst_a $aa-$9b,$ff
1a9f : 08              >            php         ;save flags
1aa0 : 08              >            php
1aa1 : c90f            >            cmp #$aa-$9b     ;test result
                       >            trap_ne
1aa3 : f003            >        beq skip1580
                       >        trap            ;failed not equal (non zero)
1aa5 : 209831          >        jsr report_error
                       >
1aa8 :                 >skip1580
                       >
1aa8 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1aa9 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1aab : f003            >        beq skip1583
                       >        trap            ;failed not equal (non zero)
1aad : 209831          >        jsr report_error
                       >
1ab0 :                 >skip1583
                       >
1ab0 : 28              >            plp         ;restore status
                       >
1ab1 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1ab3 : f003            >        beq skip1585
                       >        trap            ;failed not equal (non zero)
1ab5 : 209831          >        jsr report_error
                       >
1ab8 :                 >skip1585
                       >
1ab8 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1aba : f003            >        beq skip1587
                       >        trap            ;failed not equal (non zero)
1abc : 209831          >        jsr report_error
                       >
1abf :                 >skip1587
                       >
                        
                                nop_test $ab,1
1abf : a042            >            ldy #$42
1ac1 : a203            >            ldx #4-1
1ac3 : ab              >            db  $ab          ;test nop length
                       >        if 1 = 1
1ac4 : ca              >            dex
1ac5 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1ac6 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1ac7 : f003            >        beq skip1590
                       >        trap            ;failed not equal (non zero)
1ac9 : 209831          >        jsr report_error
                       >
1acc :                 >skip1590
                       >
                       >            set_a $ff-$ab,0
                       >            load_flag 0
1acc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1ace : 48              >            pha         ;use stack to load status
1acf : a954            >            lda #$ff-$ab     ;precharge accu
1ad1 : 28              >            plp
                       >
1ad2 : ab              >            db  $ab          ;test nop integrity - flags off
1ad3 : ea              >            nop
1ad4 : ea              >            nop
                       >            tst_a $ff-$ab,0
1ad5 : 08              >            php         ;save flags
1ad6 : 08              >            php
1ad7 : c954            >            cmp #$ff-$ab     ;test result
                       >            trap_ne
1ad9 : f003            >        beq skip1595
                       >        trap            ;failed not equal (non zero)
1adb : 209831          >        jsr report_error
                       >
1ade :                 >skip1595
                       >
1ade : 68              >            pla         ;load status
                       >            cmp_flag 0
1adf : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ae1 : f003            >        beq skip1598
                       >        trap            ;failed not equal (non zero)
1ae3 : 209831          >        jsr report_error
                       >
1ae6 :                 >skip1598
                       >
1ae6 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$ab,$ff
                       >            load_flag $ff
1ae7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1ae9 : 48              >            pha         ;use stack to load status
1aea : a9ff            >            lda #$aa-$ab     ;precharge accu
1aec : 28              >            plp
                       >
1aed : ab              >            db  $ab          ;test nop integrity - flags on
1aee : ea              >            nop
1aef : ea              >            nop
                       >            tst_a $aa-$ab,$ff
1af0 : 08              >            php         ;save flags
1af1 : 08              >            php
1af2 : c9ff            >            cmp #$aa-$ab     ;test result
                       >            trap_ne
1af4 : f003            >        beq skip1603
                       >        trap            ;failed not equal (non zero)
1af6 : 209831          >        jsr report_error
                       >
1af9 :                 >skip1603
                       >
1af9 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1afa : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1afc : f003            >        beq skip1606
                       >        trap            ;failed not equal (non zero)
1afe : 209831          >        jsr report_error
                       >
1b01 :                 >skip1606
                       >
1b01 : 28              >            plp         ;restore status
                       >
1b02 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1b04 : f003            >        beq skip1608
                       >        trap            ;failed not equal (non zero)
1b06 : 209831          >        jsr report_error
                       >
1b09 :                 >skip1608
                       >
1b09 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1b0b : f003            >        beq skip1610
                       >        trap            ;failed not equal (non zero)
1b0d : 209831          >        jsr report_error
                       >
1b10 :                 >skip1610
                       >
                        
                                nop_test $bb,1
1b10 : a042            >            ldy #$42
1b12 : a203            >            ldx #4-1
1b14 : bb              >            db  $bb          ;test nop length
                       >        if 1 = 1
1b15 : ca              >            dex
1b16 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1b17 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1b18 : f003            >        beq skip1613
                       >        trap            ;failed not equal (non zero)
1b1a : 209831          >        jsr report_error
                       >
1b1d :                 >skip1613
                       >
                       >            set_a $ff-$bb,0
                       >            load_flag 0
1b1d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1b1f : 48              >            pha         ;use stack to load status
1b20 : a944            >            lda #$ff-$bb     ;precharge accu
1b22 : 28              >            plp
                       >
1b23 : bb              >            db  $bb          ;test nop integrity - flags off
1b24 : ea              >            nop
1b25 : ea              >            nop
                       >            tst_a $ff-$bb,0
1b26 : 08              >            php         ;save flags
1b27 : 08              >            php
1b28 : c944            >            cmp #$ff-$bb     ;test result
                       >            trap_ne
1b2a : f003            >        beq skip1618
                       >        trap            ;failed not equal (non zero)
1b2c : 209831          >        jsr report_error
                       >
1b2f :                 >skip1618
                       >
1b2f : 68              >            pla         ;load status
                       >            cmp_flag 0
1b30 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b32 : f003            >        beq skip1621
                       >        trap            ;failed not equal (non zero)
1b34 : 209831          >        jsr report_error
                       >
1b37 :                 >skip1621
                       >
1b37 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$bb,$ff
                       >            load_flag $ff
1b38 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1b3a : 48              >            pha         ;use stack to load status
1b3b : a9ef            >            lda #$aa-$bb     ;precharge accu
1b3d : 28              >            plp
                       >
1b3e : bb              >            db  $bb          ;test nop integrity - flags on
1b3f : ea              >            nop
1b40 : ea              >            nop
                       >            tst_a $aa-$bb,$ff
1b41 : 08              >            php         ;save flags
1b42 : 08              >            php
1b43 : c9ef            >            cmp #$aa-$bb     ;test result
                       >            trap_ne
1b45 : f003            >        beq skip1626
                       >        trap            ;failed not equal (non zero)
1b47 : 209831          >        jsr report_error
                       >
1b4a :                 >skip1626
                       >
1b4a : 68              >            pla         ;load status
                       >            cmp_flag $ff
1b4b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b4d : f003            >        beq skip1629
                       >        trap            ;failed not equal (non zero)
1b4f : 209831          >        jsr report_error
                       >
1b52 :                 >skip1629
                       >
1b52 : 28              >            plp         ;restore status
                       >
1b53 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1b55 : f003            >        beq skip1631
                       >        trap            ;failed not equal (non zero)
1b57 : 209831          >        jsr report_error
                       >
1b5a :                 >skip1631
                       >
1b5a : e000            >            cpx #0
                       >            trap_ne         ;x changed
1b5c : f003            >        beq skip1633
                       >        trap            ;failed not equal (non zero)
1b5e : 209831          >        jsr report_error
                       >
1b61 :                 >skip1633
                       >
                        
                                nop_test $eb,1
1b61 : a042            >            ldy #$42
1b63 : a203            >            ldx #4-1
1b65 : eb              >            db  $eb          ;test nop length
                       >        if 1 = 1
1b66 : ca              >            dex
1b67 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1b68 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1b69 : f003            >        beq skip1636
                       >        trap            ;failed not equal (non zero)
1b6b : 209831          >        jsr report_error
                       >
1b6e :                 >skip1636
                       >
                       >            set_a $ff-$eb,0
                       >            load_flag 0
1b6e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1b70 : 48              >            pha         ;use stack to load status
1b71 : a914            >            lda #$ff-$eb     ;precharge accu
1b73 : 28              >            plp
                       >
1b74 : eb              >            db  $eb          ;test nop integrity - flags off
1b75 : ea              >            nop
1b76 : ea              >            nop
                       >            tst_a $ff-$eb,0
1b77 : 08              >            php         ;save flags
1b78 : 08              >            php
1b79 : c914            >            cmp #$ff-$eb     ;test result
                       >            trap_ne
1b7b : f003            >        beq skip1641
                       >        trap            ;failed not equal (non zero)
1b7d : 209831          >        jsr report_error
                       >
1b80 :                 >skip1641
                       >
1b80 : 68              >            pla         ;load status
                       >            cmp_flag 0
1b81 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b83 : f003            >        beq skip1644
                       >        trap            ;failed not equal (non zero)
1b85 : 209831          >        jsr report_error
                       >
1b88 :                 >skip1644
                       >
1b88 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$eb,$ff
                       >            load_flag $ff
1b89 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1b8b : 48              >            pha         ;use stack to load status
1b8c : a9bf            >            lda #$aa-$eb     ;precharge accu
1b8e : 28              >            plp
                       >
1b8f : eb              >            db  $eb          ;test nop integrity - flags on
1b90 : ea              >            nop
1b91 : ea              >            nop
                       >            tst_a $aa-$eb,$ff
1b92 : 08              >            php         ;save flags
1b93 : 08              >            php
1b94 : c9bf            >            cmp #$aa-$eb     ;test result
                       >            trap_ne
1b96 : f003            >        beq skip1649
                       >        trap            ;failed not equal (non zero)
1b98 : 209831          >        jsr report_error
                       >
1b9b :                 >skip1649
                       >
1b9b : 68              >            pla         ;load status
                       >            cmp_flag $ff
1b9c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b9e : f003            >        beq skip1652
                       >        trap            ;failed not equal (non zero)
1ba0 : 209831          >        jsr report_error
                       >
1ba3 :                 >skip1652
                       >
1ba3 : 28              >            plp         ;restore status
                       >
1ba4 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1ba6 : f003            >        beq skip1654
                       >        trap            ;failed not equal (non zero)
1ba8 : 209831          >        jsr report_error
                       >
1bab :                 >skip1654
                       >
1bab : e000            >            cpx #0
                       >            trap_ne         ;x changed
1bad : f003            >        beq skip1656
                       >        trap            ;failed not equal (non zero)
1baf : 209831          >        jsr report_error
                       >
1bb2 :                 >skip1656
                       >
                        
                                nop_test $fb,1
1bb2 : a042            >            ldy #$42
1bb4 : a203            >            ldx #4-1
1bb6 : fb              >            db  $fb          ;test nop length
                       >        if 1 = 1
1bb7 : ca              >            dex
1bb8 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1bb9 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1bba : f003            >        beq skip1659
                       >        trap            ;failed not equal (non zero)
1bbc : 209831          >        jsr report_error
                       >
1bbf :                 >skip1659
                       >
                       >            set_a $ff-$fb,0
                       >            load_flag 0
1bbf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1bc1 : 48              >            pha         ;use stack to load status
1bc2 : a904            >            lda #$ff-$fb     ;precharge accu
1bc4 : 28              >            plp
                       >
1bc5 : fb              >            db  $fb          ;test nop integrity - flags off
1bc6 : ea              >            nop
1bc7 : ea              >            nop
                       >            tst_a $ff-$fb,0
1bc8 : 08              >            php         ;save flags
1bc9 : 08              >            php
1bca : c904            >            cmp #$ff-$fb     ;test result
                       >            trap_ne
1bcc : f003            >        beq skip1664
                       >        trap            ;failed not equal (non zero)
1bce : 209831          >        jsr report_error
                       >
1bd1 :                 >skip1664
                       >
1bd1 : 68              >            pla         ;load status
                       >            cmp_flag 0
1bd2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1bd4 : f003            >        beq skip1667
                       >        trap            ;failed not equal (non zero)
1bd6 : 209831          >        jsr report_error
                       >
1bd9 :                 >skip1667
                       >
1bd9 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$fb,$ff
                       >            load_flag $ff
1bda : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1bdc : 48              >            pha         ;use stack to load status
1bdd : a9af            >            lda #$aa-$fb     ;precharge accu
1bdf : 28              >            plp
                       >
1be0 : fb              >            db  $fb          ;test nop integrity - flags on
1be1 : ea              >            nop
1be2 : ea              >            nop
                       >            tst_a $aa-$fb,$ff
1be3 : 08              >            php         ;save flags
1be4 : 08              >            php
1be5 : c9af            >            cmp #$aa-$fb     ;test result
                       >            trap_ne
1be7 : f003            >        beq skip1672
                       >        trap            ;failed not equal (non zero)
1be9 : 209831          >        jsr report_error
                       >
1bec :                 >skip1672
                       >
1bec : 68              >            pla         ;load status
                       >            cmp_flag $ff
1bed : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1bef : f003            >        beq skip1675
                       >        trap            ;failed not equal (non zero)
1bf1 : 209831          >        jsr report_error
                       >
1bf4 :                 >skip1675
                       >
1bf4 : 28              >            plp         ;restore status
                       >
1bf5 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1bf7 : f003            >        beq skip1677
                       >        trap            ;failed not equal (non zero)
1bf9 : 209831          >        jsr report_error
                       >
1bfc :                 >skip1677
                       >
1bfc : e000            >            cpx #0
                       >            trap_ne         ;x changed
1bfe : f003            >        beq skip1679
                       >        trap            ;failed not equal (non zero)
1c00 : 209831          >        jsr report_error
                       >
1c03 :                 >skip1679
                       >
                        
                            if rkwl_wdc_op = 0      ;NOPs not available on Rockwell & WDC 65C02
                                nop_test $07,1
                                nop_test $17,1
                                nop_test $27,1
                                nop_test $37,1
                                nop_test $47,1
                                nop_test $57,1
                                nop_test $67,1
                                nop_test $77,1
                                nop_test $87,1
                                nop_test $97,1
                                nop_test $a7,1
                                nop_test $b7,1
                                nop_test $c7,1
                                nop_test $d7,1
                                nop_test $e7,1
                                nop_test $f7,1
                                nop_test $0f,1
                                nop_test $1f,1
                                nop_test $2f,1
                                nop_test $3f,1
                                nop_test $4f,1
                                nop_test $5f,1
                                nop_test $6f,1
                                nop_test $7f,1
                                nop_test $8f,1
                                nop_test $9f,1
                                nop_test $af,1
                                nop_test $bf,1
                                nop_test $cf,1
                                nop_test $df,1
                                nop_test $ef,1
                                nop_test $ff,1
                            endif
                            if  wdc_op = 0          ;NOPs not available on WDC 65C02 (WAI, STP)
                                nop_test $cb,1
1c03 : a042            >            ldy #$42
1c05 : a203            >            ldx #4-1
1c07 : cb              >            db  $cb          ;test nop length
                       >        if 1 = 1
1c08 : ca              >            dex
1c09 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1c0a : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1c0b : f003            >        beq skip1682
                       >        trap            ;failed not equal (non zero)
1c0d : 209831          >        jsr report_error
                       >
1c10 :                 >skip1682
                       >
                       >            set_a $ff-$cb,0
                       >            load_flag 0
1c10 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1c12 : 48              >            pha         ;use stack to load status
1c13 : a934            >            lda #$ff-$cb     ;precharge accu
1c15 : 28              >            plp
                       >
1c16 : cb              >            db  $cb          ;test nop integrity - flags off
1c17 : ea              >            nop
1c18 : ea              >            nop
                       >            tst_a $ff-$cb,0
1c19 : 08              >            php         ;save flags
1c1a : 08              >            php
1c1b : c934            >            cmp #$ff-$cb     ;test result
                       >            trap_ne
1c1d : f003            >        beq skip1687
                       >        trap            ;failed not equal (non zero)
1c1f : 209831          >        jsr report_error
                       >
1c22 :                 >skip1687
                       >
1c22 : 68              >            pla         ;load status
                       >            cmp_flag 0
1c23 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c25 : f003            >        beq skip1690
                       >        trap            ;failed not equal (non zero)
1c27 : 209831          >        jsr report_error
                       >
1c2a :                 >skip1690
                       >
1c2a : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$cb,$ff
                       >            load_flag $ff
1c2b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1c2d : 48              >            pha         ;use stack to load status
1c2e : a9df            >            lda #$aa-$cb     ;precharge accu
1c30 : 28              >            plp
                       >
1c31 : cb              >            db  $cb          ;test nop integrity - flags on
1c32 : ea              >            nop
1c33 : ea              >            nop
                       >            tst_a $aa-$cb,$ff
1c34 : 08              >            php         ;save flags
1c35 : 08              >            php
1c36 : c9df            >            cmp #$aa-$cb     ;test result
                       >            trap_ne
1c38 : f003            >        beq skip1695
                       >        trap            ;failed not equal (non zero)
1c3a : 209831          >        jsr report_error
                       >
1c3d :                 >skip1695
                       >
1c3d : 68              >            pla         ;load status
                       >            cmp_flag $ff
1c3e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c40 : f003            >        beq skip1698
                       >        trap            ;failed not equal (non zero)
1c42 : 209831          >        jsr report_error
                       >
1c45 :                 >skip1698
                       >
1c45 : 28              >            plp         ;restore status
                       >
1c46 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1c48 : f003            >        beq skip1700
                       >        trap            ;failed not equal (non zero)
1c4a : 209831          >        jsr report_error
                       >
1c4d :                 >skip1700
                       >
1c4d : e000            >            cpx #0
                       >            trap_ne         ;x changed
1c4f : f003            >        beq skip1702
                       >        trap            ;failed not equal (non zero)
1c51 : 209831          >        jsr report_error
                       >
1c54 :                 >skip1702
                       >
                        
                                nop_test $db,1
1c54 : a042            >            ldy #$42
1c56 : a203            >            ldx #4-1
1c58 : db              >            db  $db          ;test nop length
                       >        if 1 = 1
1c59 : ca              >            dex
1c5a : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1c5b : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1c5c : f003            >        beq skip1705
                       >        trap            ;failed not equal (non zero)
1c5e : 209831          >        jsr report_error
                       >
1c61 :                 >skip1705
                       >
                       >            set_a $ff-$db,0
                       >            load_flag 0
1c61 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1c63 : 48              >            pha         ;use stack to load status
1c64 : a924            >            lda #$ff-$db     ;precharge accu
1c66 : 28              >            plp
                       >
1c67 : db              >            db  $db          ;test nop integrity - flags off
1c68 : ea              >            nop
1c69 : ea              >            nop
                       >            tst_a $ff-$db,0
1c6a : 08              >            php         ;save flags
1c6b : 08              >            php
1c6c : c924            >            cmp #$ff-$db     ;test result
                       >            trap_ne
1c6e : f003            >        beq skip1710
                       >        trap            ;failed not equal (non zero)
1c70 : 209831          >        jsr report_error
                       >
1c73 :                 >skip1710
                       >
1c73 : 68              >            pla         ;load status
                       >            cmp_flag 0
1c74 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c76 : f003            >        beq skip1713
                       >        trap            ;failed not equal (non zero)
1c78 : 209831          >        jsr report_error
                       >
1c7b :                 >skip1713
                       >
1c7b : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$db,$ff
                       >            load_flag $ff
1c7c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1c7e : 48              >            pha         ;use stack to load status
1c7f : a9cf            >            lda #$aa-$db     ;precharge accu
1c81 : 28              >            plp
                       >
1c82 : db              >            db  $db          ;test nop integrity - flags on
1c83 : ea              >            nop
1c84 : ea              >            nop
                       >            tst_a $aa-$db,$ff
1c85 : 08              >            php         ;save flags
1c86 : 08              >            php
1c87 : c9cf            >            cmp #$aa-$db     ;test result
                       >            trap_ne
1c89 : f003            >        beq skip1718
                       >        trap            ;failed not equal (non zero)
1c8b : 209831          >        jsr report_error
                       >
1c8e :                 >skip1718
                       >
1c8e : 68              >            pla         ;load status
                       >            cmp_flag $ff
1c8f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c91 : f003            >        beq skip1721
                       >        trap            ;failed not equal (non zero)
1c93 : 209831          >        jsr report_error
                       >
1c96 :                 >skip1721
                       >
1c96 : 28              >            plp         ;restore status
                       >
1c97 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1c99 : f003            >        beq skip1723
                       >        trap            ;failed not equal (non zero)
1c9b : 209831          >        jsr report_error
                       >
1c9e :                 >skip1723
                       >
1c9e : e000            >            cpx #0
                       >            trap_ne         ;x changed
1ca0 : f003            >        beq skip1725
                       >        trap            ;failed not equal (non zero)
1ca2 : 209831          >        jsr report_error
                       >
1ca5 :                 >skip1725
                       >
                        
                            endif
                                next_test
1ca5 : ad0202          >            lda test_case   ;previous test
1ca8 : c908            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1caa : f003            >        beq skip1728
                       >        trap            ;failed not equal (non zero)
1cac : 209831          >        jsr report_error
                       >
1caf :                 >skip1728
                       >
0009 =                 >test_num = test_num + 1
1caf : a909            >            lda #test_num   ;*** next tests' number
1cb1 : 8d0202          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                    
                        ; jump indirect (test page cross bug is fixed)
1cb4 : a203                     ldx #3          ;prepare table
1cb6 : bdc030           ji1     lda ji_adr,x
1cb9 : 9dfd02                   sta ji_tab,x
1cbc : ca                       dex
1cbd : 10f7                     bpl ji1
1cbf : a933                     lda #hi(ji_px) ;high address if page cross bug
1cc1 : 8d0002                   sta pg_x
                                set_stat 0
                       >            load_flag 0
1cc4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1cc6 : 48              >            pha         ;use stack to load status
1cc7 : 28              >            plp
                        
1cc8 : a949                     lda #'I'
1cca : a24e                     ldx #'N'
1ccc : a044                     ldy #'D'        ;N=0, V=0, Z=0, C=0
1cce : 6cfd02                   jmp (ji_tab)
1cd1 : ea                       nop
                                trap_ne         ;runover protection
1cd2 : f003            >        beq skip1732
                       >        trap            ;failed not equal (non zero)
1cd4 : 209831          >        jsr report_error
                       >
1cd7 :                 >skip1732
                        
                        
1cd7 : 88                       dey
1cd8 : 88                       dey
1cd9 : 08               ji_ret  php             ;either SP or Y count will fail, if we do not hit
1cda : 88                       dey
1cdb : 88                       dey
1cdc : 88                       dey
1cdd : 28                       plp
                                trap_eq         ;returned flags OK?
1cde : d003            >        bne skip1734
                       >        trap           ;failed equal (zero)
1ce0 : 209831          >        jsr report_error
                       >
1ce3 :                 >skip1734
                        
                                trap_pl
1ce3 : 3003            >        bmi skip1736
                       >        trap            ;failed plus (bit 7 clear)
1ce5 : 209831          >        jsr report_error
                       >
1ce8 :                 >skip1736
                        
                                trap_cc
1ce8 : b003            >        bcs skip1738
                       >        trap            ;failed carry clear
1cea : 209831          >        jsr report_error
                       >
1ced :                 >skip1738
                        
                                trap_vc
1ced : 7003            >        bvs skip1740
                       >        trap            ;failed overflow clear
1cef : 209831          >        jsr report_error
                       >
1cf2 :                 >skip1740
                        
1cf2 : c9e3                     cmp #('I'^$aa)  ;returned registers OK?
                                trap_ne
1cf4 : f003            >        beq skip1742
                       >        trap            ;failed not equal (non zero)
1cf6 : 209831          >        jsr report_error
                       >
1cf9 :                 >skip1742
                        
1cf9 : e04f                     cpx #('N'+1)
                                trap_ne
1cfb : f003            >        beq skip1744
                       >        trap            ;failed not equal (non zero)
1cfd : 209831          >        jsr report_error
                       >
1d00 :                 >skip1744
                        
1d00 : c03e                     cpy #('D'-6)
                                trap_ne
1d02 : f003            >        beq skip1746
                       >        trap            ;failed not equal (non zero)
1d04 : 209831          >        jsr report_error
                       >
1d07 :                 >skip1746
                        
1d07 : ba                       tsx             ;SP check
1d08 : e0ff                     cpx #$ff
                                trap_ne
1d0a : f003            >        beq skip1748
                       >        trap            ;failed not equal (non zero)
1d0c : 209831          >        jsr report_error
                       >
1d0f :                 >skip1748
                        
                                next_test
1d0f : ad0202          >            lda test_case   ;previous test
1d12 : c909            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1d14 : f003            >        beq skip1751
                       >        trap            ;failed not equal (non zero)
1d16 : 209831          >        jsr report_error
                       >
1d19 :                 >skip1751
                       >
000a =                 >test_num = test_num + 1
1d19 : a90a            >            lda #test_num   ;*** next tests' number
1d1b : 8d0202          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; jump indexed indirect
1d1e : a20b                     ldx #11         ;prepare table
1d20 : bd1131           jxi1    lda jxi_adr,x
1d23 : 9df902                   sta jxi_tab,x
1d26 : ca                       dex
1d27 : 10f7                     bpl jxi1
1d29 : a934                     lda #hi(jxi_px) ;high address if page cross bug
1d2b : 8d0002                   sta pg_x
                                set_stat 0
                       >            load_flag 0
1d2e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1d30 : 48              >            pha         ;use stack to load status
1d31 : 28              >            plp
                        
1d32 : a958                     lda #'X'
1d34 : a204                     ldx #4
1d36 : a049                     ldy #'I'        ;N=0, V=0, Z=0, C=0
1d38 : 7cf902                   jmp (jxi_tab,x)
1d3b : ea                       nop
                                trap_ne         ;runover protection
1d3c : f003            >        beq skip1755
                       >        trap            ;failed not equal (non zero)
1d3e : 209831          >        jsr report_error
                       >
1d41 :                 >skip1755
                        
                        
1d41 : 88                       dey
1d42 : 88                       dey
1d43 : 08               jxi_ret php             ;either SP or Y count will fail, if we do not hit
1d44 : 88                       dey
1d45 : 88                       dey
1d46 : 88                       dey
1d47 : 28                       plp
                                trap_eq         ;returned flags OK?
1d48 : d003            >        bne skip1757
                       >        trap           ;failed equal (zero)
1d4a : 209831          >        jsr report_error
                       >
1d4d :                 >skip1757
                        
                                trap_pl
1d4d : 3003            >        bmi skip1759
                       >        trap            ;failed plus (bit 7 clear)
1d4f : 209831          >        jsr report_error
                       >
1d52 :                 >skip1759
                        
                                trap_cc
1d52 : b003            >        bcs skip1761
                       >        trap            ;failed carry clear
1d54 : 209831          >        jsr report_error
                       >
1d57 :                 >skip1761
                        
                                trap_vc
1d57 : 7003            >        bvs skip1763
                       >        trap            ;failed overflow clear
1d59 : 209831          >        jsr report_error
                       >
1d5c :                 >skip1763
                        
1d5c : c9f2                     cmp #('X'^$aa)  ;returned registers OK?
                                trap_ne
1d5e : f003            >        beq skip1765
                       >        trap            ;failed not equal (non zero)
1d60 : 209831          >        jsr report_error
                       >
1d63 :                 >skip1765
                        
1d63 : e006                     cpx #6
                                trap_ne
1d65 : f003            >        beq skip1767
                       >        trap            ;failed not equal (non zero)
1d67 : 209831          >        jsr report_error
                       >
1d6a :                 >skip1767
                        
1d6a : c043                     cpy #('I'-6)
                                trap_ne
1d6c : f003            >        beq skip1769
                       >        trap            ;failed not equal (non zero)
1d6e : 209831          >        jsr report_error
                       >
1d71 :                 >skip1769
                        
1d71 : ba                       tsx             ;SP check
1d72 : e0ff                     cpx #$ff
                                trap_ne
1d74 : f003            >        beq skip1771
                       >        trap            ;failed not equal (non zero)
1d76 : 209831          >        jsr report_error
                       >
1d79 :                 >skip1771
                        
                        
1d79 : a995                     lda #lo(jxp_ok) ;test with index causing a page cross
1d7b : 8d0003                   sta jxp_tab
1d7e : a91d                     lda #hi(jxp_ok)
1d80 : 8d0103                   sta jxp_tab+1
1d83 : a992                     lda #lo(jxp_px)
1d85 : 8d0002                   sta pg_x
1d88 : a91d                     lda #hi(jxp_px)
1d8a : 8d0102                   sta pg_x+1
1d8d : a2ff                     ldx #$ff
1d8f : 7c0102                   jmp (jxp_tab-$ff,x)
                                
1d92 :                  jxp_px  
                                trap            ;page cross by index to wrong page
1d92 : 209831          >        jsr report_error
                        
                        
1d95 :                  jxp_ok
                                next_test
1d95 : ad0202          >            lda test_case   ;previous test
1d98 : c90a            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1d9a : f003            >        beq skip1775
                       >        trap            ;failed not equal (non zero)
1d9c : 209831          >        jsr report_error
                       >
1d9f :                 >skip1775
                       >
000b =                 >test_num = test_num + 1
1d9f : a90b            >            lda #test_num   ;*** next tests' number
1da1 : 8d0202          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                            if ROM_vectors = 1
                        ; test BRK clears decimal mode
                                sed
                                brk
                                nop
                        brk_ret
                                next_test
                            endif
                         
                        ; testing accumulator increment/decrement INC A & DEC A
1da4 : a2ac                     ldx #$ac    ;protect x & y
1da6 : a0dc                     ldy #$dc
                                set_a $fe,$ff
                       >            load_flag $ff
1da8 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1daa : 48              >            pha         ;use stack to load status
1dab : a9fe            >            lda #$fe     ;precharge accu
1dad : 28              >            plp
                        
1dae : 1a                       inc a           ;ff
                                tst_as $ff,$ff-zero
1daf : 48              >            pha
1db0 : 08              >            php         ;save flags
1db1 : 08              >            php
1db2 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
1db4 : f003            >        beq skip1780
                       >        trap            ;failed not equal (non zero)
1db6 : 209831          >        jsr report_error
                       >
1db9 :                 >skip1780
                       >
1db9 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
1dba : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1dbc : f003            >        beq skip1783
                       >        trap            ;failed not equal (non zero)
1dbe : 209831          >        jsr report_error
                       >
1dc1 :                 >skip1783
                       >
1dc1 : 28              >            plp         ;restore status
1dc2 : 68              >            pla
                        
1dc3 : 1a                       inc a           ;00
                                tst_as 0,$ff-minus
1dc4 : 48              >            pha
1dc5 : 08              >            php         ;save flags
1dc6 : 08              >            php
1dc7 : c900            >            cmp #0     ;test result
                       >            trap_ne
1dc9 : f003            >        beq skip1786
                       >        trap            ;failed not equal (non zero)
1dcb : 209831          >        jsr report_error
                       >
1dce :                 >skip1786
                       >
1dce : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
1dcf : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1dd1 : f003            >        beq skip1789
                       >        trap            ;failed not equal (non zero)
1dd3 : 209831          >        jsr report_error
                       >
1dd6 :                 >skip1789
                       >
1dd6 : 28              >            plp         ;restore status
1dd7 : 68              >            pla
                        
1dd8 : 1a                       inc a           ;01
                                tst_as 1,$ff-minus-zero
1dd9 : 48              >            pha
1dda : 08              >            php         ;save flags
1ddb : 08              >            php
1ddc : c901            >            cmp #1     ;test result
                       >            trap_ne
1dde : f003            >        beq skip1792
                       >        trap            ;failed not equal (non zero)
1de0 : 209831          >        jsr report_error
                       >
1de3 :                 >skip1792
                       >
1de3 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus-zero
1de4 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1de6 : f003            >        beq skip1795
                       >        trap            ;failed not equal (non zero)
1de8 : 209831          >        jsr report_error
                       >
1deb :                 >skip1795
                       >
1deb : 28              >            plp         ;restore status
1dec : 68              >            pla
                        
1ded : 3a                       dec a           ;00
                                tst_as 0,$ff-minus
1dee : 48              >            pha
1def : 08              >            php         ;save flags
1df0 : 08              >            php
1df1 : c900            >            cmp #0     ;test result
                       >            trap_ne
1df3 : f003            >        beq skip1798
                       >        trap            ;failed not equal (non zero)
1df5 : 209831          >        jsr report_error
                       >
1df8 :                 >skip1798
                       >
1df8 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
1df9 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1dfb : f003            >        beq skip1801
                       >        trap            ;failed not equal (non zero)
1dfd : 209831          >        jsr report_error
                       >
1e00 :                 >skip1801
                       >
1e00 : 28              >            plp         ;restore status
1e01 : 68              >            pla
                        
1e02 : 3a                       dec a           ;ff
                                tst_as $ff,$ff-zero
1e03 : 48              >            pha
1e04 : 08              >            php         ;save flags
1e05 : 08              >            php
1e06 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
1e08 : f003            >        beq skip1804
                       >        trap            ;failed not equal (non zero)
1e0a : 209831          >        jsr report_error
                       >
1e0d :                 >skip1804
                       >
1e0d : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
1e0e : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e10 : f003            >        beq skip1807
                       >        trap            ;failed not equal (non zero)
1e12 : 209831          >        jsr report_error
                       >
1e15 :                 >skip1807
                       >
1e15 : 28              >            plp         ;restore status
1e16 : 68              >            pla
                        
1e17 : 3a                       dec a           ;fe
                                set_a $fe,0
                       >            load_flag 0
1e18 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1e1a : 48              >            pha         ;use stack to load status
1e1b : a9fe            >            lda #$fe     ;precharge accu
1e1d : 28              >            plp
                        
1e1e : 1a                       inc a           ;ff
                                tst_as $ff,minus
1e1f : 48              >            pha
1e20 : 08              >            php         ;save flags
1e21 : 08              >            php
1e22 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
1e24 : f003            >        beq skip1812
                       >        trap            ;failed not equal (non zero)
1e26 : 209831          >        jsr report_error
                       >
1e29 :                 >skip1812
                       >
1e29 : 68              >            pla         ;load status
                       >            cmp_flag minus
1e2a : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e2c : f003            >        beq skip1815
                       >        trap            ;failed not equal (non zero)
1e2e : 209831          >        jsr report_error
                       >
1e31 :                 >skip1815
                       >
1e31 : 28              >            plp         ;restore status
1e32 : 68              >            pla
                        
1e33 : 1a                       inc a           ;00
                                tst_as 0,zero
1e34 : 48              >            pha
1e35 : 08              >            php         ;save flags
1e36 : 08              >            php
1e37 : c900            >            cmp #0     ;test result
                       >            trap_ne
1e39 : f003            >        beq skip1818
                       >        trap            ;failed not equal (non zero)
1e3b : 209831          >        jsr report_error
                       >
1e3e :                 >skip1818
                       >
1e3e : 68              >            pla         ;load status
                       >            cmp_flag zero
1e3f : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e41 : f003            >        beq skip1821
                       >        trap            ;failed not equal (non zero)
1e43 : 209831          >        jsr report_error
                       >
1e46 :                 >skip1821
                       >
1e46 : 28              >            plp         ;restore status
1e47 : 68              >            pla
                        
1e48 : 1a                       inc a           ;01
                                tst_as 1,0
1e49 : 48              >            pha
1e4a : 08              >            php         ;save flags
1e4b : 08              >            php
1e4c : c901            >            cmp #1     ;test result
                       >            trap_ne
1e4e : f003            >        beq skip1824
                       >        trap            ;failed not equal (non zero)
1e50 : 209831          >        jsr report_error
                       >
1e53 :                 >skip1824
                       >
1e53 : 68              >            pla         ;load status
                       >            cmp_flag 0
1e54 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e56 : f003            >        beq skip1827
                       >        trap            ;failed not equal (non zero)
1e58 : 209831          >        jsr report_error
                       >
1e5b :                 >skip1827
                       >
1e5b : 28              >            plp         ;restore status
1e5c : 68              >            pla
                        
1e5d : 3a                       dec a           ;00
                                tst_as 0,zero
1e5e : 48              >            pha
1e5f : 08              >            php         ;save flags
1e60 : 08              >            php
1e61 : c900            >            cmp #0     ;test result
                       >            trap_ne
1e63 : f003            >        beq skip1830
                       >        trap            ;failed not equal (non zero)
1e65 : 209831          >        jsr report_error
                       >
1e68 :                 >skip1830
                       >
1e68 : 68              >            pla         ;load status
                       >            cmp_flag zero
1e69 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e6b : f003            >        beq skip1833
                       >        trap            ;failed not equal (non zero)
1e6d : 209831          >        jsr report_error
                       >
1e70 :                 >skip1833
                       >
1e70 : 28              >            plp         ;restore status
1e71 : 68              >            pla
                        
1e72 : 3a                       dec a           ;ff
                                tst_as $ff,minus
1e73 : 48              >            pha
1e74 : 08              >            php         ;save flags
1e75 : 08              >            php
1e76 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
1e78 : f003            >        beq skip1836
                       >        trap            ;failed not equal (non zero)
1e7a : 209831          >        jsr report_error
                       >
1e7d :                 >skip1836
                       >
1e7d : 68              >            pla         ;load status
                       >            cmp_flag minus
1e7e : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e80 : f003            >        beq skip1839
                       >        trap            ;failed not equal (non zero)
1e82 : 209831          >        jsr report_error
                       >
1e85 :                 >skip1839
                       >
1e85 : 28              >            plp         ;restore status
1e86 : 68              >            pla
                        
1e87 : e0ac                     cpx #$ac
                                trap_ne     ;x altered during test
1e89 : f003            >        beq skip1841
                       >        trap            ;failed not equal (non zero)
1e8b : 209831          >        jsr report_error
                       >
1e8e :                 >skip1841
                        
1e8e : c0dc                     cpy #$dc
                                trap_ne     ;y altered during test
1e90 : f003            >        beq skip1843
                       >        trap            ;failed not equal (non zero)
1e92 : 209831          >        jsr report_error
                       >
1e95 :                 >skip1843
                        
1e95 : ba                       tsx
1e96 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
1e98 : f003            >        beq skip1845
                       >        trap            ;failed not equal (non zero)
1e9a : 209831          >        jsr report_error
                       >
1e9d :                 >skip1845
                        
                                next_test
1e9d : ad0202          >            lda test_case   ;previous test
1ea0 : c90b            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1ea2 : f003            >        beq skip1848
                       >        trap            ;failed not equal (non zero)
1ea4 : 209831          >        jsr report_error
                       >
1ea7 :                 >skip1848
                       >
000c =                 >test_num = test_num + 1
1ea7 : a90c            >            lda #test_num   ;*** next tests' number
1ea9 : 8d0202          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing load / store accumulator LDA / STA (zp)
1eac : a299                     ldx #$99    ;protect x & y
1eae : a066                     ldy #$66
                                set_stat 0  
                       >            load_flag 0  
1eb0 : a900            >            lda #0               ;allow test to change I-flag (no mask)
                       >
1eb2 : 48              >            pha         ;use stack to load status
1eb3 : 28              >            plp
                        
1eb4 : b222                     lda (ind1)
1eb6 : 08                       php         ;test stores do not alter flags
1eb7 : 49c3                     eor #$c3
1eb9 : 28                       plp
1eba : 922e                     sta (indt)
1ebc : 08                       php         ;flags after load/store sequence
1ebd : 49c3                     eor #$c3
1ebf : c9c3                     cmp #$c3    ;test result
                                trap_ne
1ec1 : f003            >        beq skip1852
                       >        trap            ;failed not equal (non zero)
1ec3 : 209831          >        jsr report_error
                       >
1ec6 :                 >skip1852
                        
1ec6 : 68                       pla         ;load status
                                eor_flag 0
1ec7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1ec9 : cd0f02                   cmp fLDx    ;test flags
                                trap_ne
1ecc : f003            >        beq skip1855
                       >        trap            ;failed not equal (non zero)
1ece : 209831          >        jsr report_error
                       >
1ed1 :                 >skip1855
                        
                                set_stat 0
                       >            load_flag 0
1ed1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1ed3 : 48              >            pha         ;use stack to load status
1ed4 : 28              >            plp
                        
1ed5 : b224                     lda (ind1+2)
1ed7 : 08                       php         ;test stores do not alter flags
1ed8 : 49c3                     eor #$c3
1eda : 28                       plp
1edb : 9230                     sta (indt+2)
1edd : 08                       php         ;flags after load/store sequence
1ede : 49c3                     eor #$c3
1ee0 : c982                     cmp #$82    ;test result
                                trap_ne
1ee2 : f003            >        beq skip1859
                       >        trap            ;failed not equal (non zero)
1ee4 : 209831          >        jsr report_error
                       >
1ee7 :                 >skip1859
                        
1ee7 : 68                       pla         ;load status
                                eor_flag 0
1ee8 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1eea : cd1002                   cmp fLDx+1  ;test flags
                                trap_ne
1eed : f003            >        beq skip1862
                       >        trap            ;failed not equal (non zero)
1eef : 209831          >        jsr report_error
                       >
1ef2 :                 >skip1862
                        
                                set_stat 0
                       >            load_flag 0
1ef2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1ef4 : 48              >            pha         ;use stack to load status
1ef5 : 28              >            plp
                        
1ef6 : b226                     lda (ind1+4)
1ef8 : 08                       php         ;test stores do not alter flags
1ef9 : 49c3                     eor #$c3
1efb : 28                       plp
1efc : 9232                     sta (indt+4)
1efe : 08                       php         ;flags after load/store sequence
1eff : 49c3                     eor #$c3
1f01 : c941                     cmp #$41    ;test result
                                trap_ne
1f03 : f003            >        beq skip1866
                       >        trap            ;failed not equal (non zero)
1f05 : 209831          >        jsr report_error
                       >
1f08 :                 >skip1866
                        
1f08 : 68                       pla         ;load status
                                eor_flag 0
1f09 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1f0b : cd1102                   cmp fLDx+2  ;test flags
                                trap_ne
1f0e : f003            >        beq skip1869
                       >        trap            ;failed not equal (non zero)
1f10 : 209831          >        jsr report_error
                       >
1f13 :                 >skip1869
                        
                                set_stat 0
                       >            load_flag 0
1f13 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1f15 : 48              >            pha         ;use stack to load status
1f16 : 28              >            plp
                        
1f17 : b228                     lda (ind1+6)
1f19 : 08                       php         ;test stores do not alter flags
1f1a : 49c3                     eor #$c3
1f1c : 28                       plp
1f1d : 9234                     sta (indt+6)
1f1f : 08                       php         ;flags after load/store sequence
1f20 : 49c3                     eor #$c3
1f22 : c900                     cmp #0      ;test result
                                trap_ne
1f24 : f003            >        beq skip1873
                       >        trap            ;failed not equal (non zero)
1f26 : 209831          >        jsr report_error
                       >
1f29 :                 >skip1873
                        
1f29 : 68                       pla         ;load status
                                eor_flag 0
1f2a : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
1f2c : cd1202                   cmp fLDx+3  ;test flags
                                trap_ne
1f2f : f003            >        beq skip1876
                       >        trap            ;failed not equal (non zero)
1f31 : 209831          >        jsr report_error
                       >
1f34 :                 >skip1876
                        
1f34 : e099                     cpx #$99
                                trap_ne     ;x altered during test
1f36 : f003            >        beq skip1878
                       >        trap            ;failed not equal (non zero)
1f38 : 209831          >        jsr report_error
                       >
1f3b :                 >skip1878
                        
1f3b : c066                     cpy #$66
                                trap_ne     ;y altered during test
1f3d : f003            >        beq skip1880
                       >        trap            ;failed not equal (non zero)
1f3f : 209831          >        jsr report_error
                       >
1f42 :                 >skip1880
                        
                        
1f42 : a003                     ldy #3      ;testing store result
1f44 : a200                     ldx #0
1f46 : b90502           tstai1  lda abst,y
1f49 : 49c3                     eor #$c3
1f4b : d90a02                   cmp abs1,y
                                trap_ne     ;store to indirect data
1f4e : f003            >        beq skip1882
                       >        trap            ;failed not equal (non zero)
1f50 : 209831          >        jsr report_error
                       >
1f53 :                 >skip1882
                        
1f53 : 8a                       txa
1f54 : 990502                   sta abst,y  ;clear                
1f57 : 88                       dey
1f58 : 10ec                     bpl tstai1
                        
1f5a : a299                     ldx #$99    ;protect x & y
1f5c : a066                     ldy #$66
                                set_stat $ff  
                       >            load_flag $ff  
1f5e : a9ff            >            lda #$ff               ;allow test to change I-flag (no mask)
                       >
1f60 : 48              >            pha         ;use stack to load status
1f61 : 28              >            plp
                        
1f62 : b222                     lda (ind1)
1f64 : 08                       php         ;test stores do not alter flags
1f65 : 49c3                     eor #$c3
1f67 : 28                       plp
1f68 : 922e                     sta (indt)
1f6a : 08                       php         ;flags after load/store sequence
1f6b : 49c3                     eor #$c3
1f6d : c9c3                     cmp #$c3    ;test result
                                trap_ne
1f6f : f003            >        beq skip1886
                       >        trap            ;failed not equal (non zero)
1f71 : 209831          >        jsr report_error
                       >
1f74 :                 >skip1886
                        
1f74 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1f75 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1f77 : cd0f02                   cmp fLDx    ;test flags
                                trap_ne
1f7a : f003            >        beq skip1889
                       >        trap            ;failed not equal (non zero)
1f7c : 209831          >        jsr report_error
                       >
1f7f :                 >skip1889
                        
                                set_stat $ff
                       >            load_flag $ff
1f7f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1f81 : 48              >            pha         ;use stack to load status
1f82 : 28              >            plp
                        
1f83 : b224                     lda (ind1+2)
1f85 : 08                       php         ;test stores do not alter flags
1f86 : 49c3                     eor #$c3
1f88 : 28                       plp
1f89 : 9230                     sta (indt+2)
1f8b : 08                       php         ;flags after load/store sequence
1f8c : 49c3                     eor #$c3
1f8e : c982                     cmp #$82    ;test result
                                trap_ne
1f90 : f003            >        beq skip1893
                       >        trap            ;failed not equal (non zero)
1f92 : 209831          >        jsr report_error
                       >
1f95 :                 >skip1893
                        
1f95 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1f96 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1f98 : cd1002                   cmp fLDx+1  ;test flags
                                trap_ne
1f9b : f003            >        beq skip1896
                       >        trap            ;failed not equal (non zero)
1f9d : 209831          >        jsr report_error
                       >
1fa0 :                 >skip1896
                        
                                set_stat $ff
                       >            load_flag $ff
1fa0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1fa2 : 48              >            pha         ;use stack to load status
1fa3 : 28              >            plp
                        
1fa4 : b226                     lda (ind1+4)
1fa6 : 08                       php         ;test stores do not alter flags
1fa7 : 49c3                     eor #$c3
1fa9 : 28                       plp
1faa : 9232                     sta (indt+4)
1fac : 08                       php         ;flags after load/store sequence
1fad : 49c3                     eor #$c3
1faf : c941                     cmp #$41    ;test result
                                trap_ne
1fb1 : f003            >        beq skip1900
                       >        trap            ;failed not equal (non zero)
1fb3 : 209831          >        jsr report_error
                       >
1fb6 :                 >skip1900
                        
1fb6 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1fb7 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1fb9 : cd1102                   cmp fLDx+2  ;test flags
                                trap_ne
1fbc : f003            >        beq skip1903
                       >        trap            ;failed not equal (non zero)
1fbe : 209831          >        jsr report_error
                       >
1fc1 :                 >skip1903
                        
                                set_stat $ff
                       >            load_flag $ff
1fc1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1fc3 : 48              >            pha         ;use stack to load status
1fc4 : 28              >            plp
                        
1fc5 : b228                     lda (ind1+6)
1fc7 : 08                       php         ;test stores do not alter flags
1fc8 : 49c3                     eor #$c3
1fca : 28                       plp
1fcb : 9234                     sta (indt+6)
1fcd : 08                       php         ;flags after load/store sequence
1fce : 49c3                     eor #$c3
1fd0 : c900                     cmp #0      ;test result
                                trap_ne
1fd2 : f003            >        beq skip1907
                       >        trap            ;failed not equal (non zero)
1fd4 : 209831          >        jsr report_error
                       >
1fd7 :                 >skip1907
                        
1fd7 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
1fd8 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
1fda : cd1202                   cmp fLDx+3  ;test flags
                                trap_ne
1fdd : f003            >        beq skip1910
                       >        trap            ;failed not equal (non zero)
1fdf : 209831          >        jsr report_error
                       >
1fe2 :                 >skip1910
                        
1fe2 : e099                     cpx #$99
                                trap_ne     ;x altered during test
1fe4 : f003            >        beq skip1912
                       >        trap            ;failed not equal (non zero)
1fe6 : 209831          >        jsr report_error
                       >
1fe9 :                 >skip1912
                        
1fe9 : c066                     cpy #$66
                                trap_ne     ;y altered during test
1feb : f003            >        beq skip1914
                       >        trap            ;failed not equal (non zero)
1fed : 209831          >        jsr report_error
                       >
1ff0 :                 >skip1914
                        
                        
1ff0 : a003                     ldy #3      ;testing store result
1ff2 : a200                     ldx #0
1ff4 : b90502           tstai2  lda abst,y
1ff7 : 49c3                     eor #$c3
1ff9 : d90a02                   cmp abs1,y
                                trap_ne     ;store to indirect data
1ffc : f003            >        beq skip1916
                       >        trap            ;failed not equal (non zero)
1ffe : 209831          >        jsr report_error
                       >
2001 :                 >skip1916
                        
2001 : 8a                       txa
2002 : 990502                   sta abst,y  ;clear                
2005 : 88                       dey
2006 : 10ec                     bpl tstai2
2008 : ba                       tsx
2009 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
200b : f003            >        beq skip1918
                       >        trap            ;failed not equal (non zero)
200d : 209831          >        jsr report_error
                       >
2010 :                 >skip1918
                        
                                next_test
2010 : ad0202          >            lda test_case   ;previous test
2013 : c90c            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2015 : f003            >        beq skip1921
                       >        trap            ;failed not equal (non zero)
2017 : 209831          >        jsr report_error
                       >
201a :                 >skip1921
                       >
000d =                 >test_num = test_num + 1
201a : a90d            >            lda #test_num   ;*** next tests' number
201c : 8d0202          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing STZ - zp / abs / zp,x / abs,x
201f : a07b                     ldy #123    ;protect y
2021 : a204                     ldx #4      ;precharge test area
2023 : a907                     lda #7
2025 : 950a             tstz1   sta zpt,x
2027 : 0a                       asl a
2028 : ca                       dex
2029 : 10fa                     bpl tstz1
202b : a204                     ldx #4
                                set_a $55,$ff
                       >            load_flag $ff
202d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
202f : 48              >            pha         ;use stack to load status
2030 : a955            >            lda #$55     ;precharge accu
2032 : 28              >            plp
                        
2033 : 640a                     stz zpt     
2035 : 640b                     stz zpt+1
2037 : 640c                     stz zpt+2
2039 : 640d                     stz zpt+3
203b : 640e                     stz zpt+4
                                tst_a $55,$ff
203d : 08              >            php         ;save flags
203e : 08              >            php
203f : c955            >            cmp #$55     ;test result
                       >            trap_ne
2041 : f003            >        beq skip1926
                       >        trap            ;failed not equal (non zero)
2043 : 209831          >        jsr report_error
                       >
2046 :                 >skip1926
                       >
2046 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2047 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2049 : f003            >        beq skip1929
                       >        trap            ;failed not equal (non zero)
204b : 209831          >        jsr report_error
                       >
204e :                 >skip1929
                       >
204e : 28              >            plp         ;restore status
                        
204f : b50a             tstz2   lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
2051 : f003            >        beq skip1931
                       >        trap            ;failed not equal (non zero)
2053 : 209831          >        jsr report_error
                       >
2056 :                 >skip1931
                        
2056 : ca                       dex
2057 : 10f6                     bpl tstz2
2059 : a204                     ldx #4      ;precharge test area
205b : a907                     lda #7
205d : 950a             tstz3   sta zpt,x
205f : 0a                       asl a
2060 : ca                       dex
2061 : 10fa                     bpl tstz3
2063 : a204                     ldx #4
                                set_a $aa,0
                       >            load_flag 0
2065 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2067 : 48              >            pha         ;use stack to load status
2068 : a9aa            >            lda #$aa     ;precharge accu
206a : 28              >            plp
                        
206b : 640a                     stz zpt     
206d : 640b                     stz zpt+1
206f : 640c                     stz zpt+2
2071 : 640d                     stz zpt+3
2073 : 640e                     stz zpt+4
                                tst_a $aa,0
2075 : 08              >            php         ;save flags
2076 : 08              >            php
2077 : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
2079 : f003            >        beq skip1936
                       >        trap            ;failed not equal (non zero)
207b : 209831          >        jsr report_error
                       >
207e :                 >skip1936
                       >
207e : 68              >            pla         ;load status
                       >            cmp_flag 0
207f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2081 : f003            >        beq skip1939
                       >        trap            ;failed not equal (non zero)
2083 : 209831          >        jsr report_error
                       >
2086 :                 >skip1939
                       >
2086 : 28              >            plp         ;restore status
                        
2087 : b50a             tstz4   lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
2089 : f003            >        beq skip1941
                       >        trap            ;failed not equal (non zero)
208b : 209831          >        jsr report_error
                       >
208e :                 >skip1941
                        
208e : ca                       dex
208f : 10f6                     bpl tstz4
                                
2091 : a204                     ldx #4      ;precharge test area
2093 : a907                     lda #7
2095 : 9d0502           tstz5   sta abst,x
2098 : 0a                       asl a
2099 : ca                       dex
209a : 10f9                     bpl tstz5
209c : a204                     ldx #4
                                set_a $55,$ff
                       >            load_flag $ff
209e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
20a0 : 48              >            pha         ;use stack to load status
20a1 : a955            >            lda #$55     ;precharge accu
20a3 : 28              >            plp
                        
20a4 : 9c0502                   stz abst     
20a7 : 9c0602                   stz abst+1
20aa : 9c0702                   stz abst+2
20ad : 9c0802                   stz abst+3
20b0 : 9c0902                   stz abst+4
                                tst_a $55,$ff
20b3 : 08              >            php         ;save flags
20b4 : 08              >            php
20b5 : c955            >            cmp #$55     ;test result
                       >            trap_ne
20b7 : f003            >        beq skip1946
                       >        trap            ;failed not equal (non zero)
20b9 : 209831          >        jsr report_error
                       >
20bc :                 >skip1946
                       >
20bc : 68              >            pla         ;load status
                       >            cmp_flag $ff
20bd : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
20bf : f003            >        beq skip1949
                       >        trap            ;failed not equal (non zero)
20c1 : 209831          >        jsr report_error
                       >
20c4 :                 >skip1949
                       >
20c4 : 28              >            plp         ;restore status
                        
20c5 : bd0502           tstz6   lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ abs
20c8 : f003            >        beq skip1951
                       >        trap            ;failed not equal (non zero)
20ca : 209831          >        jsr report_error
                       >
20cd :                 >skip1951
                        
20cd : ca                       dex
20ce : 10f5                     bpl tstz6
20d0 : a204                     ldx #4      ;precharge test area
20d2 : a907                     lda #7
20d4 : 9d0502           tstz7   sta abst,x
20d7 : 0a                       asl a
20d8 : ca                       dex
20d9 : 10f9                     bpl tstz7
20db : a204                     ldx #4
                                set_a $aa,0
                       >            load_flag 0
20dd : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
20df : 48              >            pha         ;use stack to load status
20e0 : a9aa            >            lda #$aa     ;precharge accu
20e2 : 28              >            plp
                        
20e3 : 9c0502                   stz abst     
20e6 : 9c0602                   stz abst+1
20e9 : 9c0702                   stz abst+2
20ec : 9c0802                   stz abst+3
20ef : 9c0902                   stz abst+4
                                tst_a $aa,0
20f2 : 08              >            php         ;save flags
20f3 : 08              >            php
20f4 : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
20f6 : f003            >        beq skip1956
                       >        trap            ;failed not equal (non zero)
20f8 : 209831          >        jsr report_error
                       >
20fb :                 >skip1956
                       >
20fb : 68              >            pla         ;load status
                       >            cmp_flag 0
20fc : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
20fe : f003            >        beq skip1959
                       >        trap            ;failed not equal (non zero)
2100 : 209831          >        jsr report_error
                       >
2103 :                 >skip1959
                       >
2103 : 28              >            plp         ;restore status
                        
2104 : bd0502           tstz8   lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ abs
2107 : f003            >        beq skip1961
                       >        trap            ;failed not equal (non zero)
2109 : 209831          >        jsr report_error
                       >
210c :                 >skip1961
                        
210c : ca                       dex
210d : 10f5                     bpl tstz8
                                
210f : a204                     ldx #4      ;precharge test area
2111 : a907                     lda #7
2113 : 950a             tstz11  sta zpt,x
2115 : 0a                       asl a
2116 : ca                       dex
2117 : 10fa                     bpl tstz11
2119 : a204                     ldx #4
211b :                  tstz15
                                set_a $55,$ff
                       >            load_flag $ff
211b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
211d : 48              >            pha         ;use stack to load status
211e : a955            >            lda #$55     ;precharge accu
2120 : 28              >            plp
                        
2121 : 740a                     stz zpt,x     
                                tst_a $55,$ff
2123 : 08              >            php         ;save flags
2124 : 08              >            php
2125 : c955            >            cmp #$55     ;test result
                       >            trap_ne
2127 : f003            >        beq skip1966
                       >        trap            ;failed not equal (non zero)
2129 : 209831          >        jsr report_error
                       >
212c :                 >skip1966
                       >
212c : 68              >            pla         ;load status
                       >            cmp_flag $ff
212d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
212f : f003            >        beq skip1969
                       >        trap            ;failed not equal (non zero)
2131 : 209831          >        jsr report_error
                       >
2134 :                 >skip1969
                       >
2134 : 28              >            plp         ;restore status
                        
2135 : ca                       dex
2136 : 10e3                     bpl tstz15
2138 : a204                     ldx #4
213a : b50a             tstz12  lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
213c : f003            >        beq skip1971
                       >        trap            ;failed not equal (non zero)
213e : 209831          >        jsr report_error
                       >
2141 :                 >skip1971
                        
2141 : ca                       dex
2142 : 10f6                     bpl tstz12
2144 : a204                     ldx #4      ;precharge test area
2146 : a907                     lda #7
2148 : 950a             tstz13  sta zpt,x
214a : 0a                       asl a
214b : ca                       dex
214c : 10fa                     bpl tstz13
214e : a204                     ldx #4
2150 :                  tstz16
                                set_a $aa,0
                       >            load_flag 0
2150 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2152 : 48              >            pha         ;use stack to load status
2153 : a9aa            >            lda #$aa     ;precharge accu
2155 : 28              >            plp
                        
2156 : 740a                     stz zpt,x
                                tst_a $aa,0
2158 : 08              >            php         ;save flags
2159 : 08              >            php
215a : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
215c : f003            >        beq skip1976
                       >        trap            ;failed not equal (non zero)
215e : 209831          >        jsr report_error
                       >
2161 :                 >skip1976
                       >
2161 : 68              >            pla         ;load status
                       >            cmp_flag 0
2162 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2164 : f003            >        beq skip1979
                       >        trap            ;failed not equal (non zero)
2166 : 209831          >        jsr report_error
                       >
2169 :                 >skip1979
                       >
2169 : 28              >            plp         ;restore status
                        
216a : ca                       dex
216b : 10e3                     bpl tstz16
216d : a204                     ldx #4
216f : b50a             tstz14  lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
2171 : f003            >        beq skip1981
                       >        trap            ;failed not equal (non zero)
2173 : 209831          >        jsr report_error
                       >
2176 :                 >skip1981
                        
2176 : ca                       dex
2177 : 10f6                     bpl tstz14
                                
2179 : a204                     ldx #4      ;precharge test area
217b : a907                     lda #7
217d : 9d0502           tstz21  sta abst,x
2180 : 0a                       asl a
2181 : ca                       dex
2182 : 10f9                     bpl tstz21
2184 : a204                     ldx #4
2186 :                  tstz25
                                set_a $55,$ff
                       >            load_flag $ff
2186 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2188 : 48              >            pha         ;use stack to load status
2189 : a955            >            lda #$55     ;precharge accu
218b : 28              >            plp
                        
218c : 9e0502                   stz abst,x     
                                tst_a $55,$ff
218f : 08              >            php         ;save flags
2190 : 08              >            php
2191 : c955            >            cmp #$55     ;test result
                       >            trap_ne
2193 : f003            >        beq skip1986
                       >        trap            ;failed not equal (non zero)
2195 : 209831          >        jsr report_error
                       >
2198 :                 >skip1986
                       >
2198 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2199 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
219b : f003            >        beq skip1989
                       >        trap            ;failed not equal (non zero)
219d : 209831          >        jsr report_error
                       >
21a0 :                 >skip1989
                       >
21a0 : 28              >            plp         ;restore status
                        
21a1 : ca                       dex
21a2 : 10e2                     bpl tstz25
21a4 : a204                     ldx #4
21a6 : bd0502           tstz22  lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
21a9 : f003            >        beq skip1991
                       >        trap            ;failed not equal (non zero)
21ab : 209831          >        jsr report_error
                       >
21ae :                 >skip1991
                        
21ae : ca                       dex
21af : 10f5                     bpl tstz22
21b1 : a204                     ldx #4      ;precharge test area
21b3 : a907                     lda #7
21b5 : 9d0502           tstz23  sta abst,x
21b8 : 0a                       asl a
21b9 : ca                       dex
21ba : 10f9                     bpl tstz23
21bc : a204                     ldx #4
21be :                  tstz26
                                set_a $aa,0
                       >            load_flag 0
21be : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
21c0 : 48              >            pha         ;use stack to load status
21c1 : a9aa            >            lda #$aa     ;precharge accu
21c3 : 28              >            plp
                        
21c4 : 9e0502                   stz abst,x
                                tst_a $aa,0
21c7 : 08              >            php         ;save flags
21c8 : 08              >            php
21c9 : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
21cb : f003            >        beq skip1996
                       >        trap            ;failed not equal (non zero)
21cd : 209831          >        jsr report_error
                       >
21d0 :                 >skip1996
                       >
21d0 : 68              >            pla         ;load status
                       >            cmp_flag 0
21d1 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
21d3 : f003            >        beq skip1999
                       >        trap            ;failed not equal (non zero)
21d5 : 209831          >        jsr report_error
                       >
21d8 :                 >skip1999
                       >
21d8 : 28              >            plp         ;restore status
                        
21d9 : ca                       dex
21da : 10e2                     bpl tstz26
21dc : a204                     ldx #4
21de : bd0502           tstz24  lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
21e1 : f003            >        beq skip2001
                       >        trap            ;failed not equal (non zero)
21e3 : 209831          >        jsr report_error
                       >
21e6 :                 >skip2001
                        
21e6 : ca                       dex
21e7 : 10f5                     bpl tstz24
                                
21e9 : c07b                     cpy #123
                                trap_ne     ;y altered during test 
21eb : f003            >        beq skip2003
                       >        trap            ;failed not equal (non zero)
21ed : 209831          >        jsr report_error
                       >
21f0 :                 >skip2003
                        
21f0 : ba                       tsx
21f1 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
21f3 : f003            >        beq skip2005
                       >        trap            ;failed not equal (non zero)
21f5 : 209831          >        jsr report_error
                       >
21f8 :                 >skip2005
                        
                                next_test
21f8 : ad0202          >            lda test_case   ;previous test
21fb : c90d            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
21fd : f003            >        beq skip2008
                       >        trap            ;failed not equal (non zero)
21ff : 209831          >        jsr report_error
                       >
2202 :                 >skip2008
                       >
000e =                 >test_num = test_num + 1
2202 : a90e            >            lda #test_num   ;*** next tests' number
2204 : 8d0202          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing BIT - zp,x / abs,x / #
2207 : a042                     ldy #$42
2209 : a203                     ldx #3
                                set_a $ff,0
                       >            load_flag 0
220b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
220d : 48              >            pha         ;use stack to load status
220e : a9ff            >            lda #$ff     ;precharge accu
2210 : 28              >            plp
                        
2211 : 3411                     bit zp1,x   ;00 - should set Z / clear  NV
                                tst_a $ff,fz 
2213 : 08              >            php         ;save flags
2214 : 08              >            php
2215 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
2217 : f003            >        beq skip2013
                       >        trap            ;failed not equal (non zero)
2219 : 209831          >        jsr report_error
                       >
221c :                 >skip2013
                       >
221c : 68              >            pla         ;load status
                       >            cmp_flag fz 
221d : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
221f : f003            >        beq skip2016
                       >        trap            ;failed not equal (non zero)
2221 : 209831          >        jsr report_error
                       >
2224 :                 >skip2016
                       >
2224 : 28              >            plp         ;restore status
                        
2225 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
2226 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2228 : 48              >            pha         ;use stack to load status
2229 : a901            >            lda #1     ;precharge accu
222b : 28              >            plp
                        
222c : 3411                     bit zp1,x   ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
222e : 08              >            php         ;save flags
222f : 08              >            php
2230 : c901            >            cmp #1     ;test result
                       >            trap_ne
2232 : f003            >        beq skip2021
                       >        trap            ;failed not equal (non zero)
2234 : 209831          >        jsr report_error
                       >
2237 :                 >skip2021
                       >
2237 : 68              >            pla         ;load status
                       >            cmp_flag fv
2238 : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
223a : f003            >        beq skip2024
                       >        trap            ;failed not equal (non zero)
223c : 209831          >        jsr report_error
                       >
223f :                 >skip2024
                       >
223f : 28              >            plp         ;restore status
                        
2240 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
2241 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2243 : 48              >            pha         ;use stack to load status
2244 : a901            >            lda #1     ;precharge accu
2246 : 28              >            plp
                        
2247 : 3411                     bit zp1,x   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
2249 : 08              >            php         ;save flags
224a : 08              >            php
224b : c901            >            cmp #1     ;test result
                       >            trap_ne
224d : f003            >        beq skip2029
                       >        trap            ;failed not equal (non zero)
224f : 209831          >        jsr report_error
                       >
2252 :                 >skip2029
                       >
2252 : 68              >            pla         ;load status
                       >            cmp_flag fnz
2253 : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2255 : f003            >        beq skip2032
                       >        trap            ;failed not equal (non zero)
2257 : 209831          >        jsr report_error
                       >
225a :                 >skip2032
                       >
225a : 28              >            plp         ;restore status
                        
225b : ca                       dex
                                set_a 1,0
                       >            load_flag 0
225c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
225e : 48              >            pha         ;use stack to load status
225f : a901            >            lda #1     ;precharge accu
2261 : 28              >            plp
                        
2262 : 3411                     bit zp1,x   ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
2264 : 08              >            php         ;save flags
2265 : 08              >            php
2266 : c901            >            cmp #1     ;test result
                       >            trap_ne
2268 : f003            >        beq skip2037
                       >        trap            ;failed not equal (non zero)
226a : 209831          >        jsr report_error
                       >
226d :                 >skip2037
                       >
226d : 68              >            pla         ;load status
                       >            cmp_flag fnv
226e : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2270 : f003            >        beq skip2040
                       >        trap            ;failed not equal (non zero)
2272 : 209831          >        jsr report_error
                       >
2275 :                 >skip2040
                       >
2275 : 28              >            plp         ;restore status
                        
                                
                                set_a 1,$ff
                       >            load_flag $ff
2276 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2278 : 48              >            pha         ;use stack to load status
2279 : a901            >            lda #1     ;precharge accu
227b : 28              >            plp
                        
227c : 3411                     bit zp1,x   ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
227e : 08              >            php         ;save flags
227f : 08              >            php
2280 : c901            >            cmp #1     ;test result
                       >            trap_ne
2282 : f003            >        beq skip2045
                       >        trap            ;failed not equal (non zero)
2284 : 209831          >        jsr report_error
                       >
2287 :                 >skip2045
                       >
2287 : 68              >            pla         ;load status
                       >            cmp_flag ~fz
2288 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
228a : f003            >        beq skip2048
                       >        trap            ;failed not equal (non zero)
228c : 209831          >        jsr report_error
                       >
228f :                 >skip2048
                       >
228f : 28              >            plp         ;restore status
                        
2290 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
2291 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2293 : 48              >            pha         ;use stack to load status
2294 : a901            >            lda #1     ;precharge accu
2296 : 28              >            plp
                        
2297 : 3411                     bit zp1,x   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
2299 : 08              >            php         ;save flags
229a : 08              >            php
229b : c901            >            cmp #1     ;test result
                       >            trap_ne
229d : f003            >        beq skip2053
                       >        trap            ;failed not equal (non zero)
229f : 209831          >        jsr report_error
                       >
22a2 :                 >skip2053
                       >
22a2 : 68              >            pla         ;load status
                       >            cmp_flag ~fv
22a3 : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
22a5 : f003            >        beq skip2056
                       >        trap            ;failed not equal (non zero)
22a7 : 209831          >        jsr report_error
                       >
22aa :                 >skip2056
                       >
22aa : 28              >            plp         ;restore status
                        
22ab : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
22ac : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
22ae : 48              >            pha         ;use stack to load status
22af : a901            >            lda #1     ;precharge accu
22b1 : 28              >            plp
                        
22b2 : 3411                     bit zp1,x   ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
22b4 : 08              >            php         ;save flags
22b5 : 08              >            php
22b6 : c901            >            cmp #1     ;test result
                       >            trap_ne
22b8 : f003            >        beq skip2061
                       >        trap            ;failed not equal (non zero)
22ba : 209831          >        jsr report_error
                       >
22bd :                 >skip2061
                       >
22bd : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
22be : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
22c0 : f003            >        beq skip2064
                       >        trap            ;failed not equal (non zero)
22c2 : 209831          >        jsr report_error
                       >
22c5 :                 >skip2064
                       >
22c5 : 28              >            plp         ;restore status
                        
22c6 : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
22c7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
22c9 : 48              >            pha         ;use stack to load status
22ca : a9ff            >            lda #$ff     ;precharge accu
22cc : 28              >            plp
                        
22cd : 3411                     bit zp1,x   ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv 
22cf : 08              >            php         ;save flags
22d0 : 08              >            php
22d1 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
22d3 : f003            >        beq skip2069
                       >        trap            ;failed not equal (non zero)
22d5 : 209831          >        jsr report_error
                       >
22d8 :                 >skip2069
                       >
22d8 : 68              >            pla         ;load status
                       >            cmp_flag ~fnv 
22d9 : c93f            >            cmp #(~fnv |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
22db : f003            >        beq skip2072
                       >        trap            ;failed not equal (non zero)
22dd : 209831          >        jsr report_error
                       >
22e0 :                 >skip2072
                       >
22e0 : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,0
                       >            load_flag 0
22e1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
22e3 : 48              >            pha         ;use stack to load status
22e4 : a9ff            >            lda #$ff     ;precharge accu
22e6 : 28              >            plp
                        
22e7 : 3c0a02                   bit abs1,x  ;00 - should set Z / clear  NV
                                tst_a $ff,fz 
22ea : 08              >            php         ;save flags
22eb : 08              >            php
22ec : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
22ee : f003            >        beq skip2077
                       >        trap            ;failed not equal (non zero)
22f0 : 209831          >        jsr report_error
                       >
22f3 :                 >skip2077
                       >
22f3 : 68              >            pla         ;load status
                       >            cmp_flag fz 
22f4 : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
22f6 : f003            >        beq skip2080
                       >        trap            ;failed not equal (non zero)
22f8 : 209831          >        jsr report_error
                       >
22fb :                 >skip2080
                       >
22fb : 28              >            plp         ;restore status
                        
22fc : ca                       dex
                                set_a 1,0
                       >            load_flag 0
22fd : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
22ff : 48              >            pha         ;use stack to load status
2300 : a901            >            lda #1     ;precharge accu
2302 : 28              >            plp
                        
2303 : 3c0a02                   bit abs1,x  ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
2306 : 08              >            php         ;save flags
2307 : 08              >            php
2308 : c901            >            cmp #1     ;test result
                       >            trap_ne
230a : f003            >        beq skip2085
                       >        trap            ;failed not equal (non zero)
230c : 209831          >        jsr report_error
                       >
230f :                 >skip2085
                       >
230f : 68              >            pla         ;load status
                       >            cmp_flag fv
2310 : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2312 : f003            >        beq skip2088
                       >        trap            ;failed not equal (non zero)
2314 : 209831          >        jsr report_error
                       >
2317 :                 >skip2088
                       >
2317 : 28              >            plp         ;restore status
                        
2318 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
2319 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
231b : 48              >            pha         ;use stack to load status
231c : a901            >            lda #1     ;precharge accu
231e : 28              >            plp
                        
231f : 3c0a02                   bit abs1,x  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
2322 : 08              >            php         ;save flags
2323 : 08              >            php
2324 : c901            >            cmp #1     ;test result
                       >            trap_ne
2326 : f003            >        beq skip2093
                       >        trap            ;failed not equal (non zero)
2328 : 209831          >        jsr report_error
                       >
232b :                 >skip2093
                       >
232b : 68              >            pla         ;load status
                       >            cmp_flag fnz
232c : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
232e : f003            >        beq skip2096
                       >        trap            ;failed not equal (non zero)
2330 : 209831          >        jsr report_error
                       >
2333 :                 >skip2096
                       >
2333 : 28              >            plp         ;restore status
                        
2334 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
2335 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2337 : 48              >            pha         ;use stack to load status
2338 : a901            >            lda #1     ;precharge accu
233a : 28              >            plp
                        
233b : 3c0a02                   bit abs1,x  ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
233e : 08              >            php         ;save flags
233f : 08              >            php
2340 : c901            >            cmp #1     ;test result
                       >            trap_ne
2342 : f003            >        beq skip2101
                       >        trap            ;failed not equal (non zero)
2344 : 209831          >        jsr report_error
                       >
2347 :                 >skip2101
                       >
2347 : 68              >            pla         ;load status
                       >            cmp_flag fnv
2348 : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
234a : f003            >        beq skip2104
                       >        trap            ;failed not equal (non zero)
234c : 209831          >        jsr report_error
                       >
234f :                 >skip2104
                       >
234f : 28              >            plp         ;restore status
                        
                                
                                set_a 1,$ff
                       >            load_flag $ff
2350 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2352 : 48              >            pha         ;use stack to load status
2353 : a901            >            lda #1     ;precharge accu
2355 : 28              >            plp
                        
2356 : 3c0a02                   bit abs1,x  ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
2359 : 08              >            php         ;save flags
235a : 08              >            php
235b : c901            >            cmp #1     ;test result
                       >            trap_ne
235d : f003            >        beq skip2109
                       >        trap            ;failed not equal (non zero)
235f : 209831          >        jsr report_error
                       >
2362 :                 >skip2109
                       >
2362 : 68              >            pla         ;load status
                       >            cmp_flag ~fz
2363 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2365 : f003            >        beq skip2112
                       >        trap            ;failed not equal (non zero)
2367 : 209831          >        jsr report_error
                       >
236a :                 >skip2112
                       >
236a : 28              >            plp         ;restore status
                        
236b : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
236c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
236e : 48              >            pha         ;use stack to load status
236f : a901            >            lda #1     ;precharge accu
2371 : 28              >            plp
                        
2372 : 3c0a02                   bit abs1,x  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
2375 : 08              >            php         ;save flags
2376 : 08              >            php
2377 : c901            >            cmp #1     ;test result
                       >            trap_ne
2379 : f003            >        beq skip2117
                       >        trap            ;failed not equal (non zero)
237b : 209831          >        jsr report_error
                       >
237e :                 >skip2117
                       >
237e : 68              >            pla         ;load status
                       >            cmp_flag ~fv
237f : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2381 : f003            >        beq skip2120
                       >        trap            ;failed not equal (non zero)
2383 : 209831          >        jsr report_error
                       >
2386 :                 >skip2120
                       >
2386 : 28              >            plp         ;restore status
                        
2387 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
2388 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
238a : 48              >            pha         ;use stack to load status
238b : a901            >            lda #1     ;precharge accu
238d : 28              >            plp
                        
238e : 3c0a02                   bit abs1,x  ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
2391 : 08              >            php         ;save flags
2392 : 08              >            php
2393 : c901            >            cmp #1     ;test result
                       >            trap_ne
2395 : f003            >        beq skip2125
                       >        trap            ;failed not equal (non zero)
2397 : 209831          >        jsr report_error
                       >
239a :                 >skip2125
                       >
239a : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
239b : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
239d : f003            >        beq skip2128
                       >        trap            ;failed not equal (non zero)
239f : 209831          >        jsr report_error
                       >
23a2 :                 >skip2128
                       >
23a2 : 28              >            plp         ;restore status
                        
23a3 : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
23a4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
23a6 : 48              >            pha         ;use stack to load status
23a7 : a9ff            >            lda #$ff     ;precharge accu
23a9 : 28              >            plp
                        
23aa : 3c0a02                   bit abs1,x  ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv 
23ad : 08              >            php         ;save flags
23ae : 08              >            php
23af : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
23b1 : f003            >        beq skip2133
                       >        trap            ;failed not equal (non zero)
23b3 : 209831          >        jsr report_error
                       >
23b6 :                 >skip2133
                       >
23b6 : 68              >            pla         ;load status
                       >            cmp_flag ~fnv 
23b7 : c93f            >            cmp #(~fnv |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
23b9 : f003            >        beq skip2136
                       >        trap            ;failed not equal (non zero)
23bb : 209831          >        jsr report_error
                       >
23be :                 >skip2136
                       >
23be : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,0
                       >            load_flag 0
23bf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
23c1 : 48              >            pha         ;use stack to load status
23c2 : a9ff            >            lda #$ff     ;precharge accu
23c4 : 28              >            plp
                        
23c5 : 8900                     bit #$00    ;00 - should set Z
                                tst_a $ff,fz 
23c7 : 08              >            php         ;save flags
23c8 : 08              >            php
23c9 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
23cb : f003            >        beq skip2141
                       >        trap            ;failed not equal (non zero)
23cd : 209831          >        jsr report_error
                       >
23d0 :                 >skip2141
                       >
23d0 : 68              >            pla         ;load status
                       >            cmp_flag fz 
23d1 : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
23d3 : f003            >        beq skip2144
                       >        trap            ;failed not equal (non zero)
23d5 : 209831          >        jsr report_error
                       >
23d8 :                 >skip2144
                       >
23d8 : 28              >            plp         ;restore status
                        
23d9 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
23da : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
23dc : 48              >            pha         ;use stack to load status
23dd : a901            >            lda #1     ;precharge accu
23df : 28              >            plp
                        
23e0 : 8941                     bit #$41    ;41 - should clear Z
                                tst_a 1,0
23e2 : 08              >            php         ;save flags
23e3 : 08              >            php
23e4 : c901            >            cmp #1     ;test result
                       >            trap_ne
23e6 : f003            >        beq skip2149
                       >        trap            ;failed not equal (non zero)
23e8 : 209831          >        jsr report_error
                       >
23eb :                 >skip2149
                       >
23eb : 68              >            pla         ;load status
                       >            cmp_flag 0
23ec : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
23ee : f003            >        beq skip2152
                       >        trap            ;failed not equal (non zero)
23f0 : 209831          >        jsr report_error
                       >
23f3 :                 >skip2152
                       >
23f3 : 28              >            plp         ;restore status
                        
                        ; *** DEBUG INFO ***
                        ; if it fails the previous test and your BIT # has set the V flag
                        ; see http://forum.6502.org/viewtopic.php?f=2&t=2241&p=27243#p27239
                        ; why it shouldn't alter N or V flags on a BIT #
23f4 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
23f5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
23f7 : 48              >            pha         ;use stack to load status
23f8 : a901            >            lda #1     ;precharge accu
23fa : 28              >            plp
                        
23fb : 8982                     bit #$82    ;82 - should set Z
                                tst_a 1,fz
23fd : 08              >            php         ;save flags
23fe : 08              >            php
23ff : c901            >            cmp #1     ;test result
                       >            trap_ne
2401 : f003            >        beq skip2157
                       >        trap            ;failed not equal (non zero)
2403 : 209831          >        jsr report_error
                       >
2406 :                 >skip2157
                       >
2406 : 68              >            pla         ;load status
                       >            cmp_flag fz
2407 : c932            >            cmp #(fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2409 : f003            >        beq skip2160
                       >        trap            ;failed not equal (non zero)
240b : 209831          >        jsr report_error
                       >
240e :                 >skip2160
                       >
240e : 28              >            plp         ;restore status
                        
240f : ca                       dex
                                set_a 1,0
                       >            load_flag 0
2410 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2412 : 48              >            pha         ;use stack to load status
2413 : a901            >            lda #1     ;precharge accu
2415 : 28              >            plp
                        
2416 : 89c3                     bit #$c3    ;c3 - should clear Z
                                tst_a 1,0
2418 : 08              >            php         ;save flags
2419 : 08              >            php
241a : c901            >            cmp #1     ;test result
                       >            trap_ne
241c : f003            >        beq skip2165
                       >        trap            ;failed not equal (non zero)
241e : 209831          >        jsr report_error
                       >
2421 :                 >skip2165
                       >
2421 : 68              >            pla         ;load status
                       >            cmp_flag 0
2422 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2424 : f003            >        beq skip2168
                       >        trap            ;failed not equal (non zero)
2426 : 209831          >        jsr report_error
                       >
2429 :                 >skip2168
                       >
2429 : 28              >            plp         ;restore status
                        
                                
                                set_a 1,$ff
                       >            load_flag $ff
242a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
242c : 48              >            pha         ;use stack to load status
242d : a901            >            lda #1     ;precharge accu
242f : 28              >            plp
                        
2430 : 89c3                     bit #$c3    ;c3 - clear Z
                                tst_a 1,~fz
2432 : 08              >            php         ;save flags
2433 : 08              >            php
2434 : c901            >            cmp #1     ;test result
                       >            trap_ne
2436 : f003            >        beq skip2173
                       >        trap            ;failed not equal (non zero)
2438 : 209831          >        jsr report_error
                       >
243b :                 >skip2173
                       >
243b : 68              >            pla         ;load status
                       >            cmp_flag ~fz
243c : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
243e : f003            >        beq skip2176
                       >        trap            ;failed not equal (non zero)
2440 : 209831          >        jsr report_error
                       >
2443 :                 >skip2176
                       >
2443 : 28              >            plp         ;restore status
                        
2444 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
2445 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2447 : 48              >            pha         ;use stack to load status
2448 : a901            >            lda #1     ;precharge accu
244a : 28              >            plp
                        
244b : 8982                     bit #$82    ;82 - should set Z
                                tst_a 1,$ff
244d : 08              >            php         ;save flags
244e : 08              >            php
244f : c901            >            cmp #1     ;test result
                       >            trap_ne
2451 : f003            >        beq skip2181
                       >        trap            ;failed not equal (non zero)
2453 : 209831          >        jsr report_error
                       >
2456 :                 >skip2181
                       >
2456 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2457 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2459 : f003            >        beq skip2184
                       >        trap            ;failed not equal (non zero)
245b : 209831          >        jsr report_error
                       >
245e :                 >skip2184
                       >
245e : 28              >            plp         ;restore status
                        
245f : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
2460 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2462 : 48              >            pha         ;use stack to load status
2463 : a901            >            lda #1     ;precharge accu
2465 : 28              >            plp
                        
2466 : 8941                     bit #$41    ;41 - should clear Z
                                tst_a 1,~fz
2468 : 08              >            php         ;save flags
2469 : 08              >            php
246a : c901            >            cmp #1     ;test result
                       >            trap_ne
246c : f003            >        beq skip2189
                       >        trap            ;failed not equal (non zero)
246e : 209831          >        jsr report_error
                       >
2471 :                 >skip2189
                       >
2471 : 68              >            pla         ;load status
                       >            cmp_flag ~fz
2472 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2474 : f003            >        beq skip2192
                       >        trap            ;failed not equal (non zero)
2476 : 209831          >        jsr report_error
                       >
2479 :                 >skip2192
                       >
2479 : 28              >            plp         ;restore status
                        
247a : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
247b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
247d : 48              >            pha         ;use stack to load status
247e : a9ff            >            lda #$ff     ;precharge accu
2480 : 28              >            plp
                        
2481 : 8900                     bit #$00   ;00 - should set Z
                                tst_a $ff,$ff
2483 : 08              >            php         ;save flags
2484 : 08              >            php
2485 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
2487 : f003            >        beq skip2197
                       >        trap            ;failed not equal (non zero)
2489 : 209831          >        jsr report_error
                       >
248c :                 >skip2197
                       >
248c : 68              >            pla         ;load status
                       >            cmp_flag $ff
248d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
248f : f003            >        beq skip2200
                       >        trap            ;failed not equal (non zero)
2491 : 209831          >        jsr report_error
                       >
2494 :                 >skip2200
                       >
2494 : 28              >            plp         ;restore status
                        
                                
2495 : e003                     cpx #3
                                trap_ne     ;x altered during test
2497 : f003            >        beq skip2202
                       >        trap            ;failed not equal (non zero)
2499 : 209831          >        jsr report_error
                       >
249c :                 >skip2202
                        
249c : c042                     cpy #$42
                                trap_ne     ;y altered during test 
249e : f003            >        beq skip2204
                       >        trap            ;failed not equal (non zero)
24a0 : 209831          >        jsr report_error
                       >
24a3 :                 >skip2204
                        
24a3 : ba                       tsx
24a4 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
24a6 : f003            >        beq skip2206
                       >        trap            ;failed not equal (non zero)
24a8 : 209831          >        jsr report_error
                       >
24ab :                 >skip2206
                        
                                next_test
24ab : ad0202          >            lda test_case   ;previous test
24ae : c90e            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
24b0 : f003            >        beq skip2209
                       >        trap            ;failed not equal (non zero)
24b2 : 209831          >        jsr report_error
                       >
24b5 :                 >skip2209
                       >
000f =                 >test_num = test_num + 1
24b5 : a90f            >            lda #test_num   ;*** next tests' number
24b7 : 8d0202          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing TRB, TSB - zp / abs
                        
                        trbt    macro       ;\1 = memory, \2 = flags   
                                sty \1
                                load_flag \2
                                pha
                                lda zpt+1
                                plp
                                trb \1
                                php
                                cmp zpt+1
                                trap_ne     ;accu was changed
                                pla
                                pha
                                ora #fz     ;mask Z
                                cmp_flag \2|fz
                                trap_ne     ;flags changed except Z
                                pla
                                and #fz
                                cmp zpt+2
                                trap_ne     ;Z flag invalid
                                lda zpt+3
                                cmp zpt
                                trap_ne     ;altered bits in memory wrong       
                                endm
                        
                        tsbt    macro       ;\1 = memory, \2 = flags   
                                sty \1
                                load_flag \2
                                pha
                                lda zpt+1
                                plp
                                tsb \1
                                php
                                cmp zpt+1
                                trap_ne     ;accu was changed
                                pla
                                pha
                                ora #fz     ;mask Z
                                cmp_flag \2|fz
                                trap_ne     ;flags changed except Z
                                pla
                                and #fz
                                cmp zpt+2
                                trap_ne     ;Z flag invalid
                                lda zpt+4
                                cmp zpt
                                trap_ne     ;altered bits in memory wrong        
                                endm
                        
24ba : a2c0                     ldx #$c0
24bc : a000                     ldy #0      ;op1 - memory save
                                ;   zpt     ;op1 - memory modifiable
24be : 640b                     stz zpt+1   ;op2 - accu
                                ;   zpt+2   ;and flags
                                ;   zpt+3   ;memory after reset
                                ;   zpt+4   ;memory after set
                                
24c0 : 98               tbt1    tya
24c1 : 250b                     and zpt+1   ;set Z by anding the 2 operands
24c3 : 08                       php
24c4 : 68                       pla
24c5 : 2902                     and #fz     ;mask Z
24c7 : 850c                     sta zpt+2
24c9 : 98                       tya         ;reset op1 bits by op2
24ca : 49ff                     eor #$ff
24cc : 050b                     ora zpt+1
24ce : 49ff                     eor #$ff
24d0 : 850d                     sta zpt+3
24d2 : 98                       tya         ;set op1 bits by op2
24d3 : 050b                     ora zpt+1
24d5 : 850e                     sta zpt+4
                        
                                trbt zpt,$ff
24d7 : 840a            >        sty zpt
                       >        load_flag $ff
24d9 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
24db : 48              >        pha
24dc : a50b            >        lda zpt+1
24de : 28              >        plp
24df : 140a            >        trb zpt
24e1 : 08              >        php
24e2 : c50b            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
24e4 : f003            >        beq skip2213
                       >        trap            ;failed not equal (non zero)
24e6 : 209831          >        jsr report_error
                       >
24e9 :                 >skip2213
                       >
24e9 : 68              >        pla
24ea : 48              >        pha
24eb : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
24ed : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
24ef : f003            >        beq skip2216
                       >        trap            ;failed not equal (non zero)
24f1 : 209831          >        jsr report_error
                       >
24f4 :                 >skip2216
                       >
24f4 : 68              >        pla
24f5 : 2902            >        and #fz
24f7 : c50c            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
24f9 : f003            >        beq skip2218
                       >        trap            ;failed not equal (non zero)
24fb : 209831          >        jsr report_error
                       >
24fe :                 >skip2218
                       >
24fe : a50d            >        lda zpt+3
2500 : c50a            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
2502 : f003            >        beq skip2220
                       >        trap            ;failed not equal (non zero)
2504 : 209831          >        jsr report_error
                       >
2507 :                 >skip2220
                       >
                        
                                trbt abst,$ff
2507 : 8c0502          >        sty abst
                       >        load_flag $ff
250a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
250c : 48              >        pha
250d : a50b            >        lda zpt+1
250f : 28              >        plp
2510 : 1c0502          >        trb abst
2513 : 08              >        php
2514 : c50b            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
2516 : f003            >        beq skip2224
                       >        trap            ;failed not equal (non zero)
2518 : 209831          >        jsr report_error
                       >
251b :                 >skip2224
                       >
251b : 68              >        pla
251c : 48              >        pha
251d : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
251f : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
2521 : f003            >        beq skip2227
                       >        trap            ;failed not equal (non zero)
2523 : 209831          >        jsr report_error
                       >
2526 :                 >skip2227
                       >
2526 : 68              >        pla
2527 : 2902            >        and #fz
2529 : c50c            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
252b : f003            >        beq skip2229
                       >        trap            ;failed not equal (non zero)
252d : 209831          >        jsr report_error
                       >
2530 :                 >skip2229
                       >
2530 : a50d            >        lda zpt+3
2532 : c50a            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
2534 : f003            >        beq skip2231
                       >        trap            ;failed not equal (non zero)
2536 : 209831          >        jsr report_error
                       >
2539 :                 >skip2231
                       >
                        
                                trbt zpt,0
2539 : 840a            >        sty zpt
                       >        load_flag 0
253b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
253d : 48              >        pha
253e : a50b            >        lda zpt+1
2540 : 28              >        plp
2541 : 140a            >        trb zpt
2543 : 08              >        php
2544 : c50b            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
2546 : f003            >        beq skip2235
                       >        trap            ;failed not equal (non zero)
2548 : 209831          >        jsr report_error
                       >
254b :                 >skip2235
                       >
254b : 68              >        pla
254c : 48              >        pha
254d : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
254f : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
2551 : f003            >        beq skip2238
                       >        trap            ;failed not equal (non zero)
2553 : 209831          >        jsr report_error
                       >
2556 :                 >skip2238
                       >
2556 : 68              >        pla
2557 : 2902            >        and #fz
2559 : c50c            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
255b : f003            >        beq skip2240
                       >        trap            ;failed not equal (non zero)
255d : 209831          >        jsr report_error
                       >
2560 :                 >skip2240
                       >
2560 : a50d            >        lda zpt+3
2562 : c50a            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
2564 : f003            >        beq skip2242
                       >        trap            ;failed not equal (non zero)
2566 : 209831          >        jsr report_error
                       >
2569 :                 >skip2242
                       >
                        
                                trbt abst,0
2569 : 8c0502          >        sty abst
                       >        load_flag 0
256c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
256e : 48              >        pha
256f : a50b            >        lda zpt+1
2571 : 28              >        plp
2572 : 1c0502          >        trb abst
2575 : 08              >        php
2576 : c50b            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
2578 : f003            >        beq skip2246
                       >        trap            ;failed not equal (non zero)
257a : 209831          >        jsr report_error
                       >
257d :                 >skip2246
                       >
257d : 68              >        pla
257e : 48              >        pha
257f : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
2581 : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
2583 : f003            >        beq skip2249
                       >        trap            ;failed not equal (non zero)
2585 : 209831          >        jsr report_error
                       >
2588 :                 >skip2249
                       >
2588 : 68              >        pla
2589 : 2902            >        and #fz
258b : c50c            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
258d : f003            >        beq skip2251
                       >        trap            ;failed not equal (non zero)
258f : 209831          >        jsr report_error
                       >
2592 :                 >skip2251
                       >
2592 : a50d            >        lda zpt+3
2594 : c50a            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
2596 : f003            >        beq skip2253
                       >        trap            ;failed not equal (non zero)
2598 : 209831          >        jsr report_error
                       >
259b :                 >skip2253
                       >
                        
                                tsbt zpt,$ff
259b : 840a            >        sty zpt
                       >        load_flag $ff
259d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
259f : 48              >        pha
25a0 : a50b            >        lda zpt+1
25a2 : 28              >        plp
25a3 : 040a            >        tsb zpt
25a5 : 08              >        php
25a6 : c50b            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
25a8 : f003            >        beq skip2257
                       >        trap            ;failed not equal (non zero)
25aa : 209831          >        jsr report_error
                       >
25ad :                 >skip2257
                       >
25ad : 68              >        pla
25ae : 48              >        pha
25af : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
25b1 : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
25b3 : f003            >        beq skip2260
                       >        trap            ;failed not equal (non zero)
25b5 : 209831          >        jsr report_error
                       >
25b8 :                 >skip2260
                       >
25b8 : 68              >        pla
25b9 : 2902            >        and #fz
25bb : c50c            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
25bd : f003            >        beq skip2262
                       >        trap            ;failed not equal (non zero)
25bf : 209831          >        jsr report_error
                       >
25c2 :                 >skip2262
                       >
25c2 : a50e            >        lda zpt+4
25c4 : c50a            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
25c6 : f003            >        beq skip2264
                       >        trap            ;failed not equal (non zero)
25c8 : 209831          >        jsr report_error
                       >
25cb :                 >skip2264
                       >
                        
                                tsbt abst,$ff
25cb : 8c0502          >        sty abst
                       >        load_flag $ff
25ce : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
25d0 : 48              >        pha
25d1 : a50b            >        lda zpt+1
25d3 : 28              >        plp
25d4 : 0c0502          >        tsb abst
25d7 : 08              >        php
25d8 : c50b            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
25da : f003            >        beq skip2268
                       >        trap            ;failed not equal (non zero)
25dc : 209831          >        jsr report_error
                       >
25df :                 >skip2268
                       >
25df : 68              >        pla
25e0 : 48              >        pha
25e1 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
25e3 : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
25e5 : f003            >        beq skip2271
                       >        trap            ;failed not equal (non zero)
25e7 : 209831          >        jsr report_error
                       >
25ea :                 >skip2271
                       >
25ea : 68              >        pla
25eb : 2902            >        and #fz
25ed : c50c            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
25ef : f003            >        beq skip2273
                       >        trap            ;failed not equal (non zero)
25f1 : 209831          >        jsr report_error
                       >
25f4 :                 >skip2273
                       >
25f4 : a50e            >        lda zpt+4
25f6 : c50a            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
25f8 : f003            >        beq skip2275
                       >        trap            ;failed not equal (non zero)
25fa : 209831          >        jsr report_error
                       >
25fd :                 >skip2275
                       >
                        
                                tsbt zpt,0
25fd : 840a            >        sty zpt
                       >        load_flag 0
25ff : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2601 : 48              >        pha
2602 : a50b            >        lda zpt+1
2604 : 28              >        plp
2605 : 040a            >        tsb zpt
2607 : 08              >        php
2608 : c50b            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
260a : f003            >        beq skip2279
                       >        trap            ;failed not equal (non zero)
260c : 209831          >        jsr report_error
                       >
260f :                 >skip2279
                       >
260f : 68              >        pla
2610 : 48              >        pha
2611 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
2613 : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
2615 : f003            >        beq skip2282
                       >        trap            ;failed not equal (non zero)
2617 : 209831          >        jsr report_error
                       >
261a :                 >skip2282
                       >
261a : 68              >        pla
261b : 2902            >        and #fz
261d : c50c            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
261f : f003            >        beq skip2284
                       >        trap            ;failed not equal (non zero)
2621 : 209831          >        jsr report_error
                       >
2624 :                 >skip2284
                       >
2624 : a50e            >        lda zpt+4
2626 : c50a            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
2628 : f003            >        beq skip2286
                       >        trap            ;failed not equal (non zero)
262a : 209831          >        jsr report_error
                       >
262d :                 >skip2286
                       >
                        
                                tsbt abst,0
262d : 8c0502          >        sty abst
                       >        load_flag 0
2630 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2632 : 48              >        pha
2633 : a50b            >        lda zpt+1
2635 : 28              >        plp
2636 : 0c0502          >        tsb abst
2639 : 08              >        php
263a : c50b            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
263c : f003            >        beq skip2290
                       >        trap            ;failed not equal (non zero)
263e : 209831          >        jsr report_error
                       >
2641 :                 >skip2290
                       >
2641 : 68              >        pla
2642 : 48              >        pha
2643 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
2645 : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
2647 : f003            >        beq skip2293
                       >        trap            ;failed not equal (non zero)
2649 : 209831          >        jsr report_error
                       >
264c :                 >skip2293
                       >
264c : 68              >        pla
264d : 2902            >        and #fz
264f : c50c            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
2651 : f003            >        beq skip2295
                       >        trap            ;failed not equal (non zero)
2653 : 209831          >        jsr report_error
                       >
2656 :                 >skip2295
                       >
2656 : a50e            >        lda zpt+4
2658 : c50a            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
265a : f003            >        beq skip2297
                       >        trap            ;failed not equal (non zero)
265c : 209831          >        jsr report_error
                       >
265f :                 >skip2297
                       >
                        
                                
265f : c8                       iny         ;iterate op1
2660 : d004                     bne tbt3
2662 : e60b                     inc zpt+1   ;iterate op2
2664 : f003                     beq tbt2
2666 : 4cc024           tbt3    jmp tbt1        
2669 :                  tbt2
2669 : e0c0                     cpx #$c0
                                trap_ne     ;x altered during test
266b : f003            >        beq skip2299
                       >        trap            ;failed not equal (non zero)
266d : 209831          >        jsr report_error
                       >
2670 :                 >skip2299
                        
2670 : ba                       tsx
2671 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
2673 : f003            >        beq skip2301
                       >        trap            ;failed not equal (non zero)
2675 : 209831          >        jsr report_error
                       >
2678 :                 >skip2301
                        
                                next_test    
2678 : ad0202          >            lda test_case   ;previous test
267b : c90f            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
267d : f003            >        beq skip2304
                       >        trap            ;failed not equal (non zero)
267f : 209831          >        jsr report_error
                       >
2682 :                 >skip2304
                       >
0010 =                 >test_num = test_num + 1
2682 : a910            >            lda #test_num   ;*** next tests' number
2684 : 8d0202          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                            if rkwl_wdc_op
                        ; testing RMB, SMB - zp
                        rmbt    macro       ;\1 = bitnum
                                lda #$ff
                                sta zpt
                                set_a $a5,0
                                rmb \1,zpt
                                tst_a $a5,0
                                lda zpt
                                cmp #$ff-(1<<\1)
                                trap_ne     ;wrong bits set or cleared
                                lda #1<<\1
                                sta zpt
                                set_a $5a,$ff
                                rmb \1,zpt
                                tst_a $5a,$ff
                                lda zpt
                                trap_ne     ;wrong bits set or cleared
                                endm
                        smbt    macro       ;\1 = bitnum
                                lda #$ff-(1<<\1)
                                sta zpt
                                set_a $a5,0
                                smb \1,zpt
                                tst_a $a5,0
                                lda zpt
                                cmp #$ff
                                trap_ne     ;wrong bits set or cleared
                                lda #0
                                sta zpt
                                set_a $5a,$ff
                                smb \1,zpt
                                tst_a $5a,$ff
                                lda zpt
                                cmp #1<<\1
                                trap_ne     ;wrong bits set or cleared
                                endm
                        
2687 : a2ba                     ldx #$ba    ;protect x & y
2689 : a0d0                     ldy #$d0
                                rmbt 0
268b : a9ff            >        lda #$ff
268d : 850a            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
268f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2691 : 48              >            pha         ;use stack to load status
2692 : a9a5            >            lda #$a5     ;precharge accu
2694 : 28              >            plp
                       >
2695 : 070a            >        rmb 0,zpt
                       >        tst_a $a5,0
2697 : 08              >            php         ;save flags
2698 : 08              >            php
2699 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
269b : f003            >        beq skip2310
                       >        trap            ;failed not equal (non zero)
269d : 209831          >        jsr report_error
                       >
26a0 :                 >skip2310
                       >
26a0 : 68              >            pla         ;load status
                       >            cmp_flag 0
26a1 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
26a3 : f003            >        beq skip2313
                       >        trap            ;failed not equal (non zero)
26a5 : 209831          >        jsr report_error
                       >
26a8 :                 >skip2313
                       >
26a8 : 28              >            plp         ;restore status
                       >
26a9 : a50a            >        lda zpt
26ab : c9fe            >        cmp #$ff-(1<<0)
                       >        trap_ne     ;wrong bits set or cleared
26ad : f003            >        beq skip2315
                       >        trap            ;failed not equal (non zero)
26af : 209831          >        jsr report_error
                       >
26b2 :                 >skip2315
                       >
26b2 : a901            >        lda #1<<0
26b4 : 850a            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
26b6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
26b8 : 48              >            pha         ;use stack to load status
26b9 : a95a            >            lda #$5a     ;precharge accu
26bb : 28              >            plp
                       >
26bc : 070a            >        rmb 0,zpt
                       >        tst_a $5a,$ff
26be : 08              >            php         ;save flags
26bf : 08              >            php
26c0 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
26c2 : f003            >        beq skip2320
                       >        trap            ;failed not equal (non zero)
26c4 : 209831          >        jsr report_error
                       >
26c7 :                 >skip2320
                       >
26c7 : 68              >            pla         ;load status
                       >            cmp_flag $ff
26c8 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
26ca : f003            >        beq skip2323
                       >        trap            ;failed not equal (non zero)
26cc : 209831          >        jsr report_error
                       >
26cf :                 >skip2323
                       >
26cf : 28              >            plp         ;restore status
                       >
26d0 : a50a            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
26d2 : f003            >        beq skip2325
                       >        trap            ;failed not equal (non zero)
26d4 : 209831          >        jsr report_error
                       >
26d7 :                 >skip2325
                       >
                        
                                rmbt 1
26d7 : a9ff            >        lda #$ff
26d9 : 850a            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
26db : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
26dd : 48              >            pha         ;use stack to load status
26de : a9a5            >            lda #$a5     ;precharge accu
26e0 : 28              >            plp
                       >
26e1 : 170a            >        rmb 1,zpt
                       >        tst_a $a5,0
26e3 : 08              >            php         ;save flags
26e4 : 08              >            php
26e5 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
26e7 : f003            >        beq skip2331
                       >        trap            ;failed not equal (non zero)
26e9 : 209831          >        jsr report_error
                       >
26ec :                 >skip2331
                       >
26ec : 68              >            pla         ;load status
                       >            cmp_flag 0
26ed : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
26ef : f003            >        beq skip2334
                       >        trap            ;failed not equal (non zero)
26f1 : 209831          >        jsr report_error
                       >
26f4 :                 >skip2334
                       >
26f4 : 28              >            plp         ;restore status
                       >
26f5 : a50a            >        lda zpt
26f7 : c9fd            >        cmp #$ff-(1<<1)
                       >        trap_ne     ;wrong bits set or cleared
26f9 : f003            >        beq skip2336
                       >        trap            ;failed not equal (non zero)
26fb : 209831          >        jsr report_error
                       >
26fe :                 >skip2336
                       >
26fe : a902            >        lda #1<<1
2700 : 850a            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
2702 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2704 : 48              >            pha         ;use stack to load status
2705 : a95a            >            lda #$5a     ;precharge accu
2707 : 28              >            plp
                       >
2708 : 170a            >        rmb 1,zpt
                       >        tst_a $5a,$ff
270a : 08              >            php         ;save flags
270b : 08              >            php
270c : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
270e : f003            >        beq skip2341
                       >        trap            ;failed not equal (non zero)
2710 : 209831          >        jsr report_error
                       >
2713 :                 >skip2341
                       >
2713 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2714 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2716 : f003            >        beq skip2344
                       >        trap            ;failed not equal (non zero)
2718 : 209831          >        jsr report_error
                       >
271b :                 >skip2344
                       >
271b : 28              >            plp         ;restore status
                       >
271c : a50a            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
271e : f003            >        beq skip2346
                       >        trap            ;failed not equal (non zero)
2720 : 209831          >        jsr report_error
                       >
2723 :                 >skip2346
                       >
                        
                                rmbt 2
2723 : a9ff            >        lda #$ff
2725 : 850a            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
2727 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2729 : 48              >            pha         ;use stack to load status
272a : a9a5            >            lda #$a5     ;precharge accu
272c : 28              >            plp
                       >
272d : 270a            >        rmb 2,zpt
                       >        tst_a $a5,0
272f : 08              >            php         ;save flags
2730 : 08              >            php
2731 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
2733 : f003            >        beq skip2352
                       >        trap            ;failed not equal (non zero)
2735 : 209831          >        jsr report_error
                       >
2738 :                 >skip2352
                       >
2738 : 68              >            pla         ;load status
                       >            cmp_flag 0
2739 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
273b : f003            >        beq skip2355
                       >        trap            ;failed not equal (non zero)
273d : 209831          >        jsr report_error
                       >
2740 :                 >skip2355
                       >
2740 : 28              >            plp         ;restore status
                       >
2741 : a50a            >        lda zpt
2743 : c9fb            >        cmp #$ff-(1<<2)
                       >        trap_ne     ;wrong bits set or cleared
2745 : f003            >        beq skip2357
                       >        trap            ;failed not equal (non zero)
2747 : 209831          >        jsr report_error
                       >
274a :                 >skip2357
                       >
274a : a904            >        lda #1<<2
274c : 850a            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
274e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2750 : 48              >            pha         ;use stack to load status
2751 : a95a            >            lda #$5a     ;precharge accu
2753 : 28              >            plp
                       >
2754 : 270a            >        rmb 2,zpt
                       >        tst_a $5a,$ff
2756 : 08              >            php         ;save flags
2757 : 08              >            php
2758 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
275a : f003            >        beq skip2362
                       >        trap            ;failed not equal (non zero)
275c : 209831          >        jsr report_error
                       >
275f :                 >skip2362
                       >
275f : 68              >            pla         ;load status
                       >            cmp_flag $ff
2760 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2762 : f003            >        beq skip2365
                       >        trap            ;failed not equal (non zero)
2764 : 209831          >        jsr report_error
                       >
2767 :                 >skip2365
                       >
2767 : 28              >            plp         ;restore status
                       >
2768 : a50a            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
276a : f003            >        beq skip2367
                       >        trap            ;failed not equal (non zero)
276c : 209831          >        jsr report_error
                       >
276f :                 >skip2367
                       >
                        
                                rmbt 3
276f : a9ff            >        lda #$ff
2771 : 850a            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
2773 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2775 : 48              >            pha         ;use stack to load status
2776 : a9a5            >            lda #$a5     ;precharge accu
2778 : 28              >            plp
                       >
2779 : 370a            >        rmb 3,zpt
                       >        tst_a $a5,0
277b : 08              >            php         ;save flags
277c : 08              >            php
277d : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
277f : f003            >        beq skip2373
                       >        trap            ;failed not equal (non zero)
2781 : 209831          >        jsr report_error
                       >
2784 :                 >skip2373
                       >
2784 : 68              >            pla         ;load status
                       >            cmp_flag 0
2785 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2787 : f003            >        beq skip2376
                       >        trap            ;failed not equal (non zero)
2789 : 209831          >        jsr report_error
                       >
278c :                 >skip2376
                       >
278c : 28              >            plp         ;restore status
                       >
278d : a50a            >        lda zpt
278f : c9f7            >        cmp #$ff-(1<<3)
                       >        trap_ne     ;wrong bits set or cleared
2791 : f003            >        beq skip2378
                       >        trap            ;failed not equal (non zero)
2793 : 209831          >        jsr report_error
                       >
2796 :                 >skip2378
                       >
2796 : a908            >        lda #1<<3
2798 : 850a            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
279a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
279c : 48              >            pha         ;use stack to load status
279d : a95a            >            lda #$5a     ;precharge accu
279f : 28              >            plp
                       >
27a0 : 370a            >        rmb 3,zpt
                       >        tst_a $5a,$ff
27a2 : 08              >            php         ;save flags
27a3 : 08              >            php
27a4 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
27a6 : f003            >        beq skip2383
                       >        trap            ;failed not equal (non zero)
27a8 : 209831          >        jsr report_error
                       >
27ab :                 >skip2383
                       >
27ab : 68              >            pla         ;load status
                       >            cmp_flag $ff
27ac : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
27ae : f003            >        beq skip2386
                       >        trap            ;failed not equal (non zero)
27b0 : 209831          >        jsr report_error
                       >
27b3 :                 >skip2386
                       >
27b3 : 28              >            plp         ;restore status
                       >
27b4 : a50a            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
27b6 : f003            >        beq skip2388
                       >        trap            ;failed not equal (non zero)
27b8 : 209831          >        jsr report_error
                       >
27bb :                 >skip2388
                       >
                        
                                rmbt 4
27bb : a9ff            >        lda #$ff
27bd : 850a            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
27bf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
27c1 : 48              >            pha         ;use stack to load status
27c2 : a9a5            >            lda #$a5     ;precharge accu
27c4 : 28              >            plp
                       >
27c5 : 470a            >        rmb 4,zpt
                       >        tst_a $a5,0
27c7 : 08              >            php         ;save flags
27c8 : 08              >            php
27c9 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
27cb : f003            >        beq skip2394
                       >        trap            ;failed not equal (non zero)
27cd : 209831          >        jsr report_error
                       >
27d0 :                 >skip2394
                       >
27d0 : 68              >            pla         ;load status
                       >            cmp_flag 0
27d1 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
27d3 : f003            >        beq skip2397
                       >        trap            ;failed not equal (non zero)
27d5 : 209831          >        jsr report_error
                       >
27d8 :                 >skip2397
                       >
27d8 : 28              >            plp         ;restore status
                       >
27d9 : a50a            >        lda zpt
27db : c9ef            >        cmp #$ff-(1<<4)
                       >        trap_ne     ;wrong bits set or cleared
27dd : f003            >        beq skip2399
                       >        trap            ;failed not equal (non zero)
27df : 209831          >        jsr report_error
                       >
27e2 :                 >skip2399
                       >
27e2 : a910            >        lda #1<<4
27e4 : 850a            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
27e6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
27e8 : 48              >            pha         ;use stack to load status
27e9 : a95a            >            lda #$5a     ;precharge accu
27eb : 28              >            plp
                       >
27ec : 470a            >        rmb 4,zpt
                       >        tst_a $5a,$ff
27ee : 08              >            php         ;save flags
27ef : 08              >            php
27f0 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
27f2 : f003            >        beq skip2404
                       >        trap            ;failed not equal (non zero)
27f4 : 209831          >        jsr report_error
                       >
27f7 :                 >skip2404
                       >
27f7 : 68              >            pla         ;load status
                       >            cmp_flag $ff
27f8 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
27fa : f003            >        beq skip2407
                       >        trap            ;failed not equal (non zero)
27fc : 209831          >        jsr report_error
                       >
27ff :                 >skip2407
                       >
27ff : 28              >            plp         ;restore status
                       >
2800 : a50a            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
2802 : f003            >        beq skip2409
                       >        trap            ;failed not equal (non zero)
2804 : 209831          >        jsr report_error
                       >
2807 :                 >skip2409
                       >
                        
                                rmbt 5
2807 : a9ff            >        lda #$ff
2809 : 850a            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
280b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
280d : 48              >            pha         ;use stack to load status
280e : a9a5            >            lda #$a5     ;precharge accu
2810 : 28              >            plp
                       >
2811 : 570a            >        rmb 5,zpt
                       >        tst_a $a5,0
2813 : 08              >            php         ;save flags
2814 : 08              >            php
2815 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
2817 : f003            >        beq skip2415
                       >        trap            ;failed not equal (non zero)
2819 : 209831          >        jsr report_error
                       >
281c :                 >skip2415
                       >
281c : 68              >            pla         ;load status
                       >            cmp_flag 0
281d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
281f : f003            >        beq skip2418
                       >        trap            ;failed not equal (non zero)
2821 : 209831          >        jsr report_error
                       >
2824 :                 >skip2418
                       >
2824 : 28              >            plp         ;restore status
                       >
2825 : a50a            >        lda zpt
2827 : c9df            >        cmp #$ff-(1<<5)
                       >        trap_ne     ;wrong bits set or cleared
2829 : f003            >        beq skip2420
                       >        trap            ;failed not equal (non zero)
282b : 209831          >        jsr report_error
                       >
282e :                 >skip2420
                       >
282e : a920            >        lda #1<<5
2830 : 850a            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
2832 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2834 : 48              >            pha         ;use stack to load status
2835 : a95a            >            lda #$5a     ;precharge accu
2837 : 28              >            plp
                       >
2838 : 570a            >        rmb 5,zpt
                       >        tst_a $5a,$ff
283a : 08              >            php         ;save flags
283b : 08              >            php
283c : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
283e : f003            >        beq skip2425
                       >        trap            ;failed not equal (non zero)
2840 : 209831          >        jsr report_error
                       >
2843 :                 >skip2425
                       >
2843 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2844 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2846 : f003            >        beq skip2428
                       >        trap            ;failed not equal (non zero)
2848 : 209831          >        jsr report_error
                       >
284b :                 >skip2428
                       >
284b : 28              >            plp         ;restore status
                       >
284c : a50a            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
284e : f003            >        beq skip2430
                       >        trap            ;failed not equal (non zero)
2850 : 209831          >        jsr report_error
                       >
2853 :                 >skip2430
                       >
                        
                                rmbt 6
2853 : a9ff            >        lda #$ff
2855 : 850a            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
2857 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2859 : 48              >            pha         ;use stack to load status
285a : a9a5            >            lda #$a5     ;precharge accu
285c : 28              >            plp
                       >
285d : 670a            >        rmb 6,zpt
                       >        tst_a $a5,0
285f : 08              >            php         ;save flags
2860 : 08              >            php
2861 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
2863 : f003            >        beq skip2436
                       >        trap            ;failed not equal (non zero)
2865 : 209831          >        jsr report_error
                       >
2868 :                 >skip2436
                       >
2868 : 68              >            pla         ;load status
                       >            cmp_flag 0
2869 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
286b : f003            >        beq skip2439
                       >        trap            ;failed not equal (non zero)
286d : 209831          >        jsr report_error
                       >
2870 :                 >skip2439
                       >
2870 : 28              >            plp         ;restore status
                       >
2871 : a50a            >        lda zpt
2873 : c9bf            >        cmp #$ff-(1<<6)
                       >        trap_ne     ;wrong bits set or cleared
2875 : f003            >        beq skip2441
                       >        trap            ;failed not equal (non zero)
2877 : 209831          >        jsr report_error
                       >
287a :                 >skip2441
                       >
287a : a940            >        lda #1<<6
287c : 850a            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
287e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2880 : 48              >            pha         ;use stack to load status
2881 : a95a            >            lda #$5a     ;precharge accu
2883 : 28              >            plp
                       >
2884 : 670a            >        rmb 6,zpt
                       >        tst_a $5a,$ff
2886 : 08              >            php         ;save flags
2887 : 08              >            php
2888 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
288a : f003            >        beq skip2446
                       >        trap            ;failed not equal (non zero)
288c : 209831          >        jsr report_error
                       >
288f :                 >skip2446
                       >
288f : 68              >            pla         ;load status
                       >            cmp_flag $ff
2890 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2892 : f003            >        beq skip2449
                       >        trap            ;failed not equal (non zero)
2894 : 209831          >        jsr report_error
                       >
2897 :                 >skip2449
                       >
2897 : 28              >            plp         ;restore status
                       >
2898 : a50a            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
289a : f003            >        beq skip2451
                       >        trap            ;failed not equal (non zero)
289c : 209831          >        jsr report_error
                       >
289f :                 >skip2451
                       >
                        
                                rmbt 7
289f : a9ff            >        lda #$ff
28a1 : 850a            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
28a3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
28a5 : 48              >            pha         ;use stack to load status
28a6 : a9a5            >            lda #$a5     ;precharge accu
28a8 : 28              >            plp
                       >
28a9 : 770a            >        rmb 7,zpt
                       >        tst_a $a5,0
28ab : 08              >            php         ;save flags
28ac : 08              >            php
28ad : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
28af : f003            >        beq skip2457
                       >        trap            ;failed not equal (non zero)
28b1 : 209831          >        jsr report_error
                       >
28b4 :                 >skip2457
                       >
28b4 : 68              >            pla         ;load status
                       >            cmp_flag 0
28b5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
28b7 : f003            >        beq skip2460
                       >        trap            ;failed not equal (non zero)
28b9 : 209831          >        jsr report_error
                       >
28bc :                 >skip2460
                       >
28bc : 28              >            plp         ;restore status
                       >
28bd : a50a            >        lda zpt
28bf : c97f            >        cmp #$ff-(1<<7)
                       >        trap_ne     ;wrong bits set or cleared
28c1 : f003            >        beq skip2462
                       >        trap            ;failed not equal (non zero)
28c3 : 209831          >        jsr report_error
                       >
28c6 :                 >skip2462
                       >
28c6 : a980            >        lda #1<<7
28c8 : 850a            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
28ca : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
28cc : 48              >            pha         ;use stack to load status
28cd : a95a            >            lda #$5a     ;precharge accu
28cf : 28              >            plp
                       >
28d0 : 770a            >        rmb 7,zpt
                       >        tst_a $5a,$ff
28d2 : 08              >            php         ;save flags
28d3 : 08              >            php
28d4 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
28d6 : f003            >        beq skip2467
                       >        trap            ;failed not equal (non zero)
28d8 : 209831          >        jsr report_error
                       >
28db :                 >skip2467
                       >
28db : 68              >            pla         ;load status
                       >            cmp_flag $ff
28dc : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
28de : f003            >        beq skip2470
                       >        trap            ;failed not equal (non zero)
28e0 : 209831          >        jsr report_error
                       >
28e3 :                 >skip2470
                       >
28e3 : 28              >            plp         ;restore status
                       >
28e4 : a50a            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
28e6 : f003            >        beq skip2472
                       >        trap            ;failed not equal (non zero)
28e8 : 209831          >        jsr report_error
                       >
28eb :                 >skip2472
                       >
                        
                                smbt 0
28eb : a9fe            >        lda #$ff-(1<<0)
28ed : 850a            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
28ef : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
28f1 : 48              >            pha         ;use stack to load status
28f2 : a9a5            >            lda #$a5     ;precharge accu
28f4 : 28              >            plp
                       >
28f5 : 870a            >        smb 0,zpt
                       >        tst_a $a5,0
28f7 : 08              >            php         ;save flags
28f8 : 08              >            php
28f9 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
28fb : f003            >        beq skip2478
                       >        trap            ;failed not equal (non zero)
28fd : 209831          >        jsr report_error
                       >
2900 :                 >skip2478
                       >
2900 : 68              >            pla         ;load status
                       >            cmp_flag 0
2901 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2903 : f003            >        beq skip2481
                       >        trap            ;failed not equal (non zero)
2905 : 209831          >        jsr report_error
                       >
2908 :                 >skip2481
                       >
2908 : 28              >            plp         ;restore status
                       >
2909 : a50a            >        lda zpt
290b : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
290d : f003            >        beq skip2483
                       >        trap            ;failed not equal (non zero)
290f : 209831          >        jsr report_error
                       >
2912 :                 >skip2483
                       >
2912 : a900            >        lda #0
2914 : 850a            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
2916 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2918 : 48              >            pha         ;use stack to load status
2919 : a95a            >            lda #$5a     ;precharge accu
291b : 28              >            plp
                       >
291c : 870a            >        smb 0,zpt
                       >        tst_a $5a,$ff
291e : 08              >            php         ;save flags
291f : 08              >            php
2920 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
2922 : f003            >        beq skip2488
                       >        trap            ;failed not equal (non zero)
2924 : 209831          >        jsr report_error
                       >
2927 :                 >skip2488
                       >
2927 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2928 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
292a : f003            >        beq skip2491
                       >        trap            ;failed not equal (non zero)
292c : 209831          >        jsr report_error
                       >
292f :                 >skip2491
                       >
292f : 28              >            plp         ;restore status
                       >
2930 : a50a            >        lda zpt
2932 : c901            >        cmp #1<<0
                       >        trap_ne     ;wrong bits set or cleared
2934 : f003            >        beq skip2493
                       >        trap            ;failed not equal (non zero)
2936 : 209831          >        jsr report_error
                       >
2939 :                 >skip2493
                       >
                        
                                smbt 1
2939 : a9fd            >        lda #$ff-(1<<1)
293b : 850a            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
293d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
293f : 48              >            pha         ;use stack to load status
2940 : a9a5            >            lda #$a5     ;precharge accu
2942 : 28              >            plp
                       >
2943 : 970a            >        smb 1,zpt
                       >        tst_a $a5,0
2945 : 08              >            php         ;save flags
2946 : 08              >            php
2947 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
2949 : f003            >        beq skip2499
                       >        trap            ;failed not equal (non zero)
294b : 209831          >        jsr report_error
                       >
294e :                 >skip2499
                       >
294e : 68              >            pla         ;load status
                       >            cmp_flag 0
294f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2951 : f003            >        beq skip2502
                       >        trap            ;failed not equal (non zero)
2953 : 209831          >        jsr report_error
                       >
2956 :                 >skip2502
                       >
2956 : 28              >            plp         ;restore status
                       >
2957 : a50a            >        lda zpt
2959 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
295b : f003            >        beq skip2504
                       >        trap            ;failed not equal (non zero)
295d : 209831          >        jsr report_error
                       >
2960 :                 >skip2504
                       >
2960 : a900            >        lda #0
2962 : 850a            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
2964 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2966 : 48              >            pha         ;use stack to load status
2967 : a95a            >            lda #$5a     ;precharge accu
2969 : 28              >            plp
                       >
296a : 970a            >        smb 1,zpt
                       >        tst_a $5a,$ff
296c : 08              >            php         ;save flags
296d : 08              >            php
296e : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
2970 : f003            >        beq skip2509
                       >        trap            ;failed not equal (non zero)
2972 : 209831          >        jsr report_error
                       >
2975 :                 >skip2509
                       >
2975 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2976 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2978 : f003            >        beq skip2512
                       >        trap            ;failed not equal (non zero)
297a : 209831          >        jsr report_error
                       >
297d :                 >skip2512
                       >
297d : 28              >            plp         ;restore status
                       >
297e : a50a            >        lda zpt
2980 : c902            >        cmp #1<<1
                       >        trap_ne     ;wrong bits set or cleared
2982 : f003            >        beq skip2514
                       >        trap            ;failed not equal (non zero)
2984 : 209831          >        jsr report_error
                       >
2987 :                 >skip2514
                       >
                        
                                smbt 2
2987 : a9fb            >        lda #$ff-(1<<2)
2989 : 850a            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
298b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
298d : 48              >            pha         ;use stack to load status
298e : a9a5            >            lda #$a5     ;precharge accu
2990 : 28              >            plp
                       >
2991 : a70a            >        smb 2,zpt
                       >        tst_a $a5,0
2993 : 08              >            php         ;save flags
2994 : 08              >            php
2995 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
2997 : f003            >        beq skip2520
                       >        trap            ;failed not equal (non zero)
2999 : 209831          >        jsr report_error
                       >
299c :                 >skip2520
                       >
299c : 68              >            pla         ;load status
                       >            cmp_flag 0
299d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
299f : f003            >        beq skip2523
                       >        trap            ;failed not equal (non zero)
29a1 : 209831          >        jsr report_error
                       >
29a4 :                 >skip2523
                       >
29a4 : 28              >            plp         ;restore status
                       >
29a5 : a50a            >        lda zpt
29a7 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
29a9 : f003            >        beq skip2525
                       >        trap            ;failed not equal (non zero)
29ab : 209831          >        jsr report_error
                       >
29ae :                 >skip2525
                       >
29ae : a900            >        lda #0
29b0 : 850a            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
29b2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
29b4 : 48              >            pha         ;use stack to load status
29b5 : a95a            >            lda #$5a     ;precharge accu
29b7 : 28              >            plp
                       >
29b8 : a70a            >        smb 2,zpt
                       >        tst_a $5a,$ff
29ba : 08              >            php         ;save flags
29bb : 08              >            php
29bc : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
29be : f003            >        beq skip2530
                       >        trap            ;failed not equal (non zero)
29c0 : 209831          >        jsr report_error
                       >
29c3 :                 >skip2530
                       >
29c3 : 68              >            pla         ;load status
                       >            cmp_flag $ff
29c4 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
29c6 : f003            >        beq skip2533
                       >        trap            ;failed not equal (non zero)
29c8 : 209831          >        jsr report_error
                       >
29cb :                 >skip2533
                       >
29cb : 28              >            plp         ;restore status
                       >
29cc : a50a            >        lda zpt
29ce : c904            >        cmp #1<<2
                       >        trap_ne     ;wrong bits set or cleared
29d0 : f003            >        beq skip2535
                       >        trap            ;failed not equal (non zero)
29d2 : 209831          >        jsr report_error
                       >
29d5 :                 >skip2535
                       >
                        
                                smbt 3
29d5 : a9f7            >        lda #$ff-(1<<3)
29d7 : 850a            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
29d9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
29db : 48              >            pha         ;use stack to load status
29dc : a9a5            >            lda #$a5     ;precharge accu
29de : 28              >            plp
                       >
29df : b70a            >        smb 3,zpt
                       >        tst_a $a5,0
29e1 : 08              >            php         ;save flags
29e2 : 08              >            php
29e3 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
29e5 : f003            >        beq skip2541
                       >        trap            ;failed not equal (non zero)
29e7 : 209831          >        jsr report_error
                       >
29ea :                 >skip2541
                       >
29ea : 68              >            pla         ;load status
                       >            cmp_flag 0
29eb : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
29ed : f003            >        beq skip2544
                       >        trap            ;failed not equal (non zero)
29ef : 209831          >        jsr report_error
                       >
29f2 :                 >skip2544
                       >
29f2 : 28              >            plp         ;restore status
                       >
29f3 : a50a            >        lda zpt
29f5 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
29f7 : f003            >        beq skip2546
                       >        trap            ;failed not equal (non zero)
29f9 : 209831          >        jsr report_error
                       >
29fc :                 >skip2546
                       >
29fc : a900            >        lda #0
29fe : 850a            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
2a00 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2a02 : 48              >            pha         ;use stack to load status
2a03 : a95a            >            lda #$5a     ;precharge accu
2a05 : 28              >            plp
                       >
2a06 : b70a            >        smb 3,zpt
                       >        tst_a $5a,$ff
2a08 : 08              >            php         ;save flags
2a09 : 08              >            php
2a0a : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
2a0c : f003            >        beq skip2551
                       >        trap            ;failed not equal (non zero)
2a0e : 209831          >        jsr report_error
                       >
2a11 :                 >skip2551
                       >
2a11 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2a12 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2a14 : f003            >        beq skip2554
                       >        trap            ;failed not equal (non zero)
2a16 : 209831          >        jsr report_error
                       >
2a19 :                 >skip2554
                       >
2a19 : 28              >            plp         ;restore status
                       >
2a1a : a50a            >        lda zpt
2a1c : c908            >        cmp #1<<3
                       >        trap_ne     ;wrong bits set or cleared
2a1e : f003            >        beq skip2556
                       >        trap            ;failed not equal (non zero)
2a20 : 209831          >        jsr report_error
                       >
2a23 :                 >skip2556
                       >
                        
                                smbt 4
2a23 : a9ef            >        lda #$ff-(1<<4)
2a25 : 850a            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
2a27 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2a29 : 48              >            pha         ;use stack to load status
2a2a : a9a5            >            lda #$a5     ;precharge accu
2a2c : 28              >            plp
                       >
2a2d : c70a            >        smb 4,zpt
                       >        tst_a $a5,0
2a2f : 08              >            php         ;save flags
2a30 : 08              >            php
2a31 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
2a33 : f003            >        beq skip2562
                       >        trap            ;failed not equal (non zero)
2a35 : 209831          >        jsr report_error
                       >
2a38 :                 >skip2562
                       >
2a38 : 68              >            pla         ;load status
                       >            cmp_flag 0
2a39 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2a3b : f003            >        beq skip2565
                       >        trap            ;failed not equal (non zero)
2a3d : 209831          >        jsr report_error
                       >
2a40 :                 >skip2565
                       >
2a40 : 28              >            plp         ;restore status
                       >
2a41 : a50a            >        lda zpt
2a43 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
2a45 : f003            >        beq skip2567
                       >        trap            ;failed not equal (non zero)
2a47 : 209831          >        jsr report_error
                       >
2a4a :                 >skip2567
                       >
2a4a : a900            >        lda #0
2a4c : 850a            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
2a4e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2a50 : 48              >            pha         ;use stack to load status
2a51 : a95a            >            lda #$5a     ;precharge accu
2a53 : 28              >            plp
                       >
2a54 : c70a            >        smb 4,zpt
                       >        tst_a $5a,$ff
2a56 : 08              >            php         ;save flags
2a57 : 08              >            php
2a58 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
2a5a : f003            >        beq skip2572
                       >        trap            ;failed not equal (non zero)
2a5c : 209831          >        jsr report_error
                       >
2a5f :                 >skip2572
                       >
2a5f : 68              >            pla         ;load status
                       >            cmp_flag $ff
2a60 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2a62 : f003            >        beq skip2575
                       >        trap            ;failed not equal (non zero)
2a64 : 209831          >        jsr report_error
                       >
2a67 :                 >skip2575
                       >
2a67 : 28              >            plp         ;restore status
                       >
2a68 : a50a            >        lda zpt
2a6a : c910            >        cmp #1<<4
                       >        trap_ne     ;wrong bits set or cleared
2a6c : f003            >        beq skip2577
                       >        trap            ;failed not equal (non zero)
2a6e : 209831          >        jsr report_error
                       >
2a71 :                 >skip2577
                       >
                        
                                smbt 5
2a71 : a9df            >        lda #$ff-(1<<5)
2a73 : 850a            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
2a75 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2a77 : 48              >            pha         ;use stack to load status
2a78 : a9a5            >            lda #$a5     ;precharge accu
2a7a : 28              >            plp
                       >
2a7b : d70a            >        smb 5,zpt
                       >        tst_a $a5,0
2a7d : 08              >            php         ;save flags
2a7e : 08              >            php
2a7f : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
2a81 : f003            >        beq skip2583
                       >        trap            ;failed not equal (non zero)
2a83 : 209831          >        jsr report_error
                       >
2a86 :                 >skip2583
                       >
2a86 : 68              >            pla         ;load status
                       >            cmp_flag 0
2a87 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2a89 : f003            >        beq skip2586
                       >        trap            ;failed not equal (non zero)
2a8b : 209831          >        jsr report_error
                       >
2a8e :                 >skip2586
                       >
2a8e : 28              >            plp         ;restore status
                       >
2a8f : a50a            >        lda zpt
2a91 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
2a93 : f003            >        beq skip2588
                       >        trap            ;failed not equal (non zero)
2a95 : 209831          >        jsr report_error
                       >
2a98 :                 >skip2588
                       >
2a98 : a900            >        lda #0
2a9a : 850a            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
2a9c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2a9e : 48              >            pha         ;use stack to load status
2a9f : a95a            >            lda #$5a     ;precharge accu
2aa1 : 28              >            plp
                       >
2aa2 : d70a            >        smb 5,zpt
                       >        tst_a $5a,$ff
2aa4 : 08              >            php         ;save flags
2aa5 : 08              >            php
2aa6 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
2aa8 : f003            >        beq skip2593
                       >        trap            ;failed not equal (non zero)
2aaa : 209831          >        jsr report_error
                       >
2aad :                 >skip2593
                       >
2aad : 68              >            pla         ;load status
                       >            cmp_flag $ff
2aae : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2ab0 : f003            >        beq skip2596
                       >        trap            ;failed not equal (non zero)
2ab2 : 209831          >        jsr report_error
                       >
2ab5 :                 >skip2596
                       >
2ab5 : 28              >            plp         ;restore status
                       >
2ab6 : a50a            >        lda zpt
2ab8 : c920            >        cmp #1<<5
                       >        trap_ne     ;wrong bits set or cleared
2aba : f003            >        beq skip2598
                       >        trap            ;failed not equal (non zero)
2abc : 209831          >        jsr report_error
                       >
2abf :                 >skip2598
                       >
                        
                                smbt 6
2abf : a9bf            >        lda #$ff-(1<<6)
2ac1 : 850a            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
2ac3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2ac5 : 48              >            pha         ;use stack to load status
2ac6 : a9a5            >            lda #$a5     ;precharge accu
2ac8 : 28              >            plp
                       >
2ac9 : e70a            >        smb 6,zpt
                       >        tst_a $a5,0
2acb : 08              >            php         ;save flags
2acc : 08              >            php
2acd : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
2acf : f003            >        beq skip2604
                       >        trap            ;failed not equal (non zero)
2ad1 : 209831          >        jsr report_error
                       >
2ad4 :                 >skip2604
                       >
2ad4 : 68              >            pla         ;load status
                       >            cmp_flag 0
2ad5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2ad7 : f003            >        beq skip2607
                       >        trap            ;failed not equal (non zero)
2ad9 : 209831          >        jsr report_error
                       >
2adc :                 >skip2607
                       >
2adc : 28              >            plp         ;restore status
                       >
2add : a50a            >        lda zpt
2adf : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
2ae1 : f003            >        beq skip2609
                       >        trap            ;failed not equal (non zero)
2ae3 : 209831          >        jsr report_error
                       >
2ae6 :                 >skip2609
                       >
2ae6 : a900            >        lda #0
2ae8 : 850a            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
2aea : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2aec : 48              >            pha         ;use stack to load status
2aed : a95a            >            lda #$5a     ;precharge accu
2aef : 28              >            plp
                       >
2af0 : e70a            >        smb 6,zpt
                       >        tst_a $5a,$ff
2af2 : 08              >            php         ;save flags
2af3 : 08              >            php
2af4 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
2af6 : f003            >        beq skip2614
                       >        trap            ;failed not equal (non zero)
2af8 : 209831          >        jsr report_error
                       >
2afb :                 >skip2614
                       >
2afb : 68              >            pla         ;load status
                       >            cmp_flag $ff
2afc : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2afe : f003            >        beq skip2617
                       >        trap            ;failed not equal (non zero)
2b00 : 209831          >        jsr report_error
                       >
2b03 :                 >skip2617
                       >
2b03 : 28              >            plp         ;restore status
                       >
2b04 : a50a            >        lda zpt
2b06 : c940            >        cmp #1<<6
                       >        trap_ne     ;wrong bits set or cleared
2b08 : f003            >        beq skip2619
                       >        trap            ;failed not equal (non zero)
2b0a : 209831          >        jsr report_error
                       >
2b0d :                 >skip2619
                       >
                        
                                smbt 7
2b0d : a97f            >        lda #$ff-(1<<7)
2b0f : 850a            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
2b11 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2b13 : 48              >            pha         ;use stack to load status
2b14 : a9a5            >            lda #$a5     ;precharge accu
2b16 : 28              >            plp
                       >
2b17 : f70a            >        smb 7,zpt
                       >        tst_a $a5,0
2b19 : 08              >            php         ;save flags
2b1a : 08              >            php
2b1b : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
2b1d : f003            >        beq skip2625
                       >        trap            ;failed not equal (non zero)
2b1f : 209831          >        jsr report_error
                       >
2b22 :                 >skip2625
                       >
2b22 : 68              >            pla         ;load status
                       >            cmp_flag 0
2b23 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2b25 : f003            >        beq skip2628
                       >        trap            ;failed not equal (non zero)
2b27 : 209831          >        jsr report_error
                       >
2b2a :                 >skip2628
                       >
2b2a : 28              >            plp         ;restore status
                       >
2b2b : a50a            >        lda zpt
2b2d : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
2b2f : f003            >        beq skip2630
                       >        trap            ;failed not equal (non zero)
2b31 : 209831          >        jsr report_error
                       >
2b34 :                 >skip2630
                       >
2b34 : a900            >        lda #0
2b36 : 850a            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
2b38 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2b3a : 48              >            pha         ;use stack to load status
2b3b : a95a            >            lda #$5a     ;precharge accu
2b3d : 28              >            plp
                       >
2b3e : f70a            >        smb 7,zpt
                       >        tst_a $5a,$ff
2b40 : 08              >            php         ;save flags
2b41 : 08              >            php
2b42 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
2b44 : f003            >        beq skip2635
                       >        trap            ;failed not equal (non zero)
2b46 : 209831          >        jsr report_error
                       >
2b49 :                 >skip2635
                       >
2b49 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2b4a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2b4c : f003            >        beq skip2638
                       >        trap            ;failed not equal (non zero)
2b4e : 209831          >        jsr report_error
                       >
2b51 :                 >skip2638
                       >
2b51 : 28              >            plp         ;restore status
                       >
2b52 : a50a            >        lda zpt
2b54 : c980            >        cmp #1<<7
                       >        trap_ne     ;wrong bits set or cleared
2b56 : f003            >        beq skip2640
                       >        trap            ;failed not equal (non zero)
2b58 : 209831          >        jsr report_error
                       >
2b5b :                 >skip2640
                       >
                        
2b5b : e0ba                     cpx #$ba
                                trap_ne     ;x altered during test
2b5d : f003            >        beq skip2642
                       >        trap            ;failed not equal (non zero)
2b5f : 209831          >        jsr report_error
                       >
2b62 :                 >skip2642
                        
2b62 : c0d0                     cpy #$d0
                                trap_ne     ;y altered during test
2b64 : f003            >        beq skip2644
                       >        trap            ;failed not equal (non zero)
2b66 : 209831          >        jsr report_error
                       >
2b69 :                 >skip2644
                        
2b69 : ba                       tsx
2b6a : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
2b6c : f003            >        beq skip2646
                       >        trap            ;failed not equal (non zero)
2b6e : 209831          >        jsr report_error
                       >
2b71 :                 >skip2646
                        
                                next_test
2b71 : ad0202          >            lda test_case   ;previous test
2b74 : c910            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2b76 : f003            >        beq skip2649
                       >        trap            ;failed not equal (non zero)
2b78 : 209831          >        jsr report_error
                       >
2b7b :                 >skip2649
                       >
0011 =                 >test_num = test_num + 1
2b7b : a911            >            lda #test_num   ;*** next tests' number
2b7d : 8d0202          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                            endif        
                                 
                        ; testing CMP - (zp)         
2b80 : a2de                     ldx #$de    ;protect x & y
2b82 : a0ad                     ldy #$ad
                                set_a $80,0
                       >            load_flag 0
2b84 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2b86 : 48              >            pha         ;use stack to load status
2b87 : a980            >            lda #$80     ;precharge accu
2b89 : 28              >            plp
                        
2b8a : d22a                     cmp (ind1+8)
                                tst_a $80,fc
2b8c : 08              >            php         ;save flags
2b8d : 08              >            php
2b8e : c980            >            cmp #$80     ;test result
                       >            trap_ne
2b90 : f003            >        beq skip2654
                       >        trap            ;failed not equal (non zero)
2b92 : 209831          >        jsr report_error
                       >
2b95 :                 >skip2654
                       >
2b95 : 68              >            pla         ;load status
                       >            cmp_flag fc
2b96 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2b98 : f003            >        beq skip2657
                       >        trap            ;failed not equal (non zero)
2b9a : 209831          >        jsr report_error
                       >
2b9d :                 >skip2657
                       >
2b9d : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
2b9e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2ba0 : 48              >            pha         ;use stack to load status
2ba1 : a97f            >            lda #$7f     ;precharge accu
2ba3 : 28              >            plp
                        
2ba4 : d22a                     cmp (ind1+8)
                                tst_a $7f,fzc
2ba6 : 08              >            php         ;save flags
2ba7 : 08              >            php
2ba8 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
2baa : f003            >        beq skip2662
                       >        trap            ;failed not equal (non zero)
2bac : 209831          >        jsr report_error
                       >
2baf :                 >skip2662
                       >
2baf : 68              >            pla         ;load status
                       >            cmp_flag fzc
2bb0 : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2bb2 : f003            >        beq skip2665
                       >        trap            ;failed not equal (non zero)
2bb4 : 209831          >        jsr report_error
                       >
2bb7 :                 >skip2665
                       >
2bb7 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
2bb8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2bba : 48              >            pha         ;use stack to load status
2bbb : a97e            >            lda #$7e     ;precharge accu
2bbd : 28              >            plp
                        
2bbe : d22a                     cmp (ind1+8)
                                tst_a $7e,fn
2bc0 : 08              >            php         ;save flags
2bc1 : 08              >            php
2bc2 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
2bc4 : f003            >        beq skip2670
                       >        trap            ;failed not equal (non zero)
2bc6 : 209831          >        jsr report_error
                       >
2bc9 :                 >skip2670
                       >
2bc9 : 68              >            pla         ;load status
                       >            cmp_flag fn
2bca : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2bcc : f003            >        beq skip2673
                       >        trap            ;failed not equal (non zero)
2bce : 209831          >        jsr report_error
                       >
2bd1 :                 >skip2673
                       >
2bd1 : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
2bd2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2bd4 : 48              >            pha         ;use stack to load status
2bd5 : a980            >            lda #$80     ;precharge accu
2bd7 : 28              >            plp
                        
2bd8 : d22a                     cmp (ind1+8)
                                tst_a $80,~fnz
2bda : 08              >            php         ;save flags
2bdb : 08              >            php
2bdc : c980            >            cmp #$80     ;test result
                       >            trap_ne
2bde : f003            >        beq skip2678
                       >        trap            ;failed not equal (non zero)
2be0 : 209831          >        jsr report_error
                       >
2be3 :                 >skip2678
                       >
2be3 : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
2be4 : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2be6 : f003            >        beq skip2681
                       >        trap            ;failed not equal (non zero)
2be8 : 209831          >        jsr report_error
                       >
2beb :                 >skip2681
                       >
2beb : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
2bec : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2bee : 48              >            pha         ;use stack to load status
2bef : a97f            >            lda #$7f     ;precharge accu
2bf1 : 28              >            plp
                        
2bf2 : d22a                     cmp (ind1+8)
                                tst_a $7f,~fn
2bf4 : 08              >            php         ;save flags
2bf5 : 08              >            php
2bf6 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
2bf8 : f003            >        beq skip2686
                       >        trap            ;failed not equal (non zero)
2bfa : 209831          >        jsr report_error
                       >
2bfd :                 >skip2686
                       >
2bfd : 68              >            pla         ;load status
                       >            cmp_flag ~fn
2bfe : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2c00 : f003            >        beq skip2689
                       >        trap            ;failed not equal (non zero)
2c02 : 209831          >        jsr report_error
                       >
2c05 :                 >skip2689
                       >
2c05 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
2c06 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2c08 : 48              >            pha         ;use stack to load status
2c09 : a97e            >            lda #$7e     ;precharge accu
2c0b : 28              >            plp
                        
2c0c : d22a                     cmp (ind1+8)
                                tst_a $7e,~fzc
2c0e : 08              >            php         ;save flags
2c0f : 08              >            php
2c10 : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
2c12 : f003            >        beq skip2694
                       >        trap            ;failed not equal (non zero)
2c14 : 209831          >        jsr report_error
                       >
2c17 :                 >skip2694
                       >
2c17 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
2c18 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2c1a : f003            >        beq skip2697
                       >        trap            ;failed not equal (non zero)
2c1c : 209831          >        jsr report_error
                       >
2c1f :                 >skip2697
                       >
2c1f : 28              >            plp         ;restore status
                        
2c20 : e0de                     cpx #$de
                                trap_ne     ;x altered during test
2c22 : f003            >        beq skip2699
                       >        trap            ;failed not equal (non zero)
2c24 : 209831          >        jsr report_error
                       >
2c27 :                 >skip2699
                        
2c27 : c0ad                     cpy #$ad
                                trap_ne     ;y altered during test 
2c29 : f003            >        beq skip2701
                       >        trap            ;failed not equal (non zero)
2c2b : 209831          >        jsr report_error
                       >
2c2e :                 >skip2701
                        
2c2e : ba                       tsx
2c2f : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
2c31 : f003            >        beq skip2703
                       >        trap            ;failed not equal (non zero)
2c33 : 209831          >        jsr report_error
                       >
2c36 :                 >skip2703
                        
                                next_test
2c36 : ad0202          >            lda test_case   ;previous test
2c39 : c911            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2c3b : f003            >        beq skip2706
                       >        trap            ;failed not equal (non zero)
2c3d : 209831          >        jsr report_error
                       >
2c40 :                 >skip2706
                       >
0012 =                 >test_num = test_num + 1
2c40 : a912            >            lda #test_num   ;*** next tests' number
2c42 : 8d0202          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; testing logical instructions - AND EOR ORA (zp)
2c45 : a242                     ldx #$42    ;protect x & y
                        
2c47 : a000                     ldy #0      ;AND
2c49 : a538                     lda indAN   ;set indirect address
2c4b : 850a                     sta zpt
2c4d : a539                     lda indAN+1
2c4f : 850b                     sta zpt+1
2c51 :                  tand1
                                set_ay  absANa,0
                       >            load_flag 0
2c51 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2c53 : 48              >            pha         ;use stack to load status
2c54 : b94d02          >            lda absANa,y    ;precharge accu
2c57 : 28              >            plp
                        
2c58 : 320a                     and (zpt)
                                tst_ay  absrlo,absflo,0
2c5a : 08              >            php         ;save flags
2c5b : d95502          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
2c5e : f003            >        beq skip2711
                       >        trap            ;failed not equal (non zero)
2c60 : 209831          >        jsr report_error
                       >
2c63 :                 >skip2711
                       >
2c63 : 68              >            pla         ;load status
                       >            eor_flag 0
2c64 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
2c66 : d95902          >            cmp absflo,y    ;test flags
                       >            trap_ne
2c69 : f003            >        beq skip2714
                       >        trap            ;failed not equal (non zero)
2c6b : 209831          >        jsr report_error
                       >
2c6e :                 >skip2714
                       >
                        
2c6e : e60a                     inc zpt
2c70 : c8                       iny
2c71 : c004                     cpy #4
2c73 : d0dc                     bne tand1
2c75 : 88                       dey
2c76 : c60a                     dec zpt
2c78 :                  tand2
                                set_ay  absANa,$ff
                       >            load_flag $ff
2c78 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2c7a : 48              >            pha         ;use stack to load status
2c7b : b94d02          >            lda absANa,y    ;precharge accu
2c7e : 28              >            plp
                        
2c7f : 320a                     and (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
2c81 : 08              >            php         ;save flags
2c82 : d95502          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
2c85 : f003            >        beq skip2719
                       >        trap            ;failed not equal (non zero)
2c87 : 209831          >        jsr report_error
                       >
2c8a :                 >skip2719
                       >
2c8a : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
2c8b : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
2c8d : d95902          >            cmp absflo,y    ;test flags
                       >            trap_ne
2c90 : f003            >        beq skip2722
                       >        trap            ;failed not equal (non zero)
2c92 : 209831          >        jsr report_error
                       >
2c95 :                 >skip2722
                       >
                        
2c95 : c60a                     dec zpt
2c97 : 88                       dey
2c98 : 10de                     bpl tand2
                        
2c9a : a000                     ldy #0      ;EOR
2c9c : a540                     lda indEO   ;set indirect address
2c9e : 850a                     sta zpt
2ca0 : a541                     lda indEO+1
2ca2 : 850b                     sta zpt+1
2ca4 :                  teor1
                                set_ay  absEOa,0
                       >            load_flag 0
2ca4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2ca6 : 48              >            pha         ;use stack to load status
2ca7 : b95102          >            lda absEOa,y    ;precharge accu
2caa : 28              >            plp
                        
2cab : 520a                     eor (zpt)
                                tst_ay  absrlo,absflo,0
2cad : 08              >            php         ;save flags
2cae : d95502          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
2cb1 : f003            >        beq skip2727
                       >        trap            ;failed not equal (non zero)
2cb3 : 209831          >        jsr report_error
                       >
2cb6 :                 >skip2727
                       >
2cb6 : 68              >            pla         ;load status
                       >            eor_flag 0
2cb7 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
2cb9 : d95902          >            cmp absflo,y    ;test flags
                       >            trap_ne
2cbc : f003            >        beq skip2730
                       >        trap            ;failed not equal (non zero)
2cbe : 209831          >        jsr report_error
                       >
2cc1 :                 >skip2730
                       >
                        
2cc1 : e60a                     inc zpt
2cc3 : c8                       iny
2cc4 : c004                     cpy #4
2cc6 : d0dc                     bne teor1
2cc8 : 88                       dey
2cc9 : c60a                     dec zpt
2ccb :                  teor2
                                set_ay  absEOa,$ff
                       >            load_flag $ff
2ccb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2ccd : 48              >            pha         ;use stack to load status
2cce : b95102          >            lda absEOa,y    ;precharge accu
2cd1 : 28              >            plp
                        
2cd2 : 520a                     eor (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
2cd4 : 08              >            php         ;save flags
2cd5 : d95502          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
2cd8 : f003            >        beq skip2735
                       >        trap            ;failed not equal (non zero)
2cda : 209831          >        jsr report_error
                       >
2cdd :                 >skip2735
                       >
2cdd : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
2cde : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
2ce0 : d95902          >            cmp absflo,y    ;test flags
                       >            trap_ne
2ce3 : f003            >        beq skip2738
                       >        trap            ;failed not equal (non zero)
2ce5 : 209831          >        jsr report_error
                       >
2ce8 :                 >skip2738
                       >
                        
2ce8 : c60a                     dec zpt
2cea : 88                       dey
2ceb : 10de                     bpl teor2
                        
2ced : a000                     ldy #0      ;ORA
2cef : a548                     lda indOR   ;set indirect address
2cf1 : 850a                     sta zpt
2cf3 : a549                     lda indOR+1
2cf5 : 850b                     sta zpt+1
2cf7 :                  tora1
                                set_ay  absORa,0
                       >            load_flag 0
2cf7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2cf9 : 48              >            pha         ;use stack to load status
2cfa : b94902          >            lda absORa,y    ;precharge accu
2cfd : 28              >            plp
                        
2cfe : 120a                     ora (zpt)
                                tst_ay  absrlo,absflo,0
2d00 : 08              >            php         ;save flags
2d01 : d95502          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
2d04 : f003            >        beq skip2743
                       >        trap            ;failed not equal (non zero)
2d06 : 209831          >        jsr report_error
                       >
2d09 :                 >skip2743
                       >
2d09 : 68              >            pla         ;load status
                       >            eor_flag 0
2d0a : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
2d0c : d95902          >            cmp absflo,y    ;test flags
                       >            trap_ne
2d0f : f003            >        beq skip2746
                       >        trap            ;failed not equal (non zero)
2d11 : 209831          >        jsr report_error
                       >
2d14 :                 >skip2746
                       >
                        
2d14 : e60a                     inc zpt
2d16 : c8                       iny
2d17 : c004                     cpy #4
2d19 : d0dc                     bne tora1
2d1b : 88                       dey
2d1c : c60a                     dec zpt
2d1e :                  tora2
                                set_ay  absORa,$ff
                       >            load_flag $ff
2d1e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2d20 : 48              >            pha         ;use stack to load status
2d21 : b94902          >            lda absORa,y    ;precharge accu
2d24 : 28              >            plp
                        
2d25 : 120a                     ora (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
2d27 : 08              >            php         ;save flags
2d28 : d95502          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
2d2b : f003            >        beq skip2751
                       >        trap            ;failed not equal (non zero)
2d2d : 209831          >        jsr report_error
                       >
2d30 :                 >skip2751
                       >
2d30 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
2d31 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
2d33 : d95902          >            cmp absflo,y    ;test flags
                       >            trap_ne
2d36 : f003            >        beq skip2754
                       >        trap            ;failed not equal (non zero)
2d38 : 209831          >        jsr report_error
                       >
2d3b :                 >skip2754
                       >
                        
2d3b : c60a                     dec zpt
2d3d : 88                       dey
2d3e : 10de                     bpl tora2
                        
2d40 : e042                     cpx #$42
                                trap_ne     ;x altered during test
2d42 : f003            >        beq skip2756
                       >        trap            ;failed not equal (non zero)
2d44 : 209831          >        jsr report_error
                       >
2d47 :                 >skip2756
                        
2d47 : ba                       tsx
2d48 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
2d4a : f003            >        beq skip2758
                       >        trap            ;failed not equal (non zero)
2d4c : 209831          >        jsr report_error
                       >
2d4f :                 >skip2758
                        
                                next_test
2d4f : ad0202          >            lda test_case   ;previous test
2d52 : c912            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2d54 : f003            >        beq skip2761
                       >        trap            ;failed not equal (non zero)
2d56 : 209831          >        jsr report_error
                       >
2d59 :                 >skip2761
                       >
0013 =                 >test_num = test_num + 1
2d59 : a913            >            lda #test_num   ;*** next tests' number
2d5b : 8d0202          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                            if I_flag = 3
2d5e : 58                       cli
                            endif                
                        
                        ; full binary add/subtract test - (zp) only
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
2d5f : d8                       cld
2d60 : a20c                     ldx #ad2        ;for indexed test
2d62 : a0ff                     ldy #$ff        ;max range
2d64 : a900                     lda #0          ;start with adding zeroes & no carry
2d66 : 850a                     sta adfc        ;carry in - for diag
2d68 : 850b                     sta ad1         ;operand 1 - accumulator
2d6a : 850c                     sta ad2         ;operand 2 - memory or immediate
2d6c : 8d0502                   sta ada2        ;non zp
2d6f : 850d                     sta adrl        ;expected result bits 0-7
2d71 : 850e                     sta adrh        ;expected result bit 8 (carry out)
2d73 : a9ff                     lda #$ff        ;complemented operand 2 for subtract
2d75 : 8510                     sta sb2
2d77 : 8d0602                   sta sba2        ;non zp
2d7a : a902                     lda #2          ;expected Z-flag
2d7c : 850f                     sta adrf
2d7e : 18               tadd    clc             ;test with carry clear
2d7f : 207730                   jsr chkadd
2d82 : e60a                     inc adfc        ;now with carry
2d84 : e60d                     inc adrl        ;result +1
2d86 : 08                       php             ;save N & Z from low result
2d87 : 08                       php
2d88 : 68                       pla             ;accu holds expected flags
2d89 : 2982                     and #$82        ;mask N & Z
2d8b : 28                       plp
2d8c : d002                     bne tadd1
2d8e : e60e                     inc adrh        ;result bit 8 - carry
2d90 : 050e             tadd1   ora adrh        ;merge C to expected flags
2d92 : 850f                     sta adrf        ;save expected flags except overflow
2d94 : 38                       sec             ;test with carry set
2d95 : 207730                   jsr chkadd
2d98 : c60a                     dec adfc        ;same for operand +1 but no carry
2d9a : e60b                     inc ad1
2d9c : d0e0                     bne tadd        ;iterate op1
2d9e : a900                     lda #0          ;preset result to op2 when op1 = 0
2da0 : 850e                     sta adrh
2da2 : ee0502                   inc ada2
2da5 : e60c                     inc ad2
2da7 : 08                       php             ;save NZ as operand 2 becomes the new result
2da8 : 68                       pla
2da9 : 2982                     and #$82        ;mask N00000Z0
2dab : 850f                     sta adrf        ;no need to check carry as we are adding to 0
2dad : c610                     dec sb2         ;complement subtract operand 2
2daf : ce0602                   dec sba2
2db2 : a50c                     lda ad2         
2db4 : 850d                     sta adrl
2db6 : d0c6                     bne tadd        ;iterate op2
                        
2db8 : e00c                     cpx #ad2
                                trap_ne         ;x altered during test
2dba : f003            >        beq skip2763
                       >        trap            ;failed not equal (non zero)
2dbc : 209831          >        jsr report_error
                       >
2dbf :                 >skip2763
                        
2dbf : c0ff                     cpy #$ff
                                trap_ne         ;y altered during test 
2dc1 : f003            >        beq skip2765
                       >        trap            ;failed not equal (non zero)
2dc3 : 209831          >        jsr report_error
                       >
2dc6 :                 >skip2765
                        
2dc6 : ba                       tsx
2dc7 : e0ff                     cpx #$ff
                                trap_ne         ;sp push/pop mismatch
2dc9 : f003            >        beq skip2767
                       >        trap            ;failed not equal (non zero)
2dcb : 209831          >        jsr report_error
                       >
2dce :                 >skip2767
                        
                                next_test
2dce : ad0202          >            lda test_case   ;previous test
2dd1 : c913            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2dd3 : f003            >        beq skip2770
                       >        trap            ;failed not equal (non zero)
2dd5 : 209831          >        jsr report_error
                       >
2dd8 :                 >skip2770
                       >
0014 =                 >test_num = test_num + 1
2dd8 : a914            >            lda #test_num   ;*** next tests' number
2dda : 8d0202          >            sta test_case
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        ; decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, the V flag is ignored
                        ;   although V is declared as beeing valid on the 65C02 it has absolutely
                        ;   no use in BCD math. No sign = no overflow!
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
2ddd : f8                       sed 
2dde : a20c                     ldx #ad2        ;for indexed test
2de0 : a0ff                     ldy #$ff        ;max range
2de2 : a999                     lda #$99        ;start with adding 99 to 99 with carry
2de4 : 850b                     sta ad1         ;operand 1 - accumulator
2de6 : 850c                     sta ad2         ;operand 2 - memory or immediate
2de8 : 8d0502                   sta ada2        ;non zp
2deb : 850d                     sta adrl        ;expected result bits 0-7
2ded : a901                     lda #1          ;set carry in & out
2def : 850a                     sta adfc        ;carry in - for diag
2df1 : 850e                     sta adrh        ;expected result bit 8 (carry out)
2df3 : a981                     lda #$81        ;set N & C (99 + 99 + C = 99 + C)
2df5 : 850f                     sta adrf
2df7 : a900                     lda #0          ;complemented operand 2 for subtract
2df9 : 8510                     sta sb2
2dfb : 8d0602                   sta sba2        ;non zp
2dfe : 38               tdad    sec             ;test with carry set
2dff : 20b62e                   jsr chkdad
2e02 : c60a                     dec adfc        ;now with carry clear
2e04 : a50d                     lda adrl        ;decimal adjust result
2e06 : d008                     bne tdad1       ;skip clear carry & preset result 99 (9A-1)
2e08 : c60e                     dec adrh
2e0a : a999                     lda #$99
2e0c : 850d                     sta adrl
2e0e : d012                     bne tdad3
2e10 : 290f             tdad1   and #$f         ;lower nibble mask
2e12 : d00c                     bne tdad2       ;no decimal adjust needed
2e14 : c60d                     dec adrl        ;decimal adjust (?0-6)
2e16 : c60d                     dec adrl
2e18 : c60d                     dec adrl
2e1a : c60d                     dec adrl
2e1c : c60d                     dec adrl
2e1e : c60d                     dec adrl
2e20 : c60d             tdad2   dec adrl        ;result -1
2e22 : 08               tdad3   php             ;save valid flags
2e23 : 68                       pla
2e24 : 2982                     and #$82        ;N-----Z-
2e26 : 050e                     ora adrh        ;N-----ZC
2e28 : 850f                     sta adrf
2e2a : 18                       clc             ;test with carry clear
2e2b : 20b62e                   jsr chkdad
2e2e : e60a                     inc adfc        ;same for operand -1 but with carry
2e30 : a50b                     lda ad1         ;decimal adjust operand 1
2e32 : f015                     beq tdad5       ;iterate operand 2
2e34 : 290f                     and #$f         ;lower nibble mask
2e36 : d00c                     bne tdad4       ;skip decimal adjust
2e38 : c60b                     dec ad1         ;decimal adjust (?0-6)
2e3a : c60b                     dec ad1
2e3c : c60b                     dec ad1
2e3e : c60b                     dec ad1
2e40 : c60b                     dec ad1
2e42 : c60b                     dec ad1
2e44 : c60b             tdad4   dec ad1         ;operand 1 -1
2e46 : 4cfe2d                   jmp tdad        ;iterate op1
                        
2e49 : a999             tdad5   lda #$99        ;precharge op1 max
2e4b : 850b                     sta ad1
2e4d : a50c                     lda ad2         ;decimal adjust operand 2
2e4f : f039                     beq tdad7       ;end of iteration
2e51 : 290f                     and #$f         ;lower nibble mask
2e53 : d018                     bne tdad6       ;skip decimal adjust
2e55 : c60c                     dec ad2         ;decimal adjust (?0-6)
2e57 : c60c                     dec ad2
2e59 : c60c                     dec ad2
2e5b : c60c                     dec ad2
2e5d : c60c                     dec ad2
2e5f : c60c                     dec ad2
2e61 : e610                     inc sb2         ;complemented decimal adjust for subtract (?9+6)
2e63 : e610                     inc sb2
2e65 : e610                     inc sb2
2e67 : e610                     inc sb2
2e69 : e610                     inc sb2
2e6b : e610                     inc sb2
2e6d : c60c             tdad6   dec ad2         ;operand 2 -1
2e6f : e610                     inc sb2         ;complemented operand for subtract
2e71 : a510                     lda sb2
2e73 : 8d0602                   sta sba2        ;copy as non zp operand
2e76 : a50c                     lda ad2
2e78 : 8d0502                   sta ada2        ;copy as non zp operand
2e7b : 850d                     sta adrl        ;new result since op1+carry=00+carry +op2=op2
2e7d : 08                       php             ;save flags
2e7e : 68                       pla
2e7f : 2982                     and #$82        ;N-----Z-
2e81 : 0901                     ora #1          ;N-----ZC
2e83 : 850f                     sta adrf
2e85 : e60e                     inc adrh        ;result carry
2e87 : 4cfe2d                   jmp tdad        ;iterate op2
                        
2e8a : e00c             tdad7   cpx #ad2
                                trap_ne         ;x altered during test
2e8c : f003            >        beq skip2772
                       >        trap            ;failed not equal (non zero)
2e8e : 209831          >        jsr report_error
                       >
2e91 :                 >skip2772
                        
2e91 : c0ff                     cpy #$ff
                                trap_ne         ;y altered during test 
2e93 : f003            >        beq skip2774
                       >        trap            ;failed not equal (non zero)
2e95 : 209831          >        jsr report_error
                       >
2e98 :                 >skip2774
                        
2e98 : ba                       tsx
2e99 : e0ff                     cpx #$ff
                                trap_ne         ;sp push/pop mismatch
2e9b : f003            >        beq skip2776
                       >        trap            ;failed not equal (non zero)
2e9d : 209831          >        jsr report_error
                       >
2ea0 :                 >skip2776
                        
2ea0 : d8                       cld
                        
2ea1 : ad0202                   lda test_case
2ea4 : c914                     cmp #test_num
                                trap_ne         ;previous test is out of sequence
2ea6 : f003            >        beq skip2778
                       >        trap            ;failed not equal (non zero)
2ea8 : 209831          >        jsr report_error
                       >
2eab :                 >skip2778
                        
2eab : a9f0                     lda #$f0        ;mark opcode testing complete
2ead : 8d0202                   sta test_case
                        
                        ; final RAM integrity test
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                                check_ram
                       >            ;RAM check disabled - RAM size not set
                        
                        ; *** DEBUG INFO ***
                        ; to debug checksum errors uncomment check_ram in the next_test macro to 
                        ; narrow down the responsible opcode.
                        ; may give false errors when monitor, OS or other background activity is
                        ; allowed during previous tests.
                        
                        
                        ; S U C C E S S ************************************************       
                        ; -------------       
                                success         ;if you get here everything went well
2eb0 : 201832          >        jsr report_success
                        
                        ; -------------       
                        ; S U C C E S S ************************************************       
2eb3 : 4c0004                   jmp start       ;run again      
                        
                        ; core subroutine of the decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, V flag is ignored
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
2eb6 :                  chkdad
                        ; decimal ADC / SBC zp
2eb6 : 08                       php             ;save carry for subtract
2eb7 : a50b                     lda ad1
2eb9 : 650c                     adc ad2         ;perform add
2ebb : 08                       php          
2ebc : c50d                     cmp adrl        ;check result
                                trap_ne         ;bad result
2ebe : f003            >        beq skip2782
                       >        trap            ;failed not equal (non zero)
2ec0 : 209831          >        jsr report_error
                       >
2ec3 :                 >skip2782
                        
2ec3 : 68                       pla             ;check flags
2ec4 : 2983                     and #$83        ;mask N-----ZC
2ec6 : c50f                     cmp adrf
                                trap_ne         ;bad flags
2ec8 : f003            >        beq skip2784
                       >        trap            ;failed not equal (non zero)
2eca : 209831          >        jsr report_error
                       >
2ecd :                 >skip2784
                        
2ecd : 28                       plp
2ece : 08                       php             ;save carry for next add
2ecf : a50b                     lda ad1
2ed1 : e510                     sbc sb2         ;perform subtract
2ed3 : 08                       php          
2ed4 : c50d                     cmp adrl        ;check result
                                trap_ne         ;bad result
2ed6 : f003            >        beq skip2786
                       >        trap            ;failed not equal (non zero)
2ed8 : 209831          >        jsr report_error
                       >
2edb :                 >skip2786
                        
2edb : 68                       pla             ;check flags
2edc : 2983                     and #$83        ;mask N-----ZC
2ede : c50f                     cmp adrf
                                trap_ne         ;bad flags
2ee0 : f003            >        beq skip2788
                       >        trap            ;failed not equal (non zero)
2ee2 : 209831          >        jsr report_error
                       >
2ee5 :                 >skip2788
                        
2ee5 : 28                       plp
                        ; decimal ADC / SBC abs
2ee6 : 08                       php             ;save carry for subtract
2ee7 : a50b                     lda ad1
2ee9 : 6d0502                   adc ada2        ;perform add
2eec : 08                       php          
2eed : c50d                     cmp adrl        ;check result
                                trap_ne         ;bad result
2eef : f003            >        beq skip2790
                       >        trap            ;failed not equal (non zero)
2ef1 : 209831          >        jsr report_error
                       >
2ef4 :                 >skip2790
                        
2ef4 : 68                       pla             ;check flags
2ef5 : 2983                     and #$83        ;mask N-----ZC
2ef7 : c50f                     cmp adrf
                                trap_ne         ;bad flags
2ef9 : f003            >        beq skip2792
                       >        trap            ;failed not equal (non zero)
2efb : 209831          >        jsr report_error
                       >
2efe :                 >skip2792
                        
2efe : 28                       plp
2eff : 08                       php             ;save carry for next add
2f00 : a50b                     lda ad1
2f02 : ed0602                   sbc sba2        ;perform subtract
2f05 : 08                       php          
2f06 : c50d                     cmp adrl        ;check result
                                trap_ne         ;bad result
2f08 : f003            >        beq skip2794
                       >        trap            ;failed not equal (non zero)
2f0a : 209831          >        jsr report_error
                       >
2f0d :                 >skip2794
                        
2f0d : 68                       pla             ;check flags
2f0e : 2983                     and #$83        ;mask N-----ZC
2f10 : c50f                     cmp adrf
                                trap_ne         ;bad flags
2f12 : f003            >        beq skip2796
                       >        trap            ;failed not equal (non zero)
2f14 : 209831          >        jsr report_error
                       >
2f17 :                 >skip2796
                        
2f17 : 28                       plp
                        ; decimal ADC / SBC #
2f18 : 08                       php             ;save carry for subtract
2f19 : a50c                     lda ad2
2f1b : 8d212f                   sta chkdadi     ;self modify immediate
2f1e : a50b                     lda ad1
2f21 =                  chkdadi = * + 1         ;operand of the immediate ADC
2f20 : 6900                     adc #0          ;perform add
2f22 : 08                       php          
2f23 : c50d                     cmp adrl        ;check result
                                trap_ne         ;bad result
2f25 : f003            >        beq skip2798
                       >        trap            ;failed not equal (non zero)
2f27 : 209831          >        jsr report_error
                       >
2f2a :                 >skip2798
                        
2f2a : 68                       pla             ;check flags
2f2b : 2983                     and #$83        ;mask N-----ZC
2f2d : c50f                     cmp adrf
                                trap_ne         ;bad flags
2f2f : f003            >        beq skip2800
                       >        trap            ;failed not equal (non zero)
2f31 : 209831          >        jsr report_error
                       >
2f34 :                 >skip2800
                        
2f34 : 28                       plp
2f35 : 08                       php             ;save carry for next add
2f36 : a510                     lda sb2
2f38 : 8d3e2f                   sta chkdsbi     ;self modify immediate
2f3b : a50b                     lda ad1
2f3e =                  chkdsbi = * + 1         ;operand of the immediate SBC
2f3d : e900                     sbc #0          ;perform subtract
2f3f : 08                       php          
2f40 : c50d                     cmp adrl        ;check result
                                trap_ne         ;bad result
2f42 : f003            >        beq skip2802
                       >        trap            ;failed not equal (non zero)
2f44 : 209831          >        jsr report_error
                       >
2f47 :                 >skip2802
                        
2f47 : 68                       pla             ;check flags
2f48 : 2983                     and #$83        ;mask N-----ZC
2f4a : c50f                     cmp adrf
                                trap_ne         ;bad flags
2f4c : f003            >        beq skip2804
                       >        trap            ;failed not equal (non zero)
2f4e : 209831          >        jsr report_error
                       >
2f51 :                 >skip2804
                        
2f51 : 28                       plp
                        ; decimal ADC / SBC zp,x
2f52 : 08                       php             ;save carry for subtract
2f53 : a50b                     lda ad1
2f55 : 7500                     adc 0,x         ;perform add
2f57 : 08                       php          
2f58 : c50d                     cmp adrl        ;check result
                                trap_ne         ;bad result
2f5a : f003            >        beq skip2806
                       >        trap            ;failed not equal (non zero)
2f5c : 209831          >        jsr report_error
                       >
2f5f :                 >skip2806
                        
2f5f : 68                       pla             ;check flags
2f60 : 2983                     and #$83        ;mask N-----ZC
2f62 : c50f                     cmp adrf
                                trap_ne         ;bad flags
2f64 : f003            >        beq skip2808
                       >        trap            ;failed not equal (non zero)
2f66 : 209831          >        jsr report_error
                       >
2f69 :                 >skip2808
                        
2f69 : 28                       plp
2f6a : 08                       php             ;save carry for next add
2f6b : a50b                     lda ad1
2f6d : f504                     sbc sb2-ad2,x   ;perform subtract
2f6f : 08                       php          
2f70 : c50d                     cmp adrl        ;check result
                                trap_ne         ;bad result
2f72 : f003            >        beq skip2810
                       >        trap            ;failed not equal (non zero)
2f74 : 209831          >        jsr report_error
                       >
2f77 :                 >skip2810
                        
2f77 : 68                       pla             ;check flags
2f78 : 2983                     and #$83        ;mask N-----ZC
2f7a : c50f                     cmp adrf
                                trap_ne         ;bad flags
2f7c : f003            >        beq skip2812
                       >        trap            ;failed not equal (non zero)
2f7e : 209831          >        jsr report_error
                       >
2f81 :                 >skip2812
                        
2f81 : 28                       plp
                        ; decimal ADC / SBC abs,x
2f82 : 08                       php             ;save carry for subtract
2f83 : a50b                     lda ad1
2f85 : 7df901                   adc ada2-ad2,x  ;perform add
2f88 : 08                       php          
2f89 : c50d                     cmp adrl        ;check result
                                trap_ne         ;bad result
2f8b : f003            >        beq skip2814
                       >        trap            ;failed not equal (non zero)
2f8d : 209831          >        jsr report_error
                       >
2f90 :                 >skip2814
                        
2f90 : 68                       pla             ;check flags
2f91 : 2983                     and #$83        ;mask N-----ZC
2f93 : c50f                     cmp adrf
                                trap_ne         ;bad flags
2f95 : f003            >        beq skip2816
                       >        trap            ;failed not equal (non zero)
2f97 : 209831          >        jsr report_error
                       >
2f9a :                 >skip2816
                        
2f9a : 28                       plp
2f9b : 08                       php             ;save carry for next add
2f9c : a50b                     lda ad1
2f9e : fdfa01                   sbc sba2-ad2,x  ;perform subtract
2fa1 : 08                       php          
2fa2 : c50d                     cmp adrl        ;check result
                                trap_ne         ;bad result
2fa4 : f003            >        beq skip2818
                       >        trap            ;failed not equal (non zero)
2fa6 : 209831          >        jsr report_error
                       >
2fa9 :                 >skip2818
                        
2fa9 : 68                       pla             ;check flags
2faa : 2983                     and #$83        ;mask N-----ZC
2fac : c50f                     cmp adrf
                                trap_ne         ;bad flags
2fae : f003            >        beq skip2820
                       >        trap            ;failed not equal (non zero)
2fb0 : 209831          >        jsr report_error
                       >
2fb3 :                 >skip2820
                        
2fb3 : 28                       plp
                        ; decimal ADC / SBC abs,y
2fb4 : 08                       php             ;save carry for subtract
2fb5 : a50b                     lda ad1
2fb7 : 790601                   adc ada2-$ff,y  ;perform add
2fba : 08                       php          
2fbb : c50d                     cmp adrl        ;check result
                                trap_ne         ;bad result
2fbd : f003            >        beq skip2822
                       >        trap            ;failed not equal (non zero)
2fbf : 209831          >        jsr report_error
                       >
2fc2 :                 >skip2822
                        
2fc2 : 68                       pla             ;check flags
2fc3 : 2983                     and #$83        ;mask N-----ZC
2fc5 : c50f                     cmp adrf
                                trap_ne         ;bad flags
2fc7 : f003            >        beq skip2824
                       >        trap            ;failed not equal (non zero)
2fc9 : 209831          >        jsr report_error
                       >
2fcc :                 >skip2824
                        
2fcc : 28                       plp
2fcd : 08                       php             ;save carry for next add
2fce : a50b                     lda ad1
2fd0 : f90701                   sbc sba2-$ff,y  ;perform subtract
2fd3 : 08                       php          
2fd4 : c50d                     cmp adrl        ;check result
                                trap_ne         ;bad result
2fd6 : f003            >        beq skip2826
                       >        trap            ;failed not equal (non zero)
2fd8 : 209831          >        jsr report_error
                       >
2fdb :                 >skip2826
                        
2fdb : 68                       pla             ;check flags
2fdc : 2983                     and #$83        ;mask N-----ZC
2fde : c50f                     cmp adrf
                                trap_ne         ;bad flags
2fe0 : f003            >        beq skip2828
                       >        trap            ;failed not equal (non zero)
2fe2 : 209831          >        jsr report_error
                       >
2fe5 :                 >skip2828
                        
2fe5 : 28                       plp
                        ; decimal ADC / SBC (zp,x)
2fe6 : 08                       php             ;save carry for subtract
2fe7 : a50b                     lda ad1
2fe9 : 6144                     adc (lo adi2-ad2,x) ;perform add
2feb : 08                       php          
2fec : c50d                     cmp adrl        ;check result
                                trap_ne         ;bad result
2fee : f003            >        beq skip2830
                       >        trap            ;failed not equal (non zero)
2ff0 : 209831          >        jsr report_error
                       >
2ff3 :                 >skip2830
                        
2ff3 : 68                       pla             ;check flags
2ff4 : 2983                     and #$83        ;mask N-----ZC
2ff6 : c50f                     cmp adrf
                                trap_ne         ;bad flags
2ff8 : f003            >        beq skip2832
                       >        trap            ;failed not equal (non zero)
2ffa : 209831          >        jsr report_error
                       >
2ffd :                 >skip2832
                        
2ffd : 28                       plp
2ffe : 08                       php             ;save carry for next add
2fff : a50b                     lda ad1
3001 : e146                     sbc (lo sbi2-ad2,x) ;perform subtract
3003 : 08                       php          
3004 : c50d                     cmp adrl        ;check result
                                trap_ne         ;bad result
3006 : f003            >        beq skip2834
                       >        trap            ;failed not equal (non zero)
3008 : 209831          >        jsr report_error
                       >
300b :                 >skip2834
                        
300b : 68                       pla             ;check flags
300c : 2983                     and #$83        ;mask N-----ZC
300e : c50f                     cmp adrf
                                trap_ne         ;bad flags
3010 : f003            >        beq skip2836
                       >        trap            ;failed not equal (non zero)
3012 : 209831          >        jsr report_error
                       >
3015 :                 >skip2836
                        
3015 : 28                       plp
                        ; decimal ADC / SBC (abs),y
3016 : 08                       php             ;save carry for subtract
3017 : a50b                     lda ad1
3019 : 7154                     adc (adiy2),y   ;perform add
301b : 08                       php          
301c : c50d                     cmp adrl        ;check result
                                trap_ne         ;bad result
301e : f003            >        beq skip2838
                       >        trap            ;failed not equal (non zero)
3020 : 209831          >        jsr report_error
                       >
3023 :                 >skip2838
                        
3023 : 68                       pla             ;check flags
3024 : 2983                     and #$83        ;mask N-----ZC
3026 : c50f                     cmp adrf
                                trap_ne         ;bad flags
3028 : f003            >        beq skip2840
                       >        trap            ;failed not equal (non zero)
302a : 209831          >        jsr report_error
                       >
302d :                 >skip2840
                        
302d : 28                       plp
302e : 08                       php             ;save carry for next add
302f : a50b                     lda ad1
3031 : f156                     sbc (sbiy2),y   ;perform subtract
3033 : 08                       php          
3034 : c50d                     cmp adrl        ;check result
                                trap_ne         ;bad result
3036 : f003            >        beq skip2842
                       >        trap            ;failed not equal (non zero)
3038 : 209831          >        jsr report_error
                       >
303b :                 >skip2842
                        
303b : 68                       pla             ;check flags
303c : 2983                     and #$83        ;mask N-----ZC
303e : c50f                     cmp adrf
                                trap_ne         ;bad flags
3040 : f003            >        beq skip2844
                       >        trap            ;failed not equal (non zero)
3042 : 209831          >        jsr report_error
                       >
3045 :                 >skip2844
                        
3045 : 28                       plp
                        ; decimal ADC / SBC (zp)
3046 : 08                       php             ;save carry for subtract
3047 : a50b                     lda ad1
3049 : 7250                     adc (adi2)      ;perform add
304b : 08                       php          
304c : c50d                     cmp adrl        ;check result
                                trap_ne         ;bad result
304e : f003            >        beq skip2846
                       >        trap            ;failed not equal (non zero)
3050 : 209831          >        jsr report_error
                       >
3053 :                 >skip2846
                        
3053 : 68                       pla             ;check flags
3054 : 2983                     and #$83        ;mask N-----ZC
3056 : c50f                     cmp adrf
                                trap_ne         ;bad flags
3058 : f003            >        beq skip2848
                       >        trap            ;failed not equal (non zero)
305a : 209831          >        jsr report_error
                       >
305d :                 >skip2848
                        
305d : 28                       plp
305e : 08                       php             ;save carry for next add
305f : a50b                     lda ad1
3061 : f252                     sbc (sbi2)      ;perform subtract
3063 : 08                       php          
3064 : c50d                     cmp adrl        ;check result
                                trap_ne         ;bad result
3066 : f003            >        beq skip2850
                       >        trap            ;failed not equal (non zero)
3068 : 209831          >        jsr report_error
                       >
306b :                 >skip2850
                        
306b : 68                       pla             ;check flags
306c : 2983                     and #$83        ;mask N-----ZC
306e : c50f                     cmp adrf
                                trap_ne         ;bad flags
3070 : f003            >        beq skip2852
                       >        trap            ;failed not equal (non zero)
3072 : 209831          >        jsr report_error
                       >
3075 :                 >skip2852
                        
3075 : 28                       plp
3076 : 60                       rts
                        
                        ; core subroutine of the full binary add/subtract test
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
3077 : a50f             chkadd  lda adrf        ;add V-flag if overflow
3079 : 2983                     and #$83        ;keep N-----ZC / clear V
307b : 48                       pha
307c : a50b                     lda ad1         ;test sign unequal between operands
307e : 450c                     eor ad2
3080 : 300a                     bmi ckad1       ;no overflow possible - operands have different sign
3082 : a50b                     lda ad1         ;test sign equal between operands and result
3084 : 450d                     eor adrl
3086 : 1004                     bpl ckad1       ;no overflow occured - operand and result have same sign
3088 : 68                       pla
3089 : 0940                     ora #$40        ;set V
308b : 48                       pha
308c : 68               ckad1   pla
308d : 850f                     sta adrf        ;save expected flags
                        ; binary ADC / SBC (zp)
308f : 08                       php             ;save carry for subtract
3090 : a50b                     lda ad1
3092 : 7250                     adc (adi2)      ;perform add
3094 : 08                       php          
3095 : c50d                     cmp adrl        ;check result
                                trap_ne         ;bad result
3097 : f003            >        beq skip2854
                       >        trap            ;failed not equal (non zero)
3099 : 209831          >        jsr report_error
                       >
309c :                 >skip2854
                        
309c : 68                       pla             ;check flags
309d : 29c3                     and #$c3        ;mask NV----ZC
309f : c50f                     cmp adrf
                                trap_ne         ;bad flags
30a1 : f003            >        beq skip2856
                       >        trap            ;failed not equal (non zero)
30a3 : 209831          >        jsr report_error
                       >
30a6 :                 >skip2856
                        
30a6 : 28                       plp
30a7 : 08                       php             ;save carry for next add
30a8 : a50b                     lda ad1
30aa : f252                     sbc (sbi2)      ;perform subtract
30ac : 08                       php          
30ad : c50d                     cmp adrl        ;check result
                                trap_ne         ;bad result
30af : f003            >        beq skip2858
                       >        trap            ;failed not equal (non zero)
30b1 : 209831          >        jsr report_error
                       >
30b4 :                 >skip2858
                        
30b4 : 68                       pla             ;check flags
30b5 : 29c3                     and #$c3        ;mask NV----ZC
30b7 : c50f                     cmp adrf
                                trap_ne         ;bad flags
30b9 : f003            >        beq skip2860
                       >        trap            ;failed not equal (non zero)
30bb : 209831          >        jsr report_error
                       >
30be :                 >skip2860
                        
30be : 28                       plp
30bf : 60                       rts
                                
                        ; target for the jump indirect test
30c0 : c630             ji_adr  dw test_ji
30c2 : d91c                     dw ji_ret
                        
30c4 : 88                       dey
30c5 : 88                       dey
30c6 :                  test_ji
30c6 : 08                       php             ;either SP or Y count will fail, if we do not hit
30c7 : 88                       dey
30c8 : 88                       dey
30c9 : 88                       dey
30ca : 28                       plp
                                trap_cs         ;flags loaded?
30cb : 9003            >        bcc skip2862
                       >        trap            ;failed carry set
30cd : 209831          >        jsr report_error
                       >
30d0 :                 >skip2862
                        
                                trap_vs
30d0 : 5003            >        bvc skip2864
                       >        trap            ;failed overflow set
30d2 : 209831          >        jsr report_error
                       >
30d5 :                 >skip2864
                        
                                trap_mi
30d5 : 1003            >        bpl skip2866
                       >        trap            ;failed minus (bit 7 set)
30d7 : 209831          >        jsr report_error
                       >
30da :                 >skip2866
                        
                                trap_eq 
30da : d003            >        bne skip2868
                       >        trap           ;failed equal (zero)
30dc : 209831          >        jsr report_error
                       >
30df :                 >skip2868
                        
30df : c949                     cmp #'I'        ;registers loaded?
                                trap_ne
30e1 : f003            >        beq skip2870
                       >        trap            ;failed not equal (non zero)
30e3 : 209831          >        jsr report_error
                       >
30e6 :                 >skip2870
                        
30e6 : e04e                     cpx #'N'
                                trap_ne        
30e8 : f003            >        beq skip2872
                       >        trap            ;failed not equal (non zero)
30ea : 209831          >        jsr report_error
                       >
30ed :                 >skip2872
                        
30ed : c041                     cpy #('D'-3)
                                trap_ne
30ef : f003            >        beq skip2874
                       >        trap            ;failed not equal (non zero)
30f1 : 209831          >        jsr report_error
                       >
30f4 :                 >skip2874
                        
30f4 : 48                       pha             ;save a,x
30f5 : 8a                       txa
30f6 : 48                       pha
30f7 : ba                       tsx
30f8 : e0fd                     cpx #$fd        ;check SP
                                trap_ne
30fa : f003            >        beq skip2876
                       >        trap            ;failed not equal (non zero)
30fc : 209831          >        jsr report_error
                       >
30ff :                 >skip2876
                        
30ff : 68                       pla             ;restore x
3100 : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
3101 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3103 : 48              >            pha         ;use stack to load status
3104 : 28              >            plp
                        
3105 : 68                       pla             ;restore a
3106 : e8                       inx             ;return registers with modifications
3107 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
3109 : 6cff02                   jmp (ji_tab+2)
310c : ea                       nop
310d : ea                       nop
                                trap            ;runover protection
310e : 209831          >        jsr report_error
                        
                        
                        ; target for the jump indirect test
3111 : 6d31             jxi_adr dw  trap_ind
3113 : 6d31                     dw  trap_ind
3115 : 1f31                     dw  test_jxi    ;+4
3117 : 431d                     dw  jxi_ret     ;+6
3119 : 6d31                     dw  trap_ind
311b : 6d31                     dw  trap_ind
                        
311d : 88                       dey
311e : 88                       dey
311f :                  test_jxi
311f : 08                       php             ;either SP or Y count will fail, if we do not hit
3120 : 88                       dey
3121 : 88                       dey
3122 : 88                       dey
3123 : 28                       plp
                                trap_cs         ;flags loaded?
3124 : 9003            >        bcc skip2881
                       >        trap            ;failed carry set
3126 : 209831          >        jsr report_error
                       >
3129 :                 >skip2881
                        
                                trap_vs
3129 : 5003            >        bvc skip2883
                       >        trap            ;failed overflow set
312b : 209831          >        jsr report_error
                       >
312e :                 >skip2883
                        
                                trap_mi
312e : 1003            >        bpl skip2885
                       >        trap            ;failed minus (bit 7 set)
3130 : 209831          >        jsr report_error
                       >
3133 :                 >skip2885
                        
                                trap_eq 
3133 : d003            >        bne skip2887
                       >        trap           ;failed equal (zero)
3135 : 209831          >        jsr report_error
                       >
3138 :                 >skip2887
                        
3138 : c958                     cmp #'X'        ;registers loaded?
                                trap_ne
313a : f003            >        beq skip2889
                       >        trap            ;failed not equal (non zero)
313c : 209831          >        jsr report_error
                       >
313f :                 >skip2889
                        
313f : e004                     cpx #4
                                trap_ne        
3141 : f003            >        beq skip2891
                       >        trap            ;failed not equal (non zero)
3143 : 209831          >        jsr report_error
                       >
3146 :                 >skip2891
                        
3146 : c046                     cpy #('I'-3)
                                trap_ne
3148 : f003            >        beq skip2893
                       >        trap            ;failed not equal (non zero)
314a : 209831          >        jsr report_error
                       >
314d :                 >skip2893
                        
314d : 48                       pha             ;save a,x
314e : 8a                       txa
314f : 48                       pha
3150 : ba                       tsx
3151 : e0fd                     cpx #$fd        ;check SP
                                trap_ne
3153 : f003            >        beq skip2895
                       >        trap            ;failed not equal (non zero)
3155 : 209831          >        jsr report_error
                       >
3158 :                 >skip2895
                        
3158 : 68                       pla             ;restore x
3159 : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
315a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
315c : 48              >            pha         ;use stack to load status
315d : 28              >            plp
                        
315e : 68                       pla             ;restore a
315f : e8                       inx             ;return registers with modifications
3160 : e8                       inx
3161 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
3163 : 7cf902                   jmp (jxi_tab,x)
3166 : ea                       nop
3167 : ea                       nop
                                trap            ;runover protection
3168 : 209831          >        jsr report_error
                        
                        
                        ; JMP (abs,x) with bad x
316b : ea                       nop
316c : ea                       nop
316d :                  trap_ind
316d : ea                       nop
316e : ea                       nop
                                trap            ;near miss indexed indirect jump
316f : 209831          >        jsr report_error
                        
                        
                        ;trap in case of unexpected IRQ, NMI, BRK, RESET
3172 :                  nmi_trap
                                trap            ;check stack for conditions at NMI
3172 : 209831          >        jsr report_error
                        
3175 :                  res_trap
                                trap            ;unexpected RESET
3175 : 209831          >        jsr report_error
                        
3178 :                  irq_trap
3178 : 08                       php             ;save decimal flag
3179 : ba                       tsx             ;test break on stack
317a : bd0201                   lda $102,x
317d : 2910                     and #break
                                trap_eq         ;check stack for conditions at IRQ
317f : d003            >        bne skip2903
                       >        trap           ;failed equal (zero)
3181 : 209831          >        jsr report_error
                       >
3184 :                 >skip2903
                        
                            if ROM_vectors = 1
                                pla             ;test decimal mode cleared
                                and #decmode
                                trap_ne         ;decimal mode not cleared after BRK
                                plp             ;pop saved flags
                                pla             ;return address low
                                cmp #lo(brk_ret)
                                trap_ne         ;unexpected BRK
                                pla             ;return address high
                                cmp #hi(brk_ret)
                                trap_ne         ;unexpected BRK
                                jmp brk_ret
                            else
                                trap_ne         ;check stack for conditions at BRK
3184 : f003            >        beq skip2905
                       >        trap            ;failed not equal (non zero)
3186 : 209831          >        jsr report_error
                       >
3189 :                 >skip2905
                        
                            endif
                                
                            if report = 1
                                include "report.i65"
                        ;**** report 6502 funtional test errors to standard I/O ****
                        ;
                        ;this include file is part of the 6502 functional tests
                        ;it is used when you configure report = 1 in the tests
                        ;
                        ;to adopt the standard output vectors of your test environment
                        ;you must modify the rchar and rget subroutines in this include
                        ;
                        ;I/O hardware may have to be initialized in report_init
                        
                        ;print message macro - \1 = message location
                        rprt    macro
                                ldx #0
                                lda \1
                        loop\?
                                jsr rchar
                                inx
                                lda \1,x
                                bne loop\?
                                endm
                        
                        ;initialize I/O as required (example: configure & enable ACIA)
3189 :                  report_init
                                ;nothing to initialize
                                rprt rmsg_start
3189 : a200            >        ldx #0
318b : ad5f32          >        lda rmsg_start
318e :                 >loop2907
318e : 205b32          >        jsr rchar
3191 : e8              >        inx
3192 : bd5f32          >        lda rmsg_start,x
3195 : d0f7            >        bne loop2907
                        
3197 : 60                       rts
                                
                        ;show stack (with saved registers), zeropage and absolute memory workspace
                        ;after an error was trapped in the test program
3198 :                  report_error
                        ;save registers
3198 : 08                       php
3199 : 48                       pha
319a : 8a                       txa
319b : 48                       pha
319c : 98                       tya
319d : 48                       pha
319e : d8                       cld
                        ;show stack with index to registers at error
                                rprt rmsg_stack
319f : a200            >        ldx #0
31a1 : ad7332          >        lda rmsg_stack
31a4 :                 >loop2908
31a4 : 205b32          >        jsr rchar
31a7 : e8              >        inx
31a8 : bd7332          >        lda rmsg_stack,x
31ab : d0f7            >        bne loop2908
                        
31ad : ba                       tsx
31ae : e8                       inx
31af : a901                     lda #1      ;address high
31b1 : 204732                   jsr rhex
31b4 : 8a                       txa         ;address low
31b5 : 204732                   jsr rhex
31b8 : 204332           rstack  jsr rspace
31bb : bd0001                   lda $100,x  ;stack data
31be : 204732                   jsr rhex
31c1 : e8                       inx
31c2 : d0f4                     bne rstack
31c4 : 203a32                   jsr rcrlf   ;new line
                        ;show zero page workspace
31c7 : a900                     lda #0
31c9 : 204732                   jsr rhex
31cc : a90a                     lda #zpt
31ce : aa                       tax
31cf : 204732                   jsr rhex
31d2 : 204332           rzp     jsr rspace
31d5 : b500                     lda 0,x
31d7 : 204732                   jsr rhex
31da : e8                       inx
31db : e011                     cpx #zp_bss
31dd : d0f3                     bne rzp
31df : 203a32                   jsr rcrlf
                        ;show absolute workspace
31e2 : a902                     lda #hi(data_segment)
31e4 : 204732                   jsr rhex
31e7 : a900                     lda #lo(data_segment)
31e9 : 204732                   jsr rhex
31ec : a200                     ldx #0
31ee : 204332           rabs    jsr rspace
31f1 : bd0002                   lda data_segment,x
31f4 : 204732                   jsr rhex
31f7 : e8                       inx
31f8 : e00a                     cpx #(data_bss-data_segment)
31fa : d0f2                     bne rabs
                        ;ask to continue
                                rprt rmsg_cont
31fc : a200            >        ldx #0
31fe : ad8f32          >        lda rmsg_cont
3201 :                 >loop2909
3201 : 205b32          >        jsr rchar
3204 : e8              >        inx
3205 : bd8f32          >        lda rmsg_cont,x
3208 : d0f7            >        bne loop2909
                        
320a : 202e32           rerr1   jsr rget
320d : c943                     cmp #'C'
320f : d0f9                     bne rerr1        
                        ;restore registers
3211 : 68                       pla
3212 : a8                       tay
3213 : 68                       pla
3214 : aa                       tax
3215 : 68                       pla 
3216 : 28                       plp
3217 : 60                       rts   
                        
                        ;show test has ended, ask to repeat
3218 :                  report_success
                            if rep_int = 1
                                rprt rmsg_priority
                                lda data_segment    ;show interrupt sequence
                                jsr rhex
                                jsr rspace
                                lda data_segment+1
                                jsr rhex
                                jsr rspace
                                lda data_segment+2
                                jsr rhex
                            endif
                                rprt rmsg_success
3218 : a200            >        ldx #0
321a : ada732          >        lda rmsg_success
321d :                 >loop2910
321d : 205b32          >        jsr rchar
3220 : e8              >        inx
3221 : bda732          >        lda rmsg_success,x
3224 : d0f7            >        bne loop2910
                        
3226 : 202e32           rsuc1   jsr rget
3229 : c952                     cmp #'R'
322b : d0f9                     bne rsuc1        
322d : 60                       rts
                        
                        ;input subroutine
                        ;get a character from standard input 
                        ;adjust according to the needs in your test environment
322e :                  rget                ;get character in A
                        ;rget1
                        ;        lda $bff1   ;wait RDRF
                        ;        and #8
                        ;        beq rget1
                        ;not a real ACIA - so RDRF is not checked
322e : adf0bf                   lda $bff0   ;read acia rx reg
                        ;the load can be replaced by a call to a kernal routine
                        ;        jsr $ffcf   ;example: CHRIN for a C64
3231 : c961                     cmp #'a'    ;lower case
3233 : 9002                     bcc rget1
3235 : 295f                     and #$5f    ;convert to upper case
3237 : a943             rget1   lda #'C'
3239 : 60               		rts
                        
                        ;output subroutines
323a : a90a             rcrlf   lda #10
323c : 205b32                   jsr rchar
323f : a90d                     lda #13
3241 : d018                     bne rchar
                        
3243 : a920             rspace  lda #' '
3245 : d014                     bne rchar
                                
3247 : 48               rhex    pha         ;report hex byte in A
3248 : 4a                       lsr a       ;high nibble first
3249 : 4a                       lsr a
324a : 4a                       lsr a
324b : 4a                       lsr a
324c : 205232                   jsr rnib
324f : 68                       pla         ;now low nibble
3250 : 290f                     and #$f
                        
3252 : 18               rnib    clc         ;report nibble in A
3253 : 6930                     adc #'0'    ;make printable 0-9
3255 : c93a                     cmp #'9'+1
3257 : 9002                     bcc rchar
3259 : 6906                     adc #6      ;make printable A-F
                        
                        ;send a character to standard output 
                        ;adjust according to the needs in your test environment
                        ;register X needs to be preserved!
325b :                  rchar               ;report character in A
                        ;        pha         ;wait TDRF
                        ;rchar1  lda $bff1
                        ;        and #$10
                        ;        beq rchar1
                        ;        pla
                        ;not a real ACIA - so TDRF is not checked
325b : 8d00ef                   sta $ef00   ;write acia tx reg
                        ;the store can be replaced by a call to a kernal routine
                        ;        jsr $ffd2   ;example: CHROUT for a C64
325e : 60                       rts
                        
325f :                  rmsg_start
325f : 0a0d5374617274..         db  10,13,"Started testing",10,13,0
3273 :                  rmsg_stack
3273 : 0a0d7265677320..         db  10,13,"regs Y  X  A  PS PCLPCH",10,13,0
328f :                  rmsg_cont
328f : 0a0d7072657373..         db  10,13,"press C to continue",10,13,0
32a7 :                  rmsg_success
32a7 : 0a0d416c6c2074..         db  10,13,"All tests completed, press R to repeat",10,13,0
                            if rep_int = 1
                        rmsg_priority
                                db  10,13,"interrupt sequence (NMI IRQ BRK) ",0
                            endif
                           
                            endif
                                    
                        ;copy of data to initialize BSS segment
                            if load_data_direct != 1
32d2 :                  zp_init
32d2 : c3824100         zp1_    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
32d6 : 7f               zp7f_   db  $7f             ;test pattern for compare  
                        ;logical zeropage operands
32d7 : 001f7180         zpOR_   db  0,$1f,$71,$80   ;test pattern for OR
32db : 0fff7f80         zpAN_   db  $0f,$ff,$7f,$80 ;test pattern for AND
32df : ff0f8f8f         zpEO_   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
32e3 : 0a02             ind1_   dw  abs1            ;indirect pointer to pattern in absolute memory
32e5 : 0b02                     dw  abs1+1
32e7 : 0c02                     dw  abs1+2
32e9 : 0d02                     dw  abs1+3
32eb : 0e02                     dw  abs7f
32ed : 1201             inw1_   dw  abs1-$f8        ;indirect pointer for wrap-test pattern
32ef : 0502             indt_   dw  abst            ;indirect pointer to store area in absolute memory
32f1 : 0602                     dw  abst+1
32f3 : 0702                     dw  abst+2
32f5 : 0802                     dw  abst+3
32f7 : 0d01             inwt_   dw  abst-$f8        ;indirect pointer for wrap-test store
32f9 : 4102             indAN_  dw  absAN           ;indirect pointer to AND pattern in absolute memory
32fb : 4202                     dw  absAN+1
32fd : 4302                     dw  absAN+2
32ff : 4402                     dw  absAN+3
3301 : 4502             indEO_  dw  absEO           ;indirect pointer to EOR pattern in absolute memory
3303 : 4602                     dw  absEO+1
3305 : 4702                     dw  absEO+2
3307 : 4802                     dw  absEO+3
3309 : 3d02             indOR_  dw  absOR           ;indirect pointer to OR pattern in absolute memory
330b : 3e02                     dw  absOR+1
330d : 3f02                     dw  absOR+2
330f : 4002                     dw  absOR+3
                        ;add/subtract indirect pointers
3311 : 0502             adi2_   dw  ada2            ;indirect pointer to operand 2 in absolute memory
3313 : 0602             sbi2_   dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
3315 : 0601             adiy2_  dw  ada2-$ff        ;with offset for indirect indexed
3317 : 0701             sbiy2_  dw  sba2-$ff
3319 :                  zp_end
                            if (zp_end - zp_init) != (zp_bss_end - zp_bss)   
                                ;force assembler error if size is different   
                                ERROR ERROR ERROR   ;mismatch between bss and zeropage data
                            endif 
3319 :                  data_init
3319 : c3824100         abs1_   db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
331d : 7f               abs7f_  db  $7f             ;test pattern for compare
                        ;loads
331e : 80800002         fLDx_   db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
3322 :                  rASL_                       ;expected result ASL & ROL -carry  
3322 : 86048200         rROL_   db  $86,$04,$82,0   ; "
3326 : 87058301         rROLc_  db  $87,$05,$83,1   ;expected result ROL +carry
332a :                  rLSR_                       ;expected result LSR & ROR -carry
332a : 61412000         rROR_   db  $61,$41,$20,0   ; "
332e : e1c1a080         rRORc_  db  $e1,$c1,$a0,$80 ;expected result ROR +carry
3332 :                  fASL_                       ;expected flags for shifts
3332 : 81018002         fROL_   db  fnc,fc,fn,fz    ;no carry in
3336 : 81018000         fROLc_  db  fnc,fc,fn,0     ;carry in
333a :                  fLSR_
333a : 01000102         fROR_   db  fc,0,fc,fz      ;no carry in
333e : 81808180         fRORc_  db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
3342 : 7f80ff0001       rINC_   db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
3347 : 0080800200       fINC_   db  0,fn,fn,fz,0    ;expected flags for INC/DEC
                        ;logical memory operand
334c : 001f7180         absOR_  db  0,$1f,$71,$80   ;test pattern for OR
3350 : 0fff7f80         absAN_  db  $0f,$ff,$7f,$80 ;test pattern for AND
3354 : ff0f8f8f         absEO_  db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
3358 : 00f11f00         absORa_ db  0,$f1,$1f,0     ;test pattern for OR
335c : f0ffffff         absANa_ db  $f0,$ff,$ff,$ff ;test pattern for AND
3360 : fff0f00f         absEOa_ db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
3364 : 00ff7f80         absrlo_ db  0,$ff,$7f,$80
3368 : 02800080         absflo_ db  fz,fn,0,fn
336c :                  data_end
                            if (data_end - data_init) != (data_bss_end - data_bss)
                                ;force assembler error if size is different   
                                ERROR ERROR ERROR   ;mismatch between bss and data
                            endif 
                        
336c :                  vec_init
336c : 7231                     dw  nmi_trap
336e : 7531                     dw  res_trap
3370 : 7831                     dw  irq_trap
fffa =                  vec_bss equ $fffa
                            endif                   ;end of RAM init data
                            
                        ; code at end of image due to the need to add blank space as required
                            if ($ff & (ji_ret - * - 2)) < ($ff & (jxi_ret - * - 2))
                        ; JMP (abs) when $xxff and $xx00 are from same page
3372 : 00000000000000..         ds  lo(ji_ret - * - 2)
33d7 : ea                       nop
33d8 : ea                       nop
33d9 : ea               ji_px   nop             ;low address byte matched with ji_ret 
33da : ea                       nop
                                trap            ;jmp indirect page cross bug
33db : 209831          >        jsr report_error
                        
                        
                        ; JMP (abs,x) when $xxff and $xx00 are from same page
33de : 00000000000000..         ds  lo(jxi_ret - * - 2)
3441 : ea                       nop
3442 : ea                       nop
3443 : ea               jxi_px  nop             ;low address byte matched with jxi_ret 
3444 : ea                       nop
                                trap            ;jmp indexed indirect page cross bug
3445 : 209831          >        jsr report_error
                        
                            else
                        ; JMP (abs,x) when $xxff and $xx00 are from same page
                                ds  lo(jxi_ret - * - 2)
                                nop
                                nop
                        jxi_px  nop             ;low address byte matched with jxi_ret 
                                nop
                                trap            ;jmp indexed indirect page cross bug
                        
                        ; JMP (abs) when $xxff and $xx00 are from same page
                                ds  lo(ji_ret - * - 2)
                                nop
                                nop
                        ji_px   nop             ;low address byte matched with ji_ret 
                                nop
                                trap            ;jmp indirect page cross bug
                            endif
                            
                            if (load_data_direct = 1) & (ROM_vectors = 1)  
                                org $fffa       ;vectors
                                dw  nmi_trap
                                dw  res_trap
                                dw  irq_trap
                            endif
                        
3443 =                          end start
                                    
No errors in pass 2.
Wrote binary from address $0400 through $3447.
Total size 12360 bytes.
Program start address is at $0400 (1024).
