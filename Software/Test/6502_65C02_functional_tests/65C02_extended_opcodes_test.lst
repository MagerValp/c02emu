AS65 Assembler for R6502 [1.42].  Copyright 1994-2007, Frank A. Kingswood                                                Page    1
------------------------------------------------ 65C02_extended_opcodes_test.a65c ------------------------------------------------

2951 lines read, no errors in pass 1.
                        ;
                        ; 6 5 C 0 2   E X T E N D E D   O P C O D E S   T E S T
                        ;
                        ; Copyright (C) 2013  Klaus Dormann
                        ;
                        ; This program is free software: you can redistribute it and/or modify
                        ; it under the terms of the GNU General Public License as published by
                        ; the Free Software Foundation, either version 3 of the License, or
                        ; (at your option) any later version.
                        ;
                        ; This program is distributed in the hope that it will be useful,
                        ; but WITHOUT ANY WARRANTY; without even the implied warranty of
                        ; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        ; GNU General Public License for more details.
                        ;
                        ; You should have received a copy of the GNU General Public License
                        ; along with this program.  If not, see <http://www.gnu.org/licenses/>.
                        
                        
                        ; This program is designed to test all additional 65C02 opcodes, addressing
                        ; modes and functionality not available in the NMOS version of the 6502.
                        ; The 6502_functional_test is a prerequisite to this test.
                        ; NMI, IRQ, BRK, STP & WAI are covered in the 6502_interrupt_test.
                        ; 
                        ; version 16-aug-2013
                        ; contact info at http://2m5.de or email K@2m5.de
                        ;
                        ; assembled with AS65 from http://www.kingswood-consulting.co.uk/assemblers/
                        ; command line switches: -l -m -s2 -w -x -h0
                        ;                         |  |  |   |  |  no page headers in listing
                        ;                         |  |  |   |  65C02 extensions
                        ;                         |  |  |   wide listing (133 char/col)
                        ;                         |  |  write intel hex file instead of binary
                        ;                         |  expand macros in listing
                        ;                         generate pass2 listing
                        ;
                        ; No IO - should be run from a monitor with access to registers.
                        ; To run load intel hex image with a load command, than alter PC to 400 hex
                        ; (code_segment) and enter a go command.
                        ; Loop on program counter determines error or successful completion of test.
                        ; Check listing for relevant traps (jump/branch *).
                        ; Please note that in early tests some instructions will have to be used before
                        ; they are actually tested!
                        ;
                        ; RESET, NMI or IRQ should not occur and will be trapped if vectors are enabled.
                        ; Tests documented behavior of the original 65C02 only!
                        ; Decimal ops will only be tested with valid BCD operands and the V flag will
                        ; be ignored as it is absolutely useless in decimal mode.
                        ;
                        ; Debugging hints:
                        ;     Most of the code is written sequentially. if you hit a trap, check the
                        ;   immediately preceeding code for the instruction to be tested. Results are
                        ;   tested first, flags are checked second by pushing them onto the stack and
                        ;   pulling them to the accumulator after the result was checked. The "real"
                        ;   flags are no longer valid for the tested instruction at this time!
                        ;     If the tested instruction was indexed, the relevant index (X or Y) must
                        ;   also be checked. Opposed to the flags, X and Y registers are still valid.
                        ;
                        ; versions:
                        ;   19-jul-2013  1st version distributed for testing
                        ;   23-jul-2013  fixed BRA out of range due to larger trap macros
                        ;                added RAM integrity check
                        ;   16-aug-2013  added error report to standard output option
                        
                        
                        ; C O N F I G U R A T I O N
                        
                        ;ROM_vectors writable (0=no, 1=yes)
                        ;if ROM vectors can not be used interrupts will not be trapped
                        ;as a consequence BRK can not be tested but will be emulated to test RTI
0000 =                  ROM_vectors = 0
                        
                        ;load_data_direct (0=move from code segment, 1=load directly)
                        ;loading directly is preferred but may not be supported by your platform
                        ;0 produces only consecutive object code, 1 is not suitable for a binary image
0000 =                  load_data_direct = 0
                        
                        ;I_flag behavior (0=force enabled, 1=force disabled, 2=prohibit change, 3=allow
                        ;change) 2 requires extra code and is not recommended.
0003 =                  I_flag = 3
                        
                        ;configure memory - try to stay away from memory used by the system
                        ;zero_page memory start address, $4e (78) consecutive Bytes required
                        ;                                add 2 if I_flag = 2
0010 =                  zero_page = $10
                        
                        ;data_segment memory start address, $5D (93) consecutive Bytes required
                        ; + 12 Bytes at data_segment + $f9 (JMP indirect page cross test)
0200 =                  data_segment = $200
                            if (data_segment & $ff) != 0
                                ERROR ERROR ERROR low byte of data_segment MUST be $00 !!
                            endif  
                        
                        ;code_segment memory start address, 10kB of consecutive space required
                        ;                                   add 1 kB if I_flag = 2
                        ;parts of the code are self modifying and must reside in RAM
1000 =                  code_segment = $1000  
                        
                        ;added WDC only opcodes WAI & STP (0=test as NOPs, >0=no test)
0001 =                  wdc_op = 1
                        
                        ;added Rockwell & WDC opcodes BBR, BBS, RMB & SMB
                        ;(0=test as NOPs, 1=full test, >1=no test) 
0001 =                  rkwl_wdc_op = 1
                        
                        ;report errors through I/O channel (0=use standard self trap loops, 1=include
                        ;report.i65 as I/O channel, add 3 kB)
0001 =                  report = 1
                        
                        ;RAM integrity test option. Checks for undesired RAM writes.
                        ;set lowest non RAM or RAM mirror address page (-1=disable, 0=64k, $40=16k)
                        ;leave disabled if a monitor, OS or background interrupt is allowed to alter RAM
ffff =                  ram_top = -1
                        
                                noopt       ;do not take shortcuts
                                
                        ;macros for error & success traps to allow user modification
                        ;example:
                        ;trap    macro
                        ;        jsr my_error_handler
                        ;        endm
                        ;trap_eq macro
                        ;        bne skip\?
                        ;        trap           ;failed equal (zero)
                        ;skip\?
                        ;        endm
                        ;
                        ; my_error_handler should pop the calling address from the stack and report it.
                        ; putting larger portions of code (more than 3 bytes) inside the trap macro
                        ; may lead to branch range problems for some tests.
                            if report = 0
                        trap    macro
                                jmp *           ;failed anyway
                                endm
                        trap_eq macro
                                beq *           ;failed equal (zero)
                                endm
                        trap_ne macro
                                bne *           ;failed not equal (non zero)
                                endm
                        trap_cs macro
                                bcs *           ;failed carry set
                                endm
                        trap_cc macro
                                bcc *           ;failed carry clear
                                endm
                        trap_mi macro
                                bmi *           ;failed minus (bit 7 set)
                                endm
                        trap_pl macro
                                bpl *           ;failed plus (bit 7 clear)
                                endm
                        trap_vs macro
                                bvs *           ;failed overflow set
                                endm
                        trap_vc macro
                                bvc *           ;failed overflow clear
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                         sta $ef04
                         db "success", 10, 0
                                jmp *           ;test passed, no errors
                                endm
                            endif
                            if report = 1
                        trap    macro
                                sta $ef02
                                ;jsr report_error
                                endm
                        trap_eq macro
                                bne skip\?
                                trap           ;failed equal (zero)
                        skip\?
                                endm
                        trap_ne macro
                                beq skip\?
                                trap            ;failed not equal (non zero)
                        skip\?
                                endm
                        trap_cs macro
                                bcc skip\?
                                trap            ;failed carry set
                        skip\?
                                endm
                        trap_cc macro
                                bcs skip\?
                                trap            ;failed carry clear
                        skip\?
                                endm
                        trap_mi macro
                                bpl skip\?
                                trap            ;failed minus (bit 7 set)
                        skip\?
                                endm
                        trap_pl macro
                                bmi skip\?
                                trap            ;failed plus (bit 7 clear)
                        skip\?
                                endm
                        trap_vs macro
                                bvc skip\?
                                trap            ;failed overflow set
                        skip\?
                                endm
                        trap_vc macro
                                bvs skip\?
                                trap            ;failed overflow clear
                        skip\?
                                endm
                        ; please observe that during the test the stack gets invalidated
                        ; therefore a RTS inside the success macro is not possible
                        success macro
                         sta $ef04
                         db "success", 10, 0
                                db $db
                                ;jsr report_success
                                endm
                            endif
                        
                        
0001 =                  carry   equ %00000001   ;flag bits in status
0002 =                  zero    equ %00000010
0004 =                  intdis  equ %00000100
0008 =                  decmode equ %00001000
0010 =                  break   equ %00010000
0020 =                  reserv  equ %00100000
0040 =                  overfl  equ %01000000
0080 =                  minus   equ %10000000
                        
0001 =                  fc      equ carry
0002 =                  fz      equ zero
0003 =                  fzc     equ carry+zero
0040 =                  fv      equ overfl
0042 =                  fvz     equ overfl+zero
0080 =                  fn      equ minus
0081 =                  fnc     equ minus+carry
0082 =                  fnz     equ minus+zero
0083 =                  fnzc    equ minus+zero+carry
00c0 =                  fnv     equ minus+overfl
                        
0030 =                  fao     equ break+reserv    ;bits always on after PHP, BRK
0034 =                  fai     equ fao+intdis      ;+ forced interrupt disable
00ff =                  m8      equ $ff             ;8 bit mask
00fb =                  m8i     equ $ff&~intdis     ;8 bit mask - interrupt disable
                        
                        ;macros to allow masking of status bits.
                        ;masking of interrupt enable/disable on load and compare
                        ;masking of always on bits after PHP or BRK (unused & break) on compare
                                if I_flag = 0
                        load_flag   macro
                                    lda #\1&m8i         ;force enable interrupts (mask I)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8i   ;I_flag is always enabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 1
                        load_flag   macro
                                    lda #\1|intdis      ;force disable interrupts
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fai)&m8    ;I_flag is always disabled + always on bits
                                    endm
                        eor_flag    macro
                                    eor #(\1|fai)       ;invert expected flags + always on bits + I
                                    endm
                                endif
                                if I_flag = 2
                        load_flag   macro
                                    lda #\1
                                    ora flag_I_on       ;restore I-flag
                                    and flag_I_off
                                    endm
                        cmp_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    cmp #(\1|fao)&m8i   ;expected flags + always on bits, mask I
                                    endm
                        eor_flag    macro
                                    eor flag_I_on       ;I_flag is never changed
                                    eor #(\1&m8i|fao)   ;mask I, invert expected flags + always on bits
                                    endm
                                endif
                                if I_flag = 3
                        load_flag   macro
                                    lda #\1             ;allow test to change I-flag (no mask)
                                    endm
                        cmp_flag    macro
                                    cmp #(\1|fao)&m8    ;expected flags + always on bits
                                    endm
                        eor_flag    macro
                                    eor #\1|fao         ;invert expected flags + always on bits
                                    endm
                                endif
                        
                        ;macros to set (register|memory|zeropage) & status
                        set_stat    macro       ;setting flags in the processor status register
                                    load_flag \1
                                    pha         ;use stack to load status
                                    plp
                                    endm
                        
                        set_a       macro       ;precharging accu & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda #\1     ;precharge accu
                                    plp
                                    endm
                        
                        set_x       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldx #\1     ;precharge index x
                                    plp
                                    endm
                        
                        set_y       macro       ;precharging index & status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    ldy #\1     ;precharge index y
                                    plp
                                    endm
                        
                        set_ax      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;precharge accu
                                    plp
                                    endm
                        
                        set_ay      macro       ;precharging indexed accu & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,y    ;precharge accu
                                    plp
                                    endm
                        
                        set_z       macro       ;precharging indexed zp & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to zeropage
                                    sta zpt
                                    plp
                                    endm
                        
                        set_zx      macro       ;precharging zp,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed zeropage
                                    sta zpt,x
                                    plp
                                    endm
                        
                        set_abs     macro       ;precharging indexed memory & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to memory
                                    sta abst
                                    plp
                                    endm
                        
                        set_absx    macro       ;precharging abs,x & immediate status
                                    load_flag \2
                                    pha         ;use stack to load status
                                    lda \1,x    ;load to indexed memory
                                    sta abst,x
                                    plp
                                    endm
                        
                        ;macros to test (register|memory|zeropage) & status & (mask)
                        tst_stat    macro       ;testing flags in the processor status register
                                    php         ;save status
                                    php         ;use stack to retrieve status
                                    pla
                                    cmp_flag \1
                                    trap_ne
                                    plp         ;restore status
                                    endm
                                    
                        tst_a       macro       ;testing result in accu & flags
                                    php         ;save flags
                                    php
                                    cmp #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_as      macro       ;testing result in accu & flags, save accu
                                    pha
                                    php         ;save flags
                                    php
                                    cmp #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    pla
                                    endm
                        
                        tst_x       macro       ;testing result in x index & flags
                                    php         ;save flags
                                    php
                                    cpx #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_y       macro       ;testing result in y index & flags
                                    php         ;save flags
                                    php
                                    cpy #\1     ;test result
                                    trap_ne
                                    pla         ;load status
                                    cmp_flag \2
                                    trap_ne
                                    plp         ;restore status
                                    endm
                        
                        tst_ax      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne     ;
                                    endm
                        
                        tst_ay      macro       ;indexed testing result in accu & flags
                                    php         ;save flags
                                    cmp \1,y    ;test result
                                    trap_ne     ;
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,y    ;test flags
                                    trap_ne
                                    endm
                                
                        tst_z       macro       ;indexed testing result in zp & flags
                                    php         ;save flags
                                    lda zpt
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_zx      macro       ;testing result in zp,x & flags
                                    php         ;save flags
                                    lda zpt,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_abs     macro       ;indexed testing result in memory & flags
                                    php         ;save flags
                                    lda abst
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                        
                        tst_absx    macro       ;testing result in abs,x & flags
                                    php         ;save flags
                                    lda abst,x
                                    cmp \1,x    ;test result
                                    trap_ne
                                    pla         ;load status
                                    eor_flag \3
                                    cmp \2,x    ;test flags
                                    trap_ne
                                    endm
                                    
                        ; RAM integrity test
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                        ;   uses zpt word as indirect pointer, zpt+2 word as checksum
                                if ram_top > -1
                        check_ram   macro 
                                    cld
                                    lda #0
                                    sta zpt         ;set low byte of indirect pointer
                                    sta zpt+3       ;checksum high byte
                                    ldx #11         ;reset modifiable RAM
                        ccs1\?      sta jxi_tab,x   ;JMP indirect page cross area
                                    dex
                                    bpl ccs1\?
                                    sta chkdadi     ;self modifying code
                                    sta chkdsbi
                                    clc
                                    ldx #zp_bss-zero_page ;zeropage - write test area
                        ccs3\?      adc zero_page,x
                                    bcc ccs2\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs2\?      inx
                                    bne ccs3\?
                                    ldx #hi(data_segment) ;set high byte of indirect pointer
                                    stx zpt+1
                                    ldy #lo(data_bss) ;data after write test area
                        ccs5\?      adc (zpt),y
                                    bcc ccs4\?
                                    inc zpt+3       ;carry to high byte
                                    clc
                        ccs4\?      iny
                                    bne ccs5\?
                                    inx             ;advance RAM high address
                                    stx zpt+1
                                    cpx #ram_top
                                    bne ccs5\?
                                    sta zpt+2       ;checksum low is
                                    cmp ram_chksm   ;checksum low expected
                                    trap_ne         ;checksum mismatch
                                    lda zpt+3       ;checksum high is
                                    cmp ram_chksm+1 ;checksum high expected
                                    trap_ne         ;checksum mismatch
                                    endm            
                                else
                        check_ram   macro
                                    ;RAM check disabled - RAM size not set
                                    endm
                                endif
                                    
                        next_test   macro           ;make sure, tests don't jump the fence
                                    lda test_case   ;previous test
                                    cmp #test_num
                                    trap_ne         ;test is out of sequence
                        test_num = test_num + 1
                                    lda #test_num   ;*** next tests' number
                                    sta test_case
                                    ;sta $ef03
                                    ;check_ram       ;uncomment to find altered RAM after each test
                                    endm
                        
                            if load_data_direct = 1
                                data
                            else
                                bss                 ;uninitialized segment, copy of data at end of code!
                            endif
0010 =                          org zero_page
                            if I_flag = 2
                        ;masking for I bit in status
                        flag_I_on   ds  1           ;or mask to load flags   
                        flag_I_off  ds  1           ;and mask to load flags
                            endif
0010 =                  zpt                         ;5 bytes store/modify test area
                        ;add/subtract operand generation and result/flag prediction
0010 =                  adfc    ds  1               ;carry flag before op
0011 =                  ad1     ds  1               ;operand 1 - accumulator
0012 =                  ad2     ds  1               ;operand 2 - memory / immediate
0013 =                  adrl    ds  1               ;expected result bits 0-7
0014 =                  adrh    ds  1               ;expected result bit 8 (carry)
0015 =                  adrf    ds  1               ;expected flags NV0000ZC (-V in decimal mode)
0016 =                  sb2     ds  1               ;operand 2 complemented for subtract
0017 =                  zp_bss
0017 =                  zp1     db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
001b =                  zp7f    db  $7f             ;test pattern for compare  
                        ;logical zeropage operands
001c =                  zpOR    db  0,$1f,$71,$80   ;test pattern for OR
0020 =                  zpAN    db  $0f,$ff,$7f,$80 ;test pattern for AND
0024 =                  zpEO    db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
0028 =                  ind1    dw  abs1            ;indirect pointer to pattern in absolute memory
002a =                          dw  abs1+1
002c =                          dw  abs1+2
002e =                          dw  abs1+3
0030 =                          dw  abs7f
0032 =                  inw1    dw  abs1-$f8        ;indirect pointer for wrap-test pattern
0034 =                  indt    dw  abst            ;indirect pointer to store area in absolute memory
0036 =                          dw  abst+1
0038 =                          dw  abst+2
003a =                          dw  abst+3
003c =                  inwt    dw  abst-$f8        ;indirect pointer for wrap-test store
003e =                  indAN   dw  absAN           ;indirect pointer to AND pattern in absolute memory
0040 =                          dw  absAN+1
0042 =                          dw  absAN+2
0044 =                          dw  absAN+3
0046 =                  indEO   dw  absEO           ;indirect pointer to EOR pattern in absolute memory
0048 =                          dw  absEO+1
004a =                          dw  absEO+2
004c =                          dw  absEO+3
004e =                  indOR   dw  absOR           ;indirect pointer to OR pattern in absolute memory
0050 =                          dw  absOR+1
0052 =                          dw  absOR+2
0054 =                          dw  absOR+3
                        ;add/subtract indirect pointers
0056 =                  adi2    dw  ada2            ;indirect pointer to operand 2 in absolute memory
0058 =                  sbi2    dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
005a =                  adiy2   dw  ada2-$ff        ;with offset for indirect indexed
005c =                  sbiy2   dw  sba2-$ff
005e =                  zp_bss_end
                            
0200 =                          org data_segment
0200 =                  pg_x    ds  2               ;high JMP indirect address for page cross bug
0202 =                  test_case   ds  1           ;current test number
0203 =                  ram_chksm   ds  2           ;checksum for RAM integrity test
                        ;add/subtract operand copy - abs tests write area
0205 =                  abst                        ;5 bytes store/modify test area
0205 =                  ada2    ds  1               ;operand 2
0206 =                  sba2    ds  1               ;operand 2 complemented for subtract
0207 =                          ds  3               ;fill remaining bytes
020a =                  data_bss
020a =                  abs1    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
020e =                  abs7f   db  $7f             ;test pattern for compare
                        ;loads
020f =                  fLDx    db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
0213 =                  rASL                        ;expected result ASL & ROL -carry  
0213 =                  rROL    db  $86,$04,$82,0   ; "
0217 =                  rROLc   db  $87,$05,$83,1   ;expected result ROL +carry
021b =                  rLSR                        ;expected result LSR & ROR -carry
021b =                  rROR    db  $61,$41,$20,0   ; "
021f =                  rRORc   db  $e1,$c1,$a0,$80 ;expected result ROR +carry
0223 =                  fASL                        ;expected flags for shifts
0223 =                  fROL    db  fnc,fc,fn,fz    ;no carry in
0227 =                  fROLc   db  fnc,fc,fn,0     ;carry in
022b =                  fLSR
022b =                  fROR    db  fc,0,fc,fz      ;no carry in
022f =                  fRORc   db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
0233 =                  rINC    db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
0238 =                  fINC    db  0,fn,fn,fz,0    ;expected flags for INC/DEC
                        ;logical memory operand
023d =                  absOR   db  0,$1f,$71,$80   ;test pattern for OR
0241 =                  absAN   db  $0f,$ff,$7f,$80 ;test pattern for AND
0245 =                  absEO   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
0249 =                  absORa  db  0,$f1,$1f,0     ;test pattern for OR
024d =                  absANa  db  $f0,$ff,$ff,$ff ;test pattern for AND
0251 =                  absEOa  db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
0255 =                  absrlo  db  0,$ff,$7f,$80
0259 =                  absflo  db  fz,fn,0,fn
025d =                  data_bss_end
                        ;define area for page crossing JMP (abs) & JMP (abs,x) test
02f9 =                  jxi_tab equ data_segment + $100 - 7     ;JMP (jxi_tab,x) x=6
02fd =                  ji_tab  equ data_segment + $100 - 3     ;JMP (ji_tab+2)
0300 =                  jxp_tab equ data_segment + $100         ;JMP (jxp_tab-255) x=255
                        
                        
                                code
1000 =                          org code_segment
1000 : d8               start   cld
1001 : a2ff                     ldx #$ff
1003 : 9a                       txs
1004 : a900                     lda #0          ;*** test 0 = initialize
1006 : 8d0202                   sta test_case
0000 =                  test_num = 0
                        
                        ;stop interrupts before initializing BSS
                            if I_flag = 1
                                sei
                            endif
                            
                        ;initialize I/O for report channel
                            if report = 1
1009 : 20fe3f                   jsr report_init
                            endif
                            
                        ;initialize BSS segment
                            if load_data_direct != 1
100c : a246                     ldx #zp_end-zp_init-1
100e : bd4741           ld_zp   lda zp_init,x
1011 : 9517                     sta zp_bss,x
1013 : ca                       dex
1014 : 10f8                     bpl ld_zp
1016 : a252                     ldx #data_end-data_init-1
1018 : bd8e41           ld_data lda data_init,x
101b : 9d0a02                   sta data_bss,x
101e : ca                       dex
101f : 10f7                     bpl ld_data
                              if ROM_vectors = 1
                                ldx #5
                        ld_vect lda vec_init,x
                                sta vec_bss,x
                                dex
                                bpl ld_vect
                              endif
                            endif
                        
                        ;retain status of interrupt flag
                            if I_flag = 2
                                php
                                pla
                                and #4          ;isolate flag
                                sta flag_I_on   ;or mask
                                eor #lo(~4)     ;reverse
                                sta flag_I_off  ;and mask
                            endif
                                
                        ;generate checksum for RAM integrity test
                            if ram_top > -1
                                lda #0 
                                sta zpt         ;set low byte of indirect pointer
                                sta ram_chksm+1 ;checksum high byte
                                ldx #11         ;reset modifiable RAM
                        gcs1    sta jxi_tab,x   ;JMP indirect page cross area
                                dex
                                bpl gcs1
                                sta chkdadi     ;self modifying code
                                sta chkdsbi
                                clc
                                ldx #zp_bss-zero_page ;zeropage - write test area
                        gcs3    adc zero_page,x
                                bcc gcs2
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs2    inx
                                bne gcs3
                                ldx #hi(data_segment) ;set high byte of indirect pointer
                                stx zpt+1
                                ldy #lo(data_bss) ;data after write test area
                        gcs5    adc (zpt),y
                                bcc gcs4
                                inc ram_chksm+1 ;carry to high byte
                                clc
                        gcs4    iny
                                bne gcs5
                                inx             ;advance RAM high address
                                stx zpt+1
                                cpx #ram_top
                                bne gcs5
                                sta ram_chksm   ;checksum complete
                            endif
                                next_test            
1021 : ad0202          >            lda test_case   ;previous test
1024 : c900            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1026 : f003            >        beq skip0002
                       >        trap            ;failed not equal (non zero)
1028 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
102b :                 >skip0002
                       >
0001 =                 >test_num = test_num + 1
102b : a901            >            lda #test_num   ;*** next tests' number
102d : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
1030 : 8d04ef            sta $ef04
1033 : 74657374696e67..  db "testing stack operations PHX PHY PLX PLY\n", 0
105d : a999                     lda #$99        ;protect a
105f : a2ff                     ldx #$ff        ;initialize stack
1061 : 9a                       txs
1062 : a255                     ldx #$55
1064 : da                       phx
1065 : a2aa                     ldx #$aa
1067 : da                       phx
1068 : ecfe01                   cpx $1fe        ;on stack ?
                                trap_ne
106b : f003            >        beq skip0004
                       >        trap            ;failed not equal (non zero)
106d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1070 :                 >skip0004
                        
1070 : ba                       tsx
1071 : e0fd                     cpx #$fd        ;sp decremented?
                                trap_ne
1073 : f003            >        beq skip0006
                       >        trap            ;failed not equal (non zero)
1075 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1078 :                 >skip0006
                        
1078 : 7a                       ply
1079 : c0aa                     cpy #$aa        ;successful retreived from stack?
                                trap_ne
107b : f003            >        beq skip0008
                       >        trap            ;failed not equal (non zero)
107d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1080 :                 >skip0008
                        
1080 : 7a                       ply
1081 : c055                     cpy #$55
                                trap_ne
1083 : f003            >        beq skip0010
                       >        trap            ;failed not equal (non zero)
1085 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1088 :                 >skip0010
                        
1088 : ccff01                   cpy $1ff        ;remains on stack?
                                trap_ne
108b : f003            >        beq skip0012
                       >        trap            ;failed not equal (non zero)
108d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1090 :                 >skip0012
                        
1090 : ba                       tsx
1091 : e0ff                     cpx #$ff        ;sp incremented?
                                trap_ne
1093 : f003            >        beq skip0014
                       >        trap            ;failed not equal (non zero)
1095 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1098 :                 >skip0014
                        
                                
1098 : a0a5                     ldy #$a5
109a : 5a                       phy
109b : a05a                     ldy #$5a
109d : 5a                       phy
109e : ccfe01                   cpy $1fe        ;on stack ?
                                trap_ne
10a1 : f003            >        beq skip0016
                       >        trap            ;failed not equal (non zero)
10a3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
10a6 :                 >skip0016
                        
10a6 : ba                       tsx
10a7 : e0fd                     cpx #$fd        ;sp decremented?
                                trap_ne
10a9 : f003            >        beq skip0018
                       >        trap            ;failed not equal (non zero)
10ab : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
10ae :                 >skip0018
                        
10ae : fa                       plx
10af : e05a                     cpx #$5a        ;successful retreived from stack?
                                trap_ne
10b1 : f003            >        beq skip0020
                       >        trap            ;failed not equal (non zero)
10b3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
10b6 :                 >skip0020
                        
10b6 : fa                       plx
10b7 : e0a5                     cpx #$a5
                                trap_ne
10b9 : f003            >        beq skip0022
                       >        trap            ;failed not equal (non zero)
10bb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
10be :                 >skip0022
                        
10be : ecff01                   cpx $1ff        ;remains on stack?
                                trap_ne
10c1 : f003            >        beq skip0024
                       >        trap            ;failed not equal (non zero)
10c3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
10c6 :                 >skip0024
                        
10c6 : ba                       tsx
10c7 : e0ff                     cpx #$ff        ;sp incremented?
                                trap_ne
10c9 : f003            >        beq skip0026
                       >        trap            ;failed not equal (non zero)
10cb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
10ce :                 >skip0026
                        
10ce : c999                     cmp #$99        ;unchanged?
                                trap_ne
10d0 : f003            >        beq skip0028
                       >        trap            ;failed not equal (non zero)
10d2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
10d5 :                 >skip0028
                        
                                next_test            
10d5 : ad0202          >            lda test_case   ;previous test
10d8 : c901            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
10da : f003            >        beq skip0031
                       >        trap            ;failed not equal (non zero)
10dc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
10df :                 >skip0031
                       >
0002 =                 >test_num = test_num + 1
10df : a902            >            lda #test_num   ;*** next tests' number
10e1 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
10e4 : 8d04ef            sta $ef04
10e7 : 74657374205048..  db "test PHX does not alter flags or X but PLX does", 10, 0
1118 : a0aa                     ldy #$aa        ;protect y
                                set_x 1,$ff     ;push
                       >            load_flag $ff     
111a : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
111c : 48              >            pha         ;use stack to load status
111d : a201            >            ldx #1     ;precharge index x
111f : 28              >            plp
                        
1120 : da                       phx
                                tst_x 1,$ff
1121 : 08              >            php         ;save flags
1122 : 08              >            php
1123 : e001            >            cpx #1     ;test result
                       >            trap_ne
1125 : f003            >        beq skip0036
                       >        trap            ;failed not equal (non zero)
1127 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
112a :                 >skip0036
                       >
112a : 68              >            pla         ;load status
                       >            cmp_flag $ff
112b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
112d : f003            >        beq skip0039
                       >        trap            ;failed not equal (non zero)
112f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1132 :                 >skip0039
                       >
1132 : 28              >            plp         ;restore status
                        
                                set_x 0,0
                       >            load_flag 0
1133 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1135 : 48              >            pha         ;use stack to load status
1136 : a200            >            ldx #0     ;precharge index x
1138 : 28              >            plp
                        
1139 : da                       phx
                                tst_x 0,0
113a : 08              >            php         ;save flags
113b : 08              >            php
113c : e000            >            cpx #0     ;test result
                       >            trap_ne
113e : f003            >        beq skip0044
                       >        trap            ;failed not equal (non zero)
1140 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1143 :                 >skip0044
                       >
1143 : 68              >            pla         ;load status
                       >            cmp_flag 0
1144 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1146 : f003            >        beq skip0047
                       >        trap            ;failed not equal (non zero)
1148 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
114b :                 >skip0047
                       >
114b : 28              >            plp         ;restore status
                        
                                set_x $ff,$ff
                       >            load_flag $ff
114c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
114e : 48              >            pha         ;use stack to load status
114f : a2ff            >            ldx #$ff     ;precharge index x
1151 : 28              >            plp
                        
1152 : da                       phx
                                tst_x $ff,$ff
1153 : 08              >            php         ;save flags
1154 : 08              >            php
1155 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
1157 : f003            >        beq skip0052
                       >        trap            ;failed not equal (non zero)
1159 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
115c :                 >skip0052
                       >
115c : 68              >            pla         ;load status
                       >            cmp_flag $ff
115d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
115f : f003            >        beq skip0055
                       >        trap            ;failed not equal (non zero)
1161 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1164 :                 >skip0055
                       >
1164 : 28              >            plp         ;restore status
                        
                                set_x 1,0
                       >            load_flag 0
1165 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1167 : 48              >            pha         ;use stack to load status
1168 : a201            >            ldx #1     ;precharge index x
116a : 28              >            plp
                        
116b : da                       phx
                                tst_x 1,0
116c : 08              >            php         ;save flags
116d : 08              >            php
116e : e001            >            cpx #1     ;test result
                       >            trap_ne
1170 : f003            >        beq skip0060
                       >        trap            ;failed not equal (non zero)
1172 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1175 :                 >skip0060
                       >
1175 : 68              >            pla         ;load status
                       >            cmp_flag 0
1176 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1178 : f003            >        beq skip0063
                       >        trap            ;failed not equal (non zero)
117a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
117d :                 >skip0063
                       >
117d : 28              >            plp         ;restore status
                        
                                set_x 0,$ff
                       >            load_flag $ff
117e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1180 : 48              >            pha         ;use stack to load status
1181 : a200            >            ldx #0     ;precharge index x
1183 : 28              >            plp
                        
1184 : da                       phx
                                tst_x 0,$ff
1185 : 08              >            php         ;save flags
1186 : 08              >            php
1187 : e000            >            cpx #0     ;test result
                       >            trap_ne
1189 : f003            >        beq skip0068
                       >        trap            ;failed not equal (non zero)
118b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
118e :                 >skip0068
                       >
118e : 68              >            pla         ;load status
                       >            cmp_flag $ff
118f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1191 : f003            >        beq skip0071
                       >        trap            ;failed not equal (non zero)
1193 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1196 :                 >skip0071
                       >
1196 : 28              >            plp         ;restore status
                        
                                set_x $ff,0
                       >            load_flag 0
1197 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1199 : 48              >            pha         ;use stack to load status
119a : a2ff            >            ldx #$ff     ;precharge index x
119c : 28              >            plp
                        
119d : da                       phx
                                tst_x $ff,0
119e : 08              >            php         ;save flags
119f : 08              >            php
11a0 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
11a2 : f003            >        beq skip0076
                       >        trap            ;failed not equal (non zero)
11a4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11a7 :                 >skip0076
                       >
11a7 : 68              >            pla         ;load status
                       >            cmp_flag 0
11a8 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
11aa : f003            >        beq skip0079
                       >        trap            ;failed not equal (non zero)
11ac : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11af :                 >skip0079
                       >
11af : 28              >            plp         ;restore status
                        
                                set_x 0,$ff     ;pull
                       >            load_flag $ff     
11b0 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
11b2 : 48              >            pha         ;use stack to load status
11b3 : a200            >            ldx #0     ;precharge index x
11b5 : 28              >            plp
                        
11b6 : fa                       plx
                                tst_x $ff,$ff-zero
11b7 : 08              >            php         ;save flags
11b8 : 08              >            php
11b9 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
11bb : f003            >        beq skip0084
                       >        trap            ;failed not equal (non zero)
11bd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11c0 :                 >skip0084
                       >
11c0 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
11c1 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
11c3 : f003            >        beq skip0087
                       >        trap            ;failed not equal (non zero)
11c5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11c8 :                 >skip0087
                       >
11c8 : 28              >            plp         ;restore status
                        
                                set_x $ff,0
                       >            load_flag 0
11c9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
11cb : 48              >            pha         ;use stack to load status
11cc : a2ff            >            ldx #$ff     ;precharge index x
11ce : 28              >            plp
                        
11cf : fa                       plx
                                tst_x 0,zero
11d0 : 08              >            php         ;save flags
11d1 : 08              >            php
11d2 : e000            >            cpx #0     ;test result
                       >            trap_ne
11d4 : f003            >        beq skip0092
                       >        trap            ;failed not equal (non zero)
11d6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11d9 :                 >skip0092
                       >
11d9 : 68              >            pla         ;load status
                       >            cmp_flag zero
11da : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
11dc : f003            >        beq skip0095
                       >        trap            ;failed not equal (non zero)
11de : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11e1 :                 >skip0095
                       >
11e1 : 28              >            plp         ;restore status
                        
                                set_x $fe,$ff
                       >            load_flag $ff
11e2 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
11e4 : 48              >            pha         ;use stack to load status
11e5 : a2fe            >            ldx #$fe     ;precharge index x
11e7 : 28              >            plp
                        
11e8 : fa                       plx
                                tst_x 1,$ff-zero-minus
11e9 : 08              >            php         ;save flags
11ea : 08              >            php
11eb : e001            >            cpx #1     ;test result
                       >            trap_ne
11ed : f003            >        beq skip0100
                       >        trap            ;failed not equal (non zero)
11ef : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11f2 :                 >skip0100
                       >
11f2 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero-minus
11f3 : c97d            >            cmp #($ff-zero-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
11f5 : f003            >        beq skip0103
                       >        trap            ;failed not equal (non zero)
11f7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
11fa :                 >skip0103
                       >
11fa : 28              >            plp         ;restore status
                        
                                set_x 0,0
                       >            load_flag 0
11fb : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
11fd : 48              >            pha         ;use stack to load status
11fe : a200            >            ldx #0     ;precharge index x
1200 : 28              >            plp
                        
1201 : fa                       plx
                                tst_x $ff,minus
1202 : 08              >            php         ;save flags
1203 : 08              >            php
1204 : e0ff            >            cpx #$ff     ;test result
                       >            trap_ne
1206 : f003            >        beq skip0108
                       >        trap            ;failed not equal (non zero)
1208 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
120b :                 >skip0108
                       >
120b : 68              >            pla         ;load status
                       >            cmp_flag minus
120c : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
120e : f003            >        beq skip0111
                       >        trap            ;failed not equal (non zero)
1210 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1213 :                 >skip0111
                       >
1213 : 28              >            plp         ;restore status
                        
                                set_x $ff,$ff
                       >            load_flag $ff
1214 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1216 : 48              >            pha         ;use stack to load status
1217 : a2ff            >            ldx #$ff     ;precharge index x
1219 : 28              >            plp
                        
121a : fa                       plx
                                tst_x 0,$ff-minus
121b : 08              >            php         ;save flags
121c : 08              >            php
121d : e000            >            cpx #0     ;test result
                       >            trap_ne
121f : f003            >        beq skip0116
                       >        trap            ;failed not equal (non zero)
1221 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1224 :                 >skip0116
                       >
1224 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
1225 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1227 : f003            >        beq skip0119
                       >        trap            ;failed not equal (non zero)
1229 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
122c :                 >skip0119
                       >
122c : 28              >            plp         ;restore status
                        
                                set_x $fe,0
                       >            load_flag 0
122d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
122f : 48              >            pha         ;use stack to load status
1230 : a2fe            >            ldx #$fe     ;precharge index x
1232 : 28              >            plp
                        
1233 : fa                       plx
                                tst_x 1,0
1234 : 08              >            php         ;save flags
1235 : 08              >            php
1236 : e001            >            cpx #1     ;test result
                       >            trap_ne
1238 : f003            >        beq skip0124
                       >        trap            ;failed not equal (non zero)
123a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
123d :                 >skip0124
                       >
123d : 68              >            pla         ;load status
                       >            cmp_flag 0
123e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1240 : f003            >        beq skip0127
                       >        trap            ;failed not equal (non zero)
1242 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1245 :                 >skip0127
                       >
1245 : 28              >            plp         ;restore status
                        
1246 : c0aa                     cpy #$aa        ;Y unchanged
                                trap_ne
1248 : f003            >        beq skip0129
                       >        trap            ;failed not equal (non zero)
124a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
124d :                 >skip0129
                        
                                next_test            
124d : ad0202          >            lda test_case   ;previous test
1250 : c902            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1252 : f003            >        beq skip0132
                       >        trap            ;failed not equal (non zero)
1254 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1257 :                 >skip0132
                       >
0003 =                 >test_num = test_num + 1
1257 : a903            >            lda #test_num   ;*** next tests' number
1259 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                         
125c : 8d04ef            sta $ef04
125f : 74657374205048..  db "test PHY does not alter flags or Y but PLY does", 10, 0
1290 : a255                     ldx #$55        ;x & a protected
                                set_y 1,$ff     ;push
                       >            load_flag $ff     
1292 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
1294 : 48              >            pha         ;use stack to load status
1295 : a001            >            ldy #1     ;precharge index y
1297 : 28              >            plp
                        
1298 : 5a                       phy
                                tst_y 1,$ff
1299 : 08              >            php         ;save flags
129a : 08              >            php
129b : c001            >            cpy #1     ;test result
                       >            trap_ne
129d : f003            >        beq skip0137
                       >        trap            ;failed not equal (non zero)
129f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12a2 :                 >skip0137
                       >
12a2 : 68              >            pla         ;load status
                       >            cmp_flag $ff
12a3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
12a5 : f003            >        beq skip0140
                       >        trap            ;failed not equal (non zero)
12a7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12aa :                 >skip0140
                       >
12aa : 28              >            plp         ;restore status
                        
                                set_y 0,0
                       >            load_flag 0
12ab : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
12ad : 48              >            pha         ;use stack to load status
12ae : a000            >            ldy #0     ;precharge index y
12b0 : 28              >            plp
                        
12b1 : 5a                       phy
                                tst_y 0,0
12b2 : 08              >            php         ;save flags
12b3 : 08              >            php
12b4 : c000            >            cpy #0     ;test result
                       >            trap_ne
12b6 : f003            >        beq skip0145
                       >        trap            ;failed not equal (non zero)
12b8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12bb :                 >skip0145
                       >
12bb : 68              >            pla         ;load status
                       >            cmp_flag 0
12bc : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
12be : f003            >        beq skip0148
                       >        trap            ;failed not equal (non zero)
12c0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12c3 :                 >skip0148
                       >
12c3 : 28              >            plp         ;restore status
                        
                                set_y $ff,$ff
                       >            load_flag $ff
12c4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
12c6 : 48              >            pha         ;use stack to load status
12c7 : a0ff            >            ldy #$ff     ;precharge index y
12c9 : 28              >            plp
                        
12ca : 5a                       phy
                                tst_y $ff,$ff
12cb : 08              >            php         ;save flags
12cc : 08              >            php
12cd : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
12cf : f003            >        beq skip0153
                       >        trap            ;failed not equal (non zero)
12d1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12d4 :                 >skip0153
                       >
12d4 : 68              >            pla         ;load status
                       >            cmp_flag $ff
12d5 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
12d7 : f003            >        beq skip0156
                       >        trap            ;failed not equal (non zero)
12d9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12dc :                 >skip0156
                       >
12dc : 28              >            plp         ;restore status
                        
                                set_y 1,0
                       >            load_flag 0
12dd : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
12df : 48              >            pha         ;use stack to load status
12e0 : a001            >            ldy #1     ;precharge index y
12e2 : 28              >            plp
                        
12e3 : 5a                       phy
                                tst_y 1,0
12e4 : 08              >            php         ;save flags
12e5 : 08              >            php
12e6 : c001            >            cpy #1     ;test result
                       >            trap_ne
12e8 : f003            >        beq skip0161
                       >        trap            ;failed not equal (non zero)
12ea : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12ed :                 >skip0161
                       >
12ed : 68              >            pla         ;load status
                       >            cmp_flag 0
12ee : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
12f0 : f003            >        beq skip0164
                       >        trap            ;failed not equal (non zero)
12f2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
12f5 :                 >skip0164
                       >
12f5 : 28              >            plp         ;restore status
                        
                                set_y 0,$ff
                       >            load_flag $ff
12f6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
12f8 : 48              >            pha         ;use stack to load status
12f9 : a000            >            ldy #0     ;precharge index y
12fb : 28              >            plp
                        
12fc : 5a                       phy
                                tst_y 0,$ff
12fd : 08              >            php         ;save flags
12fe : 08              >            php
12ff : c000            >            cpy #0     ;test result
                       >            trap_ne
1301 : f003            >        beq skip0169
                       >        trap            ;failed not equal (non zero)
1303 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1306 :                 >skip0169
                       >
1306 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1307 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1309 : f003            >        beq skip0172
                       >        trap            ;failed not equal (non zero)
130b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
130e :                 >skip0172
                       >
130e : 28              >            plp         ;restore status
                        
                                set_y $ff,0
                       >            load_flag 0
130f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1311 : 48              >            pha         ;use stack to load status
1312 : a0ff            >            ldy #$ff     ;precharge index y
1314 : 28              >            plp
                        
1315 : 5a                       phy
                                tst_y $ff,0
1316 : 08              >            php         ;save flags
1317 : 08              >            php
1318 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
131a : f003            >        beq skip0177
                       >        trap            ;failed not equal (non zero)
131c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
131f :                 >skip0177
                       >
131f : 68              >            pla         ;load status
                       >            cmp_flag 0
1320 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1322 : f003            >        beq skip0180
                       >        trap            ;failed not equal (non zero)
1324 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1327 :                 >skip0180
                       >
1327 : 28              >            plp         ;restore status
                        
                                set_y 0,$ff     ;pull
                       >            load_flag $ff     
1328 : a9ff            >            lda #$ff                  ;allow test to change I-flag (no mask)
                       >
132a : 48              >            pha         ;use stack to load status
132b : a000            >            ldy #0     ;precharge index y
132d : 28              >            plp
                        
132e : 7a                       ply
                                tst_y $ff,$ff-zero
132f : 08              >            php         ;save flags
1330 : 08              >            php
1331 : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
1333 : f003            >        beq skip0185
                       >        trap            ;failed not equal (non zero)
1335 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1338 :                 >skip0185
                       >
1338 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
1339 : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
133b : f003            >        beq skip0188
                       >        trap            ;failed not equal (non zero)
133d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1340 :                 >skip0188
                       >
1340 : 28              >            plp         ;restore status
                        
                                set_y $ff,0
                       >            load_flag 0
1341 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1343 : 48              >            pha         ;use stack to load status
1344 : a0ff            >            ldy #$ff     ;precharge index y
1346 : 28              >            plp
                        
1347 : 7a                       ply
                                tst_y 0,zero
1348 : 08              >            php         ;save flags
1349 : 08              >            php
134a : c000            >            cpy #0     ;test result
                       >            trap_ne
134c : f003            >        beq skip0193
                       >        trap            ;failed not equal (non zero)
134e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1351 :                 >skip0193
                       >
1351 : 68              >            pla         ;load status
                       >            cmp_flag zero
1352 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1354 : f003            >        beq skip0196
                       >        trap            ;failed not equal (non zero)
1356 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1359 :                 >skip0196
                       >
1359 : 28              >            plp         ;restore status
                        
                                set_y $fe,$ff
                       >            load_flag $ff
135a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
135c : 48              >            pha         ;use stack to load status
135d : a0fe            >            ldy #$fe     ;precharge index y
135f : 28              >            plp
                        
1360 : 7a                       ply
                                tst_y 1,$ff-zero-minus
1361 : 08              >            php         ;save flags
1362 : 08              >            php
1363 : c001            >            cpy #1     ;test result
                       >            trap_ne
1365 : f003            >        beq skip0201
                       >        trap            ;failed not equal (non zero)
1367 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
136a :                 >skip0201
                       >
136a : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero-minus
136b : c97d            >            cmp #($ff-zero-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
136d : f003            >        beq skip0204
                       >        trap            ;failed not equal (non zero)
136f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1372 :                 >skip0204
                       >
1372 : 28              >            plp         ;restore status
                        
                                set_y 0,0
                       >            load_flag 0
1373 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1375 : 48              >            pha         ;use stack to load status
1376 : a000            >            ldy #0     ;precharge index y
1378 : 28              >            plp
                        
1379 : 7a                       ply
                                tst_y $ff,minus
137a : 08              >            php         ;save flags
137b : 08              >            php
137c : c0ff            >            cpy #$ff     ;test result
                       >            trap_ne
137e : f003            >        beq skip0209
                       >        trap            ;failed not equal (non zero)
1380 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1383 :                 >skip0209
                       >
1383 : 68              >            pla         ;load status
                       >            cmp_flag minus
1384 : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1386 : f003            >        beq skip0212
                       >        trap            ;failed not equal (non zero)
1388 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
138b :                 >skip0212
                       >
138b : 28              >            plp         ;restore status
                        
                                set_y $ff,$ff
                       >            load_flag $ff
138c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
138e : 48              >            pha         ;use stack to load status
138f : a0ff            >            ldy #$ff     ;precharge index y
1391 : 28              >            plp
                        
1392 : 7a                       ply
                                tst_y 0,$ff-minus
1393 : 08              >            php         ;save flags
1394 : 08              >            php
1395 : c000            >            cpy #0     ;test result
                       >            trap_ne
1397 : f003            >        beq skip0217
                       >        trap            ;failed not equal (non zero)
1399 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
139c :                 >skip0217
                       >
139c : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
139d : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
139f : f003            >        beq skip0220
                       >        trap            ;failed not equal (non zero)
13a1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
13a4 :                 >skip0220
                       >
13a4 : 28              >            plp         ;restore status
                        
                                set_y $fe,0
                       >            load_flag 0
13a5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
13a7 : 48              >            pha         ;use stack to load status
13a8 : a0fe            >            ldy #$fe     ;precharge index y
13aa : 28              >            plp
                        
13ab : 7a                       ply
                                tst_y 1,0
13ac : 08              >            php         ;save flags
13ad : 08              >            php
13ae : c001            >            cpy #1     ;test result
                       >            trap_ne
13b0 : f003            >        beq skip0225
                       >        trap            ;failed not equal (non zero)
13b2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
13b5 :                 >skip0225
                       >
13b5 : 68              >            pla         ;load status
                       >            cmp_flag 0
13b6 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
13b8 : f003            >        beq skip0228
                       >        trap            ;failed not equal (non zero)
13ba : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
13bd :                 >skip0228
                       >
13bd : 28              >            plp         ;restore status
                        
13be : e055                     cpx #$55        ;x unchanged?
                                trap_ne
13c0 : f003            >        beq skip0230
                       >        trap            ;failed not equal (non zero)
13c2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
13c5 :                 >skip0230
                        
                                next_test            
13c5 : ad0202          >            lda test_case   ;previous test
13c8 : c903            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
13ca : f003            >        beq skip0233
                       >        trap            ;failed not equal (non zero)
13cc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
13cf :                 >skip0233
                       >
0004 =                 >test_num = test_num + 1
13cf : a904            >            lda #test_num   ;*** next tests' number
13d1 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                         
13d4 : 8d04ef            sta $ef04
13d7 : 5043206d6f6469..  db "PC modifying instructions (BRA, BBR, BBS, 1, 2, 3 byte NOPs, JMP(abs,x))", 10, 0
1421 : 8d04ef            sta $ef04
1424 : 74657374696e67..  db "testing unconditional branch BRA", 10, 0
                        
1446 : a281                     ldx #$81        ;protect unused registers
1448 : a07e                     ldy #$7e
                                set_a 0,$ff
                       >            load_flag $ff
144a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
144c : 48              >            pha         ;use stack to load status
144d : a900            >            lda #0     ;precharge accu
144f : 28              >            plp
                        
1450 : 8003                     bra br1         ;branch should always be taken
                                trap 
1452 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1455 :                  br1
                                tst_a 0,$ff
1455 : 08              >            php         ;save flags
1456 : 08              >            php
1457 : c900            >            cmp #0     ;test result
                       >            trap_ne
1459 : f003            >        beq skip0239
                       >        trap            ;failed not equal (non zero)
145b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
145e :                 >skip0239
                       >
145e : 68              >            pla         ;load status
                       >            cmp_flag $ff
145f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1461 : f003            >        beq skip0242
                       >        trap            ;failed not equal (non zero)
1463 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1466 :                 >skip0242
                       >
1466 : 28              >            plp         ;restore status
                        
                                set_a $ff,0
                       >            load_flag 0
1467 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1469 : 48              >            pha         ;use stack to load status
146a : a9ff            >            lda #$ff     ;precharge accu
146c : 28              >            plp
                        
146d : 8003                     bra br2         ;branch should always be taken
                                trap 
146f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
1472 :                  br2
                                tst_a $ff,0
1472 : 08              >            php         ;save flags
1473 : 08              >            php
1474 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
1476 : f003            >        beq skip0248
                       >        trap            ;failed not equal (non zero)
1478 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
147b :                 >skip0248
                       >
147b : 68              >            pla         ;load status
                       >            cmp_flag 0
147c : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
147e : f003            >        beq skip0251
                       >        trap            ;failed not equal (non zero)
1480 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1483 :                 >skip0251
                       >
1483 : 28              >            plp         ;restore status
                        
1484 : e081                     cpx #$81
                                trap_ne
1486 : f003            >        beq skip0253
                       >        trap            ;failed not equal (non zero)
1488 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
148b :                 >skip0253
                        
148b : c07e                     cpy #$7e
                                trap_ne
148d : f003            >        beq skip0255
                       >        trap            ;failed not equal (non zero)
148f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1492 :                 >skip0255
                        
                                next_test            
1492 : ad0202          >            lda test_case   ;previous test
1495 : c904            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1497 : f003            >        beq skip0258
                       >        trap            ;failed not equal (non zero)
1499 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
149c :                 >skip0258
                       >
0005 =                 >test_num = test_num + 1
149c : a905            >            lda #test_num   ;*** next tests' number
149e : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
14a1 : a000                     ldy #0          ;branch range test  
14a3 : 8076                     bra bra0
                                
14a5 : c001             bra1    cpy #1
                                trap_ne         ;long range backward
14a7 : f003            >        beq skip0260
                       >        trap            ;failed not equal (non zero)
14a9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14ac :                 >skip0260
                        
14ac : c8                       iny        
14ad : 8062                     bra bra2
                                        
14af : c003             bra3    cpy #3
                                trap_ne         ;long range backward
14b1 : f003            >        beq skip0262
                       >        trap            ;failed not equal (non zero)
14b3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14b6 :                 >skip0262
                        
14b6 : c8                       iny        
14b7 : 804e                     bra bra4
                                        
14b9 : c005             bra5    cpy #5
                                trap_ne         ;long range backward
14bb : f003            >        beq skip0264
                       >        trap            ;failed not equal (non zero)
14bd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14c0 :                 >skip0264
                        
14c0 : c8                       iny        
14c1 : a000                     ldy #0
14c3 : 8004                     bra brf0
                                
14c5 : c8                       iny
14c6 : c8                       iny
14c7 : c8                       iny
14c8 : c8                       iny        
14c9 : 8003             brf0    bra brf1
                        
14cb : c8                       iny
14cc : c8                       iny
14cd : c8                       iny
14ce : c8               brf1    iny        
14cf : 8002                     bra brf2
                                
14d1 : c8                       iny
14d2 : c8                       iny
14d3 : c8               brf2    iny
14d4 : c8                       iny        
14d5 : 8001                     bra brf3
                                
14d7 : c8                       iny
14d8 : c8               brf3    iny
14d9 : c8                       iny
14da : c8                       iny        
14db : 8000                     bra brf4
                                
14dd : c8               brf4    iny
14de : c8                       iny
14df : c8                       iny
14e0 : c8                       iny
14e1 : c00a                     cpy #10
                                trap_ne     ;short range forward
14e3 : f003            >        beq skip0266
                       >        trap            ;failed not equal (non zero)
14e5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
14e8 :                 >skip0266
                        
14e8 : 8012                     bra brb0
                        
14ea : 88               brb4    dey
14eb : 88                       dey
14ec : 88                       dey
14ed : 88                       dey
14ee : 800e                     bra brb5        
                        
14f0 : 88               brb3    dey
14f1 : 88                       dey
14f2 : 88                       dey
14f3 : 80f5                     bra brb4        
                        
14f5 : 88               brb2    dey
14f6 : 88                       dey
14f7 : 80f7                     bra brb3        
                        
14f9 : 88               brb1    dey
14fa : 80f9                     bra brb2        
                        
14fc : 80fb             brb0    bra brb1        
                        
14fe : c000             brb5    cpy #0
                                trap_ne     ;short range backward
1500 : f003            >        beq skip0268
                       >        trap            ;failed not equal (non zero)
1502 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1505 :                 >skip0268
                        
1505 : 801e                     bra bra6
                        
1507 : c004             bra4    cpy #4
                                trap_ne     ;long range forward
1509 : f003            >        beq skip0270
                       >        trap            ;failed not equal (non zero)
150b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
150e :                 >skip0270
                        
150e : c8                       iny        
150f : 80a8                     bra bra5
                                        
1511 : c002             bra2    cpy #2
                                trap_ne     ;long range forward
1513 : f003            >        beq skip0272
                       >        trap            ;failed not equal (non zero)
1515 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1518 :                 >skip0272
                        
1518 : c8                       iny        
1519 : 8094                     bra bra3
                                        
151b : c000             bra0    cpy #0
                                trap_ne     ;long range forward
151d : f003            >        beq skip0274
                       >        trap            ;failed not equal (non zero)
151f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1522 :                 >skip0274
                        
1522 : c8                       iny        
1523 : 8080                     bra bra1
                                        
1525 :                  bra6
                                next_test
1525 : ad0202          >            lda test_case   ;previous test
1528 : c905            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
152a : f003            >        beq skip0277
                       >        trap            ;failed not equal (non zero)
152c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
152f :                 >skip0277
                       >
0006 =                 >test_num = test_num + 1
152f : a906            >            lda #test_num   ;*** next tests' number
1531 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                            if rkwl_wdc_op = 1
1534 : 8d04ef            sta $ef04
1537 : 74657374696e67..  db "testing BBR & BBS", 10, 0
                        
                        bbt     macro           ;\1 = bitnum
                                lda #(1<<\1)    ;testing 1 bit on
                                sta zpt
                                set_a $33,0     ;with flags off
                                bbr \1,zpt,fail1\?
                                bbs \1,zpt,ok1\?
                                trap            ;bbs branch not taken
                        fail1\?
                                trap            ;bbr branch taken
                        ok1\?   
                                tst_a $33,0
                                set_a $cc,$ff   ;with flags on
                                bbr \1,zpt,fail2\?
                                bbs \1,zpt,ok2\?
                                trap            ;bbs branch not taken
                        fail2\? 
                                trap            ;bbr branch taken
                        ok2\?   
                                tst_a $cc,$ff
                                lda zpt
                                cmp #(1<<\1)
                                trap_ne         ;zp altered
                                lda #$ff-(1<<\1) ;testing 1 bit off
                                sta zpt
                                set_a $33,0     ;with flags off
                                bbs \1,zpt,fail3\?
                                bbr \1,zpt,ok3\?
                                trap            ;bbr branch not taken
                        fail3\? 
                                trap            ;bbs branch taken
                        ok3\?   
                                tst_a $33,0
                                set_a $cc,$ff   ;with flags on
                                bbs \1,zpt,fail4\?
                                bbr \1,zpt,ok4\?
                                trap            ;bbr branch not taken
                        fail4\? 
                                trap            ;bbs branch taken
                        ok4\?   
                                tst_a $cc,$ff
                                lda zpt
                                cmp #$ff-(1<<\1)
                                trap_ne         ;zp altered
                                endm
                        
154a : a211                     ldx #$11        ;test bbr/bbs integrity
154c : a022                     ldy #$22
                                bbt 0
154e : a901            >        lda #(1<<0)    ;testing 1 bit on
1550 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1552 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1554 : 48              >            pha         ;use stack to load status
1555 : a933            >            lda #$33     ;precharge accu
1557 : 28              >            plp
                       >
1558 : 0f1006          >        bbr 0,zpt,fail10279
155b : 8f1006          >        bbs 0,zpt,ok10279
                       >        trap            ;bbs branch not taken
155e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1561 :                 >fail10279
                       >        trap            ;bbr branch taken
1561 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1564 :                 >ok10279   
                       >        tst_a $33,0
1564 : 08              >            php         ;save flags
1565 : 08              >            php
1566 : c933            >            cmp #$33     ;test result
                       >            trap_ne
1568 : f003            >        beq skip0285
                       >        trap            ;failed not equal (non zero)
156a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
156d :                 >skip0285
                       >
156d : 68              >            pla         ;load status
                       >            cmp_flag 0
156e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1570 : f003            >        beq skip0288
                       >        trap            ;failed not equal (non zero)
1572 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1575 :                 >skip0288
                       >
1575 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1576 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1578 : 48              >            pha         ;use stack to load status
1579 : a9cc            >            lda #$cc     ;precharge accu
157b : 28              >            plp
                       >
157c : 0f1006          >        bbr 0,zpt,fail20279
157f : 8f1006          >        bbs 0,zpt,ok20279
                       >        trap            ;bbs branch not taken
1582 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1585 :                 >fail20279 
                       >        trap            ;bbr branch taken
1585 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1588 :                 >ok20279   
                       >        tst_a $cc,$ff
1588 : 08              >            php         ;save flags
1589 : 08              >            php
158a : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
158c : f003            >        beq skip0295
                       >        trap            ;failed not equal (non zero)
158e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1591 :                 >skip0295
                       >
1591 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1592 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1594 : f003            >        beq skip0298
                       >        trap            ;failed not equal (non zero)
1596 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1599 :                 >skip0298
                       >
1599 : 28              >            plp         ;restore status
                       >
159a : a510            >        lda zpt
159c : c901            >        cmp #(1<<0)
                       >        trap_ne         ;zp altered
159e : f003            >        beq skip0300
                       >        trap            ;failed not equal (non zero)
15a0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15a3 :                 >skip0300
                       >
15a3 : a9fe            >        lda #$ff-(1<<0) ;testing 1 bit off
15a5 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
15a7 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
15a9 : 48              >            pha         ;use stack to load status
15aa : a933            >            lda #$33     ;precharge accu
15ac : 28              >            plp
                       >
15ad : 8f1006          >        bbs 0,zpt,fail30279
15b0 : 0f1006          >        bbr 0,zpt,ok30279
                       >        trap            ;bbr branch not taken
15b3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15b6 :                 >fail30279 
                       >        trap            ;bbs branch taken
15b6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15b9 :                 >ok30279   
                       >        tst_a $33,0
15b9 : 08              >            php         ;save flags
15ba : 08              >            php
15bb : c933            >            cmp #$33     ;test result
                       >            trap_ne
15bd : f003            >        beq skip0307
                       >        trap            ;failed not equal (non zero)
15bf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15c2 :                 >skip0307
                       >
15c2 : 68              >            pla         ;load status
                       >            cmp_flag 0
15c3 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
15c5 : f003            >        beq skip0310
                       >        trap            ;failed not equal (non zero)
15c7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15ca :                 >skip0310
                       >
15ca : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
15cb : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
15cd : 48              >            pha         ;use stack to load status
15ce : a9cc            >            lda #$cc     ;precharge accu
15d0 : 28              >            plp
                       >
15d1 : 8f1006          >        bbs 0,zpt,fail40279
15d4 : 0f1006          >        bbr 0,zpt,ok40279
                       >        trap            ;bbr branch not taken
15d7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15da :                 >fail40279 
                       >        trap            ;bbs branch taken
15da : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15dd :                 >ok40279   
                       >        tst_a $cc,$ff
15dd : 08              >            php         ;save flags
15de : 08              >            php
15df : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
15e1 : f003            >        beq skip0317
                       >        trap            ;failed not equal (non zero)
15e3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15e6 :                 >skip0317
                       >
15e6 : 68              >            pla         ;load status
                       >            cmp_flag $ff
15e7 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
15e9 : f003            >        beq skip0320
                       >        trap            ;failed not equal (non zero)
15eb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15ee :                 >skip0320
                       >
15ee : 28              >            plp         ;restore status
                       >
15ef : a510            >        lda zpt
15f1 : c9fe            >        cmp #$ff-(1<<0)
                       >        trap_ne         ;zp altered
15f3 : f003            >        beq skip0322
                       >        trap            ;failed not equal (non zero)
15f5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
15f8 :                 >skip0322
                       >
                        
                                bbt 1
15f8 : a902            >        lda #(1<<1)    ;testing 1 bit on
15fa : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
15fc : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
15fe : 48              >            pha         ;use stack to load status
15ff : a933            >            lda #$33     ;precharge accu
1601 : 28              >            plp
                       >
1602 : 1f1006          >        bbr 1,zpt,fail10324
1605 : 9f1006          >        bbs 1,zpt,ok10324
                       >        trap            ;bbs branch not taken
1608 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
160b :                 >fail10324
                       >        trap            ;bbr branch taken
160b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
160e :                 >ok10324   
                       >        tst_a $33,0
160e : 08              >            php         ;save flags
160f : 08              >            php
1610 : c933            >            cmp #$33     ;test result
                       >            trap_ne
1612 : f003            >        beq skip0330
                       >        trap            ;failed not equal (non zero)
1614 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1617 :                 >skip0330
                       >
1617 : 68              >            pla         ;load status
                       >            cmp_flag 0
1618 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
161a : f003            >        beq skip0333
                       >        trap            ;failed not equal (non zero)
161c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
161f :                 >skip0333
                       >
161f : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1620 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1622 : 48              >            pha         ;use stack to load status
1623 : a9cc            >            lda #$cc     ;precharge accu
1625 : 28              >            plp
                       >
1626 : 1f1006          >        bbr 1,zpt,fail20324
1629 : 9f1006          >        bbs 1,zpt,ok20324
                       >        trap            ;bbs branch not taken
162c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
162f :                 >fail20324 
                       >        trap            ;bbr branch taken
162f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1632 :                 >ok20324   
                       >        tst_a $cc,$ff
1632 : 08              >            php         ;save flags
1633 : 08              >            php
1634 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1636 : f003            >        beq skip0340
                       >        trap            ;failed not equal (non zero)
1638 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
163b :                 >skip0340
                       >
163b : 68              >            pla         ;load status
                       >            cmp_flag $ff
163c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
163e : f003            >        beq skip0343
                       >        trap            ;failed not equal (non zero)
1640 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1643 :                 >skip0343
                       >
1643 : 28              >            plp         ;restore status
                       >
1644 : a510            >        lda zpt
1646 : c902            >        cmp #(1<<1)
                       >        trap_ne         ;zp altered
1648 : f003            >        beq skip0345
                       >        trap            ;failed not equal (non zero)
164a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
164d :                 >skip0345
                       >
164d : a9fd            >        lda #$ff-(1<<1) ;testing 1 bit off
164f : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1651 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1653 : 48              >            pha         ;use stack to load status
1654 : a933            >            lda #$33     ;precharge accu
1656 : 28              >            plp
                       >
1657 : 9f1006          >        bbs 1,zpt,fail30324
165a : 1f1006          >        bbr 1,zpt,ok30324
                       >        trap            ;bbr branch not taken
165d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1660 :                 >fail30324 
                       >        trap            ;bbs branch taken
1660 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1663 :                 >ok30324   
                       >        tst_a $33,0
1663 : 08              >            php         ;save flags
1664 : 08              >            php
1665 : c933            >            cmp #$33     ;test result
                       >            trap_ne
1667 : f003            >        beq skip0352
                       >        trap            ;failed not equal (non zero)
1669 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
166c :                 >skip0352
                       >
166c : 68              >            pla         ;load status
                       >            cmp_flag 0
166d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
166f : f003            >        beq skip0355
                       >        trap            ;failed not equal (non zero)
1671 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1674 :                 >skip0355
                       >
1674 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1675 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1677 : 48              >            pha         ;use stack to load status
1678 : a9cc            >            lda #$cc     ;precharge accu
167a : 28              >            plp
                       >
167b : 9f1006          >        bbs 1,zpt,fail40324
167e : 1f1006          >        bbr 1,zpt,ok40324
                       >        trap            ;bbr branch not taken
1681 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1684 :                 >fail40324 
                       >        trap            ;bbs branch taken
1684 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1687 :                 >ok40324   
                       >        tst_a $cc,$ff
1687 : 08              >            php         ;save flags
1688 : 08              >            php
1689 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
168b : f003            >        beq skip0362
                       >        trap            ;failed not equal (non zero)
168d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1690 :                 >skip0362
                       >
1690 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1691 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1693 : f003            >        beq skip0365
                       >        trap            ;failed not equal (non zero)
1695 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1698 :                 >skip0365
                       >
1698 : 28              >            plp         ;restore status
                       >
1699 : a510            >        lda zpt
169b : c9fd            >        cmp #$ff-(1<<1)
                       >        trap_ne         ;zp altered
169d : f003            >        beq skip0367
                       >        trap            ;failed not equal (non zero)
169f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16a2 :                 >skip0367
                       >
                        
                                bbt 2
16a2 : a904            >        lda #(1<<2)    ;testing 1 bit on
16a4 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
16a6 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
16a8 : 48              >            pha         ;use stack to load status
16a9 : a933            >            lda #$33     ;precharge accu
16ab : 28              >            plp
                       >
16ac : 2f1006          >        bbr 2,zpt,fail10369
16af : af1006          >        bbs 2,zpt,ok10369
                       >        trap            ;bbs branch not taken
16b2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16b5 :                 >fail10369
                       >        trap            ;bbr branch taken
16b5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16b8 :                 >ok10369   
                       >        tst_a $33,0
16b8 : 08              >            php         ;save flags
16b9 : 08              >            php
16ba : c933            >            cmp #$33     ;test result
                       >            trap_ne
16bc : f003            >        beq skip0375
                       >        trap            ;failed not equal (non zero)
16be : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16c1 :                 >skip0375
                       >
16c1 : 68              >            pla         ;load status
                       >            cmp_flag 0
16c2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
16c4 : f003            >        beq skip0378
                       >        trap            ;failed not equal (non zero)
16c6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16c9 :                 >skip0378
                       >
16c9 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
16ca : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
16cc : 48              >            pha         ;use stack to load status
16cd : a9cc            >            lda #$cc     ;precharge accu
16cf : 28              >            plp
                       >
16d0 : 2f1006          >        bbr 2,zpt,fail20369
16d3 : af1006          >        bbs 2,zpt,ok20369
                       >        trap            ;bbs branch not taken
16d6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16d9 :                 >fail20369 
                       >        trap            ;bbr branch taken
16d9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16dc :                 >ok20369   
                       >        tst_a $cc,$ff
16dc : 08              >            php         ;save flags
16dd : 08              >            php
16de : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
16e0 : f003            >        beq skip0385
                       >        trap            ;failed not equal (non zero)
16e2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16e5 :                 >skip0385
                       >
16e5 : 68              >            pla         ;load status
                       >            cmp_flag $ff
16e6 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
16e8 : f003            >        beq skip0388
                       >        trap            ;failed not equal (non zero)
16ea : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16ed :                 >skip0388
                       >
16ed : 28              >            plp         ;restore status
                       >
16ee : a510            >        lda zpt
16f0 : c904            >        cmp #(1<<2)
                       >        trap_ne         ;zp altered
16f2 : f003            >        beq skip0390
                       >        trap            ;failed not equal (non zero)
16f4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
16f7 :                 >skip0390
                       >
16f7 : a9fb            >        lda #$ff-(1<<2) ;testing 1 bit off
16f9 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
16fb : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
16fd : 48              >            pha         ;use stack to load status
16fe : a933            >            lda #$33     ;precharge accu
1700 : 28              >            plp
                       >
1701 : af1006          >        bbs 2,zpt,fail30369
1704 : 2f1006          >        bbr 2,zpt,ok30369
                       >        trap            ;bbr branch not taken
1707 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
170a :                 >fail30369 
                       >        trap            ;bbs branch taken
170a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
170d :                 >ok30369   
                       >        tst_a $33,0
170d : 08              >            php         ;save flags
170e : 08              >            php
170f : c933            >            cmp #$33     ;test result
                       >            trap_ne
1711 : f003            >        beq skip0397
                       >        trap            ;failed not equal (non zero)
1713 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1716 :                 >skip0397
                       >
1716 : 68              >            pla         ;load status
                       >            cmp_flag 0
1717 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1719 : f003            >        beq skip0400
                       >        trap            ;failed not equal (non zero)
171b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
171e :                 >skip0400
                       >
171e : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
171f : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1721 : 48              >            pha         ;use stack to load status
1722 : a9cc            >            lda #$cc     ;precharge accu
1724 : 28              >            plp
                       >
1725 : af1006          >        bbs 2,zpt,fail40369
1728 : 2f1006          >        bbr 2,zpt,ok40369
                       >        trap            ;bbr branch not taken
172b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
172e :                 >fail40369 
                       >        trap            ;bbs branch taken
172e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1731 :                 >ok40369   
                       >        tst_a $cc,$ff
1731 : 08              >            php         ;save flags
1732 : 08              >            php
1733 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1735 : f003            >        beq skip0407
                       >        trap            ;failed not equal (non zero)
1737 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
173a :                 >skip0407
                       >
173a : 68              >            pla         ;load status
                       >            cmp_flag $ff
173b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
173d : f003            >        beq skip0410
                       >        trap            ;failed not equal (non zero)
173f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1742 :                 >skip0410
                       >
1742 : 28              >            plp         ;restore status
                       >
1743 : a510            >        lda zpt
1745 : c9fb            >        cmp #$ff-(1<<2)
                       >        trap_ne         ;zp altered
1747 : f003            >        beq skip0412
                       >        trap            ;failed not equal (non zero)
1749 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
174c :                 >skip0412
                       >
                        
                                bbt 3
174c : a908            >        lda #(1<<3)    ;testing 1 bit on
174e : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1750 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1752 : 48              >            pha         ;use stack to load status
1753 : a933            >            lda #$33     ;precharge accu
1755 : 28              >            plp
                       >
1756 : 3f1006          >        bbr 3,zpt,fail10414
1759 : bf1006          >        bbs 3,zpt,ok10414
                       >        trap            ;bbs branch not taken
175c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
175f :                 >fail10414
                       >        trap            ;bbr branch taken
175f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1762 :                 >ok10414   
                       >        tst_a $33,0
1762 : 08              >            php         ;save flags
1763 : 08              >            php
1764 : c933            >            cmp #$33     ;test result
                       >            trap_ne
1766 : f003            >        beq skip0420
                       >        trap            ;failed not equal (non zero)
1768 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
176b :                 >skip0420
                       >
176b : 68              >            pla         ;load status
                       >            cmp_flag 0
176c : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
176e : f003            >        beq skip0423
                       >        trap            ;failed not equal (non zero)
1770 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1773 :                 >skip0423
                       >
1773 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1774 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1776 : 48              >            pha         ;use stack to load status
1777 : a9cc            >            lda #$cc     ;precharge accu
1779 : 28              >            plp
                       >
177a : 3f1006          >        bbr 3,zpt,fail20414
177d : bf1006          >        bbs 3,zpt,ok20414
                       >        trap            ;bbs branch not taken
1780 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1783 :                 >fail20414 
                       >        trap            ;bbr branch taken
1783 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1786 :                 >ok20414   
                       >        tst_a $cc,$ff
1786 : 08              >            php         ;save flags
1787 : 08              >            php
1788 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
178a : f003            >        beq skip0430
                       >        trap            ;failed not equal (non zero)
178c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
178f :                 >skip0430
                       >
178f : 68              >            pla         ;load status
                       >            cmp_flag $ff
1790 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1792 : f003            >        beq skip0433
                       >        trap            ;failed not equal (non zero)
1794 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1797 :                 >skip0433
                       >
1797 : 28              >            plp         ;restore status
                       >
1798 : a510            >        lda zpt
179a : c908            >        cmp #(1<<3)
                       >        trap_ne         ;zp altered
179c : f003            >        beq skip0435
                       >        trap            ;failed not equal (non zero)
179e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17a1 :                 >skip0435
                       >
17a1 : a9f7            >        lda #$ff-(1<<3) ;testing 1 bit off
17a3 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
17a5 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
17a7 : 48              >            pha         ;use stack to load status
17a8 : a933            >            lda #$33     ;precharge accu
17aa : 28              >            plp
                       >
17ab : bf1006          >        bbs 3,zpt,fail30414
17ae : 3f1006          >        bbr 3,zpt,ok30414
                       >        trap            ;bbr branch not taken
17b1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17b4 :                 >fail30414 
                       >        trap            ;bbs branch taken
17b4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17b7 :                 >ok30414   
                       >        tst_a $33,0
17b7 : 08              >            php         ;save flags
17b8 : 08              >            php
17b9 : c933            >            cmp #$33     ;test result
                       >            trap_ne
17bb : f003            >        beq skip0442
                       >        trap            ;failed not equal (non zero)
17bd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17c0 :                 >skip0442
                       >
17c0 : 68              >            pla         ;load status
                       >            cmp_flag 0
17c1 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
17c3 : f003            >        beq skip0445
                       >        trap            ;failed not equal (non zero)
17c5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17c8 :                 >skip0445
                       >
17c8 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
17c9 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
17cb : 48              >            pha         ;use stack to load status
17cc : a9cc            >            lda #$cc     ;precharge accu
17ce : 28              >            plp
                       >
17cf : bf1006          >        bbs 3,zpt,fail40414
17d2 : 3f1006          >        bbr 3,zpt,ok40414
                       >        trap            ;bbr branch not taken
17d5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17d8 :                 >fail40414 
                       >        trap            ;bbs branch taken
17d8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17db :                 >ok40414   
                       >        tst_a $cc,$ff
17db : 08              >            php         ;save flags
17dc : 08              >            php
17dd : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
17df : f003            >        beq skip0452
                       >        trap            ;failed not equal (non zero)
17e1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17e4 :                 >skip0452
                       >
17e4 : 68              >            pla         ;load status
                       >            cmp_flag $ff
17e5 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
17e7 : f003            >        beq skip0455
                       >        trap            ;failed not equal (non zero)
17e9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17ec :                 >skip0455
                       >
17ec : 28              >            plp         ;restore status
                       >
17ed : a510            >        lda zpt
17ef : c9f7            >        cmp #$ff-(1<<3)
                       >        trap_ne         ;zp altered
17f1 : f003            >        beq skip0457
                       >        trap            ;failed not equal (non zero)
17f3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
17f6 :                 >skip0457
                       >
                        
                                bbt 4
17f6 : a910            >        lda #(1<<4)    ;testing 1 bit on
17f8 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
17fa : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
17fc : 48              >            pha         ;use stack to load status
17fd : a933            >            lda #$33     ;precharge accu
17ff : 28              >            plp
                       >
1800 : 4f1006          >        bbr 4,zpt,fail10459
1803 : cf1006          >        bbs 4,zpt,ok10459
                       >        trap            ;bbs branch not taken
1806 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1809 :                 >fail10459
                       >        trap            ;bbr branch taken
1809 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
180c :                 >ok10459   
                       >        tst_a $33,0
180c : 08              >            php         ;save flags
180d : 08              >            php
180e : c933            >            cmp #$33     ;test result
                       >            trap_ne
1810 : f003            >        beq skip0465
                       >        trap            ;failed not equal (non zero)
1812 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1815 :                 >skip0465
                       >
1815 : 68              >            pla         ;load status
                       >            cmp_flag 0
1816 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1818 : f003            >        beq skip0468
                       >        trap            ;failed not equal (non zero)
181a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
181d :                 >skip0468
                       >
181d : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
181e : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1820 : 48              >            pha         ;use stack to load status
1821 : a9cc            >            lda #$cc     ;precharge accu
1823 : 28              >            plp
                       >
1824 : 4f1006          >        bbr 4,zpt,fail20459
1827 : cf1006          >        bbs 4,zpt,ok20459
                       >        trap            ;bbs branch not taken
182a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
182d :                 >fail20459 
                       >        trap            ;bbr branch taken
182d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1830 :                 >ok20459   
                       >        tst_a $cc,$ff
1830 : 08              >            php         ;save flags
1831 : 08              >            php
1832 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1834 : f003            >        beq skip0475
                       >        trap            ;failed not equal (non zero)
1836 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1839 :                 >skip0475
                       >
1839 : 68              >            pla         ;load status
                       >            cmp_flag $ff
183a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
183c : f003            >        beq skip0478
                       >        trap            ;failed not equal (non zero)
183e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1841 :                 >skip0478
                       >
1841 : 28              >            plp         ;restore status
                       >
1842 : a510            >        lda zpt
1844 : c910            >        cmp #(1<<4)
                       >        trap_ne         ;zp altered
1846 : f003            >        beq skip0480
                       >        trap            ;failed not equal (non zero)
1848 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
184b :                 >skip0480
                       >
184b : a9ef            >        lda #$ff-(1<<4) ;testing 1 bit off
184d : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
184f : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1851 : 48              >            pha         ;use stack to load status
1852 : a933            >            lda #$33     ;precharge accu
1854 : 28              >            plp
                       >
1855 : cf1006          >        bbs 4,zpt,fail30459
1858 : 4f1006          >        bbr 4,zpt,ok30459
                       >        trap            ;bbr branch not taken
185b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
185e :                 >fail30459 
                       >        trap            ;bbs branch taken
185e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1861 :                 >ok30459   
                       >        tst_a $33,0
1861 : 08              >            php         ;save flags
1862 : 08              >            php
1863 : c933            >            cmp #$33     ;test result
                       >            trap_ne
1865 : f003            >        beq skip0487
                       >        trap            ;failed not equal (non zero)
1867 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
186a :                 >skip0487
                       >
186a : 68              >            pla         ;load status
                       >            cmp_flag 0
186b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
186d : f003            >        beq skip0490
                       >        trap            ;failed not equal (non zero)
186f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1872 :                 >skip0490
                       >
1872 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1873 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1875 : 48              >            pha         ;use stack to load status
1876 : a9cc            >            lda #$cc     ;precharge accu
1878 : 28              >            plp
                       >
1879 : cf1006          >        bbs 4,zpt,fail40459
187c : 4f1006          >        bbr 4,zpt,ok40459
                       >        trap            ;bbr branch not taken
187f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1882 :                 >fail40459 
                       >        trap            ;bbs branch taken
1882 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1885 :                 >ok40459   
                       >        tst_a $cc,$ff
1885 : 08              >            php         ;save flags
1886 : 08              >            php
1887 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1889 : f003            >        beq skip0497
                       >        trap            ;failed not equal (non zero)
188b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
188e :                 >skip0497
                       >
188e : 68              >            pla         ;load status
                       >            cmp_flag $ff
188f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1891 : f003            >        beq skip0500
                       >        trap            ;failed not equal (non zero)
1893 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1896 :                 >skip0500
                       >
1896 : 28              >            plp         ;restore status
                       >
1897 : a510            >        lda zpt
1899 : c9ef            >        cmp #$ff-(1<<4)
                       >        trap_ne         ;zp altered
189b : f003            >        beq skip0502
                       >        trap            ;failed not equal (non zero)
189d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18a0 :                 >skip0502
                       >
                        
                                bbt 5
18a0 : a920            >        lda #(1<<5)    ;testing 1 bit on
18a2 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
18a4 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
18a6 : 48              >            pha         ;use stack to load status
18a7 : a933            >            lda #$33     ;precharge accu
18a9 : 28              >            plp
                       >
18aa : 5f1006          >        bbr 5,zpt,fail10504
18ad : df1006          >        bbs 5,zpt,ok10504
                       >        trap            ;bbs branch not taken
18b0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18b3 :                 >fail10504
                       >        trap            ;bbr branch taken
18b3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18b6 :                 >ok10504   
                       >        tst_a $33,0
18b6 : 08              >            php         ;save flags
18b7 : 08              >            php
18b8 : c933            >            cmp #$33     ;test result
                       >            trap_ne
18ba : f003            >        beq skip0510
                       >        trap            ;failed not equal (non zero)
18bc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18bf :                 >skip0510
                       >
18bf : 68              >            pla         ;load status
                       >            cmp_flag 0
18c0 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
18c2 : f003            >        beq skip0513
                       >        trap            ;failed not equal (non zero)
18c4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18c7 :                 >skip0513
                       >
18c7 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
18c8 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
18ca : 48              >            pha         ;use stack to load status
18cb : a9cc            >            lda #$cc     ;precharge accu
18cd : 28              >            plp
                       >
18ce : 5f1006          >        bbr 5,zpt,fail20504
18d1 : df1006          >        bbs 5,zpt,ok20504
                       >        trap            ;bbs branch not taken
18d4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18d7 :                 >fail20504 
                       >        trap            ;bbr branch taken
18d7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18da :                 >ok20504   
                       >        tst_a $cc,$ff
18da : 08              >            php         ;save flags
18db : 08              >            php
18dc : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
18de : f003            >        beq skip0520
                       >        trap            ;failed not equal (non zero)
18e0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18e3 :                 >skip0520
                       >
18e3 : 68              >            pla         ;load status
                       >            cmp_flag $ff
18e4 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
18e6 : f003            >        beq skip0523
                       >        trap            ;failed not equal (non zero)
18e8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18eb :                 >skip0523
                       >
18eb : 28              >            plp         ;restore status
                       >
18ec : a510            >        lda zpt
18ee : c920            >        cmp #(1<<5)
                       >        trap_ne         ;zp altered
18f0 : f003            >        beq skip0525
                       >        trap            ;failed not equal (non zero)
18f2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
18f5 :                 >skip0525
                       >
18f5 : a9df            >        lda #$ff-(1<<5) ;testing 1 bit off
18f7 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
18f9 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
18fb : 48              >            pha         ;use stack to load status
18fc : a933            >            lda #$33     ;precharge accu
18fe : 28              >            plp
                       >
18ff : df1006          >        bbs 5,zpt,fail30504
1902 : 5f1006          >        bbr 5,zpt,ok30504
                       >        trap            ;bbr branch not taken
1905 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1908 :                 >fail30504 
                       >        trap            ;bbs branch taken
1908 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
190b :                 >ok30504   
                       >        tst_a $33,0
190b : 08              >            php         ;save flags
190c : 08              >            php
190d : c933            >            cmp #$33     ;test result
                       >            trap_ne
190f : f003            >        beq skip0532
                       >        trap            ;failed not equal (non zero)
1911 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1914 :                 >skip0532
                       >
1914 : 68              >            pla         ;load status
                       >            cmp_flag 0
1915 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1917 : f003            >        beq skip0535
                       >        trap            ;failed not equal (non zero)
1919 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
191c :                 >skip0535
                       >
191c : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
191d : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
191f : 48              >            pha         ;use stack to load status
1920 : a9cc            >            lda #$cc     ;precharge accu
1922 : 28              >            plp
                       >
1923 : df1006          >        bbs 5,zpt,fail40504
1926 : 5f1006          >        bbr 5,zpt,ok40504
                       >        trap            ;bbr branch not taken
1929 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
192c :                 >fail40504 
                       >        trap            ;bbs branch taken
192c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
192f :                 >ok40504   
                       >        tst_a $cc,$ff
192f : 08              >            php         ;save flags
1930 : 08              >            php
1931 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1933 : f003            >        beq skip0542
                       >        trap            ;failed not equal (non zero)
1935 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1938 :                 >skip0542
                       >
1938 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1939 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
193b : f003            >        beq skip0545
                       >        trap            ;failed not equal (non zero)
193d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1940 :                 >skip0545
                       >
1940 : 28              >            plp         ;restore status
                       >
1941 : a510            >        lda zpt
1943 : c9df            >        cmp #$ff-(1<<5)
                       >        trap_ne         ;zp altered
1945 : f003            >        beq skip0547
                       >        trap            ;failed not equal (non zero)
1947 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
194a :                 >skip0547
                       >
                        
                                bbt 6
194a : a940            >        lda #(1<<6)    ;testing 1 bit on
194c : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
194e : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1950 : 48              >            pha         ;use stack to load status
1951 : a933            >            lda #$33     ;precharge accu
1953 : 28              >            plp
                       >
1954 : 6f1006          >        bbr 6,zpt,fail10549
1957 : ef1006          >        bbs 6,zpt,ok10549
                       >        trap            ;bbs branch not taken
195a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
195d :                 >fail10549
                       >        trap            ;bbr branch taken
195d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1960 :                 >ok10549   
                       >        tst_a $33,0
1960 : 08              >            php         ;save flags
1961 : 08              >            php
1962 : c933            >            cmp #$33     ;test result
                       >            trap_ne
1964 : f003            >        beq skip0555
                       >        trap            ;failed not equal (non zero)
1966 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1969 :                 >skip0555
                       >
1969 : 68              >            pla         ;load status
                       >            cmp_flag 0
196a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
196c : f003            >        beq skip0558
                       >        trap            ;failed not equal (non zero)
196e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1971 :                 >skip0558
                       >
1971 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1972 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1974 : 48              >            pha         ;use stack to load status
1975 : a9cc            >            lda #$cc     ;precharge accu
1977 : 28              >            plp
                       >
1978 : 6f1006          >        bbr 6,zpt,fail20549
197b : ef1006          >        bbs 6,zpt,ok20549
                       >        trap            ;bbs branch not taken
197e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1981 :                 >fail20549 
                       >        trap            ;bbr branch taken
1981 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1984 :                 >ok20549   
                       >        tst_a $cc,$ff
1984 : 08              >            php         ;save flags
1985 : 08              >            php
1986 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1988 : f003            >        beq skip0565
                       >        trap            ;failed not equal (non zero)
198a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
198d :                 >skip0565
                       >
198d : 68              >            pla         ;load status
                       >            cmp_flag $ff
198e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1990 : f003            >        beq skip0568
                       >        trap            ;failed not equal (non zero)
1992 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1995 :                 >skip0568
                       >
1995 : 28              >            plp         ;restore status
                       >
1996 : a510            >        lda zpt
1998 : c940            >        cmp #(1<<6)
                       >        trap_ne         ;zp altered
199a : f003            >        beq skip0570
                       >        trap            ;failed not equal (non zero)
199c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
199f :                 >skip0570
                       >
199f : a9bf            >        lda #$ff-(1<<6) ;testing 1 bit off
19a1 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
19a3 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
19a5 : 48              >            pha         ;use stack to load status
19a6 : a933            >            lda #$33     ;precharge accu
19a8 : 28              >            plp
                       >
19a9 : ef1006          >        bbs 6,zpt,fail30549
19ac : 6f1006          >        bbr 6,zpt,ok30549
                       >        trap            ;bbr branch not taken
19af : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19b2 :                 >fail30549 
                       >        trap            ;bbs branch taken
19b2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19b5 :                 >ok30549   
                       >        tst_a $33,0
19b5 : 08              >            php         ;save flags
19b6 : 08              >            php
19b7 : c933            >            cmp #$33     ;test result
                       >            trap_ne
19b9 : f003            >        beq skip0577
                       >        trap            ;failed not equal (non zero)
19bb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19be :                 >skip0577
                       >
19be : 68              >            pla         ;load status
                       >            cmp_flag 0
19bf : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
19c1 : f003            >        beq skip0580
                       >        trap            ;failed not equal (non zero)
19c3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19c6 :                 >skip0580
                       >
19c6 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
19c7 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
19c9 : 48              >            pha         ;use stack to load status
19ca : a9cc            >            lda #$cc     ;precharge accu
19cc : 28              >            plp
                       >
19cd : ef1006          >        bbs 6,zpt,fail40549
19d0 : 6f1006          >        bbr 6,zpt,ok40549
                       >        trap            ;bbr branch not taken
19d3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19d6 :                 >fail40549 
                       >        trap            ;bbs branch taken
19d6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19d9 :                 >ok40549   
                       >        tst_a $cc,$ff
19d9 : 08              >            php         ;save flags
19da : 08              >            php
19db : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
19dd : f003            >        beq skip0587
                       >        trap            ;failed not equal (non zero)
19df : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19e2 :                 >skip0587
                       >
19e2 : 68              >            pla         ;load status
                       >            cmp_flag $ff
19e3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
19e5 : f003            >        beq skip0590
                       >        trap            ;failed not equal (non zero)
19e7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19ea :                 >skip0590
                       >
19ea : 28              >            plp         ;restore status
                       >
19eb : a510            >        lda zpt
19ed : c9bf            >        cmp #$ff-(1<<6)
                       >        trap_ne         ;zp altered
19ef : f003            >        beq skip0592
                       >        trap            ;failed not equal (non zero)
19f1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
19f4 :                 >skip0592
                       >
                        
                                bbt 7
19f4 : a980            >        lda #(1<<7)    ;testing 1 bit on
19f6 : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
19f8 : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
19fa : 48              >            pha         ;use stack to load status
19fb : a933            >            lda #$33     ;precharge accu
19fd : 28              >            plp
                       >
19fe : 7f1006          >        bbr 7,zpt,fail10594
1a01 : ff1006          >        bbs 7,zpt,ok10594
                       >        trap            ;bbs branch not taken
1a04 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a07 :                 >fail10594
                       >        trap            ;bbr branch taken
1a07 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a0a :                 >ok10594   
                       >        tst_a $33,0
1a0a : 08              >            php         ;save flags
1a0b : 08              >            php
1a0c : c933            >            cmp #$33     ;test result
                       >            trap_ne
1a0e : f003            >        beq skip0600
                       >        trap            ;failed not equal (non zero)
1a10 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a13 :                 >skip0600
                       >
1a13 : 68              >            pla         ;load status
                       >            cmp_flag 0
1a14 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a16 : f003            >        beq skip0603
                       >        trap            ;failed not equal (non zero)
1a18 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a1b :                 >skip0603
                       >
1a1b : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1a1c : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1a1e : 48              >            pha         ;use stack to load status
1a1f : a9cc            >            lda #$cc     ;precharge accu
1a21 : 28              >            plp
                       >
1a22 : 7f1006          >        bbr 7,zpt,fail20594
1a25 : ff1006          >        bbs 7,zpt,ok20594
                       >        trap            ;bbs branch not taken
1a28 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a2b :                 >fail20594 
                       >        trap            ;bbr branch taken
1a2b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a2e :                 >ok20594   
                       >        tst_a $cc,$ff
1a2e : 08              >            php         ;save flags
1a2f : 08              >            php
1a30 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1a32 : f003            >        beq skip0610
                       >        trap            ;failed not equal (non zero)
1a34 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a37 :                 >skip0610
                       >
1a37 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1a38 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a3a : f003            >        beq skip0613
                       >        trap            ;failed not equal (non zero)
1a3c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a3f :                 >skip0613
                       >
1a3f : 28              >            plp         ;restore status
                       >
1a40 : a510            >        lda zpt
1a42 : c980            >        cmp #(1<<7)
                       >        trap_ne         ;zp altered
1a44 : f003            >        beq skip0615
                       >        trap            ;failed not equal (non zero)
1a46 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a49 :                 >skip0615
                       >
1a49 : a97f            >        lda #$ff-(1<<7) ;testing 1 bit off
1a4b : 8510            >        sta zpt
                       >        set_a $33,0     ;with flags off
                       >            load_flag 0     
1a4d : a900            >            lda #0                  ;allow test to change I-flag (no mask)
                       >
1a4f : 48              >            pha         ;use stack to load status
1a50 : a933            >            lda #$33     ;precharge accu
1a52 : 28              >            plp
                       >
1a53 : ff1006          >        bbs 7,zpt,fail30594
1a56 : 7f1006          >        bbr 7,zpt,ok30594
                       >        trap            ;bbr branch not taken
1a59 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a5c :                 >fail30594 
                       >        trap            ;bbs branch taken
1a5c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a5f :                 >ok30594   
                       >        tst_a $33,0
1a5f : 08              >            php         ;save flags
1a60 : 08              >            php
1a61 : c933            >            cmp #$33     ;test result
                       >            trap_ne
1a63 : f003            >        beq skip0622
                       >        trap            ;failed not equal (non zero)
1a65 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a68 :                 >skip0622
                       >
1a68 : 68              >            pla         ;load status
                       >            cmp_flag 0
1a69 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a6b : f003            >        beq skip0625
                       >        trap            ;failed not equal (non zero)
1a6d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a70 :                 >skip0625
                       >
1a70 : 28              >            plp         ;restore status
                       >
                       >        set_a $cc,$ff   ;with flags on
                       >            load_flag $ff   
1a71 : a9ff            >            lda #$ff                ;allow test to change I-flag (no mask)
                       >
1a73 : 48              >            pha         ;use stack to load status
1a74 : a9cc            >            lda #$cc     ;precharge accu
1a76 : 28              >            plp
                       >
1a77 : ff1006          >        bbs 7,zpt,fail40594
1a7a : 7f1006          >        bbr 7,zpt,ok40594
                       >        trap            ;bbr branch not taken
1a7d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a80 :                 >fail40594 
                       >        trap            ;bbs branch taken
1a80 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a83 :                 >ok40594   
                       >        tst_a $cc,$ff
1a83 : 08              >            php         ;save flags
1a84 : 08              >            php
1a85 : c9cc            >            cmp #$cc     ;test result
                       >            trap_ne
1a87 : f003            >        beq skip0632
                       >        trap            ;failed not equal (non zero)
1a89 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a8c :                 >skip0632
                       >
1a8c : 68              >            pla         ;load status
                       >            cmp_flag $ff
1a8d : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1a8f : f003            >        beq skip0635
                       >        trap            ;failed not equal (non zero)
1a91 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a94 :                 >skip0635
                       >
1a94 : 28              >            plp         ;restore status
                       >
1a95 : a510            >        lda zpt
1a97 : c97f            >        cmp #$ff-(1<<7)
                       >        trap_ne         ;zp altered
1a99 : f003            >        beq skip0637
                       >        trap            ;failed not equal (non zero)
1a9b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1a9e :                 >skip0637
                       >
                        
1a9e : e011                     cpx #$11
                                trap_ne         ;x overwritten
1aa0 : f003            >        beq skip0639
                       >        trap            ;failed not equal (non zero)
1aa2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1aa5 :                 >skip0639
                        
1aa5 : c022                     cpy #$22
                                trap_ne         ;y overwritten
1aa7 : f003            >        beq skip0641
                       >        trap            ;failed not equal (non zero)
1aa9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1aac :                 >skip0641
                        
                                next_test 
1aac : ad0202          >            lda test_case   ;previous test
1aaf : c906            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1ab1 : f003            >        beq skip0644
                       >        trap            ;failed not equal (non zero)
1ab3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ab6 :                 >skip0644
                       >
0007 =                 >test_num = test_num + 1
1ab6 : a907            >            lda #test_num   ;*** next tests' number
1ab8 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                        bbrc    macro           ;\1 = bitnum
                                bbr \1,zpt,skip\?
                                eor #(1<<\1)       
                        skip\?
                                endm
                        bbsc    macro           ;\1 = bitnum
                                bbs \1,zpt,skip\?
                                eor #(1<<\1)       
                        skip\?
                                endm
                        
1abb : a900                     lda #0          ;combined bit test
1abd : 8510                     sta zpt
1abf : a900             bbcl    lda #0
                                bbrc 0
1ac1 : 0f1002          >        bbr 0,zpt,skip0646
1ac4 : 4901            >        eor #(1<<0)       
1ac6 :                 >skip0646
                        
                                bbrc 1
1ac6 : 1f1002          >        bbr 1,zpt,skip0647
1ac9 : 4902            >        eor #(1<<1)       
1acb :                 >skip0647
                        
                                bbrc 2
1acb : 2f1002          >        bbr 2,zpt,skip0648
1ace : 4904            >        eor #(1<<2)       
1ad0 :                 >skip0648
                        
                                bbrc 3
1ad0 : 3f1002          >        bbr 3,zpt,skip0649
1ad3 : 4908            >        eor #(1<<3)       
1ad5 :                 >skip0649
                        
                                bbrc 4
1ad5 : 4f1002          >        bbr 4,zpt,skip0650
1ad8 : 4910            >        eor #(1<<4)       
1ada :                 >skip0650
                        
                                bbrc 5
1ada : 5f1002          >        bbr 5,zpt,skip0651
1add : 4920            >        eor #(1<<5)       
1adf :                 >skip0651
                        
                                bbrc 6
1adf : 6f1002          >        bbr 6,zpt,skip0652
1ae2 : 4940            >        eor #(1<<6)       
1ae4 :                 >skip0652
                        
                                bbrc 7
1ae4 : 7f1002          >        bbr 7,zpt,skip0653
1ae7 : 4980            >        eor #(1<<7)       
1ae9 :                 >skip0653
                        
1ae9 : 4510                     eor zpt
                                trap_ne         ;failed bbr bitnum in accu       
1aeb : f003            >        beq skip0654
                       >        trap            ;failed not equal (non zero)
1aed : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1af0 :                 >skip0654
                        
1af0 : a9ff                     lda #$ff
                                bbsc 0
1af2 : 8f1002          >        bbs 0,zpt,skip0656
1af5 : 4901            >        eor #(1<<0)       
1af7 :                 >skip0656
                        
                                bbsc 1
1af7 : 9f1002          >        bbs 1,zpt,skip0657
1afa : 4902            >        eor #(1<<1)       
1afc :                 >skip0657
                        
                                bbsc 2
1afc : af1002          >        bbs 2,zpt,skip0658
1aff : 4904            >        eor #(1<<2)       
1b01 :                 >skip0658
                        
                                bbsc 3
1b01 : bf1002          >        bbs 3,zpt,skip0659
1b04 : 4908            >        eor #(1<<3)       
1b06 :                 >skip0659
                        
                                bbsc 4
1b06 : cf1002          >        bbs 4,zpt,skip0660
1b09 : 4910            >        eor #(1<<4)       
1b0b :                 >skip0660
                        
                                bbsc 5
1b0b : df1002          >        bbs 5,zpt,skip0661
1b0e : 4920            >        eor #(1<<5)       
1b10 :                 >skip0661
                        
                                bbsc 6
1b10 : ef1002          >        bbs 6,zpt,skip0662
1b13 : 4940            >        eor #(1<<6)       
1b15 :                 >skip0662
                        
                                bbsc 7
1b15 : ff1002          >        bbs 7,zpt,skip0663
1b18 : 4980            >        eor #(1<<7)       
1b1a :                 >skip0663
                        
1b1a : 4510                     eor zpt
                                trap_ne         ;failed bbs bitnum in accu       
1b1c : f003            >        beq skip0664
                       >        trap            ;failed not equal (non zero)
1b1e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b21 :                 >skip0664
                        
1b21 : e610                     inc zpt
1b23 : d09a                     bne bbcl
                                next_test            
1b25 : ad0202          >            lda test_case   ;previous test
1b28 : c907            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
1b2a : f003            >        beq skip0667
                       >        trap            ;failed not equal (non zero)
1b2c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b2f :                 >skip0667
                       >
0008 =                 >test_num = test_num + 1
1b2f : a908            >            lda #test_num   ;*** next tests' number
1b31 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                            endif
                            
1b34 : 8d04ef            sta $ef04
1b37 : 74657374696e67..  db "testing NOP", 10, 0
                        
                        nop_test    macro       ;\1 = opcode, \2 = # of bytes
                                    ldy #$42
                                    ldx #4-\2
                                    db  \1          ;test nop length
                                if \2 = 1
                                    dex
                                    dex
                                endif
                                if \2 = 2
                                    iny
                                    dex
                                endif
                                if \2 = 3
                                    iny
                                    iny
                                endif
                                    dex
                                    trap_ne         ;wrong number of bytes
                                    set_a $ff-\1,0
                                    db  \1          ;test nop integrity - flags off
                                    nop
                                    nop
                                    tst_a $ff-\1,0
                                    set_a $aa-\1,$ff
                                    db  \1          ;test nop integrity - flags on
                                    nop
                                    nop
                                    tst_a $aa-\1,$ff
                                    cpy #$42
                                    trap_ne         ;y changed
                                    cpx #0
                                    trap_ne         ;x changed
                                    endm
                                    
                                nop_test $02,2
1b44 : a042            >            ldy #$42
1b46 : a202            >            ldx #4-2
1b48 : 02              >            db  $02          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1b49 : c8              >            iny
1b4a : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1b4b : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1b4c : f003            >        beq skip0670
                       >        trap            ;failed not equal (non zero)
1b4e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b51 :                 >skip0670
                       >
                       >            set_a $ff-$02,0
                       >            load_flag 0
1b51 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1b53 : 48              >            pha         ;use stack to load status
1b54 : a9fd            >            lda #$ff-$02     ;precharge accu
1b56 : 28              >            plp
                       >
1b57 : 02              >            db  $02          ;test nop integrity - flags off
1b58 : ea              >            nop
1b59 : ea              >            nop
                       >            tst_a $ff-$02,0
1b5a : 08              >            php         ;save flags
1b5b : 08              >            php
1b5c : c9fd            >            cmp #$ff-$02     ;test result
                       >            trap_ne
1b5e : f003            >        beq skip0675
                       >        trap            ;failed not equal (non zero)
1b60 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b63 :                 >skip0675
                       >
1b63 : 68              >            pla         ;load status
                       >            cmp_flag 0
1b64 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b66 : f003            >        beq skip0678
                       >        trap            ;failed not equal (non zero)
1b68 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b6b :                 >skip0678
                       >
1b6b : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$02,$ff
                       >            load_flag $ff
1b6c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1b6e : 48              >            pha         ;use stack to load status
1b6f : a9a8            >            lda #$aa-$02     ;precharge accu
1b71 : 28              >            plp
                       >
1b72 : 02              >            db  $02          ;test nop integrity - flags on
1b73 : ea              >            nop
1b74 : ea              >            nop
                       >            tst_a $aa-$02,$ff
1b75 : 08              >            php         ;save flags
1b76 : 08              >            php
1b77 : c9a8            >            cmp #$aa-$02     ;test result
                       >            trap_ne
1b79 : f003            >        beq skip0683
                       >        trap            ;failed not equal (non zero)
1b7b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b7e :                 >skip0683
                       >
1b7e : 68              >            pla         ;load status
                       >            cmp_flag $ff
1b7f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1b81 : f003            >        beq skip0686
                       >        trap            ;failed not equal (non zero)
1b83 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b86 :                 >skip0686
                       >
1b86 : 28              >            plp         ;restore status
                       >
1b87 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1b89 : f003            >        beq skip0688
                       >        trap            ;failed not equal (non zero)
1b8b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b8e :                 >skip0688
                       >
1b8e : e000            >            cpx #0
                       >            trap_ne         ;x changed
1b90 : f003            >        beq skip0690
                       >        trap            ;failed not equal (non zero)
1b92 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1b95 :                 >skip0690
                       >
                        
                                nop_test $22,2
1b95 : a042            >            ldy #$42
1b97 : a202            >            ldx #4-2
1b99 : 22              >            db  $22          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1b9a : c8              >            iny
1b9b : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1b9c : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1b9d : f003            >        beq skip0693
                       >        trap            ;failed not equal (non zero)
1b9f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ba2 :                 >skip0693
                       >
                       >            set_a $ff-$22,0
                       >            load_flag 0
1ba2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1ba4 : 48              >            pha         ;use stack to load status
1ba5 : a9dd            >            lda #$ff-$22     ;precharge accu
1ba7 : 28              >            plp
                       >
1ba8 : 22              >            db  $22          ;test nop integrity - flags off
1ba9 : ea              >            nop
1baa : ea              >            nop
                       >            tst_a $ff-$22,0
1bab : 08              >            php         ;save flags
1bac : 08              >            php
1bad : c9dd            >            cmp #$ff-$22     ;test result
                       >            trap_ne
1baf : f003            >        beq skip0698
                       >        trap            ;failed not equal (non zero)
1bb1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bb4 :                 >skip0698
                       >
1bb4 : 68              >            pla         ;load status
                       >            cmp_flag 0
1bb5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1bb7 : f003            >        beq skip0701
                       >        trap            ;failed not equal (non zero)
1bb9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bbc :                 >skip0701
                       >
1bbc : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$22,$ff
                       >            load_flag $ff
1bbd : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1bbf : 48              >            pha         ;use stack to load status
1bc0 : a988            >            lda #$aa-$22     ;precharge accu
1bc2 : 28              >            plp
                       >
1bc3 : 22              >            db  $22          ;test nop integrity - flags on
1bc4 : ea              >            nop
1bc5 : ea              >            nop
                       >            tst_a $aa-$22,$ff
1bc6 : 08              >            php         ;save flags
1bc7 : 08              >            php
1bc8 : c988            >            cmp #$aa-$22     ;test result
                       >            trap_ne
1bca : f003            >        beq skip0706
                       >        trap            ;failed not equal (non zero)
1bcc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bcf :                 >skip0706
                       >
1bcf : 68              >            pla         ;load status
                       >            cmp_flag $ff
1bd0 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1bd2 : f003            >        beq skip0709
                       >        trap            ;failed not equal (non zero)
1bd4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bd7 :                 >skip0709
                       >
1bd7 : 28              >            plp         ;restore status
                       >
1bd8 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1bda : f003            >        beq skip0711
                       >        trap            ;failed not equal (non zero)
1bdc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bdf :                 >skip0711
                       >
1bdf : e000            >            cpx #0
                       >            trap_ne         ;x changed
1be1 : f003            >        beq skip0713
                       >        trap            ;failed not equal (non zero)
1be3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1be6 :                 >skip0713
                       >
                        
                                nop_test $42,2
1be6 : a042            >            ldy #$42
1be8 : a202            >            ldx #4-2
1bea : 42              >            db  $42          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1beb : c8              >            iny
1bec : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1bed : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1bee : f003            >        beq skip0716
                       >        trap            ;failed not equal (non zero)
1bf0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1bf3 :                 >skip0716
                       >
                       >            set_a $ff-$42,0
                       >            load_flag 0
1bf3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1bf5 : 48              >            pha         ;use stack to load status
1bf6 : a9bd            >            lda #$ff-$42     ;precharge accu
1bf8 : 28              >            plp
                       >
1bf9 : 42              >            db  $42          ;test nop integrity - flags off
1bfa : ea              >            nop
1bfb : ea              >            nop
                       >            tst_a $ff-$42,0
1bfc : 08              >            php         ;save flags
1bfd : 08              >            php
1bfe : c9bd            >            cmp #$ff-$42     ;test result
                       >            trap_ne
1c00 : f003            >        beq skip0721
                       >        trap            ;failed not equal (non zero)
1c02 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c05 :                 >skip0721
                       >
1c05 : 68              >            pla         ;load status
                       >            cmp_flag 0
1c06 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c08 : f003            >        beq skip0724
                       >        trap            ;failed not equal (non zero)
1c0a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c0d :                 >skip0724
                       >
1c0d : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$42,$ff
                       >            load_flag $ff
1c0e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1c10 : 48              >            pha         ;use stack to load status
1c11 : a968            >            lda #$aa-$42     ;precharge accu
1c13 : 28              >            plp
                       >
1c14 : 42              >            db  $42          ;test nop integrity - flags on
1c15 : ea              >            nop
1c16 : ea              >            nop
                       >            tst_a $aa-$42,$ff
1c17 : 08              >            php         ;save flags
1c18 : 08              >            php
1c19 : c968            >            cmp #$aa-$42     ;test result
                       >            trap_ne
1c1b : f003            >        beq skip0729
                       >        trap            ;failed not equal (non zero)
1c1d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c20 :                 >skip0729
                       >
1c20 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1c21 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c23 : f003            >        beq skip0732
                       >        trap            ;failed not equal (non zero)
1c25 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c28 :                 >skip0732
                       >
1c28 : 28              >            plp         ;restore status
                       >
1c29 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1c2b : f003            >        beq skip0734
                       >        trap            ;failed not equal (non zero)
1c2d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c30 :                 >skip0734
                       >
1c30 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1c32 : f003            >        beq skip0736
                       >        trap            ;failed not equal (non zero)
1c34 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c37 :                 >skip0736
                       >
                        
                                nop_test $62,2
1c37 : a042            >            ldy #$42
1c39 : a202            >            ldx #4-2
1c3b : 62              >            db  $62          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1c3c : c8              >            iny
1c3d : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1c3e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1c3f : f003            >        beq skip0739
                       >        trap            ;failed not equal (non zero)
1c41 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c44 :                 >skip0739
                       >
                       >            set_a $ff-$62,0
                       >            load_flag 0
1c44 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1c46 : 48              >            pha         ;use stack to load status
1c47 : a99d            >            lda #$ff-$62     ;precharge accu
1c49 : 28              >            plp
                       >
1c4a : 62              >            db  $62          ;test nop integrity - flags off
1c4b : ea              >            nop
1c4c : ea              >            nop
                       >            tst_a $ff-$62,0
1c4d : 08              >            php         ;save flags
1c4e : 08              >            php
1c4f : c99d            >            cmp #$ff-$62     ;test result
                       >            trap_ne
1c51 : f003            >        beq skip0744
                       >        trap            ;failed not equal (non zero)
1c53 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c56 :                 >skip0744
                       >
1c56 : 68              >            pla         ;load status
                       >            cmp_flag 0
1c57 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c59 : f003            >        beq skip0747
                       >        trap            ;failed not equal (non zero)
1c5b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c5e :                 >skip0747
                       >
1c5e : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$62,$ff
                       >            load_flag $ff
1c5f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1c61 : 48              >            pha         ;use stack to load status
1c62 : a948            >            lda #$aa-$62     ;precharge accu
1c64 : 28              >            plp
                       >
1c65 : 62              >            db  $62          ;test nop integrity - flags on
1c66 : ea              >            nop
1c67 : ea              >            nop
                       >            tst_a $aa-$62,$ff
1c68 : 08              >            php         ;save flags
1c69 : 08              >            php
1c6a : c948            >            cmp #$aa-$62     ;test result
                       >            trap_ne
1c6c : f003            >        beq skip0752
                       >        trap            ;failed not equal (non zero)
1c6e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c71 :                 >skip0752
                       >
1c71 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1c72 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1c74 : f003            >        beq skip0755
                       >        trap            ;failed not equal (non zero)
1c76 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c79 :                 >skip0755
                       >
1c79 : 28              >            plp         ;restore status
                       >
1c7a : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1c7c : f003            >        beq skip0757
                       >        trap            ;failed not equal (non zero)
1c7e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c81 :                 >skip0757
                       >
1c81 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1c83 : f003            >        beq skip0759
                       >        trap            ;failed not equal (non zero)
1c85 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c88 :                 >skip0759
                       >
                        
                                nop_test $82,2
1c88 : a042            >            ldy #$42
1c8a : a202            >            ldx #4-2
1c8c : 82              >            db  $82          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1c8d : c8              >            iny
1c8e : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1c8f : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1c90 : f003            >        beq skip0762
                       >        trap            ;failed not equal (non zero)
1c92 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1c95 :                 >skip0762
                       >
                       >            set_a $ff-$82,0
                       >            load_flag 0
1c95 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1c97 : 48              >            pha         ;use stack to load status
1c98 : a97d            >            lda #$ff-$82     ;precharge accu
1c9a : 28              >            plp
                       >
1c9b : 82              >            db  $82          ;test nop integrity - flags off
1c9c : ea              >            nop
1c9d : ea              >            nop
                       >            tst_a $ff-$82,0
1c9e : 08              >            php         ;save flags
1c9f : 08              >            php
1ca0 : c97d            >            cmp #$ff-$82     ;test result
                       >            trap_ne
1ca2 : f003            >        beq skip0767
                       >        trap            ;failed not equal (non zero)
1ca4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ca7 :                 >skip0767
                       >
1ca7 : 68              >            pla         ;load status
                       >            cmp_flag 0
1ca8 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1caa : f003            >        beq skip0770
                       >        trap            ;failed not equal (non zero)
1cac : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1caf :                 >skip0770
                       >
1caf : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$82,$ff
                       >            load_flag $ff
1cb0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1cb2 : 48              >            pha         ;use stack to load status
1cb3 : a928            >            lda #$aa-$82     ;precharge accu
1cb5 : 28              >            plp
                       >
1cb6 : 82              >            db  $82          ;test nop integrity - flags on
1cb7 : ea              >            nop
1cb8 : ea              >            nop
                       >            tst_a $aa-$82,$ff
1cb9 : 08              >            php         ;save flags
1cba : 08              >            php
1cbb : c928            >            cmp #$aa-$82     ;test result
                       >            trap_ne
1cbd : f003            >        beq skip0775
                       >        trap            ;failed not equal (non zero)
1cbf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1cc2 :                 >skip0775
                       >
1cc2 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1cc3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1cc5 : f003            >        beq skip0778
                       >        trap            ;failed not equal (non zero)
1cc7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1cca :                 >skip0778
                       >
1cca : 28              >            plp         ;restore status
                       >
1ccb : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1ccd : f003            >        beq skip0780
                       >        trap            ;failed not equal (non zero)
1ccf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1cd2 :                 >skip0780
                       >
1cd2 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1cd4 : f003            >        beq skip0782
                       >        trap            ;failed not equal (non zero)
1cd6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1cd9 :                 >skip0782
                       >
                        
                                nop_test $c2,2
1cd9 : a042            >            ldy #$42
1cdb : a202            >            ldx #4-2
1cdd : c2              >            db  $c2          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1cde : c8              >            iny
1cdf : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1ce0 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1ce1 : f003            >        beq skip0785
                       >        trap            ;failed not equal (non zero)
1ce3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ce6 :                 >skip0785
                       >
                       >            set_a $ff-$c2,0
                       >            load_flag 0
1ce6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1ce8 : 48              >            pha         ;use stack to load status
1ce9 : a93d            >            lda #$ff-$c2     ;precharge accu
1ceb : 28              >            plp
                       >
1cec : c2              >            db  $c2          ;test nop integrity - flags off
1ced : ea              >            nop
1cee : ea              >            nop
                       >            tst_a $ff-$c2,0
1cef : 08              >            php         ;save flags
1cf0 : 08              >            php
1cf1 : c93d            >            cmp #$ff-$c2     ;test result
                       >            trap_ne
1cf3 : f003            >        beq skip0790
                       >        trap            ;failed not equal (non zero)
1cf5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1cf8 :                 >skip0790
                       >
1cf8 : 68              >            pla         ;load status
                       >            cmp_flag 0
1cf9 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1cfb : f003            >        beq skip0793
                       >        trap            ;failed not equal (non zero)
1cfd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d00 :                 >skip0793
                       >
1d00 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$c2,$ff
                       >            load_flag $ff
1d01 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1d03 : 48              >            pha         ;use stack to load status
1d04 : a9e8            >            lda #$aa-$c2     ;precharge accu
1d06 : 28              >            plp
                       >
1d07 : c2              >            db  $c2          ;test nop integrity - flags on
1d08 : ea              >            nop
1d09 : ea              >            nop
                       >            tst_a $aa-$c2,$ff
1d0a : 08              >            php         ;save flags
1d0b : 08              >            php
1d0c : c9e8            >            cmp #$aa-$c2     ;test result
                       >            trap_ne
1d0e : f003            >        beq skip0798
                       >        trap            ;failed not equal (non zero)
1d10 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d13 :                 >skip0798
                       >
1d13 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1d14 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1d16 : f003            >        beq skip0801
                       >        trap            ;failed not equal (non zero)
1d18 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d1b :                 >skip0801
                       >
1d1b : 28              >            plp         ;restore status
                       >
1d1c : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1d1e : f003            >        beq skip0803
                       >        trap            ;failed not equal (non zero)
1d20 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d23 :                 >skip0803
                       >
1d23 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1d25 : f003            >        beq skip0805
                       >        trap            ;failed not equal (non zero)
1d27 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d2a :                 >skip0805
                       >
                        
                                nop_test $e2,2
1d2a : a042            >            ldy #$42
1d2c : a202            >            ldx #4-2
1d2e : e2              >            db  $e2          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1d2f : c8              >            iny
1d30 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1d31 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1d32 : f003            >        beq skip0808
                       >        trap            ;failed not equal (non zero)
1d34 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d37 :                 >skip0808
                       >
                       >            set_a $ff-$e2,0
                       >            load_flag 0
1d37 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1d39 : 48              >            pha         ;use stack to load status
1d3a : a91d            >            lda #$ff-$e2     ;precharge accu
1d3c : 28              >            plp
                       >
1d3d : e2              >            db  $e2          ;test nop integrity - flags off
1d3e : ea              >            nop
1d3f : ea              >            nop
                       >            tst_a $ff-$e2,0
1d40 : 08              >            php         ;save flags
1d41 : 08              >            php
1d42 : c91d            >            cmp #$ff-$e2     ;test result
                       >            trap_ne
1d44 : f003            >        beq skip0813
                       >        trap            ;failed not equal (non zero)
1d46 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d49 :                 >skip0813
                       >
1d49 : 68              >            pla         ;load status
                       >            cmp_flag 0
1d4a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1d4c : f003            >        beq skip0816
                       >        trap            ;failed not equal (non zero)
1d4e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d51 :                 >skip0816
                       >
1d51 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$e2,$ff
                       >            load_flag $ff
1d52 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1d54 : 48              >            pha         ;use stack to load status
1d55 : a9c8            >            lda #$aa-$e2     ;precharge accu
1d57 : 28              >            plp
                       >
1d58 : e2              >            db  $e2          ;test nop integrity - flags on
1d59 : ea              >            nop
1d5a : ea              >            nop
                       >            tst_a $aa-$e2,$ff
1d5b : 08              >            php         ;save flags
1d5c : 08              >            php
1d5d : c9c8            >            cmp #$aa-$e2     ;test result
                       >            trap_ne
1d5f : f003            >        beq skip0821
                       >        trap            ;failed not equal (non zero)
1d61 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d64 :                 >skip0821
                       >
1d64 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1d65 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1d67 : f003            >        beq skip0824
                       >        trap            ;failed not equal (non zero)
1d69 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d6c :                 >skip0824
                       >
1d6c : 28              >            plp         ;restore status
                       >
1d6d : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1d6f : f003            >        beq skip0826
                       >        trap            ;failed not equal (non zero)
1d71 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d74 :                 >skip0826
                       >
1d74 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1d76 : f003            >        beq skip0828
                       >        trap            ;failed not equal (non zero)
1d78 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d7b :                 >skip0828
                       >
                        
                                nop_test $44,2
1d7b : a042            >            ldy #$42
1d7d : a202            >            ldx #4-2
1d7f : 44              >            db  $44          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1d80 : c8              >            iny
1d81 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1d82 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1d83 : f003            >        beq skip0831
                       >        trap            ;failed not equal (non zero)
1d85 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d88 :                 >skip0831
                       >
                       >            set_a $ff-$44,0
                       >            load_flag 0
1d88 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1d8a : 48              >            pha         ;use stack to load status
1d8b : a9bb            >            lda #$ff-$44     ;precharge accu
1d8d : 28              >            plp
                       >
1d8e : 44              >            db  $44          ;test nop integrity - flags off
1d8f : ea              >            nop
1d90 : ea              >            nop
                       >            tst_a $ff-$44,0
1d91 : 08              >            php         ;save flags
1d92 : 08              >            php
1d93 : c9bb            >            cmp #$ff-$44     ;test result
                       >            trap_ne
1d95 : f003            >        beq skip0836
                       >        trap            ;failed not equal (non zero)
1d97 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1d9a :                 >skip0836
                       >
1d9a : 68              >            pla         ;load status
                       >            cmp_flag 0
1d9b : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1d9d : f003            >        beq skip0839
                       >        trap            ;failed not equal (non zero)
1d9f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1da2 :                 >skip0839
                       >
1da2 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$44,$ff
                       >            load_flag $ff
1da3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1da5 : 48              >            pha         ;use stack to load status
1da6 : a966            >            lda #$aa-$44     ;precharge accu
1da8 : 28              >            plp
                       >
1da9 : 44              >            db  $44          ;test nop integrity - flags on
1daa : ea              >            nop
1dab : ea              >            nop
                       >            tst_a $aa-$44,$ff
1dac : 08              >            php         ;save flags
1dad : 08              >            php
1dae : c966            >            cmp #$aa-$44     ;test result
                       >            trap_ne
1db0 : f003            >        beq skip0844
                       >        trap            ;failed not equal (non zero)
1db2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1db5 :                 >skip0844
                       >
1db5 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1db6 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1db8 : f003            >        beq skip0847
                       >        trap            ;failed not equal (non zero)
1dba : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1dbd :                 >skip0847
                       >
1dbd : 28              >            plp         ;restore status
                       >
1dbe : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1dc0 : f003            >        beq skip0849
                       >        trap            ;failed not equal (non zero)
1dc2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1dc5 :                 >skip0849
                       >
1dc5 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1dc7 : f003            >        beq skip0851
                       >        trap            ;failed not equal (non zero)
1dc9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1dcc :                 >skip0851
                       >
                        
                                nop_test $54,2
1dcc : a042            >            ldy #$42
1dce : a202            >            ldx #4-2
1dd0 : 54              >            db  $54          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1dd1 : c8              >            iny
1dd2 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1dd3 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1dd4 : f003            >        beq skip0854
                       >        trap            ;failed not equal (non zero)
1dd6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1dd9 :                 >skip0854
                       >
                       >            set_a $ff-$54,0
                       >            load_flag 0
1dd9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1ddb : 48              >            pha         ;use stack to load status
1ddc : a9ab            >            lda #$ff-$54     ;precharge accu
1dde : 28              >            plp
                       >
1ddf : 54              >            db  $54          ;test nop integrity - flags off
1de0 : ea              >            nop
1de1 : ea              >            nop
                       >            tst_a $ff-$54,0
1de2 : 08              >            php         ;save flags
1de3 : 08              >            php
1de4 : c9ab            >            cmp #$ff-$54     ;test result
                       >            trap_ne
1de6 : f003            >        beq skip0859
                       >        trap            ;failed not equal (non zero)
1de8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1deb :                 >skip0859
                       >
1deb : 68              >            pla         ;load status
                       >            cmp_flag 0
1dec : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1dee : f003            >        beq skip0862
                       >        trap            ;failed not equal (non zero)
1df0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1df3 :                 >skip0862
                       >
1df3 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$54,$ff
                       >            load_flag $ff
1df4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1df6 : 48              >            pha         ;use stack to load status
1df7 : a956            >            lda #$aa-$54     ;precharge accu
1df9 : 28              >            plp
                       >
1dfa : 54              >            db  $54          ;test nop integrity - flags on
1dfb : ea              >            nop
1dfc : ea              >            nop
                       >            tst_a $aa-$54,$ff
1dfd : 08              >            php         ;save flags
1dfe : 08              >            php
1dff : c956            >            cmp #$aa-$54     ;test result
                       >            trap_ne
1e01 : f003            >        beq skip0867
                       >        trap            ;failed not equal (non zero)
1e03 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e06 :                 >skip0867
                       >
1e06 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1e07 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e09 : f003            >        beq skip0870
                       >        trap            ;failed not equal (non zero)
1e0b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e0e :                 >skip0870
                       >
1e0e : 28              >            plp         ;restore status
                       >
1e0f : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1e11 : f003            >        beq skip0872
                       >        trap            ;failed not equal (non zero)
1e13 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e16 :                 >skip0872
                       >
1e16 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1e18 : f003            >        beq skip0874
                       >        trap            ;failed not equal (non zero)
1e1a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e1d :                 >skip0874
                       >
                        
                                nop_test $d4,2
1e1d : a042            >            ldy #$42
1e1f : a202            >            ldx #4-2
1e21 : d4              >            db  $d4          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1e22 : c8              >            iny
1e23 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1e24 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1e25 : f003            >        beq skip0877
                       >        trap            ;failed not equal (non zero)
1e27 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e2a :                 >skip0877
                       >
                       >            set_a $ff-$d4,0
                       >            load_flag 0
1e2a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1e2c : 48              >            pha         ;use stack to load status
1e2d : a92b            >            lda #$ff-$d4     ;precharge accu
1e2f : 28              >            plp
                       >
1e30 : d4              >            db  $d4          ;test nop integrity - flags off
1e31 : ea              >            nop
1e32 : ea              >            nop
                       >            tst_a $ff-$d4,0
1e33 : 08              >            php         ;save flags
1e34 : 08              >            php
1e35 : c92b            >            cmp #$ff-$d4     ;test result
                       >            trap_ne
1e37 : f003            >        beq skip0882
                       >        trap            ;failed not equal (non zero)
1e39 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e3c :                 >skip0882
                       >
1e3c : 68              >            pla         ;load status
                       >            cmp_flag 0
1e3d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e3f : f003            >        beq skip0885
                       >        trap            ;failed not equal (non zero)
1e41 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e44 :                 >skip0885
                       >
1e44 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$d4,$ff
                       >            load_flag $ff
1e45 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1e47 : 48              >            pha         ;use stack to load status
1e48 : a9d6            >            lda #$aa-$d4     ;precharge accu
1e4a : 28              >            plp
                       >
1e4b : d4              >            db  $d4          ;test nop integrity - flags on
1e4c : ea              >            nop
1e4d : ea              >            nop
                       >            tst_a $aa-$d4,$ff
1e4e : 08              >            php         ;save flags
1e4f : 08              >            php
1e50 : c9d6            >            cmp #$aa-$d4     ;test result
                       >            trap_ne
1e52 : f003            >        beq skip0890
                       >        trap            ;failed not equal (non zero)
1e54 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e57 :                 >skip0890
                       >
1e57 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1e58 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e5a : f003            >        beq skip0893
                       >        trap            ;failed not equal (non zero)
1e5c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e5f :                 >skip0893
                       >
1e5f : 28              >            plp         ;restore status
                       >
1e60 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1e62 : f003            >        beq skip0895
                       >        trap            ;failed not equal (non zero)
1e64 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e67 :                 >skip0895
                       >
1e67 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1e69 : f003            >        beq skip0897
                       >        trap            ;failed not equal (non zero)
1e6b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e6e :                 >skip0897
                       >
                        
                                nop_test $f4,2
1e6e : a042            >            ldy #$42
1e70 : a202            >            ldx #4-2
1e72 : f4              >            db  $f4          ;test nop length
                       >        if 2 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 2 = 2
1e73 : c8              >            iny
1e74 : ca              >            dex
                       >        endif
                       >        if 2 = 3
                       >            iny
                       >            iny
                       >        endif
1e75 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1e76 : f003            >        beq skip0900
                       >        trap            ;failed not equal (non zero)
1e78 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e7b :                 >skip0900
                       >
                       >            set_a $ff-$f4,0
                       >            load_flag 0
1e7b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1e7d : 48              >            pha         ;use stack to load status
1e7e : a90b            >            lda #$ff-$f4     ;precharge accu
1e80 : 28              >            plp
                       >
1e81 : f4              >            db  $f4          ;test nop integrity - flags off
1e82 : ea              >            nop
1e83 : ea              >            nop
                       >            tst_a $ff-$f4,0
1e84 : 08              >            php         ;save flags
1e85 : 08              >            php
1e86 : c90b            >            cmp #$ff-$f4     ;test result
                       >            trap_ne
1e88 : f003            >        beq skip0905
                       >        trap            ;failed not equal (non zero)
1e8a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e8d :                 >skip0905
                       >
1e8d : 68              >            pla         ;load status
                       >            cmp_flag 0
1e8e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1e90 : f003            >        beq skip0908
                       >        trap            ;failed not equal (non zero)
1e92 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1e95 :                 >skip0908
                       >
1e95 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$f4,$ff
                       >            load_flag $ff
1e96 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1e98 : 48              >            pha         ;use stack to load status
1e99 : a9b6            >            lda #$aa-$f4     ;precharge accu
1e9b : 28              >            plp
                       >
1e9c : f4              >            db  $f4          ;test nop integrity - flags on
1e9d : ea              >            nop
1e9e : ea              >            nop
                       >            tst_a $aa-$f4,$ff
1e9f : 08              >            php         ;save flags
1ea0 : 08              >            php
1ea1 : c9b6            >            cmp #$aa-$f4     ;test result
                       >            trap_ne
1ea3 : f003            >        beq skip0913
                       >        trap            ;failed not equal (non zero)
1ea5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ea8 :                 >skip0913
                       >
1ea8 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1ea9 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1eab : f003            >        beq skip0916
                       >        trap            ;failed not equal (non zero)
1ead : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1eb0 :                 >skip0916
                       >
1eb0 : 28              >            plp         ;restore status
                       >
1eb1 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1eb3 : f003            >        beq skip0918
                       >        trap            ;failed not equal (non zero)
1eb5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1eb8 :                 >skip0918
                       >
1eb8 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1eba : f003            >        beq skip0920
                       >        trap            ;failed not equal (non zero)
1ebc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ebf :                 >skip0920
                       >
                        
                                nop_test $5c,3
1ebf : a042            >            ldy #$42
1ec1 : a201            >            ldx #4-3
1ec3 : 5c              >            db  $5c          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
1ec4 : c8              >            iny
1ec5 : c8              >            iny
                       >        endif
1ec6 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1ec7 : f003            >        beq skip0923
                       >        trap            ;failed not equal (non zero)
1ec9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ecc :                 >skip0923
                       >
                       >            set_a $ff-$5c,0
                       >            load_flag 0
1ecc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1ece : 48              >            pha         ;use stack to load status
1ecf : a9a3            >            lda #$ff-$5c     ;precharge accu
1ed1 : 28              >            plp
                       >
1ed2 : 5c              >            db  $5c          ;test nop integrity - flags off
1ed3 : ea              >            nop
1ed4 : ea              >            nop
                       >            tst_a $ff-$5c,0
1ed5 : 08              >            php         ;save flags
1ed6 : 08              >            php
1ed7 : c9a3            >            cmp #$ff-$5c     ;test result
                       >            trap_ne
1ed9 : f003            >        beq skip0928
                       >        trap            ;failed not equal (non zero)
1edb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ede :                 >skip0928
                       >
1ede : 68              >            pla         ;load status
                       >            cmp_flag 0
1edf : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1ee1 : f003            >        beq skip0931
                       >        trap            ;failed not equal (non zero)
1ee3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ee6 :                 >skip0931
                       >
1ee6 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$5c,$ff
                       >            load_flag $ff
1ee7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1ee9 : 48              >            pha         ;use stack to load status
1eea : a94e            >            lda #$aa-$5c     ;precharge accu
1eec : 28              >            plp
                       >
1eed : 5c              >            db  $5c          ;test nop integrity - flags on
1eee : ea              >            nop
1eef : ea              >            nop
                       >            tst_a $aa-$5c,$ff
1ef0 : 08              >            php         ;save flags
1ef1 : 08              >            php
1ef2 : c94e            >            cmp #$aa-$5c     ;test result
                       >            trap_ne
1ef4 : f003            >        beq skip0936
                       >        trap            ;failed not equal (non zero)
1ef6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ef9 :                 >skip0936
                       >
1ef9 : 68              >            pla         ;load status
                       >            cmp_flag $ff
1efa : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1efc : f003            >        beq skip0939
                       >        trap            ;failed not equal (non zero)
1efe : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f01 :                 >skip0939
                       >
1f01 : 28              >            plp         ;restore status
                       >
1f02 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1f04 : f003            >        beq skip0941
                       >        trap            ;failed not equal (non zero)
1f06 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f09 :                 >skip0941
                       >
1f09 : e000            >            cpx #0
                       >            trap_ne         ;x changed
1f0b : f003            >        beq skip0943
                       >        trap            ;failed not equal (non zero)
1f0d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f10 :                 >skip0943
                       >
                        
                                nop_test $dc,3
1f10 : a042            >            ldy #$42
1f12 : a201            >            ldx #4-3
1f14 : dc              >            db  $dc          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
1f15 : c8              >            iny
1f16 : c8              >            iny
                       >        endif
1f17 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1f18 : f003            >        beq skip0946
                       >        trap            ;failed not equal (non zero)
1f1a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f1d :                 >skip0946
                       >
                       >            set_a $ff-$dc,0
                       >            load_flag 0
1f1d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1f1f : 48              >            pha         ;use stack to load status
1f20 : a923            >            lda #$ff-$dc     ;precharge accu
1f22 : 28              >            plp
                       >
1f23 : dc              >            db  $dc          ;test nop integrity - flags off
1f24 : ea              >            nop
1f25 : ea              >            nop
                       >            tst_a $ff-$dc,0
1f26 : 08              >            php         ;save flags
1f27 : 08              >            php
1f28 : c923            >            cmp #$ff-$dc     ;test result
                       >            trap_ne
1f2a : f003            >        beq skip0951
                       >        trap            ;failed not equal (non zero)
1f2c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f2f :                 >skip0951
                       >
1f2f : 68              >            pla         ;load status
                       >            cmp_flag 0
1f30 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1f32 : f003            >        beq skip0954
                       >        trap            ;failed not equal (non zero)
1f34 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f37 :                 >skip0954
                       >
1f37 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$dc,$ff
                       >            load_flag $ff
1f38 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1f3a : 48              >            pha         ;use stack to load status
1f3b : a9ce            >            lda #$aa-$dc     ;precharge accu
1f3d : 28              >            plp
                       >
1f3e : dc              >            db  $dc          ;test nop integrity - flags on
1f3f : ea              >            nop
1f40 : ea              >            nop
                       >            tst_a $aa-$dc,$ff
1f41 : 08              >            php         ;save flags
1f42 : 08              >            php
1f43 : c9ce            >            cmp #$aa-$dc     ;test result
                       >            trap_ne
1f45 : f003            >        beq skip0959
                       >        trap            ;failed not equal (non zero)
1f47 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f4a :                 >skip0959
                       >
1f4a : 68              >            pla         ;load status
                       >            cmp_flag $ff
1f4b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1f4d : f003            >        beq skip0962
                       >        trap            ;failed not equal (non zero)
1f4f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f52 :                 >skip0962
                       >
1f52 : 28              >            plp         ;restore status
                       >
1f53 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1f55 : f003            >        beq skip0964
                       >        trap            ;failed not equal (non zero)
1f57 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f5a :                 >skip0964
                       >
1f5a : e000            >            cpx #0
                       >            trap_ne         ;x changed
1f5c : f003            >        beq skip0966
                       >        trap            ;failed not equal (non zero)
1f5e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f61 :                 >skip0966
                       >
                        
                                nop_test $fc,3
1f61 : a042            >            ldy #$42
1f63 : a201            >            ldx #4-3
1f65 : fc              >            db  $fc          ;test nop length
                       >        if 3 = 1
                       >            dex
                       >            dex
                       >        endif
                       >        if 3 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 3 = 3
1f66 : c8              >            iny
1f67 : c8              >            iny
                       >        endif
1f68 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1f69 : f003            >        beq skip0969
                       >        trap            ;failed not equal (non zero)
1f6b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f6e :                 >skip0969
                       >
                       >            set_a $ff-$fc,0
                       >            load_flag 0
1f6e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1f70 : 48              >            pha         ;use stack to load status
1f71 : a903            >            lda #$ff-$fc     ;precharge accu
1f73 : 28              >            plp
                       >
1f74 : fc              >            db  $fc          ;test nop integrity - flags off
1f75 : ea              >            nop
1f76 : ea              >            nop
                       >            tst_a $ff-$fc,0
1f77 : 08              >            php         ;save flags
1f78 : 08              >            php
1f79 : c903            >            cmp #$ff-$fc     ;test result
                       >            trap_ne
1f7b : f003            >        beq skip0974
                       >        trap            ;failed not equal (non zero)
1f7d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f80 :                 >skip0974
                       >
1f80 : 68              >            pla         ;load status
                       >            cmp_flag 0
1f81 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1f83 : f003            >        beq skip0977
                       >        trap            ;failed not equal (non zero)
1f85 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f88 :                 >skip0977
                       >
1f88 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$fc,$ff
                       >            load_flag $ff
1f89 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1f8b : 48              >            pha         ;use stack to load status
1f8c : a9ae            >            lda #$aa-$fc     ;precharge accu
1f8e : 28              >            plp
                       >
1f8f : fc              >            db  $fc          ;test nop integrity - flags on
1f90 : ea              >            nop
1f91 : ea              >            nop
                       >            tst_a $aa-$fc,$ff
1f92 : 08              >            php         ;save flags
1f93 : 08              >            php
1f94 : c9ae            >            cmp #$aa-$fc     ;test result
                       >            trap_ne
1f96 : f003            >        beq skip0982
                       >        trap            ;failed not equal (non zero)
1f98 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1f9b :                 >skip0982
                       >
1f9b : 68              >            pla         ;load status
                       >            cmp_flag $ff
1f9c : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1f9e : f003            >        beq skip0985
                       >        trap            ;failed not equal (non zero)
1fa0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1fa3 :                 >skip0985
                       >
1fa3 : 28              >            plp         ;restore status
                       >
1fa4 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1fa6 : f003            >        beq skip0987
                       >        trap            ;failed not equal (non zero)
1fa8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1fab :                 >skip0987
                       >
1fab : e000            >            cpx #0
                       >            trap_ne         ;x changed
1fad : f003            >        beq skip0989
                       >        trap            ;failed not equal (non zero)
1faf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1fb2 :                 >skip0989
                       >
                        
                                nop_test $03,1
1fb2 : a042            >            ldy #$42
1fb4 : a203            >            ldx #4-1
1fb6 : 03              >            db  $03          ;test nop length
                       >        if 1 = 1
1fb7 : ca              >            dex
1fb8 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
1fb9 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
1fba : f003            >        beq skip0992
                       >        trap            ;failed not equal (non zero)
1fbc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1fbf :                 >skip0992
                       >
                       >            set_a $ff-$03,0
                       >            load_flag 0
1fbf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
1fc1 : 48              >            pha         ;use stack to load status
1fc2 : a9fc            >            lda #$ff-$03     ;precharge accu
1fc4 : 28              >            plp
                       >
1fc5 : 03              >            db  $03          ;test nop integrity - flags off
1fc6 : ea              >            nop
1fc7 : ea              >            nop
                       >            tst_a $ff-$03,0
1fc8 : 08              >            php         ;save flags
1fc9 : 08              >            php
1fca : c9fc            >            cmp #$ff-$03     ;test result
                       >            trap_ne
1fcc : f003            >        beq skip0997
                       >        trap            ;failed not equal (non zero)
1fce : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1fd1 :                 >skip0997
                       >
1fd1 : 68              >            pla         ;load status
                       >            cmp_flag 0
1fd2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1fd4 : f003            >        beq skip1000
                       >        trap            ;failed not equal (non zero)
1fd6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1fd9 :                 >skip1000
                       >
1fd9 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$03,$ff
                       >            load_flag $ff
1fda : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
1fdc : 48              >            pha         ;use stack to load status
1fdd : a9a7            >            lda #$aa-$03     ;precharge accu
1fdf : 28              >            plp
                       >
1fe0 : 03              >            db  $03          ;test nop integrity - flags on
1fe1 : ea              >            nop
1fe2 : ea              >            nop
                       >            tst_a $aa-$03,$ff
1fe3 : 08              >            php         ;save flags
1fe4 : 08              >            php
1fe5 : c9a7            >            cmp #$aa-$03     ;test result
                       >            trap_ne
1fe7 : f003            >        beq skip1005
                       >        trap            ;failed not equal (non zero)
1fe9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1fec :                 >skip1005
                       >
1fec : 68              >            pla         ;load status
                       >            cmp_flag $ff
1fed : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
1fef : f003            >        beq skip1008
                       >        trap            ;failed not equal (non zero)
1ff1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ff4 :                 >skip1008
                       >
1ff4 : 28              >            plp         ;restore status
                       >
1ff5 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
1ff7 : f003            >        beq skip1010
                       >        trap            ;failed not equal (non zero)
1ff9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
1ffc :                 >skip1010
                       >
1ffc : e000            >            cpx #0
                       >            trap_ne         ;x changed
1ffe : f003            >        beq skip1012
                       >        trap            ;failed not equal (non zero)
2000 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2003 :                 >skip1012
                       >
                        
                                nop_test $13,1
2003 : a042            >            ldy #$42
2005 : a203            >            ldx #4-1
2007 : 13              >            db  $13          ;test nop length
                       >        if 1 = 1
2008 : ca              >            dex
2009 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
200a : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
200b : f003            >        beq skip1015
                       >        trap            ;failed not equal (non zero)
200d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2010 :                 >skip1015
                       >
                       >            set_a $ff-$13,0
                       >            load_flag 0
2010 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2012 : 48              >            pha         ;use stack to load status
2013 : a9ec            >            lda #$ff-$13     ;precharge accu
2015 : 28              >            plp
                       >
2016 : 13              >            db  $13          ;test nop integrity - flags off
2017 : ea              >            nop
2018 : ea              >            nop
                       >            tst_a $ff-$13,0
2019 : 08              >            php         ;save flags
201a : 08              >            php
201b : c9ec            >            cmp #$ff-$13     ;test result
                       >            trap_ne
201d : f003            >        beq skip1020
                       >        trap            ;failed not equal (non zero)
201f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2022 :                 >skip1020
                       >
2022 : 68              >            pla         ;load status
                       >            cmp_flag 0
2023 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2025 : f003            >        beq skip1023
                       >        trap            ;failed not equal (non zero)
2027 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
202a :                 >skip1023
                       >
202a : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$13,$ff
                       >            load_flag $ff
202b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
202d : 48              >            pha         ;use stack to load status
202e : a997            >            lda #$aa-$13     ;precharge accu
2030 : 28              >            plp
                       >
2031 : 13              >            db  $13          ;test nop integrity - flags on
2032 : ea              >            nop
2033 : ea              >            nop
                       >            tst_a $aa-$13,$ff
2034 : 08              >            php         ;save flags
2035 : 08              >            php
2036 : c997            >            cmp #$aa-$13     ;test result
                       >            trap_ne
2038 : f003            >        beq skip1028
                       >        trap            ;failed not equal (non zero)
203a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
203d :                 >skip1028
                       >
203d : 68              >            pla         ;load status
                       >            cmp_flag $ff
203e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2040 : f003            >        beq skip1031
                       >        trap            ;failed not equal (non zero)
2042 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2045 :                 >skip1031
                       >
2045 : 28              >            plp         ;restore status
                       >
2046 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2048 : f003            >        beq skip1033
                       >        trap            ;failed not equal (non zero)
204a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
204d :                 >skip1033
                       >
204d : e000            >            cpx #0
                       >            trap_ne         ;x changed
204f : f003            >        beq skip1035
                       >        trap            ;failed not equal (non zero)
2051 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2054 :                 >skip1035
                       >
                        
                                nop_test $23,1
2054 : a042            >            ldy #$42
2056 : a203            >            ldx #4-1
2058 : 23              >            db  $23          ;test nop length
                       >        if 1 = 1
2059 : ca              >            dex
205a : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
205b : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
205c : f003            >        beq skip1038
                       >        trap            ;failed not equal (non zero)
205e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2061 :                 >skip1038
                       >
                       >            set_a $ff-$23,0
                       >            load_flag 0
2061 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2063 : 48              >            pha         ;use stack to load status
2064 : a9dc            >            lda #$ff-$23     ;precharge accu
2066 : 28              >            plp
                       >
2067 : 23              >            db  $23          ;test nop integrity - flags off
2068 : ea              >            nop
2069 : ea              >            nop
                       >            tst_a $ff-$23,0
206a : 08              >            php         ;save flags
206b : 08              >            php
206c : c9dc            >            cmp #$ff-$23     ;test result
                       >            trap_ne
206e : f003            >        beq skip1043
                       >        trap            ;failed not equal (non zero)
2070 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2073 :                 >skip1043
                       >
2073 : 68              >            pla         ;load status
                       >            cmp_flag 0
2074 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2076 : f003            >        beq skip1046
                       >        trap            ;failed not equal (non zero)
2078 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
207b :                 >skip1046
                       >
207b : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$23,$ff
                       >            load_flag $ff
207c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
207e : 48              >            pha         ;use stack to load status
207f : a987            >            lda #$aa-$23     ;precharge accu
2081 : 28              >            plp
                       >
2082 : 23              >            db  $23          ;test nop integrity - flags on
2083 : ea              >            nop
2084 : ea              >            nop
                       >            tst_a $aa-$23,$ff
2085 : 08              >            php         ;save flags
2086 : 08              >            php
2087 : c987            >            cmp #$aa-$23     ;test result
                       >            trap_ne
2089 : f003            >        beq skip1051
                       >        trap            ;failed not equal (non zero)
208b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
208e :                 >skip1051
                       >
208e : 68              >            pla         ;load status
                       >            cmp_flag $ff
208f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2091 : f003            >        beq skip1054
                       >        trap            ;failed not equal (non zero)
2093 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2096 :                 >skip1054
                       >
2096 : 28              >            plp         ;restore status
                       >
2097 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2099 : f003            >        beq skip1056
                       >        trap            ;failed not equal (non zero)
209b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
209e :                 >skip1056
                       >
209e : e000            >            cpx #0
                       >            trap_ne         ;x changed
20a0 : f003            >        beq skip1058
                       >        trap            ;failed not equal (non zero)
20a2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20a5 :                 >skip1058
                       >
                        
                                nop_test $33,1
20a5 : a042            >            ldy #$42
20a7 : a203            >            ldx #4-1
20a9 : 33              >            db  $33          ;test nop length
                       >        if 1 = 1
20aa : ca              >            dex
20ab : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
20ac : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
20ad : f003            >        beq skip1061
                       >        trap            ;failed not equal (non zero)
20af : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20b2 :                 >skip1061
                       >
                       >            set_a $ff-$33,0
                       >            load_flag 0
20b2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
20b4 : 48              >            pha         ;use stack to load status
20b5 : a9cc            >            lda #$ff-$33     ;precharge accu
20b7 : 28              >            plp
                       >
20b8 : 33              >            db  $33          ;test nop integrity - flags off
20b9 : ea              >            nop
20ba : ea              >            nop
                       >            tst_a $ff-$33,0
20bb : 08              >            php         ;save flags
20bc : 08              >            php
20bd : c9cc            >            cmp #$ff-$33     ;test result
                       >            trap_ne
20bf : f003            >        beq skip1066
                       >        trap            ;failed not equal (non zero)
20c1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20c4 :                 >skip1066
                       >
20c4 : 68              >            pla         ;load status
                       >            cmp_flag 0
20c5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
20c7 : f003            >        beq skip1069
                       >        trap            ;failed not equal (non zero)
20c9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20cc :                 >skip1069
                       >
20cc : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$33,$ff
                       >            load_flag $ff
20cd : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
20cf : 48              >            pha         ;use stack to load status
20d0 : a977            >            lda #$aa-$33     ;precharge accu
20d2 : 28              >            plp
                       >
20d3 : 33              >            db  $33          ;test nop integrity - flags on
20d4 : ea              >            nop
20d5 : ea              >            nop
                       >            tst_a $aa-$33,$ff
20d6 : 08              >            php         ;save flags
20d7 : 08              >            php
20d8 : c977            >            cmp #$aa-$33     ;test result
                       >            trap_ne
20da : f003            >        beq skip1074
                       >        trap            ;failed not equal (non zero)
20dc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20df :                 >skip1074
                       >
20df : 68              >            pla         ;load status
                       >            cmp_flag $ff
20e0 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
20e2 : f003            >        beq skip1077
                       >        trap            ;failed not equal (non zero)
20e4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20e7 :                 >skip1077
                       >
20e7 : 28              >            plp         ;restore status
                       >
20e8 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
20ea : f003            >        beq skip1079
                       >        trap            ;failed not equal (non zero)
20ec : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20ef :                 >skip1079
                       >
20ef : e000            >            cpx #0
                       >            trap_ne         ;x changed
20f1 : f003            >        beq skip1081
                       >        trap            ;failed not equal (non zero)
20f3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
20f6 :                 >skip1081
                       >
                        
                                nop_test $43,1
20f6 : a042            >            ldy #$42
20f8 : a203            >            ldx #4-1
20fa : 43              >            db  $43          ;test nop length
                       >        if 1 = 1
20fb : ca              >            dex
20fc : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
20fd : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
20fe : f003            >        beq skip1084
                       >        trap            ;failed not equal (non zero)
2100 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2103 :                 >skip1084
                       >
                       >            set_a $ff-$43,0
                       >            load_flag 0
2103 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2105 : 48              >            pha         ;use stack to load status
2106 : a9bc            >            lda #$ff-$43     ;precharge accu
2108 : 28              >            plp
                       >
2109 : 43              >            db  $43          ;test nop integrity - flags off
210a : ea              >            nop
210b : ea              >            nop
                       >            tst_a $ff-$43,0
210c : 08              >            php         ;save flags
210d : 08              >            php
210e : c9bc            >            cmp #$ff-$43     ;test result
                       >            trap_ne
2110 : f003            >        beq skip1089
                       >        trap            ;failed not equal (non zero)
2112 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2115 :                 >skip1089
                       >
2115 : 68              >            pla         ;load status
                       >            cmp_flag 0
2116 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2118 : f003            >        beq skip1092
                       >        trap            ;failed not equal (non zero)
211a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
211d :                 >skip1092
                       >
211d : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$43,$ff
                       >            load_flag $ff
211e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2120 : 48              >            pha         ;use stack to load status
2121 : a967            >            lda #$aa-$43     ;precharge accu
2123 : 28              >            plp
                       >
2124 : 43              >            db  $43          ;test nop integrity - flags on
2125 : ea              >            nop
2126 : ea              >            nop
                       >            tst_a $aa-$43,$ff
2127 : 08              >            php         ;save flags
2128 : 08              >            php
2129 : c967            >            cmp #$aa-$43     ;test result
                       >            trap_ne
212b : f003            >        beq skip1097
                       >        trap            ;failed not equal (non zero)
212d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2130 :                 >skip1097
                       >
2130 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2131 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2133 : f003            >        beq skip1100
                       >        trap            ;failed not equal (non zero)
2135 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2138 :                 >skip1100
                       >
2138 : 28              >            plp         ;restore status
                       >
2139 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
213b : f003            >        beq skip1102
                       >        trap            ;failed not equal (non zero)
213d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2140 :                 >skip1102
                       >
2140 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2142 : f003            >        beq skip1104
                       >        trap            ;failed not equal (non zero)
2144 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2147 :                 >skip1104
                       >
                        
                                nop_test $53,1
2147 : a042            >            ldy #$42
2149 : a203            >            ldx #4-1
214b : 53              >            db  $53          ;test nop length
                       >        if 1 = 1
214c : ca              >            dex
214d : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
214e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
214f : f003            >        beq skip1107
                       >        trap            ;failed not equal (non zero)
2151 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2154 :                 >skip1107
                       >
                       >            set_a $ff-$53,0
                       >            load_flag 0
2154 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2156 : 48              >            pha         ;use stack to load status
2157 : a9ac            >            lda #$ff-$53     ;precharge accu
2159 : 28              >            plp
                       >
215a : 53              >            db  $53          ;test nop integrity - flags off
215b : ea              >            nop
215c : ea              >            nop
                       >            tst_a $ff-$53,0
215d : 08              >            php         ;save flags
215e : 08              >            php
215f : c9ac            >            cmp #$ff-$53     ;test result
                       >            trap_ne
2161 : f003            >        beq skip1112
                       >        trap            ;failed not equal (non zero)
2163 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2166 :                 >skip1112
                       >
2166 : 68              >            pla         ;load status
                       >            cmp_flag 0
2167 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2169 : f003            >        beq skip1115
                       >        trap            ;failed not equal (non zero)
216b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
216e :                 >skip1115
                       >
216e : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$53,$ff
                       >            load_flag $ff
216f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2171 : 48              >            pha         ;use stack to load status
2172 : a957            >            lda #$aa-$53     ;precharge accu
2174 : 28              >            plp
                       >
2175 : 53              >            db  $53          ;test nop integrity - flags on
2176 : ea              >            nop
2177 : ea              >            nop
                       >            tst_a $aa-$53,$ff
2178 : 08              >            php         ;save flags
2179 : 08              >            php
217a : c957            >            cmp #$aa-$53     ;test result
                       >            trap_ne
217c : f003            >        beq skip1120
                       >        trap            ;failed not equal (non zero)
217e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2181 :                 >skip1120
                       >
2181 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2182 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2184 : f003            >        beq skip1123
                       >        trap            ;failed not equal (non zero)
2186 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2189 :                 >skip1123
                       >
2189 : 28              >            plp         ;restore status
                       >
218a : c042            >            cpy #$42
                       >            trap_ne         ;y changed
218c : f003            >        beq skip1125
                       >        trap            ;failed not equal (non zero)
218e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2191 :                 >skip1125
                       >
2191 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2193 : f003            >        beq skip1127
                       >        trap            ;failed not equal (non zero)
2195 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2198 :                 >skip1127
                       >
                        
                                nop_test $63,1
2198 : a042            >            ldy #$42
219a : a203            >            ldx #4-1
219c : 63              >            db  $63          ;test nop length
                       >        if 1 = 1
219d : ca              >            dex
219e : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
219f : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
21a0 : f003            >        beq skip1130
                       >        trap            ;failed not equal (non zero)
21a2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21a5 :                 >skip1130
                       >
                       >            set_a $ff-$63,0
                       >            load_flag 0
21a5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
21a7 : 48              >            pha         ;use stack to load status
21a8 : a99c            >            lda #$ff-$63     ;precharge accu
21aa : 28              >            plp
                       >
21ab : 63              >            db  $63          ;test nop integrity - flags off
21ac : ea              >            nop
21ad : ea              >            nop
                       >            tst_a $ff-$63,0
21ae : 08              >            php         ;save flags
21af : 08              >            php
21b0 : c99c            >            cmp #$ff-$63     ;test result
                       >            trap_ne
21b2 : f003            >        beq skip1135
                       >        trap            ;failed not equal (non zero)
21b4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21b7 :                 >skip1135
                       >
21b7 : 68              >            pla         ;load status
                       >            cmp_flag 0
21b8 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
21ba : f003            >        beq skip1138
                       >        trap            ;failed not equal (non zero)
21bc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21bf :                 >skip1138
                       >
21bf : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$63,$ff
                       >            load_flag $ff
21c0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
21c2 : 48              >            pha         ;use stack to load status
21c3 : a947            >            lda #$aa-$63     ;precharge accu
21c5 : 28              >            plp
                       >
21c6 : 63              >            db  $63          ;test nop integrity - flags on
21c7 : ea              >            nop
21c8 : ea              >            nop
                       >            tst_a $aa-$63,$ff
21c9 : 08              >            php         ;save flags
21ca : 08              >            php
21cb : c947            >            cmp #$aa-$63     ;test result
                       >            trap_ne
21cd : f003            >        beq skip1143
                       >        trap            ;failed not equal (non zero)
21cf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21d2 :                 >skip1143
                       >
21d2 : 68              >            pla         ;load status
                       >            cmp_flag $ff
21d3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
21d5 : f003            >        beq skip1146
                       >        trap            ;failed not equal (non zero)
21d7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21da :                 >skip1146
                       >
21da : 28              >            plp         ;restore status
                       >
21db : c042            >            cpy #$42
                       >            trap_ne         ;y changed
21dd : f003            >        beq skip1148
                       >        trap            ;failed not equal (non zero)
21df : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21e2 :                 >skip1148
                       >
21e2 : e000            >            cpx #0
                       >            trap_ne         ;x changed
21e4 : f003            >        beq skip1150
                       >        trap            ;failed not equal (non zero)
21e6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21e9 :                 >skip1150
                       >
                        
                                nop_test $73,1
21e9 : a042            >            ldy #$42
21eb : a203            >            ldx #4-1
21ed : 73              >            db  $73          ;test nop length
                       >        if 1 = 1
21ee : ca              >            dex
21ef : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
21f0 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
21f1 : f003            >        beq skip1153
                       >        trap            ;failed not equal (non zero)
21f3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
21f6 :                 >skip1153
                       >
                       >            set_a $ff-$73,0
                       >            load_flag 0
21f6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
21f8 : 48              >            pha         ;use stack to load status
21f9 : a98c            >            lda #$ff-$73     ;precharge accu
21fb : 28              >            plp
                       >
21fc : 73              >            db  $73          ;test nop integrity - flags off
21fd : ea              >            nop
21fe : ea              >            nop
                       >            tst_a $ff-$73,0
21ff : 08              >            php         ;save flags
2200 : 08              >            php
2201 : c98c            >            cmp #$ff-$73     ;test result
                       >            trap_ne
2203 : f003            >        beq skip1158
                       >        trap            ;failed not equal (non zero)
2205 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2208 :                 >skip1158
                       >
2208 : 68              >            pla         ;load status
                       >            cmp_flag 0
2209 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
220b : f003            >        beq skip1161
                       >        trap            ;failed not equal (non zero)
220d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2210 :                 >skip1161
                       >
2210 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$73,$ff
                       >            load_flag $ff
2211 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2213 : 48              >            pha         ;use stack to load status
2214 : a937            >            lda #$aa-$73     ;precharge accu
2216 : 28              >            plp
                       >
2217 : 73              >            db  $73          ;test nop integrity - flags on
2218 : ea              >            nop
2219 : ea              >            nop
                       >            tst_a $aa-$73,$ff
221a : 08              >            php         ;save flags
221b : 08              >            php
221c : c937            >            cmp #$aa-$73     ;test result
                       >            trap_ne
221e : f003            >        beq skip1166
                       >        trap            ;failed not equal (non zero)
2220 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2223 :                 >skip1166
                       >
2223 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2224 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2226 : f003            >        beq skip1169
                       >        trap            ;failed not equal (non zero)
2228 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
222b :                 >skip1169
                       >
222b : 28              >            plp         ;restore status
                       >
222c : c042            >            cpy #$42
                       >            trap_ne         ;y changed
222e : f003            >        beq skip1171
                       >        trap            ;failed not equal (non zero)
2230 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2233 :                 >skip1171
                       >
2233 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2235 : f003            >        beq skip1173
                       >        trap            ;failed not equal (non zero)
2237 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
223a :                 >skip1173
                       >
                        
                                nop_test $83,1
223a : a042            >            ldy #$42
223c : a203            >            ldx #4-1
223e : 83              >            db  $83          ;test nop length
                       >        if 1 = 1
223f : ca              >            dex
2240 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2241 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2242 : f003            >        beq skip1176
                       >        trap            ;failed not equal (non zero)
2244 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2247 :                 >skip1176
                       >
                       >            set_a $ff-$83,0
                       >            load_flag 0
2247 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2249 : 48              >            pha         ;use stack to load status
224a : a97c            >            lda #$ff-$83     ;precharge accu
224c : 28              >            plp
                       >
224d : 83              >            db  $83          ;test nop integrity - flags off
224e : ea              >            nop
224f : ea              >            nop
                       >            tst_a $ff-$83,0
2250 : 08              >            php         ;save flags
2251 : 08              >            php
2252 : c97c            >            cmp #$ff-$83     ;test result
                       >            trap_ne
2254 : f003            >        beq skip1181
                       >        trap            ;failed not equal (non zero)
2256 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2259 :                 >skip1181
                       >
2259 : 68              >            pla         ;load status
                       >            cmp_flag 0
225a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
225c : f003            >        beq skip1184
                       >        trap            ;failed not equal (non zero)
225e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2261 :                 >skip1184
                       >
2261 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$83,$ff
                       >            load_flag $ff
2262 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2264 : 48              >            pha         ;use stack to load status
2265 : a927            >            lda #$aa-$83     ;precharge accu
2267 : 28              >            plp
                       >
2268 : 83              >            db  $83          ;test nop integrity - flags on
2269 : ea              >            nop
226a : ea              >            nop
                       >            tst_a $aa-$83,$ff
226b : 08              >            php         ;save flags
226c : 08              >            php
226d : c927            >            cmp #$aa-$83     ;test result
                       >            trap_ne
226f : f003            >        beq skip1189
                       >        trap            ;failed not equal (non zero)
2271 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2274 :                 >skip1189
                       >
2274 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2275 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2277 : f003            >        beq skip1192
                       >        trap            ;failed not equal (non zero)
2279 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
227c :                 >skip1192
                       >
227c : 28              >            plp         ;restore status
                       >
227d : c042            >            cpy #$42
                       >            trap_ne         ;y changed
227f : f003            >        beq skip1194
                       >        trap            ;failed not equal (non zero)
2281 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2284 :                 >skip1194
                       >
2284 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2286 : f003            >        beq skip1196
                       >        trap            ;failed not equal (non zero)
2288 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
228b :                 >skip1196
                       >
                        
                                nop_test $93,1
228b : a042            >            ldy #$42
228d : a203            >            ldx #4-1
228f : 93              >            db  $93          ;test nop length
                       >        if 1 = 1
2290 : ca              >            dex
2291 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2292 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2293 : f003            >        beq skip1199
                       >        trap            ;failed not equal (non zero)
2295 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2298 :                 >skip1199
                       >
                       >            set_a $ff-$93,0
                       >            load_flag 0
2298 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
229a : 48              >            pha         ;use stack to load status
229b : a96c            >            lda #$ff-$93     ;precharge accu
229d : 28              >            plp
                       >
229e : 93              >            db  $93          ;test nop integrity - flags off
229f : ea              >            nop
22a0 : ea              >            nop
                       >            tst_a $ff-$93,0
22a1 : 08              >            php         ;save flags
22a2 : 08              >            php
22a3 : c96c            >            cmp #$ff-$93     ;test result
                       >            trap_ne
22a5 : f003            >        beq skip1204
                       >        trap            ;failed not equal (non zero)
22a7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22aa :                 >skip1204
                       >
22aa : 68              >            pla         ;load status
                       >            cmp_flag 0
22ab : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
22ad : f003            >        beq skip1207
                       >        trap            ;failed not equal (non zero)
22af : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22b2 :                 >skip1207
                       >
22b2 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$93,$ff
                       >            load_flag $ff
22b3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
22b5 : 48              >            pha         ;use stack to load status
22b6 : a917            >            lda #$aa-$93     ;precharge accu
22b8 : 28              >            plp
                       >
22b9 : 93              >            db  $93          ;test nop integrity - flags on
22ba : ea              >            nop
22bb : ea              >            nop
                       >            tst_a $aa-$93,$ff
22bc : 08              >            php         ;save flags
22bd : 08              >            php
22be : c917            >            cmp #$aa-$93     ;test result
                       >            trap_ne
22c0 : f003            >        beq skip1212
                       >        trap            ;failed not equal (non zero)
22c2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22c5 :                 >skip1212
                       >
22c5 : 68              >            pla         ;load status
                       >            cmp_flag $ff
22c6 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
22c8 : f003            >        beq skip1215
                       >        trap            ;failed not equal (non zero)
22ca : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22cd :                 >skip1215
                       >
22cd : 28              >            plp         ;restore status
                       >
22ce : c042            >            cpy #$42
                       >            trap_ne         ;y changed
22d0 : f003            >        beq skip1217
                       >        trap            ;failed not equal (non zero)
22d2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22d5 :                 >skip1217
                       >
22d5 : e000            >            cpx #0
                       >            trap_ne         ;x changed
22d7 : f003            >        beq skip1219
                       >        trap            ;failed not equal (non zero)
22d9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22dc :                 >skip1219
                       >
                        
                                nop_test $a3,1
22dc : a042            >            ldy #$42
22de : a203            >            ldx #4-1
22e0 : a3              >            db  $a3          ;test nop length
                       >        if 1 = 1
22e1 : ca              >            dex
22e2 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
22e3 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
22e4 : f003            >        beq skip1222
                       >        trap            ;failed not equal (non zero)
22e6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22e9 :                 >skip1222
                       >
                       >            set_a $ff-$a3,0
                       >            load_flag 0
22e9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
22eb : 48              >            pha         ;use stack to load status
22ec : a95c            >            lda #$ff-$a3     ;precharge accu
22ee : 28              >            plp
                       >
22ef : a3              >            db  $a3          ;test nop integrity - flags off
22f0 : ea              >            nop
22f1 : ea              >            nop
                       >            tst_a $ff-$a3,0
22f2 : 08              >            php         ;save flags
22f3 : 08              >            php
22f4 : c95c            >            cmp #$ff-$a3     ;test result
                       >            trap_ne
22f6 : f003            >        beq skip1227
                       >        trap            ;failed not equal (non zero)
22f8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
22fb :                 >skip1227
                       >
22fb : 68              >            pla         ;load status
                       >            cmp_flag 0
22fc : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
22fe : f003            >        beq skip1230
                       >        trap            ;failed not equal (non zero)
2300 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2303 :                 >skip1230
                       >
2303 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$a3,$ff
                       >            load_flag $ff
2304 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2306 : 48              >            pha         ;use stack to load status
2307 : a907            >            lda #$aa-$a3     ;precharge accu
2309 : 28              >            plp
                       >
230a : a3              >            db  $a3          ;test nop integrity - flags on
230b : ea              >            nop
230c : ea              >            nop
                       >            tst_a $aa-$a3,$ff
230d : 08              >            php         ;save flags
230e : 08              >            php
230f : c907            >            cmp #$aa-$a3     ;test result
                       >            trap_ne
2311 : f003            >        beq skip1235
                       >        trap            ;failed not equal (non zero)
2313 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2316 :                 >skip1235
                       >
2316 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2317 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2319 : f003            >        beq skip1238
                       >        trap            ;failed not equal (non zero)
231b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
231e :                 >skip1238
                       >
231e : 28              >            plp         ;restore status
                       >
231f : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2321 : f003            >        beq skip1240
                       >        trap            ;failed not equal (non zero)
2323 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2326 :                 >skip1240
                       >
2326 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2328 : f003            >        beq skip1242
                       >        trap            ;failed not equal (non zero)
232a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
232d :                 >skip1242
                       >
                        
                                nop_test $b3,1
232d : a042            >            ldy #$42
232f : a203            >            ldx #4-1
2331 : b3              >            db  $b3          ;test nop length
                       >        if 1 = 1
2332 : ca              >            dex
2333 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2334 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2335 : f003            >        beq skip1245
                       >        trap            ;failed not equal (non zero)
2337 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
233a :                 >skip1245
                       >
                       >            set_a $ff-$b3,0
                       >            load_flag 0
233a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
233c : 48              >            pha         ;use stack to load status
233d : a94c            >            lda #$ff-$b3     ;precharge accu
233f : 28              >            plp
                       >
2340 : b3              >            db  $b3          ;test nop integrity - flags off
2341 : ea              >            nop
2342 : ea              >            nop
                       >            tst_a $ff-$b3,0
2343 : 08              >            php         ;save flags
2344 : 08              >            php
2345 : c94c            >            cmp #$ff-$b3     ;test result
                       >            trap_ne
2347 : f003            >        beq skip1250
                       >        trap            ;failed not equal (non zero)
2349 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
234c :                 >skip1250
                       >
234c : 68              >            pla         ;load status
                       >            cmp_flag 0
234d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
234f : f003            >        beq skip1253
                       >        trap            ;failed not equal (non zero)
2351 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2354 :                 >skip1253
                       >
2354 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$b3,$ff
                       >            load_flag $ff
2355 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2357 : 48              >            pha         ;use stack to load status
2358 : a9f7            >            lda #$aa-$b3     ;precharge accu
235a : 28              >            plp
                       >
235b : b3              >            db  $b3          ;test nop integrity - flags on
235c : ea              >            nop
235d : ea              >            nop
                       >            tst_a $aa-$b3,$ff
235e : 08              >            php         ;save flags
235f : 08              >            php
2360 : c9f7            >            cmp #$aa-$b3     ;test result
                       >            trap_ne
2362 : f003            >        beq skip1258
                       >        trap            ;failed not equal (non zero)
2364 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2367 :                 >skip1258
                       >
2367 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2368 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
236a : f003            >        beq skip1261
                       >        trap            ;failed not equal (non zero)
236c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
236f :                 >skip1261
                       >
236f : 28              >            plp         ;restore status
                       >
2370 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2372 : f003            >        beq skip1263
                       >        trap            ;failed not equal (non zero)
2374 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2377 :                 >skip1263
                       >
2377 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2379 : f003            >        beq skip1265
                       >        trap            ;failed not equal (non zero)
237b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
237e :                 >skip1265
                       >
                        
                                nop_test $c3,1
237e : a042            >            ldy #$42
2380 : a203            >            ldx #4-1
2382 : c3              >            db  $c3          ;test nop length
                       >        if 1 = 1
2383 : ca              >            dex
2384 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2385 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2386 : f003            >        beq skip1268
                       >        trap            ;failed not equal (non zero)
2388 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
238b :                 >skip1268
                       >
                       >            set_a $ff-$c3,0
                       >            load_flag 0
238b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
238d : 48              >            pha         ;use stack to load status
238e : a93c            >            lda #$ff-$c3     ;precharge accu
2390 : 28              >            plp
                       >
2391 : c3              >            db  $c3          ;test nop integrity - flags off
2392 : ea              >            nop
2393 : ea              >            nop
                       >            tst_a $ff-$c3,0
2394 : 08              >            php         ;save flags
2395 : 08              >            php
2396 : c93c            >            cmp #$ff-$c3     ;test result
                       >            trap_ne
2398 : f003            >        beq skip1273
                       >        trap            ;failed not equal (non zero)
239a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
239d :                 >skip1273
                       >
239d : 68              >            pla         ;load status
                       >            cmp_flag 0
239e : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
23a0 : f003            >        beq skip1276
                       >        trap            ;failed not equal (non zero)
23a2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23a5 :                 >skip1276
                       >
23a5 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$c3,$ff
                       >            load_flag $ff
23a6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
23a8 : 48              >            pha         ;use stack to load status
23a9 : a9e7            >            lda #$aa-$c3     ;precharge accu
23ab : 28              >            plp
                       >
23ac : c3              >            db  $c3          ;test nop integrity - flags on
23ad : ea              >            nop
23ae : ea              >            nop
                       >            tst_a $aa-$c3,$ff
23af : 08              >            php         ;save flags
23b0 : 08              >            php
23b1 : c9e7            >            cmp #$aa-$c3     ;test result
                       >            trap_ne
23b3 : f003            >        beq skip1281
                       >        trap            ;failed not equal (non zero)
23b5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23b8 :                 >skip1281
                       >
23b8 : 68              >            pla         ;load status
                       >            cmp_flag $ff
23b9 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
23bb : f003            >        beq skip1284
                       >        trap            ;failed not equal (non zero)
23bd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23c0 :                 >skip1284
                       >
23c0 : 28              >            plp         ;restore status
                       >
23c1 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
23c3 : f003            >        beq skip1286
                       >        trap            ;failed not equal (non zero)
23c5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23c8 :                 >skip1286
                       >
23c8 : e000            >            cpx #0
                       >            trap_ne         ;x changed
23ca : f003            >        beq skip1288
                       >        trap            ;failed not equal (non zero)
23cc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23cf :                 >skip1288
                       >
                        
                                nop_test $d3,1
23cf : a042            >            ldy #$42
23d1 : a203            >            ldx #4-1
23d3 : d3              >            db  $d3          ;test nop length
                       >        if 1 = 1
23d4 : ca              >            dex
23d5 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
23d6 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
23d7 : f003            >        beq skip1291
                       >        trap            ;failed not equal (non zero)
23d9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23dc :                 >skip1291
                       >
                       >            set_a $ff-$d3,0
                       >            load_flag 0
23dc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
23de : 48              >            pha         ;use stack to load status
23df : a92c            >            lda #$ff-$d3     ;precharge accu
23e1 : 28              >            plp
                       >
23e2 : d3              >            db  $d3          ;test nop integrity - flags off
23e3 : ea              >            nop
23e4 : ea              >            nop
                       >            tst_a $ff-$d3,0
23e5 : 08              >            php         ;save flags
23e6 : 08              >            php
23e7 : c92c            >            cmp #$ff-$d3     ;test result
                       >            trap_ne
23e9 : f003            >        beq skip1296
                       >        trap            ;failed not equal (non zero)
23eb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23ee :                 >skip1296
                       >
23ee : 68              >            pla         ;load status
                       >            cmp_flag 0
23ef : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
23f1 : f003            >        beq skip1299
                       >        trap            ;failed not equal (non zero)
23f3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
23f6 :                 >skip1299
                       >
23f6 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$d3,$ff
                       >            load_flag $ff
23f7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
23f9 : 48              >            pha         ;use stack to load status
23fa : a9d7            >            lda #$aa-$d3     ;precharge accu
23fc : 28              >            plp
                       >
23fd : d3              >            db  $d3          ;test nop integrity - flags on
23fe : ea              >            nop
23ff : ea              >            nop
                       >            tst_a $aa-$d3,$ff
2400 : 08              >            php         ;save flags
2401 : 08              >            php
2402 : c9d7            >            cmp #$aa-$d3     ;test result
                       >            trap_ne
2404 : f003            >        beq skip1304
                       >        trap            ;failed not equal (non zero)
2406 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2409 :                 >skip1304
                       >
2409 : 68              >            pla         ;load status
                       >            cmp_flag $ff
240a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
240c : f003            >        beq skip1307
                       >        trap            ;failed not equal (non zero)
240e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2411 :                 >skip1307
                       >
2411 : 28              >            plp         ;restore status
                       >
2412 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2414 : f003            >        beq skip1309
                       >        trap            ;failed not equal (non zero)
2416 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2419 :                 >skip1309
                       >
2419 : e000            >            cpx #0
                       >            trap_ne         ;x changed
241b : f003            >        beq skip1311
                       >        trap            ;failed not equal (non zero)
241d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2420 :                 >skip1311
                       >
                        
                                nop_test $e3,1
2420 : a042            >            ldy #$42
2422 : a203            >            ldx #4-1
2424 : e3              >            db  $e3          ;test nop length
                       >        if 1 = 1
2425 : ca              >            dex
2426 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2427 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2428 : f003            >        beq skip1314
                       >        trap            ;failed not equal (non zero)
242a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
242d :                 >skip1314
                       >
                       >            set_a $ff-$e3,0
                       >            load_flag 0
242d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
242f : 48              >            pha         ;use stack to load status
2430 : a91c            >            lda #$ff-$e3     ;precharge accu
2432 : 28              >            plp
                       >
2433 : e3              >            db  $e3          ;test nop integrity - flags off
2434 : ea              >            nop
2435 : ea              >            nop
                       >            tst_a $ff-$e3,0
2436 : 08              >            php         ;save flags
2437 : 08              >            php
2438 : c91c            >            cmp #$ff-$e3     ;test result
                       >            trap_ne
243a : f003            >        beq skip1319
                       >        trap            ;failed not equal (non zero)
243c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
243f :                 >skip1319
                       >
243f : 68              >            pla         ;load status
                       >            cmp_flag 0
2440 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2442 : f003            >        beq skip1322
                       >        trap            ;failed not equal (non zero)
2444 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2447 :                 >skip1322
                       >
2447 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$e3,$ff
                       >            load_flag $ff
2448 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
244a : 48              >            pha         ;use stack to load status
244b : a9c7            >            lda #$aa-$e3     ;precharge accu
244d : 28              >            plp
                       >
244e : e3              >            db  $e3          ;test nop integrity - flags on
244f : ea              >            nop
2450 : ea              >            nop
                       >            tst_a $aa-$e3,$ff
2451 : 08              >            php         ;save flags
2452 : 08              >            php
2453 : c9c7            >            cmp #$aa-$e3     ;test result
                       >            trap_ne
2455 : f003            >        beq skip1327
                       >        trap            ;failed not equal (non zero)
2457 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
245a :                 >skip1327
                       >
245a : 68              >            pla         ;load status
                       >            cmp_flag $ff
245b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
245d : f003            >        beq skip1330
                       >        trap            ;failed not equal (non zero)
245f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2462 :                 >skip1330
                       >
2462 : 28              >            plp         ;restore status
                       >
2463 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2465 : f003            >        beq skip1332
                       >        trap            ;failed not equal (non zero)
2467 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
246a :                 >skip1332
                       >
246a : e000            >            cpx #0
                       >            trap_ne         ;x changed
246c : f003            >        beq skip1334
                       >        trap            ;failed not equal (non zero)
246e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2471 :                 >skip1334
                       >
                        
                                nop_test $f3,1
2471 : a042            >            ldy #$42
2473 : a203            >            ldx #4-1
2475 : f3              >            db  $f3          ;test nop length
                       >        if 1 = 1
2476 : ca              >            dex
2477 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2478 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2479 : f003            >        beq skip1337
                       >        trap            ;failed not equal (non zero)
247b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
247e :                 >skip1337
                       >
                       >            set_a $ff-$f3,0
                       >            load_flag 0
247e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2480 : 48              >            pha         ;use stack to load status
2481 : a90c            >            lda #$ff-$f3     ;precharge accu
2483 : 28              >            plp
                       >
2484 : f3              >            db  $f3          ;test nop integrity - flags off
2485 : ea              >            nop
2486 : ea              >            nop
                       >            tst_a $ff-$f3,0
2487 : 08              >            php         ;save flags
2488 : 08              >            php
2489 : c90c            >            cmp #$ff-$f3     ;test result
                       >            trap_ne
248b : f003            >        beq skip1342
                       >        trap            ;failed not equal (non zero)
248d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2490 :                 >skip1342
                       >
2490 : 68              >            pla         ;load status
                       >            cmp_flag 0
2491 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2493 : f003            >        beq skip1345
                       >        trap            ;failed not equal (non zero)
2495 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2498 :                 >skip1345
                       >
2498 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$f3,$ff
                       >            load_flag $ff
2499 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
249b : 48              >            pha         ;use stack to load status
249c : a9b7            >            lda #$aa-$f3     ;precharge accu
249e : 28              >            plp
                       >
249f : f3              >            db  $f3          ;test nop integrity - flags on
24a0 : ea              >            nop
24a1 : ea              >            nop
                       >            tst_a $aa-$f3,$ff
24a2 : 08              >            php         ;save flags
24a3 : 08              >            php
24a4 : c9b7            >            cmp #$aa-$f3     ;test result
                       >            trap_ne
24a6 : f003            >        beq skip1350
                       >        trap            ;failed not equal (non zero)
24a8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24ab :                 >skip1350
                       >
24ab : 68              >            pla         ;load status
                       >            cmp_flag $ff
24ac : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
24ae : f003            >        beq skip1353
                       >        trap            ;failed not equal (non zero)
24b0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24b3 :                 >skip1353
                       >
24b3 : 28              >            plp         ;restore status
                       >
24b4 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
24b6 : f003            >        beq skip1355
                       >        trap            ;failed not equal (non zero)
24b8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24bb :                 >skip1355
                       >
24bb : e000            >            cpx #0
                       >            trap_ne         ;x changed
24bd : f003            >        beq skip1357
                       >        trap            ;failed not equal (non zero)
24bf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24c2 :                 >skip1357
                       >
                        
                                nop_test $0b,1
24c2 : a042            >            ldy #$42
24c4 : a203            >            ldx #4-1
24c6 : 0b              >            db  $0b          ;test nop length
                       >        if 1 = 1
24c7 : ca              >            dex
24c8 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
24c9 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
24ca : f003            >        beq skip1360
                       >        trap            ;failed not equal (non zero)
24cc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24cf :                 >skip1360
                       >
                       >            set_a $ff-$0b,0
                       >            load_flag 0
24cf : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
24d1 : 48              >            pha         ;use stack to load status
24d2 : a9f4            >            lda #$ff-$0b     ;precharge accu
24d4 : 28              >            plp
                       >
24d5 : 0b              >            db  $0b          ;test nop integrity - flags off
24d6 : ea              >            nop
24d7 : ea              >            nop
                       >            tst_a $ff-$0b,0
24d8 : 08              >            php         ;save flags
24d9 : 08              >            php
24da : c9f4            >            cmp #$ff-$0b     ;test result
                       >            trap_ne
24dc : f003            >        beq skip1365
                       >        trap            ;failed not equal (non zero)
24de : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24e1 :                 >skip1365
                       >
24e1 : 68              >            pla         ;load status
                       >            cmp_flag 0
24e2 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
24e4 : f003            >        beq skip1368
                       >        trap            ;failed not equal (non zero)
24e6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24e9 :                 >skip1368
                       >
24e9 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$0b,$ff
                       >            load_flag $ff
24ea : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
24ec : 48              >            pha         ;use stack to load status
24ed : a99f            >            lda #$aa-$0b     ;precharge accu
24ef : 28              >            plp
                       >
24f0 : 0b              >            db  $0b          ;test nop integrity - flags on
24f1 : ea              >            nop
24f2 : ea              >            nop
                       >            tst_a $aa-$0b,$ff
24f3 : 08              >            php         ;save flags
24f4 : 08              >            php
24f5 : c99f            >            cmp #$aa-$0b     ;test result
                       >            trap_ne
24f7 : f003            >        beq skip1373
                       >        trap            ;failed not equal (non zero)
24f9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
24fc :                 >skip1373
                       >
24fc : 68              >            pla         ;load status
                       >            cmp_flag $ff
24fd : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
24ff : f003            >        beq skip1376
                       >        trap            ;failed not equal (non zero)
2501 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2504 :                 >skip1376
                       >
2504 : 28              >            plp         ;restore status
                       >
2505 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2507 : f003            >        beq skip1378
                       >        trap            ;failed not equal (non zero)
2509 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
250c :                 >skip1378
                       >
250c : e000            >            cpx #0
                       >            trap_ne         ;x changed
250e : f003            >        beq skip1380
                       >        trap            ;failed not equal (non zero)
2510 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2513 :                 >skip1380
                       >
                        
                                nop_test $1b,1
2513 : a042            >            ldy #$42
2515 : a203            >            ldx #4-1
2517 : 1b              >            db  $1b          ;test nop length
                       >        if 1 = 1
2518 : ca              >            dex
2519 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
251a : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
251b : f003            >        beq skip1383
                       >        trap            ;failed not equal (non zero)
251d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2520 :                 >skip1383
                       >
                       >            set_a $ff-$1b,0
                       >            load_flag 0
2520 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2522 : 48              >            pha         ;use stack to load status
2523 : a9e4            >            lda #$ff-$1b     ;precharge accu
2525 : 28              >            plp
                       >
2526 : 1b              >            db  $1b          ;test nop integrity - flags off
2527 : ea              >            nop
2528 : ea              >            nop
                       >            tst_a $ff-$1b,0
2529 : 08              >            php         ;save flags
252a : 08              >            php
252b : c9e4            >            cmp #$ff-$1b     ;test result
                       >            trap_ne
252d : f003            >        beq skip1388
                       >        trap            ;failed not equal (non zero)
252f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2532 :                 >skip1388
                       >
2532 : 68              >            pla         ;load status
                       >            cmp_flag 0
2533 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2535 : f003            >        beq skip1391
                       >        trap            ;failed not equal (non zero)
2537 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
253a :                 >skip1391
                       >
253a : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$1b,$ff
                       >            load_flag $ff
253b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
253d : 48              >            pha         ;use stack to load status
253e : a98f            >            lda #$aa-$1b     ;precharge accu
2540 : 28              >            plp
                       >
2541 : 1b              >            db  $1b          ;test nop integrity - flags on
2542 : ea              >            nop
2543 : ea              >            nop
                       >            tst_a $aa-$1b,$ff
2544 : 08              >            php         ;save flags
2545 : 08              >            php
2546 : c98f            >            cmp #$aa-$1b     ;test result
                       >            trap_ne
2548 : f003            >        beq skip1396
                       >        trap            ;failed not equal (non zero)
254a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
254d :                 >skip1396
                       >
254d : 68              >            pla         ;load status
                       >            cmp_flag $ff
254e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2550 : f003            >        beq skip1399
                       >        trap            ;failed not equal (non zero)
2552 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2555 :                 >skip1399
                       >
2555 : 28              >            plp         ;restore status
                       >
2556 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2558 : f003            >        beq skip1401
                       >        trap            ;failed not equal (non zero)
255a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
255d :                 >skip1401
                       >
255d : e000            >            cpx #0
                       >            trap_ne         ;x changed
255f : f003            >        beq skip1403
                       >        trap            ;failed not equal (non zero)
2561 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2564 :                 >skip1403
                       >
                        
                                nop_test $2b,1
2564 : a042            >            ldy #$42
2566 : a203            >            ldx #4-1
2568 : 2b              >            db  $2b          ;test nop length
                       >        if 1 = 1
2569 : ca              >            dex
256a : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
256b : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
256c : f003            >        beq skip1406
                       >        trap            ;failed not equal (non zero)
256e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2571 :                 >skip1406
                       >
                       >            set_a $ff-$2b,0
                       >            load_flag 0
2571 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2573 : 48              >            pha         ;use stack to load status
2574 : a9d4            >            lda #$ff-$2b     ;precharge accu
2576 : 28              >            plp
                       >
2577 : 2b              >            db  $2b          ;test nop integrity - flags off
2578 : ea              >            nop
2579 : ea              >            nop
                       >            tst_a $ff-$2b,0
257a : 08              >            php         ;save flags
257b : 08              >            php
257c : c9d4            >            cmp #$ff-$2b     ;test result
                       >            trap_ne
257e : f003            >        beq skip1411
                       >        trap            ;failed not equal (non zero)
2580 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2583 :                 >skip1411
                       >
2583 : 68              >            pla         ;load status
                       >            cmp_flag 0
2584 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2586 : f003            >        beq skip1414
                       >        trap            ;failed not equal (non zero)
2588 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
258b :                 >skip1414
                       >
258b : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$2b,$ff
                       >            load_flag $ff
258c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
258e : 48              >            pha         ;use stack to load status
258f : a97f            >            lda #$aa-$2b     ;precharge accu
2591 : 28              >            plp
                       >
2592 : 2b              >            db  $2b          ;test nop integrity - flags on
2593 : ea              >            nop
2594 : ea              >            nop
                       >            tst_a $aa-$2b,$ff
2595 : 08              >            php         ;save flags
2596 : 08              >            php
2597 : c97f            >            cmp #$aa-$2b     ;test result
                       >            trap_ne
2599 : f003            >        beq skip1419
                       >        trap            ;failed not equal (non zero)
259b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
259e :                 >skip1419
                       >
259e : 68              >            pla         ;load status
                       >            cmp_flag $ff
259f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
25a1 : f003            >        beq skip1422
                       >        trap            ;failed not equal (non zero)
25a3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25a6 :                 >skip1422
                       >
25a6 : 28              >            plp         ;restore status
                       >
25a7 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
25a9 : f003            >        beq skip1424
                       >        trap            ;failed not equal (non zero)
25ab : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25ae :                 >skip1424
                       >
25ae : e000            >            cpx #0
                       >            trap_ne         ;x changed
25b0 : f003            >        beq skip1426
                       >        trap            ;failed not equal (non zero)
25b2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25b5 :                 >skip1426
                       >
                        
                                nop_test $3b,1
25b5 : a042            >            ldy #$42
25b7 : a203            >            ldx #4-1
25b9 : 3b              >            db  $3b          ;test nop length
                       >        if 1 = 1
25ba : ca              >            dex
25bb : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
25bc : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
25bd : f003            >        beq skip1429
                       >        trap            ;failed not equal (non zero)
25bf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25c2 :                 >skip1429
                       >
                       >            set_a $ff-$3b,0
                       >            load_flag 0
25c2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
25c4 : 48              >            pha         ;use stack to load status
25c5 : a9c4            >            lda #$ff-$3b     ;precharge accu
25c7 : 28              >            plp
                       >
25c8 : 3b              >            db  $3b          ;test nop integrity - flags off
25c9 : ea              >            nop
25ca : ea              >            nop
                       >            tst_a $ff-$3b,0
25cb : 08              >            php         ;save flags
25cc : 08              >            php
25cd : c9c4            >            cmp #$ff-$3b     ;test result
                       >            trap_ne
25cf : f003            >        beq skip1434
                       >        trap            ;failed not equal (non zero)
25d1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25d4 :                 >skip1434
                       >
25d4 : 68              >            pla         ;load status
                       >            cmp_flag 0
25d5 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
25d7 : f003            >        beq skip1437
                       >        trap            ;failed not equal (non zero)
25d9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25dc :                 >skip1437
                       >
25dc : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$3b,$ff
                       >            load_flag $ff
25dd : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
25df : 48              >            pha         ;use stack to load status
25e0 : a96f            >            lda #$aa-$3b     ;precharge accu
25e2 : 28              >            plp
                       >
25e3 : 3b              >            db  $3b          ;test nop integrity - flags on
25e4 : ea              >            nop
25e5 : ea              >            nop
                       >            tst_a $aa-$3b,$ff
25e6 : 08              >            php         ;save flags
25e7 : 08              >            php
25e8 : c96f            >            cmp #$aa-$3b     ;test result
                       >            trap_ne
25ea : f003            >        beq skip1442
                       >        trap            ;failed not equal (non zero)
25ec : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25ef :                 >skip1442
                       >
25ef : 68              >            pla         ;load status
                       >            cmp_flag $ff
25f0 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
25f2 : f003            >        beq skip1445
                       >        trap            ;failed not equal (non zero)
25f4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25f7 :                 >skip1445
                       >
25f7 : 28              >            plp         ;restore status
                       >
25f8 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
25fa : f003            >        beq skip1447
                       >        trap            ;failed not equal (non zero)
25fc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
25ff :                 >skip1447
                       >
25ff : e000            >            cpx #0
                       >            trap_ne         ;x changed
2601 : f003            >        beq skip1449
                       >        trap            ;failed not equal (non zero)
2603 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2606 :                 >skip1449
                       >
                        
                                nop_test $4b,1
2606 : a042            >            ldy #$42
2608 : a203            >            ldx #4-1
260a : 4b              >            db  $4b          ;test nop length
                       >        if 1 = 1
260b : ca              >            dex
260c : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
260d : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
260e : f003            >        beq skip1452
                       >        trap            ;failed not equal (non zero)
2610 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2613 :                 >skip1452
                       >
                       >            set_a $ff-$4b,0
                       >            load_flag 0
2613 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2615 : 48              >            pha         ;use stack to load status
2616 : a9b4            >            lda #$ff-$4b     ;precharge accu
2618 : 28              >            plp
                       >
2619 : 4b              >            db  $4b          ;test nop integrity - flags off
261a : ea              >            nop
261b : ea              >            nop
                       >            tst_a $ff-$4b,0
261c : 08              >            php         ;save flags
261d : 08              >            php
261e : c9b4            >            cmp #$ff-$4b     ;test result
                       >            trap_ne
2620 : f003            >        beq skip1457
                       >        trap            ;failed not equal (non zero)
2622 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2625 :                 >skip1457
                       >
2625 : 68              >            pla         ;load status
                       >            cmp_flag 0
2626 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2628 : f003            >        beq skip1460
                       >        trap            ;failed not equal (non zero)
262a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
262d :                 >skip1460
                       >
262d : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$4b,$ff
                       >            load_flag $ff
262e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2630 : 48              >            pha         ;use stack to load status
2631 : a95f            >            lda #$aa-$4b     ;precharge accu
2633 : 28              >            plp
                       >
2634 : 4b              >            db  $4b          ;test nop integrity - flags on
2635 : ea              >            nop
2636 : ea              >            nop
                       >            tst_a $aa-$4b,$ff
2637 : 08              >            php         ;save flags
2638 : 08              >            php
2639 : c95f            >            cmp #$aa-$4b     ;test result
                       >            trap_ne
263b : f003            >        beq skip1465
                       >        trap            ;failed not equal (non zero)
263d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2640 :                 >skip1465
                       >
2640 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2641 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2643 : f003            >        beq skip1468
                       >        trap            ;failed not equal (non zero)
2645 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2648 :                 >skip1468
                       >
2648 : 28              >            plp         ;restore status
                       >
2649 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
264b : f003            >        beq skip1470
                       >        trap            ;failed not equal (non zero)
264d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2650 :                 >skip1470
                       >
2650 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2652 : f003            >        beq skip1472
                       >        trap            ;failed not equal (non zero)
2654 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2657 :                 >skip1472
                       >
                        
                                nop_test $5b,1
2657 : a042            >            ldy #$42
2659 : a203            >            ldx #4-1
265b : 5b              >            db  $5b          ;test nop length
                       >        if 1 = 1
265c : ca              >            dex
265d : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
265e : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
265f : f003            >        beq skip1475
                       >        trap            ;failed not equal (non zero)
2661 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2664 :                 >skip1475
                       >
                       >            set_a $ff-$5b,0
                       >            load_flag 0
2664 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2666 : 48              >            pha         ;use stack to load status
2667 : a9a4            >            lda #$ff-$5b     ;precharge accu
2669 : 28              >            plp
                       >
266a : 5b              >            db  $5b          ;test nop integrity - flags off
266b : ea              >            nop
266c : ea              >            nop
                       >            tst_a $ff-$5b,0
266d : 08              >            php         ;save flags
266e : 08              >            php
266f : c9a4            >            cmp #$ff-$5b     ;test result
                       >            trap_ne
2671 : f003            >        beq skip1480
                       >        trap            ;failed not equal (non zero)
2673 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2676 :                 >skip1480
                       >
2676 : 68              >            pla         ;load status
                       >            cmp_flag 0
2677 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2679 : f003            >        beq skip1483
                       >        trap            ;failed not equal (non zero)
267b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
267e :                 >skip1483
                       >
267e : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$5b,$ff
                       >            load_flag $ff
267f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2681 : 48              >            pha         ;use stack to load status
2682 : a94f            >            lda #$aa-$5b     ;precharge accu
2684 : 28              >            plp
                       >
2685 : 5b              >            db  $5b          ;test nop integrity - flags on
2686 : ea              >            nop
2687 : ea              >            nop
                       >            tst_a $aa-$5b,$ff
2688 : 08              >            php         ;save flags
2689 : 08              >            php
268a : c94f            >            cmp #$aa-$5b     ;test result
                       >            trap_ne
268c : f003            >        beq skip1488
                       >        trap            ;failed not equal (non zero)
268e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2691 :                 >skip1488
                       >
2691 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2692 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2694 : f003            >        beq skip1491
                       >        trap            ;failed not equal (non zero)
2696 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2699 :                 >skip1491
                       >
2699 : 28              >            plp         ;restore status
                       >
269a : c042            >            cpy #$42
                       >            trap_ne         ;y changed
269c : f003            >        beq skip1493
                       >        trap            ;failed not equal (non zero)
269e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26a1 :                 >skip1493
                       >
26a1 : e000            >            cpx #0
                       >            trap_ne         ;x changed
26a3 : f003            >        beq skip1495
                       >        trap            ;failed not equal (non zero)
26a5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26a8 :                 >skip1495
                       >
                        
                                nop_test $6b,1
26a8 : a042            >            ldy #$42
26aa : a203            >            ldx #4-1
26ac : 6b              >            db  $6b          ;test nop length
                       >        if 1 = 1
26ad : ca              >            dex
26ae : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
26af : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
26b0 : f003            >        beq skip1498
                       >        trap            ;failed not equal (non zero)
26b2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26b5 :                 >skip1498
                       >
                       >            set_a $ff-$6b,0
                       >            load_flag 0
26b5 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
26b7 : 48              >            pha         ;use stack to load status
26b8 : a994            >            lda #$ff-$6b     ;precharge accu
26ba : 28              >            plp
                       >
26bb : 6b              >            db  $6b          ;test nop integrity - flags off
26bc : ea              >            nop
26bd : ea              >            nop
                       >            tst_a $ff-$6b,0
26be : 08              >            php         ;save flags
26bf : 08              >            php
26c0 : c994            >            cmp #$ff-$6b     ;test result
                       >            trap_ne
26c2 : f003            >        beq skip1503
                       >        trap            ;failed not equal (non zero)
26c4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26c7 :                 >skip1503
                       >
26c7 : 68              >            pla         ;load status
                       >            cmp_flag 0
26c8 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
26ca : f003            >        beq skip1506
                       >        trap            ;failed not equal (non zero)
26cc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26cf :                 >skip1506
                       >
26cf : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$6b,$ff
                       >            load_flag $ff
26d0 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
26d2 : 48              >            pha         ;use stack to load status
26d3 : a93f            >            lda #$aa-$6b     ;precharge accu
26d5 : 28              >            plp
                       >
26d6 : 6b              >            db  $6b          ;test nop integrity - flags on
26d7 : ea              >            nop
26d8 : ea              >            nop
                       >            tst_a $aa-$6b,$ff
26d9 : 08              >            php         ;save flags
26da : 08              >            php
26db : c93f            >            cmp #$aa-$6b     ;test result
                       >            trap_ne
26dd : f003            >        beq skip1511
                       >        trap            ;failed not equal (non zero)
26df : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26e2 :                 >skip1511
                       >
26e2 : 68              >            pla         ;load status
                       >            cmp_flag $ff
26e3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
26e5 : f003            >        beq skip1514
                       >        trap            ;failed not equal (non zero)
26e7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26ea :                 >skip1514
                       >
26ea : 28              >            plp         ;restore status
                       >
26eb : c042            >            cpy #$42
                       >            trap_ne         ;y changed
26ed : f003            >        beq skip1516
                       >        trap            ;failed not equal (non zero)
26ef : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26f2 :                 >skip1516
                       >
26f2 : e000            >            cpx #0
                       >            trap_ne         ;x changed
26f4 : f003            >        beq skip1518
                       >        trap            ;failed not equal (non zero)
26f6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
26f9 :                 >skip1518
                       >
                        
                                nop_test $7b,1
26f9 : a042            >            ldy #$42
26fb : a203            >            ldx #4-1
26fd : 7b              >            db  $7b          ;test nop length
                       >        if 1 = 1
26fe : ca              >            dex
26ff : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2700 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2701 : f003            >        beq skip1521
                       >        trap            ;failed not equal (non zero)
2703 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2706 :                 >skip1521
                       >
                       >            set_a $ff-$7b,0
                       >            load_flag 0
2706 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2708 : 48              >            pha         ;use stack to load status
2709 : a984            >            lda #$ff-$7b     ;precharge accu
270b : 28              >            plp
                       >
270c : 7b              >            db  $7b          ;test nop integrity - flags off
270d : ea              >            nop
270e : ea              >            nop
                       >            tst_a $ff-$7b,0
270f : 08              >            php         ;save flags
2710 : 08              >            php
2711 : c984            >            cmp #$ff-$7b     ;test result
                       >            trap_ne
2713 : f003            >        beq skip1526
                       >        trap            ;failed not equal (non zero)
2715 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2718 :                 >skip1526
                       >
2718 : 68              >            pla         ;load status
                       >            cmp_flag 0
2719 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
271b : f003            >        beq skip1529
                       >        trap            ;failed not equal (non zero)
271d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2720 :                 >skip1529
                       >
2720 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$7b,$ff
                       >            load_flag $ff
2721 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2723 : 48              >            pha         ;use stack to load status
2724 : a92f            >            lda #$aa-$7b     ;precharge accu
2726 : 28              >            plp
                       >
2727 : 7b              >            db  $7b          ;test nop integrity - flags on
2728 : ea              >            nop
2729 : ea              >            nop
                       >            tst_a $aa-$7b,$ff
272a : 08              >            php         ;save flags
272b : 08              >            php
272c : c92f            >            cmp #$aa-$7b     ;test result
                       >            trap_ne
272e : f003            >        beq skip1534
                       >        trap            ;failed not equal (non zero)
2730 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2733 :                 >skip1534
                       >
2733 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2734 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2736 : f003            >        beq skip1537
                       >        trap            ;failed not equal (non zero)
2738 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
273b :                 >skip1537
                       >
273b : 28              >            plp         ;restore status
                       >
273c : c042            >            cpy #$42
                       >            trap_ne         ;y changed
273e : f003            >        beq skip1539
                       >        trap            ;failed not equal (non zero)
2740 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2743 :                 >skip1539
                       >
2743 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2745 : f003            >        beq skip1541
                       >        trap            ;failed not equal (non zero)
2747 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
274a :                 >skip1541
                       >
                        
                                nop_test $8b,1
274a : a042            >            ldy #$42
274c : a203            >            ldx #4-1
274e : 8b              >            db  $8b          ;test nop length
                       >        if 1 = 1
274f : ca              >            dex
2750 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2751 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2752 : f003            >        beq skip1544
                       >        trap            ;failed not equal (non zero)
2754 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2757 :                 >skip1544
                       >
                       >            set_a $ff-$8b,0
                       >            load_flag 0
2757 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2759 : 48              >            pha         ;use stack to load status
275a : a974            >            lda #$ff-$8b     ;precharge accu
275c : 28              >            plp
                       >
275d : 8b              >            db  $8b          ;test nop integrity - flags off
275e : ea              >            nop
275f : ea              >            nop
                       >            tst_a $ff-$8b,0
2760 : 08              >            php         ;save flags
2761 : 08              >            php
2762 : c974            >            cmp #$ff-$8b     ;test result
                       >            trap_ne
2764 : f003            >        beq skip1549
                       >        trap            ;failed not equal (non zero)
2766 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2769 :                 >skip1549
                       >
2769 : 68              >            pla         ;load status
                       >            cmp_flag 0
276a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
276c : f003            >        beq skip1552
                       >        trap            ;failed not equal (non zero)
276e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2771 :                 >skip1552
                       >
2771 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$8b,$ff
                       >            load_flag $ff
2772 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2774 : 48              >            pha         ;use stack to load status
2775 : a91f            >            lda #$aa-$8b     ;precharge accu
2777 : 28              >            plp
                       >
2778 : 8b              >            db  $8b          ;test nop integrity - flags on
2779 : ea              >            nop
277a : ea              >            nop
                       >            tst_a $aa-$8b,$ff
277b : 08              >            php         ;save flags
277c : 08              >            php
277d : c91f            >            cmp #$aa-$8b     ;test result
                       >            trap_ne
277f : f003            >        beq skip1557
                       >        trap            ;failed not equal (non zero)
2781 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2784 :                 >skip1557
                       >
2784 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2785 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2787 : f003            >        beq skip1560
                       >        trap            ;failed not equal (non zero)
2789 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
278c :                 >skip1560
                       >
278c : 28              >            plp         ;restore status
                       >
278d : c042            >            cpy #$42
                       >            trap_ne         ;y changed
278f : f003            >        beq skip1562
                       >        trap            ;failed not equal (non zero)
2791 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2794 :                 >skip1562
                       >
2794 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2796 : f003            >        beq skip1564
                       >        trap            ;failed not equal (non zero)
2798 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
279b :                 >skip1564
                       >
                        
                                nop_test $9b,1
279b : a042            >            ldy #$42
279d : a203            >            ldx #4-1
279f : 9b              >            db  $9b          ;test nop length
                       >        if 1 = 1
27a0 : ca              >            dex
27a1 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
27a2 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
27a3 : f003            >        beq skip1567
                       >        trap            ;failed not equal (non zero)
27a5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27a8 :                 >skip1567
                       >
                       >            set_a $ff-$9b,0
                       >            load_flag 0
27a8 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
27aa : 48              >            pha         ;use stack to load status
27ab : a964            >            lda #$ff-$9b     ;precharge accu
27ad : 28              >            plp
                       >
27ae : 9b              >            db  $9b          ;test nop integrity - flags off
27af : ea              >            nop
27b0 : ea              >            nop
                       >            tst_a $ff-$9b,0
27b1 : 08              >            php         ;save flags
27b2 : 08              >            php
27b3 : c964            >            cmp #$ff-$9b     ;test result
                       >            trap_ne
27b5 : f003            >        beq skip1572
                       >        trap            ;failed not equal (non zero)
27b7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27ba :                 >skip1572
                       >
27ba : 68              >            pla         ;load status
                       >            cmp_flag 0
27bb : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
27bd : f003            >        beq skip1575
                       >        trap            ;failed not equal (non zero)
27bf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27c2 :                 >skip1575
                       >
27c2 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$9b,$ff
                       >            load_flag $ff
27c3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
27c5 : 48              >            pha         ;use stack to load status
27c6 : a90f            >            lda #$aa-$9b     ;precharge accu
27c8 : 28              >            plp
                       >
27c9 : 9b              >            db  $9b          ;test nop integrity - flags on
27ca : ea              >            nop
27cb : ea              >            nop
                       >            tst_a $aa-$9b,$ff
27cc : 08              >            php         ;save flags
27cd : 08              >            php
27ce : c90f            >            cmp #$aa-$9b     ;test result
                       >            trap_ne
27d0 : f003            >        beq skip1580
                       >        trap            ;failed not equal (non zero)
27d2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27d5 :                 >skip1580
                       >
27d5 : 68              >            pla         ;load status
                       >            cmp_flag $ff
27d6 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
27d8 : f003            >        beq skip1583
                       >        trap            ;failed not equal (non zero)
27da : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27dd :                 >skip1583
                       >
27dd : 28              >            plp         ;restore status
                       >
27de : c042            >            cpy #$42
                       >            trap_ne         ;y changed
27e0 : f003            >        beq skip1585
                       >        trap            ;failed not equal (non zero)
27e2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27e5 :                 >skip1585
                       >
27e5 : e000            >            cpx #0
                       >            trap_ne         ;x changed
27e7 : f003            >        beq skip1587
                       >        trap            ;failed not equal (non zero)
27e9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27ec :                 >skip1587
                       >
                        
                                nop_test $ab,1
27ec : a042            >            ldy #$42
27ee : a203            >            ldx #4-1
27f0 : ab              >            db  $ab          ;test nop length
                       >        if 1 = 1
27f1 : ca              >            dex
27f2 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
27f3 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
27f4 : f003            >        beq skip1590
                       >        trap            ;failed not equal (non zero)
27f6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
27f9 :                 >skip1590
                       >
                       >            set_a $ff-$ab,0
                       >            load_flag 0
27f9 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
27fb : 48              >            pha         ;use stack to load status
27fc : a954            >            lda #$ff-$ab     ;precharge accu
27fe : 28              >            plp
                       >
27ff : ab              >            db  $ab          ;test nop integrity - flags off
2800 : ea              >            nop
2801 : ea              >            nop
                       >            tst_a $ff-$ab,0
2802 : 08              >            php         ;save flags
2803 : 08              >            php
2804 : c954            >            cmp #$ff-$ab     ;test result
                       >            trap_ne
2806 : f003            >        beq skip1595
                       >        trap            ;failed not equal (non zero)
2808 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
280b :                 >skip1595
                       >
280b : 68              >            pla         ;load status
                       >            cmp_flag 0
280c : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
280e : f003            >        beq skip1598
                       >        trap            ;failed not equal (non zero)
2810 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2813 :                 >skip1598
                       >
2813 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$ab,$ff
                       >            load_flag $ff
2814 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2816 : 48              >            pha         ;use stack to load status
2817 : a9ff            >            lda #$aa-$ab     ;precharge accu
2819 : 28              >            plp
                       >
281a : ab              >            db  $ab          ;test nop integrity - flags on
281b : ea              >            nop
281c : ea              >            nop
                       >            tst_a $aa-$ab,$ff
281d : 08              >            php         ;save flags
281e : 08              >            php
281f : c9ff            >            cmp #$aa-$ab     ;test result
                       >            trap_ne
2821 : f003            >        beq skip1603
                       >        trap            ;failed not equal (non zero)
2823 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2826 :                 >skip1603
                       >
2826 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2827 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2829 : f003            >        beq skip1606
                       >        trap            ;failed not equal (non zero)
282b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
282e :                 >skip1606
                       >
282e : 28              >            plp         ;restore status
                       >
282f : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2831 : f003            >        beq skip1608
                       >        trap            ;failed not equal (non zero)
2833 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2836 :                 >skip1608
                       >
2836 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2838 : f003            >        beq skip1610
                       >        trap            ;failed not equal (non zero)
283a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
283d :                 >skip1610
                       >
                        
                                nop_test $bb,1
283d : a042            >            ldy #$42
283f : a203            >            ldx #4-1
2841 : bb              >            db  $bb          ;test nop length
                       >        if 1 = 1
2842 : ca              >            dex
2843 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2844 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2845 : f003            >        beq skip1613
                       >        trap            ;failed not equal (non zero)
2847 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
284a :                 >skip1613
                       >
                       >            set_a $ff-$bb,0
                       >            load_flag 0
284a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
284c : 48              >            pha         ;use stack to load status
284d : a944            >            lda #$ff-$bb     ;precharge accu
284f : 28              >            plp
                       >
2850 : bb              >            db  $bb          ;test nop integrity - flags off
2851 : ea              >            nop
2852 : ea              >            nop
                       >            tst_a $ff-$bb,0
2853 : 08              >            php         ;save flags
2854 : 08              >            php
2855 : c944            >            cmp #$ff-$bb     ;test result
                       >            trap_ne
2857 : f003            >        beq skip1618
                       >        trap            ;failed not equal (non zero)
2859 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
285c :                 >skip1618
                       >
285c : 68              >            pla         ;load status
                       >            cmp_flag 0
285d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
285f : f003            >        beq skip1621
                       >        trap            ;failed not equal (non zero)
2861 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2864 :                 >skip1621
                       >
2864 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$bb,$ff
                       >            load_flag $ff
2865 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2867 : 48              >            pha         ;use stack to load status
2868 : a9ef            >            lda #$aa-$bb     ;precharge accu
286a : 28              >            plp
                       >
286b : bb              >            db  $bb          ;test nop integrity - flags on
286c : ea              >            nop
286d : ea              >            nop
                       >            tst_a $aa-$bb,$ff
286e : 08              >            php         ;save flags
286f : 08              >            php
2870 : c9ef            >            cmp #$aa-$bb     ;test result
                       >            trap_ne
2872 : f003            >        beq skip1626
                       >        trap            ;failed not equal (non zero)
2874 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2877 :                 >skip1626
                       >
2877 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2878 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
287a : f003            >        beq skip1629
                       >        trap            ;failed not equal (non zero)
287c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
287f :                 >skip1629
                       >
287f : 28              >            plp         ;restore status
                       >
2880 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2882 : f003            >        beq skip1631
                       >        trap            ;failed not equal (non zero)
2884 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2887 :                 >skip1631
                       >
2887 : e000            >            cpx #0
                       >            trap_ne         ;x changed
2889 : f003            >        beq skip1633
                       >        trap            ;failed not equal (non zero)
288b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
288e :                 >skip1633
                       >
                        
                                nop_test $eb,1
288e : a042            >            ldy #$42
2890 : a203            >            ldx #4-1
2892 : eb              >            db  $eb          ;test nop length
                       >        if 1 = 1
2893 : ca              >            dex
2894 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
2895 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
2896 : f003            >        beq skip1636
                       >        trap            ;failed not equal (non zero)
2898 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
289b :                 >skip1636
                       >
                       >            set_a $ff-$eb,0
                       >            load_flag 0
289b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
289d : 48              >            pha         ;use stack to load status
289e : a914            >            lda #$ff-$eb     ;precharge accu
28a0 : 28              >            plp
                       >
28a1 : eb              >            db  $eb          ;test nop integrity - flags off
28a2 : ea              >            nop
28a3 : ea              >            nop
                       >            tst_a $ff-$eb,0
28a4 : 08              >            php         ;save flags
28a5 : 08              >            php
28a6 : c914            >            cmp #$ff-$eb     ;test result
                       >            trap_ne
28a8 : f003            >        beq skip1641
                       >        trap            ;failed not equal (non zero)
28aa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28ad :                 >skip1641
                       >
28ad : 68              >            pla         ;load status
                       >            cmp_flag 0
28ae : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
28b0 : f003            >        beq skip1644
                       >        trap            ;failed not equal (non zero)
28b2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28b5 :                 >skip1644
                       >
28b5 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$eb,$ff
                       >            load_flag $ff
28b6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
28b8 : 48              >            pha         ;use stack to load status
28b9 : a9bf            >            lda #$aa-$eb     ;precharge accu
28bb : 28              >            plp
                       >
28bc : eb              >            db  $eb          ;test nop integrity - flags on
28bd : ea              >            nop
28be : ea              >            nop
                       >            tst_a $aa-$eb,$ff
28bf : 08              >            php         ;save flags
28c0 : 08              >            php
28c1 : c9bf            >            cmp #$aa-$eb     ;test result
                       >            trap_ne
28c3 : f003            >        beq skip1649
                       >        trap            ;failed not equal (non zero)
28c5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28c8 :                 >skip1649
                       >
28c8 : 68              >            pla         ;load status
                       >            cmp_flag $ff
28c9 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
28cb : f003            >        beq skip1652
                       >        trap            ;failed not equal (non zero)
28cd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28d0 :                 >skip1652
                       >
28d0 : 28              >            plp         ;restore status
                       >
28d1 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
28d3 : f003            >        beq skip1654
                       >        trap            ;failed not equal (non zero)
28d5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28d8 :                 >skip1654
                       >
28d8 : e000            >            cpx #0
                       >            trap_ne         ;x changed
28da : f003            >        beq skip1656
                       >        trap            ;failed not equal (non zero)
28dc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28df :                 >skip1656
                       >
                        
                                nop_test $fb,1
28df : a042            >            ldy #$42
28e1 : a203            >            ldx #4-1
28e3 : fb              >            db  $fb          ;test nop length
                       >        if 1 = 1
28e4 : ca              >            dex
28e5 : ca              >            dex
                       >        endif
                       >        if 1 = 2
                       >            iny
                       >            dex
                       >        endif
                       >        if 1 = 3
                       >            iny
                       >            iny
                       >        endif
28e6 : ca              >            dex
                       >            trap_ne         ;wrong number of bytes
28e7 : f003            >        beq skip1659
                       >        trap            ;failed not equal (non zero)
28e9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28ec :                 >skip1659
                       >
                       >            set_a $ff-$fb,0
                       >            load_flag 0
28ec : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
28ee : 48              >            pha         ;use stack to load status
28ef : a904            >            lda #$ff-$fb     ;precharge accu
28f1 : 28              >            plp
                       >
28f2 : fb              >            db  $fb          ;test nop integrity - flags off
28f3 : ea              >            nop
28f4 : ea              >            nop
                       >            tst_a $ff-$fb,0
28f5 : 08              >            php         ;save flags
28f6 : 08              >            php
28f7 : c904            >            cmp #$ff-$fb     ;test result
                       >            trap_ne
28f9 : f003            >        beq skip1664
                       >        trap            ;failed not equal (non zero)
28fb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
28fe :                 >skip1664
                       >
28fe : 68              >            pla         ;load status
                       >            cmp_flag 0
28ff : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2901 : f003            >        beq skip1667
                       >        trap            ;failed not equal (non zero)
2903 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2906 :                 >skip1667
                       >
2906 : 28              >            plp         ;restore status
                       >
                       >            set_a $aa-$fb,$ff
                       >            load_flag $ff
2907 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2909 : 48              >            pha         ;use stack to load status
290a : a9af            >            lda #$aa-$fb     ;precharge accu
290c : 28              >            plp
                       >
290d : fb              >            db  $fb          ;test nop integrity - flags on
290e : ea              >            nop
290f : ea              >            nop
                       >            tst_a $aa-$fb,$ff
2910 : 08              >            php         ;save flags
2911 : 08              >            php
2912 : c9af            >            cmp #$aa-$fb     ;test result
                       >            trap_ne
2914 : f003            >        beq skip1672
                       >        trap            ;failed not equal (non zero)
2916 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2919 :                 >skip1672
                       >
2919 : 68              >            pla         ;load status
                       >            cmp_flag $ff
291a : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
291c : f003            >        beq skip1675
                       >        trap            ;failed not equal (non zero)
291e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2921 :                 >skip1675
                       >
2921 : 28              >            plp         ;restore status
                       >
2922 : c042            >            cpy #$42
                       >            trap_ne         ;y changed
2924 : f003            >        beq skip1677
                       >        trap            ;failed not equal (non zero)
2926 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2929 :                 >skip1677
                       >
2929 : e000            >            cpx #0
                       >            trap_ne         ;x changed
292b : f003            >        beq skip1679
                       >        trap            ;failed not equal (non zero)
292d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2930 :                 >skip1679
                       >
                        
                            if rkwl_wdc_op = 0      ;NOPs not available on Rockwell & WDC 65C02
                                nop_test $07,1
                                nop_test $17,1
                                nop_test $27,1
                                nop_test $37,1
                                nop_test $47,1
                                nop_test $57,1
                                nop_test $67,1
                                nop_test $77,1
                                nop_test $87,1
                                nop_test $97,1
                                nop_test $a7,1
                                nop_test $b7,1
                                nop_test $c7,1
                                nop_test $d7,1
                                nop_test $e7,1
                                nop_test $f7,1
                                nop_test $0f,1
                                nop_test $1f,1
                                nop_test $2f,1
                                nop_test $3f,1
                                nop_test $4f,1
                                nop_test $5f,1
                                nop_test $6f,1
                                nop_test $7f,1
                                nop_test $8f,1
                                nop_test $9f,1
                                nop_test $af,1
                                nop_test $bf,1
                                nop_test $cf,1
                                nop_test $df,1
                                nop_test $ef,1
                                nop_test $ff,1
                            endif
                            if  wdc_op = 0          ;NOPs not available on WDC 65C02 (WAI, STP)
                                nop_test $cb,1
                                nop_test $db,1
                            endif
                                next_test
2930 : ad0202          >            lda test_case   ;previous test
2933 : c908            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2935 : f003            >        beq skip1682
                       >        trap            ;failed not equal (non zero)
2937 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
293a :                 >skip1682
                       >
0009 =                 >test_num = test_num + 1
293a : a909            >            lda #test_num   ;*** next tests' number
293c : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                    
293f : 8d04ef            sta $ef04
2942 : 6a756d7020696e..  db "jump indirect (test page cross bug is fixed)", 10, 0
2970 : a203                     ldx #3          ;prepare table
2972 : bd353f           ji1     lda ji_adr,x
2975 : 9dfd02                   sta ji_tab,x
2978 : ca                       dex
2979 : 10f7                     bpl ji1
297b : a942                     lda #hi(ji_px) ;high address if page cross bug
297d : 8d0002                   sta pg_x
                                set_stat 0
                       >            load_flag 0
2980 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2982 : 48              >            pha         ;use stack to load status
2983 : 28              >            plp
                        
2984 : a949                     lda #'I'
2986 : a24e                     ldx #'N'
2988 : a044                     ldy #'D'        ;N=0, V=0, Z=0, C=0
298a : 6cfd02                   jmp (ji_tab)
298d : ea                       nop
                                trap_ne         ;runover protection
298e : f003            >        beq skip1686
                       >        trap            ;failed not equal (non zero)
2990 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2993 :                 >skip1686
                        
                        
2993 : 88                       dey
2994 : 88                       dey
2995 : 08               ji_ret  php             ;either SP or Y count will fail, if we do not hit
2996 : 88                       dey
2997 : 88                       dey
2998 : 88                       dey
2999 : 28                       plp
                                trap_eq         ;returned flags OK?
299a : d003            >        bne skip1688
                       >        trap           ;failed equal (zero)
299c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
299f :                 >skip1688
                        
                                trap_pl
299f : 3003            >        bmi skip1690
                       >        trap            ;failed plus (bit 7 clear)
29a1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29a4 :                 >skip1690
                        
                                trap_cc
29a4 : b003            >        bcs skip1692
                       >        trap            ;failed carry clear
29a6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29a9 :                 >skip1692
                        
                                trap_vc
29a9 : 7003            >        bvs skip1694
                       >        trap            ;failed overflow clear
29ab : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29ae :                 >skip1694
                        
29ae : c9e3                     cmp #('I'^$aa)  ;returned registers OK?
                                trap_ne
29b0 : f003            >        beq skip1696
                       >        trap            ;failed not equal (non zero)
29b2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29b5 :                 >skip1696
                        
29b5 : e04f                     cpx #('N'+1)
                                trap_ne
29b7 : f003            >        beq skip1698
                       >        trap            ;failed not equal (non zero)
29b9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29bc :                 >skip1698
                        
29bc : c03e                     cpy #('D'-6)
                                trap_ne
29be : f003            >        beq skip1700
                       >        trap            ;failed not equal (non zero)
29c0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29c3 :                 >skip1700
                        
29c3 : ba                       tsx             ;SP check
29c4 : e0ff                     cpx #$ff
                                trap_ne
29c6 : f003            >        beq skip1702
                       >        trap            ;failed not equal (non zero)
29c8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29cb :                 >skip1702
                        
                                next_test
29cb : ad0202          >            lda test_case   ;previous test
29ce : c909            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
29d0 : f003            >        beq skip1705
                       >        trap            ;failed not equal (non zero)
29d2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
29d5 :                 >skip1705
                       >
000a =                 >test_num = test_num + 1
29d5 : a90a            >            lda #test_num   ;*** next tests' number
29d7 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
29da : 8d04ef            sta $ef04
29dd : 6a756d7020696e..  db "jump indexed indirect", 10, 0
29f4 : a20b                     ldx #11         ;prepare table
29f6 : bd863f           jxi1    lda jxi_adr,x
29f9 : 9df902                   sta jxi_tab,x
29fc : ca                       dex
29fd : 10f7                     bpl jxi1
29ff : a942                     lda #hi(jxi_px) ;high address if page cross bug
2a01 : 8d0002                   sta pg_x
                                set_stat 0
                       >            load_flag 0
2a04 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2a06 : 48              >            pha         ;use stack to load status
2a07 : 28              >            plp
                        
2a08 : a958                     lda #'X'
2a0a : a204                     ldx #4
2a0c : a049                     ldy #'I'        ;N=0, V=0, Z=0, C=0
2a0e : 7cf902                   jmp (jxi_tab,x)
2a11 : ea                       nop
                                trap_ne         ;runover protection
2a12 : f003            >        beq skip1709
                       >        trap            ;failed not equal (non zero)
2a14 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a17 :                 >skip1709
                        
                        
2a17 : 88                       dey
2a18 : 88                       dey
2a19 : 08               jxi_ret php             ;either SP or Y count will fail, if we do not hit
2a1a : 88                       dey
2a1b : 88                       dey
2a1c : 88                       dey
2a1d : 28                       plp
                                trap_eq         ;returned flags OK?
2a1e : d003            >        bne skip1711
                       >        trap           ;failed equal (zero)
2a20 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a23 :                 >skip1711
                        
                                trap_pl
2a23 : 3003            >        bmi skip1713
                       >        trap            ;failed plus (bit 7 clear)
2a25 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a28 :                 >skip1713
                        
                                trap_cc
2a28 : b003            >        bcs skip1715
                       >        trap            ;failed carry clear
2a2a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a2d :                 >skip1715
                        
                                trap_vc
2a2d : 7003            >        bvs skip1717
                       >        trap            ;failed overflow clear
2a2f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a32 :                 >skip1717
                        
2a32 : c9f2                     cmp #('X'^$aa)  ;returned registers OK?
                                trap_ne
2a34 : f003            >        beq skip1719
                       >        trap            ;failed not equal (non zero)
2a36 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a39 :                 >skip1719
                        
2a39 : e006                     cpx #6
                                trap_ne
2a3b : f003            >        beq skip1721
                       >        trap            ;failed not equal (non zero)
2a3d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a40 :                 >skip1721
                        
2a40 : c043                     cpy #('I'-6)
                                trap_ne
2a42 : f003            >        beq skip1723
                       >        trap            ;failed not equal (non zero)
2a44 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a47 :                 >skip1723
                        
2a47 : ba                       tsx             ;SP check
2a48 : e0ff                     cpx #$ff
                                trap_ne
2a4a : f003            >        beq skip1725
                       >        trap            ;failed not equal (non zero)
2a4c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a4f :                 >skip1725
                        
                        
2a4f : a96b                     lda #lo(jxp_ok) ;test with index causing a page cross
2a51 : 8d0003                   sta jxp_tab
2a54 : a92a                     lda #hi(jxp_ok)
2a56 : 8d0103                   sta jxp_tab+1
2a59 : a968                     lda #lo(jxp_px)
2a5b : 8d0002                   sta pg_x
2a5e : a92a                     lda #hi(jxp_px)
2a60 : 8d0102                   sta pg_x+1
2a63 : a2ff                     ldx #$ff
2a65 : 7c0102                   jmp (jxp_tab-$ff,x)
                                
2a68 :                  jxp_px  
                                trap            ;page cross by index to wrong page
2a68 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
                        
2a6b :                  jxp_ok
                                next_test
2a6b : ad0202          >            lda test_case   ;previous test
2a6e : c90a            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2a70 : f003            >        beq skip1729
                       >        trap            ;failed not equal (non zero)
2a72 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2a75 :                 >skip1729
                       >
000b =                 >test_num = test_num + 1
2a75 : a90b            >            lda #test_num   ;*** next tests' number
2a77 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                            if ROM_vectors = 1
                         sta $ef04
                         db "test BRK clears decimal mode", 10, 0
                                sed
                                brk
                                nop
                        brk_ret
                                next_test
                            endif
                         
2a7a : 8d04ef            sta $ef04
2a7d : 74657374696e67..  db "testing accumulator increment/decrement INC A & DEC A", 10, 0
2ab4 : a2ac                     ldx #$ac    ;protect x & y
2ab6 : a0dc                     ldy #$dc
                                set_a $fe,$ff
                       >            load_flag $ff
2ab8 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2aba : 48              >            pha         ;use stack to load status
2abb : a9fe            >            lda #$fe     ;precharge accu
2abd : 28              >            plp
                        
2abe : 1a                       inc a           ;ff
                                tst_as $ff,$ff-zero
2abf : 48              >            pha
2ac0 : 08              >            php         ;save flags
2ac1 : 08              >            php
2ac2 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
2ac4 : f003            >        beq skip1734
                       >        trap            ;failed not equal (non zero)
2ac6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ac9 :                 >skip1734
                       >
2ac9 : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
2aca : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2acc : f003            >        beq skip1737
                       >        trap            ;failed not equal (non zero)
2ace : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ad1 :                 >skip1737
                       >
2ad1 : 28              >            plp         ;restore status
2ad2 : 68              >            pla
                        
2ad3 : 1a                       inc a           ;00
                                tst_as 0,$ff-minus
2ad4 : 48              >            pha
2ad5 : 08              >            php         ;save flags
2ad6 : 08              >            php
2ad7 : c900            >            cmp #0     ;test result
                       >            trap_ne
2ad9 : f003            >        beq skip1740
                       >        trap            ;failed not equal (non zero)
2adb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ade :                 >skip1740
                       >
2ade : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
2adf : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2ae1 : f003            >        beq skip1743
                       >        trap            ;failed not equal (non zero)
2ae3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ae6 :                 >skip1743
                       >
2ae6 : 28              >            plp         ;restore status
2ae7 : 68              >            pla
                        
2ae8 : 1a                       inc a           ;01
                                tst_as 1,$ff-minus-zero
2ae9 : 48              >            pha
2aea : 08              >            php         ;save flags
2aeb : 08              >            php
2aec : c901            >            cmp #1     ;test result
                       >            trap_ne
2aee : f003            >        beq skip1746
                       >        trap            ;failed not equal (non zero)
2af0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2af3 :                 >skip1746
                       >
2af3 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus-zero
2af4 : c97d            >            cmp #($ff-minus-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2af6 : f003            >        beq skip1749
                       >        trap            ;failed not equal (non zero)
2af8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2afb :                 >skip1749
                       >
2afb : 28              >            plp         ;restore status
2afc : 68              >            pla
                        
2afd : 3a                       dec a           ;00
                                tst_as 0,$ff-minus
2afe : 48              >            pha
2aff : 08              >            php         ;save flags
2b00 : 08              >            php
2b01 : c900            >            cmp #0     ;test result
                       >            trap_ne
2b03 : f003            >        beq skip1752
                       >        trap            ;failed not equal (non zero)
2b05 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b08 :                 >skip1752
                       >
2b08 : 68              >            pla         ;load status
                       >            cmp_flag $ff-minus
2b09 : c97f            >            cmp #($ff-minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2b0b : f003            >        beq skip1755
                       >        trap            ;failed not equal (non zero)
2b0d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b10 :                 >skip1755
                       >
2b10 : 28              >            plp         ;restore status
2b11 : 68              >            pla
                        
2b12 : 3a                       dec a           ;ff
                                tst_as $ff,$ff-zero
2b13 : 48              >            pha
2b14 : 08              >            php         ;save flags
2b15 : 08              >            php
2b16 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
2b18 : f003            >        beq skip1758
                       >        trap            ;failed not equal (non zero)
2b1a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b1d :                 >skip1758
                       >
2b1d : 68              >            pla         ;load status
                       >            cmp_flag $ff-zero
2b1e : c9fd            >            cmp #($ff-zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2b20 : f003            >        beq skip1761
                       >        trap            ;failed not equal (non zero)
2b22 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b25 :                 >skip1761
                       >
2b25 : 28              >            plp         ;restore status
2b26 : 68              >            pla
                        
2b27 : 3a                       dec a           ;fe
                                set_a $fe,0
                       >            load_flag 0
2b28 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2b2a : 48              >            pha         ;use stack to load status
2b2b : a9fe            >            lda #$fe     ;precharge accu
2b2d : 28              >            plp
                        
2b2e : 1a                       inc a           ;ff
                                tst_as $ff,minus
2b2f : 48              >            pha
2b30 : 08              >            php         ;save flags
2b31 : 08              >            php
2b32 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
2b34 : f003            >        beq skip1766
                       >        trap            ;failed not equal (non zero)
2b36 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b39 :                 >skip1766
                       >
2b39 : 68              >            pla         ;load status
                       >            cmp_flag minus
2b3a : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2b3c : f003            >        beq skip1769
                       >        trap            ;failed not equal (non zero)
2b3e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b41 :                 >skip1769
                       >
2b41 : 28              >            plp         ;restore status
2b42 : 68              >            pla
                        
2b43 : 1a                       inc a           ;00
                                tst_as 0,zero
2b44 : 48              >            pha
2b45 : 08              >            php         ;save flags
2b46 : 08              >            php
2b47 : c900            >            cmp #0     ;test result
                       >            trap_ne
2b49 : f003            >        beq skip1772
                       >        trap            ;failed not equal (non zero)
2b4b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b4e :                 >skip1772
                       >
2b4e : 68              >            pla         ;load status
                       >            cmp_flag zero
2b4f : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2b51 : f003            >        beq skip1775
                       >        trap            ;failed not equal (non zero)
2b53 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b56 :                 >skip1775
                       >
2b56 : 28              >            plp         ;restore status
2b57 : 68              >            pla
                        
2b58 : 1a                       inc a           ;01
                                tst_as 1,0
2b59 : 48              >            pha
2b5a : 08              >            php         ;save flags
2b5b : 08              >            php
2b5c : c901            >            cmp #1     ;test result
                       >            trap_ne
2b5e : f003            >        beq skip1778
                       >        trap            ;failed not equal (non zero)
2b60 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b63 :                 >skip1778
                       >
2b63 : 68              >            pla         ;load status
                       >            cmp_flag 0
2b64 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2b66 : f003            >        beq skip1781
                       >        trap            ;failed not equal (non zero)
2b68 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b6b :                 >skip1781
                       >
2b6b : 28              >            plp         ;restore status
2b6c : 68              >            pla
                        
2b6d : 3a                       dec a           ;00
                                tst_as 0,zero
2b6e : 48              >            pha
2b6f : 08              >            php         ;save flags
2b70 : 08              >            php
2b71 : c900            >            cmp #0     ;test result
                       >            trap_ne
2b73 : f003            >        beq skip1784
                       >        trap            ;failed not equal (non zero)
2b75 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b78 :                 >skip1784
                       >
2b78 : 68              >            pla         ;load status
                       >            cmp_flag zero
2b79 : c932            >            cmp #(zero|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2b7b : f003            >        beq skip1787
                       >        trap            ;failed not equal (non zero)
2b7d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b80 :                 >skip1787
                       >
2b80 : 28              >            plp         ;restore status
2b81 : 68              >            pla
                        
2b82 : 3a                       dec a           ;ff
                                tst_as $ff,minus
2b83 : 48              >            pha
2b84 : 08              >            php         ;save flags
2b85 : 08              >            php
2b86 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
2b88 : f003            >        beq skip1790
                       >        trap            ;failed not equal (non zero)
2b8a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b8d :                 >skip1790
                       >
2b8d : 68              >            pla         ;load status
                       >            cmp_flag minus
2b8e : c9b0            >            cmp #(minus|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2b90 : f003            >        beq skip1793
                       >        trap            ;failed not equal (non zero)
2b92 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b95 :                 >skip1793
                       >
2b95 : 28              >            plp         ;restore status
2b96 : 68              >            pla
                        
2b97 : e0ac                     cpx #$ac
                                trap_ne     ;x altered during test
2b99 : f003            >        beq skip1795
                       >        trap            ;failed not equal (non zero)
2b9b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2b9e :                 >skip1795
                        
2b9e : c0dc                     cpy #$dc
                                trap_ne     ;y altered during test
2ba0 : f003            >        beq skip1797
                       >        trap            ;failed not equal (non zero)
2ba2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ba5 :                 >skip1797
                        
2ba5 : ba                       tsx
2ba6 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
2ba8 : f003            >        beq skip1799
                       >        trap            ;failed not equal (non zero)
2baa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2bad :                 >skip1799
                        
                                next_test
2bad : ad0202          >            lda test_case   ;previous test
2bb0 : c90b            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2bb2 : f003            >        beq skip1802
                       >        trap            ;failed not equal (non zero)
2bb4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2bb7 :                 >skip1802
                       >
000c =                 >test_num = test_num + 1
2bb7 : a90c            >            lda #test_num   ;*** next tests' number
2bb9 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
2bbc : 8d04ef            sta $ef04
2bbf : 74657374696e67..  db "testing load / store accumulator LDA / STA (zp)", 10, 0
2bf0 : a299                     ldx #$99    ;protect x & y
2bf2 : a066                     ldy #$66
                                set_stat 0  
                       >            load_flag 0  
2bf4 : a900            >            lda #0               ;allow test to change I-flag (no mask)
                       >
2bf6 : 48              >            pha         ;use stack to load status
2bf7 : 28              >            plp
                        
2bf8 : b228                     lda (ind1)
2bfa : 08                       php         ;test stores do not alter flags
2bfb : 49c3                     eor #$c3
2bfd : 28                       plp
2bfe : 9234                     sta (indt)
2c00 : 08                       php         ;flags after load/store sequence
2c01 : 49c3                     eor #$c3
2c03 : c9c3                     cmp #$c3    ;test result
                                trap_ne
2c05 : f003            >        beq skip1806
                       >        trap            ;failed not equal (non zero)
2c07 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c0a :                 >skip1806
                        
2c0a : 68                       pla         ;load status
                                eor_flag 0
2c0b : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2c0d : cd0f02                   cmp fLDx    ;test flags
                                trap_ne
2c10 : f003            >        beq skip1809
                       >        trap            ;failed not equal (non zero)
2c12 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c15 :                 >skip1809
                        
                                set_stat 0
                       >            load_flag 0
2c15 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2c17 : 48              >            pha         ;use stack to load status
2c18 : 28              >            plp
                        
2c19 : b22a                     lda (ind1+2)
2c1b : 08                       php         ;test stores do not alter flags
2c1c : 49c3                     eor #$c3
2c1e : 28                       plp
2c1f : 9236                     sta (indt+2)
2c21 : 08                       php         ;flags after load/store sequence
2c22 : 49c3                     eor #$c3
2c24 : c982                     cmp #$82    ;test result
                                trap_ne
2c26 : f003            >        beq skip1813
                       >        trap            ;failed not equal (non zero)
2c28 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c2b :                 >skip1813
                        
2c2b : 68                       pla         ;load status
                                eor_flag 0
2c2c : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2c2e : cd1002                   cmp fLDx+1  ;test flags
                                trap_ne
2c31 : f003            >        beq skip1816
                       >        trap            ;failed not equal (non zero)
2c33 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c36 :                 >skip1816
                        
                                set_stat 0
                       >            load_flag 0
2c36 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2c38 : 48              >            pha         ;use stack to load status
2c39 : 28              >            plp
                        
2c3a : b22c                     lda (ind1+4)
2c3c : 08                       php         ;test stores do not alter flags
2c3d : 49c3                     eor #$c3
2c3f : 28                       plp
2c40 : 9238                     sta (indt+4)
2c42 : 08                       php         ;flags after load/store sequence
2c43 : 49c3                     eor #$c3
2c45 : c941                     cmp #$41    ;test result
                                trap_ne
2c47 : f003            >        beq skip1820
                       >        trap            ;failed not equal (non zero)
2c49 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c4c :                 >skip1820
                        
2c4c : 68                       pla         ;load status
                                eor_flag 0
2c4d : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2c4f : cd1102                   cmp fLDx+2  ;test flags
                                trap_ne
2c52 : f003            >        beq skip1823
                       >        trap            ;failed not equal (non zero)
2c54 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c57 :                 >skip1823
                        
                                set_stat 0
                       >            load_flag 0
2c57 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2c59 : 48              >            pha         ;use stack to load status
2c5a : 28              >            plp
                        
2c5b : b22e                     lda (ind1+6)
2c5d : 08                       php         ;test stores do not alter flags
2c5e : 49c3                     eor #$c3
2c60 : 28                       plp
2c61 : 923a                     sta (indt+6)
2c63 : 08                       php         ;flags after load/store sequence
2c64 : 49c3                     eor #$c3
2c66 : c900                     cmp #0      ;test result
                                trap_ne
2c68 : f003            >        beq skip1827
                       >        trap            ;failed not equal (non zero)
2c6a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c6d :                 >skip1827
                        
2c6d : 68                       pla         ;load status
                                eor_flag 0
2c6e : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                        
2c70 : cd1202                   cmp fLDx+3  ;test flags
                                trap_ne
2c73 : f003            >        beq skip1830
                       >        trap            ;failed not equal (non zero)
2c75 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c78 :                 >skip1830
                        
2c78 : e099                     cpx #$99
                                trap_ne     ;x altered during test
2c7a : f003            >        beq skip1832
                       >        trap            ;failed not equal (non zero)
2c7c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c7f :                 >skip1832
                        
2c7f : c066                     cpy #$66
                                trap_ne     ;y altered during test
2c81 : f003            >        beq skip1834
                       >        trap            ;failed not equal (non zero)
2c83 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c86 :                 >skip1834
                        
                        
2c86 : a003                     ldy #3      ;testing store result
2c88 : a200                     ldx #0
2c8a : b90502           tstai1  lda abst,y
2c8d : 49c3                     eor #$c3
2c8f : d90a02                   cmp abs1,y
                                trap_ne     ;store to indirect data
2c92 : f003            >        beq skip1836
                       >        trap            ;failed not equal (non zero)
2c94 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2c97 :                 >skip1836
                        
2c97 : 8a                       txa
2c98 : 990502                   sta abst,y  ;clear                
2c9b : 88                       dey
2c9c : 10ec                     bpl tstai1
                        
2c9e : a299                     ldx #$99    ;protect x & y
2ca0 : a066                     ldy #$66
                                set_stat $ff  
                       >            load_flag $ff  
2ca2 : a9ff            >            lda #$ff               ;allow test to change I-flag (no mask)
                       >
2ca4 : 48              >            pha         ;use stack to load status
2ca5 : 28              >            plp
                        
2ca6 : b228                     lda (ind1)
2ca8 : 08                       php         ;test stores do not alter flags
2ca9 : 49c3                     eor #$c3
2cab : 28                       plp
2cac : 9234                     sta (indt)
2cae : 08                       php         ;flags after load/store sequence
2caf : 49c3                     eor #$c3
2cb1 : c9c3                     cmp #$c3    ;test result
                                trap_ne
2cb3 : f003            >        beq skip1840
                       >        trap            ;failed not equal (non zero)
2cb5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2cb8 :                 >skip1840
                        
2cb8 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2cb9 : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2cbb : cd0f02                   cmp fLDx    ;test flags
                                trap_ne
2cbe : f003            >        beq skip1843
                       >        trap            ;failed not equal (non zero)
2cc0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2cc3 :                 >skip1843
                        
                                set_stat $ff
                       >            load_flag $ff
2cc3 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2cc5 : 48              >            pha         ;use stack to load status
2cc6 : 28              >            plp
                        
2cc7 : b22a                     lda (ind1+2)
2cc9 : 08                       php         ;test stores do not alter flags
2cca : 49c3                     eor #$c3
2ccc : 28                       plp
2ccd : 9236                     sta (indt+2)
2ccf : 08                       php         ;flags after load/store sequence
2cd0 : 49c3                     eor #$c3
2cd2 : c982                     cmp #$82    ;test result
                                trap_ne
2cd4 : f003            >        beq skip1847
                       >        trap            ;failed not equal (non zero)
2cd6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2cd9 :                 >skip1847
                        
2cd9 : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2cda : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2cdc : cd1002                   cmp fLDx+1  ;test flags
                                trap_ne
2cdf : f003            >        beq skip1850
                       >        trap            ;failed not equal (non zero)
2ce1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ce4 :                 >skip1850
                        
                                set_stat $ff
                       >            load_flag $ff
2ce4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2ce6 : 48              >            pha         ;use stack to load status
2ce7 : 28              >            plp
                        
2ce8 : b22c                     lda (ind1+4)
2cea : 08                       php         ;test stores do not alter flags
2ceb : 49c3                     eor #$c3
2ced : 28                       plp
2cee : 9238                     sta (indt+4)
2cf0 : 08                       php         ;flags after load/store sequence
2cf1 : 49c3                     eor #$c3
2cf3 : c941                     cmp #$41    ;test result
                                trap_ne
2cf5 : f003            >        beq skip1854
                       >        trap            ;failed not equal (non zero)
2cf7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2cfa :                 >skip1854
                        
2cfa : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2cfb : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2cfd : cd1102                   cmp fLDx+2  ;test flags
                                trap_ne
2d00 : f003            >        beq skip1857
                       >        trap            ;failed not equal (non zero)
2d02 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d05 :                 >skip1857
                        
                                set_stat $ff
                       >            load_flag $ff
2d05 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2d07 : 48              >            pha         ;use stack to load status
2d08 : 28              >            plp
                        
2d09 : b22e                     lda (ind1+6)
2d0b : 08                       php         ;test stores do not alter flags
2d0c : 49c3                     eor #$c3
2d0e : 28                       plp
2d0f : 923a                     sta (indt+6)
2d11 : 08                       php         ;flags after load/store sequence
2d12 : 49c3                     eor #$c3
2d14 : c900                     cmp #0      ;test result
                                trap_ne
2d16 : f003            >        beq skip1861
                       >        trap            ;failed not equal (non zero)
2d18 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d1b :                 >skip1861
                        
2d1b : 68                       pla         ;load status
                                eor_flag lo~fnz ;mask bits not altered
2d1c : 497d            >            eor #lo~fnz |fao         ;invert expected flags + always on bits
                        
2d1e : cd1202                   cmp fLDx+3  ;test flags
                                trap_ne
2d21 : f003            >        beq skip1864
                       >        trap            ;failed not equal (non zero)
2d23 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d26 :                 >skip1864
                        
2d26 : e099                     cpx #$99
                                trap_ne     ;x altered during test
2d28 : f003            >        beq skip1866
                       >        trap            ;failed not equal (non zero)
2d2a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d2d :                 >skip1866
                        
2d2d : c066                     cpy #$66
                                trap_ne     ;y altered during test
2d2f : f003            >        beq skip1868
                       >        trap            ;failed not equal (non zero)
2d31 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d34 :                 >skip1868
                        
                        
2d34 : a003                     ldy #3      ;testing store result
2d36 : a200                     ldx #0
2d38 : b90502           tstai2  lda abst,y
2d3b : 49c3                     eor #$c3
2d3d : d90a02                   cmp abs1,y
                                trap_ne     ;store to indirect data
2d40 : f003            >        beq skip1870
                       >        trap            ;failed not equal (non zero)
2d42 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d45 :                 >skip1870
                        
2d45 : 8a                       txa
2d46 : 990502                   sta abst,y  ;clear                
2d49 : 88                       dey
2d4a : 10ec                     bpl tstai2
2d4c : ba                       tsx
2d4d : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
2d4f : f003            >        beq skip1872
                       >        trap            ;failed not equal (non zero)
2d51 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d54 :                 >skip1872
                        
                                next_test
2d54 : ad0202          >            lda test_case   ;previous test
2d57 : c90c            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2d59 : f003            >        beq skip1875
                       >        trap            ;failed not equal (non zero)
2d5b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2d5e :                 >skip1875
                       >
000d =                 >test_num = test_num + 1
2d5e : a90d            >            lda #test_num   ;*** next tests' number
2d60 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
2d63 : 8d04ef            sta $ef04
2d66 : 74657374696e67..  db "testing STZ - zp / abs / zp,x / abs,x", 10, 0
2d8d : a07b                     ldy #123    ;protect y
2d8f : a204                     ldx #4      ;precharge test area
2d91 : a907                     lda #7
2d93 : 9510             tstz1   sta zpt,x
2d95 : 0a                       asl a
2d96 : ca                       dex
2d97 : 10fa                     bpl tstz1
2d99 : a204                     ldx #4
                                set_a $55,$ff
                       >            load_flag $ff
2d9b : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2d9d : 48              >            pha         ;use stack to load status
2d9e : a955            >            lda #$55     ;precharge accu
2da0 : 28              >            plp
                        
2da1 : 6410                     stz zpt     
2da3 : 6411                     stz zpt+1
2da5 : 6412                     stz zpt+2
2da7 : 6413                     stz zpt+3
2da9 : 6414                     stz zpt+4
                                tst_a $55,$ff
2dab : 08              >            php         ;save flags
2dac : 08              >            php
2dad : c955            >            cmp #$55     ;test result
                       >            trap_ne
2daf : f003            >        beq skip1880
                       >        trap            ;failed not equal (non zero)
2db1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2db4 :                 >skip1880
                       >
2db4 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2db5 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2db7 : f003            >        beq skip1883
                       >        trap            ;failed not equal (non zero)
2db9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2dbc :                 >skip1883
                       >
2dbc : 28              >            plp         ;restore status
                        
2dbd : b510             tstz2   lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
2dbf : f003            >        beq skip1885
                       >        trap            ;failed not equal (non zero)
2dc1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2dc4 :                 >skip1885
                        
2dc4 : ca                       dex
2dc5 : 10f6                     bpl tstz2
2dc7 : a204                     ldx #4      ;precharge test area
2dc9 : a907                     lda #7
2dcb : 9510             tstz3   sta zpt,x
2dcd : 0a                       asl a
2dce : ca                       dex
2dcf : 10fa                     bpl tstz3
2dd1 : a204                     ldx #4
                                set_a $aa,0
                       >            load_flag 0
2dd3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2dd5 : 48              >            pha         ;use stack to load status
2dd6 : a9aa            >            lda #$aa     ;precharge accu
2dd8 : 28              >            plp
                        
2dd9 : 6410                     stz zpt     
2ddb : 6411                     stz zpt+1
2ddd : 6412                     stz zpt+2
2ddf : 6413                     stz zpt+3
2de1 : 6414                     stz zpt+4
                                tst_a $aa,0
2de3 : 08              >            php         ;save flags
2de4 : 08              >            php
2de5 : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
2de7 : f003            >        beq skip1890
                       >        trap            ;failed not equal (non zero)
2de9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2dec :                 >skip1890
                       >
2dec : 68              >            pla         ;load status
                       >            cmp_flag 0
2ded : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2def : f003            >        beq skip1893
                       >        trap            ;failed not equal (non zero)
2df1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2df4 :                 >skip1893
                       >
2df4 : 28              >            plp         ;restore status
                        
2df5 : b510             tstz4   lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
2df7 : f003            >        beq skip1895
                       >        trap            ;failed not equal (non zero)
2df9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2dfc :                 >skip1895
                        
2dfc : ca                       dex
2dfd : 10f6                     bpl tstz4
                                
2dff : a204                     ldx #4      ;precharge test area
2e01 : a907                     lda #7
2e03 : 9d0502           tstz5   sta abst,x
2e06 : 0a                       asl a
2e07 : ca                       dex
2e08 : 10f9                     bpl tstz5
2e0a : a204                     ldx #4
                                set_a $55,$ff
                       >            load_flag $ff
2e0c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2e0e : 48              >            pha         ;use stack to load status
2e0f : a955            >            lda #$55     ;precharge accu
2e11 : 28              >            plp
                        
2e12 : 9c0502                   stz abst     
2e15 : 9c0602                   stz abst+1
2e18 : 9c0702                   stz abst+2
2e1b : 9c0802                   stz abst+3
2e1e : 9c0902                   stz abst+4
                                tst_a $55,$ff
2e21 : 08              >            php         ;save flags
2e22 : 08              >            php
2e23 : c955            >            cmp #$55     ;test result
                       >            trap_ne
2e25 : f003            >        beq skip1900
                       >        trap            ;failed not equal (non zero)
2e27 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e2a :                 >skip1900
                       >
2e2a : 68              >            pla         ;load status
                       >            cmp_flag $ff
2e2b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2e2d : f003            >        beq skip1903
                       >        trap            ;failed not equal (non zero)
2e2f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e32 :                 >skip1903
                       >
2e32 : 28              >            plp         ;restore status
                        
2e33 : bd0502           tstz6   lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ abs
2e36 : f003            >        beq skip1905
                       >        trap            ;failed not equal (non zero)
2e38 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e3b :                 >skip1905
                        
2e3b : ca                       dex
2e3c : 10f5                     bpl tstz6
2e3e : a204                     ldx #4      ;precharge test area
2e40 : a907                     lda #7
2e42 : 9d0502           tstz7   sta abst,x
2e45 : 0a                       asl a
2e46 : ca                       dex
2e47 : 10f9                     bpl tstz7
2e49 : a204                     ldx #4
                                set_a $aa,0
                       >            load_flag 0
2e4b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2e4d : 48              >            pha         ;use stack to load status
2e4e : a9aa            >            lda #$aa     ;precharge accu
2e50 : 28              >            plp
                        
2e51 : 9c0502                   stz abst     
2e54 : 9c0602                   stz abst+1
2e57 : 9c0702                   stz abst+2
2e5a : 9c0802                   stz abst+3
2e5d : 9c0902                   stz abst+4
                                tst_a $aa,0
2e60 : 08              >            php         ;save flags
2e61 : 08              >            php
2e62 : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
2e64 : f003            >        beq skip1910
                       >        trap            ;failed not equal (non zero)
2e66 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e69 :                 >skip1910
                       >
2e69 : 68              >            pla         ;load status
                       >            cmp_flag 0
2e6a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2e6c : f003            >        beq skip1913
                       >        trap            ;failed not equal (non zero)
2e6e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e71 :                 >skip1913
                       >
2e71 : 28              >            plp         ;restore status
                        
2e72 : bd0502           tstz8   lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ abs
2e75 : f003            >        beq skip1915
                       >        trap            ;failed not equal (non zero)
2e77 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e7a :                 >skip1915
                        
2e7a : ca                       dex
2e7b : 10f5                     bpl tstz8
                                
2e7d : a204                     ldx #4      ;precharge test area
2e7f : a907                     lda #7
2e81 : 9510             tstz11  sta zpt,x
2e83 : 0a                       asl a
2e84 : ca                       dex
2e85 : 10fa                     bpl tstz11
2e87 : a204                     ldx #4
2e89 :                  tstz15
                                set_a $55,$ff
                       >            load_flag $ff
2e89 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2e8b : 48              >            pha         ;use stack to load status
2e8c : a955            >            lda #$55     ;precharge accu
2e8e : 28              >            plp
                        
2e8f : 7410                     stz zpt,x     
                                tst_a $55,$ff
2e91 : 08              >            php         ;save flags
2e92 : 08              >            php
2e93 : c955            >            cmp #$55     ;test result
                       >            trap_ne
2e95 : f003            >        beq skip1920
                       >        trap            ;failed not equal (non zero)
2e97 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2e9a :                 >skip1920
                       >
2e9a : 68              >            pla         ;load status
                       >            cmp_flag $ff
2e9b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2e9d : f003            >        beq skip1923
                       >        trap            ;failed not equal (non zero)
2e9f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ea2 :                 >skip1923
                       >
2ea2 : 28              >            plp         ;restore status
                        
2ea3 : ca                       dex
2ea4 : 10e3                     bpl tstz15
2ea6 : a204                     ldx #4
2ea8 : b510             tstz12  lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
2eaa : f003            >        beq skip1925
                       >        trap            ;failed not equal (non zero)
2eac : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2eaf :                 >skip1925
                        
2eaf : ca                       dex
2eb0 : 10f6                     bpl tstz12
2eb2 : a204                     ldx #4      ;precharge test area
2eb4 : a907                     lda #7
2eb6 : 9510             tstz13  sta zpt,x
2eb8 : 0a                       asl a
2eb9 : ca                       dex
2eba : 10fa                     bpl tstz13
2ebc : a204                     ldx #4
2ebe :                  tstz16
                                set_a $aa,0
                       >            load_flag 0
2ebe : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2ec0 : 48              >            pha         ;use stack to load status
2ec1 : a9aa            >            lda #$aa     ;precharge accu
2ec3 : 28              >            plp
                        
2ec4 : 7410                     stz zpt,x
                                tst_a $aa,0
2ec6 : 08              >            php         ;save flags
2ec7 : 08              >            php
2ec8 : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
2eca : f003            >        beq skip1930
                       >        trap            ;failed not equal (non zero)
2ecc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ecf :                 >skip1930
                       >
2ecf : 68              >            pla         ;load status
                       >            cmp_flag 0
2ed0 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2ed2 : f003            >        beq skip1933
                       >        trap            ;failed not equal (non zero)
2ed4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ed7 :                 >skip1933
                       >
2ed7 : 28              >            plp         ;restore status
                        
2ed8 : ca                       dex
2ed9 : 10e3                     bpl tstz16
2edb : a204                     ldx #4
2edd : b510             tstz14  lda zpt,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
2edf : f003            >        beq skip1935
                       >        trap            ;failed not equal (non zero)
2ee1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ee4 :                 >skip1935
                        
2ee4 : ca                       dex
2ee5 : 10f6                     bpl tstz14
                                
2ee7 : a204                     ldx #4      ;precharge test area
2ee9 : a907                     lda #7
2eeb : 9d0502           tstz21  sta abst,x
2eee : 0a                       asl a
2eef : ca                       dex
2ef0 : 10f9                     bpl tstz21
2ef2 : a204                     ldx #4
2ef4 :                  tstz25
                                set_a $55,$ff
                       >            load_flag $ff
2ef4 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
2ef6 : 48              >            pha         ;use stack to load status
2ef7 : a955            >            lda #$55     ;precharge accu
2ef9 : 28              >            plp
                        
2efa : 9e0502                   stz abst,x     
                                tst_a $55,$ff
2efd : 08              >            php         ;save flags
2efe : 08              >            php
2eff : c955            >            cmp #$55     ;test result
                       >            trap_ne
2f01 : f003            >        beq skip1940
                       >        trap            ;failed not equal (non zero)
2f03 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f06 :                 >skip1940
                       >
2f06 : 68              >            pla         ;load status
                       >            cmp_flag $ff
2f07 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f09 : f003            >        beq skip1943
                       >        trap            ;failed not equal (non zero)
2f0b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f0e :                 >skip1943
                       >
2f0e : 28              >            plp         ;restore status
                        
2f0f : ca                       dex
2f10 : 10e2                     bpl tstz25
2f12 : a204                     ldx #4
2f14 : bd0502           tstz22  lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
2f17 : f003            >        beq skip1945
                       >        trap            ;failed not equal (non zero)
2f19 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f1c :                 >skip1945
                        
2f1c : ca                       dex
2f1d : 10f5                     bpl tstz22
2f1f : a204                     ldx #4      ;precharge test area
2f21 : a907                     lda #7
2f23 : 9d0502           tstz23  sta abst,x
2f26 : 0a                       asl a
2f27 : ca                       dex
2f28 : 10f9                     bpl tstz23
2f2a : a204                     ldx #4
2f2c :                  tstz26
                                set_a $aa,0
                       >            load_flag 0
2f2c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2f2e : 48              >            pha         ;use stack to load status
2f2f : a9aa            >            lda #$aa     ;precharge accu
2f31 : 28              >            plp
                        
2f32 : 9e0502                   stz abst,x
                                tst_a $aa,0
2f35 : 08              >            php         ;save flags
2f36 : 08              >            php
2f37 : c9aa            >            cmp #$aa     ;test result
                       >            trap_ne
2f39 : f003            >        beq skip1950
                       >        trap            ;failed not equal (non zero)
2f3b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f3e :                 >skip1950
                       >
2f3e : 68              >            pla         ;load status
                       >            cmp_flag 0
2f3f : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2f41 : f003            >        beq skip1953
                       >        trap            ;failed not equal (non zero)
2f43 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f46 :                 >skip1953
                       >
2f46 : 28              >            plp         ;restore status
                        
2f47 : ca                       dex
2f48 : 10e2                     bpl tstz26
2f4a : a204                     ldx #4
2f4c : bd0502           tstz24  lda abst,x   ;verify zeros stored
                                trap_ne     ;non zero after STZ zp
2f4f : f003            >        beq skip1955
                       >        trap            ;failed not equal (non zero)
2f51 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f54 :                 >skip1955
                        
2f54 : ca                       dex
2f55 : 10f5                     bpl tstz24
                                
2f57 : c07b                     cpy #123
                                trap_ne     ;y altered during test 
2f59 : f003            >        beq skip1957
                       >        trap            ;failed not equal (non zero)
2f5b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f5e :                 >skip1957
                        
2f5e : ba                       tsx
2f5f : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
2f61 : f003            >        beq skip1959
                       >        trap            ;failed not equal (non zero)
2f63 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f66 :                 >skip1959
                        
                                next_test
2f66 : ad0202          >            lda test_case   ;previous test
2f69 : c90d            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
2f6b : f003            >        beq skip1962
                       >        trap            ;failed not equal (non zero)
2f6d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2f70 :                 >skip1962
                       >
000e =                 >test_num = test_num + 1
2f70 : a90e            >            lda #test_num   ;*** next tests' number
2f72 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
2f75 : 8d04ef            sta $ef04
2f78 : 74657374696e67..  db "testing BIT - zp,x / abs,x / #", 10, 0
2f98 : a042                     ldy #$42
2f9a : a203                     ldx #3
                                set_a $ff,0
                       >            load_flag 0
2f9c : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2f9e : 48              >            pha         ;use stack to load status
2f9f : a9ff            >            lda #$ff     ;precharge accu
2fa1 : 28              >            plp
                        
2fa2 : 3417                     bit zp1,x   ;00 - should set Z / clear  NV
                                tst_a $ff,fz 
2fa4 : 08              >            php         ;save flags
2fa5 : 08              >            php
2fa6 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
2fa8 : f003            >        beq skip1967
                       >        trap            ;failed not equal (non zero)
2faa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2fad :                 >skip1967
                       >
2fad : 68              >            pla         ;load status
                       >            cmp_flag fz 
2fae : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2fb0 : f003            >        beq skip1970
                       >        trap            ;failed not equal (non zero)
2fb2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2fb5 :                 >skip1970
                       >
2fb5 : 28              >            plp         ;restore status
                        
2fb6 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
2fb7 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2fb9 : 48              >            pha         ;use stack to load status
2fba : a901            >            lda #1     ;precharge accu
2fbc : 28              >            plp
                        
2fbd : 3417                     bit zp1,x   ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
2fbf : 08              >            php         ;save flags
2fc0 : 08              >            php
2fc1 : c901            >            cmp #1     ;test result
                       >            trap_ne
2fc3 : f003            >        beq skip1975
                       >        trap            ;failed not equal (non zero)
2fc5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2fc8 :                 >skip1975
                       >
2fc8 : 68              >            pla         ;load status
                       >            cmp_flag fv
2fc9 : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2fcb : f003            >        beq skip1978
                       >        trap            ;failed not equal (non zero)
2fcd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2fd0 :                 >skip1978
                       >
2fd0 : 28              >            plp         ;restore status
                        
2fd1 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
2fd2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2fd4 : 48              >            pha         ;use stack to load status
2fd5 : a901            >            lda #1     ;precharge accu
2fd7 : 28              >            plp
                        
2fd8 : 3417                     bit zp1,x   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
2fda : 08              >            php         ;save flags
2fdb : 08              >            php
2fdc : c901            >            cmp #1     ;test result
                       >            trap_ne
2fde : f003            >        beq skip1983
                       >        trap            ;failed not equal (non zero)
2fe0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2fe3 :                 >skip1983
                       >
2fe3 : 68              >            pla         ;load status
                       >            cmp_flag fnz
2fe4 : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
2fe6 : f003            >        beq skip1986
                       >        trap            ;failed not equal (non zero)
2fe8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2feb :                 >skip1986
                       >
2feb : 28              >            plp         ;restore status
                        
2fec : ca                       dex
                                set_a 1,0
                       >            load_flag 0
2fed : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
2fef : 48              >            pha         ;use stack to load status
2ff0 : a901            >            lda #1     ;precharge accu
2ff2 : 28              >            plp
                        
2ff3 : 3417                     bit zp1,x   ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
2ff5 : 08              >            php         ;save flags
2ff6 : 08              >            php
2ff7 : c901            >            cmp #1     ;test result
                       >            trap_ne
2ff9 : f003            >        beq skip1991
                       >        trap            ;failed not equal (non zero)
2ffb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
2ffe :                 >skip1991
                       >
2ffe : 68              >            pla         ;load status
                       >            cmp_flag fnv
2fff : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3001 : f003            >        beq skip1994
                       >        trap            ;failed not equal (non zero)
3003 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3006 :                 >skip1994
                       >
3006 : 28              >            plp         ;restore status
                        
                                
                                set_a 1,$ff
                       >            load_flag $ff
3007 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3009 : 48              >            pha         ;use stack to load status
300a : a901            >            lda #1     ;precharge accu
300c : 28              >            plp
                        
300d : 3417                     bit zp1,x   ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
300f : 08              >            php         ;save flags
3010 : 08              >            php
3011 : c901            >            cmp #1     ;test result
                       >            trap_ne
3013 : f003            >        beq skip1999
                       >        trap            ;failed not equal (non zero)
3015 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3018 :                 >skip1999
                       >
3018 : 68              >            pla         ;load status
                       >            cmp_flag ~fz
3019 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
301b : f003            >        beq skip2002
                       >        trap            ;failed not equal (non zero)
301d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3020 :                 >skip2002
                       >
3020 : 28              >            plp         ;restore status
                        
3021 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
3022 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3024 : 48              >            pha         ;use stack to load status
3025 : a901            >            lda #1     ;precharge accu
3027 : 28              >            plp
                        
3028 : 3417                     bit zp1,x   ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
302a : 08              >            php         ;save flags
302b : 08              >            php
302c : c901            >            cmp #1     ;test result
                       >            trap_ne
302e : f003            >        beq skip2007
                       >        trap            ;failed not equal (non zero)
3030 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3033 :                 >skip2007
                       >
3033 : 68              >            pla         ;load status
                       >            cmp_flag ~fv
3034 : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3036 : f003            >        beq skip2010
                       >        trap            ;failed not equal (non zero)
3038 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
303b :                 >skip2010
                       >
303b : 28              >            plp         ;restore status
                        
303c : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
303d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
303f : 48              >            pha         ;use stack to load status
3040 : a901            >            lda #1     ;precharge accu
3042 : 28              >            plp
                        
3043 : 3417                     bit zp1,x   ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
3045 : 08              >            php         ;save flags
3046 : 08              >            php
3047 : c901            >            cmp #1     ;test result
                       >            trap_ne
3049 : f003            >        beq skip2015
                       >        trap            ;failed not equal (non zero)
304b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
304e :                 >skip2015
                       >
304e : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
304f : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3051 : f003            >        beq skip2018
                       >        trap            ;failed not equal (non zero)
3053 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3056 :                 >skip2018
                       >
3056 : 28              >            plp         ;restore status
                        
3057 : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
3058 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
305a : 48              >            pha         ;use stack to load status
305b : a9ff            >            lda #$ff     ;precharge accu
305d : 28              >            plp
                        
305e : 3417                     bit zp1,x   ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv 
3060 : 08              >            php         ;save flags
3061 : 08              >            php
3062 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
3064 : f003            >        beq skip2023
                       >        trap            ;failed not equal (non zero)
3066 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3069 :                 >skip2023
                       >
3069 : 68              >            pla         ;load status
                       >            cmp_flag ~fnv 
306a : c93f            >            cmp #(~fnv |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
306c : f003            >        beq skip2026
                       >        trap            ;failed not equal (non zero)
306e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3071 :                 >skip2026
                       >
3071 : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,0
                       >            load_flag 0
3072 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3074 : 48              >            pha         ;use stack to load status
3075 : a9ff            >            lda #$ff     ;precharge accu
3077 : 28              >            plp
                        
3078 : 3c0a02                   bit abs1,x  ;00 - should set Z / clear  NV
                                tst_a $ff,fz 
307b : 08              >            php         ;save flags
307c : 08              >            php
307d : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
307f : f003            >        beq skip2031
                       >        trap            ;failed not equal (non zero)
3081 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3084 :                 >skip2031
                       >
3084 : 68              >            pla         ;load status
                       >            cmp_flag fz 
3085 : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3087 : f003            >        beq skip2034
                       >        trap            ;failed not equal (non zero)
3089 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
308c :                 >skip2034
                       >
308c : 28              >            plp         ;restore status
                        
308d : ca                       dex
                                set_a 1,0
                       >            load_flag 0
308e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3090 : 48              >            pha         ;use stack to load status
3091 : a901            >            lda #1     ;precharge accu
3093 : 28              >            plp
                        
3094 : 3c0a02                   bit abs1,x  ;41 - should set V (M6) / clear NZ
                                tst_a 1,fv
3097 : 08              >            php         ;save flags
3098 : 08              >            php
3099 : c901            >            cmp #1     ;test result
                       >            trap_ne
309b : f003            >        beq skip2039
                       >        trap            ;failed not equal (non zero)
309d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30a0 :                 >skip2039
                       >
30a0 : 68              >            pla         ;load status
                       >            cmp_flag fv
30a1 : c970            >            cmp #(fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
30a3 : f003            >        beq skip2042
                       >        trap            ;failed not equal (non zero)
30a5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30a8 :                 >skip2042
                       >
30a8 : 28              >            plp         ;restore status
                        
30a9 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
30aa : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
30ac : 48              >            pha         ;use stack to load status
30ad : a901            >            lda #1     ;precharge accu
30af : 28              >            plp
                        
30b0 : 3c0a02                   bit abs1,x  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,fnz
30b3 : 08              >            php         ;save flags
30b4 : 08              >            php
30b5 : c901            >            cmp #1     ;test result
                       >            trap_ne
30b7 : f003            >        beq skip2047
                       >        trap            ;failed not equal (non zero)
30b9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30bc :                 >skip2047
                       >
30bc : 68              >            pla         ;load status
                       >            cmp_flag fnz
30bd : c9b2            >            cmp #(fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
30bf : f003            >        beq skip2050
                       >        trap            ;failed not equal (non zero)
30c1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30c4 :                 >skip2050
                       >
30c4 : 28              >            plp         ;restore status
                        
30c5 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
30c6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
30c8 : 48              >            pha         ;use stack to load status
30c9 : a901            >            lda #1     ;precharge accu
30cb : 28              >            plp
                        
30cc : 3c0a02                   bit abs1,x  ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,fnv
30cf : 08              >            php         ;save flags
30d0 : 08              >            php
30d1 : c901            >            cmp #1     ;test result
                       >            trap_ne
30d3 : f003            >        beq skip2055
                       >        trap            ;failed not equal (non zero)
30d5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30d8 :                 >skip2055
                       >
30d8 : 68              >            pla         ;load status
                       >            cmp_flag fnv
30d9 : c9f0            >            cmp #(fnv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
30db : f003            >        beq skip2058
                       >        trap            ;failed not equal (non zero)
30dd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30e0 :                 >skip2058
                       >
30e0 : 28              >            plp         ;restore status
                        
                                
                                set_a 1,$ff
                       >            load_flag $ff
30e1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
30e3 : 48              >            pha         ;use stack to load status
30e4 : a901            >            lda #1     ;precharge accu
30e6 : 28              >            plp
                        
30e7 : 3c0a02                   bit abs1,x  ;c3 - should set N (M7) & V (M6) / clear Z
                                tst_a 1,~fz
30ea : 08              >            php         ;save flags
30eb : 08              >            php
30ec : c901            >            cmp #1     ;test result
                       >            trap_ne
30ee : f003            >        beq skip2063
                       >        trap            ;failed not equal (non zero)
30f0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30f3 :                 >skip2063
                       >
30f3 : 68              >            pla         ;load status
                       >            cmp_flag ~fz
30f4 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
30f6 : f003            >        beq skip2066
                       >        trap            ;failed not equal (non zero)
30f8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
30fb :                 >skip2066
                       >
30fb : 28              >            plp         ;restore status
                        
30fc : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
30fd : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
30ff : 48              >            pha         ;use stack to load status
3100 : a901            >            lda #1     ;precharge accu
3102 : 28              >            plp
                        
3103 : 3c0a02                   bit abs1,x  ;82 - should set N (M7) & Z / clear V
                                tst_a 1,~fv
3106 : 08              >            php         ;save flags
3107 : 08              >            php
3108 : c901            >            cmp #1     ;test result
                       >            trap_ne
310a : f003            >        beq skip2071
                       >        trap            ;failed not equal (non zero)
310c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
310f :                 >skip2071
                       >
310f : 68              >            pla         ;load status
                       >            cmp_flag ~fv
3110 : c9bf            >            cmp #(~fv|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3112 : f003            >        beq skip2074
                       >        trap            ;failed not equal (non zero)
3114 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3117 :                 >skip2074
                       >
3117 : 28              >            plp         ;restore status
                        
3118 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
3119 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
311b : 48              >            pha         ;use stack to load status
311c : a901            >            lda #1     ;precharge accu
311e : 28              >            plp
                        
311f : 3c0a02                   bit abs1,x  ;41 - should set V (M6) / clear NZ
                                tst_a 1,~fnz
3122 : 08              >            php         ;save flags
3123 : 08              >            php
3124 : c901            >            cmp #1     ;test result
                       >            trap_ne
3126 : f003            >        beq skip2079
                       >        trap            ;failed not equal (non zero)
3128 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
312b :                 >skip2079
                       >
312b : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
312c : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
312e : f003            >        beq skip2082
                       >        trap            ;failed not equal (non zero)
3130 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3133 :                 >skip2082
                       >
3133 : 28              >            plp         ;restore status
                        
3134 : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
3135 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3137 : 48              >            pha         ;use stack to load status
3138 : a9ff            >            lda #$ff     ;precharge accu
313a : 28              >            plp
                        
313b : 3c0a02                   bit abs1,x  ;00 - should set Z / clear  NV
                                tst_a $ff,~fnv 
313e : 08              >            php         ;save flags
313f : 08              >            php
3140 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
3142 : f003            >        beq skip2087
                       >        trap            ;failed not equal (non zero)
3144 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3147 :                 >skip2087
                       >
3147 : 68              >            pla         ;load status
                       >            cmp_flag ~fnv 
3148 : c93f            >            cmp #(~fnv |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
314a : f003            >        beq skip2090
                       >        trap            ;failed not equal (non zero)
314c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
314f :                 >skip2090
                       >
314f : 28              >            plp         ;restore status
                        
                                
                                set_a $ff,0
                       >            load_flag 0
3150 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3152 : 48              >            pha         ;use stack to load status
3153 : a9ff            >            lda #$ff     ;precharge accu
3155 : 28              >            plp
                        
3156 : 8900                     bit #$00    ;00 - should set Z
                                tst_a $ff,fz 
3158 : 08              >            php         ;save flags
3159 : 08              >            php
315a : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
315c : f003            >        beq skip2095
                       >        trap            ;failed not equal (non zero)
315e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3161 :                 >skip2095
                       >
3161 : 68              >            pla         ;load status
                       >            cmp_flag fz 
3162 : c932            >            cmp #(fz |fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3164 : f003            >        beq skip2098
                       >        trap            ;failed not equal (non zero)
3166 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3169 :                 >skip2098
                       >
3169 : 28              >            plp         ;restore status
                        
316a : ca                       dex
                                set_a 1,0
                       >            load_flag 0
316b : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
316d : 48              >            pha         ;use stack to load status
316e : a901            >            lda #1     ;precharge accu
3170 : 28              >            plp
                        
3171 : 8941                     bit #$41    ;41 - should clear Z
                                tst_a 1,0
3173 : 08              >            php         ;save flags
3174 : 08              >            php
3175 : c901            >            cmp #1     ;test result
                       >            trap_ne
3177 : f003            >        beq skip2103
                       >        trap            ;failed not equal (non zero)
3179 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
317c :                 >skip2103
                       >
317c : 68              >            pla         ;load status
                       >            cmp_flag 0
317d : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
317f : f003            >        beq skip2106
                       >        trap            ;failed not equal (non zero)
3181 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3184 :                 >skip2106
                       >
3184 : 28              >            plp         ;restore status
                        
                        ; *** DEBUG INFO ***
                        ; if it fails the previous test and your BIT # has set the V flag
                        ; see http://forum.6502.org/viewtopic.php?f=2&t=2241&p=27243#p27239
                        ; why it shouldn't alter N or V flags on a BIT #
3185 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
3186 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3188 : 48              >            pha         ;use stack to load status
3189 : a901            >            lda #1     ;precharge accu
318b : 28              >            plp
                        
318c : 8982                     bit #$82    ;82 - should set Z
                                tst_a 1,fz
318e : 08              >            php         ;save flags
318f : 08              >            php
3190 : c901            >            cmp #1     ;test result
                       >            trap_ne
3192 : f003            >        beq skip2111
                       >        trap            ;failed not equal (non zero)
3194 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3197 :                 >skip2111
                       >
3197 : 68              >            pla         ;load status
                       >            cmp_flag fz
3198 : c932            >            cmp #(fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
319a : f003            >        beq skip2114
                       >        trap            ;failed not equal (non zero)
319c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
319f :                 >skip2114
                       >
319f : 28              >            plp         ;restore status
                        
31a0 : ca                       dex
                                set_a 1,0
                       >            load_flag 0
31a1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
31a3 : 48              >            pha         ;use stack to load status
31a4 : a901            >            lda #1     ;precharge accu
31a6 : 28              >            plp
                        
31a7 : 89c3                     bit #$c3    ;c3 - should clear Z
                                tst_a 1,0
31a9 : 08              >            php         ;save flags
31aa : 08              >            php
31ab : c901            >            cmp #1     ;test result
                       >            trap_ne
31ad : f003            >        beq skip2119
                       >        trap            ;failed not equal (non zero)
31af : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
31b2 :                 >skip2119
                       >
31b2 : 68              >            pla         ;load status
                       >            cmp_flag 0
31b3 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
31b5 : f003            >        beq skip2122
                       >        trap            ;failed not equal (non zero)
31b7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
31ba :                 >skip2122
                       >
31ba : 28              >            plp         ;restore status
                        
                                
                                set_a 1,$ff
                       >            load_flag $ff
31bb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
31bd : 48              >            pha         ;use stack to load status
31be : a901            >            lda #1     ;precharge accu
31c0 : 28              >            plp
                        
31c1 : 89c3                     bit #$c3    ;c3 - clear Z
                                tst_a 1,~fz
31c3 : 08              >            php         ;save flags
31c4 : 08              >            php
31c5 : c901            >            cmp #1     ;test result
                       >            trap_ne
31c7 : f003            >        beq skip2127
                       >        trap            ;failed not equal (non zero)
31c9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
31cc :                 >skip2127
                       >
31cc : 68              >            pla         ;load status
                       >            cmp_flag ~fz
31cd : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
31cf : f003            >        beq skip2130
                       >        trap            ;failed not equal (non zero)
31d1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
31d4 :                 >skip2130
                       >
31d4 : 28              >            plp         ;restore status
                        
31d5 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
31d6 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
31d8 : 48              >            pha         ;use stack to load status
31d9 : a901            >            lda #1     ;precharge accu
31db : 28              >            plp
                        
31dc : 8982                     bit #$82    ;82 - should set Z
                                tst_a 1,$ff
31de : 08              >            php         ;save flags
31df : 08              >            php
31e0 : c901            >            cmp #1     ;test result
                       >            trap_ne
31e2 : f003            >        beq skip2135
                       >        trap            ;failed not equal (non zero)
31e4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
31e7 :                 >skip2135
                       >
31e7 : 68              >            pla         ;load status
                       >            cmp_flag $ff
31e8 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
31ea : f003            >        beq skip2138
                       >        trap            ;failed not equal (non zero)
31ec : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
31ef :                 >skip2138
                       >
31ef : 28              >            plp         ;restore status
                        
31f0 : e8                       inx
                                set_a 1,$ff
                       >            load_flag $ff
31f1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
31f3 : 48              >            pha         ;use stack to load status
31f4 : a901            >            lda #1     ;precharge accu
31f6 : 28              >            plp
                        
31f7 : 8941                     bit #$41    ;41 - should clear Z
                                tst_a 1,~fz
31f9 : 08              >            php         ;save flags
31fa : 08              >            php
31fb : c901            >            cmp #1     ;test result
                       >            trap_ne
31fd : f003            >        beq skip2143
                       >        trap            ;failed not equal (non zero)
31ff : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3202 :                 >skip2143
                       >
3202 : 68              >            pla         ;load status
                       >            cmp_flag ~fz
3203 : c9fd            >            cmp #(~fz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3205 : f003            >        beq skip2146
                       >        trap            ;failed not equal (non zero)
3207 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
320a :                 >skip2146
                       >
320a : 28              >            plp         ;restore status
                        
320b : e8                       inx
                                set_a $ff,$ff
                       >            load_flag $ff
320c : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
320e : 48              >            pha         ;use stack to load status
320f : a9ff            >            lda #$ff     ;precharge accu
3211 : 28              >            plp
                        
3212 : 8900                     bit #$00   ;00 - should set Z
                                tst_a $ff,$ff
3214 : 08              >            php         ;save flags
3215 : 08              >            php
3216 : c9ff            >            cmp #$ff     ;test result
                       >            trap_ne
3218 : f003            >        beq skip2151
                       >        trap            ;failed not equal (non zero)
321a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
321d :                 >skip2151
                       >
321d : 68              >            pla         ;load status
                       >            cmp_flag $ff
321e : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3220 : f003            >        beq skip2154
                       >        trap            ;failed not equal (non zero)
3222 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3225 :                 >skip2154
                       >
3225 : 28              >            plp         ;restore status
                        
                                
3226 : e003                     cpx #3
                                trap_ne     ;x altered during test
3228 : f003            >        beq skip2156
                       >        trap            ;failed not equal (non zero)
322a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
322d :                 >skip2156
                        
322d : c042                     cpy #$42
                                trap_ne     ;y altered during test 
322f : f003            >        beq skip2158
                       >        trap            ;failed not equal (non zero)
3231 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3234 :                 >skip2158
                        
3234 : ba                       tsx
3235 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
3237 : f003            >        beq skip2160
                       >        trap            ;failed not equal (non zero)
3239 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
323c :                 >skip2160
                        
                                next_test
323c : ad0202          >            lda test_case   ;previous test
323f : c90e            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3241 : f003            >        beq skip2163
                       >        trap            ;failed not equal (non zero)
3243 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3246 :                 >skip2163
                       >
000f =                 >test_num = test_num + 1
3246 : a90f            >            lda #test_num   ;*** next tests' number
3248 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
324b : 8d04ef            sta $ef04
324e : 74657374696e67..  db "testing TRB, TSB - zp / abs", 10, 0
                        
                        trbt    macro       ;\1 = memory, \2 = flags   
                                sty \1
                                load_flag \2
                                pha
                                lda zpt+1
                                plp
                                trb \1
                                php
                                cmp zpt+1
                                trap_ne     ;accu was changed
                                pla
                                pha
                                ora #fz     ;mask Z
                                cmp_flag \2|fz
                                trap_ne     ;flags changed except Z
                                pla
                                and #fz
                                cmp zpt+2
                                trap_ne     ;Z flag invalid
                                lda zpt+3
                                cmp zpt
                                trap_ne     ;altered bits in memory wrong       
                                endm
                        
                        tsbt    macro       ;\1 = memory, \2 = flags   
                                sty \1
                                load_flag \2
                                pha
                                lda zpt+1
                                plp
                                tsb \1
                                php
                                cmp zpt+1
                                trap_ne     ;accu was changed
                                pla
                                pha
                                ora #fz     ;mask Z
                                cmp_flag \2|fz
                                trap_ne     ;flags changed except Z
                                pla
                                and #fz
                                cmp zpt+2
                                trap_ne     ;Z flag invalid
                                lda zpt+4
                                cmp zpt
                                trap_ne     ;altered bits in memory wrong        
                                endm
                        
326b : a2c0                     ldx #$c0
326d : a000                     ldy #0      ;op1 - memory save
                                ;   zpt     ;op1 - memory modifiable
326f : 6411                     stz zpt+1   ;op2 - accu
                                ;   zpt+2   ;and flags
                                ;   zpt+3   ;memory after reset
                                ;   zpt+4   ;memory after set
                                
3271 : 98               tbt1    tya
3272 : 2511                     and zpt+1   ;set Z by anding the 2 operands
3274 : 08                       php
3275 : 68                       pla
3276 : 2902                     and #fz     ;mask Z
3278 : 8512                     sta zpt+2
327a : 98                       tya         ;reset op1 bits by op2
327b : 49ff                     eor #$ff
327d : 0511                     ora zpt+1
327f : 49ff                     eor #$ff
3281 : 8513                     sta zpt+3
3283 : 98                       tya         ;set op1 bits by op2
3284 : 0511                     ora zpt+1
3286 : 8514                     sta zpt+4
                        
                                trbt zpt,$ff
3288 : 8410            >        sty zpt
                       >        load_flag $ff
328a : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
328c : 48              >        pha
328d : a511            >        lda zpt+1
328f : 28              >        plp
3290 : 1410            >        trb zpt
3292 : 08              >        php
3293 : c511            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
3295 : f003            >        beq skip2167
                       >        trap            ;failed not equal (non zero)
3297 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
329a :                 >skip2167
                       >
329a : 68              >        pla
329b : 48              >        pha
329c : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
329e : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
32a0 : f003            >        beq skip2170
                       >        trap            ;failed not equal (non zero)
32a2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32a5 :                 >skip2170
                       >
32a5 : 68              >        pla
32a6 : 2902            >        and #fz
32a8 : c512            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
32aa : f003            >        beq skip2172
                       >        trap            ;failed not equal (non zero)
32ac : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32af :                 >skip2172
                       >
32af : a513            >        lda zpt+3
32b1 : c510            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
32b3 : f003            >        beq skip2174
                       >        trap            ;failed not equal (non zero)
32b5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32b8 :                 >skip2174
                       >
                        
                                trbt abst,$ff
32b8 : 8c0502          >        sty abst
                       >        load_flag $ff
32bb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
32bd : 48              >        pha
32be : a511            >        lda zpt+1
32c0 : 28              >        plp
32c1 : 1c0502          >        trb abst
32c4 : 08              >        php
32c5 : c511            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
32c7 : f003            >        beq skip2178
                       >        trap            ;failed not equal (non zero)
32c9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32cc :                 >skip2178
                       >
32cc : 68              >        pla
32cd : 48              >        pha
32ce : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
32d0 : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
32d2 : f003            >        beq skip2181
                       >        trap            ;failed not equal (non zero)
32d4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32d7 :                 >skip2181
                       >
32d7 : 68              >        pla
32d8 : 2902            >        and #fz
32da : c512            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
32dc : f003            >        beq skip2183
                       >        trap            ;failed not equal (non zero)
32de : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32e1 :                 >skip2183
                       >
32e1 : a513            >        lda zpt+3
32e3 : c510            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
32e5 : f003            >        beq skip2185
                       >        trap            ;failed not equal (non zero)
32e7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32ea :                 >skip2185
                       >
                        
                                trbt zpt,0
32ea : 8410            >        sty zpt
                       >        load_flag 0
32ec : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
32ee : 48              >        pha
32ef : a511            >        lda zpt+1
32f1 : 28              >        plp
32f2 : 1410            >        trb zpt
32f4 : 08              >        php
32f5 : c511            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
32f7 : f003            >        beq skip2189
                       >        trap            ;failed not equal (non zero)
32f9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
32fc :                 >skip2189
                       >
32fc : 68              >        pla
32fd : 48              >        pha
32fe : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
3300 : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
3302 : f003            >        beq skip2192
                       >        trap            ;failed not equal (non zero)
3304 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3307 :                 >skip2192
                       >
3307 : 68              >        pla
3308 : 2902            >        and #fz
330a : c512            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
330c : f003            >        beq skip2194
                       >        trap            ;failed not equal (non zero)
330e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3311 :                 >skip2194
                       >
3311 : a513            >        lda zpt+3
3313 : c510            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
3315 : f003            >        beq skip2196
                       >        trap            ;failed not equal (non zero)
3317 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
331a :                 >skip2196
                       >
                        
                                trbt abst,0
331a : 8c0502          >        sty abst
                       >        load_flag 0
331d : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
331f : 48              >        pha
3320 : a511            >        lda zpt+1
3322 : 28              >        plp
3323 : 1c0502          >        trb abst
3326 : 08              >        php
3327 : c511            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
3329 : f003            >        beq skip2200
                       >        trap            ;failed not equal (non zero)
332b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
332e :                 >skip2200
                       >
332e : 68              >        pla
332f : 48              >        pha
3330 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
3332 : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
3334 : f003            >        beq skip2203
                       >        trap            ;failed not equal (non zero)
3336 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3339 :                 >skip2203
                       >
3339 : 68              >        pla
333a : 2902            >        and #fz
333c : c512            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
333e : f003            >        beq skip2205
                       >        trap            ;failed not equal (non zero)
3340 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3343 :                 >skip2205
                       >
3343 : a513            >        lda zpt+3
3345 : c510            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong       
3347 : f003            >        beq skip2207
                       >        trap            ;failed not equal (non zero)
3349 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
334c :                 >skip2207
                       >
                        
                                tsbt zpt,$ff
334c : 8410            >        sty zpt
                       >        load_flag $ff
334e : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3350 : 48              >        pha
3351 : a511            >        lda zpt+1
3353 : 28              >        plp
3354 : 0410            >        tsb zpt
3356 : 08              >        php
3357 : c511            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
3359 : f003            >        beq skip2211
                       >        trap            ;failed not equal (non zero)
335b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
335e :                 >skip2211
                       >
335e : 68              >        pla
335f : 48              >        pha
3360 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
3362 : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
3364 : f003            >        beq skip2214
                       >        trap            ;failed not equal (non zero)
3366 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3369 :                 >skip2214
                       >
3369 : 68              >        pla
336a : 2902            >        and #fz
336c : c512            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
336e : f003            >        beq skip2216
                       >        trap            ;failed not equal (non zero)
3370 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3373 :                 >skip2216
                       >
3373 : a514            >        lda zpt+4
3375 : c510            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
3377 : f003            >        beq skip2218
                       >        trap            ;failed not equal (non zero)
3379 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
337c :                 >skip2218
                       >
                        
                                tsbt abst,$ff
337c : 8c0502          >        sty abst
                       >        load_flag $ff
337f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3381 : 48              >        pha
3382 : a511            >        lda zpt+1
3384 : 28              >        plp
3385 : 0c0502          >        tsb abst
3388 : 08              >        php
3389 : c511            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
338b : f003            >        beq skip2222
                       >        trap            ;failed not equal (non zero)
338d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3390 :                 >skip2222
                       >
3390 : 68              >        pla
3391 : 48              >        pha
3392 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag $ff|fz
3394 : c9ff            >            cmp #($ff|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
3396 : f003            >        beq skip2225
                       >        trap            ;failed not equal (non zero)
3398 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
339b :                 >skip2225
                       >
339b : 68              >        pla
339c : 2902            >        and #fz
339e : c512            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
33a0 : f003            >        beq skip2227
                       >        trap            ;failed not equal (non zero)
33a2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33a5 :                 >skip2227
                       >
33a5 : a514            >        lda zpt+4
33a7 : c510            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
33a9 : f003            >        beq skip2229
                       >        trap            ;failed not equal (non zero)
33ab : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33ae :                 >skip2229
                       >
                        
                                tsbt zpt,0
33ae : 8410            >        sty zpt
                       >        load_flag 0
33b0 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
33b2 : 48              >        pha
33b3 : a511            >        lda zpt+1
33b5 : 28              >        plp
33b6 : 0410            >        tsb zpt
33b8 : 08              >        php
33b9 : c511            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
33bb : f003            >        beq skip2233
                       >        trap            ;failed not equal (non zero)
33bd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33c0 :                 >skip2233
                       >
33c0 : 68              >        pla
33c1 : 48              >        pha
33c2 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
33c4 : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
33c6 : f003            >        beq skip2236
                       >        trap            ;failed not equal (non zero)
33c8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33cb :                 >skip2236
                       >
33cb : 68              >        pla
33cc : 2902            >        and #fz
33ce : c512            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
33d0 : f003            >        beq skip2238
                       >        trap            ;failed not equal (non zero)
33d2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33d5 :                 >skip2238
                       >
33d5 : a514            >        lda zpt+4
33d7 : c510            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
33d9 : f003            >        beq skip2240
                       >        trap            ;failed not equal (non zero)
33db : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33de :                 >skip2240
                       >
                        
                                tsbt abst,0
33de : 8c0502          >        sty abst
                       >        load_flag 0
33e1 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
33e3 : 48              >        pha
33e4 : a511            >        lda zpt+1
33e6 : 28              >        plp
33e7 : 0c0502          >        tsb abst
33ea : 08              >        php
33eb : c511            >        cmp zpt+1
                       >        trap_ne     ;accu was changed
33ed : f003            >        beq skip2244
                       >        trap            ;failed not equal (non zero)
33ef : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33f2 :                 >skip2244
                       >
33f2 : 68              >        pla
33f3 : 48              >        pha
33f4 : 0902            >        ora #fz     ;mask Z
                       >        cmp_flag 0|fz
33f6 : c932            >            cmp #(0|fz|fao)&m8    ;expected flags + always on bits
                       >
                       >        trap_ne     ;flags changed except Z
33f8 : f003            >        beq skip2247
                       >        trap            ;failed not equal (non zero)
33fa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
33fd :                 >skip2247
                       >
33fd : 68              >        pla
33fe : 2902            >        and #fz
3400 : c512            >        cmp zpt+2
                       >        trap_ne     ;Z flag invalid
3402 : f003            >        beq skip2249
                       >        trap            ;failed not equal (non zero)
3404 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3407 :                 >skip2249
                       >
3407 : a514            >        lda zpt+4
3409 : c510            >        cmp zpt
                       >        trap_ne     ;altered bits in memory wrong        
340b : f003            >        beq skip2251
                       >        trap            ;failed not equal (non zero)
340d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3410 :                 >skip2251
                       >
                        
                                
3410 : c8                       iny         ;iterate op1
3411 : d004                     bne tbt3
3413 : e611                     inc zpt+1   ;iterate op2
3415 : f003                     beq tbt2
3417 : 4c7132           tbt3    jmp tbt1        
341a :                  tbt2
341a : e0c0                     cpx #$c0
                                trap_ne     ;x altered during test
341c : f003            >        beq skip2253
                       >        trap            ;failed not equal (non zero)
341e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3421 :                 >skip2253
                        
3421 : ba                       tsx
3422 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
3424 : f003            >        beq skip2255
                       >        trap            ;failed not equal (non zero)
3426 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3429 :                 >skip2255
                        
                                next_test    
3429 : ad0202          >            lda test_case   ;previous test
342c : c90f            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
342e : f003            >        beq skip2258
                       >        trap            ;failed not equal (non zero)
3430 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3433 :                 >skip2258
                       >
0010 =                 >test_num = test_num + 1
3433 : a910            >            lda #test_num   ;*** next tests' number
3435 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
                            if rkwl_wdc_op
3438 : 8d04ef            sta $ef04
343b : 74657374696e67..  db "testing RMB, SMB - zp", 10, 0
                        rmbt    macro       ;\1 = bitnum
                                lda #$ff
                                sta zpt
                                set_a $a5,0
                                rmb \1,zpt
                                tst_a $a5,0
                                lda zpt
                                cmp #$ff-(1<<\1)
                                trap_ne     ;wrong bits set or cleared
                                lda #1<<\1
                                sta zpt
                                set_a $5a,$ff
                                rmb \1,zpt
                                tst_a $5a,$ff
                                lda zpt
                                trap_ne     ;wrong bits set or cleared
                                endm
                        smbt    macro       ;\1 = bitnum
                                lda #$ff-(1<<\1)
                                sta zpt
                                set_a $a5,0
                                smb \1,zpt
                                tst_a $a5,0
                                lda zpt
                                cmp #$ff
                                trap_ne     ;wrong bits set or cleared
                                lda #0
                                sta zpt
                                set_a $5a,$ff
                                smb \1,zpt
                                tst_a $5a,$ff
                                lda zpt
                                cmp #1<<\1
                                trap_ne     ;wrong bits set or cleared
                                endm
                        
3452 : a2ba                     ldx #$ba    ;protect x & y
3454 : a0d0                     ldy #$d0
                                rmbt 0
3456 : a9ff            >        lda #$ff
3458 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
345a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
345c : 48              >            pha         ;use stack to load status
345d : a9a5            >            lda #$a5     ;precharge accu
345f : 28              >            plp
                       >
3460 : 0710            >        rmb 0,zpt
                       >        tst_a $a5,0
3462 : 08              >            php         ;save flags
3463 : 08              >            php
3464 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3466 : f003            >        beq skip2264
                       >        trap            ;failed not equal (non zero)
3468 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
346b :                 >skip2264
                       >
346b : 68              >            pla         ;load status
                       >            cmp_flag 0
346c : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
346e : f003            >        beq skip2267
                       >        trap            ;failed not equal (non zero)
3470 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3473 :                 >skip2267
                       >
3473 : 28              >            plp         ;restore status
                       >
3474 : a510            >        lda zpt
3476 : c9fe            >        cmp #$ff-(1<<0)
                       >        trap_ne     ;wrong bits set or cleared
3478 : f003            >        beq skip2269
                       >        trap            ;failed not equal (non zero)
347a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
347d :                 >skip2269
                       >
347d : a901            >        lda #1<<0
347f : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3481 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3483 : 48              >            pha         ;use stack to load status
3484 : a95a            >            lda #$5a     ;precharge accu
3486 : 28              >            plp
                       >
3487 : 0710            >        rmb 0,zpt
                       >        tst_a $5a,$ff
3489 : 08              >            php         ;save flags
348a : 08              >            php
348b : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
348d : f003            >        beq skip2274
                       >        trap            ;failed not equal (non zero)
348f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3492 :                 >skip2274
                       >
3492 : 68              >            pla         ;load status
                       >            cmp_flag $ff
3493 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3495 : f003            >        beq skip2277
                       >        trap            ;failed not equal (non zero)
3497 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
349a :                 >skip2277
                       >
349a : 28              >            plp         ;restore status
                       >
349b : a510            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
349d : f003            >        beq skip2279
                       >        trap            ;failed not equal (non zero)
349f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34a2 :                 >skip2279
                       >
                        
                                rmbt 1
34a2 : a9ff            >        lda #$ff
34a4 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
34a6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
34a8 : 48              >            pha         ;use stack to load status
34a9 : a9a5            >            lda #$a5     ;precharge accu
34ab : 28              >            plp
                       >
34ac : 1710            >        rmb 1,zpt
                       >        tst_a $a5,0
34ae : 08              >            php         ;save flags
34af : 08              >            php
34b0 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
34b2 : f003            >        beq skip2285
                       >        trap            ;failed not equal (non zero)
34b4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34b7 :                 >skip2285
                       >
34b7 : 68              >            pla         ;load status
                       >            cmp_flag 0
34b8 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
34ba : f003            >        beq skip2288
                       >        trap            ;failed not equal (non zero)
34bc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34bf :                 >skip2288
                       >
34bf : 28              >            plp         ;restore status
                       >
34c0 : a510            >        lda zpt
34c2 : c9fd            >        cmp #$ff-(1<<1)
                       >        trap_ne     ;wrong bits set or cleared
34c4 : f003            >        beq skip2290
                       >        trap            ;failed not equal (non zero)
34c6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34c9 :                 >skip2290
                       >
34c9 : a902            >        lda #1<<1
34cb : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
34cd : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
34cf : 48              >            pha         ;use stack to load status
34d0 : a95a            >            lda #$5a     ;precharge accu
34d2 : 28              >            plp
                       >
34d3 : 1710            >        rmb 1,zpt
                       >        tst_a $5a,$ff
34d5 : 08              >            php         ;save flags
34d6 : 08              >            php
34d7 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
34d9 : f003            >        beq skip2295
                       >        trap            ;failed not equal (non zero)
34db : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34de :                 >skip2295
                       >
34de : 68              >            pla         ;load status
                       >            cmp_flag $ff
34df : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
34e1 : f003            >        beq skip2298
                       >        trap            ;failed not equal (non zero)
34e3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34e6 :                 >skip2298
                       >
34e6 : 28              >            plp         ;restore status
                       >
34e7 : a510            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
34e9 : f003            >        beq skip2300
                       >        trap            ;failed not equal (non zero)
34eb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
34ee :                 >skip2300
                       >
                        
                                rmbt 2
34ee : a9ff            >        lda #$ff
34f0 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
34f2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
34f4 : 48              >            pha         ;use stack to load status
34f5 : a9a5            >            lda #$a5     ;precharge accu
34f7 : 28              >            plp
                       >
34f8 : 2710            >        rmb 2,zpt
                       >        tst_a $a5,0
34fa : 08              >            php         ;save flags
34fb : 08              >            php
34fc : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
34fe : f003            >        beq skip2306
                       >        trap            ;failed not equal (non zero)
3500 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3503 :                 >skip2306
                       >
3503 : 68              >            pla         ;load status
                       >            cmp_flag 0
3504 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3506 : f003            >        beq skip2309
                       >        trap            ;failed not equal (non zero)
3508 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
350b :                 >skip2309
                       >
350b : 28              >            plp         ;restore status
                       >
350c : a510            >        lda zpt
350e : c9fb            >        cmp #$ff-(1<<2)
                       >        trap_ne     ;wrong bits set or cleared
3510 : f003            >        beq skip2311
                       >        trap            ;failed not equal (non zero)
3512 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3515 :                 >skip2311
                       >
3515 : a904            >        lda #1<<2
3517 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3519 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
351b : 48              >            pha         ;use stack to load status
351c : a95a            >            lda #$5a     ;precharge accu
351e : 28              >            plp
                       >
351f : 2710            >        rmb 2,zpt
                       >        tst_a $5a,$ff
3521 : 08              >            php         ;save flags
3522 : 08              >            php
3523 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3525 : f003            >        beq skip2316
                       >        trap            ;failed not equal (non zero)
3527 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
352a :                 >skip2316
                       >
352a : 68              >            pla         ;load status
                       >            cmp_flag $ff
352b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
352d : f003            >        beq skip2319
                       >        trap            ;failed not equal (non zero)
352f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3532 :                 >skip2319
                       >
3532 : 28              >            plp         ;restore status
                       >
3533 : a510            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
3535 : f003            >        beq skip2321
                       >        trap            ;failed not equal (non zero)
3537 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
353a :                 >skip2321
                       >
                        
                                rmbt 3
353a : a9ff            >        lda #$ff
353c : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
353e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3540 : 48              >            pha         ;use stack to load status
3541 : a9a5            >            lda #$a5     ;precharge accu
3543 : 28              >            plp
                       >
3544 : 3710            >        rmb 3,zpt
                       >        tst_a $a5,0
3546 : 08              >            php         ;save flags
3547 : 08              >            php
3548 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
354a : f003            >        beq skip2327
                       >        trap            ;failed not equal (non zero)
354c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
354f :                 >skip2327
                       >
354f : 68              >            pla         ;load status
                       >            cmp_flag 0
3550 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3552 : f003            >        beq skip2330
                       >        trap            ;failed not equal (non zero)
3554 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3557 :                 >skip2330
                       >
3557 : 28              >            plp         ;restore status
                       >
3558 : a510            >        lda zpt
355a : c9f7            >        cmp #$ff-(1<<3)
                       >        trap_ne     ;wrong bits set or cleared
355c : f003            >        beq skip2332
                       >        trap            ;failed not equal (non zero)
355e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3561 :                 >skip2332
                       >
3561 : a908            >        lda #1<<3
3563 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3565 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3567 : 48              >            pha         ;use stack to load status
3568 : a95a            >            lda #$5a     ;precharge accu
356a : 28              >            plp
                       >
356b : 3710            >        rmb 3,zpt
                       >        tst_a $5a,$ff
356d : 08              >            php         ;save flags
356e : 08              >            php
356f : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3571 : f003            >        beq skip2337
                       >        trap            ;failed not equal (non zero)
3573 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3576 :                 >skip2337
                       >
3576 : 68              >            pla         ;load status
                       >            cmp_flag $ff
3577 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3579 : f003            >        beq skip2340
                       >        trap            ;failed not equal (non zero)
357b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
357e :                 >skip2340
                       >
357e : 28              >            plp         ;restore status
                       >
357f : a510            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
3581 : f003            >        beq skip2342
                       >        trap            ;failed not equal (non zero)
3583 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3586 :                 >skip2342
                       >
                        
                                rmbt 4
3586 : a9ff            >        lda #$ff
3588 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
358a : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
358c : 48              >            pha         ;use stack to load status
358d : a9a5            >            lda #$a5     ;precharge accu
358f : 28              >            plp
                       >
3590 : 4710            >        rmb 4,zpt
                       >        tst_a $a5,0
3592 : 08              >            php         ;save flags
3593 : 08              >            php
3594 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3596 : f003            >        beq skip2348
                       >        trap            ;failed not equal (non zero)
3598 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
359b :                 >skip2348
                       >
359b : 68              >            pla         ;load status
                       >            cmp_flag 0
359c : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
359e : f003            >        beq skip2351
                       >        trap            ;failed not equal (non zero)
35a0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35a3 :                 >skip2351
                       >
35a3 : 28              >            plp         ;restore status
                       >
35a4 : a510            >        lda zpt
35a6 : c9ef            >        cmp #$ff-(1<<4)
                       >        trap_ne     ;wrong bits set or cleared
35a8 : f003            >        beq skip2353
                       >        trap            ;failed not equal (non zero)
35aa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35ad :                 >skip2353
                       >
35ad : a910            >        lda #1<<4
35af : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
35b1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
35b3 : 48              >            pha         ;use stack to load status
35b4 : a95a            >            lda #$5a     ;precharge accu
35b6 : 28              >            plp
                       >
35b7 : 4710            >        rmb 4,zpt
                       >        tst_a $5a,$ff
35b9 : 08              >            php         ;save flags
35ba : 08              >            php
35bb : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
35bd : f003            >        beq skip2358
                       >        trap            ;failed not equal (non zero)
35bf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35c2 :                 >skip2358
                       >
35c2 : 68              >            pla         ;load status
                       >            cmp_flag $ff
35c3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35c5 : f003            >        beq skip2361
                       >        trap            ;failed not equal (non zero)
35c7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35ca :                 >skip2361
                       >
35ca : 28              >            plp         ;restore status
                       >
35cb : a510            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
35cd : f003            >        beq skip2363
                       >        trap            ;failed not equal (non zero)
35cf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35d2 :                 >skip2363
                       >
                        
                                rmbt 5
35d2 : a9ff            >        lda #$ff
35d4 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
35d6 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
35d8 : 48              >            pha         ;use stack to load status
35d9 : a9a5            >            lda #$a5     ;precharge accu
35db : 28              >            plp
                       >
35dc : 5710            >        rmb 5,zpt
                       >        tst_a $a5,0
35de : 08              >            php         ;save flags
35df : 08              >            php
35e0 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
35e2 : f003            >        beq skip2369
                       >        trap            ;failed not equal (non zero)
35e4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35e7 :                 >skip2369
                       >
35e7 : 68              >            pla         ;load status
                       >            cmp_flag 0
35e8 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
35ea : f003            >        beq skip2372
                       >        trap            ;failed not equal (non zero)
35ec : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35ef :                 >skip2372
                       >
35ef : 28              >            plp         ;restore status
                       >
35f0 : a510            >        lda zpt
35f2 : c9df            >        cmp #$ff-(1<<5)
                       >        trap_ne     ;wrong bits set or cleared
35f4 : f003            >        beq skip2374
                       >        trap            ;failed not equal (non zero)
35f6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
35f9 :                 >skip2374
                       >
35f9 : a920            >        lda #1<<5
35fb : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
35fd : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
35ff : 48              >            pha         ;use stack to load status
3600 : a95a            >            lda #$5a     ;precharge accu
3602 : 28              >            plp
                       >
3603 : 5710            >        rmb 5,zpt
                       >        tst_a $5a,$ff
3605 : 08              >            php         ;save flags
3606 : 08              >            php
3607 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3609 : f003            >        beq skip2379
                       >        trap            ;failed not equal (non zero)
360b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
360e :                 >skip2379
                       >
360e : 68              >            pla         ;load status
                       >            cmp_flag $ff
360f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3611 : f003            >        beq skip2382
                       >        trap            ;failed not equal (non zero)
3613 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3616 :                 >skip2382
                       >
3616 : 28              >            plp         ;restore status
                       >
3617 : a510            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
3619 : f003            >        beq skip2384
                       >        trap            ;failed not equal (non zero)
361b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
361e :                 >skip2384
                       >
                        
                                rmbt 6
361e : a9ff            >        lda #$ff
3620 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3622 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3624 : 48              >            pha         ;use stack to load status
3625 : a9a5            >            lda #$a5     ;precharge accu
3627 : 28              >            plp
                       >
3628 : 6710            >        rmb 6,zpt
                       >        tst_a $a5,0
362a : 08              >            php         ;save flags
362b : 08              >            php
362c : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
362e : f003            >        beq skip2390
                       >        trap            ;failed not equal (non zero)
3630 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3633 :                 >skip2390
                       >
3633 : 68              >            pla         ;load status
                       >            cmp_flag 0
3634 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3636 : f003            >        beq skip2393
                       >        trap            ;failed not equal (non zero)
3638 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
363b :                 >skip2393
                       >
363b : 28              >            plp         ;restore status
                       >
363c : a510            >        lda zpt
363e : c9bf            >        cmp #$ff-(1<<6)
                       >        trap_ne     ;wrong bits set or cleared
3640 : f003            >        beq skip2395
                       >        trap            ;failed not equal (non zero)
3642 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3645 :                 >skip2395
                       >
3645 : a940            >        lda #1<<6
3647 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3649 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
364b : 48              >            pha         ;use stack to load status
364c : a95a            >            lda #$5a     ;precharge accu
364e : 28              >            plp
                       >
364f : 6710            >        rmb 6,zpt
                       >        tst_a $5a,$ff
3651 : 08              >            php         ;save flags
3652 : 08              >            php
3653 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3655 : f003            >        beq skip2400
                       >        trap            ;failed not equal (non zero)
3657 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
365a :                 >skip2400
                       >
365a : 68              >            pla         ;load status
                       >            cmp_flag $ff
365b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
365d : f003            >        beq skip2403
                       >        trap            ;failed not equal (non zero)
365f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3662 :                 >skip2403
                       >
3662 : 28              >            plp         ;restore status
                       >
3663 : a510            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
3665 : f003            >        beq skip2405
                       >        trap            ;failed not equal (non zero)
3667 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
366a :                 >skip2405
                       >
                        
                                rmbt 7
366a : a9ff            >        lda #$ff
366c : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
366e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3670 : 48              >            pha         ;use stack to load status
3671 : a9a5            >            lda #$a5     ;precharge accu
3673 : 28              >            plp
                       >
3674 : 7710            >        rmb 7,zpt
                       >        tst_a $a5,0
3676 : 08              >            php         ;save flags
3677 : 08              >            php
3678 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
367a : f003            >        beq skip2411
                       >        trap            ;failed not equal (non zero)
367c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
367f :                 >skip2411
                       >
367f : 68              >            pla         ;load status
                       >            cmp_flag 0
3680 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3682 : f003            >        beq skip2414
                       >        trap            ;failed not equal (non zero)
3684 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3687 :                 >skip2414
                       >
3687 : 28              >            plp         ;restore status
                       >
3688 : a510            >        lda zpt
368a : c97f            >        cmp #$ff-(1<<7)
                       >        trap_ne     ;wrong bits set or cleared
368c : f003            >        beq skip2416
                       >        trap            ;failed not equal (non zero)
368e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3691 :                 >skip2416
                       >
3691 : a980            >        lda #1<<7
3693 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3695 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3697 : 48              >            pha         ;use stack to load status
3698 : a95a            >            lda #$5a     ;precharge accu
369a : 28              >            plp
                       >
369b : 7710            >        rmb 7,zpt
                       >        tst_a $5a,$ff
369d : 08              >            php         ;save flags
369e : 08              >            php
369f : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
36a1 : f003            >        beq skip2421
                       >        trap            ;failed not equal (non zero)
36a3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36a6 :                 >skip2421
                       >
36a6 : 68              >            pla         ;load status
                       >            cmp_flag $ff
36a7 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36a9 : f003            >        beq skip2424
                       >        trap            ;failed not equal (non zero)
36ab : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36ae :                 >skip2424
                       >
36ae : 28              >            plp         ;restore status
                       >
36af : a510            >        lda zpt
                       >        trap_ne     ;wrong bits set or cleared
36b1 : f003            >        beq skip2426
                       >        trap            ;failed not equal (non zero)
36b3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36b6 :                 >skip2426
                       >
                        
                                smbt 0
36b6 : a9fe            >        lda #$ff-(1<<0)
36b8 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
36ba : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
36bc : 48              >            pha         ;use stack to load status
36bd : a9a5            >            lda #$a5     ;precharge accu
36bf : 28              >            plp
                       >
36c0 : 8710            >        smb 0,zpt
                       >        tst_a $a5,0
36c2 : 08              >            php         ;save flags
36c3 : 08              >            php
36c4 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
36c6 : f003            >        beq skip2432
                       >        trap            ;failed not equal (non zero)
36c8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36cb :                 >skip2432
                       >
36cb : 68              >            pla         ;load status
                       >            cmp_flag 0
36cc : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36ce : f003            >        beq skip2435
                       >        trap            ;failed not equal (non zero)
36d0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36d3 :                 >skip2435
                       >
36d3 : 28              >            plp         ;restore status
                       >
36d4 : a510            >        lda zpt
36d6 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
36d8 : f003            >        beq skip2437
                       >        trap            ;failed not equal (non zero)
36da : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36dd :                 >skip2437
                       >
36dd : a900            >        lda #0
36df : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
36e1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
36e3 : 48              >            pha         ;use stack to load status
36e4 : a95a            >            lda #$5a     ;precharge accu
36e6 : 28              >            plp
                       >
36e7 : 8710            >        smb 0,zpt
                       >        tst_a $5a,$ff
36e9 : 08              >            php         ;save flags
36ea : 08              >            php
36eb : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
36ed : f003            >        beq skip2442
                       >        trap            ;failed not equal (non zero)
36ef : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36f2 :                 >skip2442
                       >
36f2 : 68              >            pla         ;load status
                       >            cmp_flag $ff
36f3 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
36f5 : f003            >        beq skip2445
                       >        trap            ;failed not equal (non zero)
36f7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
36fa :                 >skip2445
                       >
36fa : 28              >            plp         ;restore status
                       >
36fb : a510            >        lda zpt
36fd : c901            >        cmp #1<<0
                       >        trap_ne     ;wrong bits set or cleared
36ff : f003            >        beq skip2447
                       >        trap            ;failed not equal (non zero)
3701 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3704 :                 >skip2447
                       >
                        
                                smbt 1
3704 : a9fd            >        lda #$ff-(1<<1)
3706 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3708 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
370a : 48              >            pha         ;use stack to load status
370b : a9a5            >            lda #$a5     ;precharge accu
370d : 28              >            plp
                       >
370e : 9710            >        smb 1,zpt
                       >        tst_a $a5,0
3710 : 08              >            php         ;save flags
3711 : 08              >            php
3712 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3714 : f003            >        beq skip2453
                       >        trap            ;failed not equal (non zero)
3716 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3719 :                 >skip2453
                       >
3719 : 68              >            pla         ;load status
                       >            cmp_flag 0
371a : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
371c : f003            >        beq skip2456
                       >        trap            ;failed not equal (non zero)
371e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3721 :                 >skip2456
                       >
3721 : 28              >            plp         ;restore status
                       >
3722 : a510            >        lda zpt
3724 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
3726 : f003            >        beq skip2458
                       >        trap            ;failed not equal (non zero)
3728 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
372b :                 >skip2458
                       >
372b : a900            >        lda #0
372d : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
372f : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3731 : 48              >            pha         ;use stack to load status
3732 : a95a            >            lda #$5a     ;precharge accu
3734 : 28              >            plp
                       >
3735 : 9710            >        smb 1,zpt
                       >        tst_a $5a,$ff
3737 : 08              >            php         ;save flags
3738 : 08              >            php
3739 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
373b : f003            >        beq skip2463
                       >        trap            ;failed not equal (non zero)
373d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3740 :                 >skip2463
                       >
3740 : 68              >            pla         ;load status
                       >            cmp_flag $ff
3741 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3743 : f003            >        beq skip2466
                       >        trap            ;failed not equal (non zero)
3745 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3748 :                 >skip2466
                       >
3748 : 28              >            plp         ;restore status
                       >
3749 : a510            >        lda zpt
374b : c902            >        cmp #1<<1
                       >        trap_ne     ;wrong bits set or cleared
374d : f003            >        beq skip2468
                       >        trap            ;failed not equal (non zero)
374f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3752 :                 >skip2468
                       >
                        
                                smbt 2
3752 : a9fb            >        lda #$ff-(1<<2)
3754 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3756 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3758 : 48              >            pha         ;use stack to load status
3759 : a9a5            >            lda #$a5     ;precharge accu
375b : 28              >            plp
                       >
375c : a710            >        smb 2,zpt
                       >        tst_a $a5,0
375e : 08              >            php         ;save flags
375f : 08              >            php
3760 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
3762 : f003            >        beq skip2474
                       >        trap            ;failed not equal (non zero)
3764 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3767 :                 >skip2474
                       >
3767 : 68              >            pla         ;load status
                       >            cmp_flag 0
3768 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
376a : f003            >        beq skip2477
                       >        trap            ;failed not equal (non zero)
376c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
376f :                 >skip2477
                       >
376f : 28              >            plp         ;restore status
                       >
3770 : a510            >        lda zpt
3772 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
3774 : f003            >        beq skip2479
                       >        trap            ;failed not equal (non zero)
3776 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3779 :                 >skip2479
                       >
3779 : a900            >        lda #0
377b : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
377d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
377f : 48              >            pha         ;use stack to load status
3780 : a95a            >            lda #$5a     ;precharge accu
3782 : 28              >            plp
                       >
3783 : a710            >        smb 2,zpt
                       >        tst_a $5a,$ff
3785 : 08              >            php         ;save flags
3786 : 08              >            php
3787 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3789 : f003            >        beq skip2484
                       >        trap            ;failed not equal (non zero)
378b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
378e :                 >skip2484
                       >
378e : 68              >            pla         ;load status
                       >            cmp_flag $ff
378f : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3791 : f003            >        beq skip2487
                       >        trap            ;failed not equal (non zero)
3793 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3796 :                 >skip2487
                       >
3796 : 28              >            plp         ;restore status
                       >
3797 : a510            >        lda zpt
3799 : c904            >        cmp #1<<2
                       >        trap_ne     ;wrong bits set or cleared
379b : f003            >        beq skip2489
                       >        trap            ;failed not equal (non zero)
379d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37a0 :                 >skip2489
                       >
                        
                                smbt 3
37a0 : a9f7            >        lda #$ff-(1<<3)
37a2 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
37a4 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
37a6 : 48              >            pha         ;use stack to load status
37a7 : a9a5            >            lda #$a5     ;precharge accu
37a9 : 28              >            plp
                       >
37aa : b710            >        smb 3,zpt
                       >        tst_a $a5,0
37ac : 08              >            php         ;save flags
37ad : 08              >            php
37ae : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
37b0 : f003            >        beq skip2495
                       >        trap            ;failed not equal (non zero)
37b2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37b5 :                 >skip2495
                       >
37b5 : 68              >            pla         ;load status
                       >            cmp_flag 0
37b6 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
37b8 : f003            >        beq skip2498
                       >        trap            ;failed not equal (non zero)
37ba : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37bd :                 >skip2498
                       >
37bd : 28              >            plp         ;restore status
                       >
37be : a510            >        lda zpt
37c0 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
37c2 : f003            >        beq skip2500
                       >        trap            ;failed not equal (non zero)
37c4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37c7 :                 >skip2500
                       >
37c7 : a900            >        lda #0
37c9 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
37cb : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
37cd : 48              >            pha         ;use stack to load status
37ce : a95a            >            lda #$5a     ;precharge accu
37d0 : 28              >            plp
                       >
37d1 : b710            >        smb 3,zpt
                       >        tst_a $5a,$ff
37d3 : 08              >            php         ;save flags
37d4 : 08              >            php
37d5 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
37d7 : f003            >        beq skip2505
                       >        trap            ;failed not equal (non zero)
37d9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37dc :                 >skip2505
                       >
37dc : 68              >            pla         ;load status
                       >            cmp_flag $ff
37dd : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
37df : f003            >        beq skip2508
                       >        trap            ;failed not equal (non zero)
37e1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37e4 :                 >skip2508
                       >
37e4 : 28              >            plp         ;restore status
                       >
37e5 : a510            >        lda zpt
37e7 : c908            >        cmp #1<<3
                       >        trap_ne     ;wrong bits set or cleared
37e9 : f003            >        beq skip2510
                       >        trap            ;failed not equal (non zero)
37eb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
37ee :                 >skip2510
                       >
                        
                                smbt 4
37ee : a9ef            >        lda #$ff-(1<<4)
37f0 : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
37f2 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
37f4 : 48              >            pha         ;use stack to load status
37f5 : a9a5            >            lda #$a5     ;precharge accu
37f7 : 28              >            plp
                       >
37f8 : c710            >        smb 4,zpt
                       >        tst_a $a5,0
37fa : 08              >            php         ;save flags
37fb : 08              >            php
37fc : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
37fe : f003            >        beq skip2516
                       >        trap            ;failed not equal (non zero)
3800 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3803 :                 >skip2516
                       >
3803 : 68              >            pla         ;load status
                       >            cmp_flag 0
3804 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3806 : f003            >        beq skip2519
                       >        trap            ;failed not equal (non zero)
3808 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
380b :                 >skip2519
                       >
380b : 28              >            plp         ;restore status
                       >
380c : a510            >        lda zpt
380e : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
3810 : f003            >        beq skip2521
                       >        trap            ;failed not equal (non zero)
3812 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3815 :                 >skip2521
                       >
3815 : a900            >        lda #0
3817 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3819 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
381b : 48              >            pha         ;use stack to load status
381c : a95a            >            lda #$5a     ;precharge accu
381e : 28              >            plp
                       >
381f : c710            >        smb 4,zpt
                       >        tst_a $5a,$ff
3821 : 08              >            php         ;save flags
3822 : 08              >            php
3823 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3825 : f003            >        beq skip2526
                       >        trap            ;failed not equal (non zero)
3827 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
382a :                 >skip2526
                       >
382a : 68              >            pla         ;load status
                       >            cmp_flag $ff
382b : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
382d : f003            >        beq skip2529
                       >        trap            ;failed not equal (non zero)
382f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3832 :                 >skip2529
                       >
3832 : 28              >            plp         ;restore status
                       >
3833 : a510            >        lda zpt
3835 : c910            >        cmp #1<<4
                       >        trap_ne     ;wrong bits set or cleared
3837 : f003            >        beq skip2531
                       >        trap            ;failed not equal (non zero)
3839 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
383c :                 >skip2531
                       >
                        
                                smbt 5
383c : a9df            >        lda #$ff-(1<<5)
383e : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
3840 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3842 : 48              >            pha         ;use stack to load status
3843 : a9a5            >            lda #$a5     ;precharge accu
3845 : 28              >            plp
                       >
3846 : d710            >        smb 5,zpt
                       >        tst_a $a5,0
3848 : 08              >            php         ;save flags
3849 : 08              >            php
384a : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
384c : f003            >        beq skip2537
                       >        trap            ;failed not equal (non zero)
384e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3851 :                 >skip2537
                       >
3851 : 68              >            pla         ;load status
                       >            cmp_flag 0
3852 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3854 : f003            >        beq skip2540
                       >        trap            ;failed not equal (non zero)
3856 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3859 :                 >skip2540
                       >
3859 : 28              >            plp         ;restore status
                       >
385a : a510            >        lda zpt
385c : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
385e : f003            >        beq skip2542
                       >        trap            ;failed not equal (non zero)
3860 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3863 :                 >skip2542
                       >
3863 : a900            >        lda #0
3865 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3867 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3869 : 48              >            pha         ;use stack to load status
386a : a95a            >            lda #$5a     ;precharge accu
386c : 28              >            plp
                       >
386d : d710            >        smb 5,zpt
                       >        tst_a $5a,$ff
386f : 08              >            php         ;save flags
3870 : 08              >            php
3871 : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
3873 : f003            >        beq skip2547
                       >        trap            ;failed not equal (non zero)
3875 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3878 :                 >skip2547
                       >
3878 : 68              >            pla         ;load status
                       >            cmp_flag $ff
3879 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
387b : f003            >        beq skip2550
                       >        trap            ;failed not equal (non zero)
387d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3880 :                 >skip2550
                       >
3880 : 28              >            plp         ;restore status
                       >
3881 : a510            >        lda zpt
3883 : c920            >        cmp #1<<5
                       >        trap_ne     ;wrong bits set or cleared
3885 : f003            >        beq skip2552
                       >        trap            ;failed not equal (non zero)
3887 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
388a :                 >skip2552
                       >
                        
                                smbt 6
388a : a9bf            >        lda #$ff-(1<<6)
388c : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
388e : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3890 : 48              >            pha         ;use stack to load status
3891 : a9a5            >            lda #$a5     ;precharge accu
3893 : 28              >            plp
                       >
3894 : e710            >        smb 6,zpt
                       >        tst_a $a5,0
3896 : 08              >            php         ;save flags
3897 : 08              >            php
3898 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
389a : f003            >        beq skip2558
                       >        trap            ;failed not equal (non zero)
389c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
389f :                 >skip2558
                       >
389f : 68              >            pla         ;load status
                       >            cmp_flag 0
38a0 : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
38a2 : f003            >        beq skip2561
                       >        trap            ;failed not equal (non zero)
38a4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38a7 :                 >skip2561
                       >
38a7 : 28              >            plp         ;restore status
                       >
38a8 : a510            >        lda zpt
38aa : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
38ac : f003            >        beq skip2563
                       >        trap            ;failed not equal (non zero)
38ae : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38b1 :                 >skip2563
                       >
38b1 : a900            >        lda #0
38b3 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
38b5 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
38b7 : 48              >            pha         ;use stack to load status
38b8 : a95a            >            lda #$5a     ;precharge accu
38ba : 28              >            plp
                       >
38bb : e710            >        smb 6,zpt
                       >        tst_a $5a,$ff
38bd : 08              >            php         ;save flags
38be : 08              >            php
38bf : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
38c1 : f003            >        beq skip2568
                       >        trap            ;failed not equal (non zero)
38c3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38c6 :                 >skip2568
                       >
38c6 : 68              >            pla         ;load status
                       >            cmp_flag $ff
38c7 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
38c9 : f003            >        beq skip2571
                       >        trap            ;failed not equal (non zero)
38cb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38ce :                 >skip2571
                       >
38ce : 28              >            plp         ;restore status
                       >
38cf : a510            >        lda zpt
38d1 : c940            >        cmp #1<<6
                       >        trap_ne     ;wrong bits set or cleared
38d3 : f003            >        beq skip2573
                       >        trap            ;failed not equal (non zero)
38d5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38d8 :                 >skip2573
                       >
                        
                                smbt 7
38d8 : a97f            >        lda #$ff-(1<<7)
38da : 8510            >        sta zpt
                       >        set_a $a5,0
                       >            load_flag 0
38dc : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
38de : 48              >            pha         ;use stack to load status
38df : a9a5            >            lda #$a5     ;precharge accu
38e1 : 28              >            plp
                       >
38e2 : f710            >        smb 7,zpt
                       >        tst_a $a5,0
38e4 : 08              >            php         ;save flags
38e5 : 08              >            php
38e6 : c9a5            >            cmp #$a5     ;test result
                       >            trap_ne
38e8 : f003            >        beq skip2579
                       >        trap            ;failed not equal (non zero)
38ea : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38ed :                 >skip2579
                       >
38ed : 68              >            pla         ;load status
                       >            cmp_flag 0
38ee : c930            >            cmp #(0|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
38f0 : f003            >        beq skip2582
                       >        trap            ;failed not equal (non zero)
38f2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38f5 :                 >skip2582
                       >
38f5 : 28              >            plp         ;restore status
                       >
38f6 : a510            >        lda zpt
38f8 : c9ff            >        cmp #$ff
                       >        trap_ne     ;wrong bits set or cleared
38fa : f003            >        beq skip2584
                       >        trap            ;failed not equal (non zero)
38fc : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
38ff :                 >skip2584
                       >
38ff : a900            >        lda #0
3901 : 8510            >        sta zpt
                       >        set_a $5a,$ff
                       >            load_flag $ff
3903 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3905 : 48              >            pha         ;use stack to load status
3906 : a95a            >            lda #$5a     ;precharge accu
3908 : 28              >            plp
                       >
3909 : f710            >        smb 7,zpt
                       >        tst_a $5a,$ff
390b : 08              >            php         ;save flags
390c : 08              >            php
390d : c95a            >            cmp #$5a     ;test result
                       >            trap_ne
390f : f003            >        beq skip2589
                       >        trap            ;failed not equal (non zero)
3911 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3914 :                 >skip2589
                       >
3914 : 68              >            pla         ;load status
                       >            cmp_flag $ff
3915 : c9ff            >            cmp #($ff|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3917 : f003            >        beq skip2592
                       >        trap            ;failed not equal (non zero)
3919 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
391c :                 >skip2592
                       >
391c : 28              >            plp         ;restore status
                       >
391d : a510            >        lda zpt
391f : c980            >        cmp #1<<7
                       >        trap_ne     ;wrong bits set or cleared
3921 : f003            >        beq skip2594
                       >        trap            ;failed not equal (non zero)
3923 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3926 :                 >skip2594
                       >
                        
3926 : e0ba                     cpx #$ba
                                trap_ne     ;x altered during test
3928 : f003            >        beq skip2596
                       >        trap            ;failed not equal (non zero)
392a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
392d :                 >skip2596
                        
392d : c0d0                     cpy #$d0
                                trap_ne     ;y altered during test
392f : f003            >        beq skip2598
                       >        trap            ;failed not equal (non zero)
3931 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3934 :                 >skip2598
                        
3934 : ba                       tsx
3935 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
3937 : f003            >        beq skip2600
                       >        trap            ;failed not equal (non zero)
3939 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
393c :                 >skip2600
                        
                                next_test
393c : ad0202          >            lda test_case   ;previous test
393f : c910            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3941 : f003            >        beq skip2603
                       >        trap            ;failed not equal (non zero)
3943 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3946 :                 >skip2603
                       >
0011 =                 >test_num = test_num + 1
3946 : a911            >            lda #test_num   ;*** next tests' number
3948 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                            endif        
                                 
394b : 8d04ef            sta $ef04
394e : 74657374696e67..  db "testing CMP - (zp)         ", 10, 0
396b : a2de                     ldx #$de    ;protect x & y
396d : a0ad                     ldy #$ad
                                set_a $80,0
                       >            load_flag 0
396f : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3971 : 48              >            pha         ;use stack to load status
3972 : a980            >            lda #$80     ;precharge accu
3974 : 28              >            plp
                        
3975 : d230                     cmp (ind1+8)
                                tst_a $80,fc
3977 : 08              >            php         ;save flags
3978 : 08              >            php
3979 : c980            >            cmp #$80     ;test result
                       >            trap_ne
397b : f003            >        beq skip2608
                       >        trap            ;failed not equal (non zero)
397d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3980 :                 >skip2608
                       >
3980 : 68              >            pla         ;load status
                       >            cmp_flag fc
3981 : c931            >            cmp #(fc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3983 : f003            >        beq skip2611
                       >        trap            ;failed not equal (non zero)
3985 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3988 :                 >skip2611
                       >
3988 : 28              >            plp         ;restore status
                        
                                set_a $7f,0
                       >            load_flag 0
3989 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
398b : 48              >            pha         ;use stack to load status
398c : a97f            >            lda #$7f     ;precharge accu
398e : 28              >            plp
                        
398f : d230                     cmp (ind1+8)
                                tst_a $7f,fzc
3991 : 08              >            php         ;save flags
3992 : 08              >            php
3993 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
3995 : f003            >        beq skip2616
                       >        trap            ;failed not equal (non zero)
3997 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
399a :                 >skip2616
                       >
399a : 68              >            pla         ;load status
                       >            cmp_flag fzc
399b : c933            >            cmp #(fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
399d : f003            >        beq skip2619
                       >        trap            ;failed not equal (non zero)
399f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
39a2 :                 >skip2619
                       >
39a2 : 28              >            plp         ;restore status
                        
                                set_a $7e,0
                       >            load_flag 0
39a3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
39a5 : 48              >            pha         ;use stack to load status
39a6 : a97e            >            lda #$7e     ;precharge accu
39a8 : 28              >            plp
                        
39a9 : d230                     cmp (ind1+8)
                                tst_a $7e,fn
39ab : 08              >            php         ;save flags
39ac : 08              >            php
39ad : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
39af : f003            >        beq skip2624
                       >        trap            ;failed not equal (non zero)
39b1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
39b4 :                 >skip2624
                       >
39b4 : 68              >            pla         ;load status
                       >            cmp_flag fn
39b5 : c9b0            >            cmp #(fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
39b7 : f003            >        beq skip2627
                       >        trap            ;failed not equal (non zero)
39b9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
39bc :                 >skip2627
                       >
39bc : 28              >            plp         ;restore status
                        
                                set_a $80,$ff
                       >            load_flag $ff
39bd : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
39bf : 48              >            pha         ;use stack to load status
39c0 : a980            >            lda #$80     ;precharge accu
39c2 : 28              >            plp
                        
39c3 : d230                     cmp (ind1+8)
                                tst_a $80,~fnz
39c5 : 08              >            php         ;save flags
39c6 : 08              >            php
39c7 : c980            >            cmp #$80     ;test result
                       >            trap_ne
39c9 : f003            >        beq skip2632
                       >        trap            ;failed not equal (non zero)
39cb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
39ce :                 >skip2632
                       >
39ce : 68              >            pla         ;load status
                       >            cmp_flag ~fnz
39cf : c97d            >            cmp #(~fnz|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
39d1 : f003            >        beq skip2635
                       >        trap            ;failed not equal (non zero)
39d3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
39d6 :                 >skip2635
                       >
39d6 : 28              >            plp         ;restore status
                        
                                set_a $7f,$ff
                       >            load_flag $ff
39d7 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
39d9 : 48              >            pha         ;use stack to load status
39da : a97f            >            lda #$7f     ;precharge accu
39dc : 28              >            plp
                        
39dd : d230                     cmp (ind1+8)
                                tst_a $7f,~fn
39df : 08              >            php         ;save flags
39e0 : 08              >            php
39e1 : c97f            >            cmp #$7f     ;test result
                       >            trap_ne
39e3 : f003            >        beq skip2640
                       >        trap            ;failed not equal (non zero)
39e5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
39e8 :                 >skip2640
                       >
39e8 : 68              >            pla         ;load status
                       >            cmp_flag ~fn
39e9 : c97f            >            cmp #(~fn|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
39eb : f003            >        beq skip2643
                       >        trap            ;failed not equal (non zero)
39ed : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
39f0 :                 >skip2643
                       >
39f0 : 28              >            plp         ;restore status
                        
                                set_a $7e,$ff
                       >            load_flag $ff
39f1 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
39f3 : 48              >            pha         ;use stack to load status
39f4 : a97e            >            lda #$7e     ;precharge accu
39f6 : 28              >            plp
                        
39f7 : d230                     cmp (ind1+8)
                                tst_a $7e,~fzc
39f9 : 08              >            php         ;save flags
39fa : 08              >            php
39fb : c97e            >            cmp #$7e     ;test result
                       >            trap_ne
39fd : f003            >        beq skip2648
                       >        trap            ;failed not equal (non zero)
39ff : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a02 :                 >skip2648
                       >
3a02 : 68              >            pla         ;load status
                       >            cmp_flag ~fzc
3a03 : c9fc            >            cmp #(~fzc|fao)&m8    ;expected flags + always on bits
                       >
                       >            trap_ne
3a05 : f003            >        beq skip2651
                       >        trap            ;failed not equal (non zero)
3a07 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a0a :                 >skip2651
                       >
3a0a : 28              >            plp         ;restore status
                        
3a0b : e0de                     cpx #$de
                                trap_ne     ;x altered during test
3a0d : f003            >        beq skip2653
                       >        trap            ;failed not equal (non zero)
3a0f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a12 :                 >skip2653
                        
3a12 : c0ad                     cpy #$ad
                                trap_ne     ;y altered during test 
3a14 : f003            >        beq skip2655
                       >        trap            ;failed not equal (non zero)
3a16 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a19 :                 >skip2655
                        
3a19 : ba                       tsx
3a1a : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
3a1c : f003            >        beq skip2657
                       >        trap            ;failed not equal (non zero)
3a1e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a21 :                 >skip2657
                        
                                next_test
3a21 : ad0202          >            lda test_case   ;previous test
3a24 : c911            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3a26 : f003            >        beq skip2660
                       >        trap            ;failed not equal (non zero)
3a28 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a2b :                 >skip2660
                       >
0012 =                 >test_num = test_num + 1
3a2b : a912            >            lda #test_num   ;*** next tests' number
3a2d : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
3a30 : 8d04ef            sta $ef04
3a33 : 74657374696e67..  db "testing logical instructions - AND EOR ORA (zp)", 10, 0
3a64 : a242                     ldx #$42    ;protect x & y
                        
3a66 : a000                     ldy #0      ;AND
3a68 : a53e                     lda indAN   ;set indirect address
3a6a : 8510                     sta zpt
3a6c : a53f                     lda indAN+1
3a6e : 8511                     sta zpt+1
3a70 :                  tand1
                                set_ay  absANa,0
                       >            load_flag 0
3a70 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3a72 : 48              >            pha         ;use stack to load status
3a73 : b94d02          >            lda absANa,y    ;precharge accu
3a76 : 28              >            plp
                        
3a77 : 3210                     and (zpt)
                                tst_ay  absrlo,absflo,0
3a79 : 08              >            php         ;save flags
3a7a : d95502          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3a7d : f003            >        beq skip2665
                       >        trap            ;failed not equal (non zero)
3a7f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a82 :                 >skip2665
                       >
3a82 : 68              >            pla         ;load status
                       >            eor_flag 0
3a83 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3a85 : d95902          >            cmp absflo,y    ;test flags
                       >            trap_ne
3a88 : f003            >        beq skip2668
                       >        trap            ;failed not equal (non zero)
3a8a : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3a8d :                 >skip2668
                       >
                        
3a8d : e610                     inc zpt
3a8f : c8                       iny
3a90 : c004                     cpy #4
3a92 : d0dc                     bne tand1
3a94 : 88                       dey
3a95 : c610                     dec zpt
3a97 :                  tand2
                                set_ay  absANa,$ff
                       >            load_flag $ff
3a97 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3a99 : 48              >            pha         ;use stack to load status
3a9a : b94d02          >            lda absANa,y    ;precharge accu
3a9d : 28              >            plp
                        
3a9e : 3210                     and (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
3aa0 : 08              >            php         ;save flags
3aa1 : d95502          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3aa4 : f003            >        beq skip2673
                       >        trap            ;failed not equal (non zero)
3aa6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3aa9 :                 >skip2673
                       >
3aa9 : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3aaa : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3aac : d95902          >            cmp absflo,y    ;test flags
                       >            trap_ne
3aaf : f003            >        beq skip2676
                       >        trap            ;failed not equal (non zero)
3ab1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ab4 :                 >skip2676
                       >
                        
3ab4 : c610                     dec zpt
3ab6 : 88                       dey
3ab7 : 10de                     bpl tand2
                        
3ab9 : a000                     ldy #0      ;EOR
3abb : a546                     lda indEO   ;set indirect address
3abd : 8510                     sta zpt
3abf : a547                     lda indEO+1
3ac1 : 8511                     sta zpt+1
3ac3 :                  teor1
                                set_ay  absEOa,0
                       >            load_flag 0
3ac3 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3ac5 : 48              >            pha         ;use stack to load status
3ac6 : b95102          >            lda absEOa,y    ;precharge accu
3ac9 : 28              >            plp
                        
3aca : 5210                     eor (zpt)
                                tst_ay  absrlo,absflo,0
3acc : 08              >            php         ;save flags
3acd : d95502          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3ad0 : f003            >        beq skip2681
                       >        trap            ;failed not equal (non zero)
3ad2 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ad5 :                 >skip2681
                       >
3ad5 : 68              >            pla         ;load status
                       >            eor_flag 0
3ad6 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3ad8 : d95902          >            cmp absflo,y    ;test flags
                       >            trap_ne
3adb : f003            >        beq skip2684
                       >        trap            ;failed not equal (non zero)
3add : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ae0 :                 >skip2684
                       >
                        
3ae0 : e610                     inc zpt
3ae2 : c8                       iny
3ae3 : c004                     cpy #4
3ae5 : d0dc                     bne teor1
3ae7 : 88                       dey
3ae8 : c610                     dec zpt
3aea :                  teor2
                                set_ay  absEOa,$ff
                       >            load_flag $ff
3aea : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3aec : 48              >            pha         ;use stack to load status
3aed : b95102          >            lda absEOa,y    ;precharge accu
3af0 : 28              >            plp
                        
3af1 : 5210                     eor (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
3af3 : 08              >            php         ;save flags
3af4 : d95502          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3af7 : f003            >        beq skip2689
                       >        trap            ;failed not equal (non zero)
3af9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3afc :                 >skip2689
                       >
3afc : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3afd : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3aff : d95902          >            cmp absflo,y    ;test flags
                       >            trap_ne
3b02 : f003            >        beq skip2692
                       >        trap            ;failed not equal (non zero)
3b04 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b07 :                 >skip2692
                       >
                        
3b07 : c610                     dec zpt
3b09 : 88                       dey
3b0a : 10de                     bpl teor2
                        
3b0c : a000                     ldy #0      ;ORA
3b0e : a54e                     lda indOR   ;set indirect address
3b10 : 8510                     sta zpt
3b12 : a54f                     lda indOR+1
3b14 : 8511                     sta zpt+1
3b16 :                  tora1
                                set_ay  absORa,0
                       >            load_flag 0
3b16 : a900            >            lda #0             ;allow test to change I-flag (no mask)
                       >
3b18 : 48              >            pha         ;use stack to load status
3b19 : b94902          >            lda absORa,y    ;precharge accu
3b1c : 28              >            plp
                        
3b1d : 1210                     ora (zpt)
                                tst_ay  absrlo,absflo,0
3b1f : 08              >            php         ;save flags
3b20 : d95502          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3b23 : f003            >        beq skip2697
                       >        trap            ;failed not equal (non zero)
3b25 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b28 :                 >skip2697
                       >
3b28 : 68              >            pla         ;load status
                       >            eor_flag 0
3b29 : 4930            >            eor #0|fao         ;invert expected flags + always on bits
                       >
3b2b : d95902          >            cmp absflo,y    ;test flags
                       >            trap_ne
3b2e : f003            >        beq skip2700
                       >        trap            ;failed not equal (non zero)
3b30 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b33 :                 >skip2700
                       >
                        
3b33 : e610                     inc zpt
3b35 : c8                       iny
3b36 : c004                     cpy #4
3b38 : d0dc                     bne tora1
3b3a : 88                       dey
3b3b : c610                     dec zpt
3b3d :                  tora2
                                set_ay  absORa,$ff
                       >            load_flag $ff
3b3d : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3b3f : 48              >            pha         ;use stack to load status
3b40 : b94902          >            lda absORa,y    ;precharge accu
3b43 : 28              >            plp
                        
3b44 : 1210                     ora (zpt)
                                tst_ay  absrlo,absflo,$ff-fnz
3b46 : 08              >            php         ;save flags
3b47 : d95502          >            cmp absrlo,y    ;test result
                       >            trap_ne     ;
3b4a : f003            >        beq skip2705
                       >        trap            ;failed not equal (non zero)
3b4c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b4f :                 >skip2705
                       >
3b4f : 68              >            pla         ;load status
                       >            eor_flag $ff-fnz
3b50 : 497d            >            eor #$ff-fnz|fao         ;invert expected flags + always on bits
                       >
3b52 : d95902          >            cmp absflo,y    ;test flags
                       >            trap_ne
3b55 : f003            >        beq skip2708
                       >        trap            ;failed not equal (non zero)
3b57 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b5a :                 >skip2708
                       >
                        
3b5a : c610                     dec zpt
3b5c : 88                       dey
3b5d : 10de                     bpl tora2
                        
3b5f : e042                     cpx #$42
                                trap_ne     ;x altered during test
3b61 : f003            >        beq skip2710
                       >        trap            ;failed not equal (non zero)
3b63 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b66 :                 >skip2710
                        
3b66 : ba                       tsx
3b67 : e0ff                     cpx #$ff
                                trap_ne     ;sp push/pop mismatch
3b69 : f003            >        beq skip2712
                       >        trap            ;failed not equal (non zero)
3b6b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b6e :                 >skip2712
                        
                                next_test
3b6e : ad0202          >            lda test_case   ;previous test
3b71 : c912            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3b73 : f003            >        beq skip2715
                       >        trap            ;failed not equal (non zero)
3b75 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3b78 :                 >skip2715
                       >
0013 =                 >test_num = test_num + 1
3b78 : a913            >            lda #test_num   ;*** next tests' number
3b7a : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                                
                            if I_flag = 3
3b7d : 58                       cli
                            endif                
                        
3b7e : 8d04ef            sta $ef04
3b81 : 66756c6c206269..  db "full binary add/subtract test - (zp) only", 10, 0
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
3bac : d8                       cld
3bad : a212                     ldx #ad2        ;for indexed test
3baf : a0ff                     ldy #$ff        ;max range
3bb1 : a900                     lda #0          ;start with adding zeroes & no carry
3bb3 : 8510                     sta adfc        ;carry in - for diag
3bb5 : 8511                     sta ad1         ;operand 1 - accumulator
3bb7 : 8512                     sta ad2         ;operand 2 - memory or immediate
3bb9 : 8d0502                   sta ada2        ;non zp
3bbc : 8513                     sta adrl        ;expected result bits 0-7
3bbe : 8514                     sta adrh        ;expected result bit 8 (carry out)
3bc0 : a9ff                     lda #$ff        ;complemented operand 2 for subtract
3bc2 : 8516                     sta sb2
3bc4 : 8d0602                   sta sba2        ;non zp
3bc7 : a902                     lda #2          ;expected Z-flag
3bc9 : 8515                     sta adrf
3bcb : 18               tadd    clc             ;test with carry clear
3bcc : 20ec3e                   jsr chkadd
3bcf : e610                     inc adfc        ;now with carry
3bd1 : e613                     inc adrl        ;result +1
3bd3 : 08                       php             ;save N & Z from low result
3bd4 : 08                       php
3bd5 : 68                       pla             ;accu holds expected flags
3bd6 : 2982                     and #$82        ;mask N & Z
3bd8 : 28                       plp
3bd9 : d002                     bne tadd1
3bdb : e614                     inc adrh        ;result bit 8 - carry
3bdd : 0514             tadd1   ora adrh        ;merge C to expected flags
3bdf : 8515                     sta adrf        ;save expected flags except overflow
3be1 : 38                       sec             ;test with carry set
3be2 : 20ec3e                   jsr chkadd
3be5 : c610                     dec adfc        ;same for operand +1 but no carry
3be7 : e611                     inc ad1
3be9 : d0e0                     bne tadd        ;iterate op1
3beb : a900                     lda #0          ;preset result to op2 when op1 = 0
3bed : 8514                     sta adrh
3bef : ee0502                   inc ada2
3bf2 : e612                     inc ad2
3bf4 : 08                       php             ;save NZ as operand 2 becomes the new result
3bf5 : 68                       pla
3bf6 : 2982                     and #$82        ;mask N00000Z0
3bf8 : 8515                     sta adrf        ;no need to check carry as we are adding to 0
3bfa : c616                     dec sb2         ;complement subtract operand 2
3bfc : ce0602                   dec sba2
3bff : a512                     lda ad2         
3c01 : 8513                     sta adrl
3c03 : d0c6                     bne tadd        ;iterate op2
                        
3c05 : e012                     cpx #ad2
                                trap_ne         ;x altered during test
3c07 : f003            >        beq skip2717
                       >        trap            ;failed not equal (non zero)
3c09 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c0c :                 >skip2717
                        
3c0c : c0ff                     cpy #$ff
                                trap_ne         ;y altered during test 
3c0e : f003            >        beq skip2719
                       >        trap            ;failed not equal (non zero)
3c10 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c13 :                 >skip2719
                        
3c13 : ba                       tsx
3c14 : e0ff                     cpx #$ff
                                trap_ne         ;sp push/pop mismatch
3c16 : f003            >        beq skip2721
                       >        trap            ;failed not equal (non zero)
3c18 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c1b :                 >skip2721
                        
                                next_test
3c1b : ad0202          >            lda test_case   ;previous test
3c1e : c913            >            cmp #test_num
                       >            trap_ne         ;test is out of sequence
3c20 : f003            >        beq skip2724
                       >        trap            ;failed not equal (non zero)
3c22 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3c25 :                 >skip2724
                       >
0014 =                 >test_num = test_num + 1
3c25 : a914            >            lda #test_num   ;*** next tests' number
3c27 : 8d0202          >            sta test_case
                       >            ;sta $ef03
                       >            ;check_ram       ;uncomment to find altered RAM after each test
                        
                        
3c2a : 8d04ef            sta $ef04
3c2d : 646563696d616c..  db "decimal add/subtract test", 10, 0
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, the V flag is ignored
                        ;   although V is declared as beeing valid on the 65C02 it has absolutely
                        ;   no use in BCD math. No sign = no overflow!
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
3c48 : f8                       sed 
3c49 : a212                     ldx #ad2        ;for indexed test
3c4b : a0ff                     ldy #$ff        ;max range
3c4d : a999                     lda #$99        ;start with adding 99 to 99 with carry
3c4f : 8511                     sta ad1         ;operand 1 - accumulator
3c51 : 8512                     sta ad2         ;operand 2 - memory or immediate
3c53 : 8d0502                   sta ada2        ;non zp
3c56 : 8513                     sta adrl        ;expected result bits 0-7
3c58 : a901                     lda #1          ;set carry in & out
3c5a : 8510                     sta adfc        ;carry in - for diag
3c5c : 8514                     sta adrh        ;expected result bit 8 (carry out)
3c5e : a981                     lda #$81        ;set N & C (99 + 99 + C = 99 + C)
3c60 : 8515                     sta adrf
3c62 : a900                     lda #0          ;complemented operand 2 for subtract
3c64 : 8516                     sta sb2
3c66 : 8d0602                   sta sba2        ;non zp
3c69 : 38               tdad    sec             ;test with carry set
3c6a : 202b3d                   jsr chkdad
3c6d : c610                     dec adfc        ;now with carry clear
3c6f : a513                     lda adrl        ;decimal adjust result
3c71 : d008                     bne tdad1       ;skip clear carry & preset result 99 (9A-1)
3c73 : c614                     dec adrh
3c75 : a999                     lda #$99
3c77 : 8513                     sta adrl
3c79 : d012                     bne tdad3
3c7b : 290f             tdad1   and #$f         ;lower nibble mask
3c7d : d00c                     bne tdad2       ;no decimal adjust needed
3c7f : c613                     dec adrl        ;decimal adjust (?0-6)
3c81 : c613                     dec adrl
3c83 : c613                     dec adrl
3c85 : c613                     dec adrl
3c87 : c613                     dec adrl
3c89 : c613                     dec adrl
3c8b : c613             tdad2   dec adrl        ;result -1
3c8d : 08               tdad3   php             ;save valid flags
3c8e : 68                       pla
3c8f : 2982                     and #$82        ;N-----Z-
3c91 : 0514                     ora adrh        ;N-----ZC
3c93 : 8515                     sta adrf
3c95 : 18                       clc             ;test with carry clear
3c96 : 202b3d                   jsr chkdad
3c99 : e610                     inc adfc        ;same for operand -1 but with carry
3c9b : a511                     lda ad1         ;decimal adjust operand 1
3c9d : f015                     beq tdad5       ;iterate operand 2
3c9f : 290f                     and #$f         ;lower nibble mask
3ca1 : d00c                     bne tdad4       ;skip decimal adjust
3ca3 : c611                     dec ad1         ;decimal adjust (?0-6)
3ca5 : c611                     dec ad1
3ca7 : c611                     dec ad1
3ca9 : c611                     dec ad1
3cab : c611                     dec ad1
3cad : c611                     dec ad1
3caf : c611             tdad4   dec ad1         ;operand 1 -1
3cb1 : 4c693c                   jmp tdad        ;iterate op1
                        
3cb4 : a999             tdad5   lda #$99        ;precharge op1 max
3cb6 : 8511                     sta ad1
3cb8 : a512                     lda ad2         ;decimal adjust operand 2
3cba : f039                     beq tdad7       ;end of iteration
3cbc : 290f                     and #$f         ;lower nibble mask
3cbe : d018                     bne tdad6       ;skip decimal adjust
3cc0 : c612                     dec ad2         ;decimal adjust (?0-6)
3cc2 : c612                     dec ad2
3cc4 : c612                     dec ad2
3cc6 : c612                     dec ad2
3cc8 : c612                     dec ad2
3cca : c612                     dec ad2
3ccc : e616                     inc sb2         ;complemented decimal adjust for subtract (?9+6)
3cce : e616                     inc sb2
3cd0 : e616                     inc sb2
3cd2 : e616                     inc sb2
3cd4 : e616                     inc sb2
3cd6 : e616                     inc sb2
3cd8 : c612             tdad6   dec ad2         ;operand 2 -1
3cda : e616                     inc sb2         ;complemented operand for subtract
3cdc : a516                     lda sb2
3cde : 8d0602                   sta sba2        ;copy as non zp operand
3ce1 : a512                     lda ad2
3ce3 : 8d0502                   sta ada2        ;copy as non zp operand
3ce6 : 8513                     sta adrl        ;new result since op1+carry=00+carry +op2=op2
3ce8 : 08                       php             ;save flags
3ce9 : 68                       pla
3cea : 2982                     and #$82        ;N-----Z-
3cec : 0901                     ora #1          ;N-----ZC
3cee : 8515                     sta adrf
3cf0 : e614                     inc adrh        ;result carry
3cf2 : 4c693c                   jmp tdad        ;iterate op2
                        
3cf5 : e012             tdad7   cpx #ad2
                                trap_ne         ;x altered during test
3cf7 : f003            >        beq skip2726
                       >        trap            ;failed not equal (non zero)
3cf9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3cfc :                 >skip2726
                        
3cfc : c0ff                     cpy #$ff
                                trap_ne         ;y altered during test 
3cfe : f003            >        beq skip2728
                       >        trap            ;failed not equal (non zero)
3d00 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d03 :                 >skip2728
                        
3d03 : ba                       tsx
3d04 : e0ff                     cpx #$ff
                                trap_ne         ;sp push/pop mismatch
3d06 : f003            >        beq skip2730
                       >        trap            ;failed not equal (non zero)
3d08 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d0b :                 >skip2730
                        
3d0b : d8                       cld
                        
3d0c : ad0202                   lda test_case
3d0f : c914                     cmp #test_num
                                trap_ne         ;previous test is out of sequence
3d11 : f003            >        beq skip2732
                       >        trap            ;failed not equal (non zero)
3d13 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d16 :                 >skip2732
                        
3d16 : a9f0                     lda #$f0        ;mark opcode testing complete
3d18 : 8d0202                   sta test_case
                        
                        ; final RAM integrity test
                        ;   verifies that none of the previous tests has altered RAM outside of the
                        ;   designated write areas.
                                check_ram
                       >            ;RAM check disabled - RAM size not set
                        
                        ; *** DEBUG INFO ***
                        ; to debug checksum errors uncomment check_ram in the next_test macro to 
                        ; narrow down the responsible opcode.
                        ; may give false errors when monitor, OS or other background activity is
                        ; allowed during previous tests.
                        
                        
                        ; S U C C E S S ************************************************       
                        ; -------------       
                                success         ;if you get here everything went well
3d1b : 8d04ef          > sta $ef04
3d1e : 73756363657373..> db "success", 10, 0
3d27 : db              >        db $db
                       >        ;jsr report_success
                        
                        ; -------------       
                        ; S U C C E S S ************************************************       
3d28 : 4c0010                   jmp start       ;run again      
                        
                        ; core subroutine of the decimal add/subtract test
                        ; *** WARNING - tests documented behavior only! ***
                        ;   only valid BCD operands are tested, V flag is ignored
                        ; iterates through all valid combinations of operands and carry input
                        ; uses increments/decrements to predict result & carry flag
3d2b :                  chkdad
                        ; decimal ADC / SBC zp
3d2b : 08                       php             ;save carry for subtract
3d2c : a511                     lda ad1
3d2e : 6512                     adc ad2         ;perform add
3d30 : 08                       php          
3d31 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3d33 : f003            >        beq skip2736
                       >        trap            ;failed not equal (non zero)
3d35 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d38 :                 >skip2736
                        
3d38 : 68                       pla             ;check flags
3d39 : 2983                     and #$83        ;mask N-----ZC
3d3b : c515                     cmp adrf
                                trap_ne         ;bad flags
3d3d : f003            >        beq skip2738
                       >        trap            ;failed not equal (non zero)
3d3f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d42 :                 >skip2738
                        
3d42 : 28                       plp
3d43 : 08                       php             ;save carry for next add
3d44 : a511                     lda ad1
3d46 : e516                     sbc sb2         ;perform subtract
3d48 : 08                       php          
3d49 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3d4b : f003            >        beq skip2740
                       >        trap            ;failed not equal (non zero)
3d4d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d50 :                 >skip2740
                        
3d50 : 68                       pla             ;check flags
3d51 : 2983                     and #$83        ;mask N-----ZC
3d53 : c515                     cmp adrf
                                trap_ne         ;bad flags
3d55 : f003            >        beq skip2742
                       >        trap            ;failed not equal (non zero)
3d57 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d5a :                 >skip2742
                        
3d5a : 28                       plp
                        ; decimal ADC / SBC abs
3d5b : 08                       php             ;save carry for subtract
3d5c : a511                     lda ad1
3d5e : 6d0502                   adc ada2        ;perform add
3d61 : 08                       php          
3d62 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3d64 : f003            >        beq skip2744
                       >        trap            ;failed not equal (non zero)
3d66 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d69 :                 >skip2744
                        
3d69 : 68                       pla             ;check flags
3d6a : 2983                     and #$83        ;mask N-----ZC
3d6c : c515                     cmp adrf
                                trap_ne         ;bad flags
3d6e : f003            >        beq skip2746
                       >        trap            ;failed not equal (non zero)
3d70 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d73 :                 >skip2746
                        
3d73 : 28                       plp
3d74 : 08                       php             ;save carry for next add
3d75 : a511                     lda ad1
3d77 : ed0602                   sbc sba2        ;perform subtract
3d7a : 08                       php          
3d7b : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3d7d : f003            >        beq skip2748
                       >        trap            ;failed not equal (non zero)
3d7f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d82 :                 >skip2748
                        
3d82 : 68                       pla             ;check flags
3d83 : 2983                     and #$83        ;mask N-----ZC
3d85 : c515                     cmp adrf
                                trap_ne         ;bad flags
3d87 : f003            >        beq skip2750
                       >        trap            ;failed not equal (non zero)
3d89 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d8c :                 >skip2750
                        
3d8c : 28                       plp
                        ; decimal ADC / SBC #
3d8d : 08                       php             ;save carry for subtract
3d8e : a512                     lda ad2
3d90 : 8d963d                   sta chkdadi     ;self modify immediate
3d93 : a511                     lda ad1
3d96 =                  chkdadi = * + 1         ;operand of the immediate ADC
3d95 : 6900                     adc #0          ;perform add
3d97 : 08                       php          
3d98 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3d9a : f003            >        beq skip2752
                       >        trap            ;failed not equal (non zero)
3d9c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3d9f :                 >skip2752
                        
3d9f : 68                       pla             ;check flags
3da0 : 2983                     and #$83        ;mask N-----ZC
3da2 : c515                     cmp adrf
                                trap_ne         ;bad flags
3da4 : f003            >        beq skip2754
                       >        trap            ;failed not equal (non zero)
3da6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3da9 :                 >skip2754
                        
3da9 : 28                       plp
3daa : 08                       php             ;save carry for next add
3dab : a516                     lda sb2
3dad : 8db33d                   sta chkdsbi     ;self modify immediate
3db0 : a511                     lda ad1
3db3 =                  chkdsbi = * + 1         ;operand of the immediate SBC
3db2 : e900                     sbc #0          ;perform subtract
3db4 : 08                       php          
3db5 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3db7 : f003            >        beq skip2756
                       >        trap            ;failed not equal (non zero)
3db9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3dbc :                 >skip2756
                        
3dbc : 68                       pla             ;check flags
3dbd : 2983                     and #$83        ;mask N-----ZC
3dbf : c515                     cmp adrf
                                trap_ne         ;bad flags
3dc1 : f003            >        beq skip2758
                       >        trap            ;failed not equal (non zero)
3dc3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3dc6 :                 >skip2758
                        
3dc6 : 28                       plp
                        ; decimal ADC / SBC zp,x
3dc7 : 08                       php             ;save carry for subtract
3dc8 : a511                     lda ad1
3dca : 7500                     adc 0,x         ;perform add
3dcc : 08                       php          
3dcd : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3dcf : f003            >        beq skip2760
                       >        trap            ;failed not equal (non zero)
3dd1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3dd4 :                 >skip2760
                        
3dd4 : 68                       pla             ;check flags
3dd5 : 2983                     and #$83        ;mask N-----ZC
3dd7 : c515                     cmp adrf
                                trap_ne         ;bad flags
3dd9 : f003            >        beq skip2762
                       >        trap            ;failed not equal (non zero)
3ddb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3dde :                 >skip2762
                        
3dde : 28                       plp
3ddf : 08                       php             ;save carry for next add
3de0 : a511                     lda ad1
3de2 : f504                     sbc sb2-ad2,x   ;perform subtract
3de4 : 08                       php          
3de5 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3de7 : f003            >        beq skip2764
                       >        trap            ;failed not equal (non zero)
3de9 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3dec :                 >skip2764
                        
3dec : 68                       pla             ;check flags
3ded : 2983                     and #$83        ;mask N-----ZC
3def : c515                     cmp adrf
                                trap_ne         ;bad flags
3df1 : f003            >        beq skip2766
                       >        trap            ;failed not equal (non zero)
3df3 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3df6 :                 >skip2766
                        
3df6 : 28                       plp
                        ; decimal ADC / SBC abs,x
3df7 : 08                       php             ;save carry for subtract
3df8 : a511                     lda ad1
3dfa : 7df301                   adc ada2-ad2,x  ;perform add
3dfd : 08                       php          
3dfe : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3e00 : f003            >        beq skip2768
                       >        trap            ;failed not equal (non zero)
3e02 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e05 :                 >skip2768
                        
3e05 : 68                       pla             ;check flags
3e06 : 2983                     and #$83        ;mask N-----ZC
3e08 : c515                     cmp adrf
                                trap_ne         ;bad flags
3e0a : f003            >        beq skip2770
                       >        trap            ;failed not equal (non zero)
3e0c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e0f :                 >skip2770
                        
3e0f : 28                       plp
3e10 : 08                       php             ;save carry for next add
3e11 : a511                     lda ad1
3e13 : fdf401                   sbc sba2-ad2,x  ;perform subtract
3e16 : 08                       php          
3e17 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3e19 : f003            >        beq skip2772
                       >        trap            ;failed not equal (non zero)
3e1b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e1e :                 >skip2772
                        
3e1e : 68                       pla             ;check flags
3e1f : 2983                     and #$83        ;mask N-----ZC
3e21 : c515                     cmp adrf
                                trap_ne         ;bad flags
3e23 : f003            >        beq skip2774
                       >        trap            ;failed not equal (non zero)
3e25 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e28 :                 >skip2774
                        
3e28 : 28                       plp
                        ; decimal ADC / SBC abs,y
3e29 : 08                       php             ;save carry for subtract
3e2a : a511                     lda ad1
3e2c : 790601                   adc ada2-$ff,y  ;perform add
3e2f : 08                       php          
3e30 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3e32 : f003            >        beq skip2776
                       >        trap            ;failed not equal (non zero)
3e34 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e37 :                 >skip2776
                        
3e37 : 68                       pla             ;check flags
3e38 : 2983                     and #$83        ;mask N-----ZC
3e3a : c515                     cmp adrf
                                trap_ne         ;bad flags
3e3c : f003            >        beq skip2778
                       >        trap            ;failed not equal (non zero)
3e3e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e41 :                 >skip2778
                        
3e41 : 28                       plp
3e42 : 08                       php             ;save carry for next add
3e43 : a511                     lda ad1
3e45 : f90701                   sbc sba2-$ff,y  ;perform subtract
3e48 : 08                       php          
3e49 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3e4b : f003            >        beq skip2780
                       >        trap            ;failed not equal (non zero)
3e4d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e50 :                 >skip2780
                        
3e50 : 68                       pla             ;check flags
3e51 : 2983                     and #$83        ;mask N-----ZC
3e53 : c515                     cmp adrf
                                trap_ne         ;bad flags
3e55 : f003            >        beq skip2782
                       >        trap            ;failed not equal (non zero)
3e57 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e5a :                 >skip2782
                        
3e5a : 28                       plp
                        ; decimal ADC / SBC (zp,x)
3e5b : 08                       php             ;save carry for subtract
3e5c : a511                     lda ad1
3e5e : 6144                     adc (lo adi2-ad2,x) ;perform add
3e60 : 08                       php          
3e61 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3e63 : f003            >        beq skip2784
                       >        trap            ;failed not equal (non zero)
3e65 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e68 :                 >skip2784
                        
3e68 : 68                       pla             ;check flags
3e69 : 2983                     and #$83        ;mask N-----ZC
3e6b : c515                     cmp adrf
                                trap_ne         ;bad flags
3e6d : f003            >        beq skip2786
                       >        trap            ;failed not equal (non zero)
3e6f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e72 :                 >skip2786
                        
3e72 : 28                       plp
3e73 : 08                       php             ;save carry for next add
3e74 : a511                     lda ad1
3e76 : e146                     sbc (lo sbi2-ad2,x) ;perform subtract
3e78 : 08                       php          
3e79 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3e7b : f003            >        beq skip2788
                       >        trap            ;failed not equal (non zero)
3e7d : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e80 :                 >skip2788
                        
3e80 : 68                       pla             ;check flags
3e81 : 2983                     and #$83        ;mask N-----ZC
3e83 : c515                     cmp adrf
                                trap_ne         ;bad flags
3e85 : f003            >        beq skip2790
                       >        trap            ;failed not equal (non zero)
3e87 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e8a :                 >skip2790
                        
3e8a : 28                       plp
                        ; decimal ADC / SBC (abs),y
3e8b : 08                       php             ;save carry for subtract
3e8c : a511                     lda ad1
3e8e : 715a                     adc (adiy2),y   ;perform add
3e90 : 08                       php          
3e91 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3e93 : f003            >        beq skip2792
                       >        trap            ;failed not equal (non zero)
3e95 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3e98 :                 >skip2792
                        
3e98 : 68                       pla             ;check flags
3e99 : 2983                     and #$83        ;mask N-----ZC
3e9b : c515                     cmp adrf
                                trap_ne         ;bad flags
3e9d : f003            >        beq skip2794
                       >        trap            ;failed not equal (non zero)
3e9f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ea2 :                 >skip2794
                        
3ea2 : 28                       plp
3ea3 : 08                       php             ;save carry for next add
3ea4 : a511                     lda ad1
3ea6 : f15c                     sbc (sbiy2),y   ;perform subtract
3ea8 : 08                       php          
3ea9 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3eab : f003            >        beq skip2796
                       >        trap            ;failed not equal (non zero)
3ead : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3eb0 :                 >skip2796
                        
3eb0 : 68                       pla             ;check flags
3eb1 : 2983                     and #$83        ;mask N-----ZC
3eb3 : c515                     cmp adrf
                                trap_ne         ;bad flags
3eb5 : f003            >        beq skip2798
                       >        trap            ;failed not equal (non zero)
3eb7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3eba :                 >skip2798
                        
3eba : 28                       plp
                        ; decimal ADC / SBC (zp)
3ebb : 08                       php             ;save carry for subtract
3ebc : a511                     lda ad1
3ebe : 7256                     adc (adi2)      ;perform add
3ec0 : 08                       php          
3ec1 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3ec3 : f003            >        beq skip2800
                       >        trap            ;failed not equal (non zero)
3ec5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ec8 :                 >skip2800
                        
3ec8 : 68                       pla             ;check flags
3ec9 : 2983                     and #$83        ;mask N-----ZC
3ecb : c515                     cmp adrf
                                trap_ne         ;bad flags
3ecd : f003            >        beq skip2802
                       >        trap            ;failed not equal (non zero)
3ecf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ed2 :                 >skip2802
                        
3ed2 : 28                       plp
3ed3 : 08                       php             ;save carry for next add
3ed4 : a511                     lda ad1
3ed6 : f258                     sbc (sbi2)      ;perform subtract
3ed8 : 08                       php          
3ed9 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3edb : f003            >        beq skip2804
                       >        trap            ;failed not equal (non zero)
3edd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ee0 :                 >skip2804
                        
3ee0 : 68                       pla             ;check flags
3ee1 : 2983                     and #$83        ;mask N-----ZC
3ee3 : c515                     cmp adrf
                                trap_ne         ;bad flags
3ee5 : f003            >        beq skip2806
                       >        trap            ;failed not equal (non zero)
3ee7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3eea :                 >skip2806
                        
3eea : 28                       plp
3eeb : 60                       rts
                        
                        ; core subroutine of the full binary add/subtract test
                        ; iterates through all combinations of operands and carry input
                        ; uses increments/decrements to predict result & result flags
3eec : a515             chkadd  lda adrf        ;add V-flag if overflow
3eee : 2983                     and #$83        ;keep N-----ZC / clear V
3ef0 : 48                       pha
3ef1 : a511                     lda ad1         ;test sign unequal between operands
3ef3 : 4512                     eor ad2
3ef5 : 300a                     bmi ckad1       ;no overflow possible - operands have different sign
3ef7 : a511                     lda ad1         ;test sign equal between operands and result
3ef9 : 4513                     eor adrl
3efb : 1004                     bpl ckad1       ;no overflow occured - operand and result have same sign
3efd : 68                       pla
3efe : 0940                     ora #$40        ;set V
3f00 : 48                       pha
3f01 : 68               ckad1   pla
3f02 : 8515                     sta adrf        ;save expected flags
                        ; binary ADC / SBC (zp)
3f04 : 08                       php             ;save carry for subtract
3f05 : a511                     lda ad1
3f07 : 7256                     adc (adi2)      ;perform add
3f09 : 08                       php          
3f0a : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3f0c : f003            >        beq skip2808
                       >        trap            ;failed not equal (non zero)
3f0e : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f11 :                 >skip2808
                        
3f11 : 68                       pla             ;check flags
3f12 : 29c3                     and #$c3        ;mask NV----ZC
3f14 : c515                     cmp adrf
                                trap_ne         ;bad flags
3f16 : f003            >        beq skip2810
                       >        trap            ;failed not equal (non zero)
3f18 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f1b :                 >skip2810
                        
3f1b : 28                       plp
3f1c : 08                       php             ;save carry for next add
3f1d : a511                     lda ad1
3f1f : f258                     sbc (sbi2)      ;perform subtract
3f21 : 08                       php          
3f22 : c513                     cmp adrl        ;check result
                                trap_ne         ;bad result
3f24 : f003            >        beq skip2812
                       >        trap            ;failed not equal (non zero)
3f26 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f29 :                 >skip2812
                        
3f29 : 68                       pla             ;check flags
3f2a : 29c3                     and #$c3        ;mask NV----ZC
3f2c : c515                     cmp adrf
                                trap_ne         ;bad flags
3f2e : f003            >        beq skip2814
                       >        trap            ;failed not equal (non zero)
3f30 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f33 :                 >skip2814
                        
3f33 : 28                       plp
3f34 : 60                       rts
                                
                        ; target for the jump indirect test
3f35 : 3b3f             ji_adr  dw test_ji
3f37 : 9529                     dw ji_ret
                        
3f39 : 88                       dey
3f3a : 88                       dey
3f3b :                  test_ji
3f3b : 08                       php             ;either SP or Y count will fail, if we do not hit
3f3c : 88                       dey
3f3d : 88                       dey
3f3e : 88                       dey
3f3f : 28                       plp
                                trap_cs         ;flags loaded?
3f40 : 9003            >        bcc skip2816
                       >        trap            ;failed carry set
3f42 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f45 :                 >skip2816
                        
                                trap_vs
3f45 : 5003            >        bvc skip2818
                       >        trap            ;failed overflow set
3f47 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f4a :                 >skip2818
                        
                                trap_mi
3f4a : 1003            >        bpl skip2820
                       >        trap            ;failed minus (bit 7 set)
3f4c : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f4f :                 >skip2820
                        
                                trap_eq 
3f4f : d003            >        bne skip2822
                       >        trap           ;failed equal (zero)
3f51 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f54 :                 >skip2822
                        
3f54 : c949                     cmp #'I'        ;registers loaded?
                                trap_ne
3f56 : f003            >        beq skip2824
                       >        trap            ;failed not equal (non zero)
3f58 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f5b :                 >skip2824
                        
3f5b : e04e                     cpx #'N'
                                trap_ne        
3f5d : f003            >        beq skip2826
                       >        trap            ;failed not equal (non zero)
3f5f : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f62 :                 >skip2826
                        
3f62 : c041                     cpy #('D'-3)
                                trap_ne
3f64 : f003            >        beq skip2828
                       >        trap            ;failed not equal (non zero)
3f66 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f69 :                 >skip2828
                        
3f69 : 48                       pha             ;save a,x
3f6a : 8a                       txa
3f6b : 48                       pha
3f6c : ba                       tsx
3f6d : e0fd                     cpx #$fd        ;check SP
                                trap_ne
3f6f : f003            >        beq skip2830
                       >        trap            ;failed not equal (non zero)
3f71 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f74 :                 >skip2830
                        
3f74 : 68                       pla             ;restore x
3f75 : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
3f76 : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3f78 : 48              >            pha         ;use stack to load status
3f79 : 28              >            plp
                        
3f7a : 68                       pla             ;restore a
3f7b : e8                       inx             ;return registers with modifications
3f7c : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
3f7e : 6cff02                   jmp (ji_tab+2)
3f81 : ea                       nop
3f82 : ea                       nop
                                trap            ;runover protection
3f83 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
                        
                        ; target for the jump indirect test
3f86 : e23f             jxi_adr dw  trap_ind
3f88 : e23f                     dw  trap_ind
3f8a : 943f                     dw  test_jxi    ;+4
3f8c : 192a                     dw  jxi_ret     ;+6
3f8e : e23f                     dw  trap_ind
3f90 : e23f                     dw  trap_ind
                        
3f92 : 88                       dey
3f93 : 88                       dey
3f94 :                  test_jxi
3f94 : 08                       php             ;either SP or Y count will fail, if we do not hit
3f95 : 88                       dey
3f96 : 88                       dey
3f97 : 88                       dey
3f98 : 28                       plp
                                trap_cs         ;flags loaded?
3f99 : 9003            >        bcc skip2835
                       >        trap            ;failed carry set
3f9b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3f9e :                 >skip2835
                        
                                trap_vs
3f9e : 5003            >        bvc skip2837
                       >        trap            ;failed overflow set
3fa0 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3fa3 :                 >skip2837
                        
                                trap_mi
3fa3 : 1003            >        bpl skip2839
                       >        trap            ;failed minus (bit 7 set)
3fa5 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3fa8 :                 >skip2839
                        
                                trap_eq 
3fa8 : d003            >        bne skip2841
                       >        trap           ;failed equal (zero)
3faa : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3fad :                 >skip2841
                        
3fad : c958                     cmp #'X'        ;registers loaded?
                                trap_ne
3faf : f003            >        beq skip2843
                       >        trap            ;failed not equal (non zero)
3fb1 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3fb4 :                 >skip2843
                        
3fb4 : e004                     cpx #4
                                trap_ne        
3fb6 : f003            >        beq skip2845
                       >        trap            ;failed not equal (non zero)
3fb8 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3fbb :                 >skip2845
                        
3fbb : c046                     cpy #('I'-3)
                                trap_ne
3fbd : f003            >        beq skip2847
                       >        trap            ;failed not equal (non zero)
3fbf : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3fc2 :                 >skip2847
                        
3fc2 : 48                       pha             ;save a,x
3fc3 : 8a                       txa
3fc4 : 48                       pha
3fc5 : ba                       tsx
3fc6 : e0fd                     cpx #$fd        ;check SP
                                trap_ne
3fc8 : f003            >        beq skip2849
                       >        trap            ;failed not equal (non zero)
3fca : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3fcd :                 >skip2849
                        
3fcd : 68                       pla             ;restore x
3fce : aa                       tax
                                set_stat $ff
                       >            load_flag $ff
3fcf : a9ff            >            lda #$ff             ;allow test to change I-flag (no mask)
                       >
3fd1 : 48              >            pha         ;use stack to load status
3fd2 : 28              >            plp
                        
3fd3 : 68                       pla             ;restore a
3fd4 : e8                       inx             ;return registers with modifications
3fd5 : e8                       inx
3fd6 : 49aa                     eor #$aa        ;N=1, V=1, Z=0, C=1
3fd8 : 7cf902                   jmp (jxi_tab,x)
3fdb : ea                       nop
3fdc : ea                       nop
                                trap            ;runover protection
3fdd : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
                        
                        ; JMP (abs,x) with bad x
3fe0 : ea                       nop
3fe1 : ea                       nop
3fe2 :                  trap_ind
3fe2 : ea                       nop
3fe3 : ea                       nop
                                trap            ;near miss indexed indirect jump
3fe4 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
                        
                        ;trap in case of unexpected IRQ, NMI, BRK, RESET
3fe7 :                  nmi_trap
                                trap            ;check stack for conditions at NMI
3fe7 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
3fea :                  res_trap
                                trap            ;unexpected RESET
3fea : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
3fed :                  irq_trap
3fed : 08                       php             ;save decimal flag
3fee : ba                       tsx             ;test break on stack
3fef : bd0201                   lda $102,x
3ff2 : 2910                     and #break
                                trap_eq         ;check stack for conditions at IRQ
3ff4 : d003            >        bne skip2857
                       >        trap           ;failed equal (zero)
3ff6 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ff9 :                 >skip2857
                        
                            if ROM_vectors = 1
                                pla             ;test decimal mode cleared
                                and #decmode
                                trap_ne         ;decimal mode not cleared after BRK
                                plp             ;pop saved flags
                                pla             ;return address low
                                cmp #lo(brk_ret)
                                trap_ne         ;unexpected BRK
                                pla             ;return address high
                                cmp #hi(brk_ret)
                                trap_ne         ;unexpected BRK
                                jmp brk_ret
                            else
                                trap_ne         ;check stack for conditions at BRK
3ff9 : f003            >        beq skip2859
                       >        trap            ;failed not equal (non zero)
3ffb : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                       >
3ffe :                 >skip2859
                        
                            endif
                                
                            if report = 1
                                include "report.i65"
                        ;**** report 6502 funtional test errors to standard I/O ****
                        ;
                        ;this include file is part of the 6502 functional tests
                        ;it is used when you configure report = 1 in the tests
                        ;
                        ;to adopt the standard output vectors of your test environment
                        ;you must modify the rchar and rget subroutines in this include
                        ;
                        ;I/O hardware may have to be initialized in report_init
                        
                        ;print message macro - \1 = message location
                        rprt    macro
                                ldx #0
                                lda \1
                        loop\?
                                jsr rchar
                                inx
                                lda \1,x
                                bne loop\?
                                endm
                        
                        ;initialize I/O as required (example: configure & enable ACIA)
3ffe :                  report_init
                                ;nothing to initialize
                                rprt rmsg_start
3ffe : a200            >        ldx #0
4000 : add440          >        lda rmsg_start
4003 :                 >loop2861
4003 : 20d040          >        jsr rchar
4006 : e8              >        inx
4007 : bdd440          >        lda rmsg_start,x
400a : d0f7            >        bne loop2861
                        
400c : 60                       rts
                                
                        ;show stack (with saved registers), zeropage and absolute memory workspace
                        ;after an error was trapped in the test program
400d :                  report_error
                        ;save registers
400d : 08                       php
400e : 48                       pha
400f : 8a                       txa
4010 : 48                       pha
4011 : 98                       tya
4012 : 48                       pha
4013 : d8                       cld
                        ;show stack with index to registers at error
                                rprt rmsg_stack
4014 : a200            >        ldx #0
4016 : ade840          >        lda rmsg_stack
4019 :                 >loop2862
4019 : 20d040          >        jsr rchar
401c : e8              >        inx
401d : bde840          >        lda rmsg_stack,x
4020 : d0f7            >        bne loop2862
                        
4022 : ba                       tsx
4023 : e8                       inx
4024 : a901                     lda #1      ;address high
4026 : 20bc40                   jsr rhex
4029 : 8a                       txa         ;address low
402a : 20bc40                   jsr rhex
402d : 20b840           rstack  jsr rspace
4030 : bd0001                   lda $100,x  ;stack data
4033 : 20bc40                   jsr rhex
4036 : e8                       inx
4037 : d0f4                     bne rstack
4039 : 20af40                   jsr rcrlf   ;new line
                        ;show zero page workspace
403c : a900                     lda #0
403e : 20bc40                   jsr rhex
4041 : a910                     lda #zpt
4043 : aa                       tax
4044 : 20bc40                   jsr rhex
4047 : 20b840           rzp     jsr rspace
404a : b500                     lda 0,x
404c : 20bc40                   jsr rhex
404f : e8                       inx
4050 : e017                     cpx #zp_bss
4052 : d0f3                     bne rzp
4054 : 20af40                   jsr rcrlf
                        ;show absolute workspace
4057 : a902                     lda #hi(data_segment)
4059 : 20bc40                   jsr rhex
405c : a900                     lda #lo(data_segment)
405e : 20bc40                   jsr rhex
4061 : a200                     ldx #0
4063 : 20b840           rabs    jsr rspace
4066 : bd0002                   lda data_segment,x
4069 : 20bc40                   jsr rhex
406c : e8                       inx
406d : e00a                     cpx #(data_bss-data_segment)
406f : d0f2                     bne rabs
                        ;ask to continue
                                rprt rmsg_cont
4071 : a200            >        ldx #0
4073 : ad0441          >        lda rmsg_cont
4076 :                 >loop2863
4076 : 20d040          >        jsr rchar
4079 : e8              >        inx
407a : bd0441          >        lda rmsg_cont,x
407d : d0f7            >        bne loop2863
                        
407f : 20a340           rerr1   jsr rget
4082 : c943                     cmp #'C'
4084 : d0f9                     bne rerr1        
                        ;restore registers
4086 : 68                       pla
4087 : a8                       tay
4088 : 68                       pla
4089 : aa                       tax
408a : 68                       pla 
408b : 28                       plp
408c : 60                       rts   
                        
                        ;show test has ended, ask to repeat
408d :                  report_success
                            if rep_int = 1
                                rprt rmsg_priority
                                lda data_segment    ;show interrupt sequence
                                jsr rhex
                                jsr rspace
                                lda data_segment+1
                                jsr rhex
                                jsr rspace
                                lda data_segment+2
                                jsr rhex
                            endif
                                rprt rmsg_success
408d : a200            >        ldx #0
408f : ad1c41          >        lda rmsg_success
4092 :                 >loop2864
4092 : 20d040          >        jsr rchar
4095 : e8              >        inx
4096 : bd1c41          >        lda rmsg_success,x
4099 : d0f7            >        bne loop2864
                        
409b : 20a340           rsuc1   jsr rget
409e : c952                     cmp #'R'
40a0 : d0f9                     bne rsuc1        
40a2 : 60                       rts
                        
                        ;input subroutine
                        ;get a character from standard input 
                        ;adjust according to the needs in your test environment
40a3 :                  rget                ;get character in A
                        ;rget1
                        ;        lda $bff1   ;wait RDRF
                        ;        and #8
                        ;        beq rget1
                        ;not a real ACIA - so RDRF is not checked
40a3 : adf0bf                   lda $bff0   ;read acia rx reg
                        ;the load can be replaced by a call to a kernal routine
                        ;        jsr $ffcf   ;example: CHRIN for a C64
40a6 : c961                     cmp #'a'    ;lower case
40a8 : 9002                     bcc rget1
40aa : 295f                     and #$5f    ;convert to upper case
40ac : a943             rget1   lda #'C'
40ae : 60               		rts
                        
                        ;output subroutines
40af : a90a             rcrlf   lda #10
40b1 : 20d040                   jsr rchar
40b4 : a90d                     lda #13
40b6 : d018                     bne rchar
                        
40b8 : a920             rspace  lda #' '
40ba : d014                     bne rchar
                                
40bc : 48               rhex    pha         ;report hex byte in A
40bd : 4a                       lsr a       ;high nibble first
40be : 4a                       lsr a
40bf : 4a                       lsr a
40c0 : 4a                       lsr a
40c1 : 20c740                   jsr rnib
40c4 : 68                       pla         ;now low nibble
40c5 : 290f                     and #$f
                        
40c7 : 18               rnib    clc         ;report nibble in A
40c8 : 6930                     adc #'0'    ;make printable 0-9
40ca : c93a                     cmp #'9'+1
40cc : 9002                     bcc rchar
40ce : 6906                     adc #6      ;make printable A-F
                        
                        ;send a character to standard output 
                        ;adjust according to the needs in your test environment
                        ;register X needs to be preserved!
40d0 :                  rchar               ;report character in A
                        ;        pha         ;wait TDRF
                        ;rchar1  lda $bff1
                        ;        and #$10
                        ;        beq rchar1
                        ;        pla
                        ;not a real ACIA - so TDRF is not checked
40d0 : 8d00ef                   sta $ef00   ;write acia tx reg
                        ;the store can be replaced by a call to a kernal routine
                        ;        jsr $ffd2   ;example: CHROUT for a C64
40d3 : 60                       rts
                        
40d4 :                  rmsg_start
40d4 : 0a0d5374617274..         db  10,13,"Started testing",10,13,0
40e8 :                  rmsg_stack
40e8 : 0a0d7265677320..         db  10,13,"regs Y  X  A  PS PCLPCH",10,13,0
4104 :                  rmsg_cont
4104 : 0a0d7072657373..         db  10,13,"press C to continue",10,13,0
411c :                  rmsg_success
411c : 0a0d416c6c2074..         db  10,13,"All tests completed, press R to repeat",10,13,0
                            if rep_int = 1
                        rmsg_priority
                                db  10,13,"interrupt sequence (NMI IRQ BRK) ",0
                            endif
                           
                            endif
                                    
                        ;copy of data to initialize BSS segment
                            if load_data_direct != 1
4147 :                  zp_init
4147 : c3824100         zp1_    db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
414b : 7f               zp7f_   db  $7f             ;test pattern for compare  
                        ;logical zeropage operands
414c : 001f7180         zpOR_   db  0,$1f,$71,$80   ;test pattern for OR
4150 : 0fff7f80         zpAN_   db  $0f,$ff,$7f,$80 ;test pattern for AND
4154 : ff0f8f8f         zpEO_   db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;indirect addressing pointers
4158 : 0a02             ind1_   dw  abs1            ;indirect pointer to pattern in absolute memory
415a : 0b02                     dw  abs1+1
415c : 0c02                     dw  abs1+2
415e : 0d02                     dw  abs1+3
4160 : 0e02                     dw  abs7f
4162 : 1201             inw1_   dw  abs1-$f8        ;indirect pointer for wrap-test pattern
4164 : 0502             indt_   dw  abst            ;indirect pointer to store area in absolute memory
4166 : 0602                     dw  abst+1
4168 : 0702                     dw  abst+2
416a : 0802                     dw  abst+3
416c : 0d01             inwt_   dw  abst-$f8        ;indirect pointer for wrap-test store
416e : 4102             indAN_  dw  absAN           ;indirect pointer to AND pattern in absolute memory
4170 : 4202                     dw  absAN+1
4172 : 4302                     dw  absAN+2
4174 : 4402                     dw  absAN+3
4176 : 4502             indEO_  dw  absEO           ;indirect pointer to EOR pattern in absolute memory
4178 : 4602                     dw  absEO+1
417a : 4702                     dw  absEO+2
417c : 4802                     dw  absEO+3
417e : 3d02             indOR_  dw  absOR           ;indirect pointer to OR pattern in absolute memory
4180 : 3e02                     dw  absOR+1
4182 : 3f02                     dw  absOR+2
4184 : 4002                     dw  absOR+3
                        ;add/subtract indirect pointers
4186 : 0502             adi2_   dw  ada2            ;indirect pointer to operand 2 in absolute memory
4188 : 0602             sbi2_   dw  sba2            ;indirect pointer to complemented operand 2 (SBC)
418a : 0601             adiy2_  dw  ada2-$ff        ;with offset for indirect indexed
418c : 0701             sbiy2_  dw  sba2-$ff
418e :                  zp_end
                            if (zp_end - zp_init) != (zp_bss_end - zp_bss)   
                                ;force assembler error if size is different   
                                ERROR ERROR ERROR   ;mismatch between bss and zeropage data
                            endif 
418e :                  data_init
418e : c3824100         abs1_   db  $c3,$82,$41,0   ;test patterns for LDx BIT ROL ROR ASL LSR
4192 : 7f               abs7f_  db  $7f             ;test pattern for compare
                        ;loads
4193 : 80800002         fLDx_   db  fn,fn,0,fz      ;expected flags for load
                        ;shifts
4197 :                  rASL_                       ;expected result ASL & ROL -carry  
4197 : 86048200         rROL_   db  $86,$04,$82,0   ; "
419b : 87058301         rROLc_  db  $87,$05,$83,1   ;expected result ROL +carry
419f :                  rLSR_                       ;expected result LSR & ROR -carry
419f : 61412000         rROR_   db  $61,$41,$20,0   ; "
41a3 : e1c1a080         rRORc_  db  $e1,$c1,$a0,$80 ;expected result ROR +carry
41a7 :                  fASL_                       ;expected flags for shifts
41a7 : 81018002         fROL_   db  fnc,fc,fn,fz    ;no carry in
41ab : 81018000         fROLc_  db  fnc,fc,fn,0     ;carry in
41af :                  fLSR_
41af : 01000102         fROR_   db  fc,0,fc,fz      ;no carry in
41b3 : 81808180         fRORc_  db  fnc,fn,fnc,fn   ;carry in
                        ;increments (decrements)
41b7 : 7f80ff0001       rINC_   db  $7f,$80,$ff,0,1 ;expected result for INC/DEC
41bc : 0080800200       fINC_   db  0,fn,fn,fz,0    ;expected flags for INC/DEC
                        ;logical memory operand
41c1 : 001f7180         absOR_  db  0,$1f,$71,$80   ;test pattern for OR
41c5 : 0fff7f80         absAN_  db  $0f,$ff,$7f,$80 ;test pattern for AND
41c9 : ff0f8f8f         absEO_  db  $ff,$0f,$8f,$8f ;test pattern for EOR
                        ;logical accu operand
41cd : 00f11f00         absORa_ db  0,$f1,$1f,0     ;test pattern for OR
41d1 : f0ffffff         absANa_ db  $f0,$ff,$ff,$ff ;test pattern for AND
41d5 : fff0f00f         absEOa_ db  $ff,$f0,$f0,$0f ;test pattern for EOR
                        ;logical results
41d9 : 00ff7f80         absrlo_ db  0,$ff,$7f,$80
41dd : 02800080         absflo_ db  fz,fn,0,fn
41e1 :                  data_end
                            if (data_end - data_init) != (data_bss_end - data_bss)
                                ;force assembler error if size is different   
                                ERROR ERROR ERROR   ;mismatch between bss and data
                            endif 
                        
41e1 :                  vec_init
41e1 : e73f                     dw  nmi_trap
41e3 : ea3f                     dw  res_trap
41e5 : ed3f                     dw  irq_trap
fffa =                  vec_bss equ $fffa
                            endif                   ;end of RAM init data
                            
                        ; code at end of image due to the need to add blank space as required
                            if ($ff & (ji_ret - * - 2)) < ($ff & (jxi_ret - * - 2))
                        ; JMP (abs) when $xxff and $xx00 are from same page
                                ds  lo(ji_ret - * - 2)
                                nop
                                nop
                        ji_px   nop             ;low address byte matched with ji_ret 
                                nop
                                trap            ;jmp indirect page cross bug
                        
                        ; JMP (abs,x) when $xxff and $xx00 are from same page
                                ds  lo(jxi_ret - * - 2)
                                nop
                                nop
                        jxi_px  nop             ;low address byte matched with jxi_ret 
                                nop
                                trap            ;jmp indexed indirect page cross bug
                            else
                        ; JMP (abs,x) when $xxff and $xx00 are from same page
41e7 : 00000000000000..         ds  lo(jxi_ret - * - 2)
4217 : ea                       nop
4218 : ea                       nop
4219 : ea               jxi_px  nop             ;low address byte matched with jxi_ret 
421a : ea                       nop
                                trap            ;jmp indexed indirect page cross bug
421b : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
                        
                        ; JMP (abs) when $xxff and $xx00 are from same page
421e : 00000000000000..         ds  lo(ji_ret - * - 2)
4293 : ea                       nop
4294 : ea                       nop
4295 : ea               ji_px   nop             ;low address byte matched with ji_ret 
4296 : ea                       nop
                                trap            ;jmp indirect page cross bug
4297 : 8d02ef          >        sta $ef02
                       >        ;jsr report_error
                        
                            endif
                            
                            if (load_data_direct = 1) & (ROM_vectors = 1)  
                                org $fffa       ;vectors
                                dw  nmi_trap
                                dw  res_trap
                                dw  irq_trap
                            endif
                        
4295 =                          end start
                                    
No errors in pass 2.
Wrote binary from address $1000 through $4299.
Total size 12954 bytes.
Program start address is at $1000 (4096).
